paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 104],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 104],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 105, 1, 64],"float16"), Tensor([2, 105, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 105],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 106, 1, 64],"float16"), Tensor([2, 106, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 106],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 36],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 37],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 37],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 38],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 38],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 39],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 40],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 40],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 41],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 41],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 42],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 42],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 43],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 43],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 44],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 44],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 45],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 45],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 46],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 46],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 47],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 48],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 48],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 49],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 49],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 50],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 50],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 51],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 52],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 52],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 53],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 53],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 54],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 54],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 55],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 55],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 56],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 56],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 57],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 57],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 58],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 58],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 59],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 59],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 60],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 60],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 61],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 61],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 62],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 62],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 63],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 63],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 64],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 64],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 65],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 65],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 66],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 66],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 67],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 67],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 68],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 68],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 69],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 69],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 70],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 70],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 71],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 71],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 72],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 72],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 73],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 73],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 74],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 74],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 75],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 75],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 76],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 76],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 77],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 77],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 78],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 78],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 79],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 79],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 80],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 80],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 81],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 81],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 82],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 82],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 83],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 83],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 84],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 84],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 85],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 85],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 86],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 86],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 87],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 87],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 88],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 88],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 89],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 89],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 90],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 90],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 91],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 91],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 92],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 92],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 93],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 93],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 94],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 94],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 95],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 95],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 96],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 96],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 97],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 97],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 98],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 98],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 99],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 99],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 100, 4, 128],"float16"), Tensor([2, 100, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 101, 4, 128],"float16"), Tensor([2, 101, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 102, 4, 128],"float16"), Tensor([2, 102, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 103, 4, 128],"float16"), Tensor([2, 103, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 104, 4, 128],"float16"), Tensor([2, 104, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 104],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 40],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 41],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 42, 4, 128],"float16"), Tensor([2, 42, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 42],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 43, 4, 128],"float16"), Tensor([2, 43, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 43],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 44, 4, 128],"float16"), Tensor([2, 44, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 44],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 45, 4, 128],"float16"), Tensor([2, 45, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 45],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 46, 4, 128],"float16"), Tensor([2, 46, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 46],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 48, 4, 128],"float16"), Tensor([2, 48, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 48],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 49, 4, 128],"float16"), Tensor([2, 49, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 49],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 50, 4, 128],"float16"), Tensor([2, 50, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 50],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 52, 4, 128],"float16"), Tensor([2, 52, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 52],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 53],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 54],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 55, 4, 128],"float16"), Tensor([2, 55, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 55],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 56, 4, 128],"float16"), Tensor([2, 56, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 56],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 57],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 58, 4, 128],"float16"), Tensor([2, 58, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 58],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 59, 4, 128],"float16"), Tensor([2, 59, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 59],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 60, 4, 128],"float16"), Tensor([2, 60, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 60],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 61, 4, 128],"float16"), Tensor([2, 61, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 61],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 62, 4, 128],"float16"), Tensor([2, 62, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 62],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 63, 4, 128],"float16"), Tensor([2, 63, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 63],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 64, 4, 128],"float16"), Tensor([2, 64, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 64],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 65, 4, 128],"float16"), Tensor([2, 65, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 65],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 66, 4, 128],"float16"), Tensor([2, 66, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 66],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 67, 4, 128],"float16"), Tensor([2, 67, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 67],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 68, 4, 128],"float16"), Tensor([2, 68, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 68],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 69, 4, 128],"float16"), Tensor([2, 69, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 69],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 70, 4, 128],"float16"), Tensor([2, 70, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 70],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 71, 4, 128],"float16"), Tensor([2, 71, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 71],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 72, 4, 128],"float16"), Tensor([2, 72, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 72],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 73, 4, 128],"float16"), Tensor([2, 73, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 73],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 74, 4, 128],"float16"), Tensor([2, 74, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 74],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 75, 4, 128],"float16"), Tensor([2, 75, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 75],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 76, 4, 128],"float16"), Tensor([2, 76, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 76],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 77, 4, 128],"float16"), Tensor([2, 77, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 77],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 78, 4, 128],"float16"), Tensor([2, 78, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 78],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 79, 4, 128],"float16"), Tensor([2, 79, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 79],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 80, 4, 128],"float16"), Tensor([2, 80, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 80],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 81, 4, 128],"float16"), Tensor([2, 81, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 81],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 82, 4, 128],"float16"), Tensor([2, 82, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 82],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 83, 4, 128],"float16"), Tensor([2, 83, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 83],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 84, 4, 128],"float16"), Tensor([2, 84, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 84],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 85, 4, 128],"float16"), Tensor([2, 85, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 85],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 86, 4, 128],"float16"), Tensor([2, 86, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 86],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 87, 4, 128],"float16"), Tensor([2, 87, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 87],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 88, 4, 128],"float16"), Tensor([2, 88, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 88],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 89, 4, 128],"float16"), Tensor([2, 89, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 89],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 90, 4, 128],"float16"), Tensor([2, 90, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 90],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 91, 4, 128],"float16"), Tensor([2, 91, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 91],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 92, 4, 128],"float16"), Tensor([2, 92, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 92],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 93, 4, 128],"float16"), Tensor([2, 93, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 93],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 94, 4, 128],"float16"), Tensor([2, 94, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 94],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 95, 4, 128],"float16"), Tensor([2, 95, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 95],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 96, 4, 128],"float16"), Tensor([2, 96, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 96],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 97, 4, 128],"float16"), Tensor([2, 97, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 97],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 98, 4, 128],"float16"), Tensor([2, 98, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 98],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 99, 4, 128],"float16"), Tensor([2, 99, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 99],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 110, 8, 96],"float16"), Tensor([2, 110, 8, 96],"float16"), Tensor([2, 110, 8, 96],"float16"), attn_mask=Tensor([2, 1, 110, 110],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 111, 8, 96],"float16"), Tensor([2, 111, 8, 96],"float16"), Tensor([2, 111, 8, 96],"float16"), attn_mask=Tensor([2, 1, 111, 111],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 112, 8, 96],"float16"), Tensor([2, 112, 8, 96],"float16"), Tensor([2, 112, 8, 96],"float16"), attn_mask=Tensor([2, 1, 112, 112],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 35, 1, 64],"float16"), Tensor([2, 35, 1, 64],"float16"), Tensor([2, 35, 1, 64],"float16"), attn_mask=Tensor([2, 1, 35, 35],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 36, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), attn_mask=Tensor([2, 1, 36, 36],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), attn_mask=Tensor([2, 1, 37, 37],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 38, 38],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 38, 38],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 38, 4, 128],"float16"), Tensor([2, 38, 4, 128],"float16"), Tensor([2, 38, 4, 128],"float16"), attn_mask=Tensor([2, 1, 38, 38],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 39, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 39, 39],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 39, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), attn_mask=Tensor([2, 1, 39, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 40, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), attn_mask=Tensor([2, 1, 40, 40],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 41, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), attn_mask=Tensor([2, 1, 41, 41],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), attn_mask=Tensor([2, 1, 45, 45],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), attn_mask=Tensor([2, 1, 47, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 47, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), attn_mask=Tensor([2, 1, 47, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 50, 50],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 50, 50],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 51, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 51, 51],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 51, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), attn_mask=Tensor([2, 1, 51, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 52, 52],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 52, 52],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 53, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), attn_mask=Tensor([2, 1, 53, 53],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 54, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), attn_mask=Tensor([2, 1, 54, 54],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), attn_mask=Tensor([2, 1, 57, 57],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 57, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), attn_mask=Tensor([2, 1, 57, 57],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), attn_mask=Tensor([2, 1, 59, 59],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 74, 8, 96],"float16"), Tensor([2, 74, 8, 96],"float16"), Tensor([2, 74, 8, 96],"float16"), attn_mask=Tensor([2, 1, 74, 74],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 79, 8, 96],"float16"), Tensor([2, 79, 8, 96],"float16"), Tensor([2, 79, 8, 96],"float16"), attn_mask=Tensor([2, 1, 79, 79],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 80, 8, 96],"float16"), Tensor([2, 80, 8, 96],"float16"), Tensor([2, 80, 8, 96],"float16"), attn_mask=Tensor([2, 1, 80, 80],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 82, 8, 96],"float16"), Tensor([2, 82, 8, 96],"float16"), Tensor([2, 82, 8, 96],"float16"), attn_mask=Tensor([2, 1, 82, 82],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 91, 8, 96],"float16"), Tensor([2, 91, 8, 96],"float16"), Tensor([2, 91, 8, 96],"float16"), attn_mask=Tensor([2, 1, 91, 91],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 114, 1, 64],"float16"), Tensor([4, 114, 1, 64],"float16"), Tensor([4, 114, 1, 64],"float16"), attn_mask=Tensor([4, 1, 114, 114],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 115, 1, 64],"float16"), Tensor([4, 115, 1, 64],"float16"), Tensor([4, 115, 1, 64],"float16"), attn_mask=Tensor([4, 1, 115, 115],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 127, 1, 64],"float16"), Tensor([4, 127, 1, 64],"float16"), Tensor([4, 127, 1, 64],"float16"), attn_mask=Tensor([4, 1, 127, 127],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 132, 1, 64],"float16"), Tensor([4, 132, 1, 64],"float16"), Tensor([4, 132, 1, 64],"float16"), attn_mask=Tensor([4, 1, 132, 132],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 147, 1, 64],"float16"), Tensor([4, 147, 1, 64],"float16"), Tensor([4, 147, 1, 64],"float16"), attn_mask=Tensor([4, 1, 147, 147],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 148, 1, 64],"float16"), Tensor([4, 148, 1, 64],"float16"), Tensor([4, 148, 1, 64],"float16"), attn_mask=Tensor([4, 1, 148, 148],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 148, 8, 16],"float16"), Tensor([4, 148, 2, 16],"float16"), Tensor([4, 148, 2, 16],"float16"), attn_mask=Tensor([4, 1, 148, 148],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 152, 1, 64],"float16"), Tensor([4, 152, 1, 64],"float16"), Tensor([4, 152, 1, 64],"float16"), attn_mask=Tensor([4, 1, 152, 152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 156, 1, 64],"float16"), Tensor([4, 156, 1, 64],"float16"), Tensor([4, 156, 1, 64],"float16"), attn_mask=Tensor([4, 1, 156, 156],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 164, 8, 16],"float16"), Tensor([4, 164, 2, 16],"float16"), Tensor([4, 164, 2, 16],"float16"), attn_mask=Tensor([4, 1, 164, 164],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 172, 8, 16],"float16"), Tensor([4, 172, 2, 16],"float16"), Tensor([4, 172, 2, 16],"float16"), attn_mask=Tensor([4, 1, 172, 172],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 182, 1, 64],"float16"), Tensor([4, 182, 1, 64],"float16"), Tensor([4, 182, 1, 64],"float16"), attn_mask=Tensor([4, 1, 182, 182],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 198, 8, 16],"float16"), Tensor([4, 198, 2, 16],"float16"), Tensor([4, 198, 2, 16],"float16"), attn_mask=Tensor([4, 1, 198, 198],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 304, 8, 96],"float16"), Tensor([4, 304, 8, 96],"float16"), Tensor([4, 304, 8, 96],"float16"), attn_mask=Tensor([4, 1, 304, 304],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 346, 8, 96],"float16"), Tensor([4, 346, 8, 96],"float16"), Tensor([4, 346, 8, 96],"float16"), attn_mask=Tensor([4, 1, 346, 346],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 377, 8, 96],"float16"), Tensor([4, 377, 8, 96],"float16"), Tensor([4, 377, 8, 96],"float16"), attn_mask=Tensor([4, 1, 377, 377],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 396, 4, 96],"float16"), Tensor([4, 396, 4, 96],"float16"), Tensor([4, 396, 4, 96],"float16"), attn_mask=Tensor([4, 1, 396, 396],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 396, 8, 96],"float16"), Tensor([4, 396, 8, 96],"float16"), Tensor([4, 396, 8, 96],"float16"), attn_mask=Tensor([4, 1, 396, 396],"float16"), is_causal=True, )


grep: warning: GREP_OPTIONS is deprecated; please use an alias or script
2025-05-16 03:02:21.498209 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
W0516 03:02:27.641568 20206 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0516 03:02:27.642737 20206 gpu_resources.cc:164] device: 0, cuDNN Version: 8.8.
[not compare]  None tensor([[[[5.9605e-08]],

         [[-0.0000e+00]]]], dtype=torch.float16)
2025-05-16 03:02:28.862372 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 82974 / 131072 (63.3%)
Max absolute difference: 0.984375
Max relative difference: 279882.06
 x: array([[[[-3.046875e-01, -1.923828e-01,  3.320312e-01, ...,
          -2.636719e-01,  2.080078e-01, -2.968750e-01],
         [-3.046875e-01, -1.923828e-01,  3.320312e-01, ...,...
 y: array([[[[-2.246094e-01,  4.101562e-01, -1.396484e-01, ...,
          -1.894531e-01, -2.368164e-02, -1.525879e-02],
         [ 1.068115e-02,  3.750000e-01, -4.531250e-01, ...,...
2025-05-16 03:02:29.162029 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-2.0766e-04, -2.7180e-04, -2.4462e-04,  ..., -1.1772e-04,
           -5.5552e-05, -5.0211e-04],
          [-5.3120e-04, -3.8433e-04,  1.6499e-04,  ...,  1.9288e-04,
           -2.6965e-04,  5.8591e-05],
          [ 6.7055e-05,  1.4353e-04, -1.4031e-04,  ...,  2.2471e-04,
            2.4080e-05,  3.6597e-04],
          ...,
          [ 1.9026e-04,  4.3631e-05, -5.7280e-05,  ..., -3.2282e-04,
           -5.7459e-04, -3.3808e-04],
          [-7.3135e-05, -3.2663e-04,  9.4652e-05,  ..., -4.1652e-04,
            7.9632e-05,  1.0097e-04],
          [-2.2376e-04, -1.5450e-04,  1.1504e-05,  ..., -1.2696e-04,
            3.8433e-04,  5.8353e-05]]]], dtype=torch.float16)
2025-05-16 03:02:29.581290 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 11062 / 131072 (8.44%)
Max absolute difference: 0.4968
Max relative difference: 13160.
 x: array([[[[-0.005863,  0.01393 ,  0.038   , ..., -0.04294 ,  0.01125 ,
          -0.00708 ]],
...
 y: array([[[[-1.3745e-01, -4.3311e-01, -3.6426e-01, ...,  1.9641e-01,
           3.4937e-01,  3.4058e-01]],
...
2025-05-16 03:02:29.999369 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.9598e-04,  1.1358e-03,  9.9945e-04,  ...,  2.3842e-07,
           -1.0386e-03,  7.3242e-04],
          [ 2.2678e-03, -1.5907e-03, -5.9032e-04,  ..., -1.2178e-03,
           -8.2016e-04, -8.5163e-04],
          [ 2.3508e-04,  7.0906e-04, -7.5626e-04,  ...,  1.0371e-04,
            4.2224e-04,  7.5531e-04],
          ...,
          [ 1.7748e-03, -6.3753e-04, -5.2094e-05,  ..., -4.0126e-04,
            6.9904e-04,  4.4274e-04],
          [ 1.4267e-03, -1.7488e-04,  6.9141e-04,  ...,  3.7813e-04,
           -1.2932e-03, -6.0940e-04],
          [-2.6822e-04, -1.0242e-03, -1.1206e-03,  ...,  2.1148e-04,
            4.2415e-04, -5.1737e-04]]]], dtype=torch.float16)
2025-05-16 03:02:31.112270 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
[not compare]  None tensor([[[[ 4.5848e-04, -5.5504e-04,  1.4925e-03,  ..., -4.3011e-04,
            4.6682e-04,  1.1575e-04],
          [-1.3566e-04,  2.6631e-04, -3.3593e-04,  ..., -1.2779e-03,
            1.9419e-04,  1.4791e-03],
          [ 2.7442e-04,  7.6675e-04,  1.3590e-03,  ...,  1.1654e-03,
           -6.7568e-04,  2.8551e-05],
          ...,
          [-9.0301e-05,  1.9026e-04,  4.0579e-04,  ..., -7.0763e-04,
            6.6948e-04, -1.1768e-03],
          [-8.0538e-04, -4.7922e-04, -4.9353e-04,  ..., -6.5565e-05,
            3.2711e-04,  1.2703e-03],
          [-8.6403e-04,  8.2159e-04,  4.0984e-04,  ..., -9.0027e-04,
           -5.3585e-05, -4.0054e-04]]]], dtype=torch.float16)
2025-05-16 03:02:32.314436 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 145365 / 262144 (55.5%)
Max absolute difference: 0.4875
Max relative difference: inf
 x: array([[[[-0.006615,  0.00999 , -0.0184  , ...,  0.02477 ,  0.0082  ,
           0.03494 ],
         [-0.00464 ,  0.005714, -0.01917 , ...,  0.0259  ,  0.00606 ,...
 y: array([[[[ 2.8540e-01, -4.6094e-01,  1.3525e-01, ..., -4.2773e-01,
           4.3311e-01, -3.1104e-01],
         [ 2.8296e-01, -7.7209e-02,  1.6968e-02, ...,  4.3408e-01,...
2025-05-16 03:02:32.644695 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 137071 / 1572864 (8.71%)
Max absolute difference: 0.551
Max relative difference: inf
 x: array([[[[-1.4244e-02,  6.6910e-03,  3.3325e-02, ...,  3.0167e-02,
          -2.2018e-02, -3.8147e-02],
         [ 3.5675e-02,  6.3171e-02, -2.4994e-02, ...,  2.2385e-02,...
 y: array([[[[ 2.1790e-01,  3.4485e-02, -1.0712e-01, ..., -2.1790e-01,
           5.2521e-02,  3.6353e-01],
         [ 6.8115e-02,  2.7173e-01,  3.8965e-01, ...,  3.5547e-01,...
2025-05-16 03:02:33.290052 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.6855e-03,  4.8790e-03, -3.1686e-04, -1.0595e-03, -2.2049e-02,
            1.3933e-03,  7.5989e-03, -3.5019e-03,  8.2779e-03,  3.9148e-04,
           -2.2717e-03,  1.3145e-02,  2.8076e-03, -8.6823e-03,  2.0275e-03,
            8.0643e-03,  3.0346e-03,  7.6151e-04,  1.0056e-02, -6.0749e-04,
           -2.0035e-02,  3.0346e-03, -1.4057e-03,  1.2230e-02,  3.6774e-03,
            8.5878e-04, -1.2579e-03, -4.8523e-03, -2.3590e-02,  2.1362e-03,
            6.4087e-04, -1.6136e-03,  5.0125e-03, -2.3251e-03, -2.2638e-04,
           -4.4518e-03,  3.7098e-03,  6.8550e-03, -6.8130e-03,  2.1420e-03,
            6.4373e-04, -1.1131e-02,  9.9869e-03, -5.3406e-03,  1.2375e-02,
           -5.5466e-03,  9.5825e-03,  2.1839e-03,  1.4153e-02, -4.6997e-03,
           -1.7977e-03, -1.5402e-03,  2.8610e-04,  4.1656e-03, -4.5815e-03,
           -7.5989e-03, -1.0315e-02, -1.2217e-03,  1.4706e-03, -4.4441e-03,
            3.3436e-03,  1.9577e-02,  8.2245e-03,  1.3819e-03, -1.3428e-03,
            1.1238e-02,  3.7456e-04, -1.4639e-03,  9.8190e-03, -2.5201e-04,
           -5.9395e-03, -4.0741e-03,  2.4128e-03, -3.5858e-03, -1.5574e-03,
           -4.6883e-03, -8.0948e-03, -1.2833e-02,  7.4625e-04,  2.0599e-03,
           -1.0109e-02, -3.8280e-03, -1.4519e-02, -7.5874e-03,  5.6190e-03,
            2.2552e-02, -5.2986e-03,  6.5079e-03, -5.8517e-03, -6.2561e-03,
            3.5572e-03, -4.4403e-03,  2.5272e-03,  3.7613e-03,  4.4174e-03,
            4.2725e-03, -5.1880e-04, -8.8577e-03,  2.6264e-03,  4.4785e-03]]],


        [[[ 1.4145e-02,  5.6114e-03,  4.9095e-03, -1.1047e-02, -8.2321e-03,
           -2.7523e-03, -7.2784e-03,  3.3302e-03,  2.1229e-03, -1.2264e-03,
            1.9407e-03, -1.3714e-03,  5.2392e-05,  6.1150e-03,  4.2610e-03,
            8.2855e-03,  6.8665e-03,  6.3438e-03, -8.4400e-04, -4.8637e-03,
            1.0979e-02, -1.5268e-03, -4.4899e-03, -1.0132e-02,  2.3041e-03,
            4.0398e-03, -7.5378e-03,  1.7986e-03,  5.3444e-03,  3.5133e-03,
           -1.5305e-02,  5.3902e-03,  4.3755e-03, -1.4229e-02, -1.1589e-02,
            5.7793e-03, -5.5542e-03, -1.5068e-02,  3.0022e-03, -3.4332e-03,
            6.8665e-03,  1.3618e-03,  3.9864e-03,  1.0147e-02,  6.1989e-03,
           -1.0391e-02, -2.1801e-03, -8.0948e-03, -8.8453e-05, -2.1324e-03,
            7.0000e-04, -9.2697e-03,  7.7019e-03, -4.0474e-03,  4.1389e-04,
           -7.4387e-03,  8.3618e-03, -9.3031e-04,  2.3727e-03, -3.1834e-03,
            4.1795e-04, -3.0689e-03,  1.2970e-02, -4.1466e-03, -1.8143e-02,
           -2.7809e-03, -1.2283e-02,  3.1261e-03,  5.7888e-04, -9.6130e-04,
           -3.2463e-03, -1.0994e-02,  1.7441e-02, -2.4681e-03,  5.9052e-03,
            5.1041e-03,  1.3313e-03,  2.7108e-04,  9.7122e-03,  5.2528e-03,
            1.4229e-02, -6.3782e-03,  1.0422e-02, -3.7727e-03, -1.2560e-03,
           -9.6054e-03,  5.0926e-03,  1.4587e-02,  1.4334e-03, -4.8332e-03,
           -1.3819e-03,  1.6460e-03, -2.4681e-03, -7.4120e-03,  8.1301e-04,
           -4.2267e-03,  8.9645e-03,  2.0771e-03, -1.3113e-03, -5.0316e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:33.554474 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 5.9662e-03,  2.0618e-03,  4.4365e-03, -2.8667e-03,  1.0738e-03,
           -1.8272e-03,  5.7793e-03, -5.1956e-03,  2.0599e-03, -2.6550e-03,
            1.3494e-04,  1.8127e-02,  5.5580e-03, -1.1826e-02, -1.8341e-02,
           -1.8320e-03, -9.9277e-04, -1.0443e-03, -4.1504e-03, -5.9433e-03,
           -3.3264e-03, -8.8882e-03, -7.5769e-04,  8.0032e-03,  5.4264e-04,
            9.9030e-03,  9.3384e-03,  6.8321e-03,  7.3738e-03, -1.1330e-02,
            8.7309e-04,  9.4833e-03, -3.4161e-03, -3.3073e-03, -3.8123e-04,
            1.6747e-03, -9.2697e-03, -4.8637e-03,  1.4664e-02, -5.7983e-03,
           -1.1383e-02,  1.5884e-02,  8.9874e-03, -7.0610e-03,  3.3760e-03,
            6.6948e-04,  1.1116e-02, -8.4381e-03,  8.5907e-03, -6.9885e-03,
           -8.0948e-03,  1.5884e-02, -8.9417e-03,  3.9444e-03, -1.8005e-03,
            2.5215e-03, -4.5738e-03, -7.2098e-03,  6.4850e-03, -1.1301e-03,
            2.4700e-03,  6.6147e-03,  2.1458e-03, -9.9945e-04, -1.4048e-03,
           -3.7613e-03, -7.4387e-04, -7.2098e-03,  5.2977e-04, -2.2049e-02,
            2.5291e-03, -7.3576e-04, -9.4700e-04,  5.0468e-03, -1.3657e-02,
           -7.6628e-04,  5.2643e-03,  2.9449e-03, -3.9291e-03, -1.4000e-03,
            3.2234e-03,  1.5945e-02,  7.6628e-04,  2.0027e-03, -2.6779e-03,
            4.4632e-03,  1.5421e-03,  3.7098e-03, -1.3222e-02,  2.2354e-03,
            5.7602e-03,  3.8300e-03,  1.4503e-02, -6.3744e-03, -1.7731e-02,
            5.4626e-03,  6.7329e-03,  6.9857e-04, -8.5144e-03, -9.9411e-03]]],


        [[[ 3.7937e-03,  4.6654e-03,  8.7051e-03,  9.0218e-04, -1.5182e-02,
           -6.5079e-03, -9.8724e-03,  7.0152e-03, -3.0351e-04, -3.3417e-03,
            7.2718e-04, -3.0231e-03,  8.2169e-03, -4.6806e-03, -2.4719e-03,
            1.9264e-04, -7.0343e-03, -3.5534e-03,  4.0650e-04,  4.9591e-03,
           -2.6302e-03,  2.0943e-03, -1.2718e-02,  7.5188e-03,  2.4357e-03,
           -3.4943e-03, -2.3460e-03, -9.5596e-03, -5.6982e-04, -1.1116e-04,
            4.9133e-03, -1.3100e-02,  1.6499e-03,  4.7188e-03, -2.7237e-03,
            6.9122e-03, -1.5841e-03,  5.5771e-03, -3.2482e-03,  9.7122e-03,
           -1.0786e-03,  9.0027e-03,  5.1384e-03, -4.4518e-03,  6.8398e-03,
           -4.6959e-03, -9.6130e-03,  1.0727e-02,  4.0779e-03,  2.3613e-03,
            3.2635e-03, -2.7294e-03,  4.6670e-05,  4.0359e-03,  4.1847e-03,
            1.9207e-03,  1.4639e-03, -6.7711e-03,  1.2810e-02, -3.0632e-03,
            1.6800e-02, -1.4290e-02, -8.5526e-03,  9.4223e-03, -1.2693e-03,
            7.7200e-04,  6.6223e-03,  2.9049e-03, -4.0321e-03, -1.2222e-02,
            8.9493e-03, -2.6665e-03, -1.1932e-02, -3.0346e-03,  6.5117e-03,
            3.1223e-03, -2.5692e-03, -1.1276e-02, -5.8289e-03, -3.4943e-03,
            9.1600e-04, -5.2223e-03, -1.1377e-03,  6.9847e-03,  2.5005e-03,
            1.5271e-04,  4.4560e-04, -8.0643e-03, -5.4436e-03,  7.0915e-03,
            4.7417e-03, -2.9163e-03, -5.0049e-03,  7.6790e-03,  8.2703e-03,
           -1.4900e-02,  1.6336e-03,  3.6888e-03,  2.3468e-02, -9.3842e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:33.812400 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 4.0054e-03, -7.4291e-04,  6.6452e-03, -4.2076e-03,  5.2757e-03,
            4.9744e-03, -2.1706e-03,  6.6948e-03,  5.0259e-04,  1.2535e-02,
            2.0218e-03, -1.8112e-02, -4.9973e-03,  8.3923e-03,  1.1559e-02,
           -6.2981e-03,  1.2863e-02, -2.6970e-03, -5.5361e-04, -1.9360e-04,
           -6.4354e-03, -8.6365e-03,  1.3695e-03,  6.0310e-03,  3.0861e-03,
            2.9736e-03,  7.6370e-03, -4.9667e-03,  1.8616e-03,  1.0918e-02,
           -7.0095e-04, -6.8588e-03, -5.7182e-03, -6.2675e-03, -8.3466e-03,
            4.6463e-03,  1.3399e-03,  9.9945e-03, -8.4686e-03,  1.2535e-02,
           -7.0457e-03,  2.6059e-04,  1.2903e-03,  8.0442e-04,  2.0409e-03,
           -4.0016e-03,  5.5885e-04,  9.4681e-03,  2.2545e-03, -9.9754e-04,
           -8.0299e-04, -3.4695e-03,  3.8414e-03,  4.9934e-03,  3.2310e-03,
            2.5010e-04, -4.3259e-03,  6.5148e-05, -7.5722e-03, -1.9951e-03,
           -2.3975e-03,  4.2648e-03, -2.6340e-03, -3.6640e-03, -1.1082e-03,
           -7.8888e-03, -1.5364e-03,  6.7215e-03,  2.7084e-03,  2.5940e-03,
           -3.2787e-03, -1.6985e-03,  3.4275e-03,  3.1166e-03, -4.0169e-03,
           -7.8735e-03, -6.4230e-04,  9.1028e-04, -1.8148e-03,  8.0948e-03,
            3.0193e-03, -8.0414e-03,  2.2221e-03, -1.9779e-03, -3.1357e-03,
           -3.5095e-03, -3.5801e-03, -6.5994e-03, -4.4785e-03, -5.3902e-03,
           -1.0223e-03,  7.7069e-05, -5.5885e-03,  4.6883e-03, -2.1398e-04,
           -2.6226e-03, -6.0425e-03,  4.6005e-03, -2.0838e-04,  4.7760e-03,
           -6.1989e-04]]],


        [[[-1.4030e-02,  2.6436e-03,  4.6997e-03, -4.1389e-04,  4.8218e-03,
            5.3749e-03, -1.6499e-04,  2.8667e-03, -1.1398e-02,  3.3894e-03,
            2.5368e-04, -6.2752e-04, -1.1208e-02,  5.1498e-04,  4.6921e-03,
            1.0017e-02,  2.7776e-04,  1.2627e-02, -9.6130e-03,  2.7981e-03,
            3.7117e-03,  1.1978e-02, -6.0692e-03, -3.5400e-03,  3.8376e-03,
            1.2016e-03, -1.9424e-02,  2.0523e-03, -2.0790e-03, -2.2308e-02,
           -5.6686e-03, -9.0265e-04, -3.5095e-04,  5.4169e-03, -8.1100e-03,
            1.1833e-02,  6.7062e-03, -6.8932e-03,  2.0485e-03, -9.2621e-03,
            1.1034e-03, -4.2152e-04, -2.5845e-03, -1.9503e-03, -8.6517e-03,
           -1.4061e-02,  4.0474e-03,  2.1038e-03, -7.0381e-03, -6.4087e-03,
            2.2793e-03, -3.4332e-03,  7.0333e-04, -1.2451e-02,  4.8103e-03,
            8.8394e-05, -2.9354e-03, -1.2140e-03, -1.6298e-03,  4.9667e-03,
            3.7193e-03, -6.2447e-03, -3.7746e-03,  2.4834e-03, -5.1117e-03,
            1.8387e-02,  3.5629e-03,  6.3210e-03,  5.8746e-03,  3.8128e-03,
            3.0556e-03,  5.4970e-03,  6.2256e-03,  3.8261e-03, -6.5460e-03,
            1.8585e-02, -4.0197e-04,  2.0695e-03, -6.1188e-03,  4.0436e-04,
            1.2489e-02,  1.2260e-02, -2.5024e-03,  4.6310e-03, -6.4697e-03,
            1.1574e-02, -5.4512e-03, -2.8458e-03,  1.3771e-02, -2.2308e-02,
           -9.0256e-03, -8.9550e-04, -2.1648e-03,  1.2383e-02,  4.3716e-03,
            7.2784e-03,  1.1353e-02, -3.8433e-03, -1.4648e-02, -2.8820e-03,
           -1.7366e-03]]]], dtype=torch.float16)
2025-05-16 03:02:34.095743 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-7.5006e-04, -1.8433e-02, -8.0032e-03,  6.8550e-03, -1.1803e-02,
            4.8561e-03,  2.6250e-04,  1.1644e-03,  4.0779e-03, -6.6423e-04,
           -2.4471e-03, -1.1955e-02,  1.2138e-02, -4.2305e-03,  1.1009e-02,
           -7.2823e-03, -1.0948e-02,  3.5305e-03,  3.1147e-03,  6.7329e-03,
            3.6697e-03,  1.8387e-03,  6.1455e-03, -1.9417e-03,  3.9749e-03,
           -4.0321e-03, -1.3458e-02,  5.7602e-03,  1.6632e-03, -6.5994e-03,
           -3.5400e-03, -3.4499e-04, -1.0425e-04, -5.4512e-03, -1.0633e-03,
            2.0733e-03, -1.6909e-03, -3.1261e-03,  4.3182e-03,  1.0857e-02,
           -1.0157e-03, -1.0300e-02,  8.2731e-04, -5.1355e-04,  4.4708e-03,
           -4.0321e-03,  5.8413e-04, -8.1406e-03, -8.1558e-03,  3.8300e-03,
           -5.8937e-03,  5.5122e-04, -6.3324e-03,  7.4806e-03, -8.3542e-03,
            6.1951e-03, -7.5150e-03,  5.4626e-03,  2.3804e-03,  2.8152e-03,
            3.9940e-03,  1.6451e-03,  1.0185e-02, -1.2619e-02,  2.3575e-03,
            8.2245e-03,  8.0299e-04, -7.9041e-03,  7.6561e-03,  2.7771e-03,
           -3.6335e-03, -1.8740e-04, -8.4686e-03,  1.3474e-02,  2.8973e-03,
            7.1859e-04,  5.7173e-04,  1.6165e-03,  2.1496e-03,  3.4618e-03,
           -3.5706e-03, -1.5116e-03,  2.0294e-02,  1.4252e-02, -1.9760e-03,
           -1.1665e-02, -4.7073e-03,  6.7177e-03, -3.5725e-03,  7.2336e-04,
            3.8223e-03, -2.5272e-03, -4.3182e-03, -3.4857e-04,  1.9932e-03,
           -1.4248e-03,  2.3251e-03, -4.5955e-05, -7.3433e-05,  9.7885e-03,
           -4.4022e-03]]],


        [[[ 1.8326e-02, -9.3613e-03, -6.5765e-03, -1.6953e-02,  2.5024e-03,
           -8.7261e-04, -3.7265e-04, -5.9853e-03, -6.6452e-03, -1.6508e-03,
            1.0315e-02,  1.3649e-02,  3.6764e-04,  5.0049e-03, -3.5896e-03,
            2.1286e-03, -3.0766e-03, -8.4076e-03, -5.4626e-03, -1.8072e-03,
            3.6011e-03, -1.3145e-02,  2.1324e-03,  7.5684e-03,  2.9635e-04,
            1.1932e-02, -4.9667e-03, -3.3550e-03, -1.1654e-03,  4.1008e-03,
            5.5351e-03,  4.8180e-03,  2.4967e-03, -4.0321e-03, -6.7635e-03,
            3.2425e-03,  3.2482e-03,  4.1199e-03,  7.9870e-04, -9.0714e-03,
            5.5122e-03,  6.6900e-04, -3.0708e-03,  1.6251e-02, -1.9970e-03,
           -7.4768e-03,  1.2871e-02,  1.1063e-02, -7.4506e-06,  1.3985e-02,
           -1.6937e-03, -1.4099e-02, -7.7057e-03, -1.1620e-02, -5.1117e-03,
           -1.2848e-02, -4.9706e-03,  1.5083e-02,  5.8098e-03, -4.6387e-03,
            1.4651e-04, -5.9319e-03,  1.0843e-03,  1.7405e-03,  1.5030e-03,
            3.8338e-03,  5.6381e-03,  7.0572e-03, -1.0208e-02, -2.0462e-02,
            9.5062e-03, -6.6948e-03,  7.2556e-03, -2.9221e-03,  3.6774e-03,
           -6.8016e-03,  5.7297e-03, -4.5929e-03, -4.8409e-03,  2.4204e-03,
            4.3449e-03,  6.7406e-03, -4.6692e-03, -4.3869e-03, -8.2626e-03,
            1.0246e-02,  2.2106e-03,  1.7061e-03,  4.9744e-03,  1.3800e-03,
           -4.5586e-03, -2.9182e-03,  1.3763e-02, -3.5534e-03, -3.5019e-03,
           -7.8201e-03, -5.3329e-03,  8.2922e-04,  1.7557e-03,  3.7212e-03,
            7.1983e-03]]]], dtype=torch.float16)
2025-05-16 03:02:34.357556 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-4.8943e-03, -4.2076e-03,  9.1019e-03,  1.0826e-02, -1.0643e-03,
            2.7618e-03,  6.9923e-03, -1.5182e-03, -7.8125e-03,  6.8486e-05,
            8.6060e-03, -2.1400e-03, -1.6987e-05, -2.3222e-04, -5.1796e-05,
           -1.1694e-04,  6.1340e-03, -3.1433e-03, -1.6693e-02,  4.2839e-03,
            2.8725e-03,  5.3883e-04, -4.8676e-03,  6.5384e-03,  1.0414e-02,
            3.6430e-04,  1.1856e-02, -2.7733e-03,  2.4433e-03,  5.0049e-03,
            6.2599e-03,  2.5558e-03,  1.5450e-03, -2.4867e-04, -1.3199e-02,
            1.5726e-03, -1.1861e-05, -2.4490e-03, -2.4033e-03,  5.9967e-03,
           -7.5340e-04,  1.0939e-03, -1.5915e-02,  1.4374e-02, -6.5575e-03,
            3.0460e-03,  9.6798e-04,  6.9475e-04, -3.7804e-03, -3.8471e-03,
           -1.1894e-02, -4.0436e-03,  9.1124e-04,  1.9875e-03, -5.4479e-05,
            7.7972e-03,  2.7199e-03,  9.7466e-04, -4.3488e-03, -2.4071e-03,
           -8.1711e-03,  3.3989e-03,  9.0561e-03,  1.1528e-02, -7.9498e-03,
            2.2144e-03, -1.1040e-02, -2.9259e-03, -1.6956e-03, -1.3292e-05,
           -1.7853e-03, -4.7569e-03,  1.6663e-02, -6.5079e-03,  1.6613e-03,
            2.6302e-03,  8.9722e-03,  1.8358e-03,  5.4436e-03, -7.1068e-03,
           -8.1329e-03, -3.9635e-03, -1.1139e-03, -6.1264e-03,  2.6703e-03,
           -1.0338e-02,  6.2523e-03, -1.3077e-02, -4.5433e-03, -7.3547e-03,
            6.1874e-03,  9.0637e-03, -3.0003e-03, -9.0485e-03,  1.4717e-02,
            2.5501e-03,  3.1567e-03,  4.1733e-03,  5.1918e-03,  5.0783e-04,
           -4.2868e-04, -1.8616e-02]]],


        [[[ 7.5579e-04,  9.6512e-03, -2.9125e-03,  3.7060e-03,  1.1854e-03,
           -1.8463e-03,  1.2634e-02, -1.1959e-03, -4.8065e-03,  1.1663e-03,
            1.4801e-03,  4.7188e-03, -4.6616e-03, -7.5150e-04, -2.1420e-03,
           -1.0939e-03, -4.9667e-03, -2.2297e-03, -3.9406e-03, -2.4605e-03,
            2.7027e-03,  1.6699e-03, -1.2178e-03,  9.8705e-04,  1.7710e-03,
           -5.2834e-04,  1.2825e-02, -9.0599e-04, -1.3790e-03,  4.7340e-03,
           -2.1801e-03,  1.1349e-03,  4.4594e-03,  5.3596e-03,  5.0240e-03,
           -5.3215e-04, -2.6474e-03,  3.2959e-03, -1.4095e-03, -4.9019e-03,
           -2.9736e-03, -5.9128e-03, -3.0088e-04, -2.4033e-03, -5.3291e-03,
           -3.1166e-03, -2.8973e-03, -5.0278e-03, -3.4389e-03, -3.3207e-03,
           -2.8305e-03, -1.5688e-03, -2.2907e-03,  1.7433e-03,  4.8714e-03,
           -3.3741e-03,  1.0567e-03, -6.9771e-03,  7.8735e-03, -3.6564e-03,
           -6.1378e-03, -2.9945e-04,  3.7308e-03, -5.5237e-03,  1.3145e-02,
           -5.7602e-04,  2.4891e-03, -2.5272e-03,  3.3417e-03,  1.6308e-03,
           -2.7609e-04, -8.0719e-03,  6.8169e-03,  6.2065e-03,  2.9774e-03,
            1.3977e-02,  4.6253e-04,  2.4967e-03, -1.7080e-03,  5.0049e-03,
            1.7204e-03,  3.0155e-03, -2.0254e-04, -5.0774e-03, -1.5327e-02,
           -3.5782e-03, -5.5275e-03,  6.1607e-03,  7.5684e-03, -3.0193e-03,
            3.2635e-03, -2.6798e-04,  3.9711e-03,  1.6012e-03,  1.9932e-03,
           -1.2970e-02,  2.2869e-03,  2.3365e-03, -6.3438e-03,  4.0174e-05,
           -1.1692e-03, -8.3466e-03]]]], dtype=torch.float16)
2025-05-16 03:02:34.557964 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.9197e-03,  3.5019e-03,  2.2926e-03,  5.2032e-03,  5.8174e-03,
           -1.3542e-02, -3.7479e-03,  7.1287e-04,  1.2951e-03, -5.8403e-03,
            1.2291e-02, -5.1765e-03,  5.1613e-03,  7.6065e-03,  4.1428e-03,
           -9.5139e-03, -8.5983e-03, -8.9951e-03,  1.0384e-02, -1.2856e-02,
           -6.4888e-03, -2.0909e-04,  2.1744e-03, -1.1253e-02,  2.5940e-02,
           -6.3362e-03,  5.9090e-03,  1.5888e-03,  5.0583e-03,  5.8937e-03,
            4.1847e-03,  2.0695e-03, -6.8588e-03,  3.8509e-03,  5.9967e-03,
            9.6273e-04, -4.8923e-04, -1.4954e-03, -7.1526e-05,  6.6662e-04,
           -1.3939e-02, -3.4962e-03, -8.8120e-03,  2.1420e-03, -8.0338e-03,
            3.9711e-03, -1.0624e-03, -1.6479e-02,  4.6134e-04, -1.2924e-02,
            9.9258e-03,  2.0409e-03,  3.2825e-03,  1.4977e-02,  2.6155e-04,
            4.9400e-03, -1.0162e-02, -4.8141e-03, -1.6775e-03, -2.1103e-02,
           -2.7084e-03,  2.3365e-03, -1.5497e-03, -2.7752e-03, -1.1650e-02,
           -4.3449e-03,  1.1940e-03, -1.4410e-03, -7.1335e-04,  1.1742e-02,
           -6.7520e-03,  2.9011e-03, -7.8812e-03, -1.0735e-02, -7.3385e-04,
           -3.6736e-03,  7.6065e-03,  1.2962e-02, -1.4572e-03,  1.3016e-02,
            8.0490e-03,  5.9853e-03,  6.6910e-03,  5.0812e-03,  1.2383e-02,
           -1.1053e-03, -5.1403e-04,  1.4610e-02,  6.1750e-04,  2.1610e-03,
           -1.9211e-02, -1.6518e-03, -2.8877e-03, -5.5199e-03,  5.1270e-03,
            1.5762e-02,  5.1422e-03, -1.5278e-03,  4.6539e-03, -4.7836e-03,
            5.4979e-04, -3.8109e-03]]],


        [[[ 1.0628e-02,  4.7874e-03,  5.7487e-03, -6.4125e-03, -7.5264e-03,
           -3.1528e-03, -5.5313e-03, -6.3095e-03, -3.0975e-03, -4.9324e-03,
           -4.7994e-04,  1.7376e-03, -5.6696e-04,  1.8520e-03,  8.4381e-03,
            7.2050e-04, -1.3176e-02, -3.6640e-03, -1.3870e-02,  1.3466e-02,
           -6.6681e-03,  1.1909e-02, -1.3176e-02, -5.2872e-03, -4.3564e-03,
            3.7556e-03,  3.4523e-03, -1.2283e-03,  1.5404e-02,  4.0894e-03,
           -1.6661e-03, -5.6915e-03,  6.7329e-04,  1.5976e-02, -5.4789e-04,
           -6.3019e-03, -1.4162e-03, -3.4809e-04, -1.0139e-02, -5.8861e-03,
           -1.3189e-03, -8.0109e-03, -1.1988e-03,  1.2466e-02,  2.9068e-03,
           -1.1230e-02,  9.6207e-03,  6.5918e-03, -3.3531e-03,  2.1057e-03,
           -2.6360e-03,  8.9569e-03,  6.7291e-03, -4.0932e-03,  6.2599e-03,
           -9.6970e-03, -1.6630e-05,  2.7981e-03,  5.3635e-03,  4.3640e-03,
            3.5095e-03,  1.8101e-03,  4.4250e-03, -1.7052e-03, -4.6158e-03,
            1.1551e-02, -2.0373e-04,  1.6586e-02, -3.4542e-03,  7.8354e-03,
           -3.1643e-03,  3.9215e-03, -2.9945e-03, -1.4908e-02,  6.3705e-03,
           -1.9188e-03,  9.1095e-03, -5.7259e-03,  3.8357e-03, -1.2192e-02,
            1.6251e-03, -1.4702e-02,  1.9104e-02, -9.1705e-03,  3.8948e-03,
            1.3672e-02, -1.2444e-02, -5.3444e-03,  6.3858e-03, -1.1415e-03,
            1.3351e-03,  1.8215e-03,  2.0802e-04,  1.3794e-02, -5.4283e-03,
           -4.2572e-03, -6.3858e-03, -4.3755e-03, -5.0664e-06, -3.6144e-03,
            3.5572e-03, -1.4450e-02]]]], dtype=torch.float16)
2025-05-16 03:02:34.805897 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 2.2049e-03,  4.0359e-03, -5.3215e-03, -3.3283e-03, -6.8474e-03,
            1.5154e-03,  6.7902e-04, -8.8501e-03,  1.1063e-03,  1.1162e-02,
            6.6605e-03,  1.4084e-02, -2.3019e-04,  6.0806e-03,  1.2512e-03,
            5.5969e-05,  4.8294e-03, -1.9379e-02, -6.9284e-04, -1.4410e-03,
            6.5804e-03,  5.6610e-03,  7.7324e-03, -1.1269e-02, -6.6452e-03,
           -2.1912e-02,  1.6699e-03,  4.0627e-03, -8.7509e-03,  1.1110e-03,
           -3.6383e-04,  1.2238e-02,  7.1640e-03, -2.8458e-03, -6.9809e-03,
            6.1073e-03, -5.6915e-03,  2.0618e-03, -4.0894e-03, -2.3251e-03,
           -6.9160e-03, -1.6546e-03,  2.8229e-03,  9.7322e-04, -7.5035e-03,
           -8.8501e-04,  1.9867e-02, -1.1605e-04, -3.9902e-03,  9.1457e-04,
           -6.5765e-03, -3.0594e-03,  5.9319e-03,  5.0306e-04,  9.7198e-03,
            5.2118e-04, -3.6945e-03, -1.7288e-02, -1.6815e-02,  2.1148e-04,
           -6.6147e-03,  1.5251e-02,  6.1750e-04, -7.9012e-04,  2.3079e-03,
           -7.0512e-05,  4.8523e-03, -3.5362e-03,  7.4565e-05, -8.6365e-03,
            7.4844e-03,  2.5082e-03, -9.0170e-04,  2.0657e-03, -5.9586e-03,
            2.3994e-03,  1.8444e-03, -1.2789e-03,  2.8000e-03, -4.7836e-03,
           -6.8808e-04, -5.9319e-03, -1.2466e-02,  1.0891e-03, -5.7144e-03,
            1.9226e-03,  1.5593e-03, -2.1439e-03, -1.0658e-02,  5.0087e-03,
           -2.3484e-04,  1.1192e-02,  4.5280e-03,  5.6572e-03,  1.1234e-03,
            3.0746e-03,  9.7809e-03, -4.2305e-03,  1.1658e-02,  3.0499e-03,
           -1.1778e-03,  5.9605e-04,  9.3079e-03]]],


        [[[ 6.4926e-03,  1.5747e-02,  1.3779e-02, -1.1574e-02,  1.3336e-02,
           -1.2589e-03,  1.6266e-02,  8.2855e-03,  5.8708e-03,  1.7090e-03,
            1.5211e-03,  4.0321e-03, -1.0307e-02,  1.0521e-02, -1.4587e-02,
            2.0199e-03,  4.2076e-03, -1.5364e-03, -1.5097e-03, -5.6419e-03,
            6.4507e-03,  5.6648e-04, -3.9139e-03,  1.2636e-03, -4.1008e-03,
            6.2408e-03, -4.7951e-03, -1.1703e-02, -5.0831e-04, -8.8120e-03,
           -4.4708e-03, -5.8517e-03, -3.8195e-04, -4.7302e-03, -1.6975e-03,
           -4.7226e-03,  2.7637e-03, -1.4496e-03, -1.0872e-02, -2.5921e-03,
            1.7614e-03, -2.4776e-03,  4.9210e-03,  6.0005e-03, -4.2076e-03,
            7.8506e-03,  2.3518e-03,  3.6106e-03, -7.4234e-03, -2.8057e-03,
            1.0063e-02,  1.4679e-02,  2.1400e-03, -1.1568e-03,  1.0557e-03,
            3.8409e-04, -2.0466e-03, -6.8359e-03, -1.7643e-04,  6.8951e-04,
           -1.3458e-02,  4.1847e-03, -5.8365e-03, -3.0708e-03, -2.6382e-02,
           -2.4395e-03, -2.6608e-03,  5.2414e-03,  2.3060e-03,  3.0556e-03,
            5.8403e-03,  2.1477e-03,  1.0628e-02, -1.0233e-03,  4.4365e-03,
            2.3937e-03, -7.8201e-03,  4.9782e-03,  5.0201e-03, -3.0537e-03,
           -1.1757e-02, -6.8512e-03,  2.3212e-03, -1.4696e-03,  6.4392e-03,
           -2.8725e-03, -2.7370e-03,  6.1722e-03,  1.0086e-02, -1.1986e-02,
           -4.5815e-03, -2.9011e-03, -1.6747e-03,  7.8735e-03, -7.3280e-03,
            4.3907e-03, -2.2049e-03, -3.2692e-03,  2.3193e-03,  8.5678e-03,
           -3.9215e-03,  1.6537e-03, -3.2539e-03]]]], dtype=torch.float16)
2025-05-16 03:02:35.074119 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 3.9558e-03,  4.2725e-03, -2.3994e-03,  2.3746e-03,  2.0771e-03,
           -1.1818e-02, -6.6376e-03, -3.2349e-03,  3.0308e-03,  3.1681e-03,
            1.0424e-03, -2.6627e-03, -5.3253e-03,  8.2314e-05, -3.2730e-03,
            2.7485e-03,  6.1369e-04,  2.8114e-03,  4.6692e-03, -1.1627e-02,
            7.4997e-03, -8.5831e-03,  4.7798e-03, -7.7391e-04,  1.2398e-03,
            1.3313e-03,  1.6174e-03, -4.2458e-03,  5.4092e-03, -7.1259e-03,
           -9.7733e-03,  8.5592e-04, -1.0239e-02,  8.7814e-03,  4.2229e-03,
           -6.4392e-03,  1.2980e-03, -3.5706e-03, -4.4937e-03,  5.7220e-03,
           -1.5059e-03, -2.3675e-04,  1.0780e-02,  8.9645e-03, -6.1722e-03,
           -1.2161e-02,  5.0402e-04,  1.5495e-02,  6.5994e-03, -2.1820e-03,
           -3.9005e-04,  6.7825e-03,  2.5482e-02,  2.5330e-03,  3.3512e-03,
           -1.3733e-03, -7.1945e-03,  1.0849e-02,  3.0479e-03,  1.3420e-02,
           -9.8495e-03, -5.9929e-03,  4.5128e-03,  1.9531e-02, -7.8964e-03,
           -8.3160e-03, -6.3972e-03,  2.2125e-03, -9.1858e-03,  6.3820e-03,
           -1.0748e-03,  1.9131e-03,  5.0087e-03, -9.9335e-03, -3.1128e-03,
            1.0043e-04,  2.4986e-03, -8.3828e-04, -2.0752e-03, -1.4057e-03,
            1.9073e-03, -1.4524e-03, -6.4964e-03,  3.2635e-03, -8.1787e-03,
            1.0178e-02,  9.0942e-03,  7.2784e-03,  5.5161e-03,  1.4992e-02,
           -4.6425e-03, -1.6754e-02,  5.2376e-03, -2.4509e-03,  1.5335e-03,
           -1.0330e-02, -6.6605e-03, -1.9236e-03, -1.6357e-02, -6.3562e-04,
           -4.6492e-04, -5.6496e-03, -1.1053e-03]]],


        [[[-3.8471e-03,  8.5220e-03,  1.1854e-03,  5.4779e-03, -4.0550e-03,
           -8.8024e-04, -1.2733e-02,  1.6556e-03,  1.2833e-02,  4.2629e-04,
           -8.1778e-04, -9.9869e-03, -6.6109e-03,  7.1907e-03,  1.0529e-03,
            2.9793e-03,  4.2229e-03,  1.8631e-02, -2.3689e-03,  6.0349e-03,
            8.2703e-03, -4.9400e-03, -1.5213e-02, -1.3971e-03,  1.2032e-02,
            1.1055e-02,  3.3512e-03, -1.0002e-02, -6.3837e-05, -1.5442e-02,
            4.6310e-03,  4.2152e-03,  1.9741e-03,  6.1836e-03,  3.4981e-03,
           -2.0008e-03, -2.5806e-03,  2.1420e-03,  9.6464e-04, -8.3876e-04,
           -6.6090e-04,  1.1072e-03, -2.0657e-03, -4.8637e-03, -1.6489e-03,
           -6.6452e-03, -3.0861e-03,  7.7744e-03,  5.2595e-04, -6.3276e-04,
            6.8970e-03,  1.2264e-03, -3.2406e-03,  9.7656e-04,  1.0729e-03,
            3.4180e-03, -2.6455e-03, -1.4008e-02, -6.4659e-03, -6.6757e-04,
           -3.9368e-03,  1.0315e-02,  4.1122e-03, -8.0338e-03,  1.3916e-02,
            2.8076e-03,  2.8534e-03, -9.4223e-03,  3.9005e-04,  2.2049e-03,
           -7.0000e-03, -5.1270e-03, -1.8988e-03,  8.1730e-04,  3.0041e-04,
           -5.3444e-03,  7.2365e-03, -5.2528e-03, -7.2975e-03, -2.4283e-04,
            3.1300e-03,  2.0142e-03,  4.3869e-03, -1.3552e-03,  2.1759e-02,
           -1.9331e-03, -6.6910e-03,  5.1641e-04, -8.0719e-03,  2.1207e-04,
            7.8726e-04,  2.3708e-03, -1.0429e-02, -7.1907e-03,  8.6670e-03,
           -1.0864e-02,  1.0307e-02, -1.2085e-02,  9.5224e-04,  2.2793e-03,
           -1.6508e-03,  7.8964e-03, -7.5645e-03]]]], dtype=torch.float16)
2025-05-16 03:02:35.340602 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 104],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 3.0351e-04, -1.1082e-03, -1.2848e-02, -2.6016e-03,  1.2764e-02,
           -2.8458e-03, -1.2989e-03, -6.1226e-03, -5.2185e-03, -8.8072e-04,
            6.5498e-03, -1.4915e-02, -1.3609e-03,  6.9439e-05, -2.5768e-03,
            8.7814e-03, -1.9073e-03,  2.7599e-03, -2.0065e-02,  4.4250e-03,
           -2.3499e-03, -6.2981e-03, -3.4809e-03,  3.1071e-03, -3.9902e-03,
           -2.6665e-03, -4.4327e-03,  2.9392e-03,  6.4964e-03, -2.7609e-04,
           -6.3591e-03, -4.4441e-03,  4.5624e-03,  4.3106e-03,  1.2980e-03,
            4.5466e-04, -1.2978e-02,  2.0523e-03, -7.0114e-03, -1.2045e-03,
            1.2444e-02, -9.6560e-04,  7.3204e-03,  1.0033e-02, -1.2192e-02,
           -3.9253e-03,  4.0092e-03, -8.5144e-03, -8.0407e-05,  2.8877e-03,
            2.5345e-02,  6.1340e-03, -9.7752e-04, -2.5997e-03,  4.8027e-03,
            3.8967e-03, -9.6436e-03,  5.9319e-03,  6.4621e-03,  3.5706e-03,
            3.7384e-03,  1.7204e-03,  2.4796e-03,  1.1581e-02,  8.8272e-03,
            2.3994e-03,  1.5854e-02, -5.5428e-03,  9.1248e-03, -1.3496e-02,
           -3.3207e-03, -5.3482e-03,  1.1292e-02,  1.4320e-02,  8.0109e-03,
           -9.8267e-03,  1.3847e-02, -1.2360e-03, -6.3934e-03,  3.4790e-03,
           -3.4912e-02, -4.7722e-03, -3.8738e-03,  5.7411e-03,  3.4451e-05,
           -2.5692e-03,  1.3901e-02,  1.7090e-03, -4.4327e-03, -2.3651e-03,
            6.7711e-03, -1.2299e-02, -2.1381e-03, -3.3340e-03, -6.2561e-03,
            7.4577e-03, -3.6831e-03, -3.0708e-03, -1.7710e-03,  4.2801e-03,
            7.4272e-03, -3.2482e-03, -1.8921e-03, -3.8338e-03]]],


        [[[ 1.2917e-02, -1.4296e-03, -3.4122e-03, -9.4986e-03, -6.8724e-05,
            1.3626e-02, -5.7755e-03, -5.0664e-05,  1.3626e-04, -4.4632e-03,
           -4.2534e-03, -1.0178e-02,  7.7934e-03, -4.6425e-03, -1.4465e-02,
            5.5466e-03,  3.5810e-04,  3.1376e-03, -3.0861e-03, -5.2595e-04,
           -5.4817e-03,  2.0504e-03, -8.4457e-03,  3.9520e-03,  1.4030e-02,
            7.0000e-04,  7.3204e-03,  2.5043e-03,  6.6948e-03, -5.8327e-03,
           -2.0428e-03, -1.8568e-03,  5.1916e-05, -3.4027e-03,  6.1340e-03,
           -4.6997e-03, -4.3068e-03,  1.1063e-02,  7.0877e-03,  6.9504e-03,
           -2.0294e-03, -1.9806e-02, -4.9095e-03, -1.5274e-02,  1.8702e-03,
           -4.5853e-03,  6.4926e-03, -2.9373e-03,  1.6463e-04,  2.0370e-03,
            4.6616e-03,  1.9894e-03, -3.3264e-03, -8.5373e-03, -1.2169e-02,
           -4.9057e-03,  2.5940e-03,  1.4391e-03, -1.2321e-03, -3.8195e-04,
            9.8724e-03,  1.2077e-02, -7.3090e-03, -6.2332e-03,  5.1537e-03,
            2.5192e-02, -3.3302e-03,  4.4899e-03, -7.1793e-03,  1.5574e-03,
           -6.1493e-03, -4.5853e-03,  5.9509e-04,  1.1225e-03, -2.3174e-03,
            1.5574e-03,  3.9101e-03, -6.5422e-04, -8.8272e-03,  4.4708e-03,
            2.2068e-03, -2.2297e-03,  1.4095e-03, -1.9512e-03, -5.3291e-03,
           -7.6914e-04, -1.4458e-02, -2.3712e-02,  9.4910e-03, -3.4189e-04,
            7.1983e-03,  5.0497e-04,  8.1787e-03,  8.7814e-03,  7.6256e-03,
           -2.0065e-03,  5.9280e-03, -4.2801e-03,  8.1940e-03, -3.4561e-03,
            1.1740e-03,  1.4145e-02,  1.1490e-02, -6.4659e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:35.603037 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), Tensor([2, 104, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 104],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 4.1542e-03,  1.7490e-03,  1.4172e-03, -1.8072e-03,  1.2077e-02,
           -7.8087e-03, -4.3144e-03, -1.4099e-02,  1.1826e-02,  2.7237e-03,
            1.3176e-02, -9.1171e-03,  1.5087e-03, -8.5068e-04,  3.1929e-03,
           -5.0507e-03, -9.2773e-03,  1.0862e-03,  4.4785e-03, -2.7008e-03,
           -4.4107e-04,  1.6918e-03,  2.4223e-03,  2.4662e-03,  3.4857e-04,
            8.0490e-03, -1.2941e-03, -1.0848e-04,  6.1531e-03, -9.4833e-03,
            1.2749e-02, -9.4366e-04,  4.9820e-03,  7.0953e-03, -5.3444e-03,
           -3.7117e-03, -7.4196e-03,  4.0550e-03, -1.8044e-03, -2.8496e-03,
           -1.8454e-03, -9.0885e-04,  5.4703e-03,  1.2231e-04,  3.0003e-03,
            6.0987e-04, -8.0719e-03,  7.0839e-03, -8.8272e-03,  5.6028e-06,
            4.3983e-03, -4.9706e-03, -1.3588e-02,  8.4839e-03,  2.0428e-03,
            1.1322e-02,  6.7673e-03,  4.0340e-04,  3.6430e-03,  2.6455e-03,
            6.0005e-03,  5.7144e-03, -1.5625e-02,  4.5395e-03, -3.2482e-03,
           -9.2077e-04, -1.1282e-03,  1.9588e-03, -3.1338e-03, -3.5419e-03,
           -7.6714e-03,  2.3098e-03, -5.1308e-03, -8.9569e-03,  6.1874e-03,
           -1.3069e-02, -4.0665e-03,  7.4310e-03,  1.0735e-02, -3.4313e-03,
            1.7414e-03, -4.8447e-03, -1.6489e-03, -3.2539e-03, -3.7460e-03,
            4.3602e-03,  2.9049e-03,  3.0499e-03,  8.5354e-04,  1.8215e-03,
            5.8594e-03, -4.6654e-03, -2.2144e-03,  1.1246e-02,  1.7891e-03,
           -4.0321e-03,  5.2528e-03, -1.0071e-02,  4.7531e-03, -7.9269e-03,
           -9.7580e-03,  1.5306e-03, -1.7281e-03, -3.0003e-03]]],


        [[[ 2.2232e-02,  4.6768e-03, -1.3809e-03,  1.0605e-02, -8.3237e-03,
           -2.2766e-02,  1.6571e-02,  2.9812e-03, -9.1362e-04,  8.0109e-04,
           -9.0637e-03,  1.2755e-04, -8.5983e-03,  4.3983e-03,  3.8433e-03,
           -1.2140e-03,  2.1477e-03, -7.5874e-03, -1.4961e-02, -5.5351e-03,
           -2.1515e-03,  6.4697e-03, -2.9049e-03, -3.9062e-03, -1.3474e-02,
            1.8587e-03,  6.8359e-03, -1.7380e-02, -8.2254e-04,  1.0559e-02,
            8.7595e-04,  4.9531e-05, -2.1496e-03,  2.1782e-03, -1.9369e-03,
            9.7427e-03,  4.9324e-03,  3.4189e-04, -1.8435e-03,  1.5976e-02,
           -7.1526e-03,  1.2817e-03,  4.5891e-03, -2.7637e-03,  2.3880e-03,
           -4.9362e-03,  1.7185e-03,  8.4229e-03, -7.7820e-03, -2.5139e-03,
           -1.4618e-02, -2.1095e-03, -1.1086e-02,  1.6985e-03, -1.0176e-03,
            8.6670e-03,  2.9612e-04, -3.1662e-03, -2.4700e-03,  1.2100e-02,
           -7.0419e-03,  1.3702e-02, -7.0429e-04, -9.2268e-04, -3.1548e-03,
            7.0038e-03,  2.7065e-03,  6.7444e-03, -4.3259e-03,  1.3971e-03,
            2.0847e-03, -9.0714e-03,  4.8294e-03, -1.0481e-03, -2.3961e-04,
           -3.3398e-03, -2.0733e-03,  1.6205e-02, -4.2763e-03,  1.7118e-03,
           -6.8617e-04,  3.7422e-03,  2.0771e-03,  2.1973e-03, -3.9244e-04,
            3.6278e-03,  2.8286e-03,  8.7967e-03, -3.9062e-03, -3.6259e-03,
            7.5912e-03, -7.5722e-03,  3.0499e-03,  5.7411e-03, -1.0559e-02,
            1.3008e-03, -3.0746e-03,  4.5967e-03, -4.6310e-03, -3.0041e-03,
           -3.2387e-03,  1.7500e-03, -7.0648e-03, -2.5425e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:35.863884 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 105, 1, 64],"float16"), Tensor([2, 105, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 105],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.7313e-02, -1.2901e-02, -1.9417e-03, -2.8229e-03,  1.3268e-02,
            4.9629e-03, -5.7564e-03, -2.1877e-03,  2.5749e-03, -2.4581e-04,
            1.2909e-02, -8.8730e-03, -1.5240e-03, -8.7662e-03, -1.0643e-02,
            1.8826e-03, -4.1504e-03, -3.2768e-03,  3.2558e-03, -9.1400e-03,
           -6.4163e-03, -1.4725e-02, -3.9291e-03, -4.9019e-03,  3.7632e-03,
            8.6060e-03,  6.4421e-04, -6.1703e-04,  6.0616e-03,  4.0855e-03,
            6.2847e-04,  7.2622e-04, -5.1880e-03, -9.0063e-05, -1.3256e-03,
           -4.3640e-03, -6.5842e-03,  1.4816e-02, -2.0256e-03,  2.7084e-03,
           -4.7913e-03, -5.8594e-03, -1.9817e-03, -1.2636e-03, -1.1139e-02,
            2.4300e-03,  1.0979e-02,  8.8654e-03,  4.8065e-03,  1.3409e-03,
           -7.6218e-03, -1.3580e-03,  3.5858e-03,  3.9005e-03,  1.5434e-02,
            2.3830e-04, -3.5515e-03,  3.6755e-03,  8.9188e-03,  2.0695e-03,
           -5.6267e-03,  4.1466e-03, -6.5994e-03, -2.1343e-03, -1.0500e-03,
            3.5553e-03, -3.5896e-03,  1.2655e-03, -1.6647e-02,  8.5678e-03,
           -1.7529e-03, -3.9482e-03, -3.2864e-03, -2.4872e-03, -1.2712e-03,
            5.7983e-03, -6.2943e-03,  6.5727e-03,  4.4785e-03, -3.3054e-03,
            1.1902e-02, -3.0556e-03, -2.0561e-03, -3.5000e-03, -5.8126e-04,
            1.0750e-02, -1.5354e-03,  1.2077e-02,  7.2784e-03, -4.1046e-03,
            2.7752e-04,  1.5316e-03,  8.2397e-03, -4.3869e-03,  7.9575e-03,
           -7.4387e-04, -1.0004e-03, -3.4466e-03,  6.6910e-03,  4.6997e-03,
            3.4809e-03,  2.0657e-03,  6.4163e-03,  6.7234e-04,  4.1122e-03]]],


        [[[ 7.4043e-03, -8.2703e-03,  5.6343e-03,  3.1114e-04, -4.6310e-03,
            5.3101e-03, -7.0620e-04, -1.6766e-03, -6.7282e-04, -6.1531e-03,
            6.1150e-03,  8.9188e-03,  4.3488e-03,  6.9618e-03, -6.6261e-03,
            7.5417e-03, -9.6273e-04,  7.8735e-03,  5.4169e-03,  3.2282e-04,
           -2.9411e-03,  5.8365e-03, -7.6904e-03,  6.6528e-03, -9.8877e-03,
            2.5535e-04,  3.1548e-03,  1.7004e-03,  1.9882e-02, -9.0561e-03,
            3.5610e-03,  7.1907e-03, -2.9850e-03, -4.4289e-03,  2.0027e-03,
            1.2596e-02,  1.8435e-03,  3.5915e-03, -4.8370e-03, -2.7313e-03,
            5.9242e-03,  2.9850e-03, -1.5320e-02, -7.5760e-03,  1.1673e-03,
            1.9760e-03,  5.4979e-04,  5.1308e-03, -1.7128e-03,  2.8849e-04,
            5.4245e-03, -1.0010e-02,  4.0550e-03, -7.5798e-03, -9.6283e-03,
            1.2646e-03, -5.2109e-03, -3.1471e-04, -4.2686e-03, -5.5923e-03,
            9.6054e-03, -3.6831e-03, -3.4370e-03,  1.6766e-03, -4.1428e-03,
           -1.7792e-02, -3.9139e-03, -6.6338e-03,  1.1986e-02,  4.8866e-03,
            2.5444e-03, -3.7575e-03,  3.2234e-03,  1.3237e-03,  6.6109e-03,
            1.5888e-03, -8.5220e-03, -9.3746e-04, -2.2755e-03,  1.0460e-02,
            5.9509e-04,  3.0918e-03, -1.4397e-02, -5.4169e-03, -1.4973e-04,
           -4.7073e-03,  1.1501e-03, -1.6113e-02,  5.3177e-03,  1.0445e-02,
           -2.1458e-03, -3.1567e-03,  1.4143e-03, -1.3893e-02, -8.2397e-03,
           -7.8506e-03,  2.3842e-03, -2.8019e-03,  9.7885e-03,  1.1909e-02,
           -6.3477e-03,  2.0081e-02,  2.9106e-03,  2.5959e-03, -6.9809e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:36.112819 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 106, 1, 64],"float16"), Tensor([2, 106, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 106],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.7719e-03,  3.8643e-03, -2.4090e-03,  4.6921e-03, -4.8904e-03,
            1.2955e-02, -3.9601e-04, -8.7404e-04,  2.6150e-03,  6.2180e-03,
           -2.3804e-03,  1.0689e-02, -1.7691e-03,  8.0466e-05, -5.6305e-03,
           -4.5090e-03, -8.6288e-03,  6.7101e-03,  8.8730e-03,  7.2098e-04,
           -6.2065e-03, -4.4022e-03, -1.5388e-02, -6.9847e-03, -7.7534e-04,
           -2.5883e-03, -2.1935e-03, -3.7212e-03, -1.7357e-03,  2.9793e-03,
            1.5087e-03, -1.2619e-02,  2.6741e-03,  1.3252e-02,  3.3150e-03,
            1.2299e-02, -6.2561e-03, -7.9956e-03,  3.2463e-03,  3.5706e-03,
            4.4022e-03, -4.5586e-04,  8.9569e-03,  4.0436e-03,  7.5569e-03,
            4.0970e-03, -1.6842e-03,  4.0131e-03,  9.5673e-03,  1.0872e-02,
            2.6398e-03,  2.3594e-03,  2.6398e-03, -2.6970e-03, -6.4163e-03,
           -8.1100e-03,  9.3651e-04, -1.5640e-03,  3.5706e-03, -4.1122e-03,
           -1.1606e-03, -4.1847e-03, -5.5504e-03,  3.1781e-04,  9.8801e-03,
            7.3433e-05,  1.3971e-03, -2.4109e-03,  7.0095e-04, -7.9041e-03,
           -5.4054e-03,  8.0566e-03, -1.2360e-02, -4.3640e-03,  6.7806e-04,
           -2.2011e-03,  2.8229e-03, -3.9005e-03, -1.3367e-02, -7.6675e-03,
            5.6219e-04, -3.0842e-03,  1.5020e-03, -6.9427e-04, -5.0697e-03,
            3.1757e-03, -1.8430e-04,  3.1681e-03,  5.5361e-04,  4.9973e-04,
           -5.9090e-03,  3.6926e-03,  7.5798e-03,  1.5011e-03, -3.6011e-03,
            2.9278e-03,  8.6136e-03,  9.6989e-04, -1.3321e-02, -1.3123e-03,
           -2.7142e-03, -1.1780e-02,  1.4791e-03, -7.1526e-03,  2.0905e-02,
            3.9368e-03]]],


        [[[ 5.4932e-03,  1.0101e-02,  4.0627e-03,  7.8583e-03,  5.1460e-03,
            2.1720e-04, -1.3176e-02,  1.4238e-03,  5.0888e-03, -1.0986e-03,
           -1.0710e-03, -9.4757e-03,  3.0708e-03,  1.3733e-04, -1.5993e-03,
            1.3323e-03,  5.6877e-03,  7.6027e-03,  7.7209e-03,  8.1863e-03,
            8.2397e-04, -6.8665e-04,  1.8396e-03,  8.7433e-03,  1.9197e-03,
           -1.2569e-03,  6.0539e-03, -2.7065e-03, -3.4542e-03,  6.3276e-04,
            1.7147e-03, -4.0627e-03, -2.4929e-03,  2.3422e-03,  4.8714e-03,
            5.6410e-04,  2.2449e-03, -3.1948e-03, -2.8458e-03, -2.6550e-03,
           -4.5242e-03,  6.7863e-03, -4.6229e-04,  4.5586e-03,  4.3511e-05,
           -3.1071e-03, -4.3793e-03,  1.8034e-03, -3.6869e-03,  3.4084e-03,
            2.8572e-03,  1.7443e-03, -4.7073e-03, -2.0370e-03,  4.4518e-03,
           -1.2955e-02,  4.2267e-03,  4.5929e-03,  5.4131e-03, -2.1515e-03,
           -4.4022e-03, -6.4774e-03, -6.5308e-03, -3.9005e-03, -2.9755e-03,
           -4.8866e-03, -6.1464e-04, -2.9221e-03,  3.5267e-03,  4.7646e-03,
            3.7518e-03, -5.2109e-03,  1.8387e-03, -3.0918e-03, -4.3526e-03,
            4.6806e-03, -8.6136e-03,  4.3907e-03,  2.6627e-03,  1.1032e-02,
            3.5458e-03, -3.5324e-03, -2.0809e-03, -7.8430e-03,  1.1978e-03,
            6.6833e-03, -5.2986e-03,  5.0049e-03, -3.2578e-03, -6.3896e-03,
            1.0710e-03, -1.1116e-02, -8.0872e-03, -1.0786e-03, -4.0245e-04,
            3.1757e-03,  5.7869e-03,  4.3488e-03,  1.7157e-03, -1.9852e-02,
           -1.7917e-04, -3.7193e-03,  2.3937e-03, -2.9030e-03,  1.7939e-03,
           -6.0749e-04]]]], dtype=torch.float16)
2025-05-16 03:02:36.313631 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 36],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.5976e-02,  2.4368e-02,  2.7985e-02, -5.7564e-03, -3.2196e-02,
            7.0435e-02,  2.2736e-02,  3.2139e-03,  1.0338e-02,  2.7649e-02,
           -1.2337e-02, -2.1240e-02,  3.3081e-02, -3.3703e-03, -1.1307e-02,
           -5.3589e-02, -1.5015e-02,  3.8776e-03, -4.3884e-02, -2.0248e-02,
            2.6184e-02, -2.0569e-02, -8.4152e-03, -1.8967e-02,  1.4046e-02,
            4.8943e-03,  3.4058e-02, -2.1851e-02,  4.8462e-02, -3.9246e-02,
           -3.1677e-02,  1.4946e-02,  3.5667e-03,  1.9699e-02, -1.4809e-02,
            1.0767e-03]]],


        [[[-6.7253e-03, -1.3704e-03, -6.8779e-03,  3.7537e-02,  2.2354e-02,
           -3.6224e-02, -7.6675e-03, -1.5235e-04, -2.5604e-02,  1.1093e-02,
           -1.0483e-02,  3.5675e-02, -1.5640e-02,  1.7334e-02, -2.8782e-03,
            2.9587e-02,  4.1992e-02,  1.8356e-02, -2.6154e-02,  1.8167e-03,
           -1.0078e-02, -1.5106e-02, -3.4424e-02,  1.8280e-02, -1.6220e-02,
           -1.8295e-02, -2.9816e-02, -1.4420e-02, -5.5552e-05,  9.3307e-03,
            3.4821e-02,  4.0588e-03,  2.5345e-02, -4.4250e-02,  3.0930e-02,
           -1.6083e-02]]]], dtype=torch.float16)
2025-05-16 03:02:36.492172 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 37],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.0948e-02, -1.4580e-02,  1.4328e-02, -1.8158e-02, -8.7341e-02,
            1.0048e-02, -2.0218e-02,  1.5869e-02,  7.7820e-03, -4.4823e-03,
            1.9257e-02, -9.9258e-03,  2.3804e-03, -8.9874e-03,  3.2663e-05,
            3.2837e-02,  5.5809e-03, -1.8753e-02,  8.7662e-03,  4.3243e-02,
           -5.5511e-02,  1.3969e-02,  5.8746e-03,  1.9089e-02,  5.6686e-03,
            2.0035e-02,  3.0167e-02, -1.5884e-02, -2.1240e-02, -9.4910e-03,
           -1.6586e-02,  2.0218e-02,  1.8738e-02, -1.6144e-02, -3.2837e-02,
            4.9530e-02, -4.2076e-03]]],


        [[[-2.1957e-02, -4.7646e-03,  1.1360e-02, -1.8753e-02,  2.4166e-03,
            1.9135e-02, -1.1604e-02,  2.3987e-02, -1.1917e-02, -5.9700e-03,
            5.3596e-03, -1.3313e-02, -9.1629e-03,  1.9028e-02, -1.5266e-02,
           -3.7476e-02,  3.7212e-03, -1.7654e-02,  2.5879e-02,  2.1881e-02,
            2.8877e-03,  7.6408e-03, -5.7869e-03, -6.7520e-03, -2.4185e-02,
           -2.2415e-02,  1.9440e-02,  3.3173e-02,  3.6804e-02, -3.3325e-02,
            2.4378e-05,  4.5624e-03,  8.2245e-03, -2.7752e-03,  1.2741e-02,
           -1.1620e-02,  1.6449e-02]]]], dtype=torch.float16)
2025-05-16 03:02:36.679155 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 37],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0172, -0.0103,  0.0081,  0.0104, -0.0119,  0.0019, -0.0090,
            0.0010,  0.0420,  0.0009,  0.0054,  0.0068, -0.0018,  0.0179,
           -0.0005,  0.0070,  0.0352, -0.0041,  0.0181,  0.0314,  0.0129,
           -0.0245, -0.0041, -0.0315,  0.0002, -0.0115, -0.0032, -0.0254,
           -0.0117, -0.0432,  0.0065, -0.0191,  0.0160, -0.0035,  0.0031,
            0.0039, -0.0308]]],


        [[[-0.0024,  0.0146, -0.0014, -0.0246, -0.0190, -0.0065, -0.0124,
            0.0111,  0.0035,  0.0201,  0.0115, -0.0224,  0.0211,  0.0323,
           -0.0034, -0.0043,  0.0236, -0.0068,  0.0050,  0.0077,  0.0057,
            0.0279, -0.0135, -0.0089, -0.0031, -0.0308, -0.0112,  0.0343,
            0.0127, -0.0069, -0.0153, -0.0139,  0.0046, -0.0320,  0.0083,
            0.0022, -0.0072]]]], dtype=torch.float16)
2025-05-16 03:02:36.891808 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 38],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.9028e-02,  6.5552e-02,  2.1553e-03,  2.3239e-02, -1.2024e-02,
           -1.5465e-02, -2.4815e-03, -2.7435e-02,  1.8906e-02, -2.0050e-02,
           -1.6052e-02,  5.4283e-03,  8.9111e-03,  8.7509e-03, -2.0325e-02,
            6.3744e-03, -1.8415e-03, -1.4961e-02,  2.4002e-02,  7.9651e-03,
           -2.0206e-05, -8.9645e-03, -6.4926e-03, -9.1934e-03,  1.0567e-02,
            3.4027e-03,  2.1072e-02,  6.7940e-03, -8.7051e-03,  9.0714e-03,
            1.1871e-02, -3.9005e-04,  1.1383e-02,  2.1219e-04, -8.9035e-03,
           -3.1708e-02, -3.1776e-03, -1.8402e-02]]],


        [[[ 1.0536e-02,  1.5793e-02,  9.3307e-03, -9.6970e-03, -2.8095e-03,
            1.2817e-02,  2.5883e-03,  1.3260e-02,  1.7471e-02,  2.8648e-03,
           -5.8250e-03,  2.9640e-03,  2.7199e-03, -1.4816e-02,  2.2919e-02,
           -1.8341e-02, -4.7363e-02,  1.0948e-02,  1.2001e-02, -1.7044e-02,
            7.8506e-03, -2.9526e-03, -3.5405e-04,  4.0955e-02,  2.5238e-02,
            6.8207e-03, -4.5166e-02,  4.4861e-03, -1.9407e-03, -5.9326e-02,
           -4.7722e-03, -5.7640e-03, -1.2955e-02, -6.5994e-03,  1.9501e-02,
           -1.1396e-03, -7.7705e-03,  2.3621e-02]]]], dtype=torch.float16)
2025-05-16 03:02:37.149052 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 38],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0226, -0.0069,  0.0002,  0.0203, -0.0194, -0.0039,  0.0006,
            0.0384, -0.0046, -0.0111,  0.0087,  0.0167, -0.0020, -0.0324,
           -0.0088, -0.0114, -0.0135,  0.0228,  0.0035, -0.0093, -0.0072,
            0.0078,  0.0037, -0.0071, -0.0047,  0.0297,  0.0204, -0.0050,
           -0.0312,  0.0057, -0.0336,  0.0537,  0.0187, -0.0125,  0.0020,
            0.0108,  0.0071, -0.0237]]],


        [[[-0.0018, -0.0130,  0.0087,  0.0240, -0.0011,  0.0016,  0.0344,
           -0.0051, -0.0334, -0.0092, -0.0133,  0.0137, -0.0134, -0.0195,
           -0.0028, -0.0125,  0.0221,  0.0181,  0.0169,  0.0197, -0.0693,
            0.0315, -0.0022, -0.0020, -0.0148, -0.0046,  0.0122,  0.0042,
            0.0125, -0.0165,  0.0101,  0.0169, -0.0032,  0.0124,  0.0237,
           -0.0184, -0.0129, -0.0136]]]], dtype=torch.float16)
2025-05-16 03:02:37.352694 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.3618e-02, -1.9363e-02, -2.9030e-03,  1.2517e-05, -2.2385e-02,
           -3.8013e-03,  8.3237e-03,  1.8753e-02, -6.1569e-03, -1.5350e-02,
            2.1667e-02,  2.9495e-02, -1.3161e-02, -4.6730e-03,  6.5269e-03,
           -1.6632e-03,  4.2191e-03,  2.4776e-03, -1.4374e-02, -6.9008e-03,
            3.1281e-02, -7.0801e-03, -1.0109e-02,  2.0142e-02,  2.2064e-02,
           -3.1815e-03,  2.3365e-03,  1.2039e-02,  6.0043e-03, -3.0869e-02,
           -3.0041e-03,  1.9775e-02, -2.6108e-02,  1.3863e-02, -8.2779e-03,
           -2.3010e-02,  3.0029e-02, -1.3680e-02,  6.4182e-04]]],


        [[[-1.6891e-02, -1.6571e-02,  2.9724e-02,  2.2812e-03, -2.6382e-02,
            4.2297e-02, -1.0727e-02, -2.0432e-02,  3.1082e-02, -1.0490e-02,
           -4.3365e-02, -7.6675e-04, -1.3603e-02,  2.5787e-03,  2.6932e-02,
            7.0038e-03, -2.7328e-02,  1.1810e-02, -7.7057e-03, -1.2978e-02,
           -5.0125e-03, -6.7234e-04,  4.8103e-03, -1.2527e-02,  1.9703e-03,
            3.7994e-02,  1.3252e-02, -3.3356e-02,  1.9012e-02,  1.4076e-02,
            2.4567e-02, -1.3809e-02,  7.8583e-03,  7.6027e-03, -7.7820e-03,
            1.5312e-02, -9.2392e-03,  1.4641e-02, -2.5131e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:37.598310 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 39],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-8.5449e-03,  4.8340e-02,  1.4778e-02, -2.9953e-02,  1.5717e-03,
           -1.2207e-02, -8.0643e-03,  5.3368e-03,  2.5986e-02,  2.1179e-02,
           -7.5645e-03,  1.1902e-03, -1.3443e-02,  6.3133e-03,  2.5574e-02,
           -1.7776e-03, -2.3376e-02,  2.3071e-02,  4.1237e-03, -1.1234e-03,
            1.2306e-02,  1.1444e-02,  9.3689e-03, -2.1255e-02, -2.1133e-02,
           -2.8717e-02, -1.9897e-02, -2.1042e-02, -8.8501e-03,  3.4393e-02,
            2.3178e-02, -1.0979e-02,  3.1128e-03,  5.5923e-03, -1.9058e-02,
           -1.6928e-03, -5.4970e-03, -8.0414e-03, -4.6501e-03]]],


        [[[ 1.0967e-05, -6.7596e-03,  9.7885e-03, -3.0853e-02,  1.6800e-02,
            4.3564e-03, -4.1443e-02,  4.6806e-03, -8.3923e-03,  3.3264e-02,
           -2.4704e-02,  6.9466e-03,  2.6199e-02, -5.5733e-03, -9.6436e-03,
           -3.0899e-03,  2.2598e-02,  3.6716e-03,  1.5793e-02,  4.4518e-03,
            7.7477e-03, -1.0300e-02,  1.9745e-02,  3.6499e-02, -2.3682e-02,
           -1.2123e-02,  3.8662e-03, -1.9699e-02,  1.6022e-02,  1.1261e-02,
            1.6861e-03,  7.7896e-03, -1.7242e-02, -1.5854e-02, -2.2675e-02,
            6.6681e-03, -9.7504e-03,  1.0773e-02, -8.8501e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:37.848578 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 40],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0103, -0.0184, -0.0257,  0.0056,  0.0080,  0.0064,  0.0007,
           -0.0217, -0.0070,  0.0478, -0.0311,  0.0133,  0.0047, -0.0269,
           -0.0237, -0.0170,  0.0008,  0.0443, -0.0112, -0.0114,  0.0298,
            0.0315,  0.0278,  0.0219, -0.0244, -0.0071,  0.0017, -0.0084,
            0.0012, -0.0100, -0.0063, -0.0050, -0.0040,  0.0268, -0.0053,
           -0.0137,  0.0004, -0.0059,  0.0044,  0.0172]]],


        [[[-0.0091,  0.0296, -0.0273,  0.0041,  0.0252,  0.0071,  0.0079,
           -0.0038,  0.0013, -0.0007, -0.0037, -0.0067,  0.0079,  0.0190,
           -0.0105, -0.0284,  0.0252, -0.0066, -0.0091, -0.0116,  0.0011,
           -0.0154, -0.0115,  0.0414,  0.0091, -0.0060,  0.0141,  0.0024,
           -0.0030,  0.0092, -0.0130, -0.0074,  0.0010, -0.0214, -0.0033,
            0.0053, -0.0034,  0.0133,  0.0011, -0.0235]]]],
       dtype=torch.float16)
2025-05-16 03:02:38.089980 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), Tensor([2, 40, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 40],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0020, -0.0478,  0.0070, -0.0050,  0.0206, -0.0006,  0.0503,
            0.0148,  0.0165, -0.0068,  0.0090, -0.0033, -0.0096, -0.0517,
            0.0075,  0.0041, -0.0035, -0.0258,  0.0156,  0.0066,  0.0224,
           -0.0238, -0.0251,  0.0088,  0.0015, -0.0144,  0.0098, -0.0059,
            0.0013, -0.0107, -0.0191,  0.0180, -0.0055,  0.0214,  0.0013,
            0.0045, -0.0019,  0.0103,  0.0130, -0.0015]]],


        [[[-0.0146,  0.0129, -0.0048,  0.0019, -0.0305,  0.0074,  0.0155,
            0.0002, -0.0080, -0.0002,  0.0050, -0.0147,  0.0119, -0.0101,
            0.0191,  0.0127,  0.0101,  0.0042, -0.0142, -0.0061,  0.0094,
           -0.0044,  0.0180, -0.0164,  0.0077,  0.0162, -0.0090,  0.0020,
           -0.0202,  0.0134, -0.0191,  0.0114, -0.0023, -0.0039, -0.0222,
           -0.0105,  0.0335,  0.0075, -0.0069, -0.0018]]]],
       dtype=torch.float16)
2025-05-16 03:02:38.353410 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 41],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0055,  0.0122, -0.0275,  0.0208,  0.0179,  0.0145, -0.0237,
            0.0070, -0.0106, -0.0083,  0.0098,  0.0035,  0.0114, -0.0159,
            0.0088, -0.0038,  0.0055,  0.0097,  0.0172, -0.0272, -0.0072,
           -0.0160, -0.0131,  0.0300,  0.0203,  0.0116,  0.0193, -0.0041,
            0.0233, -0.0206,  0.0257,  0.0098, -0.0080, -0.0087,  0.0025,
           -0.0047,  0.0236,  0.0049, -0.0106, -0.0504, -0.0436]]],


        [[[-0.0138,  0.0079,  0.0034, -0.0426,  0.0005,  0.0176,  0.0174,
           -0.0061,  0.0272, -0.0357,  0.0323, -0.0027, -0.0032, -0.0072,
            0.0380, -0.0065, -0.0133,  0.0027, -0.0212, -0.0089, -0.0125,
           -0.0162,  0.0012, -0.0045,  0.0204,  0.0117, -0.0043,  0.0164,
            0.0158,  0.0020,  0.0018, -0.0075,  0.0100, -0.0212,  0.0141,
            0.0068,  0.0070, -0.0049, -0.0129,  0.0074, -0.0163]]]],
       dtype=torch.float16)
2025-05-16 03:02:38.553787 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), Tensor([2, 41, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 41],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0022, -0.0013, -0.0315, -0.0096,  0.0185, -0.0003,  0.0060,
            0.0216, -0.0107, -0.0171, -0.0160,  0.0091, -0.0166, -0.0273,
            0.0125,  0.0066, -0.0247,  0.0260,  0.0029,  0.0094,  0.0164,
           -0.0098, -0.0039, -0.0109, -0.0188, -0.0101,  0.0133,  0.0282,
           -0.0038,  0.0027, -0.0168,  0.0201,  0.0182, -0.0035, -0.0169,
            0.0259, -0.0102, -0.0196,  0.0230,  0.0150,  0.0017]]],


        [[[ 0.0075,  0.0007, -0.0131, -0.0065, -0.0232, -0.0201,  0.0160,
            0.0285,  0.0126,  0.0175, -0.0192,  0.0078, -0.0267,  0.0075,
            0.0072,  0.0155,  0.0082, -0.0318, -0.0091, -0.0066, -0.0037,
           -0.0355, -0.0008, -0.0210, -0.0295,  0.0034,  0.0170, -0.0148,
            0.0069,  0.0073, -0.0230, -0.0235,  0.0307,  0.0111,  0.0109,
            0.0168, -0.0026,  0.0381,  0.0209,  0.0273, -0.0084]]]],
       dtype=torch.float16)
2025-05-16 03:02:38.807203 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 42],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0120, -0.0659, -0.0105,  0.0072,  0.0070,  0.0327, -0.0072,
            0.0053, -0.0043,  0.0028,  0.0078, -0.0429, -0.0050,  0.0089,
           -0.0103, -0.0060,  0.0075, -0.0155,  0.0451, -0.0059, -0.0170,
           -0.0003, -0.0046,  0.0075,  0.0251, -0.0064,  0.0214,  0.0089,
           -0.0128,  0.0173, -0.0048, -0.0128,  0.0119, -0.0075,  0.0059,
            0.0002,  0.0056,  0.0009,  0.0020, -0.0067,  0.0134, -0.0104]]],


        [[[ 0.0110, -0.0268, -0.0096, -0.0083, -0.0080,  0.0087,  0.0028,
            0.0039,  0.0103, -0.0003, -0.0518, -0.0062, -0.0012,  0.0155,
            0.0285,  0.0079, -0.0082, -0.0094, -0.0204, -0.0014, -0.0040,
           -0.0108,  0.0099, -0.0088,  0.0547,  0.0221,  0.0079,  0.0156,
           -0.0086,  0.0090, -0.0095, -0.0050, -0.0065, -0.0002,  0.0258,
           -0.0108,  0.0046, -0.0324,  0.0053,  0.0011,  0.0207, -0.0173]]]],
       dtype=torch.float16)
2025-05-16 03:02:39.092121 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), Tensor([2, 42, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 42],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 4.4495e-02,  3.7804e-03, -1.4359e-02,  8.0948e-03,  3.5801e-03,
            7.3586e-03,  1.6537e-03, -3.8090e-03, -5.5027e-04,  1.3489e-02,
            3.2883e-03, -1.5282e-02,  2.4445e-02,  1.4740e-02, -1.7731e-02,
           -3.5034e-02, -2.5589e-02,  2.5223e-02, -3.8147e-03,  9.6283e-03,
            1.8044e-03,  6.8817e-03,  3.5095e-03,  1.0353e-02,  3.3836e-03,
            2.1877e-03,  1.6510e-02, -3.6713e-02, -6.7139e-04, -1.5915e-02,
           -8.7891e-03,  2.0218e-02, -1.6083e-02,  1.6413e-03,  6.8855e-03,
           -2.8400e-03,  2.8343e-03, -3.7994e-02, -8.1711e-03,  1.4069e-02,
           -1.7424e-03, -5.0049e-03]]],


        [[[-5.2977e-04, -2.9205e-02,  1.5640e-02,  3.3493e-03, -1.5228e-02,
            2.2003e-02,  2.7374e-02, -5.4836e-04,  6.0120e-03,  1.8477e-05,
            1.0132e-02, -4.8141e-03,  5.8899e-03,  2.4017e-02,  2.2850e-03,
           -3.0136e-02,  7.9193e-03, -3.2005e-03, -8.3084e-03, -5.4932e-02,
            1.0643e-03,  1.3313e-02, -8.3847e-03,  3.8269e-02, -6.8207e-03,
           -8.8348e-03,  8.8120e-03,  6.7787e-03,  3.7842e-03,  1.0628e-02,
           -2.5818e-02, -4.9629e-03,  1.5991e-02, -1.2337e-02, -1.2093e-02,
            3.1769e-02, -6.2180e-04,  4.4899e-03,  5.5809e-03,  9.3460e-03,
           -4.2297e-02, -5.3864e-03]]]], dtype=torch.float16)
2025-05-16 03:02:39.292003 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 43],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.6144e-02,  1.3229e-02,  4.7264e-03,  7.1564e-03, -3.2471e-02,
           -3.1185e-04, -1.5732e-02, -1.6968e-02,  2.5024e-03, -1.5621e-03,
            5.4207e-03,  7.6752e-03,  1.3397e-02, -9.6273e-04, -1.0139e-02,
            5.6114e-03, -1.5594e-02,  5.0110e-02,  2.1683e-02, -2.3300e-02,
            6.2790e-03,  4.0131e-02, -1.2756e-02,  1.2047e-02, -7.1526e-03,
            1.7529e-03,  5.0888e-03,  1.2543e-02,  1.1795e-02, -3.4027e-02,
           -1.7990e-02, -1.0178e-02, -2.0538e-02, -1.2045e-03,  1.4381e-02,
           -5.9738e-03,  9.2621e-03, -7.3547e-03,  1.4961e-02, -3.0411e-02,
            5.3101e-03, -3.2597e-03,  1.9012e-02]]],


        [[[ 1.5602e-02,  5.5618e-03, -1.5137e-02,  8.2626e-03,  1.2695e-02,
            9.3613e-03, -1.2207e-02,  2.0111e-02, -5.5389e-03, -1.2665e-02,
           -1.0193e-02,  1.6556e-02, -7.7019e-03,  2.5467e-02,  7.3509e-03,
            9.2926e-03, -6.0997e-03,  1.0719e-02, -1.5327e-02,  6.3705e-03,
           -9.3307e-03,  1.1902e-03,  5.0163e-03,  3.0937e-03,  1.0483e-02,
           -6.8436e-03, -9.0256e-03, -1.1108e-02,  6.8474e-03,  7.2784e-03,
            1.0468e-02, -1.0063e-02,  1.1482e-03, -1.5091e-02, -1.1841e-02,
           -2.7710e-02, -5.9366e-05, -8.0643e-03, -2.3315e-02, -4.9286e-03,
            1.0841e-02,  1.8295e-02,  1.5628e-04]]]], dtype=torch.float16)
2025-05-16 03:02:39.545303 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), Tensor([2, 43, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 43],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0002,  0.0234, -0.0176,  0.0014, -0.0029, -0.0051, -0.0138,
           -0.0075, -0.0002, -0.0244, -0.0260, -0.0253,  0.0048,  0.0287,
           -0.0034, -0.0073,  0.0021,  0.0084,  0.0102, -0.0063,  0.0362,
           -0.0502, -0.0251, -0.0004,  0.0447,  0.0229,  0.0047, -0.0129,
            0.0051,  0.0254, -0.0083, -0.0041,  0.0098,  0.0056, -0.0037,
           -0.0324, -0.0029,  0.0047, -0.0004, -0.0083,  0.0294,  0.0234,
           -0.0027]]],


        [[[ 0.0080, -0.0003,  0.0118,  0.0210, -0.0088, -0.0114,  0.0129,
            0.0311, -0.0023, -0.0083, -0.0201,  0.0030,  0.0053,  0.0135,
           -0.0055, -0.0312, -0.0003,  0.0157, -0.0092, -0.0448,  0.0220,
           -0.0013, -0.0030, -0.0169,  0.0165,  0.0142,  0.0058, -0.0044,
            0.0090,  0.0125,  0.0118, -0.0003, -0.0175, -0.0032, -0.0051,
            0.0088,  0.0264, -0.0177, -0.0161,  0.0042, -0.0147, -0.0206,
            0.0096]]]], dtype=torch.float16)
2025-05-16 03:02:39.802631 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 44],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0343,  0.0142,  0.0027, -0.0098, -0.0001, -0.0008,  0.0104,
            0.0398,  0.0073, -0.0058, -0.0047, -0.0050,  0.0117, -0.0097,
           -0.0026, -0.0021, -0.0181, -0.0484,  0.0220,  0.0019,  0.0078,
           -0.0230, -0.0134, -0.0147, -0.0085,  0.0064,  0.0050, -0.0104,
           -0.0160,  0.0098, -0.0283, -0.0251, -0.0054, -0.0214,  0.0059,
            0.0035,  0.0146,  0.0061, -0.0109,  0.0485,  0.0082,  0.0144,
            0.0053,  0.0044]]],


        [[[ 0.0098, -0.0170,  0.0065,  0.0020,  0.0084, -0.0037,  0.0031,
            0.0018,  0.0019, -0.0065,  0.0074,  0.0136, -0.0017,  0.0085,
            0.0109, -0.0096, -0.0016, -0.0027, -0.0200, -0.0090,  0.0104,
           -0.0098,  0.0070,  0.0025,  0.0044,  0.0073,  0.0159,  0.0024,
            0.0265, -0.0175,  0.0067,  0.0040,  0.0088,  0.0006, -0.0115,
           -0.0107, -0.0043,  0.0004,  0.0106, -0.0046, -0.0329, -0.0233,
           -0.0016,  0.0067]]]], dtype=torch.float16)
2025-05-16 03:02:40.063339 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), Tensor([2, 44, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 44],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.1475e-02, -8.3237e-03,  5.5122e-03,  1.4488e-02, -2.7115e-02,
            1.4191e-02, -2.0248e-02,  1.3714e-03, -8.9722e-03, -1.0094e-02,
           -5.7564e-03,  9.7504e-03,  1.8555e-02,  1.2846e-03,  6.2675e-03,
           -2.1019e-03,  1.9226e-02, -4.6768e-03,  1.1864e-02,  1.5289e-02,
           -1.5602e-02,  7.2479e-03,  6.8398e-03,  8.1253e-03, -1.7731e-02,
           -5.9929e-03, -2.2614e-02,  8.4076e-03,  1.0559e-02, -9.6283e-03,
            4.1890e-04,  6.4545e-03,  1.1206e-03,  6.4735e-03, -2.7390e-03,
           -3.4070e-04, -9.3384e-03, -2.1286e-02,  2.6535e-02, -6.9275e-03,
            6.2714e-03,  3.3646e-03, -1.5078e-03,  2.8248e-03]]],


        [[[-1.3687e-02, -1.3802e-02, -4.1885e-03, -2.2217e-02,  5.9547e-03,
            1.0891e-03,  2.6688e-02,  1.5930e-02,  2.0657e-03, -9.5520e-03,
            2.3163e-02, -9.1553e-03,  4.9248e-03,  8.3637e-04,  1.3542e-02,
           -5.4855e-03,  1.4099e-02,  9.8825e-05, -2.3422e-03, -8.5983e-03,
           -8.8425e-03,  5.6229e-03,  1.4015e-02, -6.6643e-03,  1.5289e-02,
            7.0267e-03, -1.8311e-02,  1.0353e-02, -2.5879e-02, -7.9269e-03,
           -1.3666e-03, -2.6112e-03, -7.8506e-03,  4.8370e-03,  3.6621e-03,
            1.1581e-02, -9.7733e-03,  1.4336e-02, -1.8448e-02, -1.4236e-02,
           -9.2926e-03,  1.3618e-02,  1.1047e-02,  4.3654e-04]]]],
       dtype=torch.float16)
2025-05-16 03:02:40.252249 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 45],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0123, -0.0166,  0.0291,  0.0004, -0.0004, -0.0169,  0.0321,
            0.0107, -0.0320,  0.0247, -0.0308, -0.0044,  0.0142, -0.0205,
           -0.0125, -0.0034,  0.0047, -0.0001, -0.0009,  0.0070,  0.0034,
            0.0216,  0.0057,  0.0180,  0.0045,  0.0035, -0.0015,  0.0097,
            0.0131, -0.0015, -0.0122,  0.0224,  0.0016, -0.0068, -0.0216,
           -0.0403, -0.0244, -0.0115,  0.0017,  0.0182,  0.0142, -0.0097,
            0.0072,  0.0017, -0.0135]]],


        [[[ 0.0031, -0.0145, -0.0357,  0.0215, -0.0155,  0.0039, -0.0005,
            0.0145, -0.0063,  0.0173,  0.0119, -0.0098,  0.0221,  0.0261,
            0.0008, -0.0193, -0.0040, -0.0028, -0.0052,  0.0061, -0.0158,
            0.0067,  0.0179,  0.0021,  0.0013, -0.0254,  0.0150, -0.0112,
           -0.0098, -0.0135, -0.0037,  0.0013, -0.0149,  0.0107, -0.0177,
            0.0102,  0.0031,  0.0088, -0.0106,  0.0057, -0.0156,  0.0295,
            0.0056, -0.0084,  0.0149]]]], dtype=torch.float16)
2025-05-16 03:02:40.530216 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 45],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0120, -0.0144, -0.0091,  0.0059,  0.0063, -0.0190, -0.0007,
            0.0044,  0.0157,  0.0037,  0.0024, -0.0027, -0.0004,  0.0002,
            0.0009,  0.0162,  0.0153, -0.0044, -0.0073, -0.0291,  0.0396,
            0.0029, -0.0006, -0.0318,  0.0105, -0.0272, -0.0183, -0.0058,
            0.0030,  0.0008, -0.0141,  0.0271,  0.0104, -0.0134,  0.0212,
           -0.0155,  0.0091, -0.0027,  0.0154,  0.0018,  0.0061, -0.0105,
            0.0016,  0.0379, -0.0195]]],


        [[[ 0.0107,  0.0075, -0.0062,  0.0415,  0.0127,  0.0079,  0.0040,
            0.0016,  0.0033, -0.0046, -0.0039, -0.0417, -0.0075, -0.0062,
            0.0005,  0.0040, -0.0039, -0.0037,  0.0179, -0.0070,  0.0044,
            0.0118,  0.0166,  0.0133, -0.0034, -0.0038, -0.0056,  0.0055,
            0.0103, -0.0111,  0.0055,  0.0019, -0.0086, -0.0261, -0.0082,
           -0.0085,  0.0072, -0.0116, -0.0156, -0.0129, -0.0087,  0.0031,
            0.0164, -0.0078,  0.0091]]]], dtype=torch.float16)
2025-05-16 03:02:40.782716 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 46],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 2.6840e-02, -1.9730e-02,  1.7910e-03, -2.2079e-02,  9.2010e-03,
            9.4604e-03,  1.4610e-02, -2.5444e-03,  5.4436e-03,  3.7575e-03,
           -5.2834e-03, -7.3612e-05, -9.8801e-03, -1.5163e-03,  4.5395e-03,
           -1.4709e-02, -1.7227e-02, -4.6310e-03,  8.9493e-03,  1.0033e-02,
            8.2779e-03, -2.2858e-02, -1.1765e-02,  3.2013e-02, -9.8724e-03,
            4.9686e-04, -1.4511e-02, -6.6605e-03,  2.4216e-02, -9.2087e-03,
           -2.1191e-03, -2.1423e-02,  2.7390e-03,  1.0139e-02, -1.1230e-02,
            6.1264e-03,  9.0027e-03,  1.2863e-02,  1.7452e-03,  9.9792e-03,
           -5.9738e-03,  9.4528e-03,  2.3987e-02, -8.2169e-03, -1.4076e-02,
           -1.0094e-02]]],


        [[[ 9.9599e-05,  4.0924e-02,  2.0569e-02, -1.1597e-02, -3.6804e-02,
            9.5367e-03,  6.8016e-03,  2.7752e-03, -5.0664e-05, -1.2192e-02,
            3.8815e-03,  7.3700e-03, -7.4196e-03,  7.5188e-03,  4.5509e-03,
            8.0299e-04, -9.6359e-03, -1.4977e-02,  1.9064e-03,  1.2718e-02,
           -3.0594e-03, -2.2141e-02,  7.7286e-03,  2.4216e-02,  7.4463e-03,
           -7.1373e-03, -5.5809e-03,  1.4420e-02,  6.5575e-03, -2.0233e-02,
           -5.1155e-03, -6.2485e-03,  1.4900e-02,  1.3214e-02, -5.1765e-03,
           -2.1866e-02,  9.5901e-03, -2.8702e-02, -1.1284e-02,  5.1765e-03,
           -1.0445e-02,  1.0086e-02,  2.7370e-03, -5.3329e-03,  2.0523e-03,
            7.4310e-03]]]], dtype=torch.float16)
2025-05-16 03:02:41.035754 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), Tensor([2, 46, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 46],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0138, -0.0087,  0.0007,  0.0108,  0.0104, -0.0060, -0.0222,
           -0.0062,  0.0043,  0.0100,  0.0111,  0.0127, -0.0161,  0.0184,
            0.0037,  0.0050, -0.0033, -0.0012,  0.0181,  0.0062,  0.0132,
           -0.0103,  0.0222,  0.0030, -0.0246, -0.0129, -0.0151, -0.0336,
           -0.0096,  0.0065,  0.0098, -0.0138, -0.0193,  0.0443, -0.0053,
           -0.0154,  0.0080, -0.0202,  0.0164,  0.0338, -0.0229,  0.0072,
            0.0007, -0.0173,  0.0175,  0.0036]]],


        [[[ 0.0142, -0.0045, -0.0039, -0.0006,  0.0127, -0.0035,  0.0004,
            0.0115, -0.0076, -0.0032, -0.0130,  0.0026, -0.0051, -0.0254,
           -0.0125, -0.0021,  0.0103,  0.0151,  0.0126,  0.0149, -0.0047,
            0.0044, -0.0471,  0.0117,  0.0004, -0.0449,  0.0067,  0.0023,
            0.0060,  0.0153, -0.0408,  0.0005,  0.0104, -0.0005, -0.0052,
            0.0090,  0.0252,  0.0033,  0.0043, -0.0024,  0.0112, -0.0122,
            0.0104,  0.0132,  0.0199, -0.0094]]]], dtype=torch.float16)
2025-05-16 03:02:41.288418 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.5991e-02,  8.2703e-03,  3.1490e-03, -2.5436e-02,  8.5602e-03,
            1.7273e-02,  2.7191e-02, -7.4615e-03, -4.6778e-04,  6.0692e-03,
           -2.9251e-02, -2.9602e-03, -9.4376e-03, -2.3727e-02,  1.6281e-02,
           -1.6296e-02, -1.8784e-02,  4.4327e-03, -1.8463e-02,  4.3068e-03,
           -2.8000e-03,  1.7715e-02, -1.1093e-02,  6.8307e-05, -8.9722e-03,
            2.1076e-03,  4.8637e-03,  3.2318e-02,  3.9458e-04, -1.9705e-04,
            1.7044e-02, -1.1292e-02,  1.3496e-02,  1.7136e-02, -2.3544e-02,
            3.4058e-02, -1.0881e-03,  1.0424e-03,  5.5313e-03, -2.3232e-03,
            1.5808e-02, -4.2969e-02, -1.8326e-02,  8.6212e-03,  4.4107e-04,
           -1.6327e-02,  9.0485e-03]]],


        [[[-5.2605e-03,  7.5035e-03, -3.7174e-03, -1.6510e-02, -1.0353e-02,
            3.0121e-02,  2.8229e-02, -5.8929e-02, -5.9967e-03, -2.9888e-03,
            2.5558e-03,  6.3133e-03,  8.4839e-03, -1.7227e-02,  5.7297e-03,
           -3.0556e-03,  1.8326e-02,  2.7878e-02,  4.4289e-03, -1.8555e-02,
            4.1819e-04, -2.7802e-02, -1.4557e-02,  1.8692e-03,  2.7130e-02,
            1.1192e-02, -9.2545e-03,  2.9373e-03, -1.6052e-02, -5.4207e-03,
           -2.0416e-02, -1.1208e-02,  1.2054e-02, -2.1378e-02,  1.7242e-02,
           -1.9150e-02,  5.4779e-02,  1.6327e-02, -1.1208e-02, -1.9875e-03,
            4.1924e-03,  2.5387e-03, -2.4891e-04,  2.2125e-03,  1.2810e-02,
            8.6975e-03, -1.2772e-02]]]], dtype=torch.float16)
2025-05-16 03:02:41.537893 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 47],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0110,  0.0417, -0.0058, -0.0163, -0.0090, -0.0081,  0.0048,
            0.0116,  0.0229,  0.0293, -0.0140, -0.0032,  0.0174,  0.0137,
           -0.0094,  0.0145, -0.0012,  0.0015, -0.0011, -0.0083,  0.0156,
            0.0010,  0.0048,  0.0105, -0.0150, -0.0062, -0.0009, -0.0317,
            0.0005, -0.0365,  0.0185, -0.0081, -0.0011,  0.0032, -0.0212,
            0.0030, -0.0109,  0.0019, -0.0042,  0.0141,  0.0139, -0.0204,
           -0.0099,  0.0174,  0.0052, -0.0049, -0.0084]]],


        [[[-0.0031, -0.0162,  0.0171, -0.0109, -0.0083, -0.0264, -0.0081,
            0.0034,  0.0032, -0.0053, -0.0034, -0.0043,  0.0051, -0.0284,
            0.0223,  0.0286, -0.0240, -0.0198,  0.0011,  0.0024,  0.0062,
            0.0131,  0.0024,  0.0239,  0.0045, -0.0257,  0.0118, -0.0139,
           -0.0170, -0.0049,  0.0021, -0.0024,  0.0059,  0.0090,  0.0139,
            0.0154, -0.0107, -0.0098,  0.0293, -0.0072, -0.0085,  0.0040,
            0.0021,  0.0147,  0.0216, -0.0023, -0.0026]]]],
       dtype=torch.float16)
2025-05-16 03:02:41.791895 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 48],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0100, -0.0188,  0.0087, -0.0235, -0.0090, -0.0050, -0.0012,
            0.0193,  0.0272, -0.0174, -0.0031, -0.0081, -0.0201, -0.0030,
            0.0091, -0.0013, -0.0038, -0.0037, -0.0089, -0.0014, -0.0022,
           -0.0166, -0.0283,  0.0194, -0.0116,  0.0237,  0.0170,  0.0077,
            0.0072,  0.0143, -0.0021,  0.0072,  0.0068, -0.0121,  0.0199,
            0.0107, -0.0028, -0.0131, -0.0091,  0.0178, -0.0098, -0.0103,
            0.0199, -0.0107,  0.0064, -0.0019,  0.0175, -0.0115]]],


        [[[ 0.0043,  0.0115,  0.0194,  0.0033,  0.0121, -0.0015, -0.0223,
            0.0022,  0.0103,  0.0038,  0.0234,  0.0140, -0.0004, -0.0055,
           -0.0229,  0.0065,  0.0292, -0.0499, -0.0034, -0.0076, -0.0213,
            0.0190, -0.0035,  0.0130,  0.0034,  0.0112,  0.0062,  0.0048,
           -0.0115, -0.0049, -0.0010, -0.0218, -0.0024,  0.0169,  0.0045,
           -0.0043,  0.0046, -0.0034, -0.0056, -0.0057, -0.0005, -0.0062,
            0.0145,  0.0027,  0.0126, -0.0093, -0.0124, -0.0264]]]],
       dtype=torch.float16)
2025-05-16 03:02:41.981106 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), Tensor([2, 48, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 48],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0040,  0.0002,  0.0544,  0.0240,  0.0041, -0.0253,  0.0097,
           -0.0044, -0.0018, -0.0055,  0.0130,  0.0113, -0.0305,  0.0021,
           -0.0014, -0.0107, -0.0032,  0.0074, -0.0179,  0.0101,  0.0088,
           -0.0106,  0.0090,  0.0221, -0.0132, -0.0196, -0.0093,  0.0089,
           -0.0012,  0.0027,  0.0075,  0.0037, -0.0077,  0.0299,  0.0067,
           -0.0134, -0.0062,  0.0066,  0.0017, -0.0250, -0.0078, -0.0087,
           -0.0170, -0.0052, -0.0041,  0.0122,  0.0103, -0.0128]]],


        [[[-0.0142, -0.0080,  0.0132,  0.0136, -0.0007,  0.0092, -0.0079,
            0.0082,  0.0064, -0.0021,  0.0045,  0.0084, -0.0084, -0.0017,
            0.0006,  0.0038,  0.0248, -0.0179,  0.0039, -0.0005,  0.0154,
           -0.0011, -0.0240,  0.0268, -0.0426, -0.0121,  0.0112, -0.0091,
           -0.0010,  0.0291,  0.0104,  0.0107, -0.0070,  0.0082, -0.0076,
           -0.0003, -0.0061, -0.0177, -0.0371,  0.0013,  0.0105,  0.0142,
            0.0045, -0.0094,  0.0046,  0.0014, -0.0102,  0.0019]]]],
       dtype=torch.float16)
2025-05-16 03:02:42.199473 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 49],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 5.7831e-03,  2.4452e-03, -8.0490e-03, -1.3838e-03, -1.0643e-02,
            1.1940e-02,  1.1543e-02, -4.2458e-03, -1.7376e-03, -3.6297e-03,
            2.0313e-03,  2.5070e-02,  2.0294e-03, -6.6566e-03,  1.5671e-02,
           -2.5009e-02, -5.7640e-03,  6.6986e-03, -2.5921e-03,  3.4389e-03,
           -1.0643e-03,  1.4372e-03,  5.8136e-03,  1.2123e-02,  2.8896e-03,
           -7.4654e-03, -1.0658e-02,  7.3166e-03,  5.9395e-03, -4.1260e-02,
            5.7602e-03, -1.4791e-03, -3.9825e-03,  4.2057e-04,  1.1200e-02,
            2.7537e-04, -5.2567e-03,  1.3245e-02,  4.4136e-03, -1.6663e-02,
           -2.9953e-02,  1.6527e-03, -3.4828e-03,  1.0117e-02, -6.8893e-03,
            1.7593e-02,  5.5809e-03, -1.4753e-03,  6.8703e-03]]],


        [[[-9.3384e-03, -8.1940e-03, -1.8892e-03,  2.1103e-02,  4.0703e-03,
           -6.7215e-03,  1.4992e-02, -1.5688e-03, -3.6697e-03, -3.7422e-03,
           -2.0813e-02,  6.9237e-03,  7.0267e-03, -3.1071e-03,  2.2568e-02,
           -7.8440e-04,  2.2156e-02, -2.0187e-02, -2.0523e-03,  8.0338e-03,
            8.0261e-03, -7.6652e-05,  1.3971e-03, -1.4496e-02, -1.3374e-02,
           -9.1553e-03, -8.8959e-03,  8.1482e-03, -5.5695e-03, -8.1253e-03,
            7.7133e-03, -1.7776e-02,  1.2093e-02, -4.1656e-03, -1.1192e-02,
           -8.4000e-03,  4.1313e-03,  1.4877e-03, -5.3358e-04,  6.1035e-03,
           -8.1024e-03,  1.5358e-02,  1.6769e-02,  1.6830e-02, -7.4043e-03,
           -1.7548e-02,  3.9902e-03,  1.4183e-02, -6.2027e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:42.386536 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), Tensor([2, 49, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 49],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0046, -0.0035, -0.0168,  0.0102, -0.0003,  0.0038, -0.0013,
            0.0187,  0.0025, -0.0087, -0.0046,  0.0163, -0.0135, -0.0508,
           -0.0179, -0.0037, -0.0131,  0.0052, -0.0010,  0.0050,  0.0083,
            0.0117, -0.0181, -0.0283, -0.0047,  0.0174, -0.0252, -0.0003,
            0.0073,  0.0070, -0.0049, -0.0024,  0.0050,  0.0034,  0.0127,
            0.0067,  0.0202,  0.0314, -0.0237,  0.0026,  0.0127,  0.0094,
           -0.0048, -0.0123,  0.0409, -0.0013, -0.0073,  0.0068, -0.0013]]],


        [[[ 0.0053, -0.0124, -0.0012,  0.0099, -0.0026,  0.0033, -0.0247,
           -0.0075, -0.0085,  0.0064,  0.0037,  0.0058,  0.0156,  0.0095,
           -0.0015, -0.0021, -0.0212,  0.0152, -0.0127,  0.0352,  0.0225,
            0.0139,  0.0096, -0.0004,  0.0094,  0.0142,  0.0048, -0.0006,
            0.0050,  0.0059, -0.0032, -0.0104, -0.0211,  0.0025, -0.0238,
           -0.0247, -0.0094,  0.0024,  0.0117, -0.0068,  0.0016, -0.0030,
           -0.0229,  0.0052, -0.0067, -0.0035,  0.0315,  0.0004, -0.0194]]]],
       dtype=torch.float16)
2025-05-16 03:02:42.632693 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 50],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.3229e-02,  1.1215e-02,  3.1395e-03, -4.9095e-03, -5.8746e-04,
            1.7334e-02,  8.5688e-04, -1.9012e-02,  2.2064e-02,  2.8095e-03,
            3.7842e-03, -8.4839e-03,  1.1925e-02, -2.4384e-02,  7.3166e-03,
            1.0185e-02,  4.1931e-02,  6.2287e-05, -3.7628e-02, -1.8982e-02,
            1.6617e-02,  3.8849e-02, -1.3451e-02,  1.4439e-03, -9.2888e-04,
            7.2062e-05,  2.3300e-02,  2.7435e-02,  1.6403e-02,  1.1841e-02,
            2.6741e-03,  5.1231e-03, -8.7204e-03, -1.0567e-02, -2.0416e-02,
           -1.1063e-02,  3.7785e-03,  1.2115e-02, -5.0049e-03, -1.6693e-02,
           -1.0406e-02, -2.0050e-02, -2.1179e-02, -1.1269e-02, -2.7069e-02,
            2.5101e-03,  4.6654e-03, -1.1719e-02, -4.7722e-03,  2.1118e-02]]],


        [[[-2.1648e-03,  2.5650e-02, -1.5106e-03, -8.7738e-03,  2.9774e-03,
            1.8753e-02, -4.7226e-03, -1.0361e-02,  2.7485e-03, -1.6281e-02,
            2.6459e-02, -1.4473e-02, -4.5204e-03, -1.5823e-02, -4.3030e-03,
            2.6588e-03,  2.3010e-02,  3.9711e-03,  1.2695e-02, -7.1640e-03,
            3.1471e-03, -1.1009e-02, -8.2932e-03,  6.1989e-03, -5.6419e-03,
            1.2264e-03, -1.1940e-02, -1.1230e-02,  4.9667e-03, -5.0392e-03,
            2.7664e-02,  2.5725e-04,  1.9264e-04, -1.7090e-02, -7.6790e-03,
            7.0419e-03, -2.4399e-02, -1.2650e-02, -2.2339e-02,  3.4332e-02,
            1.2764e-02, -4.0030e-04, -7.9956e-03, -1.0544e-02,  2.1820e-02,
           -1.8494e-02,  6.2065e-03,  2.0370e-02,  2.6894e-03, -2.9297e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:42.866738 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 50],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0144, -0.0141, -0.0192, -0.0038,  0.0118,  0.0055,  0.0151,
           -0.0153,  0.0058, -0.0013,  0.0049,  0.0228,  0.0171, -0.0383,
           -0.0126, -0.0016,  0.0092,  0.0014,  0.0024, -0.0037,  0.0042,
           -0.0024,  0.0057,  0.0039, -0.0111,  0.0201, -0.0002, -0.0124,
            0.0223,  0.0006, -0.0089, -0.0025, -0.0378, -0.0052,  0.0106,
            0.0036,  0.0074,  0.0127,  0.0037, -0.0324,  0.0229,  0.0028,
           -0.0115, -0.0161, -0.0141,  0.0176, -0.0164,  0.0233, -0.0046,
            0.0137]]],


        [[[ 0.0063,  0.0202, -0.0028,  0.0332,  0.0044, -0.0091, -0.0222,
            0.0130, -0.0061, -0.0055, -0.0007, -0.0057,  0.0052,  0.0020,
           -0.0019, -0.0027,  0.0058, -0.0008, -0.0015, -0.0336, -0.0171,
            0.0084, -0.0147,  0.0089, -0.0001, -0.0171, -0.0049,  0.0106,
           -0.0245, -0.0091, -0.0154,  0.0226, -0.0212,  0.0246,  0.0118,
            0.0050, -0.0009,  0.0065,  0.0113, -0.0031, -0.0048, -0.0082,
            0.0048,  0.0033, -0.0037,  0.0121,  0.0124, -0.0067,  0.0151,
           -0.0032]]]], dtype=torch.float16)
2025-05-16 03:02:43.114982 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0070,  0.0147,  0.0018,  0.0033, -0.0020,  0.0071,  0.0029,
            0.0109, -0.0526, -0.0035, -0.0369, -0.0299,  0.0010,  0.0044,
            0.0125, -0.0161, -0.0434,  0.0239,  0.0169,  0.0096, -0.0182,
           -0.0108,  0.0059,  0.0228, -0.0175, -0.0045,  0.0229, -0.0164,
            0.0043, -0.0044, -0.0141,  0.0049,  0.0256,  0.0108,  0.0280,
           -0.0020, -0.0011,  0.0121, -0.0142,  0.0059,  0.0071, -0.0077,
           -0.0211,  0.0197, -0.0219, -0.0247,  0.0167,  0.0339,  0.0050,
            0.0116,  0.0098]]],


        [[[ 0.0232,  0.0213,  0.0068, -0.0288, -0.0117,  0.0052,  0.0068,
            0.0084, -0.0058,  0.0015,  0.0232, -0.0070,  0.0017, -0.0128,
            0.0218,  0.0069, -0.0103,  0.0158, -0.0326, -0.0106, -0.0104,
           -0.0051, -0.0011, -0.0122, -0.0006,  0.0004,  0.0390, -0.0151,
            0.0030, -0.0044, -0.0178,  0.0197, -0.0163, -0.0251,  0.0118,
           -0.0103, -0.0005, -0.0009, -0.0133,  0.0020, -0.0203,  0.0220,
            0.0230, -0.0202,  0.0224,  0.0144, -0.0088,  0.0014, -0.0076,
            0.0029,  0.0049]]]], dtype=torch.float16)
2025-05-16 03:02:43.306705 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 51],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0193,  0.0029,  0.0136,  0.0088,  0.0113, -0.0165, -0.0106,
            0.0050, -0.0009,  0.0101,  0.0101, -0.0068, -0.0077,  0.0086,
           -0.0037, -0.0060,  0.0138, -0.0115,  0.0081, -0.0188, -0.0019,
           -0.0062,  0.0107, -0.0166,  0.0341,  0.0068, -0.0032, -0.0243,
           -0.0166,  0.0013, -0.0035, -0.0250,  0.0075,  0.0249, -0.0075,
            0.0117, -0.0037,  0.0035, -0.0324, -0.0061,  0.0195, -0.0021,
            0.0033,  0.0120,  0.0031,  0.0010, -0.0220, -0.0011, -0.0047,
            0.0031,  0.0051]]],


        [[[ 0.0015,  0.0486, -0.0014, -0.0005,  0.0088, -0.0041, -0.0020,
           -0.0233,  0.0044, -0.0054, -0.0382, -0.0030,  0.0086,  0.0054,
            0.0044, -0.0315, -0.0066,  0.0084, -0.0208,  0.0286, -0.0004,
            0.0149,  0.0094, -0.0119,  0.0028, -0.0085, -0.0021,  0.0186,
           -0.0039, -0.0020,  0.0007,  0.0190,  0.0241, -0.0005, -0.0007,
           -0.0071, -0.0123, -0.0017,  0.0199, -0.0168, -0.0093, -0.0061,
            0.0063, -0.0038,  0.0141, -0.0030,  0.0091, -0.0148, -0.0064,
            0.0031, -0.0126]]]], dtype=torch.float16)
2025-05-16 03:02:43.482610 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 52],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0151, -0.0020,  0.0261, -0.0030,  0.0045, -0.0008, -0.0134,
           -0.0110, -0.0014, -0.0055, -0.0023, -0.0030, -0.0006, -0.0149,
           -0.0107, -0.0079, -0.0166,  0.0001,  0.0119, -0.0189, -0.0206,
           -0.0196, -0.0132, -0.0087, -0.0069,  0.0088,  0.0064,  0.0013,
           -0.0089,  0.0035,  0.0248,  0.0002,  0.0181,  0.0098,  0.0070,
           -0.0260,  0.0046,  0.0133, -0.0034, -0.0125,  0.0054,  0.0051,
            0.0059,  0.0185,  0.0052, -0.0009,  0.0249, -0.0117,  0.0263,
           -0.0033,  0.0134, -0.0124]]],


        [[[ 0.0084, -0.0045, -0.0012,  0.0163, -0.0019, -0.0022, -0.0190,
            0.0037,  0.0023,  0.0064,  0.0077,  0.0033, -0.0100,  0.0015,
            0.0098, -0.0087,  0.0111, -0.0035,  0.0072,  0.0348, -0.0009,
           -0.0083,  0.0209, -0.0043, -0.0054, -0.0094,  0.0172, -0.0136,
            0.0042, -0.0070,  0.0032, -0.0242,  0.0122, -0.0421,  0.0159,
            0.0040, -0.0016, -0.0360, -0.0011, -0.0268, -0.0113, -0.0018,
            0.0073,  0.0257,  0.0275, -0.0099, -0.0017, -0.0053, -0.0075,
            0.0135, -0.0046,  0.0095]]]], dtype=torch.float16)
2025-05-16 03:02:43.733389 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 52],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0032,  0.0018, -0.0095, -0.0206, -0.0056, -0.0191,  0.0074,
            0.0100,  0.0134, -0.0158,  0.0004,  0.0431, -0.0028,  0.0312,
            0.0005,  0.0084,  0.0129,  0.0188, -0.0056, -0.0008, -0.0090,
           -0.0045, -0.0104, -0.0056, -0.0145, -0.0171, -0.0184,  0.0053,
           -0.0220, -0.0023, -0.0238,  0.0102,  0.0198,  0.0038, -0.0103,
           -0.0145,  0.0053,  0.0263,  0.0023,  0.0006, -0.0020, -0.0053,
           -0.0050,  0.0072,  0.0112,  0.0208, -0.0195,  0.0148, -0.0220,
           -0.0165,  0.0250, -0.0012]]],


        [[[ 0.0031, -0.0185,  0.0009, -0.0063, -0.0011, -0.0074, -0.0069,
           -0.0059,  0.0029,  0.0275,  0.0180, -0.0129, -0.0048, -0.0037,
            0.0106, -0.0142, -0.0118, -0.0112,  0.0065, -0.0039, -0.0073,
            0.0003,  0.0126,  0.0299, -0.0013,  0.0202,  0.0064, -0.0030,
           -0.0011, -0.0093,  0.0011,  0.0015,  0.0075,  0.0029,  0.0032,
           -0.0114,  0.0164, -0.0081, -0.0009, -0.0106, -0.0078, -0.0035,
            0.0178, -0.0116,  0.0130, -0.0095, -0.0097,  0.0154,  0.0084,
           -0.0111, -0.0060, -0.0058]]]], dtype=torch.float16)
2025-05-16 03:02:43.982627 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 53],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0065, -0.0041,  0.0028,  0.0306,  0.0052, -0.0168,  0.0107,
           -0.0228, -0.0134,  0.0076, -0.0031, -0.0087,  0.0066,  0.0014,
           -0.0059, -0.0058,  0.0063,  0.0064,  0.0154,  0.0008, -0.0036,
           -0.0034, -0.0022, -0.0011,  0.0013, -0.0220, -0.0038, -0.0045,
            0.0018,  0.0124,  0.0092,  0.0072, -0.0050,  0.0175, -0.0298,
            0.0035, -0.0020, -0.0069, -0.0011,  0.0207,  0.0053,  0.0139,
           -0.0011, -0.0126, -0.0088,  0.0249, -0.0013,  0.0020, -0.0024,
           -0.0062, -0.0047, -0.0145, -0.0027]]],


        [[[-0.0164, -0.0039, -0.0253, -0.0055,  0.0029,  0.0099,  0.0015,
            0.0010,  0.0127, -0.0045, -0.0105,  0.0136,  0.0030, -0.0125,
            0.0034,  0.0163, -0.0125, -0.0138,  0.0081, -0.0002, -0.0074,
           -0.0144,  0.0075,  0.0032,  0.0237,  0.0171, -0.0271, -0.0177,
            0.0092,  0.0020,  0.0158,  0.0187, -0.0097,  0.0084, -0.0112,
            0.0085,  0.0104, -0.0084,  0.0136, -0.0019,  0.0001,  0.0094,
           -0.0093,  0.0030, -0.0110,  0.0049, -0.0210,  0.0180, -0.0152,
           -0.0147,  0.0039,  0.0218,  0.0025]]]], dtype=torch.float16)
2025-05-16 03:02:44.182111 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), Tensor([2, 53, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 53],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 1.5450e-02,  4.8431e-02, -4.4785e-03, -3.1281e-03, -2.1324e-03,
            8.1863e-03,  3.8757e-03,  2.4765e-02, -2.2675e-02, -1.5478e-03,
            1.7380e-02,  5.8861e-03,  1.0788e-02,  3.2597e-03, -1.8654e-03,
            2.3209e-02,  4.4937e-03,  9.6130e-04,  9.2621e-03,  3.2654e-03,
            1.1002e-02, -6.3820e-03,  9.5825e-03,  2.1954e-03, -1.4885e-02,
            7.0381e-03, -5.3406e-03, -3.0853e-02, -2.4704e-02, -3.0231e-03,
            9.0599e-04, -8.2321e-03,  1.3657e-03, -3.1605e-03, -2.0264e-02,
           -2.6455e-03,  1.5778e-02,  1.0101e-02, -4.5815e-03,  8.8348e-03,
           -1.0201e-02, -9.7580e-03,  6.2943e-03,  7.5102e-06,  2.4719e-03,
           -3.8635e-02, -1.0376e-02,  1.8723e-02, -9.3536e-03, -1.1177e-02,
           -1.4793e-02, -5.9662e-03, -3.2825e-03]]],


        [[[ 1.2253e-02, -4.6349e-03, -2.5558e-02, -1.4544e-03,  3.1319e-03,
           -2.3743e-02,  4.6844e-03,  6.9962e-03, -3.7460e-03,  2.4445e-02,
            3.8795e-03,  3.3600e-02,  9.2545e-03,  1.1414e-02, -1.2215e-02,
            8.0013e-04, -2.1164e-02,  2.9816e-02,  9.0103e-03, -7.1335e-03,
            8.0032e-03,  1.8402e-02, -1.1620e-02, -2.6340e-03,  1.8082e-02,
            4.1890e-04, -4.7035e-03,  2.3518e-03, -5.5389e-03, -6.3133e-04,
           -9.2545e-03, -1.4793e-02, -2.7542e-02, -5.7640e-03,  2.3697e-02,
           -8.2397e-03, -3.6049e-03,  1.5335e-03,  1.2970e-03, -1.3611e-02,
            2.3899e-03,  1.5656e-02,  5.5428e-03,  1.9474e-03,  6.3753e-04,
           -1.0956e-02,  8.4152e-03, -1.0109e-02, -4.1466e-03, -1.0132e-02,
           -8.9417e-03, -2.0035e-02,  1.4236e-02]]]], dtype=torch.float16)
2025-05-16 03:02:44.364782 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 54],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0052, -0.0096, -0.0132, -0.0028, -0.0113, -0.0266, -0.0176,
           -0.0355,  0.0031,  0.0067, -0.0141, -0.0053, -0.0008,  0.0093,
           -0.0091,  0.0090,  0.0036,  0.0240, -0.0082,  0.0230,  0.0025,
           -0.0095, -0.0157,  0.0149, -0.0032, -0.0139,  0.0063, -0.0025,
           -0.0001,  0.0182,  0.0174,  0.0011, -0.0043, -0.0088, -0.0045,
            0.0009,  0.0052,  0.0167,  0.0125,  0.0005, -0.0062,  0.0092,
            0.0020,  0.0110,  0.0190,  0.0078, -0.0097, -0.0113, -0.0089,
            0.0218,  0.0029, -0.0065, -0.0023,  0.0181]]],


        [[[-0.0067, -0.0235, -0.0075, -0.0182, -0.0023, -0.0024,  0.0083,
            0.0066, -0.0154,  0.0014,  0.0260, -0.0011,  0.0252, -0.0137,
            0.0077,  0.0104,  0.0030,  0.0016, -0.0228, -0.0034, -0.0012,
           -0.0060,  0.0004, -0.0080,  0.0037, -0.0125, -0.0006,  0.0032,
            0.0120,  0.0123,  0.0246,  0.0137,  0.0035, -0.0171, -0.0066,
            0.0059, -0.0118, -0.0117,  0.0184,  0.0075, -0.0079, -0.0169,
            0.0085,  0.0122,  0.0007, -0.0119,  0.0107, -0.0086,  0.0019,
            0.0004,  0.0061,  0.0068,  0.0069, -0.0116]]]],
       dtype=torch.float16)
2025-05-16 03:02:44.542376 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), Tensor([2, 54, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 54],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0032, -0.0142, -0.0050,  0.0015,  0.0032, -0.0022, -0.0067,
            0.0330,  0.0111, -0.0076, -0.0164,  0.0037,  0.0007, -0.0124,
           -0.0075,  0.0032, -0.0040,  0.0246, -0.0051, -0.0089, -0.0100,
           -0.0354, -0.0089, -0.0003,  0.0192, -0.0086,  0.0052,  0.0082,
            0.0083,  0.0086,  0.0117, -0.0057,  0.0037, -0.0228,  0.0071,
            0.0035,  0.0055, -0.0039, -0.0042, -0.0037,  0.0025,  0.0039,
           -0.0038,  0.0016,  0.0115,  0.0006,  0.0071, -0.0021,  0.0083,
           -0.0029,  0.0004,  0.0158, -0.0123, -0.0023]]],


        [[[-0.0233,  0.0062,  0.0089,  0.0029, -0.0029,  0.0062,  0.0213,
            0.0036,  0.0124, -0.0030,  0.0126, -0.0032,  0.0440, -0.0093,
           -0.0273,  0.0211,  0.0063,  0.0015,  0.0077,  0.0062, -0.0123,
            0.0114,  0.0012,  0.0079,  0.0149,  0.0065,  0.0186,  0.0067,
           -0.0004, -0.0031,  0.0066, -0.0073, -0.0172, -0.0163, -0.0287,
           -0.0028, -0.0089, -0.0062, -0.0208, -0.0176,  0.0007, -0.0069,
           -0.0014, -0.0612, -0.0092,  0.0057, -0.0010,  0.0064,  0.0107,
            0.0134, -0.0037,  0.0004,  0.0137,  0.0086]]]],
       dtype=torch.float16)
2025-05-16 03:02:44.791779 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 55],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-3.5572e-03, -3.3398e-03, -4.8141e-03, -2.5589e-02,  1.3046e-02,
           -2.1759e-02,  1.0290e-03,  3.9043e-03, -3.1090e-04, -4.6120e-03,
           -1.1597e-03,  1.0559e-02, -7.1955e-04, -1.4786e-02, -5.8289e-03,
            9.5749e-03,  1.5717e-02,  2.3926e-02, -9.7122e-03, -1.0490e-02,
            1.3847e-02,  1.6418e-02, -5.3024e-03,  7.5989e-03,  3.3207e-03,
           -7.6027e-03, -4.3716e-03,  6.7978e-03,  2.1858e-03, -4.8561e-03,
           -6.3477e-03,  1.5869e-02,  1.1833e-02,  2.0218e-02, -8.3389e-03,
           -4.6959e-03,  1.2299e-02, -7.3509e-03,  1.3039e-02,  1.2062e-02,
           -2.0561e-03,  4.9257e-04,  7.4387e-03, -4.8294e-03, -1.1879e-02,
           -2.1133e-02,  1.6098e-02, -4.6082e-03, -1.2215e-02,  4.2653e-04,
           -1.5991e-02, -1.6525e-02, -7.4692e-03,  1.7273e-02, -2.7542e-03]]],


        [[[ 1.7138e-03,  5.7755e-03, -2.1439e-03,  1.2871e-02, -5.6763e-03,
           -1.2445e-03,  2.2125e-03, -7.3586e-03,  1.9943e-02, -2.9392e-03,
            4.6921e-03, -2.3331e-02,  3.5076e-03,  1.6994e-03, -3.6987e-02,
           -8.8959e-03,  3.6526e-03, -1.3924e-03,  5.2490e-03,  1.6159e-02,
           -3.0334e-02, -1.4324e-03,  1.3451e-02, -6.5727e-03,  1.6388e-02,
           -4.9438e-03,  3.8319e-03, -2.5330e-03,  8.1177e-03,  1.3018e-03,
            8.8730e-03, -2.3849e-02,  1.5839e-02,  7.1831e-03,  5.6305e-03,
            1.2856e-02, -6.9160e-03,  3.4241e-02, -8.4915e-03,  3.7994e-03,
           -1.9592e-02,  1.7226e-05,  6.1951e-03,  1.2505e-02, -3.5133e-03,
            2.6665e-03, -1.0582e-02,  1.2749e-02, -4.9353e-04, -1.9791e-02,
            1.2192e-02, -1.4557e-02, -1.0071e-02,  4.5204e-03, -6.2370e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:44.986636 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), Tensor([2, 55, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 55],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0010,  0.0116,  0.0133,  0.0032, -0.0131,  0.0044, -0.0051,
            0.0058,  0.0037, -0.0068, -0.0030, -0.0009,  0.0069,  0.0101,
            0.0073, -0.0076,  0.0087,  0.0126, -0.0028,  0.0165, -0.0080,
            0.0092,  0.0288, -0.0071, -0.0242,  0.0112, -0.0155, -0.0017,
            0.0055, -0.0062,  0.0134,  0.0159, -0.0041,  0.0044,  0.0037,
           -0.0016,  0.0017, -0.0034, -0.0021,  0.0031, -0.0255, -0.0143,
           -0.0469,  0.0036, -0.0106, -0.0125,  0.0248,  0.0117, -0.0297,
            0.0104,  0.0192, -0.0145, -0.0025, -0.0128,  0.0113]]],


        [[[-0.0131, -0.0003,  0.0083, -0.0035, -0.0169, -0.0131, -0.0037,
            0.0031, -0.0016, -0.0060, -0.0014,  0.0189,  0.0126, -0.0009,
           -0.0181,  0.0017, -0.0356,  0.0019, -0.0009,  0.0132, -0.0091,
            0.0128, -0.0060,  0.0156, -0.0067,  0.0040, -0.0025,  0.0288,
           -0.0094,  0.0147, -0.0228,  0.0047, -0.0226, -0.0216,  0.0187,
            0.0061, -0.0034, -0.0075,  0.0175, -0.0015, -0.0194, -0.0102,
            0.0037, -0.0045, -0.0074,  0.0038,  0.0391,  0.0108,  0.0055,
            0.0059,  0.0271,  0.0300, -0.0083, -0.0102, -0.0200]]]],
       dtype=torch.float16)
2025-05-16 03:02:45.231386 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 56],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 2.9312e-02, -1.5587e-02, -1.1650e-02, -7.9346e-04,  7.5607e-03,
            4.1809e-03, -2.1835e-02,  8.0414e-03,  1.3132e-03, -1.0666e-02,
            7.3767e-04, -3.5725e-03, -2.4323e-02,  2.0996e-02, -1.8969e-03,
            1.1200e-02,  1.4057e-03, -3.0193e-03, -8.8196e-03, -2.3689e-03,
            1.7792e-02, -1.0254e-02, -4.0092e-03, -3.9246e-02,  2.2217e-02,
           -3.4809e-03,  1.8616e-03,  3.4103e-03,  1.0590e-02,  1.7328e-03,
           -2.0332e-03, -1.7059e-02,  2.5139e-03,  2.7776e-05,  3.9215e-03,
           -8.0032e-03,  7.4482e-04, -2.9507e-03,  1.5640e-02,  1.5926e-03,
            1.0567e-02,  1.2466e-02,  1.1086e-02,  1.9016e-03, -8.1177e-03,
            1.1086e-02,  5.2414e-03, -1.4206e-02, -3.3054e-03,  9.0256e-03,
            3.2234e-03, -1.0376e-02,  1.9760e-03, -9.4452e-03,  1.1230e-02,
           -7.5569e-03]]],


        [[[-6.0196e-03,  9.7961e-03, -1.2741e-02,  1.7273e-02, -3.5736e-02,
           -9.7809e-03,  2.9202e-03,  6.5575e-03,  4.7264e-03,  1.6968e-02,
            1.0551e-02, -1.7746e-02, -8.8959e-03, -3.6240e-03,  6.9847e-03,
            1.9180e-02, -3.0956e-03,  8.2874e-04, -1.6815e-02, -1.7471e-02,
           -4.9667e-03,  1.0445e-02,  8.5144e-03,  1.4893e-02, -5.9664e-05,
           -7.8583e-03, -5.3101e-03, -1.5345e-03,  1.9217e-04, -2.0798e-02,
           -7.5226e-03,  1.8600e-02,  1.4252e-02,  8.1406e-03, -5.6791e-04,
           -3.6449e-03, -5.0201e-03,  2.4853e-03,  7.8964e-03, -7.9346e-03,
           -1.6689e-06, -6.3896e-03,  8.4534e-03, -9.7961e-03,  9.9411e-03,
           -2.4681e-03, -1.1543e-02, -1.4297e-02, -1.0635e-02, -1.0405e-03,
           -3.9062e-03,  9.9487e-03,  6.8893e-03,  1.3947e-02,  1.5373e-02,
            1.1505e-02]]]], dtype=torch.float16)
2025-05-16 03:02:45.420319 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), Tensor([2, 56, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 56],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-2.7695e-03,  5.0011e-03, -1.4257e-04,  2.6810e-02, -3.9520e-03,
            6.4392e-03,  2.0943e-03, -5.0240e-03, -5.1041e-03,  5.9967e-03,
           -8.7585e-03,  1.4076e-03, -2.2873e-02, -1.0490e-02, -1.0269e-02,
            6.7329e-03, -8.2016e-03, -9.2010e-03, -1.3733e-02,  2.6016e-03,
           -6.7749e-03,  7.1526e-03,  2.6855e-03, -5.3368e-03, -2.8362e-03,
            1.3489e-02, -1.1032e-02, -4.5967e-03, -8.4610e-03, -3.9330e-03,
            1.9257e-02,  1.1559e-02, -1.0437e-02, -1.2970e-03, -2.2373e-03,
           -4.3373e-03, -1.0040e-02, -1.3466e-03,  4.9820e-03, -3.5610e-03,
           -7.4806e-03, -1.2836e-03,  3.2272e-03, -8.7786e-04,  2.1759e-02,
            1.1635e-02, -7.1716e-03,  3.4241e-02, -4.4556e-03,  4.9400e-03,
            2.3560e-02,  1.4858e-03, -9.9182e-03,  1.7639e-02, -4.0855e-03,
           -2.2705e-02]]],


        [[[ 1.0475e-02, -2.2537e-02, -5.1346e-03,  3.3169e-03, -9.1553e-03,
            8.0566e-03,  1.6571e-02, -4.1161e-03,  2.6108e-02,  9.0637e-03,
           -4.2877e-03, -2.6817e-03, -5.7983e-04,  1.9455e-02, -1.4069e-02,
            5.7526e-03,  5.3940e-03,  4.8180e-03, -9.2316e-03, -6.6795e-03,
            3.0670e-02,  1.8875e-02,  2.1534e-03, -4.5624e-03,  9.5749e-03,
            7.3433e-03,  1.6754e-02, -7.5417e-03, -6.9237e-03, -1.9608e-03,
           -2.3041e-02, -3.2898e-02, -6.0120e-03, -5.3263e-04, -7.7133e-03,
           -2.4259e-05,  6.5689e-03,  5.1155e-03, -2.9297e-03, -1.2955e-02,
           -2.0630e-02, -4.8637e-03,  2.0885e-03,  7.8888e-03, -2.3590e-02,
            2.3010e-02, -3.2471e-02, -8.8730e-03,  2.1291e-04, -8.6136e-03,
           -8.4496e-04, -5.0430e-03,  1.4748e-02,  1.6525e-02,  6.4354e-03,
            1.3542e-02]]]], dtype=torch.float16)
2025-05-16 03:02:45.612085 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 57],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0336,  0.0026,  0.0141,  0.0121,  0.0074,  0.0009, -0.0016,
            0.0013,  0.0025, -0.0122,  0.0114, -0.0157,  0.0202, -0.0055,
           -0.0182,  0.0047,  0.0260, -0.0106,  0.0126, -0.0139, -0.0081,
            0.0314,  0.0140,  0.0137, -0.0134, -0.0148, -0.0085, -0.0005,
           -0.0039,  0.0190, -0.0021,  0.0241,  0.0026, -0.0013, -0.0044,
           -0.0068, -0.0149,  0.0130, -0.0011,  0.0006,  0.0084,  0.0017,
            0.0153, -0.0103, -0.0053, -0.0076, -0.0243, -0.0257,  0.0066,
           -0.0051, -0.0100, -0.0089,  0.0179, -0.0062,  0.0148, -0.0089,
            0.0042]]],


        [[[ 0.0078, -0.0003,  0.0055, -0.0117,  0.0125,  0.0072, -0.0141,
            0.0004,  0.0040, -0.0062, -0.0081,  0.0208,  0.0080,  0.0147,
           -0.0044,  0.0280, -0.0026,  0.0327,  0.0011,  0.0137, -0.0094,
           -0.0094, -0.0007, -0.0122,  0.0081, -0.0107,  0.0030, -0.0261,
           -0.0110, -0.0123, -0.0086, -0.0093, -0.0094, -0.0014, -0.0092,
            0.0050,  0.0028,  0.0067, -0.0088,  0.0047,  0.0001, -0.0013,
            0.0042, -0.0103, -0.0002,  0.0120,  0.0051, -0.0121,  0.0073,
           -0.0032, -0.0045,  0.0028, -0.0105,  0.0045,  0.0150, -0.0067,
           -0.0028]]]], dtype=torch.float16)
2025-05-16 03:02:45.854806 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 57],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0004, -0.0079, -0.0106,  0.0021, -0.0235, -0.0100,  0.0143,
           -0.0272,  0.0051, -0.0019,  0.0036, -0.0016, -0.0030,  0.0188,
           -0.0080, -0.0051, -0.0040,  0.0118, -0.0056,  0.0034, -0.0101,
           -0.0029,  0.0069, -0.0025,  0.0081, -0.0052, -0.0142,  0.0034,
            0.0007, -0.0156, -0.0013, -0.0082,  0.0089, -0.0050,  0.0117,
            0.0042,  0.0017,  0.0067,  0.0161, -0.0106,  0.0107, -0.0018,
            0.0150,  0.0151,  0.0023,  0.0096,  0.0037,  0.0156, -0.0005,
           -0.0001,  0.0204, -0.0233, -0.0200,  0.0009,  0.0064, -0.0011,
            0.0031]]],


        [[[ 0.0106, -0.0086,  0.0154, -0.0043, -0.0013, -0.0163, -0.0060,
            0.0018,  0.0093,  0.0069,  0.0135, -0.0065, -0.0029,  0.0141,
            0.0191,  0.0183,  0.0127, -0.0115,  0.0027, -0.0019,  0.0020,
            0.0064, -0.0166,  0.0065, -0.0150, -0.0152,  0.0113, -0.0051,
           -0.0124,  0.0033,  0.0041, -0.0021, -0.0143, -0.0018, -0.0009,
            0.0095,  0.0120,  0.0099, -0.0023,  0.0077, -0.0060,  0.0025,
           -0.0018,  0.0039, -0.0178,  0.0030, -0.0098,  0.0002, -0.0103,
            0.0095, -0.0173,  0.0097, -0.0114, -0.0062, -0.0021, -0.0007,
            0.0025]]]], dtype=torch.float16)
2025-05-16 03:02:46.099801 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 58],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0138, -0.0163,  0.0163, -0.0177,  0.0033, -0.0105,  0.0023,
           -0.0100,  0.0042, -0.0062,  0.0025,  0.0181, -0.0040, -0.0096,
           -0.0244, -0.0013,  0.0028, -0.0035,  0.0106, -0.0136,  0.0119,
            0.0035,  0.0008,  0.0135, -0.0120,  0.0186, -0.0112,  0.0040,
           -0.0023,  0.0043, -0.0030,  0.0066,  0.0028, -0.0131,  0.0052,
           -0.0021, -0.0098, -0.0103,  0.0029, -0.0082,  0.0209,  0.0037,
           -0.0029,  0.0021, -0.0097,  0.0134, -0.0195,  0.0096,  0.0128,
           -0.0066,  0.0193,  0.0052, -0.0020,  0.0106,  0.0056, -0.0196,
           -0.0030,  0.0011]]],


        [[[-0.0300,  0.0132,  0.0190,  0.0043,  0.0018,  0.0142, -0.0018,
           -0.0026,  0.0077,  0.0068, -0.0158, -0.0173,  0.0062, -0.0136,
            0.0103,  0.0178, -0.0142, -0.0213, -0.0115,  0.0069,  0.0124,
            0.0096, -0.0127, -0.0139,  0.0053, -0.0035,  0.0206, -0.0100,
            0.0237,  0.0089,  0.0186,  0.0038,  0.0034,  0.0131, -0.0065,
           -0.0026, -0.0001,  0.0034, -0.0020,  0.0079,  0.0049,  0.0078,
           -0.0043, -0.0035, -0.0024, -0.0195, -0.0348,  0.0070,  0.0282,
           -0.0011, -0.0120,  0.0002,  0.0116,  0.0024, -0.0054, -0.0078,
           -0.0327,  0.0024]]]], dtype=torch.float16)
2025-05-16 03:02:46.355279 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), Tensor([2, 58, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 58],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 2.1400e-03, -1.2451e-02, -1.1536e-02,  9.2468e-03,  4.1809e-03,
           -1.9484e-03, -1.1185e-02,  2.5360e-02,  1.3634e-02,  2.4185e-02,
           -1.1246e-02, -4.2648e-03, -1.7939e-03,  8.8806e-03, -3.2616e-03,
           -2.5894e-02,  6.3181e-05, -2.4612e-02, -5.7373e-03, -1.2619e-02,
            5.5580e-03,  2.2182e-03,  1.5656e-02,  3.5858e-03, -2.6855e-03,
            2.8820e-03, -5.8403e-03,  5.9013e-03, -9.0485e-03, -2.1839e-03,
           -1.1168e-03, -3.2501e-02,  9.7275e-03,  3.0956e-03, -1.2024e-02,
           -2.5146e-02, -3.5667e-03, -1.0719e-03, -2.0752e-03, -4.8141e-03,
            1.3084e-03,  8.4381e-03, -6.2141e-03,  1.7838e-02, -6.8626e-03,
            1.7868e-02,  1.2672e-02, -4.6692e-03,  2.4780e-02,  2.0660e-02,
           -8.0566e-03, -8.1863e-03, -5.1460e-03,  2.8564e-02,  2.7664e-02,
           -1.5366e-02, -1.7166e-03, -1.1269e-02]]],


        [[[ 1.0201e-02, -2.6464e-04,  1.0391e-02,  7.5340e-03, -1.2865e-03,
           -1.5640e-02,  1.5879e-03,  1.4137e-02, -2.7809e-03, -1.0567e-02,
            5.0659e-03, -1.6617e-02, -2.1103e-02, -1.4709e-02, -1.0841e-02,
            1.2741e-02,  8.0643e-03,  6.9380e-04,  8.7433e-03,  1.6327e-02,
           -1.2312e-03,  1.4610e-03,  5.9891e-04,  3.7746e-03, -8.4686e-04,
            5.2261e-03,  2.8351e-02, -1.3855e-02, -1.6983e-02,  1.4984e-02,
            2.9812e-03,  9.4910e-03, -2.6345e-04,  1.2863e-04,  2.2984e-03,
           -1.8387e-02, -1.4885e-02, -1.9670e-05,  5.4321e-03,  1.8997e-02,
           -6.2256e-03,  1.8559e-03, -3.0228e-02,  2.4872e-03, -1.3142e-03,
            1.4320e-02, -3.1799e-02,  5.4855e-03, -1.5564e-02, -1.5022e-02,
            3.7384e-03,  4.3797e-04, -9.4223e-03,  4.6158e-03,  1.7838e-02,
            1.1192e-02,  4.2992e-03,  1.4381e-02]]]], dtype=torch.float16)
2025-05-16 03:02:46.546733 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 59],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-5.5923e-03,  1.1322e-02, -9.8190e-03,  1.8494e-02,  3.0880e-03,
           -5.3406e-03, -1.1345e-02, -2.0508e-02,  6.1646e-03, -4.8447e-03,
            1.4458e-02, -1.0023e-03, -1.4771e-02, -1.6037e-02,  4.4098e-03,
            1.0429e-02,  1.3809e-03,  2.9106e-03, -3.1910e-03, -2.7704e-04,
           -9.0256e-03, -4.5700e-03,  4.8027e-03, -3.4904e-04, -2.5146e-02,
           -2.3773e-02, -1.0971e-02,  3.0851e-04, -4.4975e-03,  2.7523e-03,
            1.3466e-02,  1.1246e-02, -4.5509e-03,  6.1531e-03, -4.2458e-03,
           -1.9440e-02,  1.0239e-02,  2.1505e-04, -3.1624e-03, -3.2082e-03,
            2.9182e-03,  1.6861e-02, -4.1084e-03,  4.0703e-03,  2.9617e-02,
            2.0340e-02,  4.7035e-03, -8.5983e-03,  1.2836e-03,  7.5989e-03,
            7.4577e-03, -1.0979e-02, -2.9221e-02,  2.2491e-02,  1.7548e-04,
            7.0992e-03,  8.7280e-03,  1.0590e-02, -7.2670e-03]]],


        [[[-4.6234e-03, -6.3286e-03, -9.6664e-03, -1.3115e-02,  1.6966e-03,
            2.3041e-03, -3.8567e-03,  1.7347e-03,  1.0498e-02,  6.0692e-03,
            1.0193e-02, -9.2926e-03,  9.7275e-03,  2.6016e-02,  2.1469e-02,
            1.1673e-02, -4.4060e-03,  3.3932e-03, -2.2415e-02, -1.1147e-02,
           -3.5648e-03,  6.9618e-03,  1.7929e-02,  5.1677e-05, -8.5754e-03,
            1.3170e-03,  1.9135e-02,  9.2316e-03, -2.7561e-03, -3.4428e-03,
           -6.1455e-03, -1.5450e-03, -2.3289e-03, -2.0447e-02, -1.8911e-03,
            4.6997e-03,  7.1754e-03,  4.4975e-03,  6.3667e-03,  1.8425e-03,
           -7.4043e-03, -2.3689e-03,  7.1297e-03, -5.6038e-03, -1.1467e-02,
            4.3416e-04, -1.3573e-02,  9.0485e-03,  1.8425e-03, -3.3627e-03,
           -5.8126e-04,  7.3242e-03, -5.2147e-03, -6.5346e-03,  1.6434e-02,
           -2.9659e-03, -1.1513e-02, -1.5289e-02, -4.7340e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:46.792472 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 59],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-8.9340e-03, -1.4130e-02, -1.3855e-02, -8.7509e-03, -8.9798e-03,
            5.1346e-03, -2.9640e-03,  1.0117e-02, -7.1297e-03,  1.3641e-02,
            2.1942e-02,  4.8409e-03,  1.2741e-02, -1.5839e-02,  9.6893e-03,
            1.8982e-02,  4.6387e-03, -3.2867e-02, -4.3392e-04, -8.5735e-04,
            8.1406e-03,  1.7853e-02,  3.9520e-03,  2.5620e-02, -2.8259e-02,
           -5.1308e-03, -1.6266e-02,  7.9269e-03, -3.2005e-03, -1.4931e-02,
            4.5242e-03, -3.7575e-03, -1.0395e-03, -4.4286e-05,  8.3008e-03,
           -9.8267e-03, -2.5284e-02, -3.7384e-03,  2.3861e-03,  2.5978e-03,
           -1.8530e-03,  6.7329e-04, -1.5507e-03,  1.0956e-02, -3.8971e-02,
            8.3008e-03,  9.4452e-03, -1.1930e-03,  6.7291e-03,  1.1505e-02,
           -5.1270e-03,  1.6296e-02,  1.0841e-02,  4.4479e-03,  1.0330e-02,
           -6.4621e-03, -8.4457e-03,  1.4030e-02,  3.2597e-03]]],


        [[[ 3.0106e-02, -3.7994e-03, -4.9782e-03, -4.5204e-03,  1.6342e-02,
           -7.1430e-04,  2.0355e-02,  1.0729e-04,  4.5288e-02, -7.0610e-03,
            1.4374e-02, -3.8086e-02,  7.6256e-03, -4.5776e-03, -4.0665e-03,
           -9.2697e-03, -3.3691e-02,  2.8534e-03, -7.8201e-03, -1.7075e-02,
           -2.9526e-03,  3.3600e-02, -1.7349e-02, -1.3985e-02,  1.4236e-02,
            1.1757e-02,  7.3767e-04, -1.6510e-02, -5.3062e-03,  1.2276e-02,
            1.0345e-02,  2.2278e-03,  1.6083e-02,  1.1765e-02, -1.4389e-02,
            2.4986e-03, -2.0737e-02,  8.2922e-04, -1.5640e-02,  8.7891e-03,
            2.6679e-04,  8.4381e-03, -6.5002e-03,  2.7504e-03, -9.1648e-04,
           -1.0490e-02, -6.6681e-03, -1.7517e-02, -8.2626e-03,  5.9433e-03,
           -9.1248e-03,  1.2421e-02,  5.2299e-03,  1.1177e-02,  3.2845e-03,
            1.7576e-03,  1.3557e-02, -1.3329e-02, -1.1620e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:46.981951 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 60],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0097,  0.0081,  0.0069, -0.0155, -0.0121,  0.0002,  0.0042,
           -0.0114, -0.0028,  0.0074, -0.0037, -0.0118,  0.0011, -0.0065,
            0.0078,  0.0109,  0.0051, -0.0099, -0.0035,  0.0045,  0.0141,
            0.0069,  0.0359, -0.0005,  0.0129,  0.0042,  0.0199,  0.0050,
           -0.0011, -0.0289,  0.0045,  0.0017,  0.0014, -0.0152, -0.0024,
           -0.0107, -0.0134, -0.0025,  0.0252,  0.0093,  0.0094,  0.0045,
            0.0130, -0.0095,  0.0174, -0.0133,  0.0207, -0.0083, -0.0061,
            0.0104, -0.0370,  0.0036, -0.0160, -0.0114, -0.0095,  0.0045,
           -0.0166, -0.0051, -0.0030, -0.0028]]],


        [[[ 0.0094, -0.0020, -0.0075,  0.0046,  0.0141,  0.0039,  0.0004,
           -0.0112,  0.0095,  0.0041,  0.0104,  0.0082,  0.0028, -0.0088,
           -0.0006, -0.0099, -0.0016, -0.0052, -0.0001,  0.0146, -0.0108,
            0.0001,  0.0017, -0.0097,  0.0005, -0.0009, -0.0075,  0.0079,
           -0.0067, -0.0038,  0.0016, -0.0027, -0.0001,  0.0097, -0.0214,
           -0.0041,  0.0033, -0.0036,  0.0021, -0.0141,  0.0083,  0.0035,
           -0.0092,  0.0015,  0.0078,  0.0124, -0.0215, -0.0056, -0.0082,
            0.0174,  0.0113, -0.0108,  0.0100,  0.0103, -0.0089,  0.0098,
           -0.0010,  0.0002, -0.0057,  0.0020]]]], dtype=torch.float16)
2025-05-16 03:02:47.160546 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), Tensor([2, 60, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 60],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0071, -0.0133,  0.0151,  0.0085, -0.0077,  0.0050,  0.0021,
           -0.0081,  0.0004,  0.0144,  0.0060,  0.0162, -0.0076,  0.0098,
           -0.0029, -0.0010,  0.0101, -0.0111, -0.0007,  0.0024,  0.0041,
           -0.0111,  0.0046, -0.0038, -0.0069,  0.0225, -0.0084, -0.0219,
           -0.0047, -0.0120,  0.0009,  0.0188,  0.0065,  0.0089,  0.0120,
            0.0128,  0.0202, -0.0151,  0.0060, -0.0187, -0.0215, -0.0062,
           -0.0150,  0.0161, -0.0076,  0.0002, -0.0039,  0.0023,  0.0100,
           -0.0007,  0.0097, -0.0051, -0.0224, -0.0109, -0.0133,  0.0293,
            0.0138, -0.0134,  0.0003, -0.0209]]],


        [[[ 0.0091,  0.0024,  0.0007,  0.0175, -0.0043,  0.0031, -0.0205,
            0.0041, -0.0027, -0.0020,  0.0128, -0.0081,  0.0035, -0.0031,
           -0.0065,  0.0055, -0.0182, -0.0088, -0.0069, -0.0173,  0.0034,
            0.0021,  0.0028, -0.0015, -0.0049,  0.0246, -0.0042, -0.0105,
            0.0063, -0.0089, -0.0037,  0.0025,  0.0021, -0.0046, -0.0001,
           -0.0038,  0.0183, -0.0007, -0.0038, -0.0072,  0.0043, -0.0062,
            0.0161,  0.0004,  0.0226, -0.0033, -0.0060,  0.0132,  0.0163,
            0.0018, -0.0036, -0.0085, -0.0016, -0.0135,  0.0015,  0.0120,
           -0.0101, -0.0158,  0.0087,  0.0030]]]], dtype=torch.float16)
2025-05-16 03:02:47.414260 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 61],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 3.1815e-03, -5.9986e-04, -7.7903e-05, -4.9286e-03, -1.1299e-02,
           -1.2802e-02, -6.4964e-03, -5.6076e-04,  4.5662e-03,  5.5265e-04,
           -9.5520e-03, -1.1131e-02,  1.7090e-02,  1.3405e-02, -1.0357e-03,
           -1.1398e-02,  4.5319e-03, -7.8583e-03,  1.5228e-02,  7.6828e-03,
           -2.1935e-03,  6.8665e-04, -1.1377e-03, -4.3564e-03,  4.7150e-03,
            3.1452e-03, -8.5068e-03,  2.8820e-03, -5.3139e-03, -3.0228e-02,
           -8.2550e-03,  2.4204e-03, -1.3184e-02,  1.8215e-03,  5.9662e-03,
           -1.6260e-03,  9.4557e-04, -1.8225e-03,  1.6525e-02, -1.2840e-02,
           -3.6931e-04, -3.7231e-03, -5.8975e-03, -2.3621e-02, -1.2291e-02,
            3.0403e-03, -1.1108e-02,  9.2163e-03,  2.1561e-02,  1.1642e-02,
           -1.7691e-03,  1.5427e-02,  8.0338e-03,  1.4366e-02,  3.1261e-03,
            6.2227e-04,  5.2223e-03, -1.9760e-02,  1.3870e-02,  5.4779e-03,
            2.8732e-02]]],


        [[[ 8.8196e-03,  1.4877e-03,  7.0906e-04, -1.3275e-02,  8.6823e-03,
            1.2230e-02,  3.7880e-03, -4.8332e-03, -7.8888e-03,  1.3084e-03,
            9.6664e-03, -9.2850e-03,  1.1490e-02,  5.5351e-03, -1.6968e-02,
           -4.8981e-03, -6.2447e-03,  7.2174e-03, -7.3662e-03, -8.1635e-03,
           -2.0859e-02,  1.0002e-02,  6.2447e-03,  4.8447e-03,  5.8365e-03,
           -1.0090e-03,  1.3971e-03,  7.1259e-03,  2.2087e-03, -3.3722e-03,
            5.1575e-03, -9.8801e-03, -9.1705e-03, -5.1804e-03, -4.4785e-03,
           -1.1845e-03, -8.5449e-03,  6.2180e-03, -6.5804e-03, -8.5211e-04,
            2.2316e-03,  3.0479e-03,  2.5436e-02,  6.0692e-03, -2.4872e-02,
           -5.8060e-03, -6.8970e-03,  1.2947e-02,  7.3967e-03,  6.1264e-03,
            1.2789e-03,  9.8114e-03,  3.0880e-03,  5.9853e-03,  9.3613e-03,
           -4.8971e-04, -1.5221e-03, -6.8245e-03, -1.6235e-02,  9.4299e-03,
           -9.5215e-03]]]], dtype=torch.float16)
2025-05-16 03:02:47.614921 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), Tensor([2, 61, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 61],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0171,  0.0246, -0.0020, -0.0005,  0.0112, -0.0105,  0.0009,
           -0.0127, -0.0078,  0.0003,  0.0061, -0.0030,  0.0050,  0.0186,
            0.0084, -0.0037,  0.0183,  0.0150, -0.0159,  0.0038,  0.0199,
           -0.0011,  0.0059, -0.0016,  0.0008, -0.0217,  0.0014, -0.0048,
           -0.0203,  0.0008,  0.0266, -0.0082,  0.0008, -0.0262,  0.0145,
           -0.0057, -0.0101,  0.0108,  0.0475,  0.0040, -0.0038, -0.0032,
           -0.0058,  0.0135,  0.0018,  0.0044, -0.0037,  0.0044, -0.0043,
            0.0010, -0.0012, -0.0220, -0.0061, -0.0119, -0.0130, -0.0102,
            0.0130,  0.0005, -0.0187, -0.0032, -0.0038]]],


        [[[-0.0061,  0.0205,  0.0061,  0.0022,  0.0007,  0.0061,  0.0092,
            0.0047, -0.0026, -0.0023, -0.0297, -0.0170,  0.0087,  0.0004,
           -0.0136,  0.0074, -0.0146,  0.0085,  0.0013,  0.0127, -0.0026,
           -0.0127, -0.0153, -0.0037, -0.0078,  0.0024,  0.0080,  0.0026,
           -0.0076,  0.0045,  0.0110, -0.0033,  0.0151, -0.0047,  0.0097,
           -0.0059,  0.0186,  0.0033, -0.0062,  0.0024, -0.0106,  0.0042,
           -0.0009,  0.0018, -0.0023, -0.0002, -0.0055, -0.0031,  0.0021,
           -0.0135,  0.0044, -0.0051,  0.0029,  0.0290, -0.0011,  0.0036,
            0.0040, -0.0139, -0.0061, -0.0068,  0.0061]]]],
       dtype=torch.float16)
2025-05-16 03:02:47.794934 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 62],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0084, -0.0079, -0.0181,  0.0132,  0.0072,  0.0031,  0.0108,
           -0.0320,  0.0001, -0.0031,  0.0042, -0.0011,  0.0006,  0.0185,
           -0.0123, -0.0250, -0.0079,  0.0024,  0.0035, -0.0208, -0.0024,
            0.0072,  0.0280, -0.0077, -0.0037,  0.0114,  0.0028, -0.0073,
            0.0005, -0.0069, -0.0049, -0.0046,  0.0007, -0.0042,  0.0086,
            0.0084,  0.0048, -0.0156, -0.0024,  0.0100, -0.0116, -0.0010,
            0.0082,  0.0089,  0.0053,  0.0192, -0.0053, -0.0065,  0.0180,
           -0.0075, -0.0069,  0.0040, -0.0030, -0.0215,  0.0065,  0.0040,
            0.0077,  0.0072, -0.0011,  0.0016,  0.0056,  0.0016]]],


        [[[ 0.0213,  0.0076,  0.0125,  0.0084, -0.0363, -0.0019, -0.0112,
            0.0054,  0.0188,  0.0050,  0.0186,  0.0058, -0.0004, -0.0089,
            0.0023,  0.0063, -0.0230, -0.0064, -0.0071, -0.0017, -0.0015,
           -0.0037, -0.0026, -0.0045, -0.0014,  0.0102, -0.0025,  0.0010,
           -0.0110,  0.0006, -0.0021,  0.0070,  0.0291,  0.0027, -0.0054,
           -0.0030,  0.0088, -0.0084, -0.0009,  0.0185,  0.0056,  0.0177,
           -0.0032,  0.0117, -0.0062, -0.0045,  0.0166, -0.0078,  0.0002,
           -0.0157,  0.0115, -0.0239,  0.0086, -0.0016, -0.0025, -0.0117,
           -0.0028, -0.0242, -0.0058,  0.0046, -0.0074, -0.0052]]]],
       dtype=torch.float16)
2025-05-16 03:02:48.046403 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), Tensor([2, 62, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 62],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.0765e-02,  1.0155e-02,  2.5578e-03,  7.0000e-03, -5.9357e-03,
           -3.4256e-03, -7.0114e-03, -8.5297e-03, -1.7944e-02, -8.8577e-03,
            4.0054e-03,  1.7176e-03, -1.5135e-03,  2.2945e-03, -4.3793e-03,
            5.6610e-03, -1.5778e-02, -3.6793e-03,  9.1553e-03, -8.1100e-03,
           -4.9438e-03,  1.2436e-03, -3.9978e-03, -5.0049e-03,  1.3145e-02,
            7.2403e-03,  1.5518e-02,  7.3814e-04,  2.1378e-02,  1.1551e-02,
            8.8730e-03, -7.1220e-03, -3.2139e-03,  1.0414e-02, -9.6283e-03,
           -5.3120e-04,  1.0406e-02, -7.0572e-03,  4.2772e-04,  9.6588e-03,
            1.7654e-02,  1.1543e-02,  4.6997e-03, -6.2990e-04, -5.3453e-04,
            1.4668e-03, -5.9280e-03,  1.0948e-02,  1.3819e-03, -2.1915e-03,
           -2.5055e-02,  9.2888e-04, -9.9182e-03, -2.2995e-02,  6.0749e-04,
            3.8185e-03, -1.2383e-02, -6.4373e-04,  1.8692e-03,  8.4381e-03,
            3.4962e-03, -2.3365e-03]]],


        [[[-5.6381e-03,  1.4534e-02,  2.4765e-02,  6.9695e-03,  2.2030e-03,
            9.9087e-04,  1.0433e-03, -4.0588e-03, -5.7373e-03, -6.9809e-03,
           -3.6201e-03,  3.3512e-03, -1.0977e-03, -9.4938e-04,  2.2705e-02,
            1.7288e-02,  1.0979e-02, -8.3771e-03, -4.4785e-03, -3.6716e-04,
           -2.7394e-04,  7.0610e-03, -7.6675e-03,  1.4839e-02,  7.7057e-03,
           -1.7593e-02, -1.7197e-02, -7.4539e-03, -1.2611e-02,  2.0008e-03,
            4.2610e-03, -1.0704e-02,  1.2798e-03,  8.0299e-04, -1.9836e-02,
           -1.9485e-02, -1.0429e-02,  6.2883e-05, -3.8319e-03,  1.3227e-03,
            7.7515e-03, -4.0474e-03,  7.0152e-03, -3.8795e-03,  2.7256e-03,
           -9.0790e-03, -1.0330e-02, -2.8973e-03, -3.1328e-04, -1.9348e-02,
            4.0245e-03,  8.8882e-03,  9.3384e-03, -7.7858e-03,  1.3628e-03,
            6.9923e-03, -4.0932e-03, -5.6028e-06,  2.4567e-03,  1.1139e-02,
            8.9340e-03,  1.5366e-02]]]], dtype=torch.float16)
2025-05-16 03:02:48.310578 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 63],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.0948e-03,  2.9984e-03,  7.5264e-03, -3.7537e-02, -1.4664e-02,
           -1.5312e-02,  1.6296e-02, -6.1264e-03, -7.3433e-03, -1.2993e-02,
           -1.2955e-02,  8.5258e-04,  4.7951e-03,  2.6550e-03, -2.2392e-03,
           -5.1842e-03,  6.3438e-03,  6.4850e-04,  6.0692e-03,  3.8452e-03,
           -1.0574e-02, -1.0048e-02, -1.3336e-02, -2.7370e-03, -4.4861e-03,
           -3.2425e-03,  3.2825e-03,  8.2016e-03,  9.1095e-03, -6.1035e-03,
            2.8858e-03,  8.1825e-04, -7.1220e-03,  1.2520e-02,  3.4275e-03,
            8.3694e-03,  2.3254e-02,  7.5912e-03,  8.6670e-03, -9.5749e-03,
            1.4420e-03,  6.2828e-03,  1.3168e-02, -5.8975e-03, -7.5569e-03,
           -6.3744e-03, -1.0765e-02,  7.0686e-03,  1.1396e-03, -3.7975e-03,
           -5.4207e-03, -2.9888e-03, -6.0940e-04, -8.3847e-03,  8.0795e-03,
            2.2751e-02, -6.2752e-03,  1.6098e-02,  2.1469e-02,  1.2070e-02,
            4.9019e-04, -4.0283e-03,  1.5001e-03]]],


        [[[-1.6546e-03,  8.0338e-03,  4.0474e-03, -1.5732e-02,  1.5312e-02,
           -3.1281e-02,  3.8177e-02,  1.1339e-03, -1.5440e-03,  7.2098e-03,
            9.9258e-03,  1.1436e-02,  1.1963e-02,  8.9951e-03,  8.1301e-04,
            1.7075e-02,  8.5144e-03,  1.9302e-03,  1.1225e-03, -1.5808e-02,
            8.4839e-03, -9.9182e-03,  1.1993e-02, -3.9711e-03, -8.5831e-03,
           -8.2302e-04,  1.5030e-02,  1.0399e-02, -6.1302e-03, -8.2703e-03,
            4.7379e-03, -1.7910e-03,  9.6130e-03,  4.4708e-03, -5.3253e-03,
           -4.3411e-03,  9.7046e-03,  1.4297e-02, -1.5884e-02,  1.7334e-02,
           -9.9335e-03, -2.2087e-03, -3.6831e-03, -1.5022e-02, -2.9022e-02,
           -2.1866e-02,  7.6981e-03, -5.4016e-03, -1.5411e-03,  2.3956e-03,
           -1.2650e-02, -1.7731e-02,  1.1559e-02,  1.8864e-03, -1.2611e-02,
           -4.4632e-03,  7.2365e-03,  1.3588e-02, -1.9817e-03, -7.8797e-05,
           -4.1504e-03, -1.5945e-02, -6.7749e-03]]]], dtype=torch.float16)
2025-05-16 03:02:48.568401 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), Tensor([2, 63, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 63],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0097,  0.0019,  0.0141,  0.0078, -0.0079,  0.0010,  0.0104,
           -0.0011, -0.0010, -0.0038, -0.0111, -0.0027,  0.0059, -0.0279,
           -0.0012, -0.0195, -0.0186,  0.0210, -0.0103, -0.0090, -0.0122,
            0.0009, -0.0120, -0.0201,  0.0039, -0.0128, -0.0019,  0.0173,
           -0.0018,  0.0243,  0.0030, -0.0053,  0.0078, -0.0070,  0.0038,
            0.0031, -0.0071,  0.0022,  0.0022, -0.0049, -0.0080,  0.0119,
           -0.0039,  0.0048, -0.0118,  0.0231,  0.0120, -0.0034,  0.0100,
            0.0011,  0.0090,  0.0150,  0.0096,  0.0017, -0.0023,  0.0127,
           -0.0173, -0.0023, -0.0153,  0.0076, -0.0321,  0.0093,  0.0273]]],


        [[[-0.0128,  0.0284,  0.0009,  0.0108, -0.0020,  0.0107,  0.0074,
            0.0190, -0.0091, -0.0126,  0.0013, -0.0011, -0.0064, -0.0062,
            0.0117, -0.0200,  0.0107,  0.0025,  0.0096, -0.0088, -0.0071,
           -0.0041, -0.0154, -0.0058,  0.0050,  0.0065, -0.0033, -0.0030,
            0.0110,  0.0060,  0.0159,  0.0097, -0.0045, -0.0160, -0.0064,
            0.0154, -0.0038, -0.0149, -0.0105, -0.0030, -0.0019, -0.0075,
           -0.0107, -0.0116,  0.0136,  0.0039,  0.0008,  0.0075, -0.0263,
            0.0136,  0.0260,  0.0266,  0.0180,  0.0166,  0.0064, -0.0065,
           -0.0093, -0.0160, -0.0150,  0.0022, -0.0047, -0.0188, -0.0127]]]],
       dtype=torch.float16)
2025-05-16 03:02:48.766695 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 64],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 4.8599e-03, -6.9046e-03, -1.6041e-03,  1.6890e-03, -8.1558e-03,
           -1.4908e-02,  5.4474e-03, -1.7090e-02,  7.5493e-03,  6.5804e-03,
            3.0411e-02,  8.5449e-03, -1.7059e-02, -2.2182e-03, -9.2392e-03,
           -1.5869e-02, -2.1725e-03, -2.4235e-04,  7.9584e-04,  9.3994e-03,
            3.9787e-03,  1.5015e-02,  1.9287e-02, -2.1362e-03,  1.9646e-03,
            8.5878e-04,  1.0386e-03, -5.5885e-03, -2.6840e-02, -7.8735e-03,
           -1.6418e-02,  4.5166e-03,  1.5289e-02, -4.6234e-03,  6.5079e-03,
            1.1070e-02,  2.1408e-02, -1.5160e-02,  4.4870e-04, -7.3280e-03,
           -4.6883e-03, -1.2817e-02, -1.1551e-02, -3.3741e-03,  2.7008e-03,
           -3.1173e-05,  2.0065e-02, -8.5602e-03, -4.9496e-04, -7.7972e-03,
           -1.0900e-03,  9.2468e-03, -1.4641e-02, -1.8082e-03,  5.7335e-03,
            6.7635e-03,  5.4121e-04, -6.6566e-03, -1.4694e-02,  1.0147e-03,
            7.6752e-03,  3.3569e-03,  1.3100e-02,  2.2751e-02]]],


        [[[ 1.6708e-02, -2.7267e-02,  6.4087e-03,  1.4801e-02, -1.6373e-02,
            1.6985e-03,  9.3758e-05, -5.2834e-04, -1.5083e-02, -1.5020e-03,
           -1.1192e-02, -7.1602e-03,  1.9806e-02, -2.5845e-04,  2.8229e-03,
           -7.2556e-03, -4.5319e-03, -7.6599e-03, -5.7526e-03,  5.2071e-03,
            1.8871e-04,  1.9257e-02,  1.5213e-02,  5.4970e-03,  5.9853e-03,
           -2.1378e-02, -3.7975e-03, -1.7273e-02, -6.7520e-03,  1.4961e-02,
            2.5539e-03, -3.6926e-03, -1.2444e-02,  7.0801e-03,  1.0193e-02,
           -6.0349e-03,  5.0163e-03, -2.1434e-04,  4.3907e-03,  7.9346e-03,
            1.5808e-02, -5.8670e-03,  1.3752e-03, -3.0380e-02,  6.5613e-03,
            2.8057e-03, -3.8586e-03, -2.0920e-02,  1.2535e-02, -1.0094e-02,
            1.1604e-02, -1.3151e-03, -1.5884e-02,  3.2158e-03,  2.7542e-03,
            5.2719e-03,  8.9798e-03,  3.9444e-03, -4.8065e-03,  1.1520e-02,
           -3.5133e-03, -8.6670e-03,  1.5839e-02,  1.3443e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:48.949204 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), Tensor([2, 64, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 64],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.2159e-04, -7.3738e-03,  5.4550e-03, -2.7027e-03,  1.1971e-02,
            3.5152e-03,  7.1754e-03,  3.1738e-02, -6.2332e-03, -1.5106e-03,
           -4.7112e-04,  9.1019e-03, -1.9165e-02, -1.9226e-02,  1.8463e-02,
           -7.8201e-03,  3.0637e-05,  7.6141e-03,  1.2947e-02,  1.1208e-02,
            7.0457e-03,  9.5215e-03,  7.7095e-03,  9.1267e-04, -5.4817e-03,
            7.0076e-03, -4.3678e-03,  2.0691e-02, -4.0855e-03, -1.3290e-02,
            4.4632e-03, -3.3417e-03,  1.5440e-03,  7.8976e-05, -1.6060e-03,
           -1.4305e-02, -2.6474e-02, -2.1835e-02,  9.8038e-03, -9.8419e-03,
            4.3182e-03, -1.4572e-02, -5.3787e-03,  1.4053e-02,  1.9241e-02,
            2.2507e-03, -7.0724e-03,  2.3155e-03,  5.9624e-03, -3.1342e-02,
            3.0632e-03, -9.1248e-03, -4.7660e-04,  1.5860e-03,  5.0774e-03,
           -4.0550e-03, -1.4816e-02,  1.3888e-04,  1.5755e-03, -2.6627e-03,
            8.7433e-03,  2.8782e-03, -6.3286e-03,  5.9547e-03]]],


        [[[ 2.7008e-02, -3.1013e-03,  1.1917e-02, -1.7166e-02, -6.4926e-03,
            1.3321e-02,  3.6526e-03,  1.0133e-06, -4.0016e-03,  4.7455e-03,
            1.2489e-02,  5.2071e-03,  2.6588e-03, -2.4521e-02, -3.8471e-03,
           -1.2102e-03,  5.9662e-03, -1.5366e-02,  1.0986e-03,  6.7558e-03,
            4.4670e-03,  1.5717e-02,  7.8812e-03, -8.2855e-03,  2.3384e-03,
           -8.1329e-03,  7.0457e-03, -6.6376e-03, -2.1973e-02, -1.7075e-02,
           -1.1148e-03,  9.5291e-03, -2.1591e-02,  2.8400e-03,  9.8801e-03,
           -1.7662e-03, -2.1286e-03, -1.0475e-02, -3.2940e-03, -6.1531e-03,
           -2.1458e-04,  7.7591e-03,  4.6577e-03, -5.5542e-03,  9.4299e-03,
            5.7068e-03,  2.0081e-02,  1.5656e-02, -5.5656e-03, -4.1866e-04,
            1.4219e-03,  3.0441e-03,  6.2027e-03, -9.3155e-03,  7.3776e-03,
            7.6408e-03, -1.6388e-02,  2.6941e-04,  5.5923e-03, -2.4628e-02,
           -1.2970e-02, -1.0971e-02,  1.3756e-02,  7.3166e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:49.194028 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 65],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0227, -0.0011,  0.0019, -0.0063,  0.0042, -0.0218,  0.0101,
           -0.0070,  0.0025, -0.0109, -0.0145, -0.0214,  0.0179, -0.0051,
           -0.0060, -0.0058,  0.0091, -0.0031,  0.0007, -0.0165, -0.0106,
            0.0061,  0.0086,  0.0048, -0.0017, -0.0036, -0.0096, -0.0113,
           -0.0003, -0.0017,  0.0313,  0.0036, -0.0028, -0.0067,  0.0164,
            0.0098, -0.0070,  0.0019,  0.0014,  0.0008,  0.0050, -0.0031,
            0.0028, -0.0053,  0.0130,  0.0034, -0.0148, -0.0048,  0.0048,
            0.0023, -0.0071,  0.0045, -0.0071, -0.0207, -0.0019,  0.0139,
           -0.0027,  0.0044, -0.0047, -0.0010,  0.0032,  0.0137,  0.0084,
            0.0072,  0.0075]]],


        [[[ 0.0023, -0.0015,  0.0027,  0.0039, -0.0098,  0.0016,  0.0003,
           -0.0273,  0.0002, -0.0023, -0.0048,  0.0068,  0.0202, -0.0101,
           -0.0015, -0.0129,  0.0092, -0.0169, -0.0121,  0.0068,  0.0029,
            0.0017,  0.0084, -0.0018, -0.0039,  0.0250, -0.0034,  0.0025,
            0.0142,  0.0081,  0.0022,  0.0092,  0.0211,  0.0009,  0.0063,
            0.0195, -0.0129, -0.0108, -0.0074,  0.0008,  0.0008,  0.0010,
           -0.0148, -0.0080, -0.0039,  0.0052,  0.0107, -0.0082, -0.0084,
           -0.0246,  0.0033, -0.0108,  0.0070,  0.0050, -0.0020, -0.0027,
            0.0021, -0.0060, -0.0019,  0.0022,  0.0017, -0.0012, -0.0148,
            0.0272,  0.0036]]]], dtype=torch.float16)
2025-05-16 03:02:49.450104 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), Tensor([2, 65, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 65],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 2.8000e-02,  3.9215e-03, -2.2171e-02,  5.9586e-03,  6.0511e-04,
           -1.3481e-02,  3.3665e-03, -4.2076e-03,  1.0902e-02,  9.6054e-03,
            1.9684e-02,  4.2801e-03, -1.1261e-02, -8.8501e-04, -1.9806e-02,
            4.9438e-03, -1.6388e-02,  6.7368e-03,  1.0902e-02,  9.0790e-03,
           -1.9119e-02,  5.6152e-03,  3.2196e-02,  6.7177e-03, -1.2291e-02,
           -1.2851e-04,  9.4604e-03, -7.6180e-03,  1.1833e-02, -3.1719e-03,
           -1.4572e-02, -4.5891e-03,  2.5787e-03,  3.0613e-03,  1.3466e-03,
            2.6855e-03,  9.4376e-03, -9.8190e-03,  9.7847e-04, -1.4702e-02,
           -4.0550e-03,  1.0681e-03, -1.9665e-03, -6.0797e-06, -2.0065e-03,
           -1.2718e-02, -8.5831e-05,  5.2414e-03,  4.8103e-03, -9.6817e-03,
            2.5864e-03,  4.1199e-04,  1.0796e-03, -4.3945e-03, -1.0834e-03,
           -1.1581e-04,  1.9283e-03,  3.5686e-03,  5.1928e-04, -2.4170e-02,
            1.2337e-02,  1.2039e-02, -5.9204e-03, -4.5204e-03, -4.5052e-03]]],


        [[[-6.4240e-03, -1.4923e-02, -3.8033e-03,  3.6907e-03,  1.8797e-03,
           -8.1940e-03,  8.7280e-03, -2.9984e-03, -2.5360e-02,  1.9089e-02,
           -6.5994e-03, -1.3138e-02,  3.5858e-03,  1.6159e-02,  9.7275e-03,
            1.6069e-03, -1.2245e-02,  2.4643e-03,  9.6226e-04,  5.4693e-04,
            1.3687e-02, -1.0895e-02, -1.4641e-02,  1.4977e-02, -3.7994e-03,
            1.6357e-02,  2.9812e-03,  4.0703e-03,  6.8398e-03, -7.9956e-03,
           -1.7052e-03,  1.0223e-02, -8.9645e-03,  1.0391e-02,  2.6436e-03,
            2.1210e-02,  4.5700e-03, -4.3564e-03,  7.4348e-03,  9.5444e-03,
            3.1948e-03, -2.4109e-02, -7.5531e-03, -5.6763e-03,  3.4161e-03,
           -6.4011e-03, -1.7944e-02,  5.2547e-04, -1.2604e-02, -2.5692e-03,
            3.6697e-03, -1.1749e-02, -4.5547e-03, -5.6915e-03,  4.7264e-03,
            1.8082e-02, -4.3144e-03,  4.7455e-03, -8.7357e-03,  7.2899e-03,
           -1.2215e-02, -4.8614e-04,  1.1833e-02,  8.0185e-03,  1.1780e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:49.639540 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 66],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 6.1083e-04,  1.1024e-02,  2.6855e-03,  3.3150e-03,  7.1259e-03,
            1.5154e-03,  1.1406e-02, -6.3972e-03,  9.4070e-03, -1.5808e-02,
           -2.7676e-03,  6.1417e-04,  5.6839e-03,  3.6087e-03,  8.1863e-03,
            8.9836e-04, -3.1952e-02, -2.3209e-02,  1.3641e-02, -7.1049e-04,
           -1.9272e-02, -9.5139e-03, -4.4250e-03,  2.0172e-02,  7.1144e-03,
            1.2329e-02, -1.0262e-02, -7.7858e-03, -2.0828e-02,  5.6839e-03,
           -1.8799e-02,  1.5991e-02,  7.0076e-03,  1.9588e-03,  1.3969e-02,
            1.3016e-02, -5.5199e-03,  5.4245e-03, -1.0010e-02,  1.0843e-03,
           -2.4967e-03,  1.1642e-02, -4.8637e-03, -1.6117e-03, -2.0554e-02,
            1.8730e-03, -4.3869e-03, -6.0349e-03,  7.9498e-03,  2.1629e-03,
            1.7456e-02,  1.1559e-02,  3.0842e-03, -2.1439e-03,  6.2675e-03,
            4.9706e-03,  4.0894e-03,  1.0094e-02, -8.7509e-03, -1.2390e-02,
            1.9882e-02, -6.4278e-03,  1.1873e-03, -9.9411e-03,  4.2763e-03,
           -2.3071e-02]]],


        [[[-7.0038e-03, -1.6693e-02,  1.6495e-02, -9.1553e-03, -1.0696e-02,
           -1.4618e-02, -1.1467e-02,  2.5730e-03,  3.4389e-03, -6.9809e-03,
            2.9964e-03, -3.9291e-03,  1.2436e-03,  9.8190e-03, -3.0594e-02,
            3.4580e-03,  3.4733e-03, -3.7441e-03,  4.1733e-03, -1.1444e-02,
           -6.7635e-03,  3.9520e-03,  2.1820e-03,  1.4473e-02, -4.7607e-03,
           -1.7967e-03,  2.7142e-03,  1.3962e-03, -5.6381e-03,  7.6141e-03,
            8.4610e-03, -6.2256e-03, -2.2984e-03, -1.0536e-02,  1.2634e-02,
           -4.8304e-04, -1.2672e-02, -1.0185e-02, -4.6844e-03,  8.8577e-03,
            1.6937e-02,  1.3481e-02, -1.6800e-02,  6.4697e-03, -2.1095e-03,
            1.4053e-02,  1.1696e-02, -1.8816e-03,  5.0879e-04,  1.1116e-02,
            3.5172e-03, -1.2619e-02,  1.9867e-02, -1.1566e-02, -5.0621e-03,
            7.6141e-03, -2.3556e-03,  1.5839e-02,  2.2385e-02, -2.8496e-03,
            3.9749e-03, -5.1422e-03, -4.2152e-04, -3.1509e-03, -1.0586e-03,
           -4.3094e-05]]]], dtype=torch.float16)
2025-05-16 03:02:49.885985 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), Tensor([2, 66, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 66],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 8.4639e-06, -8.8263e-04,  1.5839e-02,  5.9929e-03, -3.8166e-03,
           -6.4240e-03, -2.9635e-04, -9.8877e-03, -4.6730e-04, -1.3170e-03,
            1.3256e-03,  1.9089e-02,  8.4915e-03,  2.1332e-02, -1.3725e-02,
           -1.2764e-02, -2.1877e-03,  9.5901e-03, -3.5992e-03,  2.1118e-02,
            5.5466e-03, -7.4768e-04, -1.8356e-02, -1.8511e-03, -2.0309e-02,
            4.2419e-03, -8.7261e-04, -4.2000e-03, -9.6741e-03, -2.7108e-04,
            3.1328e-04,  1.6312e-02, -6.7215e-03,  1.5488e-02, -5.9586e-03,
            1.7700e-02, -1.0853e-03, -1.9014e-05,  1.9196e-02, -4.5967e-03,
            2.3010e-02,  3.3207e-03, -7.6981e-03,  1.4580e-02,  2.6779e-03,
            5.8060e-03,  7.3509e-03, -8.8348e-03, -7.5493e-03, -1.3100e-02,
           -4.9171e-03,  1.5778e-02, -9.1648e-04,  4.9067e-04, -1.1414e-02,
           -4.7112e-03, -2.6302e-03, -4.1275e-03,  7.0076e-03,  6.3820e-03,
           -5.5809e-03, -1.4153e-02, -1.7395e-02, -1.6693e-02, -1.6479e-02,
           -1.7567e-03]]],


        [[[ 9.5901e-03,  2.0401e-02,  1.4758e-04, -4.3259e-03, -1.9012e-02,
            5.7220e-03, -8.3694e-03,  7.4577e-03, -4.7722e-03, -1.2863e-02,
            1.1101e-02, -2.8038e-03, -1.1644e-03,  4.2191e-03, -8.9569e-03,
           -6.7902e-03,  6.2027e-03, -8.6060e-03, -2.8107e-02,  1.0857e-02,
           -2.7733e-03, -2.6264e-03, -5.5580e-03,  4.0722e-04,  4.3182e-03,
            1.3771e-02, -3.9940e-03, -2.9011e-03,  1.4563e-03,  5.6839e-03,
           -9.5596e-03,  1.2428e-02, -3.4428e-03, -1.8845e-02, -6.7520e-03,
           -1.8082e-03, -2.6741e-03, -6.5269e-03, -3.2539e-03,  6.6719e-03,
            4.3368e-04,  7.4768e-03, -4.2839e-03,  3.0499e-03,  2.2644e-02,
            7.9803e-03,  5.8823e-03,  5.1231e-03,  4.0779e-03,  5.6572e-03,
            4.5013e-04,  7.9536e-04, -1.7517e-02,  3.4424e-02,  7.0343e-03,
           -8.0872e-03,  1.7136e-02,  7.1955e-04, -1.4137e-02,  5.5313e-03,
           -9.4528e-03, -1.3428e-02,  4.9706e-03, -7.6256e-03, -6.2408e-03,
            3.4676e-03]]]], dtype=torch.float16)
2025-05-16 03:02:50.075358 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 67],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.5373e-03,  1.0887e-02,  1.8570e-02, -5.1155e-03, -8.7585e-03,
            8.6899e-03,  2.0264e-02,  2.3613e-03,  5.8632e-03,  2.1469e-02,
            3.0613e-04,  6.9427e-03, -5.6305e-03, -5.0306e-05, -3.2749e-03,
           -1.9470e-02, -5.2643e-03,  1.9178e-03, -6.5517e-04, -5.7755e-03,
            9.1019e-03,  2.1696e-04, -1.2321e-02,  3.5439e-03, -1.1795e-02,
            7.5798e-03, -1.4191e-02, -1.1574e-02, -8.4000e-03, -6.0005e-03,
            5.2071e-04,  8.0585e-04, -3.6926e-03, -1.5533e-02,  2.4300e-03,
           -3.7842e-03,  2.5894e-02, -2.6188e-03, -4.1733e-03, -7.6370e-03,
            9.1248e-03,  3.2578e-03, -5.9929e-03, -8.7509e-03, -3.4351e-03,
           -1.1238e-02, -5.7411e-03,  5.0507e-03,  1.3763e-02,  5.9853e-03,
           -1.3008e-02, -5.9967e-03,  4.0698e-04,  7.8659e-03,  1.0384e-02,
            1.0147e-02, -1.1772e-02, -4.3607e-04,  3.6106e-03, -5.7182e-03,
            8.6899e-03,  4.7541e-04,  1.2787e-02, -2.2926e-03, -1.2131e-02,
           -1.5930e-02,  2.7740e-02]]],


        [[[ 1.2255e-03,  6.1340e-03,  2.4979e-02,  1.9379e-02,  2.4624e-03,
           -2.2934e-02,  1.6541e-02,  9.4366e-04,  1.4587e-02,  3.7689e-03,
           -1.5808e-02, -5.9080e-04,  3.0708e-03, -8.5602e-03, -3.0174e-03,
           -7.3586e-03,  1.1833e-02,  1.9131e-03,  3.9077e-04, -6.0921e-03,
            6.0158e-03,  4.2572e-03, -2.9404e-02,  9.4757e-03,  1.5289e-02,
           -1.3924e-02,  5.0392e-03,  4.6539e-03, -6.4011e-03,  1.0004e-03,
            6.5231e-03, -7.4043e-03, -1.3969e-02,  6.5851e-04,  3.3932e-03,
            2.5482e-02,  2.4323e-02, -9.1858e-03, -1.2314e-02, -1.9503e-03,
           -2.2888e-03,  8.5526e-03, -1.2512e-02,  3.4771e-03,  1.7023e-03,
           -1.3374e-02,  1.8524e-02, -8.5220e-03,  1.0002e-02,  2.1912e-02,
            1.2024e-02,  8.4763e-03, -2.6093e-02,  1.1299e-02, -1.8402e-02,
           -8.0872e-03, -7.1907e-04, -6.0349e-03, -7.0992e-03,  5.0545e-03,
           -2.0203e-02,  4.5509e-03, -2.6001e-02,  4.6158e-03, -1.1795e-02,
           -1.0242e-03, -2.4376e-03]]]], dtype=torch.float16)
2025-05-16 03:02:50.259866 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), Tensor([2, 67, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 67],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 8.5602e-03,  8.3847e-03,  3.6430e-03,  1.2711e-02,  3.7537e-03,
           -6.0806e-03,  3.4618e-04,  3.0098e-03,  7.8297e-04,  1.3695e-02,
            3.2539e-03, -6.3133e-03, -2.0660e-02, -6.4850e-03, -1.3664e-02,
           -4.4060e-03, -9.3155e-03, -4.0321e-03, -2.4551e-02,  1.0513e-02,
            5.4455e-04, -5.5618e-03,  1.8892e-03,  3.6144e-03, -8.0566e-03,
           -1.1429e-02,  1.6449e-02,  1.5659e-03, -2.5215e-03,  1.6279e-03,
            1.7227e-02,  4.7340e-03,  3.0708e-03,  9.9182e-03, -4.8828e-03,
           -2.7863e-02, -8.9798e-03,  1.6937e-02, -3.0823e-03,  2.1858e-03,
            2.7847e-03,  1.0895e-02,  1.1072e-03,  4.2534e-03, -6.5117e-03,
           -6.4774e-03, -9.8572e-03,  1.9287e-02,  2.5387e-03,  6.2752e-03,
            1.9226e-03, -8.4534e-03,  8.6517e-03,  7.5836e-03, -2.0580e-03,
            1.1063e-02,  2.5620e-02,  3.9029e-04, -1.9350e-03, -5.7411e-03,
           -1.2177e-02, -5.1460e-03, -6.2418e-04, -1.0712e-02, -1.2718e-02,
            1.1950e-03, -1.6470e-03]]],


        [[[-4.0703e-03,  2.6202e-04,  1.6861e-02, -2.8343e-03, -1.1654e-03,
           -8.8043e-03, -3.5095e-03, -4.8637e-03,  8.5907e-03, -1.6571e-02,
            1.1230e-02, -2.2720e-02,  2.6684e-03,  1.5198e-02, -1.0895e-02,
            3.6583e-03, -3.4695e-03, -4.1580e-03,  7.8659e-03, -2.2049e-02,
            1.4977e-02,  1.3794e-02,  1.0307e-02, -3.7956e-03, -5.0020e-04,
           -2.1896e-03, -8.4000e-03,  8.1558e-03,  6.3438e-03, -9.7351e-03,
           -2.2373e-03, -9.6436e-03,  1.1116e-02, -2.2602e-03,  1.4048e-03,
            2.7237e-03, -6.9351e-03,  9.5901e-03, -2.4643e-03, -9.1858e-03,
            6.2027e-03, -7.5150e-03,  2.4612e-02,  7.8011e-03, -9.4843e-04,
            9.2163e-03, -3.1996e-04,  1.8656e-04,  6.0892e-04,  1.6006e-02,
           -1.7958e-03,  3.3894e-03, -4.4098e-03, -3.4790e-03, -6.1111e-03,
            1.8127e-02,  7.5836e-03,  3.3915e-05, -4.5991e-04, -2.1267e-03,
           -1.2230e-02,  5.4932e-03, -4.4746e-03, -1.9028e-02,  1.1940e-03,
           -1.3695e-02, -6.1417e-03]]]], dtype=torch.float16)
2025-05-16 03:02:50.498672 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 68],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0077, -0.0143, -0.0077, -0.0046, -0.0039,  0.0011, -0.0061,
           -0.0016, -0.0068,  0.0132, -0.0075, -0.0134, -0.0034, -0.0041,
            0.0026, -0.0107,  0.0141, -0.0202,  0.0121,  0.0002, -0.0057,
           -0.0106,  0.0066,  0.0141,  0.0091,  0.0174, -0.0079,  0.0103,
           -0.0028,  0.0245,  0.0009, -0.0039, -0.0089,  0.0219, -0.0014,
           -0.0064, -0.0022, -0.0055, -0.0065,  0.0089,  0.0012, -0.0175,
            0.0008,  0.0162,  0.0057, -0.0066, -0.0086,  0.0004, -0.0133,
            0.0121,  0.0045,  0.0151,  0.0088, -0.0114,  0.0122,  0.0190,
            0.0117,  0.0161, -0.0091, -0.0104, -0.0059, -0.0073, -0.0086,
            0.0032,  0.0038, -0.0020,  0.0036, -0.0170]]],


        [[[-0.0113,  0.0102, -0.0040, -0.0168,  0.0215,  0.0007,  0.0227,
            0.0138, -0.0097,  0.0097,  0.0013,  0.0102, -0.0068,  0.0146,
           -0.0090, -0.0068,  0.0033,  0.0116,  0.0045,  0.0015,  0.0095,
           -0.0164, -0.0122,  0.0020, -0.0066,  0.0043,  0.0008, -0.0166,
           -0.0010,  0.0006, -0.0051, -0.0048,  0.0081,  0.0098,  0.0004,
            0.0059, -0.0026,  0.0071,  0.0015, -0.0038,  0.0117,  0.0133,
            0.0126, -0.0213, -0.0203, -0.0104, -0.0165,  0.0150,  0.0013,
           -0.0117, -0.0017, -0.0156, -0.0043,  0.0046,  0.0026, -0.0123,
           -0.0082,  0.0010,  0.0194,  0.0181, -0.0049, -0.0015,  0.0066,
           -0.0107,  0.0044, -0.0068, -0.0051, -0.0013]]]],
       dtype=torch.float16)
2025-05-16 03:02:50.691803 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), Tensor([2, 68, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 68],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 4.4022e-03, -4.5433e-03,  1.3494e-03, -7.7782e-03, -7.4425e-03,
            1.1480e-04,  1.4067e-03,  7.7324e-03, -1.2032e-02,  1.1742e-04,
           -6.6071e-03, -6.6900e-04,  5.1613e-03,  3.7155e-03, -4.4670e-03,
            1.1597e-03,  6.7863e-03, -4.9210e-03,  7.8430e-03, -2.4724e-04,
            3.5648e-03,  3.0923e-04, -5.4131e-03, -1.0704e-02, -1.6556e-03,
           -2.5234e-03,  2.0828e-02, -9.0256e-03,  4.5319e-03,  7.8201e-03,
            2.6150e-03, -2.0256e-03,  1.2922e-03, -3.7956e-04,  1.1063e-02,
            7.4692e-03, -4.3297e-03, -2.5234e-03, -5.9814e-03,  2.3270e-04,
            6.5308e-03, -1.2543e-02,  4.6310e-03,  1.1726e-02, -9.9487e-03,
            3.5000e-03, -1.3733e-02, -2.2392e-03, -4.1885e-03, -9.3269e-04,
           -5.8517e-03,  3.0167e-02, -1.4372e-03,  3.9940e-03,  1.4206e-02,
           -5.6648e-03,  1.3809e-03,  3.7289e-04, -1.2550e-03,  3.4218e-03,
            4.8676e-03,  7.6256e-03, -1.8265e-02,  3.7253e-05, -1.5327e-02,
           -2.2182e-03, -9.6359e-03,  4.5509e-03]]],


        [[[ 2.0828e-03,  8.2550e-03,  5.5161e-03,  1.2703e-03, -1.8478e-02,
           -2.6535e-02,  1.4397e-02, -1.8860e-02, -3.7899e-03,  1.4008e-02,
           -2.5578e-03, -1.1070e-02,  1.4473e-02,  1.2543e-02, -6.0577e-03,
            6.8855e-03,  7.9880e-03, -3.5515e-03,  4.9706e-03, -1.4181e-03,
            9.7809e-03, -3.2902e-03, -8.3923e-03,  8.7309e-04, -1.9855e-03,
           -1.3069e-02,  2.3651e-03, -1.3847e-02,  2.6131e-03, -1.7166e-03,
            1.5192e-03,  1.0780e-02,  8.7891e-03, -1.9255e-03,  6.7091e-04,
           -3.6469e-02,  4.7951e-03,  2.8858e-03,  1.6785e-03, -1.1795e-02,
            1.4820e-03, -1.7767e-03,  8.3494e-04,  7.6942e-03,  6.0883e-03,
            8.0795e-03, -4.3068e-03,  4.7035e-03,  1.6127e-03,  1.4740e-02,
           -9.6588e-03,  2.9266e-02, -2.3605e-02,  2.2583e-02, -9.2468e-03,
           -1.9817e-03, -1.1528e-02, -1.4351e-02,  1.7365e-02, -3.5706e-03,
            3.5839e-03,  5.9433e-03,  6.9771e-03, -1.8263e-03, -3.9978e-03,
           -1.3039e-02,  3.6755e-03,  9.9335e-03]]]], dtype=torch.float16)
2025-05-16 03:02:50.939247 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 69],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 5.2948e-03, -1.6876e-02,  7.1754e-03, -4.5128e-03,  2.4078e-02,
           -2.0733e-03, -2.0828e-03,  1.4153e-02, -1.6022e-02,  1.3475e-03,
           -1.4603e-02, -1.1261e-02,  3.4981e-03, -8.0948e-03, -8.9035e-03,
           -2.0767e-02,  2.7895e-05,  1.1772e-02,  2.7161e-03, -2.0361e-04,
            7.2670e-03,  4.4861e-03,  1.4915e-02, -5.3635e-03, -1.1864e-03,
            1.3382e-02, -9.8114e-03,  6.5002e-03, -5.4092e-03, -2.3232e-03,
           -2.5597e-03,  6.5193e-03,  9.8324e-04,  3.7117e-03, -1.4145e-02,
           -4.6349e-03,  2.0390e-03, -1.2321e-02,  5.1689e-03, -8.8730e-03,
            1.6266e-02, -7.0839e-03, -4.3579e-02, -9.5749e-03,  1.1055e-02,
           -2.7370e-03, -2.9984e-03, -2.2049e-03, -1.2398e-02,  8.5220e-03,
            4.6806e-03, -5.2452e-03,  7.4043e-03,  8.1100e-03,  9.1934e-03,
            2.8717e-02,  9.3536e-03,  1.0460e-02, -1.0529e-02,  8.0824e-04,
            3.6507e-03, -7.2174e-03,  1.2405e-02, -4.6730e-03, -1.7319e-03,
           -2.1687e-03,  5.5084e-03,  3.3989e-03,  9.5901e-03]]],


        [[[-1.1238e-02, -2.8763e-03, -7.5684e-03,  4.0817e-03,  3.4866e-03,
            1.0620e-02,  3.9291e-03,  3.8624e-03,  1.1688e-02,  5.7678e-03,
           -1.1383e-02, -1.2960e-03, -6.8321e-03,  4.2191e-03, -4.1695e-03,
            1.1116e-02,  3.2978e-03,  6.1035e-03,  1.3603e-02, -8.5983e-03,
            2.8782e-03,  1.2428e-02,  7.4806e-03,  4.3559e-04,  4.4403e-03,
           -6.2609e-04,  1.4114e-03, -9.8572e-03, -1.0414e-03,  8.2779e-03,
           -8.1253e-03, -9.3613e-03,  1.0170e-02, -1.0574e-02,  1.4923e-02,
           -7.8583e-03, -2.7351e-03, -6.7406e-03, -3.6621e-03, -6.7711e-03,
            4.9400e-03, -8.9493e-03, -3.3455e-03, -1.5465e-02, -1.1520e-02,
           -1.1902e-02,  4.2953e-03, -3.1033e-03,  2.8439e-03,  1.8661e-02,
            3.4256e-03,  1.0628e-02, -1.1902e-03, -5.7487e-03, -8.7967e-03,
            2.7863e-02,  7.7171e-03,  4.2343e-03, -4.2267e-03, -4.0512e-03,
           -4.2534e-03,  7.3051e-04, -4.4289e-03,  1.9083e-03,  1.3062e-02,
           -2.1530e-02, -1.3474e-02,  2.2888e-03, -3.4924e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:51.194096 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), Tensor([2, 69, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 69],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0085,  0.0120, -0.0061, -0.0081,  0.0029,  0.0072,  0.0170,
            0.0083, -0.0068, -0.0033, -0.0006,  0.0024,  0.0078,  0.0006,
            0.0170,  0.0075,  0.0209,  0.0140, -0.0025,  0.0040,  0.0065,
           -0.0193, -0.0105,  0.0038, -0.0054,  0.0030,  0.0039, -0.0140,
           -0.0002, -0.0025, -0.0132,  0.0068, -0.0065,  0.0041,  0.0169,
           -0.0021, -0.0195, -0.0067,  0.0114, -0.0031, -0.0009,  0.0114,
           -0.0022, -0.0196, -0.0035, -0.0159,  0.0077,  0.0016, -0.0046,
            0.0012, -0.0063,  0.0097,  0.0087, -0.0032, -0.0133, -0.0078,
           -0.0025, -0.0101, -0.0090, -0.0040,  0.0023,  0.0024,  0.0012,
            0.0096,  0.0018,  0.0027, -0.0157,  0.0018,  0.0179]]],


        [[[-0.0046,  0.0022, -0.0307, -0.0042, -0.0095, -0.0069, -0.0015,
            0.0115, -0.0024,  0.0061,  0.0124,  0.0097, -0.0029,  0.0071,
           -0.0125,  0.0020, -0.0082, -0.0157, -0.0014,  0.0017,  0.0154,
           -0.0060, -0.0044,  0.0065, -0.0055, -0.0019, -0.0097, -0.0117,
           -0.0155, -0.0005,  0.0041, -0.0164, -0.0048,  0.0021,  0.0145,
            0.0158,  0.0296,  0.0031,  0.0127,  0.0086,  0.0020,  0.0042,
            0.0135, -0.0004, -0.0118,  0.0015, -0.0134,  0.0201, -0.0055,
           -0.0083, -0.0316,  0.0016,  0.0145, -0.0038, -0.0004, -0.0073,
            0.0107,  0.0022, -0.0164,  0.0047,  0.0242, -0.0175,  0.0081,
            0.0138,  0.0324, -0.0035, -0.0104, -0.0199,  0.0084]]]],
       dtype=torch.float16)
2025-05-16 03:02:51.440454 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 70],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 5.7411e-03, -2.0103e-03, -1.2222e-02,  1.0185e-02,  3.9101e-03,
            2.1667e-03, -6.7596e-03,  5.8784e-03,  2.5225e-04, -2.1935e-03,
            3.6657e-05, -3.2520e-04,  5.8842e-04, -8.0585e-04,  5.8784e-03,
            8.4877e-04, -7.1754e-03,  6.0959e-03, -2.1713e-02,  9.8038e-03,
            3.7136e-03, -6.3057e-03,  2.2568e-02,  2.2674e-04, -8.7433e-03,
            2.2491e-02, -5.4741e-03,  5.5695e-04, -2.1000e-03,  9.4604e-03,
            1.1375e-02, -1.8005e-02, -6.2218e-03, -8.0109e-03, -1.8091e-03,
            1.0424e-03, -2.4796e-03, -5.5008e-03,  1.8524e-02, -1.6391e-04,
           -1.1192e-02, -7.5150e-04,  6.5804e-03, -5.4321e-03,  1.2550e-02,
           -7.1383e-04, -9.0027e-03,  1.1520e-02,  8.5907e-03,  4.4861e-03,
            6.9923e-03, -2.5879e-02, -2.3155e-03, -9.8801e-04, -2.0233e-02,
            1.3227e-03, -1.0033e-03, -8.2245e-03,  1.5717e-03, -6.7940e-03,
           -3.4637e-03,  7.3776e-03,  4.1342e-04,  1.9623e-02, -2.1095e-03,
           -2.6226e-03,  1.4938e-02, -2.0157e-02,  1.4973e-03,  6.3539e-05]]],


        [[[ 3.3302e-03,  2.3842e-03, -8.5449e-03,  3.1490e-03,  5.6038e-03,
            6.1073e-03, -5.2223e-03, -1.0582e-02, -7.4387e-03,  1.4626e-02,
           -5.9853e-03,  1.8661e-02,  7.0190e-03,  1.7227e-02,  6.8932e-03,
            2.2278e-03,  3.1776e-03,  1.4048e-03, -3.7613e-03, -1.5488e-02,
            5.7907e-03,  4.1084e-03,  5.0087e-03, -1.3542e-03,  1.8435e-03,
           -3.5267e-03, -9.9487e-03, -1.6584e-03, -6.6986e-03,  4.6463e-03,
           -2.3575e-02,  1.1818e-02,  3.2616e-03, -2.3785e-03, -7.0381e-03,
           -2.1439e-03, -5.9891e-03, -1.9550e-03, -4.9438e-03,  5.2185e-03,
            7.2212e-03,  4.9114e-04,  6.3133e-03, -1.1383e-02,  1.5748e-04,
            8.1558e-03,  2.7966e-04,  1.0910e-02, -1.1185e-02,  2.0390e-03,
            1.8188e-02, -3.8548e-03, -5.2032e-03,  9.6359e-03,  1.2192e-02,
           -1.4496e-02, -5.2986e-03,  5.7945e-03,  1.0048e-02,  3.8204e-03,
            1.4257e-03, -1.6724e-02,  8.9951e-03,  8.0109e-03, -9.4910e-03,
           -1.0651e-02, -9.3613e-03, -1.6388e-02, -6.2637e-03,  1.3256e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:51.630831 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), Tensor([2, 70, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 70],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-8.7891e-03, -3.3836e-03,  3.1719e-03,  1.2444e-02,  2.9945e-03,
            5.0392e-03,  2.7347e-04, -3.3360e-03, -1.4938e-02, -9.2850e-03,
           -7.0114e-03, -6.2294e-03, -5.0664e-05, -4.6272e-03, -1.4168e-02,
            1.0384e-02,  1.0544e-02,  4.5657e-05, -6.3362e-03,  2.7039e-02,
           -1.6356e-04, -3.7594e-03,  9.2087e-03,  2.5597e-03, -1.7910e-03,
           -3.9139e-03,  4.3068e-03,  8.1406e-03,  1.5106e-02,  6.8665e-04,
           -8.4686e-03,  2.0847e-03, -4.0588e-03,  8.5144e-03, -4.4708e-03,
           -7.7972e-03,  7.5989e-03,  1.7128e-03,  1.0138e-03, -5.4665e-03,
           -9.1476e-03, -3.0727e-03, -1.4275e-02,  1.2848e-02, -3.0880e-03,
           -3.2673e-03, -6.6299e-03,  1.4839e-02, -2.8343e-03,  9.7809e-03,
           -1.3151e-03,  1.0042e-03,  8.2626e-03, -2.1759e-02,  1.2253e-02,
            7.3090e-03, -2.3782e-04,  3.9673e-03, -2.9373e-03,  6.4049e-03,
           -8.2779e-04, -4.1924e-03, -6.1226e-03,  8.9188e-03, -1.4999e-02,
            1.2276e-02,  1.0500e-03, -1.1497e-02, -5.2795e-03, -2.2545e-03]]],


        [[[ 1.6832e-03,  8.4229e-03,  7.8392e-04,  2.3911e-02,  1.0834e-02,
            5.5695e-03,  5.3329e-03, -5.5161e-03, -7.5698e-06,  1.2352e-02,
           -9.2163e-03,  2.5196e-03,  9.7504e-03, -1.3573e-02,  3.7251e-03,
            9.2010e-03,  1.2604e-02, -9.8801e-04, -1.2917e-02,  5.2166e-04,
            1.4267e-02, -8.0442e-04,  6.4354e-03, -2.8343e-03, -4.8752e-03,
           -1.6891e-02,  6.1989e-03, -8.0338e-03, -8.0719e-03, -6.4011e-03,
           -9.1782e-03, -1.4641e-02,  9.3918e-03, -4.6577e-03, -5.8632e-03,
            9.0179e-03,  4.7493e-03, -4.2381e-03,  5.5580e-03,  6.8855e-03,
           -1.3664e-02, -2.0920e-02, -2.2736e-03,  2.1706e-03, -5.2071e-03,
           -5.0125e-03, -4.0970e-03, -3.5820e-03,  1.3260e-02,  7.0076e-03,
            3.2928e-02, -9.3613e-03, -5.3501e-04, -1.0696e-02, -3.0518e-03,
           -5.3167e-04, -2.1667e-03, -1.2100e-02,  8.7662e-03, -2.5101e-02,
           -1.5717e-03,  2.2507e-02,  2.5558e-03, -8.5735e-04, -3.9764e-02,
           -2.6970e-03, -7.9498e-03,  1.0033e-02,  3.9444e-03,  2.6978e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:51.892616 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 71],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0093,  0.0021,  0.0037, -0.0012, -0.0090, -0.0135, -0.0153,
           -0.0038, -0.0133, -0.0031, -0.0059,  0.0020, -0.0113, -0.0225,
            0.0072,  0.0176,  0.0066, -0.0112,  0.0114,  0.0011, -0.0010,
            0.0134, -0.0180,  0.0007, -0.0104, -0.0030,  0.0282, -0.0017,
           -0.0059, -0.0167, -0.0166,  0.0088, -0.0126,  0.0147, -0.0140,
            0.0074,  0.0074, -0.0010,  0.0019,  0.0038,  0.0082,  0.0043,
            0.0045,  0.0154,  0.0102,  0.0014, -0.0009,  0.0126, -0.0128,
            0.0028, -0.0034,  0.0167,  0.0052, -0.0147, -0.0048,  0.0080,
           -0.0024,  0.0080,  0.0048,  0.0017, -0.0004, -0.0131,  0.0041,
            0.0062, -0.0065,  0.0033, -0.0012,  0.0055,  0.0045,  0.0289,
           -0.0134]]],


        [[[-0.0026, -0.0005,  0.0056,  0.0076, -0.0024, -0.0006,  0.0002,
           -0.0186,  0.0097, -0.0072,  0.0028,  0.0055, -0.0089,  0.0072,
            0.0036, -0.0081,  0.0045,  0.0060, -0.0039, -0.0078,  0.0074,
            0.0067, -0.0010,  0.0217,  0.0136,  0.0180, -0.0018,  0.0001,
            0.0061, -0.0159,  0.0142,  0.0072, -0.0128,  0.0005,  0.0256,
           -0.0011, -0.0010, -0.0054, -0.0032, -0.0031,  0.0018,  0.0064,
            0.0011,  0.0044, -0.0018, -0.0225, -0.0034,  0.0015, -0.0116,
           -0.0051,  0.0087, -0.0087, -0.0077,  0.0074,  0.0046, -0.0065,
           -0.0039, -0.0066,  0.0006, -0.0028,  0.0026, -0.0019, -0.0148,
            0.0034, -0.0068, -0.0019,  0.0071, -0.0027, -0.0080, -0.0009,
            0.0002]]]], dtype=torch.float16)
2025-05-16 03:02:52.140836 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), Tensor([2, 71, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 71],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 1.0597e-02, -6.5079e-03,  1.4999e-02, -3.9864e-04,  8.5974e-04,
           -5.5275e-03,  1.5900e-02, -1.8906e-02, -4.0894e-03,  2.2537e-02,
           -1.8173e-02, -5.4855e-03, -1.4069e-02, -1.6813e-03, -1.7029e-02,
           -5.9586e-03, -2.5826e-03, -1.4305e-02, -2.9526e-03,  2.1927e-02,
           -9.2888e-04,  1.2383e-02, -1.1368e-02,  5.0735e-03, -6.9275e-03,
           -8.5449e-03,  1.0672e-03,  1.9083e-03,  4.3640e-03,  1.6235e-02,
           -5.1079e-03,  1.5442e-02,  1.4580e-02, -1.1665e-02, -1.9394e-02,
           -6.8283e-04,  1.6968e-02, -3.0411e-02, -9.4891e-04,  8.6517e-03,
           -3.3703e-03, -9.8267e-03,  6.4850e-04, -8.7814e-03,  4.2267e-03,
           -2.0584e-02, -1.7328e-03, -3.1319e-03,  2.9621e-03, -2.3834e-02,
           -7.0724e-03,  9.3002e-03, -1.5917e-03, -6.3248e-03,  2.1896e-02,
            3.7270e-03, -2.1095e-03,  4.4365e-03,  2.7054e-02,  2.5291e-03,
            1.0048e-02, -1.0834e-02,  1.0246e-02,  1.3008e-02, -9.2697e-04,
            3.3630e-02,  8.6670e-03,  5.3711e-03, -1.6342e-02, -1.9484e-03,
           -9.1629e-03]]],


        [[[-3.1071e-03, -1.5297e-02, -5.2567e-03, -1.3924e-03,  6.0692e-03,
           -1.1269e-02,  6.2084e-04, -7.8735e-03,  2.6428e-02,  2.7943e-03,
           -4.6959e-03,  5.7106e-03,  1.3512e-02,  2.5101e-03, -2.8687e-03,
           -8.5449e-03, -1.6418e-02,  8.3923e-03, -2.2030e-03,  2.7142e-03,
            4.2610e-03,  8.1177e-03, -4.9257e-04,  9.3079e-03, -1.6098e-02,
           -7.7209e-03, -6.4201e-03,  5.7373e-03, -2.1610e-03,  5.6229e-03,
            1.8492e-03, -2.9206e-05,  2.2564e-03, -5.0049e-03,  8.5297e-03,
            2.9469e-03,  1.1620e-02,  5.1765e-03, -1.6289e-03, -1.3390e-03,
            2.1172e-03,  2.9564e-03, -5.9414e-04, -1.5717e-02, -1.3649e-02,
            3.9139e-03, -4.3716e-03,  8.9569e-03, -1.4954e-03, -1.5411e-03,
            1.6403e-02, -8.2245e-03, -1.0399e-02, -1.1129e-03,  2.0493e-02,
            1.4048e-03,  1.8158e-03,  1.7380e-02, -1.9379e-02,  3.5286e-03,
           -2.3961e-04,  3.0308e-03,  3.8986e-03,  2.3186e-04,  8.6069e-04,
           -1.2459e-02, -1.9302e-02,  1.0170e-02, -7.0686e-03, -9.0790e-03,
            1.3062e-02]]]], dtype=torch.float16)
2025-05-16 03:02:52.330723 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 72],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-4.1652e-04,  1.2238e-02, -1.3323e-03,  2.3651e-03,  3.5915e-03,
           -1.5774e-03,  7.9880e-03, -1.1339e-03, -2.4300e-03, -6.3515e-04,
           -9.7179e-04, -3.7022e-03, -7.0915e-03,  1.4732e-02, -6.6299e-03,
           -9.0265e-04,  1.5259e-02,  5.4264e-04,  6.2637e-03, -1.3336e-02,
           -6.0997e-03,  7.7286e-03, -9.4757e-03, -1.0223e-02, -4.5853e-03,
           -1.9028e-02, -5.1270e-03,  8.7204e-03, -9.1476e-03, -1.3542e-02,
            4.7035e-03,  1.0895e-02,  1.2184e-02, -7.5760e-03, -1.2503e-03,
           -1.0780e-02,  1.9241e-02, -8.6784e-04,  2.6703e-03, -7.3357e-03,
           -1.9226e-02, -5.8365e-03,  1.3161e-03, -6.3705e-03, -2.3079e-03,
           -3.1204e-03,  1.5587e-02,  6.3717e-05,  9.9754e-04,  1.5144e-02,
           -2.6751e-04,  8.8811e-06, -3.4695e-03,  5.9748e-04, -8.4000e-03,
           -8.4076e-03,  9.9792e-03, -7.3318e-03, -1.0414e-02,  2.0798e-02,
            4.7035e-03, -3.6144e-03,  2.0752e-02, -2.1439e-03,  1.5320e-02,
           -1.3107e-02, -4.5204e-03, -2.3861e-03,  6.4564e-04, -2.9259e-03,
            7.2327e-03,  6.8130e-03]]],


        [[[ 2.2202e-03,  8.4839e-03, -5.9319e-03, -5.0259e-04,  3.3646e-03,
           -1.0223e-02, -1.0368e-02, -6.9389e-03, -6.2637e-03,  1.1234e-03,
            2.3956e-02, -1.2238e-02, -1.5205e-02, -6.5842e-03,  6.1531e-03,
           -9.3384e-03,  1.1726e-02, -1.0902e-02, -9.3079e-03, -1.3557e-02,
           -3.4857e-04, -1.5457e-02, -9.7275e-03,  5.6219e-04,  9.8419e-03,
           -1.3466e-02,  1.7807e-02,  2.7122e-03, -1.3428e-02,  1.2474e-02,
           -2.1982e-04,  2.9816e-02, -2.6608e-04,  4.5133e-04, -1.1606e-03,
           -3.1352e-05,  1.2352e-02, -8.4610e-03, -2.7485e-03, -1.3443e-02,
            1.2436e-03, -4.1885e-03,  8.9569e-03, -3.1250e-02,  7.4654e-03,
            1.5518e-02, -2.5082e-03,  7.3509e-03,  2.4170e-02, -2.2491e-02,
           -6.4201e-03,  3.9101e-03, -6.7863e-03, -3.8300e-03,  6.2866e-03,
            6.3896e-03,  6.3362e-03,  8.6441e-03, -4.4518e-03,  1.3180e-03,
           -2.9774e-03,  4.3983e-03, -1.2863e-02,  2.6657e-02,  4.4098e-03,
            5.0774e-03, -3.6278e-03,  6.5384e-03, -1.4229e-03, -1.0193e-02,
            5.3329e-03,  1.6052e-02]]]], dtype=torch.float16)
2025-05-16 03:02:52.509059 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), Tensor([2, 72, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 72],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-5.3787e-03, -5.2147e-03, -7.5912e-03, -7.8087e-03, -3.4561e-03,
            1.2980e-03, -1.1539e-04,  2.2106e-03, -4.2381e-03, -8.6308e-04,
            7.2327e-03,  7.7362e-03, -2.4506e-02,  3.2177e-03, -1.1277e-04,
           -1.3428e-02, -1.6344e-04, -7.2365e-03, -1.6775e-03, -1.0429e-02,
            3.3054e-03, -4.7531e-03, -8.4610e-03,  1.1398e-02,  1.9501e-02,
           -1.0124e-02,  1.9485e-02, -1.0315e-02, -3.3970e-03, -6.1646e-03,
            1.8263e-03,  1.7300e-03, -6.9275e-03,  1.3361e-03,  2.2461e-02,
            8.2169e-03,  4.9477e-03,  5.7678e-03,  3.9864e-03, -1.3420e-02,
           -7.4234e-03, -6.6376e-03,  3.7193e-03,  9.7198e-03,  2.4780e-02,
            7.7248e-03, -3.1677e-02, -1.2291e-02,  1.9241e-02,  2.7065e-03,
           -8.1482e-03, -6.4802e-04,  4.0016e-03,  6.5117e-03,  6.9199e-03,
            1.0582e-02,  3.0136e-02, -4.3602e-03,  9.6273e-04, -1.0384e-02,
            3.0384e-03, -5.9509e-03, -2.1286e-03,  1.0086e-02, -1.5640e-02,
            5.9962e-05,  3.0022e-03, -3.6659e-03, -5.5504e-03, -3.6030e-03,
           -3.0117e-03,  8.0643e-03]]],


        [[[ 2.6298e-04,  2.5139e-03,  5.0125e-03,  1.2178e-03, -1.2566e-02,
           -8.0948e-03, -1.4381e-02,  7.2212e-03,  1.8024e-03, -6.1455e-03,
           -2.3041e-02,  6.0005e-03,  3.4485e-03,  5.8403e-03,  1.5268e-03,
            9.7122e-03, -9.2685e-05,  1.2131e-02, -1.0506e-02,  2.5320e-04,
            3.3989e-03,  8.3694e-03, -3.5419e-03, -2.0248e-02,  1.5469e-03,
            5.1270e-03,  3.5076e-03,  5.9357e-03,  7.6962e-04, -3.0994e-03,
            7.2670e-04,  1.0777e-03,  7.1487e-03,  8.7814e-03,  5.7373e-03,
            2.2411e-05, -1.8940e-03,  1.6205e-02, -1.7639e-02, -1.2693e-03,
           -1.2245e-02, -3.8643e-03, -5.9175e-04,  9.6178e-04, -5.7831e-03,
            6.1913e-03, -1.3046e-02, -1.7290e-03, -6.3591e-03, -8.0414e-03,
            2.6875e-03,  4.7569e-03,  1.4900e-02,  7.2594e-03, -3.7594e-03,
            1.7563e-02, -2.9869e-03, -1.0201e-02, -2.4414e-03, -4.2763e-03,
           -7.9193e-03, -6.3896e-03,  1.8053e-03,  5.2681e-03, -3.3455e-03,
            4.4327e-03,  6.1836e-03, -3.4485e-03,  1.2039e-02,  4.2114e-03,
           -3.8242e-03,  9.2239e-03]]]], dtype=torch.float16)
2025-05-16 03:02:52.691061 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 73],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.6760e-03,  9.6178e-04,  8.3008e-03, -1.0567e-02, -1.0231e-02,
           -5.8479e-03,  5.2147e-03, -1.4656e-02,  8.0261e-03, -5.3825e-03,
           -6.8665e-04,  4.2000e-03,  3.0422e-03, -2.5520e-03,  3.8090e-03,
           -4.7989e-03,  2.0050e-02, -1.0567e-02, -1.0391e-02, -8.1787e-03,
            1.4633e-02, -8.2779e-03, -1.1504e-04,  3.2082e-03,  9.4376e-03,
           -9.9182e-04,  1.1337e-02, -1.8806e-03, -5.7449e-03,  6.1655e-04,
           -3.6392e-03,  1.4687e-02, -9.1505e-04,  2.1179e-02, -6.6872e-03,
           -1.4048e-03,  9.0027e-03, -8.8196e-03,  2.7332e-03, -1.3680e-02,
            7.1411e-03, -1.4626e-02, -1.1078e-02,  3.4561e-03,  1.2947e-02,
           -6.3133e-03, -2.3651e-03,  2.6779e-03, -8.8501e-04, -2.0279e-02,
            1.0292e-02,  4.3297e-03, -9.7198e-03, -2.0233e-02, -9.6893e-03,
           -1.2279e-05, -9.1629e-03,  3.5019e-03,  1.2177e-02, -7.5006e-04,
           -1.5335e-02,  3.7262e-02, -2.7084e-03, -3.4380e-04, -5.1117e-04,
            5.0201e-03,  2.1350e-04,  4.7035e-03,  4.5013e-03, -2.8534e-03,
           -1.0281e-03,  1.9531e-02, -1.6184e-03]]],


        [[[ 5.4092e-03, -1.6281e-02,  2.1439e-03,  2.8667e-03,  8.6441e-03,
           -2.0874e-02,  8.8196e-03,  8.9569e-03, -6.1646e-03, -2.0885e-03,
           -2.5131e-02,  8.6823e-03, -1.3130e-02, -2.9926e-03,  2.1248e-03,
           -3.3398e-03,  1.2566e-02,  8.6355e-04, -4.6387e-03, -5.3978e-03,
           -7.2718e-04,  1.0284e-02, -7.3662e-03,  1.0422e-02, -2.7714e-03,
            1.2108e-02,  9.0103e-03,  1.3298e-02, -1.5617e-02, -1.6495e-02,
           -1.9760e-02,  7.2250e-03,  3.3641e-04,  1.4915e-02, -1.5831e-03,
           -7.3662e-03, -3.4065e-03, -5.5542e-03,  2.8915e-03,  2.4307e-02,
           -1.6632e-02,  2.7919e-04, -2.7180e-04,  8.8930e-04,  3.6888e-03,
           -5.2795e-03,  5.5695e-03,  1.7643e-03,  1.3018e-03,  1.3245e-02,
            2.8439e-03,  4.8256e-03,  1.1053e-03,  2.0218e-03,  5.7220e-03,
            2.6703e-03,  2.7919e-04,  2.1610e-03, -3.4885e-03,  3.9768e-04,
           -1.1696e-02, -1.4915e-03, -3.4809e-05,  1.9913e-02, -8.2626e-03,
           -3.0346e-03, -1.2512e-03, -2.3937e-03, -7.8583e-03, -5.3883e-04,
            5.6534e-03,  8.3771e-03, -5.6572e-03]]]], dtype=torch.float16)
2025-05-16 03:02:52.913706 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), Tensor([2, 73, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 73],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 6.4087e-03, -2.3518e-03,  7.0419e-03, -1.0109e-02,  2.6941e-04,
            2.8809e-02, -7.3891e-03, -1.2367e-02,  2.0714e-03, -2.3327e-03,
           -7.2250e-03, -3.1796e-03, -1.9236e-03, -5.8250e-03,  7.6294e-03,
           -1.2035e-03,  1.0597e-02, -1.3237e-02,  3.7899e-03, -3.0117e-03,
            4.3907e-03, -6.7043e-04,  4.3526e-03,  1.4107e-02,  1.3542e-03,
           -4.2152e-03,  4.2915e-03,  6.4392e-03, -8.0032e-03,  1.7624e-03,
           -4.0627e-03, -7.0000e-03,  3.4752e-03, -5.2986e-03, -5.0545e-03,
            1.6663e-02,  9.8877e-03, -8.6288e-03,  4.8370e-03,  1.8860e-02,
            3.3417e-03,  1.3065e-03, -1.3390e-03,  3.4809e-03,  1.2993e-02,
            1.4019e-03, -3.8815e-03, -5.3329e-03,  6.8321e-03,  3.6983e-03,
            6.2370e-03, -8.1301e-04, -1.2840e-02,  1.3489e-02, -1.4984e-02,
           -1.9897e-02,  1.6708e-03,  1.0132e-02, -1.8372e-02,  2.5635e-03,
           -1.3123e-03,  1.2520e-02, -5.1308e-03,  7.9269e-03, -5.4300e-05,
           -1.4008e-02, -9.0256e-03, -1.5669e-03, -7.0000e-03,  9.9792e-03,
           -2.0447e-03, -1.9943e-02, -3.9940e-03]]],


        [[[ 6.2294e-03,  9.4528e-03, -1.8768e-02,  4.1885e-03, -9.7847e-04,
            3.0594e-02,  8.4381e-03, -2.1332e-02,  4.9324e-03,  2.7370e-04,
            3.2330e-03,  1.4297e-02,  2.2526e-03,  1.4404e-02, -7.6332e-03,
           -8.6823e-03, -1.7273e-02, -6.4964e-03, -1.4175e-02, -6.9656e-03,
            3.2635e-03,  9.5901e-03, -2.5345e-02, -6.2790e-03, -9.2850e-03,
            7.8354e-03,  4.8232e-04, -2.4414e-03,  8.1787e-03,  8.7280e-03,
            1.9372e-04,  1.2444e-02,  1.1854e-03, -1.2941e-03, -1.8806e-03,
           -5.5695e-03, -1.1110e-03, -2.9583e-03,  8.7509e-03,  8.0338e-03,
           -1.9119e-02,  1.1719e-02, -1.3196e-04, -4.7531e-03, -2.5055e-02,
           -5.5389e-03, -1.2680e-02,  4.2763e-03, -5.1231e-03,  8.2703e-03,
            1.9684e-03,  9.5215e-03,  2.3327e-03, -1.9943e-02,  4.7684e-03,
           -8.5526e-03,  1.1282e-03,  2.7954e-02,  2.8000e-02,  8.7280e-03,
            6.2866e-03,  3.3264e-03,  2.5978e-03, -1.1034e-03,  3.3722e-03,
           -1.8753e-02, -6.6147e-03,  1.0651e-02,  2.7657e-03, -1.2589e-03,
           -3.2291e-03, -1.0460e-02, -3.8013e-03]]]], dtype=torch.float16)
2025-05-16 03:02:53.178986 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 74],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.0834e-02, -8.7380e-05,  9.6989e-04,  1.8768e-03, -2.2461e-02,
           -3.1891e-03,  1.7967e-03, -2.4724e-04,  9.1782e-03, -6.5994e-03,
           -5.0774e-03, -8.2636e-04,  4.0741e-03, -8.4991e-03,  6.9084e-03,
            3.4466e-03, -7.4997e-03, -2.9602e-03,  6.4316e-03,  1.2154e-02,
            2.6379e-03,  1.1683e-03,  2.0813e-02,  5.7373e-03, -5.9929e-03,
           -5.7335e-03, -1.3283e-02,  9.9258e-03, -4.1466e-03, -1.2693e-03,
           -9.4128e-04,  5.6496e-03,  8.2541e-04,  5.6496e-03, -1.9932e-03,
           -3.0174e-03, -7.0190e-04, -1.5402e-03,  5.8985e-04, -2.1839e-03,
           -3.6030e-03, -4.4608e-04,  1.1375e-02, -9.5901e-03,  8.6594e-03,
           -1.2369e-03,  1.1513e-02, -1.1454e-03,  2.0390e-03,  3.2663e-04,
           -2.1729e-02, -1.8225e-03,  5.4855e-03,  3.6564e-03, -1.6113e-02,
           -2.7716e-05,  1.5707e-03, -6.5651e-03, -3.0689e-03,  7.4425e-03,
           -6.1340e-03,  1.2947e-02, -1.0529e-02,  1.1230e-02,  1.1757e-02,
            1.6928e-03, -1.4809e-02, -1.5676e-05, -5.9013e-03, -4.8981e-03,
           -2.0065e-03,  1.7653e-03,  4.8599e-03,  9.2030e-04]]],


        [[[ 3.0079e-03, -5.9357e-03, -1.0109e-02, -5.0774e-03,  9.4833e-03,
            9.0179e-03,  7.1297e-03,  1.3229e-02,  1.3046e-03, -8.7204e-03,
            1.0233e-03, -3.2368e-03,  6.0616e-03,  5.9242e-03, -9.1400e-03,
           -2.5344e-04, -2.6970e-03,  1.5106e-02, -4.5853e-03,  6.4707e-04,
            2.7294e-03, -6.3095e-03,  1.6281e-02,  1.0193e-02,  4.3602e-03,
            7.1907e-04, -1.4351e-02,  4.4441e-03,  1.4868e-03,  2.5539e-03,
            3.7842e-03, -1.3336e-02,  5.9814e-03,  3.4008e-03, -8.3694e-03,
            5.3883e-04,  2.3327e-03,  4.9877e-04, -1.3603e-02, -1.0681e-03,
           -2.0504e-03,  9.0866e-03,  7.7248e-03,  1.0468e-02,  1.4191e-03,
           -5.7077e-04,  5.5313e-03,  7.2899e-03,  1.2512e-02,  1.0567e-03,
            1.4362e-03,  5.7411e-03, -1.2871e-02, -1.8559e-03,  3.1242e-03,
           -4.4060e-03, -3.2558e-03, -2.3285e-02,  2.2755e-03,  4.8714e-03,
           -3.0499e-03,  2.5043e-03, -1.3718e-02, -1.5900e-02,  1.6373e-02,
           -9.1553e-03, -1.8005e-02,  7.2594e-03, -7.1192e-04, -1.0681e-02,
            4.0627e-03, -1.3695e-02, -9.9373e-04,  7.0114e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:53.386078 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), Tensor([2, 74, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 74],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 1.6663e-02, -1.7681e-03,  5.9853e-03, -1.7462e-03,  9.7046e-03,
            1.6983e-02,  3.7994e-03, -2.6894e-03, -8.5373e-03,  3.2978e-03,
            2.4815e-03,  4.3411e-03, -1.7181e-02, -2.5223e-02,  5.4436e-03,
            9.3460e-03,  1.0391e-02,  2.5368e-03,  6.3944e-04, -1.6159e-02,
           -1.2093e-02,  1.1269e-02, -1.2932e-02, -3.0556e-03,  1.8978e-03,
            1.1383e-02,  2.6283e-03, -1.0765e-02, -2.6608e-03,  1.0811e-02,
           -4.7874e-03,  7.6389e-04,  7.6714e-03, -1.5442e-02, -5.1842e-03,
            1.1360e-02,  4.3182e-03,  2.6169e-03,  1.1932e-02, -1.9150e-02,
           -4.9973e-03, -4.0207e-03, -2.9774e-03,  1.8478e-02, -3.4847e-03,
            2.6360e-03,  8.5449e-03,  7.6818e-04, -9.9716e-03, -1.3313e-02,
           -2.6646e-03, -2.6107e-04,  9.0790e-03,  6.1188e-03,  7.9880e-03,
            1.6235e-02,  8.1015e-04,  7.0534e-03,  7.5150e-03, -1.6174e-03,
           -6.8283e-03,  3.5267e-03, -2.4014e-03,  2.5902e-03,  1.1131e-02,
            7.5035e-03, -1.3878e-02,  2.7409e-03, -1.3947e-02, -2.1038e-03,
           -6.1874e-03, -1.4429e-03, -2.5131e-02, -6.4087e-03]]],


        [[[-1.2482e-02,  3.0727e-03,  5.5656e-03,  4.8294e-03, -7.8154e-04,
           -1.3649e-02, -5.7144e-03,  1.4715e-03, -1.4877e-03,  8.4758e-05,
            4.6692e-03, -1.8435e-03, -1.5404e-02,  8.7814e-03, -7.8917e-04,
            1.3113e-03,  7.1220e-03,  2.6054e-03, -1.3132e-03, -5.5351e-03,
            8.8425e-03,  1.1017e-02,  6.1073e-03,  1.3876e-04, -3.0403e-03,
           -1.6327e-02, -3.4714e-03,  1.0971e-02,  9.7656e-03,  3.8090e-03,
           -3.0160e-04,  4.8943e-03, -6.0768e-03, -9.9258e-03,  8.4534e-03,
            6.1226e-03,  5.6572e-03, -1.7639e-02,  4.2191e-03, -1.6434e-02,
           -1.7166e-02,  1.6832e-03,  3.6573e-04,  4.4975e-03, -8.6129e-05,
            7.0858e-04,  2.0828e-03, -3.8395e-03, -4.5128e-03, -1.3914e-03,
            2.5177e-03,  2.2163e-03,  1.9226e-02,  7.0801e-03,  6.6338e-03,
            3.4332e-03,  2.1225e-02,  1.9855e-03, -1.1795e-02, -1.4137e-02,
            4.7188e-03,  3.2902e-03, -4.6959e-03, -3.8929e-03,  7.1373e-03,
           -5.9357e-03,  8.6517e-03,  1.3229e-02,  2.0859e-02, -1.3878e-02,
           -2.1500e-02, -1.3992e-02, -1.6165e-03, -3.9864e-04]]]],
       dtype=torch.float16)
2025-05-16 03:02:53.564806 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 75],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 4.6387e-03, -8.8654e-03, -2.3232e-03, -1.6464e-02,  8.1711e-03,
            2.8133e-03, -1.6800e-02,  5.5199e-03,  1.3664e-02,  5.4283e-03,
            3.3903e-04, -6.0272e-03, -9.8724e-03, -1.2604e-02, -1.0368e-02,
            3.3016e-03, -1.0544e-02, -3.0632e-03, -6.5727e-03,  1.0347e-03,
            2.1610e-03, -8.1940e-03, -2.0828e-02, -6.8932e-03,  7.2670e-03,
           -8.7214e-04,  2.0485e-03,  8.7678e-05,  4.0321e-03, -2.2984e-03,
            1.4219e-03,  1.8549e-03, -6.6452e-03,  2.3788e-02,  4.1504e-03,
            6.4697e-03, -9.9716e-03, -5.0888e-03,  3.4981e-03, -1.2444e-02,
            2.2278e-02,  3.1185e-03, -1.4725e-02,  2.2297e-03, -1.2489e-02,
            4.3411e-03,  1.2222e-02,  1.2407e-03, -4.3640e-03, -3.6564e-03,
            9.2173e-04,  2.3384e-03,  4.9706e-03, -9.3307e-03,  1.7853e-02,
            5.9052e-03,  1.2749e-02, -1.5671e-02,  4.4518e-03,  1.1726e-02,
           -2.1423e-02, -3.6659e-03,  5.1460e-03,  1.8738e-02, -5.6000e-03,
            4.1733e-03, -1.4782e-03, -8.4610e-03, -3.6201e-03,  1.0056e-02,
            8.7357e-03,  8.6288e-03,  6.9008e-03,  4.7531e-03,  6.0501e-03]]],


        [[[-1.4023e-02, -3.1829e-04,  2.0905e-03, -6.7406e-03, -7.1564e-03,
           -7.2136e-03,  7.2517e-03,  4.8714e-03,  4.9362e-03,  9.8267e-03,
           -2.6360e-03, -9.1124e-04, -2.4090e-03, -8.7051e-03,  5.5428e-03,
            5.4550e-03, -2.3689e-03, -4.1504e-03,  1.0700e-03, -2.0065e-03,
            1.3908e-02, -4.7379e-03,  4.2610e-03,  3.4454e-02,  2.1496e-03,
            2.3115e-04,  7.9575e-03,  1.3084e-03, -2.8381e-03,  1.1330e-02,
           -1.2383e-02, -1.3992e-02,  1.4248e-03, -8.7585e-03,  5.0507e-03,
           -1.0818e-02, -6.5994e-03,  6.2675e-03, -1.3794e-02,  3.5458e-03,
           -1.2604e-02,  1.8492e-03,  7.4530e-04,  2.8095e-03, -2.1172e-03,
            1.5965e-03, -6.9141e-04,  1.0864e-02,  2.5940e-02,  1.5388e-02,
           -7.0839e-03,  9.3079e-03,  1.4145e-02, -3.9673e-02, -1.0635e-02,
            2.1057e-03, -2.9697e-03, -1.4925e-03, -9.0103e-03, -3.8910e-04,
            5.6648e-03, -1.4353e-03,  1.4511e-02,  6.2370e-03,  7.7515e-03,
           -1.8752e-04,  3.4885e-03, -2.2640e-03, -1.0468e-02, -2.0782e-02,
            1.4862e-02,  9.7809e-03, -1.8097e-02,  1.0192e-04, -7.6256e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:53.790094 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), Tensor([2, 75, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 75],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0238, -0.0102,  0.0091,  0.0109, -0.0005,  0.0017, -0.0014,
           -0.0014,  0.0235,  0.0076, -0.0064,  0.0002, -0.0128, -0.0152,
           -0.0053,  0.0259, -0.0080, -0.0004,  0.0012, -0.0112, -0.0027,
           -0.0272, -0.0017,  0.0047, -0.0048,  0.0078,  0.0057,  0.0123,
           -0.0135,  0.0044,  0.0111,  0.0121,  0.0055,  0.0004, -0.0020,
            0.0016,  0.0236, -0.0029, -0.0125, -0.0082, -0.0185, -0.0065,
            0.0019,  0.0061,  0.0122, -0.0164, -0.0119, -0.0070, -0.0009,
           -0.0066,  0.0017,  0.0038, -0.0152,  0.0030,  0.0041,  0.0059,
            0.0121, -0.0005, -0.0245, -0.0054, -0.0016, -0.0185,  0.0070,
            0.0057,  0.0160,  0.0039,  0.0098, -0.0011, -0.0070,  0.0128,
            0.0024, -0.0079,  0.0031, -0.0046, -0.0020]]],


        [[[ 0.0158, -0.0104, -0.0018,  0.0009,  0.0064, -0.0163,  0.0115,
            0.0144, -0.0064, -0.0164, -0.0063,  0.0042,  0.0051,  0.0066,
           -0.0052,  0.0079,  0.0053, -0.0022,  0.0101,  0.0041, -0.0088,
           -0.0097, -0.0072,  0.0002, -0.0071,  0.0118, -0.0058, -0.0038,
            0.0036,  0.0039, -0.0049, -0.0067,  0.0062, -0.0060,  0.0023,
           -0.0049, -0.0085,  0.0068, -0.0140,  0.0114, -0.0020, -0.0191,
           -0.0011,  0.0249,  0.0195,  0.0021,  0.0044, -0.0145, -0.0063,
            0.0122, -0.0016, -0.0015, -0.0143,  0.0138, -0.0024,  0.0160,
           -0.0011, -0.0044,  0.0081, -0.0024,  0.0016,  0.0147, -0.0040,
           -0.0050,  0.0049, -0.0035,  0.0014,  0.0072, -0.0013, -0.0074,
            0.0008, -0.0145, -0.0027, -0.0018, -0.0067]]]],
       dtype=torch.float16)
2025-05-16 03:02:54.042587 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 76],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.7670e-02,  1.4122e-02,  4.9210e-03,  3.1233e-04,  3.6469e-02,
           -1.0529e-03, -1.8625e-03, -9.0933e-04,  1.8597e-03, -3.4785e-04,
           -3.0231e-03, -4.2343e-03,  1.0307e-02, -2.4300e-03,  4.5433e-03,
            1.7288e-02, -1.1192e-02,  1.7109e-03,  4.1771e-03,  4.7417e-03,
            4.1466e-03, -9.3765e-03, -2.3460e-03,  3.8013e-03, -1.0433e-03,
           -4.7684e-04,  2.5964e-04,  9.3002e-03, -3.2444e-03, -2.9583e-03,
            6.7406e-03, -8.0338e-03,  1.1841e-02,  4.3058e-04, -1.3504e-02,
            8.7128e-03, -2.4815e-03,  2.4395e-03, -5.3120e-04,  4.6425e-03,
           -6.7825e-03, -2.1648e-03,  1.1673e-02, -2.8992e-03,  1.8021e-02,
           -3.2120e-03, -7.2823e-03, -2.8992e-03,  5.9395e-03,  4.5509e-03,
           -1.2009e-02,  1.1311e-03, -6.0005e-03, -5.2567e-03, -8.9111e-03,
           -6.3057e-03,  1.0445e-02, -1.1490e-02, -1.0689e-02, -7.5951e-03,
           -2.2869e-03, -7.0076e-03,  2.0733e-03,  2.2259e-03, -8.9493e-03,
           -1.4343e-02, -1.4744e-03,  6.4125e-03,  6.5346e-03,  5.8899e-03,
            3.3188e-03, -2.3518e-03, -7.3662e-03,  7.2784e-03, -3.4180e-03,
           -1.0857e-02]]],


        [[[-2.8725e-03, -6.2027e-03, -1.2764e-02, -8.4305e-03,  1.3008e-02,
           -1.6159e-02,  1.5457e-02, -1.6113e-02,  1.2657e-02,  1.9119e-02,
           -8.0109e-03,  3.4881e-04,  3.5461e-02,  4.7989e-03, -1.0468e-02,
           -4.5013e-03, -1.0582e-02,  1.0002e-02, -7.5769e-04, -1.1581e-02,
           -4.5547e-03, -1.5106e-02, -1.4664e-02, -4.1565e-02,  8.6823e-03,
            5.2261e-03, -1.1513e-02,  4.8599e-03,  2.5146e-02,  4.1695e-03,
            1.4397e-02, -1.5244e-02,  3.2749e-03, -9.5596e-03,  8.6823e-03,
            7.9193e-03,  7.3280e-03,  2.8872e-04, -6.9199e-03, -6.5517e-04,
           -1.1612e-02, -1.7853e-02,  5.0087e-03, -1.4992e-03,  2.0504e-03,
           -4.8599e-03,  3.7918e-03, -1.3481e-02, -8.8577e-03, -4.4823e-03,
            9.2621e-03,  2.5139e-03, -2.7790e-03,  8.6136e-03,  4.1992e-02,
            9.0256e-03, -1.7233e-03,  1.6909e-03, -1.4046e-02, -2.6536e-04,
           -2.6035e-03,  1.6870e-03,  3.2597e-03,  1.8396e-03, -1.1147e-02,
            1.0986e-02,  9.8419e-03, -6.8169e-03,  7.6723e-04,  1.3695e-02,
           -7.4692e-03, -5.0430e-03,  5.6114e-03, -3.3073e-03, -1.4901e-05,
            1.3611e-02]]]], dtype=torch.float16)
2025-05-16 03:02:54.290586 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), Tensor([2, 76, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 76],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 3.2377e-04,  3.9024e-03,  8.5831e-03, -5.3940e-03,  1.0948e-03,
            9.0714e-03, -5.6343e-03, -1.1864e-02,  2.2110e-02,  7.3891e-03,
           -1.7500e-04,  9.7847e-04,  5.6763e-03, -6.5994e-03,  3.9978e-03,
            1.3008e-03,  3.3722e-02, -1.1192e-02, -3.1719e-03,  8.0795e-03,
           -7.3814e-03, -1.6394e-03,  4.2129e-04,  6.9237e-03,  2.5215e-03,
            5.3215e-03, -6.9733e-03,  7.0839e-03, -6.1722e-03, -3.8719e-03,
            1.5497e-03,  1.0994e-02, -1.8692e-02, -1.0689e-02, -3.5572e-03,
            7.3204e-03, -5.6915e-03, -3.0708e-04,  6.7787e-03, -7.8354e-03,
            2.1149e-02,  1.4107e-02,  3.3607e-03, -8.0566e-03, -6.2513e-04,
            5.0621e-03, -3.6011e-03, -6.5327e-04, -2.6741e-03, -4.2000e-03,
           -8.4457e-03, -1.1040e-02, -1.3046e-02, -1.2405e-02, -8.3389e-03,
            1.4870e-02, -2.8954e-03, -1.4849e-03, -3.6621e-03,  9.4833e-03,
           -6.9008e-03, -5.6648e-03,  2.4605e-03, -1.5945e-02, -1.9703e-03,
            5.2795e-03,  9.5749e-03,  1.4267e-02, -1.4572e-02, -1.5001e-03,
           -4.1618e-03,  5.2414e-03, -1.4629e-03,  1.2255e-03, -1.1139e-02,
            6.5625e-05]]],


        [[[ 1.6689e-03, -2.6464e-04,  1.5068e-02, -8.8348e-03,  5.4741e-03,
           -1.1726e-02,  1.4915e-02, -5.6877e-03,  5.3692e-04,  1.0704e-02,
            1.4435e-02,  1.7157e-03, -1.3054e-02,  3.4466e-03, -1.4420e-02,
            2.5311e-03, -3.9744e-04,  2.2186e-02,  1.0780e-02,  1.5955e-03,
           -1.0345e-02,  2.3136e-03, -1.2947e-02,  1.7090e-02,  2.9182e-04,
           -1.0986e-02, -3.4943e-03, -9.0103e-03,  2.7866e-03,  4.7035e-03,
           -1.5192e-03, -4.9896e-03,  5.7259e-03, -1.0017e-02,  1.7428e-04,
            3.4676e-03, -1.5480e-02, -3.2749e-03, -1.9989e-02,  5.5733e-03,
           -1.8509e-02,  1.6495e-02, -1.6832e-03,  3.1433e-03, -4.9553e-03,
            4.8027e-03, -1.6356e-03,  4.1351e-03,  1.0597e-02,  1.3931e-02,
           -4.8208e-04,  6.2218e-03, -3.1590e-05,  3.5744e-03, -1.8806e-03,
           -1.6159e-02,  6.9618e-03, -1.6296e-02, -7.8506e-03, -1.3000e-02,
            5.0774e-03,  3.4409e-03, -7.8278e-03,  2.0386e-02, -5.5122e-03,
            4.0398e-03,  1.9791e-02, -9.9258e-03,  3.4847e-03, -4.1795e-04,
           -2.1820e-03,  2.6226e-03,  3.2825e-03, -4.5586e-03,  4.6654e-03,
           -1.4481e-02]]]], dtype=torch.float16)
2025-05-16 03:02:54.489977 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 77],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0108, -0.0002,  0.0164,  0.0051,  0.0020, -0.0062, -0.0041,
            0.0048, -0.0148, -0.0119,  0.0074,  0.0124, -0.0027,  0.0055,
            0.0003, -0.0175, -0.0225,  0.0079,  0.0128,  0.0002, -0.0076,
            0.0074, -0.0007, -0.0051, -0.0105, -0.0221,  0.0049, -0.0012,
           -0.0017, -0.0005,  0.0067, -0.0001, -0.0017,  0.0035,  0.0001,
            0.0029, -0.0050,  0.0144, -0.0086,  0.0054, -0.0106,  0.0033,
            0.0034,  0.0039, -0.0052, -0.0043, -0.0031,  0.0021,  0.0156,
           -0.0009, -0.0167, -0.0050,  0.0197,  0.0031, -0.0044, -0.0090,
           -0.0100,  0.0065, -0.0054,  0.0058, -0.0176, -0.0050, -0.0033,
            0.0166, -0.0252,  0.0035,  0.0025,  0.0042,  0.0028,  0.0232,
            0.0044,  0.0066, -0.0004,  0.0119,  0.0192,  0.0070, -0.0042]]],


        [[[ 0.0036,  0.0109, -0.0056,  0.0002, -0.0039,  0.0039,  0.0014,
           -0.0011, -0.0102, -0.0036,  0.0023, -0.0065,  0.0082,  0.0112,
            0.0169, -0.0129, -0.0009, -0.0015,  0.0047,  0.0020, -0.0110,
            0.0091,  0.0017, -0.0064,  0.0016,  0.0157,  0.0090, -0.0065,
           -0.0044, -0.0224,  0.0079, -0.0060, -0.0052,  0.0013, -0.0034,
            0.0162, -0.0128,  0.0077, -0.0005,  0.0016,  0.0003,  0.0035,
           -0.0022,  0.0070, -0.0016, -0.0023, -0.0035, -0.0041, -0.0135,
           -0.0067, -0.0024,  0.0186,  0.0034, -0.0021,  0.0031, -0.0104,
            0.0067, -0.0038, -0.0018, -0.0004, -0.0006, -0.0140,  0.0078,
           -0.0005,  0.0067, -0.0090,  0.0021, -0.0052,  0.0079, -0.0008,
           -0.0043,  0.0153,  0.0030, -0.0032, -0.0006, -0.0023, -0.0021]]]],
       dtype=torch.float16)
2025-05-16 03:02:54.699536 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), Tensor([2, 77, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 77],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 8.5373e-03,  1.4496e-03, -1.3199e-02, -9.3079e-03,  7.3853e-03,
           -6.1722e-03,  1.9760e-03,  1.9608e-02, -6.9008e-03, -1.0252e-03,
           -3.6755e-03, -8.7051e-03, -5.8784e-03, -1.0590e-02, -1.2375e-02,
           -2.4529e-03,  5.2261e-03, -8.4915e-03,  3.0785e-03,  9.7504e-03,
            6.3400e-03,  5.1003e-03, -2.2907e-03,  9.7122e-03,  2.1286e-03,
           -3.1929e-03, -1.5747e-02,  7.1602e-03, -1.2627e-03, -8.5602e-03,
            1.6144e-02, -1.7578e-02, -4.3640e-03,  3.9673e-03,  4.8637e-03,
           -9.1858e-03,  3.3627e-03,  3.6411e-03,  6.3362e-03,  1.9312e-05,
            1.0651e-02,  8.6594e-03, -2.7275e-03,  7.0953e-03,  3.7956e-03,
            9.6750e-04,  6.5842e-03,  4.3335e-03, -1.1070e-02, -1.9035e-03,
           -1.3113e-03,  8.4758e-05, -1.3573e-02, -3.7174e-03,  1.0986e-02,
            1.2283e-02,  9.9869e-03, -9.0027e-03, -7.3929e-03, -3.6297e-03,
           -4.5319e-03,  4.0016e-03,  6.2256e-03, -1.6907e-02, -3.7346e-03,
            7.9880e-03, -8.9550e-04,  1.5602e-02,  5.0468e-03,  8.7280e-03,
           -9.4986e-03, -7.3509e-03, -4.4708e-03,  1.8520e-03,  4.4942e-05,
            1.2634e-02, -1.0635e-02]]],


        [[[ 5.6305e-03,  1.6220e-02,  2.2850e-03, -3.6144e-03,  1.0170e-02,
           -1.6003e-03, -6.2408e-03, -1.6464e-02, -3.2449e-04,  5.5199e-03,
           -2.7969e-02, -1.8753e-02, -1.3142e-03,  3.0441e-03,  4.7913e-03,
           -1.2589e-02,  4.3602e-03,  1.0223e-02,  8.7881e-04,  1.0605e-02,
            1.8295e-02, -5.3635e-03,  8.1940e-03,  4.9438e-03, -2.8057e-03,
            4.7989e-03, -5.2147e-03,  7.0877e-03, -2.4166e-03, -5.5618e-03,
            7.7934e-03, -1.0023e-03,  5.3215e-04,  2.6550e-02,  3.3150e-03,
            1.1177e-02, -8.9493e-03,  5.0392e-03, -1.3361e-03,  4.9362e-03,
            1.6594e-03,  1.2274e-03, -1.6661e-03, -4.1809e-03,  9.4757e-03,
           -3.4294e-03, -9.4681e-03, -1.4915e-02, -4.9820e-03, -9.9335e-03,
           -2.7885e-03, -6.9046e-03,  6.0997e-03, -5.6076e-03,  1.2047e-02,
            5.0888e-03,  5.4779e-03,  8.2779e-03,  3.4561e-03,  1.3893e-02,
           -1.1513e-02, -6.2752e-03, -5.2185e-03, -4.7836e-03, -4.2267e-03,
           -4.9210e-03,  1.1551e-02, -5.0240e-03,  7.8278e-03, -7.7057e-03,
           -1.4809e-02, -9.3460e-03,  6.5460e-03,  1.8482e-03,  1.3113e-03,
           -9.1858e-03, -3.7823e-03]]]], dtype=torch.float16)
2025-05-16 03:02:54.932589 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 78],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0099,  0.0169,  0.0021,  0.0003,  0.0016,  0.0025,  0.0059,
           -0.0038, -0.0155,  0.0043,  0.0226,  0.0046,  0.0063,  0.0045,
            0.0048, -0.0079, -0.0100,  0.0083,  0.0089,  0.0057,  0.0118,
           -0.0056, -0.0269,  0.0052,  0.0021, -0.0005, -0.0031, -0.0066,
           -0.0033, -0.0244,  0.0023, -0.0061, -0.0061, -0.0007,  0.0042,
            0.0035, -0.0083,  0.0092,  0.0106,  0.0091, -0.0089,  0.0054,
            0.0086,  0.0034, -0.0409, -0.0078, -0.0055,  0.0095, -0.0021,
           -0.0103,  0.0025,  0.0117, -0.0110,  0.0112, -0.0085, -0.0089,
            0.0090, -0.0104,  0.0044,  0.0135, -0.0019,  0.0054, -0.0030,
           -0.0219, -0.0003, -0.0030,  0.0065,  0.0006,  0.0160,  0.0031,
            0.0079, -0.0015, -0.0009,  0.0135, -0.0101, -0.0095,  0.0010,
            0.0144]]],


        [[[ 0.0128, -0.0259, -0.0114,  0.0186,  0.0056, -0.0078,  0.0044,
           -0.0086, -0.0139, -0.0090,  0.0134,  0.0043,  0.0009,  0.0039,
           -0.0141, -0.0019,  0.0050, -0.0148, -0.0087, -0.0109, -0.0053,
           -0.0021, -0.0135,  0.0107,  0.0154, -0.0060,  0.0100, -0.0123,
           -0.0016, -0.0011,  0.0158, -0.0065,  0.0049, -0.0039, -0.0174,
           -0.0022,  0.0057, -0.0090,  0.0018, -0.0043,  0.0072, -0.0082,
           -0.0039, -0.0048, -0.0011,  0.0133, -0.0146,  0.0125, -0.0045,
           -0.0008,  0.0134,  0.0072,  0.0177,  0.0009, -0.0009,  0.0084,
           -0.0087, -0.0074,  0.0098,  0.0063, -0.0004,  0.0054, -0.0011,
           -0.0044, -0.0078, -0.0031,  0.0221, -0.0128,  0.0013,  0.0170,
            0.0055, -0.0021,  0.0100,  0.0002,  0.0077, -0.0054,  0.0037,
            0.0014]]]], dtype=torch.float16)
2025-05-16 03:02:55.203159 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), Tensor([2, 78, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 78],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0001, -0.0052, -0.0068,  0.0083, -0.0053, -0.0047,  0.0050,
            0.0035,  0.0113, -0.0130, -0.0002,  0.0002,  0.0054,  0.0098,
           -0.0094, -0.0012,  0.0065,  0.0003, -0.0053,  0.0136,  0.0036,
           -0.0079, -0.0143,  0.0149, -0.0048,  0.0023,  0.0043, -0.0261,
           -0.0052,  0.0085,  0.0042, -0.0084, -0.0022,  0.0109, -0.0072,
           -0.0065,  0.0103, -0.0111,  0.0195,  0.0041,  0.0062,  0.0029,
            0.0098,  0.0036,  0.0018, -0.0067, -0.0047, -0.0008,  0.0030,
           -0.0075, -0.0025,  0.0034,  0.0040,  0.0004, -0.0060, -0.0143,
           -0.0094,  0.0065, -0.0120,  0.0037,  0.0033,  0.0018, -0.0043,
            0.0105, -0.0003,  0.0027,  0.0049,  0.0068, -0.0011, -0.0054,
            0.0187,  0.0031,  0.0151, -0.0132, -0.0022, -0.0092, -0.0113,
           -0.0034]]],


        [[[ 0.0093, -0.0069, -0.0044,  0.0056, -0.0109, -0.0002, -0.0045,
           -0.0126,  0.0041,  0.0116, -0.0016,  0.0009,  0.0086, -0.0011,
           -0.0060,  0.0088, -0.0143, -0.0082,  0.0058, -0.0057, -0.0008,
            0.0032, -0.0232, -0.0108, -0.0104, -0.0046, -0.0007, -0.0061,
            0.0027,  0.0054,  0.0026,  0.0067,  0.0105, -0.0054,  0.0104,
            0.0067, -0.0039, -0.0182, -0.0042,  0.0292,  0.0055, -0.0163,
           -0.0012,  0.0067, -0.0060, -0.0009,  0.0100,  0.0102,  0.0151,
            0.0043, -0.0079,  0.0086,  0.0283,  0.0085, -0.0078,  0.0005,
           -0.0052, -0.0186,  0.0042, -0.0074, -0.0051, -0.0047, -0.0064,
           -0.0070,  0.0087,  0.0235, -0.0078, -0.0074,  0.0009, -0.0022,
            0.0063, -0.0065, -0.0077,  0.0057,  0.0019,  0.0034, -0.0047,
            0.0108]]]], dtype=torch.float16)
2025-05-16 03:02:55.446013 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 79],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0093,  0.0046, -0.0001, -0.0145,  0.0102,  0.0017,  0.0014,
            0.0054, -0.0038,  0.0043, -0.0006,  0.0073,  0.0014, -0.0106,
           -0.0004,  0.0004,  0.0002, -0.0245, -0.0043,  0.0012, -0.0149,
           -0.0011, -0.0035,  0.0110,  0.0014,  0.0056, -0.0024,  0.0017,
           -0.0023,  0.0081,  0.0026, -0.0036,  0.0176,  0.0054,  0.0015,
            0.0098,  0.0217, -0.0064,  0.0019,  0.0019,  0.0014,  0.0012,
           -0.0054, -0.0247,  0.0046, -0.0019,  0.0017, -0.0105, -0.0011,
           -0.0117,  0.0036,  0.0077, -0.0119, -0.0061,  0.0058, -0.0053,
            0.0029,  0.0005,  0.0019, -0.0064,  0.0008, -0.0032,  0.0016,
            0.0043,  0.0026,  0.0197, -0.0010, -0.0072, -0.0035, -0.0079,
           -0.0073, -0.0205,  0.0113,  0.0065, -0.0017,  0.0012,  0.0180,
           -0.0028, -0.0017]]],


        [[[-0.0117, -0.0163,  0.0060,  0.0035, -0.0021, -0.0112,  0.0119,
            0.0053,  0.0058,  0.0021, -0.0106, -0.0041, -0.0094, -0.0052,
           -0.0043,  0.0015, -0.0061, -0.0056,  0.0185, -0.0014, -0.0014,
            0.0070,  0.0045,  0.0012,  0.0129, -0.0147,  0.0064, -0.0076,
           -0.0072, -0.0062, -0.0078,  0.0067,  0.0080,  0.0026, -0.0021,
            0.0027,  0.0255,  0.0135,  0.0077,  0.0078,  0.0091, -0.0070,
           -0.0007, -0.0021,  0.0064, -0.0075, -0.0034,  0.0062, -0.0045,
            0.0020, -0.0022, -0.0077, -0.0140,  0.0017,  0.0149, -0.0025,
           -0.0084,  0.0013,  0.0090,  0.0088, -0.0044, -0.0106,  0.0014,
            0.0030,  0.0061,  0.0024, -0.0007, -0.0037, -0.0041, -0.0017,
            0.0026, -0.0120,  0.0016, -0.0038, -0.0073,  0.0045, -0.0121,
            0.0148, -0.0020]]]], dtype=torch.float16)
2025-05-16 03:02:55.616968 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), Tensor([2, 79, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 79],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 8.5688e-04, -5.3215e-03, -2.9297e-03, -5.0201e-03, -3.1605e-03,
           -2.5711e-03,  5.5885e-03,  6.3515e-03, -1.1513e-02, -7.1945e-03,
            1.9951e-03, -1.4544e-03,  9.0637e-03,  3.3169e-03, -8.5258e-04,
            2.6608e-03,  2.0508e-02,  1.2115e-02,  1.2260e-02, -2.2011e-03,
           -7.8583e-04,  3.6860e-04,  2.6367e-02,  1.3981e-03,  4.5586e-04,
           -1.3580e-02,  2.9430e-03, -1.4641e-02,  1.0643e-02,  7.8976e-05,
            8.8730e-03, -2.2751e-02, -1.3321e-02,  5.0659e-03,  3.9101e-03,
            2.1343e-03, -8.8501e-03, -1.0796e-03, -3.1891e-02, -1.6129e-02,
            1.0519e-03, -5.9853e-03, -1.1978e-03,  2.2449e-03, -1.5697e-03,
            7.6828e-03,  6.5651e-03,  5.8022e-03,  8.4991e-03,  3.2005e-03,
           -4.1466e-03, -9.8343e-03,  2.0081e-02,  6.1989e-03,  4.3259e-03,
           -4.0779e-03,  5.7335e-03, -6.5613e-03, -1.6510e-02,  1.2503e-03,
            8.8155e-05, -1.8402e-02, -2.6016e-03, -9.4223e-03, -4.6301e-04,
           -4.8065e-03,  3.6583e-03, -4.4708e-03,  2.4319e-03,  4.0131e-03,
           -1.6336e-03, -3.0994e-03,  9.1171e-03,  9.1324e-03,  1.0010e-02,
            4.5891e-03,  7.6141e-03,  3.2024e-03, -3.4351e-03]]],


        [[[ 6.4087e-03, -1.2260e-02, -1.5888e-03, -3.4046e-03,  2.2907e-03,
           -9.4757e-03,  4.8943e-03, -1.6861e-02,  1.2291e-02, -7.7581e-04,
           -2.1019e-03,  6.8130e-03,  2.2471e-04,  8.7891e-03,  4.9067e-04,
           -6.5498e-03,  1.7181e-02,  2.9430e-03,  4.4365e-03, -6.2561e-03,
           -8.9722e-03,  2.0485e-03, -2.9221e-03,  1.3000e-02,  5.1727e-03,
           -3.6316e-03, -2.9411e-03, -1.3252e-02,  4.4274e-04, -8.6737e-04,
            9.8419e-03, -1.5915e-02,  6.6137e-04,  8.5831e-03, -6.9885e-03,
            2.2812e-03, -3.3493e-03,  9.9182e-03, -6.3362e-03,  1.9073e-02,
            2.7145e-02,  1.1759e-03, -1.3819e-03,  2.4281e-03,  1.7120e-02,
           -5.1651e-03, -4.0436e-03,  5.2948e-03, -1.2093e-03,  4.8637e-03,
           -9.8724e-03, -6.8283e-03,  6.3972e-03, -5.8975e-03, -6.7377e-04,
            3.7613e-03,  6.1836e-03,  5.5466e-03, -1.2344e-02,  1.7105e-02,
           -2.6608e-03, -7.9155e-04, -4.4823e-03, -6.5536e-03,  1.2955e-02,
           -6.8245e-03, -1.2863e-02,  8.3389e-03,  7.2250e-03, -3.0350e-02,
           -8.7128e-03,  1.1635e-02, -3.2978e-03, -1.0368e-02, -1.5762e-02,
           -2.1324e-03, -6.1226e-04,  8.5592e-04,  1.4458e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:55.771723 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 80],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-6.6872e-03, -1.0014e-03,  2.9259e-03,  2.2144e-03,  1.9440e-02,
            9.2163e-03, -2.3460e-03, -9.4833e-03, -5.5199e-03, -3.9005e-03,
            8.6365e-03,  2.0844e-02,  2.3102e-02,  2.7054e-02,  4.1389e-03,
           -9.4528e-03, -2.9612e-04, -2.9259e-03, -1.8158e-02,  1.0025e-02,
            2.9488e-03,  1.5726e-03, -1.3016e-02, -9.5367e-03, -3.8166e-03,
           -9.3079e-03, -8.5220e-03, -2.1774e-02,  2.8229e-03,  7.7324e-03,
            2.2812e-02, -6.5842e-03,  1.3367e-02,  9.8648e-03,  1.3676e-03,
           -2.0950e-02,  4.7760e-03, -3.6449e-03, -2.5082e-03, -4.6515e-04,
           -9.4223e-04, -9.1705e-03, -6.9923e-03,  3.0441e-03, -4.3259e-03,
            1.0300e-02, -1.1337e-02, -8.1635e-03, -1.3771e-02,  4.5471e-03,
            6.7406e-03,  1.5593e-03,  4.1199e-03,  2.2640e-03, -9.4604e-03,
           -1.8234e-02,  4.6635e-04,  1.9745e-02,  2.9888e-03, -8.2016e-04,
           -1.0071e-03,  1.0597e-02,  2.0103e-03,  2.0981e-03, -2.5940e-03,
           -1.2901e-02,  6.6109e-03, -6.8932e-03, -1.9470e-02,  2.5349e-03,
            8.4763e-03, -3.1090e-03, -1.0681e-02, -1.7490e-03,  8.8425e-03,
            1.0078e-02,  2.3305e-04, -3.5858e-03,  9.6512e-03, -6.6261e-03]]],


        [[[ 9.4652e-04,  9.2087e-03, -1.8234e-03, -3.7060e-03, -8.0872e-03,
           -3.3417e-02,  2.3365e-03, -3.7975e-03, -4.8714e-03,  5.4665e-03,
            8.6594e-03, -9.8495e-03,  1.8478e-02, -2.0576e-04, -5.2032e-03,
           -1.4267e-02,  2.1896e-02, -1.2836e-03, -7.8354e-03,  1.8387e-02,
           -3.2215e-03,  3.9635e-03,  2.7344e-02,  6.5308e-03,  8.8501e-03,
            8.0872e-03, -2.6112e-03, -1.0433e-03, -2.0790e-04, -4.3526e-03,
           -1.2489e-02, -1.4023e-02,  5.0087e-03, -8.8425e-03,  2.9545e-03,
            3.9711e-03, -3.0971e-04,  6.6948e-03, -2.1229e-03,  1.6907e-02,
           -2.5539e-03, -7.2861e-03, -9.2850e-03,  4.5509e-03, -2.2522e-02,
           -3.1853e-03, -5.2071e-03, -1.1349e-03, -1.4824e-02, -1.2337e-02,
           -9.0408e-03,  4.4022e-03,  6.3400e-03,  1.6356e-03, -5.4550e-04,
            2.8133e-03,  8.8501e-03, -6.0158e-03,  4.3831e-03,  1.6108e-03,
           -8.1635e-04,  5.1193e-03, -4.4212e-03,  8.8272e-03, -1.2718e-02,
           -7.4348e-03,  1.3687e-02,  1.0056e-02,  2.8458e-02,  6.2256e-03,
           -6.7787e-03, -7.5378e-03, -8.5754e-03,  2.2156e-02,  3.4981e-03,
            1.2627e-03, -1.8631e-02,  5.5075e-05, -9.2936e-04, -4.2953e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:55.923780 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), Tensor([2, 80, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 80],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 5.6572e-03, -6.8855e-03, -1.1726e-02, -4.6806e-03, -9.2163e-03,
            3.2673e-03, -7.1335e-03, -5.6076e-03,  5.7869e-03, -3.3455e-03,
            9.0256e-03,  1.1549e-03,  2.8000e-03, -1.1101e-02, -1.2878e-02,
            4.5471e-03,  2.7828e-03,  5.7297e-03,  7.7515e-03, -1.2886e-02,
           -3.9444e-03, -2.6941e-04, -7.3967e-03,  9.7275e-03, -1.5778e-02,
           -9.2793e-04,  1.4473e-02,  5.6152e-03,  4.1084e-03, -3.5706e-03,
            9.2850e-03, -4.1428e-03,  7.8049e-03,  2.8095e-03, -5.7106e-03,
            1.2665e-03,  5.0316e-03,  5.2261e-03,  2.0390e-03, -3.6983e-03,
            4.8218e-03,  3.3112e-02,  1.6050e-03,  6.2370e-03, -2.2411e-03,
            3.0766e-03, -9.8953e-03, -1.4908e-02, -3.6335e-03, -5.6229e-03,
           -1.1513e-02,  1.6809e-04, -4.5509e-03,  5.0125e-03, -5.6953e-03,
            2.3060e-03,  2.4124e-02, -3.7899e-03,  1.2047e-02,  3.4409e-03,
           -7.5951e-03, -7.8430e-03,  2.4155e-02, -6.1684e-03, -9.1476e-03,
           -7.2937e-03,  4.9706e-03, -9.2926e-03, -4.2267e-03,  4.2610e-03,
            2.0199e-03, -2.4071e-03,  6.2790e-03, -1.9333e-02, -7.6294e-03,
            3.1681e-03,  1.3916e-02,  9.0256e-03,  2.1877e-03, -8.1329e-03]]],


        [[[-1.0101e-02, -1.7029e-02, -3.0041e-03, -7.1859e-04,  2.4281e-03,
           -2.1572e-03, -2.0924e-03, -4.7951e-03,  4.0889e-05,  5.2452e-03,
           -7.4005e-03,  9.9792e-03,  4.3983e-03,  1.6403e-02,  9.0790e-03,
            1.3790e-03,  3.7079e-03,  8.7280e-03, -7.5493e-03,  3.5038e-03,
            4.5090e-03,  3.1567e-04,  1.3794e-02, -2.4581e-04, -6.2447e-03,
           -1.1909e-02,  3.0403e-03, -1.1871e-02,  6.4325e-04, -4.2648e-03,
           -1.5850e-03, -8.2855e-03,  4.6349e-03,  1.0233e-03,  1.1520e-02,
           -5.3101e-03,  2.8572e-03, -8.8072e-04,  5.8899e-03, -7.0333e-04,
            1.9112e-03, -1.9932e-03, -3.5703e-05,  2.4166e-03, -2.2316e-03,
            5.9700e-03,  6.3362e-03,  1.3428e-02, -4.5853e-03,  6.7406e-03,
           -4.0855e-03, -3.4809e-04,  4.0817e-03, -6.8588e-03, -1.2674e-03,
           -4.1306e-05,  2.2068e-03,  3.1395e-03, -1.9287e-02,  1.0384e-02,
            1.5030e-02,  7.6332e-03, -7.3853e-03,  1.7700e-02,  5.3520e-03,
            1.6556e-03,  2.8286e-03, -1.3664e-02, -1.1192e-02, -2.0660e-02,
            6.0463e-03,  9.7942e-04,  4.0741e-03, -1.0963e-02, -7.2575e-04,
            8.0872e-04, -6.1989e-03, -2.3346e-03, -3.5744e-03, -8.2245e-03]]]],
       dtype=torch.float16)
2025-05-16 03:02:56.153532 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 81],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 4.2648e-03,  1.2184e-02,  1.5593e-04,  6.0463e-03, -4.8375e-04,
           -1.6556e-03, -1.8295e-02, -9.5272e-04, -1.4694e-02,  9.1400e-03,
            1.0269e-02,  9.8646e-05,  6.4621e-03, -1.3866e-03, -5.9891e-04,
           -4.7379e-03, -1.4629e-03, -3.7766e-04,  9.5749e-03,  5.7487e-03,
           -1.1543e-02,  2.3632e-03,  8.6975e-03,  1.0071e-03,  1.1620e-02,
           -1.3208e-03,  6.2561e-03,  6.3782e-03, -2.6428e-02,  8.5831e-03,
           -2.3212e-03, -1.3590e-03,  2.0962e-03, -2.4261e-03, -1.1101e-03,
           -4.4670e-03, -5.5389e-03,  4.1122e-03,  1.2314e-02,  6.6566e-03,
           -9.6741e-03, -2.8057e-03, -1.1841e-02, -2.6817e-03,  7.5455e-03,
            1.2199e-02, -2.2293e-02, -5.3139e-03, -1.3229e-02,  3.1090e-03,
           -9.5978e-03,  1.8005e-03,  1.5240e-03,  6.7711e-03,  5.4131e-03,
           -1.2489e-02, -1.8036e-02,  5.5580e-03,  1.3191e-02,  1.4334e-03,
            7.1716e-03,  4.1962e-03, -9.7351e-03,  3.1097e-02, -3.4313e-03,
            2.7580e-03, -1.1909e-02, -8.5297e-03,  6.0005e-03,  2.4929e-03,
            8.9264e-03,  1.6670e-03, -1.2024e-02,  1.6718e-03, -5.2376e-03,
           -4.0665e-03,  2.0542e-03,  2.4967e-03,  1.7105e-02, -1.0162e-02,
           -5.9547e-03]]],


        [[[-7.7171e-03, -4.5204e-03,  3.1033e-03,  4.1275e-03,  2.0943e-03,
           -2.2934e-02,  5.3902e-03, -1.9531e-03,  1.4023e-02, -1.1497e-02,
           -2.4734e-02, -2.2087e-03, -2.8496e-03,  3.0499e-03, -2.3365e-04,
           -4.0855e-03,  8.1329e-03,  2.9831e-03, -5.3215e-03, -8.3447e-04,
            1.9333e-02,  2.6073e-03, -5.4054e-03,  7.5951e-03, -1.4105e-03,
            6.6605e-03, -7.5102e-04, -3.1567e-03, -3.8891e-03, -1.0002e-02,
           -1.4534e-03,  2.2690e-02, -4.6196e-03, -6.8779e-03, -1.6754e-02,
           -5.2547e-04, -3.0098e-03,  1.8244e-03,  4.6396e-04,  6.9427e-03,
            5.6496e-03, -9.0103e-03, -8.9288e-05, -6.5155e-03,  1.4206e-02,
           -1.9188e-03, -1.4122e-02,  1.5554e-03, -5.6744e-04, -2.4586e-03,
            1.6464e-02,  7.7772e-04, -4.9896e-03, -1.5060e-02, -1.4982e-03,
            4.6539e-03, -4.3526e-03,  1.1147e-02, -1.4334e-03,  9.4986e-04,
            5.1765e-03, -2.3308e-03,  7.6675e-03, -4.2801e-03,  9.6283e-03,
            5.9395e-03,  1.8219e-02, -4.3640e-03,  2.4271e-04, -1.1196e-03,
            1.9958e-02, -7.3662e-03, -2.6321e-03, -1.5383e-03,  7.9422e-03,
           -7.6714e-03, -6.5651e-03,  7.2250e-03,  3.2473e-04,  1.3260e-02,
           -1.5350e-02]]]], dtype=torch.float16)
2025-05-16 03:02:56.371918 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), Tensor([2, 81, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 81],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.0910e-02, -1.3590e-03, -1.3247e-03,  7.2122e-06,  1.5175e-02,
            6.1493e-03,  3.6469e-03,  1.1162e-02, -4.6234e-03, -1.3084e-03,
           -1.7176e-03,  1.0729e-03, -1.2268e-02, -2.5909e-02, -4.7531e-03,
            6.5947e-04,  3.4580e-03,  1.2360e-02, -2.9240e-03,  8.1177e-03,
           -2.3937e-03,  3.3875e-03, -9.7885e-03,  1.2489e-02, -5.9395e-03,
           -1.2527e-02,  3.0251e-03,  5.4398e-03, -1.4252e-02, -1.2390e-02,
            5.4054e-03, -9.7885e-03,  5.4436e-03,  1.0071e-02,  6.5269e-03,
           -6.1607e-03, -1.9550e-04,  4.5180e-04,  5.4893e-03,  7.4959e-03,
           -7.9956e-03,  1.2121e-03, -6.8550e-03,  4.0741e-03,  2.5768e-03,
            6.4278e-03, -2.9964e-03,  3.3913e-03, -5.1270e-03, -6.0768e-03,
            6.3591e-03, -6.2447e-03, -3.5915e-03,  1.0071e-02, -5.8250e-03,
           -1.2465e-03,  4.1847e-03,  4.0364e-04, -3.1528e-03, -6.6910e-03,
            6.0959e-03,  1.4648e-02, -1.5533e-02, -2.9259e-03, -9.3460e-03,
           -4.7278e-04,  6.8855e-03,  3.4847e-03,  1.7614e-03,  1.8492e-03,
            1.4160e-02,  6.3210e-03,  1.3077e-02, -7.6714e-03,  1.1627e-02,
           -2.7390e-03, -4.2877e-03,  2.9106e-03, -1.2764e-02, -5.3978e-04,
            4.0550e-03]]],


        [[[ 3.6030e-03,  1.8356e-02,  9.7961e-03, -8.7857e-05, -9.5062e-03,
            2.5158e-03, -1.3954e-02, -8.9340e-03,  9.0027e-03, -2.1629e-03,
            8.4305e-03,  1.1597e-02, -6.9313e-03,  1.1635e-02,  1.2085e-02,
            1.8406e-03,  9.0420e-05, -3.1147e-03,  7.7324e-03,  6.5498e-03,
            1.2222e-02, -6.5956e-03, -4.9896e-03, -1.4587e-02,  1.1101e-03,
            5.6572e-03, -1.0544e-02,  2.2736e-03, -2.2095e-02, -4.6005e-03,
           -7.1144e-03, -1.2039e-02, -4.5395e-03,  1.2047e-02,  2.1095e-03,
            8.0824e-04, -1.1339e-03, -9.3699e-05,  8.4114e-04, -5.7487e-03,
            6.2408e-03, -1.2732e-03, -6.2103e-03, -2.1477e-03,  2.1000e-03,
            1.0147e-02,  2.6188e-03, -6.7368e-03,  1.1435e-03,  1.4055e-04,
            3.0766e-03, -5.5389e-03,  2.2812e-03,  9.1019e-03,  3.9792e-04,
            1.9119e-02,  1.8954e-04, -8.4610e-03, -2.8534e-03, -1.1322e-02,
            3.9825e-03, -1.7996e-03,  3.4714e-03, -6.7482e-03, -1.1635e-02,
            4.3030e-03, -2.6108e-02, -1.5686e-02,  1.2421e-02,  1.2062e-02,
           -9.4318e-04,  1.2810e-02,  1.0895e-02, -6.2904e-03, -1.2341e-03,
           -4.9858e-03,  1.0895e-02,  4.5013e-03,  2.9526e-03, -6.8665e-04,
           -1.5732e-02]]]], dtype=torch.float16)
2025-05-16 03:02:56.544073 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 82],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.4931e-02, -1.6693e-02,  1.1597e-03,  2.7199e-03,  7.9155e-05,
           -9.4452e-03, -6.2904e-03,  2.5105e-04, -8.5220e-03, -4.4899e-03,
            5.6229e-03,  3.0777e-02,  1.6602e-02, -2.0447e-03,  8.5678e-03,
            5.3177e-03,  7.4005e-03, -1.0162e-02,  2.5425e-03, -3.8967e-03,
           -1.0902e-02, -8.5983e-03, -7.5722e-03, -2.1706e-03, -4.3793e-03,
            8.7967e-03,  1.0620e-02,  8.2092e-03, -1.2612e-04,  9.4986e-03,
            5.4207e-03, -1.6525e-02,  4.0512e-03, -3.2177e-03,  6.3210e-03,
           -1.3466e-02, -7.5798e-03,  5.9929e-03,  1.3227e-03,  4.4763e-05,
            5.9242e-03, -5.4550e-03,  1.4687e-03,  7.5798e-03,  6.1913e-03,
            5.4436e-03,  1.2337e-02, -2.0752e-03, -7.2479e-03, -1.3866e-03,
            9.7809e-03, -3.3455e-03, -6.0310e-03,  6.8436e-03, -1.1452e-02,
            8.2254e-04, -1.2884e-03, -7.8278e-03,  3.7360e-04, -2.8801e-03,
            2.2869e-03,  2.8491e-04, -1.0750e-02,  1.3924e-03, -7.9880e-03,
           -2.6073e-03, -2.2354e-03, -5.8136e-03, -1.9588e-03, -1.0738e-03,
            2.6665e-03, -3.1719e-03, -6.7177e-03,  4.8332e-03, -2.8095e-03,
           -4.3983e-03,  6.4354e-03,  6.1684e-03,  5.1003e-03,  5.2299e-03,
           -5.9776e-03, -6.8474e-03]]],


        [[[ 4.4556e-03,  7.4234e-03, -4.6325e-04, -3.9554e-04, -1.4124e-03,
            1.3603e-02,  5.7945e-03,  5.0888e-03, -1.9159e-03, -8.1940e-03,
           -1.1177e-02,  2.1877e-03,  3.3875e-03,  6.1378e-03,  5.1384e-03,
            5.4283e-03, -3.6430e-03, -7.3433e-03, -1.9562e-04, -1.1383e-02,
            1.9196e-02, -3.2166e-02, -2.7676e-03,  1.2283e-03,  1.2733e-02,
            1.3168e-02, -1.8036e-04, -2.1324e-03, -6.1493e-03,  3.9005e-03,
            5.4398e-03, -5.4169e-03, -8.7814e-03, -1.4267e-02, -4.5967e-03,
            1.0748e-03, -5.2834e-03,  3.3379e-03,  2.6367e-02, -7.2746e-03,
            8.0872e-03, -9.9564e-04,  3.9673e-03,  2.8095e-03,  1.9150e-02,
           -4.2737e-05, -2.8324e-03,  2.2621e-03,  4.9667e-03, -1.7385e-03,
           -1.1528e-02, -1.9608e-02,  2.9888e-03, -2.7191e-02, -1.1726e-02,
            1.8173e-02, -3.2196e-03,  1.3237e-02,  6.3992e-04,  4.4250e-04,
            8.3618e-03, -1.3344e-02,  8.4457e-03,  2.1915e-03,  1.4771e-02,
            1.1436e-02, -1.5199e-05,  1.0849e-02, -8.0338e-03,  6.8207e-03,
            1.7303e-02, -8.4991e-03, -2.0569e-02,  6.1703e-04,  9.8953e-03,
           -1.3733e-02, -1.8143e-02, -2.6646e-03,  1.9970e-03, -6.2752e-03,
           -5.7716e-03, -3.4695e-03]]]], dtype=torch.float16)
2025-05-16 03:02:56.703139 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), Tensor([2, 82, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 82],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 7.4348e-03,  2.4910e-03,  9.0714e-03,  3.2082e-03,  1.6418e-02,
           -6.2065e-03, -3.0632e-03,  3.4180e-03, -5.5599e-04, -4.9973e-03,
           -2.0737e-02,  1.1780e-02,  7.3128e-03, -3.6907e-03, -2.3518e-03,
           -1.2276e-02, -4.2953e-03,  8.1921e-04, -4.5853e-03,  1.1169e-02,
            1.0246e-02, -7.4959e-03,  6.0081e-03, -8.8348e-03, -1.3466e-03,
           -1.5259e-03,  9.1934e-03,  4.6005e-03,  4.5538e-04, -1.2848e-02,
            3.9330e-03, -4.4365e-03,  7.2136e-03, -2.6588e-03, -1.1848e-02,
            2.7218e-03, -6.8512e-03,  5.3024e-03,  1.4610e-03,  9.9957e-05,
           -8.6517e-03, -1.0635e-02,  2.5272e-03, -8.0414e-03, -1.0544e-02,
           -2.3308e-03,  2.2087e-03, -2.1118e-02, -7.2136e-03, -2.4490e-03,
           -1.1196e-03, -3.6602e-03,  4.7188e-03, -8.7128e-03, -6.7062e-03,
           -5.4283e-03,  1.9623e-02,  1.3687e-02,  4.5853e-03,  1.0674e-02,
           -4.6196e-03,  2.5406e-03,  1.3132e-03, -1.1086e-02,  2.0237e-03,
            1.9363e-02,  9.7198e-03,  7.2060e-03, -6.0349e-03, -4.4632e-03,
           -8.4162e-04, -1.0612e-02, -7.0419e-03, -5.1880e-03, -2.5803e-02,
            8.2474e-03,  3.5133e-03,  1.4336e-02,  1.9699e-02,  1.7273e-02,
            1.1129e-03,  4.1618e-03]]],


        [[[-6.5880e-03,  6.7024e-03, -1.4336e-02,  4.5052e-03, -9.5978e-03,
           -4.8065e-03, -3.5305e-03,  1.2245e-02, -8.0032e-03,  6.7024e-03,
           -2.9621e-03, -2.4170e-02, -1.2054e-02, -1.4488e-02,  1.3418e-03,
            5.7373e-03,  5.7030e-03, -2.3975e-03,  8.3466e-03, -1.0773e-02,
            3.8433e-03,  1.9131e-03,  6.9389e-03, -1.4610e-02,  4.6659e-04,
           -4.6501e-03,  2.5635e-03,  1.1887e-02, -6.9523e-04, -3.4561e-03,
            1.0712e-02,  1.2474e-02, -1.8387e-02, -1.6260e-04, -1.2817e-03,
            1.0010e-02,  2.0905e-02, -4.3716e-03,  2.2202e-02, -5.2910e-03,
           -1.0242e-03,  4.2686e-03,  1.0101e-02,  8.5983e-03, -3.6926e-03,
           -1.4961e-02, -1.1358e-03,  3.2177e-03, -8.1396e-04, -6.6261e-03,
           -6.0272e-03,  3.9749e-03, -1.8549e-04,  7.9956e-03,  1.2146e-02,
            2.6077e-02, -1.2360e-02, -2.5692e-03,  4.6921e-04, -7.5645e-03,
           -1.5617e-02,  7.4615e-03, -5.6992e-03,  5.5218e-04, -5.9624e-03,
            2.0828e-03,  7.6294e-06, -1.6470e-03,  8.9569e-03,  1.6689e-05,
           -9.3174e-04, -1.2922e-03,  1.0166e-03, -4.6921e-03, -1.9932e-03,
           -8.3237e-03,  7.4921e-03,  8.7662e-03, -2.5772e-02,  1.8478e-02,
            6.4545e-03,  2.2087e-03]]]], dtype=torch.float16)
2025-05-16 03:02:56.886661 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 83],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.3163e-02,  2.7866e-03, -3.5801e-03,  7.7133e-03, -1.8682e-03,
           -1.6663e-02,  1.5579e-02, -3.1509e-03, -2.1935e-03,  1.1665e-02,
            9.9468e-04,  6.3515e-03,  2.1706e-03, -1.4557e-02, -5.8937e-03,
           -5.9319e-03,  7.4768e-03,  3.1109e-03, -1.7349e-02,  1.6670e-03,
            4.6997e-03, -6.0387e-03, -7.2021e-03,  1.5251e-02, -1.8559e-03,
            2.1652e-02,  1.4925e-03,  3.7880e-03,  3.8509e-03,  3.7708e-03,
            2.7962e-03, -2.3258e-04,  5.2261e-03,  3.1776e-03, -1.8005e-03,
           -5.3329e-03, -7.9880e-03,  9.9182e-04,  1.6113e-02,  4.5280e-03,
            1.2980e-03, -5.0926e-03, -3.4313e-03,  1.3451e-02, -1.4893e-02,
           -1.5038e-02,  1.4629e-03, -2.2106e-03,  5.3825e-03,  9.1934e-03,
           -4.4556e-03, -1.9569e-03, -3.8376e-03, -4.4899e-03, -9.6664e-03,
            4.3564e-03, -5.6038e-03,  7.2289e-03, -3.4046e-03,  1.2680e-02,
           -5.1346e-03, -2.1561e-02, -1.1261e-02,  7.5378e-03,  1.4587e-02,
            8.1558e-03,  4.8409e-03,  6.0320e-04,  4.6182e-04, -6.8245e-03,
           -8.6823e-03,  3.1677e-02, -3.7217e-04,  9.4147e-03,  2.2526e-03,
           -1.3550e-02,  3.9711e-03, -1.7715e-02, -5.7182e-03,  1.9312e-03,
            3.7441e-03, -5.6887e-04, -8.0442e-04]]],


        [[[-1.5282e-02, -1.6632e-02, -1.1759e-03, -9.2468e-03,  7.6332e-03,
            8.8577e-03,  5.7983e-03, -1.2369e-03, -7.6790e-03,  2.5711e-03,
           -3.3321e-03,  1.4587e-02,  9.9373e-04, -3.7956e-03,  1.4275e-02,
           -1.3342e-03,  8.2791e-05,  1.1810e-02, -3.6659e-03,  4.4556e-03,
            3.0422e-03, -6.3858e-03, -1.2386e-04, -5.1003e-03,  1.7624e-02,
            1.7242e-02,  2.9373e-03, -7.0953e-03,  1.6541e-02,  8.9111e-03,
           -5.5733e-03,  8.0967e-04,  1.4458e-03, -1.0078e-02,  8.6060e-03,
            1.2827e-03,  2.4223e-03, -1.5114e-02, -4.1389e-03,  6.8321e-03,
            1.8433e-02,  5.5008e-03,  8.5974e-04, -7.6447e-03, -3.4313e-03,
           -1.5244e-02, -5.6953e-03, -1.0368e-02,  8.1177e-03,  4.4212e-03,
            6.7215e-03, -2.3670e-03,  1.1654e-03,  1.3313e-03, -5.0240e-03,
            3.4466e-03, -4.0169e-03, -1.2624e-04,  3.2368e-03,  1.6050e-03,
            5.9547e-03,  1.6052e-02,  2.8687e-03,  1.2455e-03, -1.2390e-02,
            4.4708e-03,  7.2784e-03,  3.5324e-03,  9.8991e-04, -1.9035e-03,
           -5.1155e-03, -1.8646e-02,  3.9864e-03, -1.1208e-02, -5.7945e-03,
            5.0392e-03, -7.7553e-03,  6.8617e-04, -1.0117e-02, -4.4594e-03,
            1.1415e-03, -6.2828e-03, -1.2245e-02]]]], dtype=torch.float16)
2025-05-16 03:02:57.100584 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), Tensor([2, 83, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 83],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0145,  0.0125, -0.0058, -0.0021, -0.0189,  0.0071, -0.0039,
            0.0085,  0.0006,  0.0053, -0.0088, -0.0081,  0.0029,  0.0022,
           -0.0105,  0.0099, -0.0067,  0.0021, -0.0090,  0.0002, -0.0168,
            0.0065,  0.0047, -0.0004,  0.0061, -0.0013,  0.0084,  0.0100,
           -0.0120, -0.0111, -0.0113,  0.0066,  0.0113,  0.0039, -0.0216,
            0.0007, -0.0024, -0.0029,  0.0055, -0.0010, -0.0083,  0.0105,
            0.0141,  0.0024,  0.0125, -0.0007,  0.0022, -0.0018,  0.0059,
           -0.0111, -0.0078, -0.0002,  0.0075,  0.0051,  0.0056, -0.0046,
           -0.0072,  0.0057,  0.0034,  0.0124, -0.0068, -0.0129,  0.0053,
            0.0015, -0.0103,  0.0033,  0.0095,  0.0122, -0.0227,  0.0098,
            0.0025, -0.0189, -0.0097,  0.0042,  0.0075,  0.0054,  0.0045,
           -0.0023, -0.0026, -0.0012,  0.0017,  0.0032, -0.0039]]],


        [[[ 0.0047,  0.0003,  0.0009,  0.0043, -0.0039, -0.0141, -0.0115,
           -0.0019, -0.0070, -0.0098,  0.0005, -0.0039,  0.0016, -0.0091,
           -0.0027,  0.0046,  0.0017, -0.0005, -0.0043, -0.0058,  0.0078,
            0.0158,  0.0048,  0.0160, -0.0023,  0.0087, -0.0240, -0.0030,
            0.0118,  0.0026, -0.0177,  0.0134,  0.0075, -0.0024,  0.0095,
           -0.0020,  0.0065, -0.0005, -0.0014,  0.0009, -0.0007, -0.0164,
            0.0076,  0.0004,  0.0009, -0.0090,  0.0031,  0.0053,  0.0099,
            0.0002,  0.0019,  0.0090,  0.0354,  0.0028, -0.0038,  0.0072,
            0.0010, -0.0043,  0.0013, -0.0041, -0.0041, -0.0137, -0.0025,
           -0.0081, -0.0131, -0.0061, -0.0041,  0.0057,  0.0078, -0.0084,
            0.0018, -0.0055, -0.0095, -0.0060,  0.0115, -0.0135, -0.0071,
            0.0056,  0.0122,  0.0021,  0.0094,  0.0009,  0.0007]]]],
       dtype=torch.float16)
2025-05-16 03:02:57.303318 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 84],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0041, -0.0023,  0.0018,  0.0195, -0.0007,  0.0096,  0.0124,
            0.0016,  0.0058,  0.0066,  0.0038, -0.0008,  0.0137,  0.0053,
           -0.0085,  0.0009, -0.0027, -0.0060,  0.0010,  0.0102, -0.0038,
           -0.0123, -0.0027,  0.0052,  0.0032,  0.0108, -0.0032,  0.0037,
            0.0082,  0.0005, -0.0024,  0.0053,  0.0080,  0.0019, -0.0063,
           -0.0021,  0.0023,  0.0074, -0.0062, -0.0024, -0.0136, -0.0017,
            0.0065, -0.0009, -0.0267, -0.0093, -0.0040, -0.0013,  0.0009,
           -0.0031,  0.0070,  0.0035, -0.0047, -0.0020,  0.0044,  0.0027,
            0.0080, -0.0094, -0.0007, -0.0202, -0.0038, -0.0088, -0.0015,
            0.0076,  0.0028,  0.0039, -0.0039, -0.0099,  0.0170, -0.0240,
           -0.0024, -0.0063, -0.0058, -0.0005, -0.0063,  0.0030,  0.0067,
            0.0036, -0.0027,  0.0022,  0.0098,  0.0003,  0.0072, -0.0139]]],


        [[[-0.0031, -0.0092,  0.0067,  0.0008,  0.0023, -0.0075,  0.0065,
            0.0045,  0.0031,  0.0060, -0.0119,  0.0095,  0.0210, -0.0075,
            0.0012,  0.0047, -0.0040, -0.0059, -0.0128, -0.0145,  0.0073,
           -0.0033,  0.0019, -0.0034, -0.0099,  0.0036, -0.0012,  0.0007,
            0.0056, -0.0017,  0.0019,  0.0014, -0.0019,  0.0096,  0.0072,
            0.0045,  0.0018, -0.0029, -0.0083,  0.0016,  0.0036, -0.0024,
            0.0050, -0.0012, -0.0055, -0.0010,  0.0154, -0.0010, -0.0108,
           -0.0039, -0.0012, -0.0010, -0.0039,  0.0016, -0.0136,  0.0006,
           -0.0045,  0.0114, -0.0024, -0.0150,  0.0012, -0.0046, -0.0027,
            0.0056,  0.0041,  0.0004,  0.0030, -0.0017,  0.0066,  0.0009,
           -0.0006,  0.0040, -0.0005, -0.0055, -0.0035, -0.0097,  0.0061,
           -0.0016,  0.0199, -0.0015, -0.0004,  0.0061, -0.0008,  0.0009]]]],
       dtype=torch.float16)
2025-05-16 03:02:57.542522 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), Tensor([2, 84, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 84],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0038,  0.0049,  0.0008,  0.0099, -0.0035, -0.0022, -0.0373,
           -0.0117,  0.0113, -0.0062,  0.0020, -0.0076,  0.0074, -0.0032,
           -0.0105,  0.0010, -0.0129,  0.0070, -0.0071, -0.0058,  0.0065,
           -0.0004,  0.0023,  0.0039, -0.0076, -0.0002,  0.0020, -0.0083,
           -0.0164,  0.0061,  0.0306,  0.0043,  0.0228,  0.0009,  0.0053,
            0.0066,  0.0117,  0.0091,  0.0028, -0.0002,  0.0098, -0.0053,
           -0.0175, -0.0016,  0.0097, -0.0115, -0.0113,  0.0072,  0.0014,
           -0.0003,  0.0167,  0.0053, -0.0002,  0.0065, -0.0099, -0.0030,
           -0.0080, -0.0059, -0.0028,  0.0064,  0.0007, -0.0030, -0.0039,
            0.0185,  0.0127, -0.0029, -0.0083, -0.0002, -0.0102,  0.0023,
           -0.0043,  0.0061,  0.0058,  0.0013, -0.0149,  0.0032,  0.0008,
            0.0034, -0.0244, -0.0035,  0.0107,  0.0111, -0.0028, -0.0056]]],


        [[[ 0.0069,  0.0078, -0.0017, -0.0099, -0.0041,  0.0066, -0.0054,
           -0.0072,  0.0069, -0.0005, -0.0039, -0.0183, -0.0151,  0.0012,
           -0.0042,  0.0045, -0.0029,  0.0044, -0.0025,  0.0120,  0.0006,
           -0.0127,  0.0024,  0.0093,  0.0039, -0.0084,  0.0054,  0.0039,
            0.0048, -0.0009, -0.0022, -0.0049, -0.0085,  0.0002, -0.0010,
           -0.0064,  0.0086,  0.0028,  0.0035,  0.0039,  0.0059,  0.0028,
            0.0005,  0.0038,  0.0096, -0.0026,  0.0003, -0.0105, -0.0011,
           -0.0027, -0.0023, -0.0063, -0.0026, -0.0006, -0.0072,  0.0108,
            0.0006,  0.0054,  0.0022,  0.0024, -0.0030,  0.0127,  0.0085,
           -0.0050, -0.0021,  0.0221,  0.0075,  0.0035, -0.0105, -0.0146,
            0.0044, -0.0005, -0.0062, -0.0019, -0.0135, -0.0132, -0.0060,
           -0.0045,  0.0108,  0.0050,  0.0036,  0.0026,  0.0058,  0.0070]]]],
       dtype=torch.float16)
2025-05-16 03:02:57.790844 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 85],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.7585e-03,  1.4191e-02, -3.7498e-03,  5.0583e-03,  2.0767e-02,
           -2.4796e-02,  4.7417e-03, -3.0762e-02, -8.5602e-03, -6.9275e-03,
            1.9894e-03,  4.6005e-03,  3.7746e-03,  1.4620e-03, -5.6419e-03,
            9.1171e-03, -3.0956e-03,  6.2180e-04,  3.1319e-03, -2.7351e-03,
            4.8180e-03,  1.4053e-02, -2.8229e-03, -2.0294e-02, -1.1139e-02,
            8.2703e-03, -6.6452e-03, -1.6623e-03, -3.8490e-03,  2.6749e-02,
            3.5763e-07,  1.9665e-03,  4.2000e-03, -4.0665e-03, -2.4765e-02,
           -7.2746e-03,  2.1648e-03, -1.1139e-03, -8.4915e-03, -1.3208e-03,
            1.8311e-03,  3.2845e-03,  3.3550e-03, -3.3689e-04,  7.8125e-03,
            7.8430e-03,  7.7286e-03,  7.3576e-04, -1.5793e-03,  1.0544e-02,
            1.5396e-02, -2.3193e-03, -2.5696e-02, -3.3903e-04, -6.0196e-03,
           -8.7814e-03, -1.2970e-03,  8.0633e-04,  9.5901e-03,  1.5572e-02,
            5.9013e-03, -4.4746e-03, -5.2691e-05, -1.9741e-03,  8.7891e-03,
           -4.0398e-03,  1.9073e-02, -7.4921e-03, -7.5607e-03,  3.7422e-03,
           -5.9462e-04, -6.9656e-03,  4.0436e-03, -2.0813e-02, -2.1572e-03,
            3.5648e-03,  2.7771e-03, -2.5635e-03,  4.3945e-03, -6.4075e-05,
            5.6496e-03,  1.5554e-03,  2.6817e-03,  3.8910e-03,  1.1299e-02]]],


        [[[-9.4299e-03, -1.0979e-02, -1.0483e-02, -4.0092e-03,  7.0801e-03,
           -3.1986e-03, -6.5651e-03, -6.7482e-03, -2.9583e-03,  2.5940e-03,
            4.8866e-03, -2.2068e-03,  3.7193e-03, -6.3248e-03, -1.6222e-03,
            3.3855e-03,  5.5275e-03, -1.4069e-02, -3.5076e-03, -6.2561e-03,
           -2.2519e-04, -4.6120e-03, -7.8430e-03,  6.9199e-03, -2.3937e-03,
            9.4557e-04,  2.6627e-03,  6.6757e-03,  2.8348e-04, -2.7237e-03,
            3.8929e-03, -2.5272e-04, -1.8072e-03, -6.0387e-03,  1.7948e-03,
            6.6042e-04,  5.7182e-03,  6.2714e-03, -8.1329e-03,  2.5692e-03,
            7.5340e-03, -5.1155e-03,  2.6684e-03, -9.0742e-04,  8.8730e-03,
           -1.2894e-02, -4.8714e-03, -3.1166e-03, -7.4272e-03, -2.4681e-03,
           -1.5116e-03, -9.9335e-03,  2.8572e-03, -6.1646e-03, -9.0027e-03,
            6.4583e-03,  3.8128e-03, -2.6760e-03, -5.5199e-03,  6.5536e-03,
            2.1267e-03,  4.4708e-03,  5.6992e-03, -1.3306e-02,  1.0262e-02,
           -9.6130e-04,  2.2964e-03,  8.1329e-03, -5.3787e-03,  1.0323e-02,
           -2.1076e-03,  8.6975e-03,  2.3594e-03,  1.0941e-02,  9.7961e-03,
           -5.5962e-03,  7.1411e-03, -2.7580e-03,  4.6463e-03, -2.0695e-03,
           -4.2610e-03,  2.4652e-04,  1.1917e-02,  3.9577e-04,  2.6642e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:57.956447 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), Tensor([2, 85, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 85],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0071, -0.0043,  0.0144, -0.0027,  0.0075, -0.0001,  0.0054,
            0.0143, -0.0082, -0.0013, -0.0010,  0.0043,  0.0034, -0.0029,
            0.0005,  0.0037,  0.0019, -0.0102,  0.0021, -0.0140, -0.0101,
            0.0165, -0.0197, -0.0051, -0.0093,  0.0005,  0.0159,  0.0037,
           -0.0159, -0.0019, -0.0067, -0.0081, -0.0057,  0.0037,  0.0078,
            0.0056, -0.0038, -0.0034, -0.0057, -0.0129,  0.0116,  0.0077,
           -0.0159, -0.0012, -0.0073, -0.0008, -0.0044, -0.0103,  0.0025,
            0.0042,  0.0070, -0.0015,  0.0222, -0.0030, -0.0097,  0.0142,
            0.0078,  0.0111, -0.0087,  0.0012, -0.0001, -0.0020,  0.0081,
            0.0014,  0.0026,  0.0058, -0.0016, -0.0062,  0.0128,  0.0005,
            0.0076, -0.0008, -0.0145, -0.0050, -0.0157,  0.0150, -0.0066,
            0.0044, -0.0125,  0.0148, -0.0019,  0.0025,  0.0018, -0.0031,
            0.0009]]],


        [[[ 0.0040,  0.0012,  0.0003, -0.0111,  0.0016, -0.0042, -0.0022,
           -0.0054, -0.0028, -0.0005,  0.0047,  0.0004, -0.0035,  0.0011,
            0.0020, -0.0084, -0.0006,  0.0102,  0.0154, -0.0090,  0.0065,
            0.0100,  0.0003,  0.0029,  0.0076, -0.0006, -0.0072, -0.0067,
            0.0014,  0.0014, -0.0023,  0.0029,  0.0003, -0.0044, -0.0019,
           -0.0072,  0.0102, -0.0161,  0.0002,  0.0003, -0.0066, -0.0029,
            0.0164, -0.0025,  0.0060,  0.0144,  0.0111, -0.0101, -0.0046,
            0.0114, -0.0165,  0.0001,  0.0031,  0.0020,  0.0010,  0.0007,
            0.0001, -0.0073,  0.0045, -0.0092,  0.0062,  0.0055, -0.0153,
           -0.0013,  0.0049,  0.0040,  0.0012,  0.0027,  0.0007,  0.0073,
           -0.0214,  0.0003, -0.0039,  0.0032, -0.0115,  0.0026,  0.0049,
            0.0024, -0.0033,  0.0130, -0.0056, -0.0051,  0.0007,  0.0054,
            0.0003]]]], dtype=torch.float16)
2025-05-16 03:02:58.668067 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 86],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.4757e-03, -2.1439e-03, -2.7061e-04, -1.7424e-03,  4.6310e-03,
           -9.0256e-03,  8.9407e-04,  1.4439e-03,  3.4599e-03,  7.8735e-03,
            2.0599e-02, -1.0780e-02, -2.3315e-02, -2.1248e-03, -1.0475e-02,
            1.9121e-03,  3.5667e-03, -3.4409e-03,  7.7972e-03, -9.1019e-03,
            2.3384e-03, -3.6774e-03,  1.4925e-03, -6.5918e-03,  8.5220e-03,
            3.8891e-03, -8.5678e-03,  3.4008e-03,  5.6038e-03, -1.2604e-02,
           -4.6086e-04,  1.5518e-02,  1.0366e-03, -1.4937e-04,  2.7485e-03,
            4.0741e-03, -4.3144e-03, -8.1711e-03, -6.1760e-03, -9.8572e-03,
           -5.6648e-04,  9.0866e-03,  4.3488e-03,  6.0225e-04, -5.8250e-03,
           -3.8242e-03, -9.7809e-03,  4.7722e-03, -4.0550e-03, -1.0880e-02,
            6.5536e-03,  3.2864e-03,  2.6054e-03,  1.1101e-02,  8.3771e-03,
           -8.6441e-03,  1.4046e-02,  3.5477e-03, -3.2349e-03, -3.0594e-03,
           -1.2655e-03,  1.7746e-02,  1.4429e-03,  2.5883e-03,  5.4092e-03,
           -7.6234e-05, -8.4839e-03, -1.7242e-02, -1.0887e-02,  4.6196e-03,
            1.9426e-03,  2.7142e-03, -5.7640e-03, -2.4128e-03, -5.5389e-03,
            6.0539e-03,  4.2953e-03, -2.0294e-02,  1.8015e-03,  7.6599e-03,
           -4.4560e-04, -2.9049e-03,  1.2199e-02,  2.8019e-03,  1.8967e-02,
            1.2856e-03]]],


        [[[ 2.3575e-03, -4.4518e-03, -2.3682e-02,  1.7157e-03,  5.6648e-03,
            2.8095e-03,  7.2746e-03, -1.0468e-02, -3.9368e-03,  1.0471e-03,
           -1.3634e-02, -5.9929e-03,  2.7084e-03, -1.5305e-02, -9.0942e-03,
           -2.2678e-03,  1.4086e-03, -8.9455e-04,  4.0474e-03, -5.8651e-04,
           -7.3280e-03,  6.0463e-03, -1.9321e-03,  2.4834e-03, -2.1648e-03,
            5.5790e-05,  2.0542e-03,  1.0262e-03,  5.6028e-05,  4.5357e-03,
            1.2751e-03, -9.3536e-03, -8.3208e-04, -2.8915e-03, -6.3705e-03,
           -3.1090e-03,  1.2178e-03, -1.4587e-02,  2.5192e-02,  5.2376e-03,
           -5.4207e-03, -3.2368e-03, -1.8663e-03,  1.8372e-02,  1.2589e-03,
            9.1019e-03, -4.3221e-03,  9.9640e-03, -1.8060e-04,  1.3437e-03,
            4.3869e-04,  8.9188e-03,  4.0650e-04, -1.6842e-03, -2.6836e-03,
            5.7268e-04,  6.4468e-03,  2.6836e-03,  1.1787e-02,  9.7504e-03,
            5.5923e-03,  2.5768e-03, -2.6531e-03, -3.4943e-03,  2.8534e-03,
           -5.3368e-03, -5.0392e-03, -2.2324e-02,  5.6419e-03,  5.1346e-03,
           -2.4815e-03, -3.2120e-03, -1.3800e-03,  3.1681e-03, -3.9482e-03,
            4.2725e-03, -1.4048e-03,  5.8708e-03, -3.5839e-03,  1.4511e-02,
           -1.0672e-03,  7.1602e-03,  2.3975e-03,  1.7710e-03, -1.4200e-03,
           -4.6387e-03]]]], dtype=torch.float16)
2025-05-16 03:02:58.888519 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), Tensor([2, 86, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 86],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0118,  0.0016,  0.0011, -0.0040, -0.0010, -0.0028,  0.0024,
           -0.0064, -0.0085,  0.0164,  0.0056,  0.0042, -0.0041, -0.0146,
           -0.0002,  0.0044,  0.0037,  0.0076,  0.0010,  0.0086, -0.0083,
           -0.0033, -0.0018, -0.0167, -0.0045,  0.0059,  0.0062,  0.0151,
           -0.0013, -0.0065,  0.0091,  0.0067, -0.0023,  0.0081,  0.0041,
            0.0027, -0.0054, -0.0052, -0.0133,  0.0108,  0.0084,  0.0041,
           -0.0010,  0.0072,  0.0070, -0.0032, -0.0071,  0.0031,  0.0038,
            0.0048, -0.0029,  0.0044,  0.0041,  0.0019, -0.0043, -0.0052,
           -0.0047, -0.0087,  0.0123,  0.0042,  0.0079, -0.0091, -0.0073,
            0.0044,  0.0035, -0.0135,  0.0067,  0.0042, -0.0017,  0.0032,
            0.0022, -0.0158, -0.0086,  0.0049, -0.0005,  0.0049,  0.0016,
            0.0009,  0.0073,  0.0230, -0.0014, -0.0071, -0.0086, -0.0066,
           -0.0248, -0.0014]]],


        [[[-0.0049,  0.0148, -0.0038,  0.0045, -0.0154, -0.0004, -0.0010,
           -0.0023, -0.0015, -0.0020, -0.0011, -0.0095,  0.0025, -0.0080,
            0.0017, -0.0047, -0.0077, -0.0101,  0.0030, -0.0008, -0.0009,
           -0.0016,  0.0043, -0.0034,  0.0031, -0.0029,  0.0008,  0.0028,
           -0.0005,  0.0054, -0.0005,  0.0207,  0.0009,  0.0002, -0.0085,
            0.0073, -0.0113, -0.0045, -0.0066, -0.0012, -0.0153,  0.0028,
           -0.0079, -0.0056,  0.0063, -0.0011,  0.0073, -0.0057, -0.0104,
            0.0035, -0.0055,  0.0047,  0.0041, -0.0033, -0.0036,  0.0079,
           -0.0016,  0.0075,  0.0084,  0.0055, -0.0051,  0.0048,  0.0008,
            0.0092, -0.0017,  0.0039, -0.0052,  0.0231, -0.0198,  0.0017,
            0.0060, -0.0030, -0.0005,  0.0075, -0.0120,  0.0052,  0.0119,
            0.0008, -0.0061,  0.0090,  0.0227, -0.0101,  0.0034, -0.0072,
            0.0071, -0.0016]]]], dtype=torch.float16)
2025-05-16 03:02:59.057161 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 87],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0101, -0.0063,  0.0081,  0.0024,  0.0074, -0.0094, -0.0037,
           -0.0026,  0.0026,  0.0042,  0.0091,  0.0029, -0.0012,  0.0068,
           -0.0049,  0.0121,  0.0104, -0.0151, -0.0109,  0.0018, -0.0034,
            0.0020,  0.0005, -0.0008,  0.0077, -0.0045, -0.0121,  0.0056,
            0.0177,  0.0036,  0.0044,  0.0081,  0.0055, -0.0103, -0.0029,
            0.0150,  0.0050, -0.0018, -0.0053,  0.0196, -0.0116, -0.0048,
            0.0084,  0.0159,  0.0039, -0.0045, -0.0015,  0.0007, -0.0018,
           -0.0044,  0.0025,  0.0047, -0.0002,  0.0025, -0.0015, -0.0068,
            0.0071, -0.0024, -0.0035, -0.0058, -0.0033, -0.0090, -0.0100,
            0.0054,  0.0026,  0.0048, -0.0008, -0.0112, -0.0080, -0.0026,
           -0.0086,  0.0014, -0.0019, -0.0019,  0.0015, -0.0005, -0.0028,
           -0.0094, -0.0074, -0.0157, -0.0009,  0.0061,  0.0055, -0.0049,
           -0.0065,  0.0030,  0.0008]]],


        [[[-0.0051,  0.0008, -0.0086, -0.0103, -0.0085,  0.0035, -0.0019,
           -0.0016,  0.0163,  0.0022,  0.0046,  0.0019, -0.0018, -0.0023,
           -0.0034,  0.0056, -0.0044, -0.0171,  0.0081, -0.0035, -0.0013,
            0.0013, -0.0002, -0.0009,  0.0047,  0.0143,  0.0069, -0.0084,
           -0.0055,  0.0026, -0.0014, -0.0099,  0.0114,  0.0087, -0.0130,
            0.0001,  0.0082,  0.0059, -0.0004, -0.0045,  0.0062, -0.0064,
            0.0079, -0.0056,  0.0097, -0.0115,  0.0138, -0.0013, -0.0030,
           -0.0092,  0.0017, -0.0015,  0.0100, -0.0038, -0.0036,  0.0022,
           -0.0019, -0.0078,  0.0035, -0.0031,  0.0032,  0.0070, -0.0043,
            0.0243,  0.0155, -0.0059, -0.0025, -0.0026,  0.0076, -0.0023,
            0.0045, -0.0007, -0.0014,  0.0018, -0.0102,  0.0026,  0.0059,
            0.0010,  0.0016,  0.0027, -0.0031, -0.0085,  0.0015, -0.0066,
           -0.0145,  0.0025, -0.0084]]]], dtype=torch.float16)
2025-05-16 03:02:59.208810 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), Tensor([2, 87, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 87],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 4.2610e-03, -9.8572e-03, -1.3000e-02,  2.0798e-02,  1.6251e-03,
            3.1986e-03,  1.7405e-03, -8.3847e-03, -1.5900e-02, -3.2310e-03,
           -4.7340e-03, -2.8954e-03,  5.3406e-03, -1.0818e-02, -1.5823e-02,
           -1.0014e-03,  1.2001e-02,  4.4212e-03,  1.6357e-02,  3.4637e-03,
           -9.1476e-03,  1.1421e-02,  1.8272e-03,  1.3588e-02, -2.7714e-03,
            8.2932e-03, -2.5406e-03,  2.0480e-04, -1.1559e-02,  1.3329e-02,
            4.4785e-03, -3.9368e-03, -1.6756e-03,  1.6975e-03,  2.7199e-03,
            8.8501e-03, -5.6992e-03, -9.0027e-04, -2.0020e-02, -3.7632e-03,
           -1.7157e-03,  4.7226e-03,  1.5888e-03, -3.7241e-04, -2.0638e-03,
           -5.8937e-04, -5.6982e-04,  1.6570e-04,  5.8861e-03, -1.5587e-02,
            2.8210e-03,  1.2878e-02,  6.2485e-03, -4.3793e-03,  6.6109e-03,
            1.4162e-03, -8.4152e-03,  1.5533e-04, -2.1866e-02, -1.0262e-03,
            4.8943e-03,  8.6136e-03, -3.2444e-03, -6.7825e-03,  1.7166e-02,
            3.5152e-03, -1.3252e-02, -6.2866e-03,  1.0338e-02, -4.7913e-03,
           -1.1246e-02, -4.0054e-03, -6.3591e-03, -4.7684e-03,  7.0667e-04,
            3.8986e-03,  9.1314e-04,  3.9062e-03,  9.8190e-03,  3.2234e-03,
            2.8591e-03,  2.5330e-03, -2.8477e-03,  7.1297e-03,  1.0101e-02,
           -2.3499e-03, -1.4925e-03]]],


        [[[-9.4528e-03,  2.2335e-03, -3.3832e-04, -1.2558e-02, -3.5667e-03,
            1.2932e-02, -2.7676e-03,  4.5872e-04,  6.7139e-03, -3.8071e-03,
           -8.6355e-04, -2.2888e-03, -9.8991e-04, -9.5444e-03, -5.8708e-03,
            4.6234e-03, -7.5760e-03,  8.4686e-03,  2.2064e-02, -8.1711e-03,
           -3.8033e-03, -2.4796e-05, -6.0844e-03,  9.1858e-03,  8.1100e-03,
            1.0635e-02, -4.5586e-03, -4.2229e-03,  2.2144e-03,  2.9507e-03,
            7.7553e-03,  4.7073e-03,  1.1681e-02,  8.5526e-03,  1.5732e-02,
            3.1033e-03, -1.0094e-02,  9.5291e-03, -2.4438e-06,  5.6915e-03,
            5.1537e-03, -1.1950e-03, -2.1496e-03,  1.3285e-03, -7.3547e-03,
           -3.0875e-05, -1.1702e-03,  2.0218e-03,  9.0332e-03, -1.5327e-02,
           -7.5455e-03,  7.3051e-03,  2.1172e-03,  1.2253e-02, -1.8406e-03,
           -3.0384e-03,  2.2182e-03, -1.0796e-02, -2.5928e-05,  1.7334e-02,
           -6.9199e-03,  8.8577e-03, -5.9929e-03,  1.0853e-03,  2.7561e-03,
           -4.0894e-03,  7.8888e-03,  1.4709e-02,  1.7796e-03, -1.0696e-02,
            2.2621e-03, -2.9087e-03, -1.8845e-02,  4.6043e-03, -4.3221e-03,
           -6.9084e-03, -1.0582e-02,  2.3918e-03, -5.8098e-03, -1.0551e-02,
           -5.3368e-03, -2.5997e-03, -2.8038e-03, -2.2449e-03,  4.1695e-03,
           -1.2436e-02, -6.4888e-03]]]], dtype=torch.float16)
2025-05-16 03:02:59.360156 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 88],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 2.6875e-03,  1.7223e-03, -5.7144e-03, -1.2732e-03,  1.7157e-03,
           -9.7122e-03,  8.6899e-03, -4.5586e-03, -5.1842e-03,  2.7447e-03,
           -5.2071e-03,  8.4381e-03,  8.1558e-03, -3.4008e-03, -4.3640e-03,
            5.6610e-03,  1.0422e-02,  1.2674e-03, -2.5024e-03,  3.4943e-03,
           -4.0016e-03,  3.5882e-04,  1.2978e-02,  1.0376e-03,  8.9493e-03,
            3.6979e-04, -5.3101e-03,  6.7863e-03, -6.2866e-03,  7.6370e-03,
            7.9803e-03, -4.6120e-03, -6.0043e-03,  1.0155e-02, -1.8635e-03,
           -9.4366e-04, -1.6460e-03,  2.6550e-03,  3.2654e-03, -2.0847e-03,
           -1.8911e-03, -1.0765e-02, -7.2517e-03,  2.1393e-02, -2.7885e-03,
            7.4654e-03, -3.0045e-02, -3.8414e-03,  7.8430e-03,  7.9803e-03,
           -7.5302e-03,  4.0665e-03,  9.1858e-03, -5.3940e-03,  1.4717e-02,
            1.3390e-02, -2.3308e-03,  1.2341e-03,  1.9836e-03, -5.6152e-03,
            3.5114e-03, -7.0381e-03, -7.6027e-03, -6.6757e-03, -3.9101e-03,
            1.0481e-03, -4.2076e-03, -1.6823e-03, -7.6828e-03,  9.1019e-03,
           -7.9651e-03, -6.7139e-03, -9.5367e-03, -4.1246e-04, -3.1414e-03,
           -4.1008e-03, -1.2611e-02, -4.3526e-03,  5.3940e-03, -2.5635e-03,
           -2.0084e-03,  1.0254e-02,  7.3509e-03, -1.0742e-02,  9.8114e-03,
            9.4757e-03, -1.7090e-03, -5.6572e-03]]],


        [[[ 1.1307e-02,  2.0844e-02, -5.5923e-03,  3.0117e-03,  2.3041e-03,
            7.9727e-03, -7.9956e-03, -1.2787e-02, -1.8661e-02, -3.4924e-03,
            1.2077e-02, -7.3318e-03,  1.6651e-03, -8.7643e-04,  4.5395e-03,
            1.3870e-02, -8.7891e-03, -1.9178e-03,  1.4267e-03, -1.6432e-03,
           -1.1009e-02, -6.6605e-03, -3.6311e-04,  7.1297e-03,  2.4700e-03,
           -2.1973e-03, -4.6425e-03, -2.2507e-03,  1.7414e-03, -2.1763e-03,
           -4.7922e-04,  1.1301e-03, -3.8242e-03, -1.2798e-03, -3.1395e-03,
           -7.1640e-03, -2.9678e-03, -2.8381e-03,  3.9787e-03,  6.7329e-03,
            5.8098e-03,  2.2373e-03,  2.1744e-03,  5.0583e-03, -1.9073e-04,
            7.8487e-04, -7.8430e-03, -4.3068e-03, -2.2087e-03, -6.5041e-03,
           -9.1476e-03, -9.7275e-03, -3.0537e-03,  9.5444e-03,  7.2594e-03,
            1.0562e-04, -2.2678e-03,  4.7565e-04,  7.3814e-03, -1.5621e-03,
            3.1166e-03,  2.9697e-03, -3.9399e-05,  2.4757e-03, -2.9221e-03,
           -2.4395e-03,  5.4817e-03,  9.0027e-03,  3.9330e-03, -2.3520e-04,
           -1.1597e-02,  4.2610e-03,  9.2010e-03, -1.1444e-02,  3.2845e-03,
           -1.7262e-04, -2.3880e-03,  7.7534e-04,  6.1035e-03,  6.0730e-03,
            1.6327e-02,  5.0812e-03, -2.8038e-03, -7.8964e-03,  1.2894e-03,
           -2.0351e-03, -1.4336e-02,  2.8095e-03]]]], dtype=torch.float16)
2025-05-16 03:02:59.511752 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), Tensor([2, 88, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 88],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 3.5114e-03, -1.1314e-02, -1.6069e-03,  3.4847e-03,  2.0008e-03,
            2.0468e-04, -6.7902e-03,  6.1760e-03, -7.7477e-03, -1.0124e-02,
           -5.2452e-06, -2.6035e-03, -3.3398e-03,  4.3333e-05, -1.7948e-03,
            1.5192e-03,  2.7332e-03,  3.2330e-04,  9.6817e-03, -2.7905e-03,
            3.5229e-03, -5.0392e-03,  3.0823e-03, -3.5324e-03, -5.1727e-03,
           -7.0190e-03, -1.0506e-02,  6.4087e-03,  6.5613e-04,  1.9872e-04,
           -5.0011e-03, -7.6962e-04, -3.7270e-03,  1.3268e-02,  1.0429e-02,
           -8.0185e-03, -5.2681e-03,  2.4738e-03, -4.0970e-03,  7.5302e-03,
            8.3008e-03, -2.5406e-03,  1.8473e-03,  2.9259e-03,  7.3586e-03,
            2.6398e-02, -5.0201e-03,  3.1338e-03, -4.2152e-03,  9.3002e-03,
            4.7989e-03, -1.6388e-02, -9.8190e-03, -5.0011e-03,  8.7051e-03,
            1.1162e-02,  2.5806e-03, -1.8654e-03, -1.9703e-03, -1.0216e-02,
            1.3557e-02,  7.4463e-03,  4.1580e-03, -8.0338e-03, -4.9210e-03,
           -8.2703e-03, -1.5888e-03, -1.1536e-02,  6.4373e-04, -9.8419e-04,
            7.3547e-03,  5.3444e-03, -1.2993e-02,  3.5114e-03, -5.0964e-03,
           -1.2865e-03,  7.8430e-03, -4.3068e-03,  1.4019e-03, -1.1520e-02,
           -2.0599e-03,  1.3443e-02,  1.0529e-02, -6.0501e-03, -6.3133e-03,
            4.2038e-03,  5.1537e-03, -5.5373e-05]]],


        [[[-2.6073e-03,  3.9673e-03,  1.1459e-02, -4.2191e-03, -1.4191e-03,
           -2.9240e-03,  3.9825e-03,  3.9940e-03, -2.5129e-04, -1.7529e-03,
           -3.2825e-03,  1.6012e-03, -1.3687e-02,  4.7417e-03, -7.5264e-03,
            7.0648e-03,  3.0289e-03,  2.1610e-03, -1.1681e-02, -1.0767e-03,
           -4.2953e-03, -2.5578e-03,  2.6112e-03,  3.4389e-03, -2.6646e-03,
            6.9885e-03, -8.5602e-03, -4.4556e-03, -9.9850e-04,  4.7874e-03,
            2.8763e-03,  3.3436e-03, -3.3016e-03, -3.5076e-03, -4.5662e-03,
            3.8509e-03,  2.6989e-03,  2.3651e-03, -9.7504e-03, -2.4738e-03,
            9.5291e-03,  5.8136e-03,  5.8441e-03,  1.0099e-03, -9.0561e-03,
           -6.7177e-03,  5.5084e-03, -1.7273e-04,  2.0584e-02,  8.7814e-03,
            2.7924e-03, -9.9258e-03, -8.0824e-04, -2.0790e-04,  1.0818e-02,
           -1.9855e-03, -6.6490e-03, -1.1765e-02, -3.3989e-03,  2.5749e-03,
           -2.7637e-03,  9.6054e-03, -7.5645e-03, -6.2790e-03, -2.7514e-04,
            5.1727e-03, -5.3024e-04,  2.7256e-03,  1.2321e-02,  7.0419e-03,
           -3.1590e-05,  4.1809e-03,  3.5267e-03, -5.3406e-03, -5.9967e-03,
            5.5847e-03,  1.0576e-03, -5.6839e-03,  4.9362e-03, -7.7515e-03,
           -2.8267e-03, -9.0790e-03,  4.3144e-03, -6.1531e-03,  2.5539e-03,
           -4.0283e-03,  9.8419e-04,  3.3951e-04]]]], dtype=torch.float16)
2025-05-16 03:02:59.659423 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 89],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-4.3068e-03,  2.2030e-03,  1.4973e-04,  3.2978e-03,  1.5732e-02,
            2.9469e-03, -2.8629e-03, -2.0981e-03, -1.7151e-02,  3.8185e-03,
           -1.5579e-02, -1.6953e-02,  3.4008e-03,  1.9852e-02,  2.4071e-03,
           -8.9645e-04, -1.0262e-03, -5.0278e-03,  2.2638e-04,  3.9253e-03,
            5.4016e-03, -1.2962e-02, -7.9203e-04, -5.2977e-04,  6.5498e-03,
           -3.4637e-03,  9.2926e-03,  1.0399e-02,  4.2114e-03,  1.9970e-03,
            9.3985e-04,  7.0229e-03,  4.2534e-03, -1.4820e-03, -1.7868e-02,
            1.0231e-02,  1.0109e-03,  7.3433e-03, -1.5671e-02, -1.2848e-02,
           -6.8426e-04, -3.1590e-04,  3.6221e-03,  9.1400e-03,  4.9515e-03,
            4.0092e-03, -4.0970e-03,  9.1019e-03,  1.0384e-02, -2.2247e-02,
           -1.4664e-02,  3.7003e-03, -7.5531e-03, -2.5730e-03, -1.0576e-03,
           -3.9177e-03,  9.3307e-03, -9.0256e-03,  7.6752e-03,  4.8599e-03,
           -3.5686e-03, -1.4579e-04, -2.5558e-03, -7.3013e-03,  4.0779e-03,
            1.9741e-03, -3.2158e-03, -1.5266e-02,  1.0872e-04, -6.7673e-03,
            9.5901e-03,  4.6577e-03,  3.0613e-04,  4.9438e-03, -1.4610e-02,
            2.5959e-03,  3.3855e-03, -6.3286e-03,  2.6345e-05, -3.9635e-03,
            9.3384e-03, -2.2831e-03,  5.5161e-03, -1.0548e-03,  4.6883e-03,
            1.4351e-02,  1.6800e-02, -8.8272e-03, -2.2202e-03]]],


        [[[ 1.1749e-02, -1.6375e-03,  1.0986e-02, -3.8929e-03,  3.5896e-03,
           -1.1187e-03,  5.0316e-03, -3.4447e-03, -4.5929e-03, -7.9498e-03,
           -1.1490e-02, -5.0583e-03, -5.4855e-03,  2.9984e-03,  1.0323e-02,
            4.0207e-03,  1.7872e-03, -6.8588e-03, -9.4833e-03,  1.6571e-02,
           -6.2513e-04, -5.4970e-03, -1.6670e-03, -3.3894e-03, -1.5249e-03,
            4.7636e-04, -6.2866e-03,  8.8196e-03, -1.3741e-02, -1.1170e-04,
            8.2169e-03,  2.1057e-03, -1.3380e-03, -2.6302e-03,  3.3689e-04,
           -5.5170e-04, -1.5917e-03,  7.1411e-03, -2.9964e-03,  3.7651e-03,
           -2.8381e-03, -5.6305e-03, -1.3000e-02, -4.0894e-03,  5.0278e-03,
            6.9504e-03, -2.6417e-03,  1.2217e-03, -9.4366e-04,  1.5659e-03,
           -4.9820e-03, -4.9095e-03,  8.9979e-04,  5.5923e-03, -6.5880e-03,
            5.2376e-03,  6.5842e-03, -1.7557e-03,  1.2154e-02, -4.4975e-03,
           -3.8986e-03, -1.1940e-02,  3.6831e-03,  8.5602e-03,  7.5531e-03,
           -8.9340e-03, -6.6147e-03,  8.5678e-03,  1.0307e-02, -4.3907e-03,
            2.3270e-03,  4.7455e-03,  6.2828e-03,  1.6083e-02, -6.2656e-04,
            1.9588e-03,  2.8248e-03,  4.5967e-03,  3.6383e-04, -1.4114e-02,
            1.4458e-03, -4.8561e-03,  7.5874e-03, -4.0016e-03, -6.2943e-03,
            4.0359e-03,  6.3324e-03, -7.0152e-03, -1.2848e-02]]]],
       dtype=torch.float16)
2025-05-16 03:02:59.810730 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), Tensor([2, 89, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 89],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-5.4407e-04,  3.0384e-03, -1.5974e-03,  5.3520e-03, -1.1841e-02,
            1.1795e-02,  2.6608e-03,  8.7814e-03, -2.4300e-03, -1.0406e-02,
            8.7619e-05, -2.0552e-04, -4.4441e-03,  1.1757e-02, -2.2335e-03,
            5.5428e-03, -3.3569e-03, -3.6335e-03,  7.0724e-03,  3.3436e-03,
           -1.1917e-02, -1.0841e-02,  1.1307e-02,  1.6785e-02,  1.1154e-02,
            5.6229e-03, -1.3943e-03, -4.5815e-03,  8.3542e-03,  1.5917e-03,
            1.6537e-03,  3.4618e-04,  3.8185e-03, -9.5034e-04,  6.8741e-03,
            5.8222e-04, -6.2943e-03, -5.5962e-03,  2.9774e-03, -2.1381e-03,
           -4.0932e-03,  1.1396e-03,  7.8506e-03,  1.3723e-03,  8.2779e-03,
           -1.0712e-02,  1.6251e-03, -1.8997e-02, -1.2291e-02,  1.1635e-04,
           -2.0264e-02, -2.5883e-03,  2.0111e-02, -5.7526e-03, -5.0926e-03,
           -7.2193e-04, -2.1839e-03,  1.5640e-03, -4.0283e-03, -7.1526e-03,
            2.4185e-02,  1.5121e-02, -1.9350e-03,  1.3952e-03, -6.5804e-03,
           -4.6654e-03,  2.2888e-03, -5.2948e-03,  8.6260e-04,  3.4065e-03,
            7.3471e-03, -3.3894e-03,  5.8594e-03, -1.7147e-03, -1.3214e-02,
           -3.5572e-03,  2.0180e-03, -1.1015e-03,  2.5730e-03, -5.1575e-03,
            1.8740e-03, -4.6768e-03, -6.6109e-03, -6.3019e-03,  3.1292e-05,
            1.6403e-03, -6.3400e-03, -4.6844e-03,  1.2321e-02]]],


        [[[-1.7334e-02, -2.3861e-03, -2.4772e-04,  2.7542e-03,  5.6028e-04,
            2.1286e-02,  5.7297e-03, -1.9703e-03, -4.6992e-04, -1.5991e-02,
            6.2084e-04, -3.8471e-03, -7.1955e-04,  3.0231e-03, -3.0231e-03,
            3.4714e-03,  6.3934e-03,  9.3155e-03, -2.6169e-03, -2.9316e-03,
           -1.6069e-03,  1.1742e-02,  5.1460e-03,  1.8501e-03,  5.8098e-03,
           -3.0136e-03,  1.7824e-03,  3.8853e-03,  5.6992e-03, -9.9792e-03,
           -6.0234e-03, -9.1095e-03,  2.1988e-02,  3.5057e-03, -1.6541e-02,
            7.2718e-04, -5.7564e-03, -1.2680e-02, -6.8893e-03, -1.0519e-03,
            1.1444e-02, -1.5526e-02, -2.7447e-03, -1.1749e-02, -7.0496e-03,
           -1.7120e-02,  3.8242e-03,  1.3552e-03,  1.0155e-02,  1.8606e-03,
           -2.4452e-03,  2.4281e-03,  8.4991e-03, -5.6419e-03,  3.7842e-03,
           -2.3327e-03, -5.6915e-03, -1.4099e-02, -2.7657e-04,  6.7520e-03,
            2.1057e-03, -1.3599e-03,  6.3171e-03, -6.0692e-03,  2.5558e-03,
           -9.0539e-05, -6.5269e-03, -1.4473e-02,  6.0806e-03, -2.2831e-03,
           -5.4283e-03,  1.2074e-03,  1.4610e-02,  1.1711e-02,  8.6288e-03,
            7.5226e-03, -6.8398e-03, -5.3062e-03, -3.6945e-03, -8.1730e-04,
            1.6861e-02,  3.7594e-03,  8.5678e-03,  3.1376e-03,  4.9896e-03,
           -7.4120e-03,  4.2000e-03, -5.1117e-03,  6.5956e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:00.039280 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 90],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.8155e-05, -2.0909e-04, -1.0195e-03,  8.9035e-03, -1.3046e-03,
            9.2411e-04, -3.0079e-03, -1.7557e-03,  1.1833e-02, -3.5667e-03,
            6.0892e-04,  1.4944e-03, -2.3708e-03, -1.4076e-02,  6.3972e-03,
           -5.5656e-03,  1.0788e-02,  3.1071e-03,  6.5498e-03,  3.4142e-03,
           -1.1070e-02,  1.8539e-03,  1.7290e-03,  3.9291e-03,  9.6359e-03,
            4.5242e-03, -2.8954e-03, -3.5019e-03,  1.1116e-02,  3.3360e-03,
            5.2452e-03, -2.3479e-03,  6.5231e-04,  9.6588e-03, -5.2299e-03,
            1.0710e-03,  5.2118e-04, -5.1346e-03,  2.1982e-04,  3.8147e-03,
           -5.5275e-03, -2.0618e-03, -4.5662e-03,  8.3847e-03, -1.4587e-02,
            7.5989e-03, -3.2020e-04, -1.4734e-03, -1.9760e-03, -2.2678e-03,
           -1.2016e-03, -2.1152e-03,  7.7667e-03,  2.4090e-03,  7.5865e-04,
            7.6637e-03, -5.4207e-03,  3.1624e-03, -5.9929e-03,  1.7462e-03,
           -5.9414e-04, -5.4016e-03, -1.1339e-03,  1.0614e-03,  5.7945e-03,
            7.0534e-03,  3.3970e-03,  9.3222e-04, -5.8708e-03,  2.9545e-03,
           -3.2825e-03, -1.1435e-03, -1.9058e-02, -2.2774e-03, -6.7673e-03,
            7.3957e-04,  4.4365e-03, -1.1854e-03,  2.6107e-05, -1.8723e-02,
            1.0881e-03, -1.3504e-02,  8.0442e-04,  3.8548e-03, -1.1520e-03,
           -2.0809e-03,  7.9956e-03,  3.3531e-03, -6.7329e-03,  5.2338e-03]]],


        [[[-1.1017e-02, -1.1490e-02, -2.8458e-03, -3.7327e-03, -3.3212e-04,
           -1.2264e-03,  1.2192e-02, -4.1533e-04,  9.4223e-04,  2.1572e-03,
           -3.7041e-03, -5.4893e-03, -3.8624e-03,  2.5284e-02,  5.6000e-03,
            2.5742e-02, -6.4545e-03, -3.6201e-03,  3.9062e-03, -2.4948e-03,
            8.6517e-03,  2.1248e-03, -3.8681e-03, -9.8953e-03,  6.9475e-04,
            1.2827e-03,  9.1782e-03, -8.3828e-04,  2.2736e-03, -3.2501e-03,
            1.4639e-03, -7.8888e-03, -7.0839e-03,  2.3155e-03, -1.1490e-02,
           -3.9554e-04,  1.0460e-02,  1.5259e-02, -2.0516e-04,  6.6833e-03,
            1.9318e-02, -1.2848e-02, -8.0185e-03, -4.2953e-03,  9.2087e-03,
            2.9945e-04, -2.3865e-02,  3.6659e-03, -4.8752e-03,  4.1084e-03,
           -1.0735e-02,  3.3646e-03,  8.4457e-03, -1.8835e-03, -9.4299e-03,
            2.8133e-03,  2.9392e-03,  3.9444e-03,  1.0078e-02,  3.3913e-03,
           -4.9400e-03, -2.4796e-03,  7.3013e-03,  3.1261e-03, -1.0475e-02,
           -6.2323e-04, -3.2663e-04,  1.1757e-02,  2.9812e-03, -1.7710e-03,
           -1.2123e-02,  5.4474e-03, -1.3802e-02,  7.8869e-04, -7.3700e-03,
           -4.1461e-04, -1.0269e-02,  3.0121e-02, -4.5547e-03, -2.5463e-03,
            3.8738e-03,  7.5531e-03,  1.3351e-03, -2.1149e-02, -1.3695e-02,
            1.0735e-02, -1.9159e-03,  3.4962e-03, -9.2087e-03, -1.1244e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:00.206974 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), Tensor([2, 90, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 90],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-3.6678e-03,  1.0929e-03,  2.7866e-03,  1.9665e-03,  3.9520e-03,
           -1.4181e-03, -1.4908e-02, -9.4070e-03,  1.1873e-03, -1.0201e-02,
            2.6417e-03,  1.2497e-02, -3.5686e-03, -1.5869e-02,  8.3160e-03,
            3.4142e-03, -4.7150e-03, -3.9368e-03,  6.6490e-03,  6.1035e-03,
           -6.8703e-03,  1.5045e-02,  1.1963e-02, -1.6651e-03,  5.0507e-03,
            3.6163e-03,  1.2169e-02, -1.6708e-02, -1.7624e-02,  1.4847e-02,
            8.6060e-03, -1.7334e-02, -1.0338e-02,  6.2828e-03, -2.3537e-03,
            4.7379e-03, -9.0256e-03, -1.0635e-02,  1.3542e-02, -3.6755e-03,
           -5.1975e-04,  7.3204e-03,  9.7046e-03, -2.1610e-03, -3.0518e-03,
            8.7023e-04, -1.2039e-02, -1.0605e-03,  3.7956e-03,  4.7073e-03,
           -3.6373e-03, -3.3092e-04,  1.0933e-02, -3.8090e-03,  4.1046e-03,
           -1.5974e-03,  5.2032e-03, -5.7526e-03,  1.7059e-02,  2.3708e-03,
           -4.3983e-03, -6.2027e-03,  7.9880e-03, -4.3678e-03,  4.4751e-04,
            3.9825e-03,  2.8973e-03, -9.0942e-03, -1.2150e-03,  7.3357e-03,
            8.6441e-03, -1.7481e-03, -1.4038e-02, -2.6798e-03,  1.2688e-02,
            5.7220e-06, -2.0962e-03,  5.6496e-03,  5.1346e-03, -1.0195e-03,
           -8.6594e-03, -9.5673e-03,  1.2579e-03,  2.3842e-03, -4.2868e-04,
            2.9335e-03, -8.3771e-03,  2.9516e-04,  3.0003e-03, -5.3940e-03]]],


        [[[-6.4468e-03,  6.9466e-03,  6.8970e-03, -3.5248e-03,  1.5671e-02,
            7.4577e-04, -1.1320e-03, -1.4572e-03,  1.4725e-03, -1.0056e-02,
           -3.5934e-03, -1.0246e-04, -4.5319e-03,  2.3212e-03, -1.2062e-02,
           -7.1793e-03, -1.2989e-03,  6.0234e-03, -1.1696e-02,  5.8270e-04,
            6.4316e-03, -4.7913e-03,  2.1112e-04,  1.4200e-03,  4.0054e-03,
           -5.6572e-03, -6.1893e-04, -1.5516e-03,  3.9825e-03,  7.1716e-03,
            1.2718e-02, -1.0635e-02, -5.4207e-03, -6.5536e-03,  7.2556e-03,
            1.4862e-02, -9.3231e-03,  4.9896e-03, -8.7452e-04, -8.5526e-03,
           -4.4594e-03,  1.2352e-02,  8.3160e-03, -1.2642e-02, -6.2828e-03,
           -6.7863e-03, -4.7989e-03,  8.9264e-03,  5.6877e-03, -5.5008e-03,
            7.6332e-03,  4.3411e-03, -4.8218e-03, -8.6517e-03,  5.2834e-03,
            2.2678e-03, -8.9569e-03, -2.5902e-03, -1.3218e-03, -1.3340e-04,
           -6.1798e-03,  5.2948e-03, -1.0910e-02,  6.5947e-04,  7.9422e-03,
            6.5041e-03,  3.6659e-03, -1.6525e-02,  7.4081e-03, -5.5122e-03,
            4.1032e-04,  1.3647e-03,  1.3077e-02,  2.9802e-06, -4.2801e-03,
            5.2681e-03, -1.0391e-02,  1.0719e-02, -2.3830e-04, -4.6501e-03,
            8.5907e-03,  1.5755e-03, -3.6945e-03,  1.2634e-02,  3.9520e-03,
            2.1191e-03,  1.7500e-03, -1.0910e-02,  4.8518e-04,  5.3596e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:00.429992 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 91],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-4.4823e-03,  6.3515e-03,  7.3290e-04,  1.1559e-03, -4.2648e-03,
            6.7043e-04,  8.0109e-03,  1.6823e-03, -5.2910e-03,  9.9957e-05,
           -3.6564e-03,  1.4404e-02, -1.1415e-03, -2.9774e-03, -4.3297e-03,
           -1.8959e-03, -3.5133e-03,  9.1858e-03,  1.0887e-02, -1.1490e-02,
           -2.1896e-03, -5.0354e-03,  1.4000e-02, -9.7809e-03,  7.2441e-03,
           -3.7670e-03,  4.9171e-03, -1.8234e-02, -8.5831e-04,  9.8419e-03,
            1.0462e-03, -2.4681e-03,  6.7759e-04, -1.1444e-02,  2.2621e-03,
            9.4366e-04, -5.8842e-04,  8.0414e-03,  6.8092e-03, -7.5150e-03,
            8.1480e-05,  1.1131e-02, -4.5662e-03, -1.5745e-03, -1.3113e-03,
           -4.0169e-03,  5.0240e-03,  2.5558e-03, -1.1492e-03,  1.8511e-03,
            5.3406e-03,  6.2599e-03,  6.3972e-03, -2.6608e-04, -2.9516e-04,
           -3.4103e-03,  1.0042e-03, -6.6519e-05, -1.5106e-02,  2.3460e-03,
           -1.1292e-03, -2.8896e-03,  1.2909e-02, -3.3760e-04,  6.5498e-03,
            1.2846e-03, -2.8968e-04, -4.9133e-03, -2.9240e-03, -2.8439e-03,
            3.0365e-03, -4.9477e-03, -2.8634e-04, -2.4223e-03,  1.5366e-02,
            4.0932e-03,  5.1594e-04,  1.5306e-03, -2.0275e-03, -3.4389e-03,
           -9.1171e-04, -1.0920e-03, -3.5954e-03,  6.7482e-03,  2.6107e-04,
            8.8425e-03, -1.2192e-02, -9.2621e-03, -2.4231e-02,  2.5501e-03,
            1.7796e-03]]],


        [[[-1.7181e-02,  2.5749e-03,  1.4107e-02, -4.6468e-04,  3.8071e-03,
            1.0353e-02,  1.1543e-02,  1.0605e-02,  3.2902e-03,  3.2783e-04,
            3.1662e-03, -1.2848e-02,  1.4009e-03, -7.0152e-03, -4.8828e-03,
           -4.7188e-03,  3.4866e-03, -1.6699e-03, -1.3618e-02,  4.6196e-03,
           -4.1389e-03,  7.3357e-03,  1.8530e-03, -7.8678e-04, -1.6289e-03,
           -4.8447e-03,  1.8387e-03, -9.5825e-03,  3.7861e-03,  2.0466e-03,
            5.7335e-03,  1.0574e-02, -7.5989e-03,  1.5297e-03,  1.4830e-03,
           -5.3749e-03, -2.0447e-03,  2.9545e-03, -5.0621e-03,  3.1528e-03,
           -5.5161e-03, -3.1681e-03,  1.0567e-02, -4.6043e-03, -9.0027e-04,
            2.6493e-03,  2.0905e-03, -6.9771e-03,  2.2430e-02, -1.9741e-03,
           -8.9931e-04,  2.5692e-03, -1.5831e-03,  1.5962e-04, -1.0233e-03,
            3.1033e-03, -6.9504e-03,  5.1594e-04, -1.1129e-03,  1.6241e-03,
            4.3259e-03,  5.2719e-03, -9.0942e-03,  7.3586e-03, -2.7103e-03,
           -5.7678e-03,  2.6932e-03,  1.5173e-03, -6.4278e-03, -5.9938e-04,
           -4.1008e-03, -4.9553e-03,  4.9553e-03, -2.2186e-02,  6.5613e-03,
            4.6349e-03,  5.4359e-03, -4.8599e-03,  6.4964e-03, -7.8354e-03,
            2.5158e-03,  1.2253e-02, -9.6664e-03,  6.2218e-03,  4.2510e-04,
            3.6120e-05,  1.0395e-03,  1.1959e-03, -5.4169e-03, -6.1150e-03,
           -2.2678e-03]]]], dtype=torch.float16)
2025-05-16 03:03:00.670073 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), Tensor([2, 91, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 91],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0031, -0.0020,  0.0105, -0.0020, -0.0070,  0.0020, -0.0077,
           -0.0029,  0.0082,  0.0031, -0.0027,  0.0032,  0.0041,  0.0057,
            0.0079,  0.0023, -0.0075,  0.0077,  0.0016, -0.0152,  0.0097,
            0.0142,  0.0111, -0.0052, -0.0055,  0.0007,  0.0064, -0.0034,
            0.0021, -0.0036, -0.0063, -0.0088, -0.0141,  0.0086,  0.0050,
           -0.0136,  0.0018, -0.0035, -0.0077, -0.0044,  0.0072, -0.0058,
            0.0097, -0.0025, -0.0025,  0.0073, -0.0032,  0.0082,  0.0008,
            0.0076, -0.0021,  0.0002,  0.0038,  0.0081,  0.0035, -0.0005,
            0.0057,  0.0020, -0.0050, -0.0004,  0.0009, -0.0026, -0.0006,
            0.0073, -0.0115,  0.0018,  0.0029,  0.0033, -0.0067, -0.0022,
           -0.0104,  0.0029,  0.0012, -0.0026,  0.0014,  0.0047, -0.0018,
            0.0016, -0.0004,  0.0093,  0.0060, -0.0134,  0.0015, -0.0194,
           -0.0016, -0.0091,  0.0049,  0.0036,  0.0030, -0.0073, -0.0048]]],


        [[[-0.0001, -0.0005,  0.0019,  0.0098,  0.0032,  0.0001,  0.0128,
           -0.0202,  0.0071, -0.0080, -0.0054, -0.0106, -0.0138,  0.0049,
           -0.0086,  0.0028, -0.0102,  0.0032, -0.0165,  0.0007,  0.0021,
            0.0087, -0.0014,  0.0062,  0.0003, -0.0013,  0.0032, -0.0020,
           -0.0140,  0.0089,  0.0113,  0.0092,  0.0131,  0.0114,  0.0131,
           -0.0009, -0.0026,  0.0035, -0.0071, -0.0043, -0.0015, -0.0061,
           -0.0055, -0.0022,  0.0012, -0.0041, -0.0125,  0.0023, -0.0156,
            0.0103,  0.0051, -0.0003, -0.0102,  0.0027, -0.0003, -0.0069,
           -0.0068, -0.0015,  0.0066, -0.0038, -0.0060, -0.0040,  0.0048,
            0.0129, -0.0019,  0.0099,  0.0056, -0.0054, -0.0031,  0.0030,
           -0.0073,  0.0040,  0.0025, -0.0021,  0.0053,  0.0089,  0.0034,
           -0.0026, -0.0023, -0.0066,  0.0108, -0.0104,  0.0050,  0.0044,
            0.0079, -0.0049, -0.0007,  0.0045, -0.0054, -0.0037,  0.0125]]]],
       dtype=torch.float16)
2025-05-16 03:03:00.903861 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 92],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.1854e-03,  6.0997e-03,  7.5912e-03, -2.9945e-03,  9.3460e-03,
            6.1646e-03,  1.8902e-03,  1.9623e-02, -9.2773e-03, -1.5457e-02,
           -8.8501e-03, -3.0346e-03, -8.1177e-03,  2.2717e-03,  1.6918e-03,
           -7.1983e-03,  2.2774e-03,  1.6068e-02, -1.1587e-03,  3.8223e-03,
            3.8605e-03, -7.7019e-03, -4.3368e-04, -1.0963e-02,  4.9067e-04,
            3.4881e-04,  3.1643e-03,  4.8614e-04, -6.2981e-03,  3.8795e-03,
           -1.6586e-02,  2.5787e-03, -1.0857e-02, -3.6640e-03,  8.7433e-03,
            2.2507e-03, -4.6005e-03,  5.6877e-03,  7.6904e-03, -1.6205e-02,
           -3.1338e-03,  2.2640e-03, -9.2468e-03,  9.6989e-04, -6.0120e-03,
           -7.3814e-03,  1.3361e-03,  4.1885e-03, -1.4595e-02, -4.4060e-03,
            4.8485e-03, -6.5956e-03,  8.9169e-04, -4.1199e-03,  2.6283e-03,
           -2.1152e-03, -5.8517e-03,  3.7708e-03, -9.7580e-03, -9.6436e-03,
            7.6065e-03,  9.7275e-03, -1.4282e-02,  5.0507e-03,  1.1665e-02,
            5.3635e-03,  2.2984e-03, -6.7291e-03,  1.2520e-02, -5.0020e-04,
            1.4977e-02, -4.2381e-03,  3.8433e-03,  5.1117e-03, -2.4271e-04,
           -1.3046e-02,  1.0162e-02, -7.1068e-03, -4.7989e-03,  3.7718e-04,
           -2.7046e-03,  1.0620e-02,  1.9333e-02, -8.5526e-03,  8.0795e-03,
            9.6436e-03,  1.6928e-03,  5.2948e-03, -1.2825e-02, -6.8626e-03,
            4.7798e-03,  1.4244e-02]]],


        [[[ 1.7487e-02,  1.9989e-03, -9.0942e-03, -7.1430e-04,  5.8699e-04,
            8.0795e-03,  9.7504e-03, -3.2349e-03, -4.1504e-03, -2.1000e-03,
            8.8501e-03,  4.0321e-03, -1.5793e-02, -1.1993e-02, -6.1951e-03,
           -3.9291e-03,  4.2076e-03,  9.5978e-03,  2.4033e-04, -6.2523e-03,
            8.5449e-04, -6.0272e-03, -8.0795e-03, -5.0366e-05,  1.7365e-02,
           -7.7534e-04, -6.9885e-03,  4.5166e-03,  4.9133e-03, -5.4054e-03,
            4.4022e-03,  1.0147e-02,  3.0937e-03,  3.9597e-03,  8.0109e-03,
            5.0812e-03, -1.4839e-03, -3.2234e-03, -5.9700e-04,  2.0103e-03,
            1.5991e-02, -1.4343e-02, -6.2943e-03, -1.1406e-03,  4.0359e-03,
           -3.9139e-03, -3.4657e-03, -8.3313e-03, -6.5956e-03,  2.4853e-03,
           -3.9291e-04, -1.6525e-02,  5.9929e-03,  3.3302e-03, -9.8572e-03,
           -4.3488e-03, -1.5898e-03, -1.1272e-03, -2.7637e-03,  5.2986e-03,
           -4.5433e-03, -8.9502e-04, -2.0809e-03, -6.5994e-04, -7.6485e-03,
            1.4439e-03, -5.4626e-03, -7.0572e-04,  9.6178e-04, -2.2812e-03,
           -1.6909e-03, -8.6117e-04,  1.2047e-02,  1.0128e-03,  4.6921e-03,
            6.9542e-03, -1.4191e-03, -7.3814e-03,  1.4969e-02, -3.9983e-04,
            1.0109e-02,  2.4052e-03,  6.1188e-03, -2.3136e-03, -8.0261e-03,
           -8.4915e-03,  1.0437e-02, -2.1915e-03,  1.0567e-02,  2.1267e-03,
           -7.2365e-03, -9.1019e-03]]]], dtype=torch.float16)
2025-05-16 03:03:01.068163 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), Tensor([2, 92, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 92],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 9.2468e-03,  4.0245e-03, -2.8324e-03,  1.5434e-02, -1.1993e-02,
           -2.0485e-03,  1.7960e-02,  3.6411e-03, -9.0075e-04, -2.1305e-03,
            1.4954e-03,  2.4700e-03, -3.0060e-03, -1.8845e-02, -9.2926e-03,
           -5.0831e-04,  9.2621e-03, -2.4986e-03, -3.1986e-03, -3.5133e-03,
            2.5120e-03, -1.0262e-02, -5.4092e-03,  1.3721e-04, -6.4735e-03,
           -2.1225e-02, -1.0147e-03,  2.3518e-03,  1.5129e-02,  2.6722e-03,
            3.1528e-03, -1.9653e-02, -9.8343e-03, -1.5335e-02,  9.5444e-03,
            1.0233e-03,  1.0468e-02, -7.3862e-04, -2.0599e-03, -5.0888e-03,
           -6.3438e-03,  2.9526e-03,  1.6298e-03, -6.8321e-03,  1.0788e-02,
            3.6430e-03,  2.3282e-04, -1.0216e-02,  9.4147e-03, -3.9444e-03,
            1.4820e-03,  4.9782e-03, -8.3084e-03, -2.7485e-03,  2.0638e-03,
           -1.2299e-02,  8.0261e-03,  2.5272e-03,  3.9458e-04,  1.3208e-03,
            2.2049e-03,  3.1834e-03,  3.1796e-03,  6.7024e-03, -1.5287e-03,
           -4.7226e-03,  1.7548e-03,  2.4071e-03,  5.1260e-04, -5.1041e-03,
           -3.8986e-03, -8.2493e-05, -9.7561e-04, -4.4861e-03,  6.8474e-03,
            2.2095e-02,  6.9046e-03,  5.3406e-04, -1.9312e-03,  1.9684e-02,
            1.1124e-02, -9.1400e-03, -9.0408e-03,  7.2594e-03,  1.4000e-02,
           -4.9362e-03,  7.9441e-04,  1.1055e-02, -8.4839e-03, -2.4395e-03,
           -3.8967e-03, -1.1078e-02]]],


        [[[ 1.9379e-03, -1.6312e-02,  1.6344e-04,  1.0101e-02,  4.0588e-03,
            5.2948e-03, -1.0666e-02,  2.3127e-04,  1.8864e-03,  1.0025e-02,
           -1.8339e-03, -1.4832e-02, -7.6828e-03, -2.4139e-02,  5.5275e-03,
           -4.5319e-03, -8.1863e-03, -2.6798e-03, -4.9829e-04,  5.9624e-03,
           -1.6003e-03, -5.4131e-03,  7.6675e-03, -8.0566e-03, -1.9426e-03,
           -1.0780e-02,  1.3285e-03,  3.8910e-03,  2.7161e-03, -1.1635e-02,
           -2.8687e-03,  6.1913e-03, -1.3573e-02,  1.2001e-02, -1.3447e-03,
            4.6844e-03, -1.7853e-02, -3.8767e-04, -1.2350e-03,  1.2665e-03,
           -3.6125e-03,  1.1185e-02, -2.6188e-03, -1.2413e-02, -2.0752e-03,
           -6.9046e-03,  3.3779e-03,  6.4254e-05,  4.0703e-03,  7.0915e-03,
           -7.3700e-03,  5.8889e-04, -8.7204e-03,  2.5988e-04,  1.0414e-02,
           -1.0214e-03,  1.0262e-02,  4.9515e-03, -2.2186e-02,  3.5000e-03,
           -4.6921e-04, -3.7403e-03, -2.5582e-04,  1.7538e-03,  1.9855e-03,
            1.8585e-02, -6.0997e-03,  1.3512e-02,  1.1277e-04,  3.0575e-03,
           -6.8321e-03,  1.0147e-02,  1.4811e-03,  3.8109e-03,  5.2643e-03,
            3.9253e-03,  4.5371e-04,  1.0551e-02,  5.3101e-03, -8.3771e-03,
           -7.1645e-05,  6.3667e-03,  4.6349e-03,  1.4450e-02, -2.3117e-03,
           -2.3499e-03,  2.2949e-02, -6.8703e-03,  6.3782e-03, -4.7188e-03,
           -1.5650e-03,  3.2349e-03]]]], dtype=torch.float16)
2025-05-16 03:03:01.290193 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 93],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.0612e-02,  6.7024e-03,  5.8899e-03,  8.1711e-03,  1.1757e-02,
           -5.1804e-03, -1.0872e-02,  6.1607e-04,  5.4588e-03, -6.1989e-03,
           -6.6109e-03, -7.5378e-03,  2.0084e-03, -1.6284e-04,  3.0499e-03,
            6.5947e-04,  2.0485e-03, -6.0463e-03, -2.1622e-02,  1.2369e-03,
           -1.1871e-02,  4.6272e-03,  6.1798e-03,  1.5793e-03,  2.5005e-03,
            1.4313e-02,  5.4512e-03,  5.1384e-03, -1.6241e-03, -4.0054e-03,
            1.2161e-02, -9.4528e-03, -1.0777e-03, -7.4806e-03, -7.9298e-04,
            1.3924e-02, -2.4357e-03, -4.7836e-03,  1.9007e-03, -2.8586e-04,
           -3.6297e-03, -5.9624e-03,  3.7060e-03,  3.0100e-05, -7.0801e-03,
           -2.1954e-03,  6.5088e-04,  6.9504e-03, -2.4246e-02, -7.4654e-03,
           -7.0724e-03,  2.4071e-03,  1.0620e-02, -8.5907e-03, -5.3558e-03,
            3.7174e-03, -3.3245e-03,  3.7556e-03,  2.2717e-03,  6.1531e-03,
            4.4823e-03,  3.1996e-04,  1.5850e-03,  2.0466e-03,  1.3132e-03,
           -2.6588e-03,  1.2741e-03, -9.8114e-03, -7.1182e-03,  4.7035e-03,
           -1.2159e-03,  1.8738e-02, -2.3975e-03, -5.6386e-05,  1.1749e-02,
           -1.2140e-03, -3.5572e-03,  5.7335e-03, -1.3084e-03, -8.5297e-03,
            6.3095e-03,  6.5498e-03, -2.1095e-03, -8.3113e-04,  4.1924e-03,
           -6.7558e-03, -1.7071e-03, -6.4163e-03,  4.7035e-03, -6.9809e-03,
           -2.8496e-03, -2.9888e-03,  1.1497e-02]]],


        [[[-2.8057e-03, -4.0359e-03, -9.9087e-04, -4.4894e-04, -1.3786e-02,
            1.2054e-02,  2.0409e-03, -1.7223e-03, -2.0561e-03, -1.8435e-03,
            3.4294e-03, -1.6041e-03, -1.1845e-03,  1.7715e-02, -9.3842e-03,
            1.3985e-02, -3.5214e-04,  1.6441e-03, -5.7106e-03,  2.3537e-03,
           -5.1765e-03, -1.0757e-03, -3.9911e-04, -8.0442e-04,  3.3417e-03,
            8.3008e-03, -9.4652e-04,  3.9749e-03, -1.0162e-02,  1.1200e-02,
           -2.4395e-03, -5.0507e-03,  1.3832e-02, -4.4022e-03, -1.1879e-02,
           -7.8354e-03, -2.7122e-03, -9.8953e-03,  2.5749e-03,  1.1902e-03,
           -5.2567e-03, -7.4310e-03, -2.2531e-05, -1.8539e-03,  4.1008e-03,
            1.1909e-02, -1.5282e-02, -2.2316e-03,  5.0011e-03,  4.1618e-03,
            3.9597e-03,  4.4861e-03,  3.3016e-03,  3.2401e-04, -6.2981e-03,
           -1.1883e-03,  2.3556e-03, -2.2888e-02,  1.9836e-03,  3.6831e-03,
            1.4315e-03,  9.6321e-05,  1.3113e-03,  4.7913e-03, -2.8877e-03,
            3.9411e-04,  5.1079e-03, -1.2749e-02, -1.3351e-03, -2.8992e-03,
           -3.3760e-03,  4.6120e-03,  2.4681e-03,  4.8714e-03, -1.9336e-04,
           -8.7357e-03, -4.2915e-03,  2.9774e-03,  1.0605e-02,  6.3591e-03,
            6.1760e-03, -3.9253e-03,  2.3232e-03, -9.4452e-03,  5.4665e-03,
           -5.1460e-03, -3.3970e-03,  6.1569e-03,  4.1542e-03,  1.9646e-03,
            1.2657e-02, -1.1520e-03,  3.8967e-03]]]], dtype=torch.float16)
2025-05-16 03:03:01.494693 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), Tensor([2, 93, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 93],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-4.3259e-03,  1.1902e-03,  1.6518e-03, -2.8210e-03, -1.7536e-04,
           -2.2335e-03, -4.4861e-03, -6.9618e-03, -8.6212e-03,  1.8680e-04,
           -3.3932e-03,  3.3016e-03,  1.7834e-03, -7.3242e-03, -3.3493e-03,
           -5.2910e-03,  3.4065e-03, -2.6520e-02,  5.7678e-03,  2.2678e-03,
            1.5839e-02,  4.0474e-03, -3.9330e-03, -1.5656e-02, -8.6355e-04,
            9.9640e-03, -2.6054e-03,  2.7542e-03, -1.2299e-02, -3.4785e-04,
           -1.6737e-04,  4.8904e-03, -8.9874e-03, -3.2425e-04, -2.0466e-03,
            5.3177e-03,  4.9286e-03, -3.6221e-03, -7.5302e-03, -3.0441e-03,
            1.1730e-03, -7.2517e-03, -2.0618e-03, -8.7023e-05, -1.2712e-03,
           -3.7174e-03,  2.4376e-03, -1.6499e-03,  4.0588e-03,  6.2256e-03,
            2.5978e-03,  3.0842e-03,  9.4833e-03,  3.2635e-03,  8.5297e-03,
            1.2917e-02, -3.4695e-03,  7.1297e-03, -4.4174e-03,  1.8311e-03,
           -1.1139e-02, -1.2970e-02, -1.2106e-04, -4.9858e-03,  2.9621e-03,
            2.1248e-03, -1.0727e-02,  9.6893e-03,  9.5367e-03,  1.3985e-02,
            5.4626e-03, -3.4103e-03, -5.8594e-03,  5.3406e-03,  4.7913e-03,
           -4.7493e-03,  2.5463e-03,  1.3336e-02,  1.6647e-02, -7.2670e-03,
           -9.5034e-04,  1.4435e-02,  6.0081e-03,  1.2489e-02,  2.6321e-03,
            8.3923e-03, -6.6459e-05, -1.8911e-03, -1.4830e-03, -3.3722e-03,
           -1.0223e-02, -1.4214e-02, -6.1188e-03]]],


        [[[-4.8866e-03, -3.9406e-03,  2.6035e-03,  5.5962e-03, -1.0750e-02,
           -1.2674e-03, -2.8753e-04, -1.5903e-04,  3.7746e-03,  2.5311e-03,
           -4.2686e-03,  1.1644e-03,  3.8028e-04, -3.0308e-03, -5.6791e-04,
           -1.1581e-02, -2.7370e-03,  1.6670e-03,  5.7564e-03, -3.3283e-03,
            9.7418e-04,  4.4289e-03, -4.4098e-03, -3.0422e-04, -8.6365e-03,
           -5.8289e-03, -1.6856e-04, -4.7112e-03,  4.9133e-03, -7.5798e-03,
            1.8921e-02,  5.6305e-03,  1.0849e-02,  3.4809e-03,  1.0071e-02,
           -2.9297e-03, -2.2640e-03,  9.1553e-03, -5.7793e-03, -1.4067e-03,
           -7.0143e-04,  7.5245e-04,  2.6340e-03,  5.8126e-04, -3.3894e-03,
            5.2261e-03,  9.8724e-03, -1.5965e-03, -2.4891e-03,  7.6828e-03,
           -4.9477e-03,  2.4986e-03, -1.9012e-02,  1.5364e-03, -9.0103e-03,
            2.3499e-03, -4.6806e-03,  3.8891e-03,  2.4071e-03,  3.5343e-03,
            4.4513e-04, -1.3676e-03, -3.2310e-03, -5.2185e-03,  5.3520e-03,
            1.7349e-02, -3.9520e-03,  5.9795e-04,  2.8839e-03, -4.8676e-03,
           -9.9030e-03, -2.8038e-04,  8.8787e-04, -1.8139e-03,  9.0241e-05,
            4.3068e-03,  1.8387e-03, -7.6294e-04, -1.1398e-02,  5.6343e-03,
           -3.0651e-03, -8.9312e-04,  1.4620e-03, -1.8349e-03,  4.0412e-04,
           -4.5242e-03,  1.6394e-03,  1.5030e-02,  9.5749e-03, -9.7046e-03,
           -2.0466e-03, -4.1466e-03,  3.2654e-03]]]], dtype=torch.float16)
2025-05-16 03:03:01.650150 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 94],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-7.2823e-03, -9.0003e-06, -3.1590e-06, -2.4052e-03,  5.5237e-03,
           -8.9645e-03,  1.2207e-03,  2.0580e-03,  8.0719e-03, -5.7602e-03,
            4.6997e-03,  5.4474e-03,  5.7030e-03, -1.3790e-03,  2.5291e-03,
            1.9333e-02,  4.3831e-03, -4.9782e-03,  2.5043e-03,  5.1308e-04,
           -4.9019e-03,  1.1988e-03, -9.2316e-04, -4.2629e-04,  6.8779e-03,
            8.3694e-03, -1.4000e-02, -8.9741e-04, -5.1041e-03,  7.8964e-04,
           -2.1172e-03,  4.3106e-04,  4.1122e-03, -6.9160e-03,  3.1281e-03,
            4.7226e-03,  2.1529e-04,  3.4561e-03,  4.3182e-03,  6.5880e-03,
           -5.4026e-04, -1.2541e-03, -8.7786e-04, -4.2992e-03,  6.0501e-03,
            5.3978e-03,  2.7809e-03, -2.7027e-03, -7.3242e-03,  9.5901e-03,
           -6.3896e-03, -7.7095e-03, -6.3400e-03, -6.3248e-03, -1.0719e-02,
            1.0872e-03,  5.8632e-03, -1.9436e-03,  7.1297e-03, -1.2693e-03,
           -7.2098e-03,  1.5976e-02, -1.2192e-02, -6.6948e-03,  5.8975e-03,
            1.8291e-03, -3.5620e-04,  9.3002e-03, -1.3809e-02, -8.1024e-03,
           -6.4659e-04,  9.9182e-03,  8.4839e-03, -1.3008e-02, -3.4447e-03,
            1.8768e-03,  1.0277e-02, -3.1719e-03,  3.7670e-03, -4.9019e-03,
           -1.3800e-03, -6.3858e-03, -9.4681e-03,  1.4000e-02, -5.6953e-03,
            1.7405e-04, -8.0948e-03, -5.7602e-03,  5.6648e-04,  2.0447e-03,
            2.8839e-03, -2.4223e-03,  5.0392e-03,  3.6192e-04]]],


        [[[-3.3360e-03,  7.7934e-03,  3.8471e-03,  1.4076e-02,  2.2411e-03,
            2.5768e-03, -1.5249e-03,  6.6185e-04, -1.8244e-03,  3.0956e-03,
            1.1383e-02, -2.9087e-03, -8.5297e-03, -2.6779e-03,  5.8670e-03,
           -1.1120e-03,  3.6983e-03, -3.2482e-03,  2.4929e-03, -7.6065e-03,
           -1.1246e-02, -1.4210e-03, -5.8517e-03, -8.1360e-05, -2.5330e-03,
            1.8448e-02,  5.4893e-03, -5.3291e-03,  2.7218e-03, -3.4924e-03,
            4.4937e-03,  9.0256e-03, -1.1200e-02,  1.6739e-02, -3.9139e-03,
           -3.5950e-02, -2.0695e-03, -8.2092e-03,  1.2192e-02,  8.4152e-03,
           -6.1226e-03, -2.6093e-02,  4.0321e-03, -8.6288e-03, -6.0883e-03,
            7.1001e-04,  2.5768e-03, -2.3670e-03, -2.7828e-03,  1.0727e-02,
           -6.4735e-03,  1.8139e-03, -1.0605e-03,  1.1139e-02, -6.9737e-05,
            2.7943e-04, -8.6212e-03, -1.6327e-03,  5.3902e-03,  3.9673e-03,
            8.2245e-03,  2.1515e-03,  5.1880e-03, -3.0251e-03,  5.2404e-04,
           -8.9788e-04, -1.9379e-03, -8.0338e-03, -1.4472e-04, -9.6970e-03,
           -5.0049e-03, -5.6534e-03,  2.8801e-03, -1.1162e-02,  1.5335e-02,
           -6.0749e-04,  7.2021e-03,  1.6785e-02, -1.2428e-02,  5.3482e-03,
            4.5166e-03, -4.7836e-03, -1.0118e-03, -1.0391e-02,  8.0729e-04,
            1.6851e-03, -1.0042e-03, -5.2872e-03, -5.6763e-03,  1.4946e-02,
            4.6349e-03, -1.8778e-03,  5.9509e-03,  1.0567e-02]]]],
       dtype=torch.float16)
2025-05-16 03:03:01.800802 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), Tensor([2, 94, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 94],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 2.0370e-02, -6.7711e-03, -1.9608e-03, -1.8871e-04, -3.1452e-03,
           -1.1635e-03,  2.0161e-03, -1.0811e-02, -4.7398e-04,  2.9802e-06,
            2.5253e-03,  7.2670e-03, -2.0294e-03, -3.2368e-03, -7.4005e-04,
            1.4629e-03, -1.0262e-02,  6.1722e-03,  2.4319e-03, -5.3167e-05,
           -8.2321e-03, -4.9706e-03,  6.9351e-03, -8.4076e-03,  5.3072e-04,
           -4.0550e-03,  4.3106e-03,  5.4283e-03,  3.6564e-03, -2.1820e-03,
            7.3051e-03, -2.9144e-03, -9.8495e-03, -6.3667e-03, -2.5082e-03,
            6.6566e-03, -2.8210e-03,  2.0313e-03,  1.2274e-03, -7.9422e-03,
            3.1452e-03, -3.7575e-04, -3.4046e-04, -1.7242e-03,  2.6524e-05,
            2.2297e-03,  7.6637e-03, -1.4668e-03,  4.1084e-03, -6.0005e-03,
            1.0063e-02,  5.8889e-04, -1.1909e-02,  3.4714e-03,  1.4820e-03,
           -5.2881e-04, -6.6185e-03, -1.8921e-02,  2.3937e-04, -2.9469e-03,
            1.1223e-02, -1.7563e-02, -2.1725e-03, -5.3635e-03, -5.8899e-03,
            2.5253e-03,  1.3214e-02,  5.9013e-03, -1.5068e-03, -3.4504e-03,
            1.1948e-02,  7.6485e-03,  3.1147e-03, -1.1224e-04, -3.2783e-04,
            1.2560e-03,  4.8065e-03,  1.9135e-02, -5.7602e-03, -5.4665e-03,
           -1.4791e-03,  5.7869e-03, -1.7502e-02,  2.7161e-03, -1.0691e-03,
            1.2932e-02, -1.2840e-02, -4.2191e-03,  3.5191e-04,  1.5135e-03,
            2.8801e-04,  6.3515e-03,  1.6647e-02, -4.0932e-03]]],


        [[[ 1.0902e-02,  1.0635e-02,  1.3008e-02,  2.8343e-03, -4.5662e-03,
            1.9608e-03,  5.0812e-03,  1.3580e-02,  4.0512e-03, -1.3336e-02,
            1.9150e-02, -4.4174e-03, -2.1019e-03,  1.0292e-02,  4.1847e-03,
           -1.0366e-03,  1.9684e-03, -3.6983e-03, -6.2523e-03, -4.2419e-03,
            3.4857e-04,  2.0123e-04,  3.8490e-03, -8.9493e-03,  6.7863e-03,
           -6.4735e-03,  1.2901e-02,  1.8120e-03,  1.0109e-03, -5.5809e-03,
           -1.0025e-02, -1.1421e-02, -2.2400e-02, -4.3182e-03, -1.2886e-02,
           -2.4815e-03,  2.8324e-04,  1.2291e-02, -3.3741e-03,  5.9586e-03,
            1.0437e-02, -1.1429e-02,  8.3008e-03, -7.2975e-03, -2.2087e-03,
           -4.0665e-03, -1.2627e-02,  8.8196e-03,  6.8474e-03,  1.2665e-03,
            2.5024e-03, -2.2278e-03, -1.9665e-03, -9.0714e-03, -1.0384e-02,
           -6.3438e-03,  1.6985e-03,  6.6109e-03,  1.5125e-03,  1.7481e-03,
            2.2256e-04, -4.7150e-03,  1.3390e-02, -9.1858e-03,  7.0000e-03,
           -1.1492e-03,  1.1024e-02, -6.8855e-03,  2.2995e-04,  5.1403e-04,
            6.6185e-03, -6.3210e-03,  1.6571e-02, -1.0124e-02,  2.2793e-03,
            4.6158e-03,  2.3689e-03,  3.3531e-03, -2.6302e-03, -1.0700e-03,
           -1.1398e-02,  1.2741e-02, -7.6065e-03, -1.7052e-03, -2.6569e-03,
            8.2827e-04, -8.4381e-03,  5.3453e-04,  4.5471e-03,  7.9489e-04,
           -1.7023e-03, -9.0485e-03,  1.5478e-03, -2.2125e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:02.020384 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 95],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.6617e-02, -5.5046e-03,  5.1689e-03, -9.2239e-03,  1.9493e-03,
            7.6218e-03, -1.9951e-03, -9.8648e-03, -2.8038e-03, -3.1834e-03,
           -1.2665e-03,  7.8440e-04, -1.9455e-02, -4.4212e-03,  1.4801e-02,
            4.6959e-03, -6.5842e-03, -1.9852e-02, -5.1422e-03, -1.1587e-03,
            3.9787e-03,  1.3985e-02, -1.2960e-03, -1.2337e-02, -5.7564e-03,
           -8.3313e-03,  2.1683e-02, -7.3204e-03, -1.2955e-02, -1.9646e-03,
            5.2948e-03,  1.2657e-02, -8.4381e-03, -3.5458e-03, -4.5738e-03,
            3.2501e-03,  2.1210e-03, -1.2230e-02,  5.9433e-03, -1.5732e-02,
            1.8875e-02,  8.0347e-04,  8.9645e-03,  2.0004e-02,  8.1787e-03,
            3.7575e-04, -3.0003e-03,  5.4665e-03, -4.1809e-03,  1.5266e-02,
            4.5776e-03, -1.8206e-03, -1.0284e-02,  1.0757e-02,  7.6294e-03,
            1.0201e-02,  9.4604e-03,  1.0063e-02,  5.0087e-03,  3.6411e-03,
            2.6493e-03,  1.6098e-02, -3.6788e-04, -3.8910e-03,  9.9411e-03,
           -3.5381e-03, -1.0967e-03, -1.5312e-02, -4.7302e-03,  6.4278e-03,
            3.9330e-03, -8.2550e-03, -5.2109e-03,  9.8801e-03, -1.6928e-03,
            2.0103e-03,  1.3771e-03, -2.0580e-03, -1.9104e-02, -1.8597e-03,
           -1.2543e-02,  1.2878e-02, -1.1005e-03,  5.1379e-05, -1.0185e-02,
           -5.6953e-03, -2.5291e-03, -1.9970e-03, -1.0529e-02,  6.5269e-03,
           -1.1665e-02,  5.0926e-03,  1.0979e-02,  4.7874e-03,  8.3771e-03]]],


        [[[ 9.7809e-03,  5.1231e-03,  8.2397e-03, -2.3102e-02,  8.7662e-03,
            1.1806e-03, -7.0953e-03, -2.1687e-03, -2.7790e-03, -1.3313e-02,
            8.1348e-04, -2.6989e-03, -9.5215e-03, -8.6689e-04,  7.0305e-03,
           -1.0252e-03,  1.3992e-02,  4.6196e-03,  4.0054e-03,  4.6272e-03,
           -3.2310e-03,  1.5860e-03,  3.1128e-03,  2.7256e-03,  2.6588e-03,
            8.2321e-03,  1.2466e-02,  8.3876e-04, -8.9493e-03,  6.6109e-03,
           -2.0943e-03, -6.5384e-03, -3.1090e-03,  3.1891e-03, -1.7441e-02,
           -7.7629e-04,  1.1093e-02, -2.9259e-03, -1.1855e-04,  5.3787e-03,
           -4.6158e-03, -2.0847e-03, -1.7029e-02,  6.2790e-03, -4.4289e-03,
            6.0654e-04, -4.7798e-03,  2.7523e-03,  1.4744e-03,  1.0468e-02,
            2.8057e-03, -3.6983e-03, -4.7913e-03, -1.1887e-02,  1.4328e-02,
            1.0635e-02, -9.9716e-03,  1.0300e-02, -3.5839e-03,  1.6937e-02,
            6.9857e-04, -1.9989e-03, -2.9640e-03, -3.3035e-03,  9.0942e-03,
            1.3628e-03, -1.7681e-03,  9.6560e-04,  3.7956e-03, -8.4610e-03,
            1.6947e-03,  3.0613e-03, -4.5240e-05, -6.6605e-03, -5.8784e-03,
           -8.0643e-03, -5.8632e-03, -3.5362e-03, -3.5763e-03, -2.3308e-03,
           -3.1929e-03,  7.2441e-03, -9.3307e-03,  3.8891e-03, -1.4162e-03,
            5.1918e-03, -1.2817e-02,  3.2749e-03,  2.0161e-03,  6.2141e-03,
           -9.3536e-03, -6.2294e-03,  1.1505e-02,  6.6490e-03,  2.1610e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:02.193984 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), Tensor([2, 95, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 95],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-5.1880e-04,  4.1962e-03,  2.8114e-03, -9.6464e-04, -3.9558e-03,
           -1.3962e-03, -5.8699e-04, -2.9373e-03, -7.7362e-03,  6.2644e-05,
           -9.7227e-04, -6.3629e-03, -4.5052e-03,  2.4048e-02,  1.2026e-03,
            1.6708e-03,  1.6212e-03, -5.9748e-04,  4.3068e-03,  2.1744e-03,
           -3.0575e-03, -1.1129e-03, -3.0804e-03,  2.0981e-03,  3.2940e-03,
            4.1199e-03, -9.4528e-03,  1.2217e-03,  1.0864e-02,  2.4090e-03,
            5.8060e-03, -3.7265e-04, -6.7978e-03, -5.8632e-03, -9.0504e-04,
            2.1591e-03,  1.0748e-03,  2.5406e-03, -1.5116e-03,  4.4250e-03,
           -7.3204e-03, -5.2872e-03, -1.0040e-02,  3.3550e-03,  3.0935e-05,
           -3.8490e-03, -2.4872e-03, -2.0935e-02,  7.6561e-03,  3.8414e-03,
           -1.9932e-03,  4.1103e-04, -5.5199e-03, -3.0613e-03,  1.3481e-02,
           -9.4986e-03, -7.4120e-03,  1.2756e-02, -8.5526e-03, -6.6719e-03,
           -2.2812e-03, -1.1988e-03,  1.3191e-02, -9.7580e-03,  8.6288e-03,
            3.0875e-04, -8.0643e-03,  1.3981e-03,  1.0414e-02,  4.7760e-03,
           -1.5221e-02,  9.2545e-03,  9.8419e-04, -2.6226e-06,  7.0453e-05,
            7.5817e-04, -2.7885e-03,  9.0485e-03, -8.4839e-03,  5.2986e-03,
            9.8724e-03,  9.5987e-04, -6.9504e-03,  2.6989e-03, -2.2907e-03,
            7.0801e-03, -5.9204e-03,  1.9989e-02, -1.3046e-03, -8.4381e-03,
            2.6951e-03,  6.3133e-03, -7.8201e-03,  1.1911e-03, -2.7428e-03]]],


        [[[-1.8524e-02,  4.4479e-03,  7.0076e-03,  9.1400e-03, -8.1968e-04,
           -2.3861e-03,  1.5426e-04, -5.3596e-03,  1.2627e-02, -2.6112e-03,
            1.4748e-02,  7.1182e-03,  9.4528e-03,  1.2405e-02,  7.1259e-03,
            1.1955e-02, -6.1455e-03,  2.7580e-03, -9.2697e-03,  2.7962e-03,
            4.4708e-03,  5.0697e-03,  3.8185e-03, -3.5534e-03,  2.3823e-03,
           -3.8719e-03, -1.0635e-02, -4.7836e-03,  6.0730e-03,  1.3466e-03,
           -7.1182e-03, -1.1206e-03, -3.2520e-04,  5.7316e-04, -3.2616e-03,
           -7.7772e-04, -2.2182e-03, -5.2109e-03, -4.8904e-03, -8.9598e-04,
            5.0259e-04,  2.1530e-02,  1.2024e-02, -2.4643e-03, -1.0727e-02,
           -4.9553e-03, -4.4327e-03, -1.3733e-03, -1.0328e-03,  8.5526e-03,
           -3.8109e-03, -1.1454e-03,  2.1315e-04, -9.2888e-04,  2.0256e-03,
           -5.1308e-03,  5.8746e-03, -1.4315e-03,  3.7403e-03,  1.2680e-02,
            4.3602e-03,  5.4245e-03, -7.8735e-03, -9.4147e-03, -3.3894e-03,
           -5.3635e-03,  3.2597e-03,  2.5578e-03,  3.8223e-03, -7.2098e-03,
            1.2827e-03,  3.9940e-03, -5.9319e-03,  9.9030e-03, -1.7624e-03,
           -4.2496e-03, -1.0738e-03, -2.5620e-02,  6.4316e-03, -2.8610e-03,
            1.2102e-03, -6.2981e-03,  4.2105e-04,  3.3550e-03, -7.7553e-03,
            7.3195e-04,  7.6294e-03, -5.0964e-03, -1.1063e-02, -2.5330e-03,
            3.1796e-03,  6.9771e-03, -5.9395e-03, -4.0245e-03, -8.4305e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:02.359534 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 96],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.5839e-02,  7.4348e-03,  1.8005e-03, -6.2141e-03,  4.9543e-04,
           -2.3117e-03,  5.6496e-03, -7.3314e-06, -1.3428e-02,  2.1019e-03,
            4.2686e-03, -1.6006e-02,  6.5842e-03, -5.7716e-03,  1.5991e-02,
           -4.3945e-03,  3.7613e-03, -1.9363e-02,  3.4351e-03, -6.7139e-03,
            1.8402e-02, -1.5583e-03,  3.9787e-03,  2.4834e-03,  1.7042e-03,
           -1.1930e-03, -5.7068e-03, -1.2253e-02, -3.2845e-03, -6.4468e-04,
            7.4883e-03, -2.1935e-03, -4.7150e-03,  1.9302e-03,  1.7357e-03,
           -2.2316e-04, -2.4128e-03,  3.3493e-03,  4.2267e-03, -2.8400e-03,
            3.8280e-03, -7.4806e-03,  1.0262e-02,  4.0970e-03,  6.0463e-03,
            3.6144e-03,  3.6583e-03,  1.2215e-02, -2.4948e-03,  4.6768e-03,
            2.0351e-03, -2.1992e-03, -3.0384e-03, -1.0620e-02,  4.5128e-03,
            2.6894e-03, -2.5063e-03,  2.0962e-03,  7.5455e-03,  1.2999e-03,
            9.7351e-03, -1.2024e-02,  2.0428e-03,  6.8893e-03, -4.7874e-04,
            6.7329e-03, -6.1512e-05,  4.9543e-04, -1.4336e-02, -9.0408e-03,
           -1.3260e-02, -2.9659e-03,  2.3880e-03,  5.2872e-03,  8.9264e-03,
            1.0941e-02,  3.4866e-03, -6.0577e-03, -1.2732e-03, -1.1997e-03,
            4.2877e-03, -1.5686e-02,  1.0811e-02, -6.3553e-03,  8.3313e-03,
           -4.5729e-04,  1.3214e-02, -2.0050e-02, -8.6136e-03, -5.6038e-03,
           -4.8370e-03,  1.3752e-03,  9.6664e-03,  7.6904e-03, -1.1921e-03,
            1.2121e-03]]],


        [[[ 4.2224e-04,  7.0524e-04,  5.6992e-03, -2.3670e-03,  2.3834e-02,
            2.1225e-02,  2.5482e-03,  3.7689e-03,  1.0674e-02,  7.5111e-03,
            7.1335e-03,  5.6934e-04,  7.9727e-03,  1.0254e-02, -7.8659e-03,
           -1.2875e-03, -4.2992e-03, -1.2032e-02,  8.1635e-03,  7.2556e-03,
            1.0788e-02,  1.3710e-02, -6.9733e-03,  2.5345e-02, -1.3647e-03,
            4.4098e-03, -3.1853e-03,  2.3163e-02,  4.2343e-03, -8.1100e-03,
            4.1351e-03, -6.4430e-03,  6.0463e-03, -1.6146e-03,  5.3368e-03,
           -2.0924e-03,  8.6975e-04, -1.3458e-02,  5.5161e-03, -1.3763e-02,
           -8.3847e-03, -2.8324e-03, -6.5346e-03, -3.1319e-03,  7.6256e-03,
           -2.3556e-03, -2.2089e-04, -1.5900e-02,  1.0094e-02,  5.7182e-03,
           -1.2398e-02, -6.9580e-03,  4.0054e-03, -6.1646e-03, -1.9348e-04,
           -3.5477e-03,  2.0714e-03,  3.6964e-03, -7.4959e-04, -3.7708e-03,
            4.4975e-03, -2.9716e-03,  1.9112e-03,  1.8631e-02,  2.1839e-03,
            3.3627e-03, -1.2146e-02, -1.4183e-02, -4.6349e-03,  9.0561e-03,
           -1.3641e-02, -9.1124e-04, -1.7805e-03,  1.4847e-02, -1.7920e-03,
           -5.2147e-03,  1.8859e-04, -1.8339e-03, -2.3861e-03, -1.8539e-02,
           -1.1612e-02, -7.2746e-03, -9.4757e-03, -1.0849e-02,  4.2763e-03,
           -7.6714e-03,  1.7605e-03,  3.9711e-03,  6.0158e-03, -1.0735e-02,
            8.1420e-05, -5.8479e-03, -1.6922e-02, -9.4271e-04, -8.8730e-03,
            2.9240e-03]]]], dtype=torch.float16)
2025-05-16 03:03:02.582014 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), Tensor([2, 96, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 96],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 5.2071e-03,  1.5251e-02,  4.5929e-03, -1.5450e-03, -6.9885e-03,
            1.3666e-03,  8.7280e-03,  1.8406e-03,  4.4155e-04,  8.0948e-03,
            1.8206e-03, -4.3488e-03, -8.7128e-03,  3.6125e-03,  6.5193e-03,
            7.7438e-03,  1.1854e-03,  7.9498e-03,  3.3212e-04, -2.9049e-03,
           -7.5912e-03,  5.0926e-03,  5.0468e-03,  1.0086e-02, -1.4353e-03,
           -7.6103e-03, -1.6727e-03,  5.2681e-03,  2.2566e-04,  1.1765e-02,
           -3.0346e-03, -1.2611e-02, -8.4076e-03, -2.3087e-02, -2.6665e-03,
           -4.6806e-03, -6.9618e-04,  1.7958e-03, -6.0997e-03,  9.4604e-03,
           -4.8752e-03, -8.5983e-03, -8.3447e-04,  1.9245e-03,  1.1740e-03,
           -4.2381e-03,  6.9504e-03,  4.8971e-04, -4.3640e-03, -1.0956e-02,
           -2.0752e-02,  2.4429e-02, -3.2568e-04, -8.7662e-03, -4.2839e-03,
            7.8354e-03, -2.5253e-03, -6.5231e-03, -3.7327e-03, -7.7744e-03,
            1.7929e-03, -5.7640e-03,  8.6823e-03, -5.1422e-03,  1.6663e-02,
            2.0945e-04,  8.0109e-03,  2.1591e-02, -3.5152e-03, -9.8495e-03,
           -5.0545e-03,  1.2169e-02,  3.3512e-03,  1.3985e-02,  3.1548e-03,
            1.2636e-03, -9.8801e-03, -7.3280e-03, -3.1338e-03, -6.0158e-03,
           -8.7433e-03, -4.7722e-03, -4.2229e-03, -6.4468e-03,  3.5515e-03,
           -9.6359e-03, -5.9776e-03,  3.1776e-03,  7.4959e-04, -1.5135e-03,
            6.9351e-03,  1.0857e-02, -6.3362e-03,  2.6970e-03,  4.8943e-03,
            6.0463e-03]]],


        [[[ 4.9543e-04,  7.5245e-04, -8.9493e-03, -7.0496e-03,  3.2864e-03,
            6.0022e-05,  3.3741e-03, -6.2180e-04,  2.9793e-03,  1.8005e-03,
           -4.8943e-03,  3.8872e-03, -2.0599e-02, -3.8795e-03, -1.4572e-03,
           -3.8395e-03,  1.4114e-02, -7.5188e-03, -1.9302e-03, -1.4143e-03,
           -2.3193e-03, -5.0735e-03, -4.9400e-03,  8.3542e-03,  9.9869e-03,
            2.8801e-03, -7.6065e-03, -2.1629e-03,  6.1455e-03, -4.4060e-03,
           -6.1989e-04,  6.6681e-03, -5.3978e-03, -6.2704e-04, -4.8752e-03,
            9.6588e-03,  3.4847e-03,  2.7866e-03,  2.6665e-03,  7.2594e-03,
            9.3384e-03, -1.4806e-04,  2.8610e-04, -5.3940e-03,  4.9858e-03,
           -7.8278e-03,  4.1351e-03,  2.2449e-03, -5.3558e-03, -1.6418e-02,
           -4.6883e-03,  6.0539e-03, -1.5442e-02, -4.9095e-03,  3.3092e-03,
            3.2520e-04, -3.6883e-04, -2.3441e-03, -4.9057e-03,  2.4395e-03,
            5.9357e-03, -1.9956e-04, -2.9564e-03, -1.5480e-02,  6.4926e-03,
           -4.7684e-03, -2.5368e-03,  1.0513e-02,  3.9673e-03, -1.1330e-02,
           -7.3967e-03, -9.2316e-03,  5.1880e-03,  1.0462e-03,  6.5088e-04,
            7.8735e-03,  8.1329e-03, -2.7924e-03,  1.7118e-04, -7.7209e-03,
           -1.1568e-03, -2.0134e-04, -2.2011e-03,  1.1925e-02,  3.3112e-03,
            2.3556e-03,  1.2665e-02, -2.2850e-03,  5.9738e-03, -1.3771e-03,
            7.1106e-03,  9.5139e-03, -9.6798e-04, -1.3077e-04,  5.9700e-03,
            8.1635e-03]]]], dtype=torch.float16)
2025-05-16 03:03:02.748121 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 97],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-7.6370e-03, -3.2978e-03,  4.8180e-03,  7.0305e-03, -1.0696e-02,
            9.8114e-03, -1.7639e-02, -1.5717e-03, -1.8204e-02,  1.0384e-02,
           -1.3306e-02,  6.3210e-03,  5.9853e-03,  4.0817e-03, -5.1231e-03,
            1.4969e-02,  7.1192e-04, -6.6643e-03,  3.9597e-03,  3.0384e-03,
           -3.7327e-03,  1.9779e-03,  1.7939e-03,  5.0049e-03, -2.3098e-03,
            2.4433e-03,  6.9733e-03, -6.9542e-03, -9.4833e-03,  3.0613e-03,
           -4.6616e-03,  6.3019e-03, -2.8877e-03, -6.3896e-03,  7.7248e-03,
           -1.2722e-03, -2.8515e-04, -6.5956e-03, -5.0964e-03,  5.4893e-03,
            1.0231e-02, -7.1716e-03, -1.2108e-02,  4.3526e-03,  1.6006e-02,
            6.9504e-03,  1.0719e-03,  8.0109e-03,  5.7182e-03,  7.7477e-03,
           -2.3460e-03,  2.4776e-03, -7.5996e-05, -6.7234e-04,  1.9531e-03,
            1.0214e-03,  1.2197e-03, -1.3504e-02, -1.7004e-03,  3.4180e-03,
           -8.2016e-04,  1.4687e-03, -1.5965e-03,  1.2767e-04,  8.4305e-03,
            1.3409e-03,  3.3016e-03, -7.1869e-03,  3.0766e-03, -2.9869e-03,
           -2.2717e-03,  5.2948e-03,  8.4543e-04, -1.2207e-02,  3.2749e-03,
            5.8022e-03, -7.1793e-03,  5.7144e-03,  2.3556e-03, -4.1902e-05,
            7.5388e-04, -9.3842e-03, -2.3880e-03, -3.0308e-03,  5.7220e-03,
           -1.1398e-02, -1.7151e-02,  2.0256e-03,  1.1072e-03,  2.0278e-04,
            1.0231e-02,  1.1566e-02, -3.8338e-03,  4.1733e-03, -3.0851e-04,
           -3.3760e-03, -2.3327e-03]]],


        [[[ 6.9771e-03,  4.6387e-03, -7.9041e-03, -1.0460e-02, -1.1139e-02,
            6.4354e-03, -4.0436e-03,  6.5918e-03,  8.5297e-03,  2.0466e-03,
            6.4125e-03, -8.0948e-03,  1.8568e-03, -1.4542e-02,  5.9242e-03,
            1.9722e-03,  8.0872e-04,  1.8158e-03, -1.8036e-02,  1.8463e-03,
           -9.2392e-03, -1.0246e-02, -1.1818e-02, -9.9411e-03,  1.3523e-03,
            1.2436e-02, -1.0986e-02, -5.0926e-03, -9.8038e-03, -4.6082e-03,
           -8.1587e-04, -9.9792e-03, -4.1199e-03, -1.1120e-03,  3.2730e-03,
            3.7231e-03, -4.2343e-03,  2.5711e-03, -2.2488e-03,  6.4888e-03,
           -8.5258e-04,  2.8076e-03, -1.2159e-03, -6.3467e-04,  2.6417e-03,
           -5.1041e-03,  4.4990e-04, -5.4398e-03,  1.8005e-03, -2.8019e-03,
           -1.4153e-02, -8.7404e-04,  5.8937e-03,  1.2848e-02, -8.5211e-04,
           -3.5858e-03,  1.2756e-02,  1.2970e-02,  2.7676e-03,  2.2268e-04,
           -2.6512e-03, -4.0779e-03, -8.9035e-03, -5.3253e-03,  1.5221e-03,
           -8.1558e-03, -2.7142e-03, -1.4973e-03,  8.4448e-04, -3.2425e-04,
           -1.0994e-02,  9.9487e-03,  4.5624e-03, -1.0933e-02,  5.4398e-03,
            5.0430e-03,  7.9498e-03,  9.7275e-03,  2.6474e-03,  2.6283e-03,
            2.9545e-03, -5.5466e-03,  4.9973e-04, -5.5580e-03,  6.3515e-03,
            5.7869e-03,  8.7128e-03,  1.1719e-02, -5.1022e-05,  3.0251e-03,
            6.9618e-03, -6.8893e-03,  8.6975e-04,  5.3978e-03,  1.5099e-02,
            1.7838e-02,  1.0939e-03]]]], dtype=torch.float16)
2025-05-16 03:03:02.901523 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), Tensor([2, 97, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 97],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 1.9026e-03, -4.2152e-03, -1.9014e-04, -1.8778e-03,  4.7684e-03,
           -7.1220e-03, -9.5463e-04,  7.4005e-03,  8.9493e-03, -1.9503e-03,
            7.2250e-03, -2.3289e-03,  1.5686e-02, -2.0504e-03,  4.4518e-03,
            6.4125e-03, -1.4029e-03,  5.6305e-03, -4.3221e-03,  4.0016e-03,
           -6.2609e-04,  6.1073e-03,  9.2983e-05, -2.0337e-04,  5.4207e-03,
            1.1795e-02, -1.8778e-03, -9.6817e-03,  1.2703e-03,  1.8864e-03,
           -1.7075e-02, -5.6534e-03, -6.7043e-04, -1.4925e-04,  6.4087e-03,
           -1.8187e-03, -7.1640e-03,  1.1406e-03, -4.7646e-03, -4.0092e-03,
           -9.5248e-05, -6.2287e-05,  9.1887e-04,  1.0231e-02,  1.7347e-03,
            7.9956e-03, -1.2947e-02,  1.0624e-03, -8.7967e-03,  6.0349e-03,
            1.2016e-02,  2.8553e-03,  1.2260e-02,  6.7749e-03,  9.0485e-03,
            1.6794e-03, -1.2741e-02, -6.0501e-03, -5.1994e-03,  4.5319e-03,
           -1.9592e-02, -1.4938e-02,  6.0883e-03, -5.2872e-03,  2.7828e-03,
           -1.0567e-02,  1.1082e-03, -1.1330e-02,  5.7983e-03,  9.7504e-03,
            4.5967e-03, -4.3335e-03,  7.9193e-03,  1.1192e-02, -7.9036e-05,
           -5.3482e-03,  1.1196e-03,  8.1177e-03, -1.3443e-02, -5.6190e-03,
            1.0239e-02,  1.1101e-02, -3.5591e-03, -5.9929e-03, -8.8806e-03,
            2.3985e-04,  6.1760e-03, -1.1177e-02, -1.6769e-02,  6.8359e-03,
            2.8305e-03, -3.9177e-03, -7.8735e-03, -9.0332e-03,  3.7766e-03,
            3.8738e-03,  2.4910e-03]]],


        [[[ 3.3588e-03, -4.7531e-03, -3.8681e-03,  1.8959e-03, -1.0376e-03,
            5.0545e-03, -5.6534e-03, -8.4000e-03, -1.5190e-02, -3.0651e-03,
            1.2978e-02,  7.7295e-04,  1.0269e-02, -1.7548e-03, -8.1482e-03,
            7.2136e-03, -6.3133e-03,  5.4436e-03, -2.2488e-03, -1.9932e-03,
            1.1192e-02, -1.4481e-02,  1.2077e-02, -1.9703e-03,  3.9825e-03,
            2.6035e-03, -6.3400e-03,  1.1681e-02,  5.5389e-03, -3.9787e-03,
            1.5020e-03,  5.3520e-03, -2.3270e-03,  7.3776e-03,  1.7548e-02,
            4.2419e-03, -6.8893e-03,  1.2836e-03, -1.2827e-03,  3.4714e-04,
           -2.4033e-03, -9.9792e-03,  8.7128e-03,  2.2087e-03, -6.7406e-03,
            1.1848e-02,  4.9858e-03, -3.5324e-03,  1.7151e-02,  1.9207e-03,
            2.8305e-03,  8.8692e-04, -4.3755e-03, -4.9686e-04,  6.9952e-04,
            8.3694e-03, -1.9577e-02,  1.2999e-03,  1.0735e-02, -4.9400e-03,
           -2.1667e-03,  5.2185e-03, -1.6441e-03, -3.7537e-03, -2.8172e-03,
           -4.0855e-03, -4.7569e-03,  1.2970e-02,  3.2020e-04, -2.0161e-03,
            2.1400e-03, -1.8036e-04,  4.4632e-03, -5.3291e-03, -2.7523e-03,
           -5.6190e-03, -4.5891e-03,  3.5477e-03,  2.1763e-03, -4.5586e-03,
            5.6219e-04, -1.2329e-02,  3.2768e-03,  8.5526e-03,  1.9205e-04,
            5.8126e-04, -3.0956e-03, -9.7733e-03,  4.2534e-03, -1.3609e-03,
            5.8403e-03, -9.1910e-05, -1.2276e-02, -1.2711e-02, -6.2866e-03,
           -5.1918e-03,  1.6718e-03]]]], dtype=torch.float16)
2025-05-16 03:03:03.055920 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 98],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 7.4997e-03,  7.2899e-03,  4.1127e-04, -3.0403e-03,  1.5259e-02,
           -9.5596e-03,  1.3008e-02, -5.2643e-03,  4.3144e-03, -4.7684e-03,
           -3.2578e-03, -7.3395e-03,  4.6349e-03, -4.0321e-03,  1.7080e-03,
           -1.2040e-05,  7.3166e-03, -1.3971e-03, -1.4839e-02,  6.3362e-03,
           -1.6298e-03,  2.2011e-03, -5.5084e-03, -7.6942e-03,  6.0654e-03,
            3.0899e-03, -6.7177e-03, -2.5387e-03,  5.2757e-03, -1.0254e-02,
           -3.3913e-03, -9.8324e-04, -9.2392e-03, -2.6722e-03,  6.1760e-03,
            1.3189e-03, -4.9019e-03,  4.3373e-03,  3.2139e-03, -2.1172e-03,
           -5.2977e-04, -3.4199e-03,  4.2009e-04, -9.6846e-04, -1.1131e-02,
           -4.1046e-03, -2.6588e-03,  5.9366e-04,  2.5120e-03, -2.2106e-03,
           -5.4741e-03,  1.0138e-03,  7.7744e-03,  2.9488e-03,  5.5742e-04,
            7.4577e-03, -8.8806e-03, -4.4670e-03,  4.1580e-03, -3.9062e-03,
           -6.9237e-04, -2.1629e-03, -2.5463e-03,  2.8610e-02, -7.1144e-04,
            3.2158e-03,  1.0666e-02,  6.1493e-03,  5.9738e-03,  1.7262e-03,
           -4.3449e-03, -2.1954e-03, -2.1992e-03, -2.1610e-03,  3.1624e-03,
           -6.6872e-03,  2.1496e-03,  2.0065e-03,  1.9817e-03,  3.3035e-03,
           -4.4022e-03, -1.2970e-03,  4.2114e-03,  3.4943e-03, -1.5507e-03,
           -3.5343e-03, -8.5640e-04, -7.5226e-03, -8.4448e-04, -6.6519e-04,
           -6.3324e-03,  2.1954e-03, -5.7459e-04,  1.1307e-02,  1.3771e-03,
           -2.2049e-03, -4.7417e-03, -1.2836e-03]]],


        [[[-1.3065e-03,  1.1101e-02,  3.3226e-03, -3.4504e-03,  1.5129e-02,
           -8.9693e-04, -3.9101e-03,  5.9891e-04, -3.2368e-03, -3.7670e-03,
           -3.0174e-03,  1.0162e-02, -7.9422e-03, -1.4236e-02,  1.2245e-03,
            1.6708e-03, -6.5565e-04, -3.2349e-03,  2.5101e-03, -2.4009e-04,
            3.6068e-03,  7.0000e-03, -3.2139e-03, -5.4131e-03,  7.6408e-03,
            2.1229e-03,  3.1590e-04, -8.5144e-03, -2.7275e-03,  2.4586e-03,
           -5.6953e-03, -2.5058e-04,  1.4023e-02,  8.5526e-03,  1.2695e-02,
           -2.1019e-03, -4.5319e-03,  3.4199e-03,  5.2691e-04, -1.0414e-02,
           -5.2948e-03, -3.0351e-04,  1.0010e-02, -7.7324e-03,  6.4583e-03,
           -5.2414e-03, -2.0466e-03,  7.6294e-03, -6.2637e-03,  2.9993e-04,
            3.7785e-03, -6.2637e-03,  8.1253e-03, -2.6379e-03, -4.9706e-03,
            2.5654e-04,  3.8052e-03,  3.0632e-03, -2.7637e-03, -2.5406e-03,
            8.6288e-03,  2.1496e-03,  1.5839e-02, -2.0647e-04, -6.8588e-03,
           -7.1678e-03,  9.1934e-03, -4.9706e-03, -6.8436e-03, -2.9049e-03,
           -3.5667e-04, -7.7868e-04,  4.5280e-03,  6.1874e-03, -4.2415e-04,
            3.9978e-03, -5.1422e-03, -9.6970e-03,  2.1493e-04, -1.0735e-02,
            3.4642e-04,  5.1727e-03, -1.0887e-02,  4.5967e-03, -1.7142e-04,
            5.8479e-03, -1.3115e-02, -9.1553e-03,  1.4153e-02, -1.0128e-03,
            7.0419e-03, -1.2917e-02,  5.7182e-03, -3.2635e-03, -3.3417e-03,
            5.4321e-03, -1.5640e-03, -4.2000e-03]]]], dtype=torch.float16)
2025-05-16 03:03:03.277042 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), Tensor([2, 98, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 98],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-4.9210e-03, -1.2703e-02, -1.3409e-03,  1.2531e-03,  2.5349e-03,
           -1.1520e-02, -1.8606e-03,  1.3390e-02, -1.3618e-02, -4.2114e-03,
            2.8267e-03,  5.2567e-03, -7.3090e-03, -7.3013e-03, -5.5466e-03,
           -3.5324e-03,  4.2605e-04, -6.3467e-04,  1.0635e-02,  4.0169e-03,
           -1.6222e-03,  1.5854e-02,  1.5450e-03, -1.8530e-03, -9.1476e-03,
           -2.8267e-03, -3.9043e-03,  4.2458e-03,  4.1504e-03,  3.9062e-03,
           -8.6136e-03, -4.3259e-03,  1.4175e-02, -1.7347e-03,  2.9945e-03,
           -1.0231e-02, -2.7943e-03,  1.0384e-02, -6.5994e-03, -5.3329e-03,
            9.7580e-03,  9.7504e-03,  7.8354e-03, -3.2997e-04, -1.7519e-03,
           -4.5280e-03,  1.1314e-02,  1.8129e-03, -3.7556e-03, -4.1580e-03,
           -1.5087e-03,  4.9133e-03,  6.3438e-03,  1.7989e-04, -3.2949e-04,
           -1.8631e-02, -1.8578e-03,  1.8177e-03,  4.2419e-03,  2.5177e-03,
            1.3056e-03, -1.6177e-04,  3.3188e-03, -9.9182e-04, -6.2408e-03,
           -4.8103e-03, -1.5984e-03,  1.4820e-03,  8.0261e-03,  9.4593e-05,
            1.6739e-02, -2.2221e-03,  6.6261e-03,  5.7983e-03, -2.2984e-03,
           -1.6155e-03, -2.0203e-02, -9.1171e-03,  4.1084e-03,  4.4327e-03,
            1.0147e-02,  2.1572e-03,  2.8229e-03,  6.6452e-03, -3.0494e-04,
            5.0583e-03, -7.0992e-03,  6.7711e-04, -1.7334e-02,  7.5912e-03,
           -8.7309e-04,  2.5272e-03,  3.0308e-03,  3.2616e-03, -7.7820e-03,
           -4.2000e-03,  4.9210e-03, -1.6785e-03]]],


        [[[ 4.0512e-03,  5.6791e-04, -3.3417e-03, -8.2932e-03,  6.7558e-03,
            2.3613e-03, -4.8103e-03, -1.5879e-04, -1.4725e-03,  5.5695e-03,
            1.6260e-04,  3.0479e-03, -6.3934e-03, -2.7046e-03,  2.2087e-03,
            3.1166e-03, -2.3708e-03, -3.8414e-03,  1.1658e-02, -5.9204e-03,
            8.4076e-03, -5.1270e-03,  1.1963e-02,  3.7918e-03,  1.0386e-03,
           -1.9623e-02,  1.8112e-02, -8.0414e-03, -4.4594e-03,  4.1938e-04,
            1.4557e-02, -4.3144e-03, -1.1162e-02,  6.8283e-03, -2.9240e-03,
           -7.1754e-03,  8.7452e-04,  8.2092e-03,  9.1553e-03,  1.1139e-03,
           -7.2384e-04, -3.0365e-03,  2.9049e-03, -1.1513e-02, -4.6349e-03,
           -7.4883e-03, -1.2302e-03,  8.5354e-04,  3.9520e-03,  4.6768e-03,
           -1.5335e-03, -1.4198e-02, -5.6381e-03, -5.9938e-04, -1.0017e-02,
            1.8835e-03,  7.9651e-03,  1.3418e-03, -1.1730e-03,  3.2043e-03,
           -1.0939e-03,  5.4436e-03, -9.4528e-03,  9.9659e-04, -3.5172e-03,
           -3.9940e-03,  1.0292e-02, -3.8605e-03,  2.1992e-03, -5.2719e-03,
           -1.3180e-03,  1.3405e-02, -5.6000e-03,  2.4166e-03,  9.3536e-03,
            4.1161e-03, -1.2913e-03, -1.0099e-03, -4.7112e-03, -9.0179e-03,
            1.0300e-02,  2.4948e-03,  9.5444e-03, -4.7607e-03, -7.7744e-03,
            9.3231e-03,  8.7404e-04, -3.0441e-03, -1.5497e-03,  1.0666e-02,
           -2.9564e-03, -1.3762e-03, -1.1549e-03,  2.0027e-03, -2.8305e-03,
           -2.7390e-03, -4.8332e-03,  2.8496e-03]]]], dtype=torch.float16)
2025-05-16 03:03:03.489477 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 99],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-7.8430e-03, -8.3008e-03,  1.3981e-03, -3.4046e-03,  4.0650e-04,
           -1.2417e-03, -3.1567e-03,  9.0027e-03, -5.3673e-03, -1.1892e-03,
            1.5793e-03, -1.0071e-03, -1.1742e-02,  6.9857e-04, -1.3847e-02,
            8.1787e-03, -7.9193e-03, -9.1839e-04, -6.1750e-04, -2.0561e-03,
           -9.6846e-04, -2.0370e-02,  8.4763e-03, -1.1101e-03, -1.4162e-03,
           -3.2635e-03,  1.3304e-03, -2.4033e-03,  1.5144e-03,  3.9005e-03,
           -1.5724e-04, -6.0577e-03, -5.9319e-03,  7.9422e-03, -1.2751e-03,
            1.6953e-02,  1.9577e-02,  9.8572e-03,  9.3460e-03, -5.3253e-03,
           -1.6495e-02, -5.2147e-03, -6.4240e-03,  1.6193e-03,  8.5144e-03,
            5.5771e-03, -3.8452e-03,  5.8784e-03,  1.2581e-02,  6.5613e-03,
            3.8567e-03, -3.5343e-03,  7.3910e-06,  6.6605e-03,  1.0605e-03,
           -6.3095e-03,  6.5422e-03, -3.5000e-03, -1.3704e-03,  1.5068e-02,
           -4.4441e-03, -7.2517e-03, -7.9193e-03,  1.2634e-02,  7.1373e-03,
           -9.3613e-03, -1.2600e-04, -2.1534e-03, -2.3222e-04,  1.9424e-02,
           -2.9049e-03, -3.0594e-03,  6.2943e-03,  3.1414e-03, -2.4204e-03,
           -3.3398e-03,  1.3609e-03,  3.4237e-03, -5.5771e-03,  5.3596e-03,
            5.7945e-03,  5.4436e-03,  1.2703e-03,  5.7335e-03,  6.7902e-03,
           -6.7024e-03, -2.1992e-03, -1.7349e-02,  4.3869e-03, -3.5591e-03,
            1.5390e-04,  6.9122e-03, -1.3676e-03,  8.8882e-03, -1.0590e-02,
           -2.2068e-03,  8.1711e-03, -1.4549e-02, -1.5457e-02]]],


        [[[ 6.8817e-03, -1.6327e-03,  1.1948e-02, -2.5291e-03,  1.1501e-03,
           -3.8300e-03,  7.2784e-03,  2.6631e-04,  5.5008e-03, -4.1618e-03,
           -8.3313e-03, -6.5660e-04, -7.4730e-03, -1.0529e-02,  7.2937e-03,
            4.5586e-03,  1.2722e-03, -6.3477e-03,  1.0635e-02,  6.7062e-03,
            2.5158e-03, -6.0310e-03,  2.7676e-03,  3.7003e-03,  4.1676e-04,
           -1.1261e-02, -7.6599e-03,  1.1387e-03,  7.7477e-03, -9.9087e-04,
           -3.2768e-03,  1.8730e-03,  4.7951e-03, -4.4708e-03, -5.8289e-03,
           -1.1688e-02, -4.3488e-03,  2.1229e-03,  7.0953e-04, -7.7963e-04,
           -2.5902e-03, -1.9255e-03,  6.8932e-03,  5.3825e-03,  2.6722e-03,
            1.6947e-03,  3.1796e-03, -4.0932e-03,  2.2278e-03, -5.3711e-03,
            7.1793e-03,  3.1071e-03,  1.9409e-02, -2.7027e-03, -1.6956e-03,
            6.2218e-03, -8.2874e-04, -1.6861e-02, -1.3533e-03,  5.1193e-03,
           -5.3825e-03, -1.1759e-03,  6.7558e-03, -1.9550e-03, -8.8959e-03,
           -3.7174e-03,  9.4938e-04,  1.7185e-03, -2.4223e-03,  6.8626e-03,
            2.8172e-03, -4.3273e-04,  1.8173e-02, -1.0309e-03,  1.3857e-03,
           -1.0605e-02,  5.0583e-03, -9.6283e-03, -4.2191e-03,  7.0648e-03,
            4.2839e-03, -2.3212e-03, -4.5090e-03, -6.1760e-03,  4.2610e-03,
            8.0261e-03, -2.6817e-03, -4.2763e-03, -7.2746e-03,  1.9245e-03,
            2.7771e-03,  3.9062e-03, -5.8250e-03,  3.5834e-04, -1.6022e-02,
           -1.0452e-03,  6.4316e-03,  1.1978e-03,  5.2452e-04]]]],
       dtype=torch.float16)
2025-05-16 03:03:03.723256 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), Tensor([2, 99, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 99],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 5.4626e-03, -8.0795e-03, -7.6180e-03,  2.3651e-03, -1.4105e-03,
           -1.0353e-02,  7.7209e-03, -1.1559e-03,  1.4648e-02, -1.2817e-03,
            2.9984e-03,  9.8419e-04, -2.3956e-03,  2.4986e-03,  2.1458e-05,
            5.0392e-03, -1.0567e-02,  5.2595e-04, -4.9820e-03, -8.7433e-03,
           -1.4715e-03, -3.0460e-03,  6.7482e-03,  2.6703e-03, -5.8365e-03,
            1.4486e-03, -3.1433e-03, -9.1019e-03, -9.6741e-03, -9.9030e-03,
           -2.0027e-03,  3.3340e-03,  6.6986e-03,  3.2867e-02, -3.8128e-03,
           -7.4539e-03, -6.6261e-03, -2.5196e-03, -1.2138e-02, -5.8517e-03,
            6.3553e-03,  1.1505e-02,  4.8790e-03,  1.7128e-03,  1.4595e-02,
           -9.5291e-03, -7.3814e-03,  5.6267e-03, -2.9397e-04, -8.5220e-03,
           -4.0207e-03,  1.8112e-02,  2.7332e-03, -2.2202e-03, -7.2670e-03,
            6.6986e-03, -6.2447e-03, -8.5258e-04, -1.1314e-02, -4.8103e-03,
           -2.2068e-03, -8.7814e-03, -6.0387e-03,  4.5471e-03, -5.4932e-03,
            1.4505e-03,  3.5877e-03,  1.7090e-03,  2.6455e-03,  3.0136e-04,
           -5.8670e-03,  2.4052e-03,  2.3155e-03, -2.2640e-03, -2.9106e-03,
           -1.0590e-02,  2.7256e-03, -4.6768e-03,  5.9357e-03,  7.8125e-03,
            7.1945e-03, -6.3972e-03,  1.2329e-02,  5.1460e-03,  1.3709e-04,
            9.6359e-03, -1.1759e-03, -2.3067e-04, -8.4000e-03,  6.2714e-03,
            1.3227e-03, -5.7144e-03, -1.5907e-03,  6.5079e-03,  6.6376e-04,
            5.4855e-03,  4.5128e-03,  6.2218e-03,  4.8637e-03]]],


        [[[-1.0262e-02, -1.0971e-02,  1.3268e-04, -2.4662e-03,  1.3561e-03,
           -7.2975e-03, -1.8370e-04,  1.5068e-02,  1.8921e-03, -5.0850e-03,
            3.8981e-04,  2.7523e-03,  1.4124e-03, -3.9673e-03,  2.3022e-03,
            9.4299e-03, -2.1381e-03, -7.9422e-03, -4.2076e-03, -5.8327e-03,
            4.1733e-03,  9.9258e-03,  5.8899e-03,  2.7156e-04,  1.0078e-02,
           -8.9798e-03,  8.2016e-04,  1.9722e-03, -2.6684e-03, -3.2043e-03,
           -1.7609e-02, -2.9411e-03,  3.2253e-03,  1.1330e-02,  3.6068e-03,
           -1.1536e-02,  9.5596e-03, -5.0783e-04, -2.1458e-03, -4.4479e-03,
           -8.8425e-03,  9.9659e-04,  7.7591e-03,  3.5458e-03, -8.0490e-03,
            4.2229e-03, -2.1286e-03, -3.2783e-04,  2.7390e-03,  4.7684e-03,
            1.5888e-03, -6.2561e-03, -5.9586e-03, -1.9169e-03, -5.6648e-03,
            5.5923e-03, -5.4245e-03,  2.7943e-03, -7.9956e-03,  9.9106e-03,
            5.7869e-03,  4.7760e-03, -1.0121e-04,  5.7678e-03, -1.1154e-02,
            6.3095e-03,  5.0888e-03, -1.0138e-03, -2.8515e-03, -3.9749e-03,
           -7.4959e-03, -5.5084e-03,  3.4504e-03, -5.7945e-03,  2.3384e-03,
            9.8419e-03, -3.4046e-03, -3.5725e-03,  2.0046e-03,  1.2077e-02,
            1.5755e-03,  1.7288e-02,  8.7051e-03, -5.8975e-03, -5.4016e-03,
           -2.4395e-03, -1.7075e-02, -5.3062e-03, -3.5648e-03, -6.9923e-03,
            1.2188e-03,  1.0574e-02, -2.5711e-03, -1.3046e-03,  7.4806e-03,
            4.4656e-04,  8.4000e-03,  3.7632e-03,  5.9433e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:03.957326 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 100, 4, 128],"float16"), Tensor([2, 100, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.7395e-02, -1.8341e-02,  1.4534e-03, -7.8049e-03, -2.6840e-02,
            1.0506e-02, -7.8552e-02, -1.4641e-02,  1.0773e-02,  2.0020e-02,
            3.1769e-02,  1.6754e-02,  3.8147e-02, -5.8556e-03, -1.4160e-02,
            3.3035e-03,  3.8879e-02,  1.6357e-02, -3.2166e-02, -1.6876e-02,
           -1.3313e-02,  4.1962e-03, -7.0453e-05,  1.5076e-02, -3.6316e-03,
            3.2471e-02,  9.1782e-03,  1.2024e-02,  8.5144e-03,  7.0152e-03,
           -2.0996e-02, -2.5314e-02,  2.9526e-03, -2.5681e-02, -8.2397e-03,
            4.5700e-03, -9.8648e-03,  1.7273e-02,  3.6430e-03,  1.9302e-02,
            6.3057e-03, -4.2480e-02,  8.1329e-03, -2.2476e-02, -6.4926e-03,
            1.1620e-02, -6.6338e-03, -1.4015e-02, -1.9196e-02, -2.4979e-02,
           -2.3849e-02,  4.3793e-02, -5.8365e-03,  1.1765e-02, -1.4648e-02,
           -9.6436e-03, -3.2501e-03,  3.3905e-02, -2.8076e-03, -8.4763e-03,
            2.4231e-02, -1.3855e-02,  4.3182e-02, -1.7624e-02,  1.3981e-03,
           -1.6754e-02, -2.0508e-02, -1.4771e-02,  1.6403e-02,  1.8120e-03,
           -1.2436e-02,  2.0477e-02,  2.7832e-02,  1.7609e-02, -1.1620e-02,
            8.8806e-03,  2.9922e-02,  2.2095e-02, -3.7384e-03, -5.9967e-03,
           -1.6575e-03,  1.2115e-02,  1.6479e-02,  3.1052e-02, -2.9030e-03,
            1.0559e-02, -1.2039e-02,  1.3992e-02, -2.3407e-02, -1.9653e-02,
           -2.6810e-02,  1.1314e-02,  1.2558e-02, -2.6512e-03,  9.7733e-03,
            5.4779e-03,  8.6288e-03, -1.9608e-02, -1.0162e-02, -4.7073e-03]]],


        [[[-9.3384e-03,  1.9867e-02, -2.2926e-03, -6.4697e-03,  1.1612e-02,
           -3.4790e-02,  1.4404e-02, -2.5330e-02, -9.5367e-03,  5.7650e-04,
            1.2264e-03, -2.5253e-02, -5.3902e-03, -1.7509e-03, -3.6255e-02,
           -5.1483e-02,  4.3488e-03, -3.5706e-02, -1.2283e-02, -5.5771e-03,
            1.5152e-02,  1.8112e-02, -1.9745e-02,  1.7319e-02, -2.6855e-03,
           -1.3046e-02,  7.4196e-04,  6.9580e-03,  5.0774e-03, -3.6774e-03,
            1.5518e-02, -3.9597e-03, -3.8879e-02,  4.4670e-03, -6.7329e-03,
            9.0485e-03,  2.2919e-02, -1.1848e-02,  4.0344e-02,  3.4302e-02,
           -2.1942e-02,  2.1881e-02,  8.8654e-03, -1.9336e-04, -3.6896e-02,
           -9.9487e-03, -1.6434e-02, -2.6794e-02,  1.1253e-03,  3.9368e-03,
            9.1629e-03, -4.4098e-03,  2.0737e-02, -4.5929e-03, -1.4824e-02,
           -4.4289e-03,  1.1930e-03, -6.8140e-04, -1.0933e-02, -3.0823e-02,
            9.8801e-03,  1.9730e-02,  1.4465e-02, -5.2414e-03, -9.9182e-03,
            3.1719e-03,  9.8877e-03, -5.9738e-03, -3.8948e-03,  2.3880e-02,
            1.4582e-03,  2.4368e-02,  4.8218e-03, -6.6986e-03, -1.2154e-02,
            3.1643e-03,  2.5345e-02,  2.6951e-03, -9.2087e-03,  2.4536e-02,
            2.1179e-02,  1.5278e-03,  5.5962e-03,  2.1515e-02, -1.8723e-02,
           -4.6120e-03,  3.1189e-02,  2.5864e-02,  1.1726e-02,  9.6741e-03,
            3.2940e-03,  1.9121e-03, -5.7182e-03, -5.9891e-04, -7.4768e-04,
            2.1118e-02, -3.6125e-03,  1.5961e-02, -1.3626e-02, -1.2188e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:04.156834 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 101, 4, 128],"float16"), Tensor([2, 101, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0250, -0.0273,  0.0202,  0.0252, -0.0272, -0.0196, -0.0120,
           -0.0005, -0.0184,  0.0419, -0.0071,  0.0119,  0.0549, -0.0184,
           -0.0266,  0.0054, -0.0115, -0.0131,  0.0080,  0.0358, -0.0077,
           -0.0257, -0.0051, -0.0074, -0.0184,  0.0103, -0.0136,  0.0242,
           -0.0192,  0.0112, -0.0033, -0.0093,  0.0497, -0.0433,  0.0200,
           -0.0342, -0.0028,  0.0104,  0.0274,  0.0006, -0.0043, -0.0018,
            0.0027,  0.0032,  0.0115,  0.0097, -0.0122,  0.0114,  0.0217,
           -0.0085,  0.0083, -0.0095, -0.0429, -0.0042,  0.0009,  0.0271,
           -0.0086, -0.0037,  0.0038, -0.0102, -0.0192,  0.0154,  0.0098,
            0.0058,  0.0071, -0.0332,  0.0180, -0.0106,  0.0169,  0.0176,
            0.0147, -0.0203,  0.0068,  0.0375, -0.0008,  0.0022,  0.0059,
           -0.0167, -0.0009,  0.0024,  0.0130, -0.0341,  0.0034,  0.0163,
           -0.0025,  0.0062, -0.0414, -0.0153, -0.0172,  0.0067,  0.0239,
           -0.0155, -0.0065, -0.0056, -0.0124, -0.0180, -0.0077,  0.0037,
            0.0135,  0.0047,  0.0215]]],


        [[[ 0.0119, -0.0071, -0.0071,  0.0015,  0.0111,  0.0004,  0.0053,
            0.0124,  0.0021, -0.0034,  0.0035, -0.0041,  0.0128, -0.0005,
           -0.0275,  0.0217, -0.0135,  0.0111,  0.0033, -0.0192, -0.0040,
           -0.0082, -0.0016,  0.0103, -0.0028, -0.0050,  0.0147, -0.0275,
            0.0138, -0.0034,  0.0110, -0.0466, -0.0033, -0.0177, -0.0198,
            0.0179, -0.0404, -0.0044,  0.0161,  0.0055,  0.0008, -0.0065,
            0.0136, -0.0123,  0.0406, -0.0083,  0.0028, -0.0316,  0.0126,
           -0.0030, -0.0465, -0.0808, -0.0184, -0.0004,  0.0475,  0.0175,
           -0.0017,  0.0019,  0.0187,  0.0022,  0.0090,  0.0278, -0.0216,
            0.0540, -0.0021,  0.0260,  0.0108,  0.0210,  0.0251, -0.0025,
           -0.0387,  0.0059,  0.0018,  0.0015,  0.0126,  0.0020, -0.0062,
           -0.0266,  0.0275,  0.0180,  0.0105, -0.0025,  0.0047,  0.0087,
           -0.0069, -0.0203,  0.0065,  0.0308,  0.0041,  0.0228,  0.0258,
           -0.0798, -0.0161,  0.0011,  0.0083, -0.0066,  0.0010, -0.0119,
           -0.0122,  0.0330, -0.0147]]]], dtype=torch.float16)
2025-05-16 03:03:04.347266 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 102, 4, 128],"float16"), Tensor([2, 102, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.3802e-02, -8.5831e-03,  1.6876e-02,  5.9662e-03, -1.7471e-02,
           -6.0349e-03, -2.3331e-02,  1.1322e-02,  2.0733e-03,  9.5606e-04,
            2.0264e-02,  9.1095e-03, -6.2523e-03,  9.8495e-03, -1.3344e-02,
            2.9984e-02, -2.1324e-03,  4.0779e-03, -2.8366e-02,  8.7662e-03,
           -3.5248e-02, -5.7373e-03,  1.2444e-02, -3.8147e-05,  3.8643e-03,
           -4.6196e-03,  5.5923e-03, -1.2093e-03, -3.9597e-03,  2.0660e-02,
           -1.0712e-02, -1.2314e-02,  1.8005e-03,  1.3725e-02, -1.8402e-02,
            8.2016e-03, -1.3676e-03,  1.2886e-02,  7.3090e-03, -1.2482e-02,
            1.4389e-02,  9.8190e-03, -1.2939e-02,  1.0147e-02,  1.6052e-02,
            2.0630e-02, -3.4389e-03, -2.0180e-03,  5.5962e-03,  2.5040e-02,
            1.3611e-02, -6.0654e-03, -1.6651e-03,  1.7456e-02,  3.5706e-02,
           -7.0763e-04, -1.9394e-02, -2.9984e-02, -4.5204e-03, -1.0979e-02,
           -4.0375e-02, -1.0567e-02, -2.6611e-02, -9.3231e-03,  9.1324e-03,
            1.2352e-02, -2.0332e-03, -2.4246e-02, -6.0081e-05, -3.9444e-03,
           -1.4038e-02, -4.3945e-03, -2.1820e-03,  1.6312e-02, -1.4740e-02,
           -3.0640e-02, -7.6256e-03,  4.9286e-03, -2.2469e-03, -6.5613e-03,
            4.5624e-02, -2.6184e-02,  1.6174e-02, -1.8799e-02,  5.1231e-03,
            4.5700e-03,  1.2253e-02,  2.1706e-03,  1.6815e-02,  1.7914e-02,
            2.3697e-02,  1.7548e-02, -1.7929e-02, -2.4689e-02, -1.5495e-02,
           -8.6060e-03,  1.7395e-02,  1.2428e-02,  5.8517e-03, -1.3138e-02,
            2.7405e-02, -2.9087e-04]]],


        [[[-1.0437e-02, -3.4821e-02, -1.3222e-02, -3.0270e-03, -9.7809e-03,
           -1.2093e-02, -4.0817e-03,  4.3983e-03,  2.5558e-03,  9.6741e-03,
            1.3931e-02,  5.6000e-03, -5.3635e-03, -6.9809e-03,  8.1253e-04,
            3.2410e-02,  1.1040e-02,  5.3825e-03,  7.1259e-03, -2.9106e-03,
            9.2545e-03, -1.6953e-02, -3.1769e-02, -1.0773e-02, -2.5574e-02,
           -5.2605e-03, -1.9531e-02, -7.4844e-03, -1.3142e-03,  1.0300e-02,
           -3.1242e-03, -1.8778e-03, -2.8397e-02,  4.4556e-03, -1.5060e-02,
            4.3907e-03, -1.1467e-02,  2.6047e-02,  1.9577e-02,  1.2077e-02,
           -9.9564e-03, -1.5621e-03, -1.7654e-02, -7.0686e-03, -5.2567e-03,
           -9.3307e-03,  3.1372e-02, -8.9569e-03, -5.8105e-02,  2.9953e-02,
           -5.2986e-03, -5.8060e-03,  2.8778e-02,  5.6419e-03,  1.2634e-02,
           -1.0468e-02, -3.0487e-02, -2.0935e-02, -1.0742e-02,  3.3295e-02,
           -2.1992e-03,  5.0354e-03, -2.6836e-03, -6.3705e-04, -2.6932e-02,
            1.7967e-03,  6.3515e-04, -2.8362e-03, -2.4139e-02,  1.9699e-02,
            7.0190e-03,  1.9028e-02,  1.2001e-02, -2.3918e-03, -5.6152e-03,
           -1.2779e-02,  1.0338e-02, -1.0544e-02, -3.0823e-03, -1.2230e-02,
            7.6485e-03, -2.8748e-02,  1.1353e-02,  9.5520e-03,  8.7814e-03,
            9.1858e-03,  2.2049e-02,  5.1575e-02, -4.1504e-02,  1.3687e-02,
            2.6077e-02,  1.5915e-02,  2.6794e-02, -1.2260e-02,  1.4412e-04,
           -2.8275e-02,  3.2043e-02, -1.5503e-02,  3.7109e-02,  2.6684e-03,
            3.0182e-02,  1.4023e-02]]]], dtype=torch.float16)
2025-05-16 03:03:04.536915 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 103, 4, 128],"float16"), Tensor([2, 103, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0081,  0.0269, -0.0264,  0.0109, -0.0066,  0.0109,  0.0061,
            0.0374,  0.0345,  0.0097, -0.0444,  0.0131, -0.0183, -0.0171,
           -0.0120, -0.0161, -0.0127, -0.0139,  0.0036,  0.0078,  0.0251,
            0.0054, -0.0066, -0.0025, -0.0074, -0.0431, -0.0188, -0.0056,
            0.0166,  0.0029, -0.0019,  0.0058, -0.0028, -0.0203, -0.0141,
            0.0253, -0.0042, -0.0126,  0.0188, -0.0121,  0.0107,  0.0215,
           -0.0076, -0.0182, -0.0036, -0.0135,  0.0503,  0.0132,  0.0048,
            0.0155,  0.0453,  0.0051, -0.0151,  0.0305, -0.0010,  0.0020,
            0.0095, -0.0008, -0.0114,  0.0273, -0.0125,  0.0064, -0.0011,
           -0.0002,  0.0122, -0.0173, -0.0116,  0.0128, -0.0072,  0.0044,
           -0.0139,  0.0069,  0.0247, -0.0096, -0.0085, -0.0198, -0.0047,
           -0.0293, -0.0225, -0.0182,  0.0146,  0.0052, -0.0106, -0.0100,
            0.0123, -0.0442,  0.0080,  0.0025,  0.0004, -0.0102, -0.0062,
            0.0067,  0.0162,  0.0164,  0.0076, -0.0540, -0.0127,  0.0352,
           -0.0041, -0.0065,  0.0118,  0.0427, -0.0096]]],


        [[[ 0.0132, -0.0185, -0.0085, -0.0154, -0.0366, -0.0107, -0.0088,
           -0.0282, -0.0103,  0.0040,  0.0104,  0.0121,  0.0037,  0.0376,
           -0.0335,  0.0173, -0.0712,  0.0032, -0.0037,  0.0052,  0.0398,
           -0.0173,  0.0020, -0.0104, -0.0016,  0.0132,  0.0102, -0.0303,
            0.0222, -0.0499, -0.0248, -0.0179, -0.0121, -0.0015,  0.0154,
           -0.0125,  0.0119,  0.0120, -0.0059,  0.0146,  0.0409, -0.0103,
            0.0083,  0.0053,  0.0056,  0.0348,  0.0144, -0.0021, -0.0177,
            0.0159,  0.0017, -0.0183, -0.0124,  0.0049,  0.0280, -0.0059,
            0.0104, -0.0211, -0.0297, -0.0176, -0.0452, -0.0036,  0.0077,
            0.0496, -0.0025,  0.0027, -0.0068,  0.0091, -0.0121,  0.0022,
            0.0891, -0.0367,  0.0171,  0.0247, -0.0010,  0.0144,  0.0134,
           -0.0195,  0.0132, -0.0026,  0.0052, -0.0084, -0.0048, -0.0109,
           -0.0064, -0.0175,  0.0447,  0.0251,  0.0131,  0.0031, -0.0038,
            0.0065, -0.0251,  0.0350,  0.0056, -0.0163,  0.0058, -0.0193,
           -0.0221, -0.0195, -0.0044,  0.0135,  0.0339]]]],
       dtype=torch.float16)
2025-05-16 03:03:04.723855 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 104, 4, 128],"float16"), Tensor([2, 104, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 104],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0059,  0.0111, -0.0533, -0.0124, -0.0211,  0.0274,  0.0073,
            0.0081, -0.0055, -0.0084,  0.0507,  0.0593,  0.0138, -0.0457,
            0.0053,  0.0594, -0.0048, -0.0036, -0.0204, -0.0008,  0.0186,
           -0.0093, -0.0054, -0.0047, -0.0292,  0.0100,  0.0345, -0.0242,
           -0.0185,  0.0123, -0.0060, -0.0080, -0.0298,  0.0016, -0.0018,
            0.0029,  0.0437, -0.0118, -0.0169, -0.0037, -0.0045,  0.0043,
            0.0085, -0.0179, -0.0070, -0.0102,  0.0072, -0.0002,  0.0050,
            0.0023,  0.0019,  0.0074, -0.0038,  0.0130,  0.0296,  0.0271,
            0.0314, -0.0136,  0.0010,  0.0049,  0.0218, -0.0203, -0.0066,
            0.0104,  0.0037, -0.0193,  0.0193, -0.0199,  0.0118,  0.0082,
           -0.0257,  0.0024, -0.0265, -0.0192,  0.0098, -0.0009, -0.0067,
            0.0362,  0.0136,  0.0124,  0.0378,  0.0068, -0.0172,  0.0201,
           -0.0216, -0.0067, -0.0116,  0.0064, -0.0005,  0.0168,  0.0120,
            0.0097, -0.0343, -0.0060, -0.0555, -0.0114, -0.0327, -0.0105,
            0.0328,  0.0211, -0.0039, -0.0081, -0.0456, -0.0032]]],


        [[[ 0.0039,  0.0260, -0.0149, -0.0239, -0.0028,  0.0195, -0.0154,
            0.0009,  0.0071, -0.0122, -0.0203,  0.0099, -0.0415, -0.0016,
            0.0101, -0.0030, -0.0056,  0.0189, -0.0117, -0.0170, -0.0027,
           -0.0145, -0.0082, -0.0141, -0.0104,  0.0045, -0.0113, -0.0161,
           -0.0114, -0.0010,  0.0211,  0.0207,  0.0145,  0.0125, -0.0064,
            0.0077, -0.0006,  0.0060,  0.0082, -0.0058,  0.0323,  0.0010,
           -0.0318, -0.0019,  0.0111, -0.0054, -0.0079,  0.0518,  0.0067,
           -0.0115, -0.0332,  0.0145,  0.0409,  0.0002,  0.0046, -0.0099,
           -0.0033,  0.0179,  0.0044,  0.0162,  0.0186, -0.0280, -0.0056,
            0.0183,  0.0050, -0.0017,  0.0229,  0.0029,  0.0041, -0.0147,
            0.0206, -0.0042, -0.0210,  0.0056, -0.0032, -0.0041, -0.0338,
            0.0206,  0.0026,  0.0076, -0.0048, -0.0307,  0.0107,  0.0020,
            0.0131, -0.0318,  0.0010, -0.0122,  0.0043,  0.0006, -0.0091,
            0.0175, -0.0087,  0.0325,  0.0152,  0.0210, -0.0235, -0.0004,
            0.0154,  0.0087, -0.0040, -0.0046, -0.0331, -0.0074]]]],
       dtype=torch.float16)
2025-05-16 03:03:04.972771 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0462,  0.0984, -0.0041,  0.0023, -0.0386, -0.0035,  0.0524,
           -0.0806, -0.0522, -0.0436,  0.0114,  0.1192, -0.0304, -0.0278,
            0.0339,  0.0175,  0.0251,  0.0297,  0.0638,  0.0148,  0.0097,
            0.0216, -0.0040,  0.0109, -0.0119,  0.0247, -0.0102, -0.0083,
            0.0344,  0.0300,  0.0035,  0.0110, -0.0523, -0.0832, -0.0213,
           -0.0691, -0.0417,  0.0471, -0.0325]]],


        [[[-0.0020, -0.0377,  0.0238,  0.0061,  0.0281, -0.0419, -0.0857,
           -0.0680,  0.0239,  0.0111, -0.0511, -0.0182, -0.0335, -0.1541,
            0.0455,  0.0748,  0.0587,  0.0169, -0.0199,  0.0366, -0.0163,
            0.0012,  0.1121,  0.0726, -0.0032, -0.0072, -0.0463, -0.0135,
           -0.0756,  0.0668, -0.0137, -0.0174,  0.0630,  0.0006,  0.0861,
           -0.0618,  0.0493, -0.0234,  0.0133]]]], dtype=torch.float16)
2025-05-16 03:03:05.136746 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 40],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0058,  0.1122, -0.0416, -0.0236, -0.0273,  0.0186,  0.0465,
            0.0104,  0.0555,  0.0322,  0.0384, -0.0801,  0.0446, -0.0406,
           -0.0271,  0.0431,  0.0022,  0.0287,  0.0020, -0.0392, -0.0394,
           -0.0856,  0.0585, -0.0030, -0.1951, -0.0229,  0.0379,  0.0514,
            0.0007,  0.0537,  0.0643, -0.0310, -0.0136, -0.0084,  0.0162,
           -0.0333, -0.0607,  0.0147,  0.0460, -0.0114]]],


        [[[-0.0117, -0.0114, -0.0516, -0.0409, -0.0604,  0.0128,  0.0305,
            0.0381,  0.0096, -0.0407,  0.0204, -0.0062,  0.0686, -0.0039,
            0.0515,  0.0750,  0.0115, -0.0412, -0.0180,  0.0366, -0.0919,
            0.0013, -0.0290, -0.0042, -0.0546,  0.1151,  0.0355, -0.0218,
            0.0100,  0.0187,  0.0020,  0.0255,  0.0206, -0.0099,  0.0235,
           -0.0097, -0.0439, -0.0557,  0.0007, -0.0009]]]],
       dtype=torch.float16)
2025-05-16 03:03:05.355892 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 41],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0287,  0.0331, -0.0706,  0.0634,  0.0062, -0.0005,  0.0035,
            0.0165, -0.0323,  0.0024, -0.0147, -0.0246, -0.0233,  0.0109,
           -0.0110, -0.0037,  0.0179, -0.1359, -0.0062, -0.0044,  0.0194,
           -0.0793, -0.0379, -0.0500,  0.0366, -0.0038, -0.0745,  0.0154,
            0.0521, -0.0284, -0.0042,  0.0323,  0.0947, -0.0108, -0.0044,
            0.0127, -0.0212,  0.0342,  0.0817,  0.0180,  0.0620]]],


        [[[ 0.0170, -0.0111,  0.0421,  0.0368, -0.0403,  0.0128, -0.0330,
            0.0933,  0.0498,  0.0112, -0.0220, -0.0680, -0.0500, -0.0252,
           -0.0229, -0.0176,  0.0229, -0.0062, -0.0089,  0.0791,  0.0182,
           -0.0517, -0.0424, -0.0151,  0.0125,  0.0035,  0.0206, -0.0566,
            0.0299, -0.0961, -0.0568,  0.0341, -0.0557,  0.0074, -0.0210,
            0.0655,  0.0367,  0.0781, -0.0060,  0.0360, -0.0009]]]],
       dtype=torch.float16)
2025-05-16 03:03:05.595879 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 42, 4, 128],"float16"), Tensor([2, 42, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 42],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0405,  0.0218,  0.0304,  0.0556,  0.0765,  0.0007,  0.0291,
           -0.0333,  0.0301,  0.0024, -0.0239, -0.0009,  0.0076, -0.0226,
           -0.0984, -0.0300, -0.0394, -0.0042, -0.0416,  0.0589, -0.0323,
           -0.0152,  0.0391, -0.0435, -0.1125,  0.0405, -0.0137, -0.0288,
           -0.0420,  0.0245,  0.0161, -0.0167,  0.0620, -0.0642,  0.0029,
           -0.0074, -0.0102,  0.1196,  0.0012,  0.0192,  0.0441,  0.0390]]],


        [[[-0.0177,  0.0031, -0.0536,  0.1103, -0.0267, -0.0402,  0.0004,
            0.0206,  0.0054,  0.0195,  0.0046, -0.0682,  0.0129, -0.0168,
            0.0182,  0.0582, -0.0107, -0.0028, -0.0424, -0.0011, -0.0610,
            0.0854, -0.0464,  0.0835,  0.0002, -0.0129, -0.0014, -0.1510,
           -0.0181,  0.0726,  0.0112, -0.0389, -0.0528,  0.0941,  0.0016,
            0.0176,  0.0500,  0.0380,  0.0513, -0.0464, -0.0695,  0.0194]]]],
       dtype=torch.float16)
2025-05-16 03:03:05.831665 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 43, 4, 128],"float16"), Tensor([2, 43, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 43],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0104, -0.0420,  0.0138, -0.0082,  0.0317,  0.0578,  0.0173,
            0.0734,  0.0076, -0.0550, -0.0015, -0.0544, -0.0349, -0.0166,
           -0.0435,  0.0934,  0.0185, -0.0098, -0.0238,  0.0202,  0.0281,
           -0.0086,  0.0233, -0.0967, -0.0584, -0.0175, -0.0467, -0.0417,
           -0.0185, -0.0161,  0.0413, -0.0073, -0.0201,  0.0112,  0.0546,
            0.0710,  0.0084, -0.0630,  0.0147,  0.0469,  0.0035,  0.0404,
            0.0172]]],


        [[[ 0.0132,  0.0068,  0.0428,  0.0013,  0.0153,  0.0027,  0.0723,
           -0.0426, -0.0325,  0.0321, -0.0071,  0.0034,  0.0729, -0.0768,
           -0.0304,  0.0312, -0.0290,  0.0256, -0.0258, -0.0063, -0.0422,
            0.0005, -0.0514,  0.0528,  0.0474,  0.0688,  0.0246, -0.0886,
            0.0141, -0.0702,  0.0449,  0.0824, -0.0528, -0.0029, -0.0227,
           -0.0021, -0.0831, -0.0038, -0.0007,  0.0009,  0.0302,  0.0087,
           -0.0238]]]], dtype=torch.float16)
2025-05-16 03:03:06.006823 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 44, 4, 128],"float16"), Tensor([2, 44, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 44],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0347, -0.0450,  0.1014,  0.0035, -0.0414,  0.0720, -0.0023,
            0.0454, -0.0264, -0.0350, -0.0069,  0.0295, -0.0209,  0.0429,
           -0.0568,  0.0166, -0.0056, -0.0324,  0.0247, -0.1261, -0.0502,
            0.0194, -0.0131, -0.0012,  0.0419,  0.0031, -0.0065, -0.0199,
            0.0063, -0.0666,  0.0388,  0.0538, -0.0047, -0.0154,  0.1261,
            0.0585, -0.0269, -0.0324,  0.0509,  0.0198,  0.0009, -0.0983,
            0.0345, -0.0214]]],


        [[[-0.0205,  0.0129, -0.0156, -0.0351, -0.0300,  0.0560,  0.0230,
           -0.0558,  0.0283, -0.0473, -0.0635, -0.0254,  0.0331,  0.0018,
            0.0035,  0.0190, -0.0057,  0.0119, -0.0377,  0.0784,  0.0004,
            0.0289,  0.0438,  0.0373,  0.0160,  0.0486,  0.0153,  0.1506,
           -0.0906, -0.0589,  0.0033, -0.0928,  0.0343,  0.0187,  0.0219,
           -0.0472,  0.0081,  0.0066, -0.0622, -0.0249, -0.0043, -0.0093,
            0.0206,  0.0048]]]], dtype=torch.float16)
2025-05-16 03:03:06.248972 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 45, 4, 128],"float16"), Tensor([2, 45, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 45],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0130,  0.0953,  0.0097, -0.0800, -0.0029, -0.0074, -0.0940,
           -0.1126,  0.1038, -0.0817,  0.0103, -0.0268, -0.0133, -0.0134,
            0.0041, -0.0268,  0.0053,  0.0125, -0.1237,  0.0402,  0.0273,
            0.0341,  0.0584, -0.0333, -0.0014,  0.0484, -0.0006,  0.0276,
            0.0080,  0.0413, -0.0332,  0.0036,  0.0123, -0.0051,  0.0703,
           -0.0078, -0.1509,  0.0310,  0.0822,  0.0195,  0.0205,  0.0403,
           -0.0246,  0.0084,  0.0377]]],


        [[[-0.0092,  0.0177, -0.0003, -0.0105,  0.0025,  0.0382,  0.0026,
            0.0343,  0.0069, -0.0535, -0.0007,  0.0125, -0.0240, -0.0036,
            0.0038, -0.0041,  0.0101, -0.0072, -0.0003, -0.0380,  0.0862,
           -0.0168,  0.0288,  0.0374,  0.0357,  0.0159, -0.0057, -0.0612,
            0.0048,  0.0230, -0.0126,  0.0195,  0.0304, -0.0746, -0.0187,
            0.0105, -0.1052, -0.0468,  0.0375,  0.0105,  0.0120, -0.0433,
            0.0330,  0.0344, -0.0121]]]], dtype=torch.float16)
2025-05-16 03:03:06.490962 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 46, 4, 128],"float16"), Tensor([2, 46, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 46],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0321,  0.0196,  0.0430,  0.0517, -0.0134,  0.0204, -0.0182,
            0.0019, -0.0145, -0.0346, -0.0297,  0.0916, -0.0362,  0.0050,
            0.0607, -0.0155, -0.0534,  0.1243, -0.0436,  0.0147,  0.0007,
           -0.0564,  0.0017,  0.0616,  0.0432, -0.0593, -0.0353,  0.0511,
            0.0681, -0.0093,  0.0089,  0.0324,  0.0257, -0.0688, -0.0153,
           -0.0743,  0.0096, -0.0187, -0.0546, -0.0008, -0.0523,  0.0267,
           -0.0341,  0.0239, -0.0598, -0.0204]]],


        [[[ 0.0052,  0.0757,  0.0405, -0.0833,  0.0264, -0.0532,  0.0648,
           -0.0825, -0.0309, -0.0290, -0.0746, -0.0545,  0.0754, -0.0375,
           -0.0016, -0.0796,  0.0225,  0.0036,  0.0161, -0.0158, -0.0374,
            0.0775,  0.0204, -0.0408,  0.0218,  0.0442,  0.0707,  0.0049,
           -0.0050, -0.0172,  0.0182,  0.0247,  0.0029,  0.0287, -0.0704,
            0.0367,  0.0393,  0.0217, -0.0122,  0.0377, -0.0043,  0.0362,
           -0.0229, -0.0725, -0.0073,  0.0171]]]], dtype=torch.float16)
2025-05-16 03:03:06.732542 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0087,  0.0283,  0.0125, -0.0221,  0.0028, -0.0324,  0.0473,
            0.0300,  0.0545,  0.0775, -0.0108,  0.0178, -0.0213,  0.0217,
            0.0325,  0.0084, -0.0305, -0.0120, -0.0173, -0.0482,  0.0516,
            0.0235, -0.0295,  0.0473, -0.0557, -0.0122,  0.0519, -0.0206,
            0.0337, -0.0097, -0.0181,  0.0033, -0.0519, -0.0502,  0.0117,
            0.0118,  0.0515,  0.0134, -0.0851, -0.0088,  0.0392,  0.0714,
           -0.1016, -0.0413, -0.0023, -0.0425, -0.0105]]],


        [[[ 0.0094, -0.0378,  0.0051,  0.0073,  0.0216, -0.0281,  0.0204,
            0.0691, -0.0077, -0.0366, -0.0111, -0.0251, -0.0374, -0.0006,
            0.0250,  0.0083, -0.0453, -0.0082,  0.0332,  0.0093,  0.0087,
            0.0012, -0.0976,  0.0428,  0.0045, -0.0743,  0.0022, -0.0164,
           -0.0097, -0.0321, -0.0385,  0.0145, -0.0161,  0.0171,  0.0723,
            0.0284,  0.0348, -0.0401, -0.0200,  0.0236,  0.0458,  0.0070,
            0.0234,  0.0256, -0.0105,  0.0399, -0.0068]]]],
       dtype=torch.float16)
2025-05-16 03:03:06.971110 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 48, 4, 128],"float16"), Tensor([2, 48, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 48],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0102, -0.0412, -0.0187,  0.0422,  0.0144,  0.0560,  0.0640,
            0.0037, -0.0403, -0.0116, -0.0714, -0.0636, -0.0140, -0.0725,
            0.0207, -0.0274,  0.0644, -0.0513, -0.1075, -0.0065,  0.0080,
            0.0059, -0.0205,  0.0210, -0.0169, -0.0193,  0.0307,  0.0215,
           -0.0107,  0.0312, -0.0250,  0.0158, -0.0025, -0.0048,  0.0362,
            0.0152,  0.0129, -0.0010, -0.0464, -0.0022,  0.0186, -0.0367,
            0.0212, -0.0205,  0.1225, -0.0179,  0.1416, -0.0071]]],


        [[[ 0.0263,  0.0682, -0.0131, -0.0036,  0.0776, -0.0259, -0.0089,
            0.0108, -0.0247,  0.0471, -0.0057, -0.0008, -0.0349,  0.0346,
           -0.0030, -0.0411,  0.0132,  0.0072, -0.0334, -0.1047,  0.0825,
           -0.0673,  0.0201,  0.0049, -0.0042, -0.0374, -0.0061,  0.0391,
           -0.0077, -0.0309,  0.0070,  0.0282,  0.0031,  0.0394,  0.0212,
           -0.0549,  0.0790, -0.0131, -0.0316,  0.0070, -0.0054,  0.0459,
            0.0081, -0.0468, -0.0154,  0.0028, -0.0602,  0.0073]]]],
       dtype=torch.float16)
2025-05-16 03:03:07.204495 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 49, 4, 128],"float16"), Tensor([2, 49, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 49],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0920, -0.0024,  0.0358, -0.0963,  0.0069, -0.0107, -0.0142,
           -0.0062, -0.0014,  0.0089,  0.0159,  0.0235,  0.0021, -0.0369,
           -0.0284,  0.0139, -0.0267,  0.0208, -0.0622,  0.0237, -0.0242,
            0.0365,  0.0094,  0.0022, -0.0257,  0.0066,  0.0043, -0.0261,
            0.0285,  0.0148,  0.0658, -0.0035,  0.0405, -0.0034,  0.0153,
           -0.0030, -0.0274,  0.0426, -0.0294,  0.0236, -0.0255, -0.0031,
           -0.0274, -0.0383,  0.0310, -0.0078, -0.0076,  0.0009, -0.0278]]],


        [[[ 0.0318,  0.0025, -0.0369,  0.0267, -0.0448, -0.0237, -0.0221,
           -0.0150, -0.0212,  0.0073,  0.0020, -0.0056, -0.0226, -0.0145,
           -0.0262,  0.0511,  0.0207, -0.0059, -0.0503, -0.0305, -0.0097,
            0.0357,  0.0157, -0.0020,  0.0725,  0.0643,  0.0410, -0.0223,
           -0.0262,  0.0105,  0.0502, -0.0031,  0.0147,  0.0065,  0.0316,
            0.0373, -0.0237,  0.0059,  0.0136,  0.0502, -0.0693, -0.1481,
            0.0193,  0.0119,  0.0306, -0.0088, -0.0367,  0.0460, -0.0303]]]],
       dtype=torch.float16)
2025-05-16 03:03:07.384979 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 50, 4, 128],"float16"), Tensor([2, 50, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 50],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.2781e-02,  2.8931e-02,  5.1079e-03,  3.7750e-02,  3.2745e-02,
           -3.5591e-03, -5.3406e-02,  7.7271e-02, -1.5221e-02, -8.1635e-03,
            8.1100e-03,  1.5305e-02, -3.9429e-02,  3.8544e-02, -1.1108e-02,
           -2.2278e-02, -2.8900e-02, -4.2305e-03,  1.5503e-02,  8.4961e-02,
            1.1520e-02, -1.8433e-02, -4.6844e-02, -3.6743e-02,  2.0782e-02,
            3.8330e-02,  5.4993e-02,  2.2675e-02, -2.6123e-02,  1.6083e-02,
           -3.5797e-02,  1.0803e-02, -5.0316e-03, -3.5782e-03,  2.8915e-02,
           -5.5023e-02, -3.2978e-03,  1.9730e-02, -2.0828e-02,  3.8025e-02,
           -7.5928e-02,  2.1801e-03,  1.6159e-02, -1.1536e-02, -9.3994e-03,
           -3.8208e-02, -6.8474e-04,  1.6891e-02,  8.6517e-03, -5.3314e-02]]],


        [[[-2.2888e-05,  6.3095e-03,  4.2877e-02,  3.2166e-02, -2.5314e-02,
            1.3451e-02, -5.2917e-02,  2.4231e-02,  2.2964e-03, -8.2779e-03,
            6.3416e-02,  1.5106e-02,  1.0529e-02,  2.6215e-02,  1.4816e-02,
           -4.9896e-03,  7.3242e-02,  3.4149e-02, -8.0078e-02,  2.7420e-02,
            2.0081e-02,  5.7983e-02,  1.7273e-02, -3.3875e-02, -1.7872e-03,
            2.2030e-04, -5.8655e-02, -1.6575e-03,  3.1250e-02,  3.8422e-02,
           -5.0812e-03,  3.2806e-02, -4.8553e-02,  2.2339e-02, -2.2354e-02,
           -8.5938e-02,  7.7286e-03,  1.1230e-02,  1.5701e-02, -1.2375e-02,
           -3.5767e-02, -2.4529e-03, -1.7700e-02, -5.7617e-02, -3.6068e-03,
           -4.7684e-06,  1.1200e-02, -7.9041e-02,  3.5522e-02, -5.0079e-02]]]],
       dtype=torch.float16)
2025-05-16 03:03:07.552754 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0108, -0.0103,  0.0251, -0.0130,  0.0220,  0.0270, -0.0497,
           -0.0233,  0.0330,  0.0620,  0.0376,  0.0293,  0.0315, -0.0309,
            0.0467,  0.0140, -0.0138, -0.0168, -0.0399, -0.0300, -0.0063,
           -0.0425,  0.0111, -0.0396, -0.0551, -0.0075, -0.0172,  0.0432,
           -0.0853,  0.0164,  0.0089,  0.0496, -0.0784, -0.0021,  0.0891,
           -0.0424,  0.0057,  0.0126,  0.0569, -0.0092, -0.0330,  0.0222,
           -0.0145, -0.0399,  0.0753, -0.0158, -0.0218, -0.0300,  0.0938,
           -0.0410,  0.0075]]],


        [[[ 0.0410,  0.0244,  0.0696,  0.0268,  0.0192,  0.0020, -0.0624,
           -0.0730,  0.0355,  0.0907,  0.0102, -0.0762,  0.0216,  0.0067,
           -0.0055, -0.0867, -0.0659, -0.0161,  0.0054, -0.0109,  0.0491,
            0.0004,  0.0276, -0.0046, -0.0220,  0.0316, -0.0701,  0.0104,
            0.0147, -0.0235,  0.0065, -0.0488,  0.0615, -0.0097, -0.0216,
           -0.0453,  0.0107,  0.0483,  0.0091, -0.0121, -0.0100, -0.0522,
           -0.0089, -0.0155, -0.0261,  0.0355, -0.0150,  0.0210,  0.0425,
            0.0566,  0.0036]]]], dtype=torch.float16)
2025-05-16 03:03:07.793053 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 52, 4, 128],"float16"), Tensor([2, 52, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 52],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0178,  0.0031,  0.0320, -0.0842,  0.0604, -0.0317, -0.0470,
           -0.0244, -0.0299,  0.0110, -0.0097, -0.0153,  0.0879, -0.0504,
            0.0053,  0.0229,  0.0414, -0.0478, -0.0715,  0.0296, -0.0228,
            0.0236, -0.0055, -0.0249, -0.0541,  0.0044, -0.0294, -0.0350,
           -0.0171, -0.0582,  0.0202, -0.0023, -0.0331,  0.0764,  0.0549,
           -0.0308,  0.0075,  0.0440,  0.0249, -0.0340, -0.0508,  0.0839,
            0.0126,  0.0483,  0.0166,  0.0356,  0.0190, -0.0123,  0.0563,
            0.0013,  0.0078,  0.0089]]],


        [[[-0.0431, -0.0230, -0.0409, -0.0258, -0.0313,  0.0497,  0.0024,
           -0.0223,  0.0006, -0.0005,  0.0130,  0.0227, -0.0162,  0.0566,
            0.0002, -0.0136, -0.0239, -0.0364,  0.0404,  0.0091,  0.0087,
            0.0240, -0.0060,  0.0073, -0.0393, -0.0204,  0.0092, -0.0232,
           -0.0120, -0.0216,  0.0869, -0.0480,  0.0309, -0.0212, -0.0025,
            0.0149, -0.0156,  0.0282, -0.0498,  0.0725, -0.0290,  0.0184,
            0.0423, -0.0111,  0.0513,  0.0231,  0.0469, -0.0311, -0.0082,
            0.0304, -0.0644, -0.0094]]]], dtype=torch.float16)
2025-05-16 03:03:08.043807 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 53],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0228, -0.0260, -0.0435,  0.0493,  0.0259,  0.0334,  0.0068,
           -0.0629,  0.0153,  0.0737,  0.0458,  0.0332, -0.0145, -0.0162,
            0.0560,  0.0386,  0.0510, -0.0320,  0.0435, -0.0261, -0.0601,
            0.0222, -0.0094, -0.0023,  0.0108,  0.0099, -0.0348,  0.0513,
           -0.0666,  0.0584, -0.0203, -0.0154, -0.0082,  0.0313,  0.0933,
            0.0317, -0.0881, -0.0345,  0.0356,  0.0039, -0.0285, -0.0817,
            0.0279, -0.0128, -0.0170,  0.0020,  0.0131, -0.0330, -0.0207,
           -0.0392, -0.0177,  0.0362, -0.0656]]],


        [[[-0.0009,  0.0113, -0.0560,  0.0085, -0.0129,  0.0338,  0.0454,
           -0.0257,  0.0495,  0.0149, -0.0221,  0.0012, -0.0283,  0.0064,
           -0.0461,  0.0384, -0.0222,  0.0463, -0.0296, -0.0013,  0.0117,
           -0.0291, -0.0357,  0.0322, -0.0486,  0.0287,  0.0061, -0.0401,
            0.0525,  0.0037,  0.0113,  0.0144, -0.0132,  0.0016, -0.0146,
           -0.0099,  0.0135, -0.0326, -0.0049,  0.0263, -0.0244, -0.0134,
           -0.0063,  0.0010,  0.0176, -0.0321,  0.0201,  0.0200, -0.0216,
            0.0031,  0.0085,  0.0023,  0.0410]]]], dtype=torch.float16)
2025-05-16 03:03:08.229561 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 54],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0156, -0.0039, -0.0454, -0.0508,  0.1039, -0.0109,  0.0002,
            0.0535,  0.0304, -0.0049, -0.0164,  0.0304, -0.0161,  0.0247,
           -0.0385, -0.0143,  0.0165,  0.0346, -0.0015, -0.0432, -0.0260,
           -0.0008,  0.0183,  0.0466,  0.0286, -0.0296,  0.0667, -0.0216,
            0.0223, -0.0402, -0.1328, -0.0123,  0.0202, -0.0181,  0.0208,
            0.0446, -0.0859,  0.0119,  0.0040,  0.0153, -0.0011, -0.0618,
           -0.0534, -0.0248,  0.0243, -0.0121, -0.0281,  0.0402, -0.0569,
            0.0710,  0.0732, -0.0291,  0.0255,  0.0377]]],


        [[[ 0.0176, -0.0044, -0.0412, -0.0247, -0.0576,  0.0406,  0.0157,
           -0.0062, -0.0205, -0.0125, -0.0347,  0.0475, -0.0065,  0.0095,
            0.0268, -0.0023, -0.0038, -0.0494,  0.0044,  0.0203, -0.1013,
            0.0115, -0.0388, -0.0089,  0.0030, -0.1058,  0.0474, -0.1085,
            0.0039, -0.0072,  0.0146,  0.0377,  0.0463,  0.0154,  0.0247,
           -0.0148, -0.0183,  0.0335,  0.0392, -0.0135,  0.0662, -0.0017,
           -0.0113, -0.0010, -0.0390, -0.0056,  0.0440,  0.0501, -0.0025,
            0.0574,  0.0382, -0.0007, -0.0013,  0.0284]]]],
       dtype=torch.float16)
2025-05-16 03:03:08.464749 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 55, 4, 128],"float16"), Tensor([2, 55, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 55],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0659,  0.0038,  0.0508, -0.0875, -0.0026, -0.0002, -0.0390,
            0.0379,  0.0637, -0.0009,  0.0920, -0.0393, -0.0152,  0.0408,
           -0.0005, -0.0402,  0.0110,  0.0005,  0.1025, -0.0257, -0.0792,
            0.0434, -0.0370, -0.0142, -0.0026, -0.0137,  0.0200,  0.0088,
           -0.0029,  0.0205, -0.0468, -0.0184,  0.0212,  0.0317,  0.0152,
            0.0449,  0.0021, -0.0006, -0.0082,  0.0781, -0.0211,  0.0046,
            0.0062, -0.0121,  0.0108,  0.0030, -0.0488, -0.0294, -0.0413,
            0.0132, -0.0328,  0.0053, -0.0764, -0.0489, -0.0124]]],


        [[[ 0.0018,  0.0139, -0.0461, -0.0009, -0.0083, -0.0358,  0.0237,
           -0.0157, -0.0088,  0.0235,  0.0399,  0.0375,  0.0005,  0.0032,
           -0.0593,  0.0545, -0.0189,  0.0640, -0.0691,  0.0468,  0.0037,
           -0.0065, -0.0880,  0.0223, -0.0386, -0.0504, -0.0326, -0.0588,
           -0.0131, -0.0659,  0.0094,  0.0283, -0.0630, -0.0246,  0.0214,
            0.0217, -0.0352,  0.0385, -0.0301,  0.0026,  0.0018,  0.0008,
            0.0188,  0.0343,  0.0534,  0.0454,  0.0055,  0.1013,  0.0070,
            0.0603, -0.0118, -0.0141, -0.0163,  0.0259,  0.0000]]]],
       dtype=torch.float16)
2025-05-16 03:03:08.717912 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 56, 4, 128],"float16"), Tensor([2, 56, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 56],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0097, -0.0093,  0.0206,  0.0117, -0.0210, -0.0770,  0.0515,
           -0.0982,  0.0139,  0.0033, -0.0365,  0.0055, -0.0083,  0.0110,
            0.0011, -0.0058,  0.0377,  0.0356, -0.0295, -0.0200,  0.0151,
           -0.0082, -0.0251, -0.0367, -0.0144, -0.0152,  0.0186, -0.0043,
           -0.0245,  0.0113,  0.0060,  0.0336,  0.0041, -0.0141, -0.0047,
            0.0032,  0.0972,  0.1008, -0.0004,  0.0144,  0.0022, -0.0162,
            0.0191,  0.0372, -0.0330, -0.0005,  0.0441, -0.0256,  0.0389,
            0.0086,  0.0316, -0.0663, -0.0294, -0.0151, -0.0086, -0.0396]]],


        [[[ 0.0364, -0.0321,  0.0042, -0.0083, -0.0294,  0.0416,  0.0336,
           -0.0247, -0.0213, -0.0105,  0.0050, -0.0852,  0.0297, -0.0213,
           -0.0364, -0.0285, -0.0491,  0.0658, -0.0181,  0.0208,  0.0070,
            0.0470,  0.0596,  0.0012, -0.0463,  0.0034, -0.0282,  0.0139,
            0.0180, -0.0326, -0.0023, -0.0328,  0.0243, -0.0415, -0.0047,
           -0.0364,  0.0096, -0.0071, -0.0086, -0.0091, -0.0029,  0.0331,
           -0.0040,  0.0303, -0.0313, -0.0345,  0.0125,  0.0043,  0.0196,
            0.0319,  0.0198,  0.0653, -0.0160,  0.0038,  0.0699, -0.0086]]]],
       dtype=torch.float16)
2025-05-16 03:03:08.916799 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 57],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0308, -0.0103,  0.0252,  0.0205,  0.0008, -0.0149, -0.0045,
           -0.0037, -0.0302, -0.0057, -0.0076, -0.0164,  0.0144, -0.0307,
           -0.0119,  0.0182,  0.0094, -0.0258, -0.0386,  0.0335,  0.0028,
           -0.0309, -0.0862,  0.0087,  0.0147,  0.0480,  0.0157,  0.0615,
           -0.0141, -0.0120, -0.0184, -0.0014,  0.0464,  0.0319,  0.0031,
           -0.0143,  0.0223, -0.0138, -0.0171,  0.0193,  0.0039, -0.0508,
            0.0692,  0.0130, -0.0044, -0.0080,  0.0223, -0.0383, -0.0503,
            0.0243, -0.0088,  0.0159,  0.0208,  0.0117,  0.0072, -0.0166,
            0.0317]]],


        [[[-0.0188, -0.0244,  0.0163,  0.0141, -0.0030, -0.0604,  0.0167,
            0.0186,  0.0067, -0.0374,  0.0368,  0.0314, -0.0260, -0.0317,
            0.0059,  0.0340, -0.0087, -0.0137,  0.0157, -0.0387, -0.0111,
            0.0070, -0.0326, -0.0057,  0.0666,  0.0308, -0.0046,  0.0374,
            0.0507,  0.0131, -0.0502, -0.0495, -0.0075, -0.0673,  0.0181,
           -0.0145, -0.0222, -0.0026, -0.0087, -0.0029, -0.0364,  0.0354,
            0.0069, -0.0222,  0.0666,  0.0135, -0.0384, -0.0034,  0.0003,
           -0.0050,  0.0529,  0.0443,  0.0161, -0.0687,  0.0629,  0.0034,
           -0.0059]]]], dtype=torch.float16)
2025-05-16 03:03:09.165911 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 58, 4, 128],"float16"), Tensor([2, 58, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 58],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0297,  0.0093,  0.0243,  0.0295,  0.0024,  0.0175,  0.0254,
           -0.0204,  0.0377,  0.0261, -0.0273, -0.0078,  0.0221,  0.0068,
            0.0561, -0.0149, -0.0336,  0.0311, -0.0178,  0.0403, -0.0018,
            0.0056, -0.0019, -0.0185, -0.0342, -0.0026,  0.0237,  0.0375,
            0.0654,  0.0369, -0.0123,  0.0099, -0.0150, -0.0113, -0.0903,
            0.0030,  0.0297,  0.0145, -0.0077, -0.0004,  0.0994,  0.0356,
           -0.0228, -0.0277, -0.0462,  0.0158, -0.0030,  0.0182, -0.0287,
           -0.0681, -0.0299, -0.0056, -0.0345, -0.0512, -0.0006, -0.0012,
           -0.0666,  0.0099]]],


        [[[ 0.0122,  0.0318,  0.0224, -0.0885,  0.0170,  0.0500,  0.0008,
           -0.0038,  0.0124, -0.0302,  0.0041, -0.0170,  0.0270,  0.0211,
           -0.0131, -0.0037, -0.0138, -0.0109,  0.0104,  0.0367, -0.0465,
           -0.0326, -0.0084, -0.0065,  0.0110, -0.0248, -0.0527,  0.0710,
            0.0053,  0.0334, -0.0420,  0.0040, -0.0022, -0.0104,  0.0288,
            0.0005,  0.0120, -0.0076, -0.0801,  0.0192,  0.0026,  0.0008,
           -0.0246,  0.0496,  0.0087,  0.0244, -0.0429, -0.0043, -0.0301,
           -0.0037,  0.0073,  0.0248, -0.0008, -0.0090,  0.0201,  0.0372,
            0.0173, -0.0132]]]], dtype=torch.float16)
2025-05-16 03:03:09.379838 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 59, 4, 128],"float16"), Tensor([2, 59, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 59],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0193,  0.0371,  0.0795, -0.0020, -0.0119, -0.0041,  0.0137,
           -0.0014,  0.0008,  0.0007,  0.0041, -0.0188, -0.0054,  0.0119,
           -0.0183,  0.0345, -0.0674, -0.0117,  0.0479, -0.0015, -0.0303,
            0.0281,  0.0019,  0.0351,  0.0189,  0.0312,  0.0096,  0.0437,
           -0.0268, -0.0676, -0.0253,  0.0291,  0.0037, -0.0098,  0.0079,
           -0.0215, -0.0756,  0.0006, -0.0690,  0.0142,  0.0017,  0.0151,
           -0.0030, -0.0152,  0.0080,  0.0406,  0.0489, -0.0396, -0.0165,
           -0.0113, -0.0193, -0.0031,  0.0025, -0.0053, -0.0100, -0.0139,
           -0.0048,  0.0008,  0.0193]]],


        [[[ 0.0115,  0.0462,  0.0066, -0.0836,  0.0038,  0.0134, -0.0123,
           -0.0308, -0.0180,  0.0285,  0.0232,  0.0133, -0.0242,  0.0697,
           -0.0253,  0.0040, -0.0070, -0.0063, -0.0292,  0.0206, -0.0079,
            0.0169, -0.0346,  0.0277,  0.0092,  0.0122,  0.0864, -0.0272,
           -0.0550, -0.0660, -0.0634,  0.0200,  0.0267, -0.0154, -0.0008,
            0.0037,  0.0073, -0.0159, -0.0033, -0.0465, -0.0131,  0.0349,
           -0.0176,  0.0248,  0.0067,  0.0069,  0.0642, -0.0122,  0.0181,
            0.0122, -0.0309, -0.0239,  0.0146, -0.0130,  0.0481, -0.0512,
            0.0262,  0.0188,  0.0081]]]], dtype=torch.float16)
2025-05-16 03:03:09.550212 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 60, 4, 128],"float16"), Tensor([2, 60, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 60],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0231,  0.0509, -0.0399,  0.0427, -0.1284, -0.0791, -0.0035,
           -0.0206, -0.0002, -0.0776, -0.0223,  0.0148,  0.0324,  0.0264,
            0.0040, -0.0705,  0.0429,  0.0756, -0.0062,  0.0058,  0.0521,
           -0.0133,  0.0125,  0.0167, -0.0070, -0.0201,  0.0352, -0.0116,
            0.0248,  0.0128, -0.1029, -0.0011,  0.0188,  0.0377,  0.0095,
            0.0156,  0.0127,  0.0305,  0.0285, -0.0253, -0.0082, -0.0065,
            0.0261, -0.0052,  0.0069,  0.0043, -0.0542, -0.0076,  0.0080,
            0.0037, -0.0345, -0.0354,  0.0009,  0.0086, -0.0174,  0.0126,
            0.0497,  0.0014,  0.0477,  0.0027]]],


        [[[ 0.1514, -0.0370, -0.0656, -0.0029, -0.0352, -0.0428,  0.0539,
           -0.0146, -0.0367, -0.0026,  0.0014, -0.0503, -0.0278, -0.0156,
           -0.0038,  0.0121, -0.0022,  0.0100, -0.0123,  0.0292,  0.0612,
           -0.0288,  0.0022,  0.0314, -0.0179, -0.0043,  0.0106, -0.0252,
            0.0217,  0.0006,  0.0376,  0.0636, -0.0317, -0.0104, -0.0063,
            0.0523, -0.0474, -0.0266,  0.0314,  0.0228,  0.0340,  0.0080,
            0.0352,  0.0033,  0.0792, -0.0712,  0.0518, -0.0037, -0.0179,
           -0.0274, -0.0158, -0.0044,  0.0199, -0.0031, -0.0676, -0.0296,
           -0.0458,  0.0053, -0.0315,  0.0360]]]], dtype=torch.float16)
2025-05-16 03:03:09.717009 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 61, 4, 128],"float16"), Tensor([2, 61, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 61],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-3.0136e-03,  3.0853e-02,  4.0405e-02, -2.8214e-02,  5.7602e-03,
            7.3059e-02,  8.0872e-03, -8.6548e-02,  1.3489e-01, -3.9032e-02,
           -7.3280e-03,  1.6113e-02,  2.7428e-03,  3.0121e-02,  2.3041e-02,
            3.7109e-02, -7.6866e-04, -2.0844e-02,  1.1696e-02, -2.4002e-02,
            3.0174e-03,  1.9150e-02, -2.2263e-02, -7.2784e-03, -1.2947e-02,
           -2.4551e-02, -3.0327e-04, -4.3304e-02,  1.1139e-02,  1.4557e-02,
           -4.6730e-03,  1.3039e-02, -6.6650e-02,  4.9133e-03, -4.0741e-03,
            1.7731e-02, -8.7891e-03, -6.8703e-03, -3.0884e-02,  3.5828e-02,
           -5.6496e-03,  2.1713e-02,  1.4488e-02,  4.8218e-02,  5.3955e-02,
           -2.1484e-02,  5.3062e-03,  2.3346e-02, -1.0437e-01,  8.0566e-03,
           -4.7272e-02, -4.0924e-02,  1.8417e-02, -9.9182e-05, -2.5787e-02,
           -7.0679e-02, -2.0798e-02,  1.3161e-02,  2.3773e-02,  1.6846e-02,
           -1.0033e-03]]],


        [[[ 7.0572e-03, -5.7159e-02,  3.5065e-02,  1.0681e-02, -2.6642e-02,
            5.5923e-03,  4.3732e-02,  2.3254e-02, -8.2626e-03, -4.0741e-02,
           -1.1444e-02,  3.5645e-02, -2.3136e-03,  5.2856e-02,  2.9327e-02,
           -2.0706e-02, -4.9683e-02,  1.0635e-02, -4.3793e-02, -2.3041e-02,
           -4.8447e-03,  4.5380e-02,  3.4332e-02, -2.8458e-02, -9.3079e-03,
           -5.1697e-02,  4.2381e-03, -7.2327e-02,  1.1070e-02,  4.2603e-02,
           -9.9030e-03,  3.0426e-02, -5.1514e-02, -3.7720e-02,  1.6174e-02,
            1.0376e-03,  4.5593e-02,  2.3483e-02, -3.0090e-02, -1.0513e-02,
           -3.6041e-02,  2.3865e-02, -3.2043e-02, -3.8879e-02,  5.8685e-02,
           -3.9387e-04,  1.1757e-02, -1.4725e-02, -3.1113e-02,  2.9480e-02,
           -1.5900e-02,  4.7180e-02,  3.0441e-02,  1.8295e-02, -9.9640e-03,
            1.4481e-02,  2.0859e-02, -6.2439e-02,  4.9713e-02,  2.3422e-02,
           -4.7112e-03]]]], dtype=torch.float16)
2025-05-16 03:03:09.882843 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 62, 4, 128],"float16"), Tensor([2, 62, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 62],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0542,  0.0244, -0.0501, -0.0249, -0.0105, -0.0349, -0.0168,
           -0.0015, -0.0222,  0.0547,  0.0028,  0.0095, -0.0034,  0.0087,
           -0.0002, -0.0249, -0.0036,  0.0534, -0.0174, -0.0148, -0.0714,
            0.0065, -0.0194, -0.0140, -0.0226,  0.0170,  0.0061, -0.0038,
           -0.0136,  0.0181,  0.0519,  0.0583,  0.0218,  0.0140, -0.0598,
            0.0077,  0.0251,  0.0245,  0.0003,  0.0122,  0.0254,  0.0319,
           -0.0607,  0.0145, -0.0172,  0.0858, -0.0011, -0.0265, -0.0173,
            0.0314, -0.0021,  0.0037,  0.0039, -0.0722,  0.0084, -0.0319,
            0.0205,  0.0435, -0.0609, -0.0184,  0.0132, -0.0153]]],


        [[[-0.0050,  0.0796,  0.0215,  0.0505, -0.0203,  0.0099,  0.0122,
            0.0508,  0.0069,  0.0543,  0.0055, -0.0108,  0.0182, -0.0285,
            0.0191,  0.0082, -0.0146, -0.0003,  0.0131,  0.0108, -0.0226,
           -0.0139, -0.0339, -0.0186, -0.0171,  0.0232, -0.0095,  0.0399,
            0.0493,  0.0054, -0.0231, -0.0353, -0.0417,  0.0101,  0.0032,
           -0.0481,  0.0079, -0.0162, -0.0048,  0.0162,  0.0072, -0.0736,
            0.0789, -0.0570,  0.0146,  0.0083, -0.0228,  0.0071, -0.0455,
           -0.0340, -0.0018, -0.0106, -0.0611, -0.0025,  0.0551,  0.0028,
            0.0228,  0.0050, -0.0206, -0.0906,  0.0406,  0.0262]]]],
       dtype=torch.float16)
2025-05-16 03:03:10.123182 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 63, 4, 128],"float16"), Tensor([2, 63, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 63],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0242, -0.0359,  0.0228,  0.0244, -0.0251,  0.0004,  0.0490,
           -0.0122, -0.0026,  0.0103,  0.0784,  0.0447,  0.0094,  0.0378,
            0.0509, -0.0334, -0.0278, -0.0446, -0.0494,  0.0027, -0.0004,
            0.0226, -0.0267, -0.0059,  0.0038,  0.0008, -0.0030, -0.0050,
           -0.0138, -0.0549, -0.0016,  0.0507,  0.0030, -0.0251,  0.0004,
           -0.0062, -0.0535,  0.0098,  0.0431,  0.0088,  0.0095,  0.0373,
            0.0269, -0.0433,  0.0302,  0.0229, -0.0300, -0.0654,  0.0336,
            0.0153, -0.0016, -0.0350, -0.0082, -0.0234, -0.0140,  0.0292,
           -0.0044, -0.0051, -0.0284, -0.0235,  0.0171, -0.0121,  0.0012]]],


        [[[ 0.0100, -0.0096, -0.0225,  0.0110,  0.0469, -0.0101, -0.0073,
           -0.0201,  0.0059,  0.0035, -0.0061, -0.0039,  0.0417, -0.0015,
           -0.0649, -0.0220, -0.0333,  0.0934, -0.0107, -0.0190,  0.0068,
            0.0101, -0.0136,  0.0276, -0.0149,  0.0233, -0.0463, -0.0193,
            0.0340,  0.0004, -0.0142,  0.0188, -0.0069,  0.0384, -0.0215,
           -0.0186, -0.0024, -0.0404,  0.0451,  0.0537, -0.0143, -0.0269,
           -0.0183, -0.0089, -0.0106, -0.0472, -0.0464,  0.0359, -0.0174,
           -0.0192,  0.0421,  0.0374, -0.0361,  0.0352,  0.0080,  0.0038,
           -0.0140,  0.0099,  0.0716,  0.0312,  0.0035, -0.0081, -0.0528]]]],
       dtype=torch.float16)
2025-05-16 03:03:10.326782 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 64, 4, 128],"float16"), Tensor([2, 64, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 64],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 3.7109e-02, -1.3214e-02, -4.7803e-05, -6.0059e-02,  6.2447e-03,
            6.0349e-03, -2.8915e-02,  5.2452e-05,  2.9160e-02,  6.2408e-03,
           -5.5328e-02, -2.0798e-02,  3.7140e-02, -2.6291e-02,  2.5192e-02,
            1.3954e-02, -3.0807e-02, -7.0524e-04,  4.0649e-02, -8.6288e-03,
            2.8442e-02,  7.0496e-03,  9.3365e-04,  1.3222e-02, -1.2177e-02,
           -6.5063e-02, -9.7427e-03,  4.5197e-02, -2.5803e-02,  6.5552e-02,
            1.1795e-02,  6.0791e-02, -2.4384e-02, -1.8272e-03,  2.1454e-02,
            4.2114e-02,  4.0649e-02, -6.2981e-03, -2.0874e-02,  1.5274e-02,
           -8.5907e-03,  1.8097e-02, -2.2339e-02, -6.9275e-03,  9.4681e-03,
            1.1703e-02, -1.1887e-02,  1.1757e-02, -1.0333e-01,  1.3977e-02,
           -4.3488e-03, -5.0476e-02,  3.9825e-02,  3.4393e-02,  1.0201e-02,
           -2.3727e-02,  4.6463e-03,  2.5696e-02,  1.0162e-02, -5.8105e-02,
           -3.9635e-03,  1.3634e-02, -4.2419e-03, -4.8859e-02]]],


        [[[-4.9011e-02,  4.2610e-03, -5.7297e-03, -7.1716e-02,  8.4076e-03,
           -5.5603e-02, -3.0640e-02, -1.1688e-02, -1.8982e-02,  4.1504e-02,
            3.6224e-02, -1.7822e-02, -7.8087e-03,  6.8283e-03,  6.9946e-02,
            3.2043e-02,  1.4114e-02, -1.4252e-02, -1.8570e-02, -1.7853e-02,
           -7.9269e-03,  6.6032e-03,  1.8845e-02, -2.5024e-02,  9.4147e-03,
           -3.8361e-02,  1.1360e-02, -3.7766e-04,  1.9852e-02,  8.5449e-03,
            2.0538e-02, -4.4136e-03, -1.9073e-02,  6.0883e-03, -2.4460e-02,
            1.1887e-02,  3.3760e-04,  2.5162e-02,  4.8431e-02,  4.1656e-02,
           -2.9354e-03, -3.0365e-02, -9.7885e-03, -1.2253e-02,  3.8391e-02,
           -1.4969e-02,  4.2992e-03,  3.5461e-02, -5.8044e-02,  1.2032e-02,
           -2.0866e-03,  2.2247e-02,  2.1118e-02, -9.9182e-03,  4.8798e-02,
            8.3542e-03,  2.6917e-02, -1.6937e-02, -2.0660e-02,  1.6693e-02,
           -1.0750e-02, -2.6138e-02, -3.3722e-02,  1.1673e-02]]]],
       dtype=torch.float16)
2025-05-16 03:03:10.569830 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 65, 4, 128],"float16"), Tensor([2, 65, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 65],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0014,  0.0157,  0.0138,  0.0379, -0.0276, -0.0144, -0.0201,
           -0.0147,  0.0069, -0.0107, -0.0117,  0.0288, -0.0330,  0.0080,
            0.0091, -0.0198, -0.0085, -0.0229,  0.0007, -0.0076,  0.0342,
            0.0447, -0.0019, -0.0357,  0.0304, -0.0243,  0.0214, -0.0050,
            0.0013,  0.0302, -0.0186,  0.0027,  0.0045,  0.0211,  0.0378,
            0.0183, -0.0065, -0.0204, -0.0075, -0.0156, -0.0375, -0.0010,
            0.0017, -0.0066,  0.0113,  0.0264, -0.0238,  0.0092, -0.0298,
           -0.0601, -0.0463,  0.0329,  0.0078,  0.0358, -0.0510, -0.0140,
            0.0004,  0.0587,  0.0063,  0.0078,  0.0467, -0.0091,  0.0269,
           -0.0197, -0.0128]]],


        [[[-0.0058,  0.0003, -0.0247,  0.0374,  0.0201, -0.0232,  0.0202,
            0.0112, -0.0092,  0.0758, -0.0069, -0.0342, -0.0221,  0.0352,
            0.0246,  0.0003, -0.0010, -0.0122, -0.0541, -0.0284, -0.0070,
            0.0004, -0.0112,  0.0162,  0.0131, -0.0506,  0.0163,  0.0331,
           -0.0039, -0.0089, -0.0345, -0.0120,  0.0048,  0.0092,  0.0215,
            0.0020,  0.0167, -0.0145,  0.0265, -0.0030, -0.0436, -0.0284,
           -0.0333,  0.0070, -0.0609,  0.0059, -0.0125,  0.0176, -0.0003,
            0.0659,  0.0170, -0.0173,  0.0124,  0.0461,  0.0026,  0.0210,
           -0.0836, -0.0139, -0.0008,  0.0025,  0.0428, -0.0060,  0.0587,
           -0.0290,  0.0124]]]], dtype=torch.float16)
2025-05-16 03:03:10.757190 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 66, 4, 128],"float16"), Tensor([2, 66, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 66],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.3618e-03,  2.7725e-02,  3.4714e-04,  2.7161e-02, -3.0792e-02,
           -1.1757e-02, -2.1469e-02,  2.9259e-03,  2.1881e-02, -1.4008e-02,
           -2.7878e-02,  1.2955e-02,  1.0437e-02, -2.2278e-02,  2.5787e-02,
           -6.3171e-02,  5.0659e-02,  3.6896e-02, -4.1771e-03, -2.6031e-02,
            1.5511e-02,  9.9792e-03, -4.4556e-02, -2.8885e-02,  3.1738e-02,
            1.3756e-02, -2.4017e-02, -1.6113e-02,  1.6220e-02,  5.6725e-03,
           -5.2147e-03,  2.2400e-02,  5.8327e-03,  2.9888e-03,  3.1616e-02,
           -2.2263e-02,  2.1782e-03, -1.1581e-02, -2.1210e-02, -9.8877e-02,
            2.6672e-02,  6.1005e-02, -1.5297e-02, -2.2751e-02,  4.5135e-02,
            1.9119e-02,  2.2278e-02,  2.2919e-02,  3.3966e-02, -8.3008e-03,
           -3.6713e-02, -1.3489e-02,  2.7180e-04, -8.0444e-02, -1.6342e-02,
           -7.7858e-03, -2.6688e-02, -5.2124e-02, -4.6968e-04, -1.5495e-02,
            5.2917e-02, -1.9455e-03, -2.8229e-04,  8.5938e-02,  2.7054e-02,
            2.8717e-02]]],


        [[[-1.6586e-02,  8.5297e-03,  2.6215e-02, -3.1311e-02, -2.7634e-02,
           -4.6158e-04, -7.3357e-03, -3.9062e-03,  3.4058e-02,  4.5700e-03,
            9.5978e-03, -3.3813e-02, -2.1805e-02, -2.8381e-02,  6.1798e-04,
            4.3182e-03, -3.1677e-02, -1.0139e-02, -1.0014e-03,  6.3553e-03,
           -1.6235e-02, -1.8082e-03, -2.2644e-02,  1.1463e-03, -5.2979e-02,
            7.5340e-04,  1.3847e-02,  1.2184e-02,  5.0697e-03, -2.7008e-02,
           -1.7746e-02, -4.1870e-02,  3.3234e-02, -1.0033e-03,  5.5603e-02,
           -2.1515e-02,  2.7878e-02, -1.7227e-02, -1.0788e-02,  5.2399e-02,
           -1.2444e-02, -3.0121e-02,  2.6505e-02,  9.1553e-03,  7.7332e-02,
            6.8665e-03, -3.4485e-02, -1.4374e-02,  3.4149e-02, -2.6703e-05,
           -3.4821e-02,  2.8214e-02,  3.8788e-02, -9.3079e-03,  7.3120e-02,
            3.9856e-02,  9.1171e-04,  4.9171e-03, -1.6724e-02,  1.4893e-02,
            2.1381e-03,  5.3062e-03, -4.4800e-02, -2.7969e-02, -8.2932e-03,
            1.9745e-02]]]], dtype=torch.float16)
2025-05-16 03:03:10.927905 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 67, 4, 128],"float16"), Tensor([2, 67, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 67],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 2.2156e-02, -1.2169e-02, -2.9007e-02, -2.0847e-03,  3.7567e-02,
            1.4305e-02,  3.6106e-03, -3.1021e-02, -3.3051e-02,  3.4866e-03,
            1.3647e-01,  1.3924e-02, -7.9346e-03,  4.7531e-03,  6.4011e-03,
            1.1932e-02,  1.4786e-02, -2.9236e-02, -2.8477e-03,  1.0696e-02,
            2.2079e-02, -4.8676e-02, -9.1797e-02,  1.4999e-02,  3.1250e-02,
           -5.4108e-02,  3.6602e-03,  1.2970e-04, -4.6616e-03, -1.2360e-03,
           -4.2542e-02,  1.5717e-02,  2.5879e-02,  1.3170e-03,  1.0834e-03,
            1.1124e-02, -1.3535e-02,  1.3771e-02,  1.5289e-02,  1.0834e-02,
           -2.1194e-02,  6.0669e-02, -2.1118e-02, -8.5678e-03, -1.0509e-03,
           -3.3264e-02,  3.4424e-02, -3.8696e-02,  4.8187e-02,  1.0460e-02,
           -2.5925e-02, -4.6387e-02,  1.6968e-02,  2.8931e-02, -1.9836e-02,
           -4.6875e-02, -2.1210e-02,  4.1077e-02,  5.4016e-02,  1.5419e-02,
            1.0155e-02, -3.1433e-02, -1.1559e-02, -2.5589e-02, -1.4420e-02,
           -2.6581e-02,  3.0243e-02]]],


        [[[-3.0022e-03,  1.0132e-02, -1.7319e-02, -2.6398e-02,  1.7715e-02,
           -2.2751e-02,  1.3931e-02, -9.2773e-03,  1.6800e-02, -1.9379e-02,
           -6.2447e-03,  3.5614e-02, -3.7346e-03,  1.6617e-02,  1.9989e-02,
            1.0544e-02,  2.5787e-02,  1.2225e-01, -5.6976e-02, -8.0566e-03,
           -1.8845e-02,  5.1331e-02, -2.7802e-02, -5.3177e-03,  4.4899e-03,
           -1.5106e-02,  7.9651e-03,  1.8555e-02, -9.5520e-03,  5.9448e-02,
            6.1798e-03,  3.6469e-03, -2.3376e-02, -4.2053e-02, -1.7487e-02,
            1.6907e-02, -1.2054e-03,  2.2369e-02, -8.2321e-03, -2.6993e-02,
           -3.0716e-02, -4.1962e-03, -2.4918e-02,  2.1744e-03, -4.1008e-03,
           -2.0142e-02,  9.4070e-03,  1.7838e-02, -2.0767e-02,  3.1494e-02,
            5.4245e-03, -6.0425e-03, -3.1769e-02,  7.1411e-03, -8.3435e-02,
           -2.7573e-02, -4.9782e-03,  3.1708e-02, -3.7018e-02,  2.4002e-02,
            1.5686e-02, -4.9591e-04, -1.9821e-02,  1.0956e-02, -1.2444e-02,
            3.5950e-02,  2.5604e-02]]]], dtype=torch.float16)
2025-05-16 03:03:11.099358 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 68, 4, 128],"float16"), Tensor([2, 68, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 68],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.9882e-02,  6.4011e-03, -6.8054e-03, -4.9866e-02, -2.7435e-02,
            2.4979e-02,  6.3354e-02,  3.8544e-02,  1.1292e-02, -1.7395e-02,
            2.9877e-02,  7.6050e-02, -5.5786e-02, -1.7456e-02, -3.8605e-03,
            7.3486e-02,  4.1046e-03, -2.9282e-02, -2.2446e-02,  2.7298e-02,
            1.8967e-02,  1.9974e-02, -1.6037e-02, -2.1057e-02,  7.6523e-03,
           -4.9438e-03,  1.7197e-02,  4.7607e-02,  2.4567e-03, -1.7822e-02,
            4.8370e-03, -3.9795e-02,  6.3705e-03, -8.2092e-03, -2.0447e-03,
           -8.3313e-03, -4.0039e-02, -2.6794e-02,  1.3412e-02, -2.0020e-02,
           -1.9028e-02, -5.0659e-03,  2.2125e-02, -2.4857e-02, -7.6904e-03,
           -2.1042e-02, -4.7241e-02, -2.5848e-02,  1.3062e-02,  7.4036e-02,
            9.0561e-03, -4.0375e-02,  4.1992e-02, -2.3087e-02,  6.4201e-03,
           -1.9470e-02,  2.7237e-02, -4.2999e-02, -2.6749e-02,  2.3636e-02,
           -3.0441e-03,  3.3966e-02,  1.0391e-02,  2.8732e-02, -1.0887e-02,
           -9.9945e-03, -4.4159e-02,  4.2236e-02]]],


        [[[ 1.0101e-02, -2.4414e-02,  4.7035e-03,  7.4219e-02, -8.9493e-03,
           -7.9346e-03, -3.2837e-02,  4.3671e-02, -6.3934e-03,  5.9448e-02,
            1.4435e-02, -2.1896e-02, -3.3569e-02,  3.4027e-02, -1.4069e-02,
            8.3008e-03,  1.3367e-02, -6.9656e-03,  1.5472e-02, -1.6022e-03,
           -2.1210e-03, -2.4963e-02, -3.3112e-02,  3.1174e-02, -3.4943e-02,
            1.0628e-02, -8.3771e-03,  1.1887e-02, -5.6824e-02, -1.6174e-02,
           -3.1189e-02,  8.3084e-03, -2.0447e-02, -4.9782e-04, -2.3560e-02,
            2.9526e-02,  4.1168e-02,  5.9929e-03,  4.1748e-02, -7.0435e-02,
           -1.8585e-02, -7.4997e-03, -3.6316e-02, -4.2358e-02, -3.9948e-02,
           -1.2222e-02,  2.4139e-02,  1.8854e-03,  1.3275e-02,  3.6316e-02,
            3.7506e-02,  1.6510e-02,  6.8542e-02, -5.1056e-02,  3.2715e-02,
           -9.9182e-05, -2.8839e-02,  5.5962e-03,  4.2391e-04,  1.2032e-02,
           -3.9551e-02,  4.8187e-02, -4.0405e-02,  9.6893e-03,  2.8961e-02,
           -1.4191e-03, -2.6642e-02,  3.2410e-02]]]], dtype=torch.float16)
2025-05-16 03:03:11.340388 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 69, 4, 128],"float16"), Tensor([2, 69, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 69],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0299, -0.0457,  0.0090,  0.0133, -0.0479, -0.0974,  0.0321,
            0.0156,  0.0183,  0.0274, -0.0308, -0.0142,  0.0173,  0.0159,
           -0.0366,  0.0050,  0.0181, -0.0136, -0.0285, -0.0174,  0.0285,
           -0.0011,  0.0318,  0.0086, -0.0160,  0.0118, -0.0086,  0.0136,
            0.0333, -0.0327,  0.0398,  0.0123,  0.0353,  0.0110,  0.0039,
           -0.0189, -0.0129,  0.0081, -0.0194,  0.0267, -0.0466,  0.0043,
            0.0071, -0.0425,  0.0094,  0.0338,  0.0122,  0.0492, -0.0076,
            0.0377, -0.0486,  0.0080, -0.0612,  0.0081, -0.0085,  0.0746,
            0.0773, -0.0663,  0.0013,  0.0039, -0.0326, -0.0149, -0.0095,
            0.0021,  0.0157,  0.0107,  0.0064,  0.0094,  0.0020]]],


        [[[-0.0251,  0.0274,  0.0153, -0.0067, -0.0075, -0.0007, -0.0113,
           -0.0071, -0.0227,  0.0411, -0.0413, -0.0512,  0.0325, -0.0310,
            0.0046,  0.0599,  0.0140, -0.0150,  0.0267,  0.0029, -0.0187,
           -0.0032, -0.0543, -0.0239,  0.0059,  0.0410,  0.0055,  0.0300,
            0.0019, -0.0016,  0.0071,  0.0164,  0.0400, -0.0319,  0.0049,
           -0.0096,  0.0384, -0.0096, -0.0292,  0.0928, -0.0047, -0.0396,
            0.0351,  0.0118,  0.0035, -0.0154, -0.0125,  0.0284, -0.0110,
            0.0455,  0.0031,  0.0002,  0.0257, -0.0381, -0.0033,  0.0283,
           -0.0091,  0.0414,  0.0042, -0.0121, -0.0266,  0.0092, -0.0942,
            0.0239, -0.0144, -0.0308, -0.0205, -0.0072, -0.0270]]]],
       dtype=torch.float16)
2025-05-16 03:03:11.528401 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 70, 4, 128],"float16"), Tensor([2, 70, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 70],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0203, -0.0244, -0.0033, -0.0558,  0.0155,  0.0126,  0.0014,
           -0.0018, -0.0501,  0.0179, -0.0191, -0.0452, -0.0274, -0.0421,
            0.0707,  0.0164, -0.0028, -0.0123, -0.0295, -0.0214, -0.0202,
            0.0020,  0.0704,  0.0035, -0.0077,  0.0225, -0.0203, -0.0129,
           -0.0035, -0.0325,  0.0242,  0.0187, -0.0189, -0.0107,  0.0129,
           -0.0069,  0.0114,  0.0682,  0.0348, -0.0026,  0.0197,  0.0151,
           -0.0144, -0.0003,  0.0180,  0.0191,  0.0767, -0.0079,  0.0127,
            0.0092, -0.0098, -0.0609,  0.0285, -0.0260,  0.0183, -0.0111,
            0.0335, -0.0148, -0.0159,  0.0149, -0.0053,  0.0123, -0.0082,
           -0.0385,  0.0227, -0.0094,  0.0013, -0.0139,  0.0023, -0.0199]]],


        [[[ 0.0113,  0.0006,  0.0293,  0.0652, -0.0079,  0.0081,  0.0368,
            0.0222, -0.0034, -0.0304, -0.0303,  0.0238, -0.0051,  0.0392,
           -0.0643,  0.0254, -0.0460,  0.0637,  0.0238, -0.0292, -0.0212,
            0.0139,  0.0037, -0.0161, -0.0335,  0.0110,  0.0472, -0.0199,
            0.0188,  0.0463,  0.0032, -0.0009, -0.0149,  0.0523, -0.0172,
            0.0341, -0.0301, -0.0685,  0.0094,  0.0057,  0.0233,  0.0064,
           -0.0165,  0.0021,  0.0030, -0.0282, -0.0775, -0.0139, -0.0221,
            0.0614, -0.0301, -0.0558,  0.0196, -0.0100,  0.0182,  0.0461,
           -0.0558,  0.0098,  0.0200,  0.0392,  0.0071,  0.0116, -0.0034,
           -0.0175, -0.0176, -0.0302, -0.0627, -0.0325,  0.0028,  0.0472]]]],
       dtype=torch.float16)
2025-05-16 03:03:11.768731 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 71, 4, 128],"float16"), Tensor([2, 71, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 71],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0100, -0.0015, -0.0099, -0.0161,  0.0131,  0.0309,  0.0284,
            0.0224,  0.0077, -0.0240, -0.0292, -0.0296, -0.0118,  0.0287,
            0.0146, -0.0510,  0.0110, -0.0180, -0.0282,  0.0274, -0.0033,
           -0.0079, -0.0256,  0.0054, -0.0033, -0.0059,  0.0124,  0.0075,
           -0.0067,  0.0173,  0.0440,  0.0194, -0.0194,  0.0102, -0.0046,
           -0.0080, -0.0176, -0.0376, -0.0133, -0.0064, -0.0107, -0.0145,
            0.0460,  0.0091, -0.0062,  0.0118,  0.0366,  0.0674,  0.0216,
           -0.0163,  0.0118, -0.0189, -0.0421,  0.0294, -0.0239,  0.0292,
           -0.0144, -0.0227, -0.0124, -0.0087,  0.0201, -0.0438,  0.0170,
           -0.0343,  0.0448,  0.0187, -0.0465, -0.0216,  0.0055,  0.0297,
            0.0064]]],


        [[[-0.0442, -0.0120, -0.0032, -0.0014, -0.0322,  0.0010, -0.0245,
            0.0080, -0.0320,  0.0026, -0.0391, -0.0154, -0.0115,  0.0070,
            0.0312, -0.0115, -0.0108,  0.0425,  0.0682,  0.0171, -0.0160,
            0.0075,  0.0168,  0.0185, -0.0079,  0.0164,  0.0141,  0.0151,
            0.0135,  0.0007, -0.0103, -0.0050, -0.0450, -0.0794,  0.0096,
            0.0547, -0.0217, -0.0328,  0.0013, -0.0006, -0.0307, -0.0106,
            0.0409,  0.0557,  0.0280,  0.0050,  0.0148,  0.0120, -0.0153,
            0.0074,  0.0188,  0.0035,  0.0083,  0.0167,  0.0120,  0.0034,
            0.0181,  0.0224, -0.0069, -0.0096,  0.0097, -0.0260, -0.0305,
            0.0045,  0.0087,  0.0021,  0.0098, -0.0107, -0.0363, -0.0209,
            0.0063]]]], dtype=torch.float16)
2025-05-16 03:03:11.961865 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 72, 4, 128],"float16"), Tensor([2, 72, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 72],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.0595e-03,  1.7685e-02,  6.3286e-03,  4.8798e-02, -2.8381e-02,
            4.3564e-03, -3.3321e-03,  3.3813e-02, -2.2858e-02,  1.3947e-02,
            4.2572e-03,  2.9922e-02, -4.1237e-03,  9.0637e-03,  2.1362e-02,
            2.5864e-02, -1.3161e-02,  1.1490e-02,  3.0533e-02, -1.3084e-02,
            5.7281e-02, -7.4463e-03, -3.9749e-03, -5.8098e-03,  1.7944e-02,
           -1.6918e-03,  1.2512e-02,  5.9387e-02,  2.2507e-02,  1.5526e-02,
           -2.3270e-03, -1.3237e-02,  2.9182e-03,  2.5345e-02, -2.3975e-03,
           -3.9124e-02,  2.5894e-02, -4.9805e-02,  1.3535e-02,  3.2425e-03,
           -8.2474e-03, -8.4381e-03,  4.4525e-02, -2.0721e-02, -1.1635e-02,
           -2.1255e-02, -2.1347e-02, -1.7334e-02,  3.3989e-03, -1.2207e-02,
            9.1019e-03, -6.2164e-02, -3.0396e-02, -2.3232e-03, -4.4281e-02,
           -8.3771e-03, -1.7410e-02, -8.8806e-03, -9.0103e-03, -8.8959e-03,
           -2.2491e-02, -2.0660e-02, -4.0817e-04,  1.2024e-02,  7.5607e-03,
           -1.9363e-02,  1.2421e-02, -4.6082e-02,  2.4063e-02, -3.5629e-03,
            1.1955e-02, -3.4180e-03]]],


        [[[-1.3817e-02,  3.7193e-03, -1.1108e-02,  1.5465e-02, -7.5455e-03,
           -2.6672e-02,  3.9429e-02,  2.8732e-02, -2.6718e-02,  1.3847e-02,
            1.4275e-02,  3.5034e-02,  1.7136e-02, -1.2062e-02, -1.8730e-03,
            2.6382e-02, -7.2556e-03, -5.5084e-02, -3.3569e-03,  3.9093e-02,
            1.7731e-02, -1.0788e-02,  7.8583e-03, -2.3865e-02,  1.8890e-02,
           -2.7084e-02, -4.2816e-02, -2.1042e-02, -1.2802e-02, -3.2654e-02,
            1.1810e-02,  2.0050e-02,  4.6631e-02, -1.4587e-02,  2.6062e-02,
            1.3718e-02, -2.7252e-02,  1.1353e-02,  1.7242e-03,  8.6670e-03,
           -3.6285e-02, -2.5024e-02,  7.9346e-04,  2.4948e-02,  3.0098e-03,
           -6.5796e-02,  1.3054e-02,  3.7659e-02,  1.4400e-03,  1.5640e-02,
           -5.2124e-02, -2.9984e-03,  2.7893e-02, -4.2236e-02, -3.0022e-03,
            5.3978e-03, -4.9805e-02,  1.7700e-02,  1.3550e-02,  1.4870e-02,
           -5.7678e-03,  2.9022e-02,  4.3091e-02,  9.0790e-03,  7.7171e-03,
            4.6849e-04, -8.0338e-03, -2.3670e-03,  4.1656e-03, -1.9073e-02,
            8.7738e-05,  3.7289e-03]]]], dtype=torch.float16)
2025-05-16 03:03:12.219716 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 73, 4, 128],"float16"), Tensor([2, 73, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 73],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0090, -0.0606,  0.0316,  0.0225,  0.0194,  0.0049,  0.0014,
           -0.0202,  0.0386,  0.0280,  0.0040, -0.0286,  0.0098, -0.0169,
           -0.0115,  0.0138,  0.0116, -0.0213, -0.0100,  0.0529, -0.0274,
            0.0328, -0.0056,  0.0129,  0.0198,  0.0291, -0.0280, -0.0372,
           -0.0559, -0.0022, -0.0100, -0.0051, -0.0384, -0.0050, -0.0029,
            0.0053, -0.0002,  0.0144, -0.0320, -0.0373, -0.0024, -0.0216,
           -0.0140,  0.0276,  0.0039,  0.0463, -0.0058,  0.0042,  0.0122,
           -0.0158, -0.0112,  0.0153,  0.0340,  0.0076, -0.0052, -0.0114,
            0.0310,  0.0320, -0.0025,  0.0143, -0.0028, -0.0041,  0.0042,
            0.0256, -0.0140,  0.0013, -0.0298, -0.0277,  0.0291, -0.0024,
           -0.0113, -0.0388,  0.0261]]],


        [[[ 0.0219, -0.0291, -0.0039, -0.0352, -0.0025, -0.0330,  0.0303,
           -0.0273, -0.0033, -0.0339, -0.0117,  0.0721, -0.0533, -0.0083,
            0.0009,  0.0168, -0.0250,  0.0017,  0.0406, -0.0253, -0.0144,
           -0.0072,  0.0146, -0.0115,  0.0229, -0.0027,  0.0227, -0.0486,
            0.0020,  0.0113,  0.0275,  0.0076, -0.0089, -0.0138,  0.0231,
            0.0095,  0.0105,  0.0153,  0.0099, -0.0167, -0.0503,  0.0312,
           -0.0114,  0.0157, -0.0326,  0.0311,  0.0079, -0.0109, -0.0105,
           -0.0439, -0.0123,  0.0149, -0.0060, -0.0299,  0.0014,  0.0058,
            0.0652, -0.0057,  0.0078, -0.0213,  0.0126, -0.0417, -0.0057,
           -0.0091,  0.0163, -0.0248,  0.0005,  0.0271,  0.0316,  0.0351,
            0.0483, -0.0135,  0.0314]]]], dtype=torch.float16)
2025-05-16 03:03:12.479174 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 74, 4, 128],"float16"), Tensor([2, 74, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 74],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-4.6234e-02,  1.3710e-02, -3.8624e-03,  1.9608e-03,  4.0054e-04,
            7.2060e-03,  4.8523e-02, -3.4668e-02,  1.4290e-02,  3.4058e-02,
           -5.2299e-03,  1.8204e-02,  1.3496e-02,  1.7967e-03, -4.6921e-03,
            4.7684e-04, -7.8106e-04, -5.2032e-03,  3.4698e-02,  7.0534e-03,
           -1.9073e-05,  1.7710e-03,  4.5532e-02,  6.0654e-03,  4.3182e-02,
           -2.8458e-02,  3.4149e-02, -1.7509e-03, -2.7084e-03, -5.2299e-03,
           -1.2112e-03,  8.9645e-03,  1.7303e-02, -3.6377e-02,  2.1973e-03,
            8.0322e-02,  1.2512e-02,  3.7994e-03,  9.1248e-03,  4.8141e-03,
           -5.0934e-02,  2.4719e-02, -6.2790e-03, -2.1759e-02, -6.5231e-03,
           -2.9007e-02, -2.4963e-02, -1.7410e-02,  9.0790e-03,  3.9406e-03,
            3.5614e-02, -6.2256e-02,  6.3972e-03, -1.5841e-03, -9.6512e-03,
           -3.0746e-03,  3.6240e-03,  2.0142e-03, -1.1955e-02,  3.3836e-03,
           -9.0485e-03, -1.4160e-02, -5.2399e-02, -1.3779e-02, -2.1545e-02,
           -1.7166e-02, -2.1088e-02, -4.1443e-02,  1.1234e-03,  5.5756e-02,
            4.3259e-03,  1.0040e-02, -4.6043e-03, -8.3923e-03]]],


        [[[-3.0731e-02, -2.9068e-02, -1.0910e-02, -1.8646e-02, -4.6875e-02,
            7.6965e-02,  5.2704e-02,  5.3375e-02,  1.5465e-02, -1.9470e-02,
           -8.2626e-03,  6.0425e-02,  2.4918e-02, -1.1803e-02, -6.4087e-03,
            9.2621e-03,  2.1622e-02, -4.0955e-02, -4.9286e-02, -1.2455e-03,
           -8.3008e-03, -1.1421e-02,  1.3214e-02,  8.6212e-03, -5.1453e-02,
           -1.4771e-02, -3.2990e-02, -1.2009e-02, -1.5526e-02, -2.6855e-02,
           -2.9510e-02, -1.1993e-02,  1.1635e-02, -4.4128e-02,  2.1454e-02,
           -1.4236e-02, -4.9553e-03,  7.6599e-03, -2.4536e-02, -2.2926e-03,
            2.2583e-02,  2.5223e-02,  1.0529e-02,  1.6117e-03,  2.4399e-02,
            2.7657e-03,  2.3327e-03, -4.4281e-02, -1.9646e-03,  1.6266e-02,
            5.5786e-02,  7.0343e-03, -1.2901e-02, -7.8583e-03, -1.4282e-02,
            5.5656e-03,  4.6539e-03,  1.9302e-02, -3.6545e-03,  8.5754e-03,
            6.9275e-03,  1.4046e-02, -1.0468e-02,  5.3711e-02, -1.3031e-02,
            2.4834e-03,  2.1957e-02,  1.4206e-02,  1.5266e-02, -6.9580e-03,
            1.8143e-02,  1.6495e-02, -6.0638e-02,  7.1831e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:12.672267 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 75, 4, 128],"float16"), Tensor([2, 75, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 75],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0291,  0.0169, -0.0094,  0.0274,  0.0123, -0.0025, -0.0488,
           -0.0113, -0.0157, -0.0064, -0.0314, -0.0572, -0.0420,  0.0405,
           -0.0425, -0.0124, -0.0644, -0.0091,  0.0108,  0.0189,  0.0258,
            0.0333, -0.0057,  0.0022,  0.0032, -0.0273,  0.0254,  0.0230,
            0.0536,  0.0075,  0.0555, -0.0301, -0.0153,  0.0167,  0.0058,
           -0.0020,  0.0085, -0.0041,  0.0106,  0.0062, -0.0064,  0.0291,
            0.0003,  0.0273, -0.0098,  0.0207, -0.0203, -0.0053, -0.0267,
           -0.0155, -0.0160,  0.0160,  0.0071,  0.0381,  0.0385, -0.0175,
           -0.0196, -0.0064, -0.0700, -0.0426,  0.0504, -0.0605,  0.0572,
            0.0307, -0.0164, -0.0432,  0.0627, -0.0019,  0.0016,  0.0084,
            0.0158, -0.0073, -0.0235,  0.0042,  0.0052]]],


        [[[-0.0101, -0.0186,  0.0294, -0.0211, -0.0093, -0.0238, -0.0155,
            0.0228, -0.0315,  0.0382,  0.0115, -0.0036,  0.0075, -0.0360,
            0.0146,  0.0304,  0.0088, -0.0091, -0.0403,  0.0439,  0.0118,
           -0.0225, -0.0093,  0.0458, -0.0224,  0.0468,  0.0360, -0.0062,
            0.0074,  0.0169,  0.0303, -0.0294,  0.0114,  0.0061,  0.0190,
            0.0031,  0.0029, -0.0233, -0.0016, -0.0381, -0.0489, -0.0137,
           -0.0132,  0.0035,  0.0391,  0.0106,  0.0058, -0.0022,  0.0221,
           -0.0189,  0.0072,  0.0433, -0.0104,  0.0053, -0.0101, -0.0743,
           -0.0090, -0.0209, -0.0118, -0.0310,  0.0166, -0.0019, -0.0007,
            0.0203,  0.0380,  0.0170,  0.0080,  0.0205, -0.0010, -0.0236,
           -0.0154,  0.0093, -0.0128, -0.0007, -0.0187]]]],
       dtype=torch.float16)
2025-05-16 03:03:12.918512 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 76, 4, 128],"float16"), Tensor([2, 76, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 76],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.8295e-02,  3.8208e-02, -4.1924e-03, -1.4557e-02, -8.3237e-03,
           -1.8097e-02, -2.7695e-03, -9.7504e-03,  7.8430e-03,  2.7924e-02,
            9.7839e-02, -1.4694e-02, -2.5757e-02, -6.8817e-03, -2.0126e-02,
           -2.6855e-02, -3.6011e-02, -1.3351e-03, -5.1758e-02, -5.3589e-02,
           -1.3168e-02,  1.0124e-02,  3.1662e-04,  2.2068e-03,  1.7059e-02,
            6.6833e-02, -1.3170e-03,  3.0327e-03,  1.9318e-02, -2.5375e-02,
           -2.2705e-02, -8.3542e-03, -2.3346e-03,  4.8553e-02,  1.5335e-02,
           -1.3344e-02, -2.4155e-02,  8.1940e-03,  3.3295e-02,  2.7496e-02,
            4.1809e-02, -1.1688e-02,  2.5360e-02,  8.2779e-03, -1.1108e-02,
           -4.5135e-02,  1.8280e-02,  1.5152e-02, -1.9409e-02, -8.4290e-02,
            2.6474e-02,  1.0666e-02,  3.3188e-03, -2.2873e-02, -4.9629e-03,
           -1.9669e-02,  1.0521e-02,  1.1551e-02, -3.4180e-03,  3.1677e-02,
           -2.5101e-02,  1.9531e-02, -4.9591e-05,  1.6129e-02, -2.0294e-03,
           -2.8397e-02, -3.5217e-02,  5.1308e-03,  9.6703e-04,  7.2754e-02,
            1.1578e-03, -4.6654e-03, -1.1917e-02, -1.0330e-02,  5.1384e-03,
           -2.0081e-02]]],


        [[[ 1.2428e-02, -9.3002e-03, -8.0948e-03, -2.8091e-02, -7.1259e-03,
           -1.1803e-02,  7.9422e-03,  1.1314e-02,  1.1482e-03, -1.6235e-02,
           -2.7481e-02,  2.8091e-02,  6.8321e-03, -2.9297e-03, -3.4943e-02,
            1.4328e-02, -3.1433e-03,  2.1545e-02, -6.6948e-03,  1.1574e-02,
            9.2773e-03,  1.9302e-02, -3.6713e-02, -5.5962e-03,  3.2166e-02,
           -3.7506e-02,  2.1072e-02,  2.0752e-03,  2.1317e-02,  6.0310e-03,
            1.1353e-02, -2.1935e-04,  1.5457e-02, -1.7441e-02,  6.5689e-03,
            4.0192e-02,  1.4053e-02, -2.1400e-03,  2.4292e-02, -1.5388e-02,
            1.4320e-02,  2.0172e-02,  2.3209e-02,  7.2365e-03, -3.3661e-02,
           -7.4806e-03, -2.3605e-02,  1.7181e-02,  2.9221e-02,  2.8030e-02,
            3.4790e-02,  1.4801e-02, -1.9730e-02, -1.2350e-03, -8.0078e-02,
           -8.8120e-04,  1.4572e-02,  5.4092e-03,  8.5754e-03,  1.8173e-02,
           -1.8219e-02, -8.1635e-03, -1.7548e-03, -9.9335e-03, -4.9561e-02,
            5.7373e-03, -4.0802e-02, -2.4490e-03, -1.8158e-03, -1.4191e-03,
            1.2245e-02, -1.0536e-02, -7.8506e-03, -1.5526e-03,  1.1711e-02,
           -1.2199e-02]]]], dtype=torch.float16)
2025-05-16 03:03:13.111763 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 77, 4, 128],"float16"), Tensor([2, 77, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 77],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 3.6895e-05,  1.4679e-02,  6.4163e-03,  3.0479e-03,  1.6525e-02,
           -1.1536e-02, -1.7227e-02, -1.1238e-02,  3.0380e-02,  1.5991e-02,
           -3.9459e-02,  2.0325e-02, -2.4460e-02,  5.5328e-02, -2.4780e-02,
            5.1460e-03, -4.5288e-02, -1.6235e-02,  1.4297e-02,  5.6335e-02,
           -1.5686e-02,  1.8921e-02,  6.7406e-03,  2.7634e-02, -3.4027e-02,
           -3.1174e-02,  4.3488e-03,  1.4160e-02, -2.2705e-02, -4.3411e-03,
            2.5349e-03,  4.2152e-03,  1.4717e-02, -4.7264e-03, -9.2407e-02,
           -8.9111e-03,  3.8849e-02,  2.2858e-02,  6.4545e-03, -2.6413e-02,
           -1.3680e-02,  2.4323e-02,  1.1787e-02,  5.2071e-03,  3.4103e-03,
            1.1368e-02,  3.8528e-04,  2.6512e-04, -1.3321e-02, -1.6769e-02,
           -7.5340e-03,  1.4786e-02, -5.7793e-03, -2.4872e-02, -3.2806e-03,
           -5.1178e-02,  3.8116e-02,  1.5747e-02, -5.7602e-03, -3.6812e-04,
           -4.2450e-02, -3.7933e-02,  6.6650e-02,  1.8494e-02,  2.6962e-02,
           -1.1284e-02,  9.6283e-03,  5.0888e-03,  1.0391e-02, -2.0859e-02,
            8.9264e-03,  9.5749e-03, -2.9541e-02, -2.0645e-02,  1.2657e-02,
            1.8509e-02,  2.3666e-02]]],


        [[[-1.5442e-02, -2.9114e-02, -1.4782e-03,  1.4595e-02, -7.8735e-03,
           -7.7248e-03,  8.9951e-03, -1.2810e-02,  2.3483e-02, -1.0986e-02,
           -1.7624e-02, -2.3849e-02, -2.2293e-02, -3.9291e-04,  6.2317e-02,
            1.4744e-03,  2.7710e-02, -3.9276e-02,  6.8665e-04,  1.1887e-02,
           -1.8036e-02, -2.0554e-02, -2.3438e-02, -8.6212e-03,  2.6489e-02,
            6.1951e-02, -3.3295e-02, -5.1361e-02,  5.5351e-03,  1.9932e-03,
           -1.8005e-03,  2.3529e-02,  9.5367e-03,  6.9214e-02, -3.2349e-02,
            6.2561e-03, -9.7198e-03, -1.0612e-02,  5.8258e-02, -1.4587e-02,
           -2.0172e-02, -2.4052e-03, -4.6844e-03,  5.3406e-04, -2.7283e-02,
            7.5134e-02,  2.4261e-02,  1.2634e-02,  6.1989e-03,  6.6986e-03,
           -2.0889e-02,  3.5191e-03,  2.0599e-02, -5.4245e-03,  3.0563e-02,
            1.1551e-02,  2.0050e-02,  1.3733e-02, -1.8616e-02, -9.0759e-02,
           -4.4174e-03,  3.3295e-02, -1.8112e-02,  2.7237e-03, -2.0950e-02,
           -4.6082e-03,  3.3997e-02, -6.7291e-03,  5.5939e-02,  6.3057e-03,
           -3.1082e-02, -3.8086e-02, -4.0817e-04, -3.0411e-02,  2.0493e-02,
           -4.7791e-02,  1.3985e-02]]]], dtype=torch.float16)
2025-05-16 03:03:13.293244 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 78, 4, 128],"float16"), Tensor([2, 78, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 78],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.7158e-02,  3.3936e-02,  8.3160e-04, -5.5237e-02,  1.6373e-02,
           -1.3794e-02, -3.4576e-02,  1.2276e-02, -1.5587e-02, -4.8279e-02,
            2.1225e-02, -1.4095e-03,  4.8737e-02,  3.9886e-02, -2.5749e-03,
            6.7062e-03, -2.8946e-02,  9.0942e-03,  4.4060e-03, -1.4038e-03,
            3.5156e-02,  1.7166e-02,  1.2688e-02,  9.7084e-04, -9.1019e-03,
            5.0598e-02, -1.9852e-02,  1.5839e-02,  1.4908e-02, -5.6458e-03,
            2.8473e-02,  1.5350e-02, -1.5717e-02, -2.7710e-02,  1.0090e-03,
            1.2459e-02, -8.1482e-03, -5.6580e-02, -1.3168e-02, -2.0538e-02,
           -8.6975e-04, -9.7504e-03,  1.6708e-02,  2.6810e-02,  1.9379e-02,
            1.1139e-02,  2.9469e-03, -1.0948e-03, -2.2766e-02, -4.4479e-03,
            3.8544e-02, -2.1347e-02, -2.8580e-02,  5.8594e-03,  2.7802e-02,
           -3.8528e-04,  1.4221e-02,  4.7660e-04, -1.2009e-02,  1.1063e-02,
           -8.4915e-03,  1.5266e-02,  1.1681e-02,  1.1673e-02,  4.1351e-02,
           -2.8900e-02, -1.0490e-02,  1.3412e-02,  2.0264e-02, -2.2766e-02,
           -3.5583e-02, -2.3041e-02,  1.3199e-03,  1.9257e-02, -1.3380e-03,
            1.4969e-02, -2.2278e-02, -2.7390e-03]]],


        [[[-1.4091e-02, -5.2261e-03, -1.1383e-02,  6.0730e-03,  2.8198e-02,
           -1.4915e-02,  8.5449e-03, -2.7405e-02,  1.4162e-03,  1.7975e-02,
           -7.4883e-03,  1.7212e-02, -5.3406e-04,  1.4069e-02, -2.3788e-02,
            1.4038e-02, -1.5839e-02, -1.5808e-02,  4.8294e-03, -2.3743e-02,
           -1.1185e-02, -6.8588e-03,  3.0624e-02,  1.1841e-02,  5.1544e-02,
           -2.8427e-02, -2.1271e-02,  4.6539e-03,  2.2049e-02, -3.2959e-02,
            3.4882e-02, -6.5796e-02, -2.2537e-02, -5.8556e-03, -2.8961e-02,
           -1.5297e-02,  2.0599e-02,  2.7084e-02, -2.2003e-02,  6.3705e-03,
            3.0334e-02, -7.5378e-03, -2.1622e-02,  1.2581e-02, -2.6138e-02,
           -2.2308e-02,  5.3711e-03,  1.5945e-02, -1.4618e-02, -1.5011e-03,
           -2.8198e-02,  4.4464e-02,  1.1803e-02,  2.1851e-02,  4.1290e-02,
            5.9929e-03, -1.9379e-02,  1.5450e-03,  1.1879e-02, -2.0340e-02,
           -5.1537e-03,  2.8900e-02, -3.5744e-03, -6.7291e-03,  7.5226e-03,
           -8.0338e-03, -4.0531e-05,  4.5898e-02,  1.1627e-02,  1.3145e-02,
            4.6997e-02, -1.7410e-02, -1.3550e-02,  1.5244e-02, -4.0955e-02,
           -1.8173e-02,  1.8539e-02, -1.6174e-02]]]], dtype=torch.float16)
2025-05-16 03:03:13.469392 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 79, 4, 128],"float16"), Tensor([2, 79, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 79],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0244, -0.0002,  0.0236,  0.0103, -0.0039,  0.0223,  0.0056,
           -0.0170,  0.0405, -0.0228, -0.0267, -0.0138,  0.0412, -0.0017,
            0.0007,  0.0183,  0.0019,  0.0062,  0.0342, -0.0070, -0.0321,
            0.0253,  0.0148,  0.0114,  0.0240, -0.0044,  0.0224,  0.0487,
           -0.0062, -0.0005, -0.0050,  0.0009, -0.0041, -0.0065, -0.0830,
            0.0172,  0.0183,  0.0166, -0.0122, -0.0503,  0.0302, -0.0278,
            0.0170,  0.0185,  0.0019, -0.0197,  0.0070, -0.0050,  0.0094,
           -0.0064, -0.0066,  0.0054,  0.0028,  0.0116, -0.0034,  0.0310,
           -0.0051,  0.0007,  0.0052, -0.0041, -0.0042, -0.0677, -0.0236,
           -0.0120, -0.0128,  0.0443,  0.0109,  0.0115, -0.0015, -0.0152,
            0.0052,  0.0024,  0.0173, -0.0326, -0.0268,  0.0155, -0.0118,
           -0.0448,  0.0009]]],


        [[[ 0.0204, -0.0189,  0.0218, -0.0392,  0.0043, -0.0008, -0.0047,
           -0.0071, -0.0041, -0.0237, -0.0196, -0.0139,  0.0497, -0.0609,
            0.0131,  0.0208, -0.0214,  0.0005, -0.0179, -0.0157, -0.0075,
            0.0099, -0.0068, -0.0044, -0.0207,  0.0064, -0.0069,  0.0104,
            0.0006,  0.0133,  0.0499, -0.0042,  0.0092, -0.0031,  0.0243,
           -0.0104, -0.0147, -0.0058, -0.0154, -0.0172, -0.0457,  0.0252,
            0.0271,  0.0008,  0.0176,  0.0432, -0.0405,  0.0010, -0.0081,
           -0.0540, -0.0302,  0.0123,  0.0653,  0.0340, -0.0149, -0.0085,
           -0.0228,  0.0031,  0.0087, -0.0008,  0.0195,  0.0233,  0.0068,
           -0.0349, -0.0015,  0.0291,  0.0159,  0.0009,  0.0155, -0.0305,
            0.0080,  0.0113,  0.0692,  0.0054,  0.0102, -0.0239,  0.0005,
            0.0041, -0.0311]]]], dtype=torch.float16)
2025-05-16 03:03:13.641207 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 80, 4, 128],"float16"), Tensor([2, 80, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 80],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-3.0441e-02,  2.5574e-02, -7.9584e-04, -3.7048e-02, -1.5106e-02,
            4.4525e-02, -9.7656e-04, -4.0405e-02, -3.9673e-02,  4.0314e-02,
           -3.1643e-03, -1.4168e-02, -7.5836e-03, -2.6978e-02,  2.9030e-03,
            5.9448e-02,  2.7679e-02, -1.5312e-02,  1.2321e-03, -4.3610e-02,
            1.7212e-02,  3.0151e-02, -4.4617e-02,  6.5269e-03, -1.5869e-02,
           -5.4779e-03, -2.1420e-03,  3.8727e-02, -7.7972e-03,  2.1271e-02,
            1.3474e-02,  2.8122e-02, -2.2488e-03,  1.3351e-02, -2.2430e-02,
            1.0841e-02, -2.0874e-02,  4.1485e-04, -2.7802e-02,  1.7395e-02,
           -5.1498e-03,  4.3457e-02,  1.6994e-03,  2.0233e-02, -3.8109e-03,
            3.1769e-02, -1.7509e-03, -6.4514e-02,  2.0966e-02, -1.9913e-02,
           -6.8115e-02,  5.3368e-03, -3.7050e-04,  2.8305e-02, -6.4026e-02,
            2.4147e-03,  2.8809e-02,  1.6663e-02,  2.2858e-02,  1.3351e-03,
           -4.5624e-02, -2.8706e-03,  2.6016e-03, -2.0477e-02, -6.1493e-03,
            3.7445e-02,  5.2414e-03,  4.4891e-02,  1.5617e-02,  9.6817e-03,
           -1.3451e-02,  1.0757e-02,  1.0391e-02, -3.9429e-02, -1.1078e-02,
           -9.9373e-04, -1.5457e-02,  6.0158e-03, -1.6235e-02,  5.8350e-02]]],


        [[[ 5.6519e-02,  1.3260e-02,  1.8616e-02,  1.1435e-03, -5.8060e-03,
           -4.8340e-02, -5.1147e-02,  4.4617e-02,  1.7044e-02,  2.0187e-02,
            2.8057e-03, -6.9519e-02,  3.9246e-02, -2.2125e-04,  2.2614e-02,
            1.2909e-02,  4.1656e-03, -1.3168e-02,  3.3131e-03, -3.4561e-03,
            4.4174e-03,  2.0416e-02, -4.0955e-02, -1.3206e-02,  4.6051e-02,
           -1.4076e-02, -1.3763e-02, -3.4393e-02, -5.3673e-03,  1.9363e-02,
            5.5885e-03,  5.0735e-04, -3.3661e-02, -1.1200e-02,  1.2962e-02,
           -4.5052e-03,  7.0038e-03,  4.1840e-02,  1.1566e-02,  2.2263e-02,
            5.7220e-03,  1.5388e-02,  1.2093e-02,  5.9540e-02, -2.7618e-02,
           -1.1406e-03, -6.3744e-03,  2.5879e-02, -7.0267e-03, -4.2419e-02,
           -2.7561e-03, -3.0731e-02, -1.1017e-02,  3.9711e-03, -8.7814e-03,
           -4.2343e-03, -1.8188e-02, -9.9487e-03, -1.0719e-02, -2.6306e-02,
           -1.3062e-02,  5.3635e-03, -6.8932e-03, -1.2505e-02, -9.9182e-05,
           -4.3518e-02,  2.9236e-02,  3.4695e-03,  5.4749e-02, -2.8667e-03,
            8.5907e-03,  6.4049e-03, -1.5884e-02,  3.0327e-03, -1.8173e-02,
            3.7872e-02, -2.3422e-02,  9.1553e-03, -1.0544e-02, -1.1787e-02]]]],
       dtype=torch.float16)
2025-05-16 03:03:13.814932 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 81, 4, 128],"float16"), Tensor([2, 81, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 81],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.5681e-02, -1.1864e-03, -5.2834e-03, -6.8665e-05, -3.2349e-02,
           -6.6566e-04,  1.3485e-03,  1.9348e-02, -1.3260e-02,  1.4000e-03,
            2.1561e-02,  2.4681e-03, -2.5162e-02, -4.1168e-02, -1.1253e-02,
           -5.5237e-03,  2.5436e-02,  1.2054e-02, -5.3692e-04, -3.5667e-03,
            6.0822e-02,  6.2523e-03,  2.3056e-02,  1.6842e-03,  5.0278e-03,
           -2.3346e-03, -2.0309e-02,  1.0696e-02, -9.6664e-03, -7.0763e-04,
           -1.9897e-02,  1.9135e-02,  1.7181e-02, -8.6212e-03, -1.8692e-02,
            1.5778e-02,  3.2349e-02,  2.2324e-02, -8.7128e-03, -4.3259e-03,
            5.1147e-02, -4.3259e-03, -2.6871e-02,  1.1490e-02, -7.6389e-04,
            2.1576e-02,  3.2867e-02, -1.8951e-02, -2.0157e-02,  1.9196e-02,
           -1.2772e-02, -2.5833e-02, -1.8982e-02, -5.1910e-02, -8.0643e-03,
            1.1154e-02, -6.1569e-03,  1.0773e-02,  3.5706e-02, -6.9275e-03,
            2.7802e-02, -7.6218e-03, -1.7914e-02,  6.8016e-03, -1.0056e-02,
           -8.4381e-03,  2.6379e-03,  6.2744e-02, -4.3297e-04, -1.3397e-02,
            2.1133e-02, -5.4779e-03, -2.7237e-03,  3.9330e-03,  1.0689e-02,
           -1.2302e-04,  8.6060e-03, -6.1401e-02, -2.0874e-02, -3.1891e-02,
            4.8180e-03]]],


        [[[-2.9373e-02,  6.0463e-04,  1.6632e-02, -1.5587e-02,  6.5613e-04,
           -1.4114e-02, -4.1443e-02,  1.7227e-02, -4.9973e-03, -8.1482e-03,
            8.9661e-02,  1.2199e-02, -1.3885e-02,  7.7667e-03,  2.5879e-02,
           -2.8286e-03,  2.5879e-02, -6.6147e-03,  2.8992e-03, -2.5749e-05,
            2.1057e-02, -1.1040e-02, -2.8732e-02,  7.5912e-03,  2.5650e-02,
            1.0590e-02,  1.8433e-02, -5.1231e-03,  1.7197e-02,  1.8677e-02,
            8.3847e-03, -1.5686e-02,  8.5068e-03,  5.9700e-03,  4.0970e-03,
            2.1454e-02,  3.1052e-02, -7.5188e-03, -5.0934e-02, -2.4841e-02,
           -1.4290e-02,  3.8452e-02, -2.1000e-03,  4.3106e-03,  2.9694e-02,
            1.0117e-02, -2.7206e-02, -3.4027e-02,  4.2969e-02,  1.0338e-02,
           -3.7384e-02, -3.0258e-02,  1.4053e-02, -3.2623e-02, -2.4841e-02,
           -2.6703e-03, -3.1403e-02, -1.4252e-02, -1.9592e-02, -1.6754e-02,
            8.4229e-03,  4.6814e-02,  3.4912e-02, -8.3923e-05,  7.1869e-03,
           -4.3091e-02,  3.0762e-02,  6.7291e-03, -1.6388e-02, -2.8702e-02,
           -2.5463e-03, -4.9782e-03,  5.0125e-03,  1.2379e-03, -6.7978e-03,
            1.9974e-02,  4.3640e-03, -9.2468e-03,  1.6663e-02, -4.0253e-02,
           -9.6588e-03]]]], dtype=torch.float16)
2025-05-16 03:03:14.069362 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 82, 4, 128],"float16"), Tensor([2, 82, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 82],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0083,  0.0015,  0.0207, -0.0005,  0.0051, -0.0244,  0.0075,
            0.0253,  0.0721,  0.0152, -0.0113, -0.0199, -0.0287,  0.0115,
            0.0115, -0.0053, -0.0218,  0.0089,  0.0307, -0.0056, -0.0217,
           -0.0092,  0.0277, -0.0533,  0.0094, -0.0097, -0.0083, -0.0224,
            0.0128, -0.0039, -0.0078, -0.0229, -0.0208,  0.0130, -0.0090,
            0.0065, -0.0293, -0.0083, -0.0219,  0.0011,  0.0033, -0.0339,
            0.0392, -0.0073,  0.0090, -0.0203, -0.0399,  0.0211, -0.0025,
           -0.0079,  0.0229, -0.0050,  0.0172,  0.0534,  0.0433, -0.0727,
            0.0630,  0.0006, -0.0137,  0.0167, -0.0031,  0.0024,  0.0320,
           -0.0002,  0.0185,  0.0231,  0.0240,  0.0346, -0.0542, -0.0374,
           -0.0131, -0.0298,  0.0070,  0.0075,  0.0100,  0.0147,  0.0175,
           -0.0122, -0.0156,  0.0202, -0.0607,  0.0050]]],


        [[[-0.0145, -0.0085,  0.0054,  0.0221,  0.0147, -0.0456, -0.0069,
           -0.0595, -0.0193,  0.0278,  0.0006,  0.0255,  0.0396, -0.0059,
           -0.0107,  0.0044, -0.0026, -0.0271,  0.0211,  0.0536, -0.0040,
            0.0471, -0.0740, -0.0240,  0.0011, -0.0003,  0.0137, -0.0083,
            0.0064, -0.0040,  0.0340, -0.0009, -0.0235, -0.0150,  0.0350,
           -0.0035, -0.0054, -0.0263,  0.0072, -0.0064,  0.0381,  0.0067,
           -0.0308,  0.0048,  0.0215, -0.0201, -0.0319, -0.0009,  0.0045,
           -0.0236, -0.0125,  0.0031,  0.0352, -0.0058,  0.0366, -0.0066,
            0.0259,  0.0050,  0.0032,  0.0145,  0.0061,  0.0159, -0.0068,
           -0.0159, -0.0204,  0.0018,  0.0067, -0.0143, -0.0134,  0.0135,
           -0.0474,  0.0168,  0.0151, -0.0131,  0.0367,  0.0228, -0.0157,
            0.0451, -0.0504, -0.0329,  0.0370, -0.0174]]]],
       dtype=torch.float16)
2025-05-16 03:03:14.332522 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 83, 4, 128],"float16"), Tensor([2, 83, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 83],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.6932e-02, -6.0501e-03, -1.4862e-02, -6.2485e-03, -4.5563e-02,
           -1.8341e-02,  9.8114e-03,  3.2349e-02,  1.5240e-03,  8.3008e-03,
            8.2855e-03,  3.8872e-03,  1.0460e-02,  7.5874e-03,  3.3508e-02,
            5.5199e-03,  5.8794e-04,  2.8000e-02, -1.1497e-02, -2.2552e-02,
           -3.6545e-03,  1.4450e-02,  1.1070e-02,  1.1353e-02,  1.2741e-02,
            1.2939e-02, -1.2909e-02, -9.6893e-03, -2.6627e-02,  2.3605e-02,
            4.9667e-03,  1.1444e-02, -2.1744e-03, -1.1444e-05,  1.9318e-02,
            1.6159e-02, -6.1150e-03, -1.9958e-02, -6.6223e-02, -2.9480e-02,
            3.0991e-02,  2.6596e-02, -4.4098e-02, -3.0731e-02, -8.8425e-03,
            8.1253e-04, -7.4768e-02,  2.6840e-02,  1.8692e-02,  4.7058e-02,
            7.1144e-03,  5.5504e-04, -3.5172e-03, -1.7426e-02,  1.8539e-02,
           -9.5215e-03,  7.5188e-03, -2.7790e-03, -2.5635e-02,  2.5375e-02,
           -2.4700e-04, -1.7685e-02, -2.3560e-02, -9.5749e-03,  2.9694e-02,
           -4.7272e-02,  9.3231e-03, -2.4933e-02, -1.6754e-02, -3.4618e-04,
            3.0777e-02, -6.5231e-03,  3.0975e-02, -2.9099e-02, -6.8245e-03,
            1.9119e-02,  9.0561e-03,  2.7939e-02,  3.7292e-02,  3.4668e-02,
            1.0574e-02, -8.7738e-03,  4.9591e-04]]],


        [[[ 2.4902e-02,  2.5681e-02,  5.9509e-03,  6.1150e-03, -3.3539e-02,
           -2.0599e-02,  4.1534e-02,  2.0885e-03, -8.9264e-03,  1.1383e-02,
           -1.6556e-02,  1.1772e-02, -1.5884e-02,  1.7639e-02,  7.5607e-03,
           -4.1924e-03, -1.4626e-02, -5.8594e-03, -1.3214e-02,  2.3842e-03,
           -9.6588e-03, -1.5697e-03, -2.3041e-02,  1.3023e-02,  3.8208e-02,
           -1.0132e-02, -5.8365e-04,  6.3477e-03, -2.0279e-02,  4.5700e-03,
           -3.1616e-02, -1.5640e-02,  1.4854e-02,  2.4872e-02, -2.7752e-04,
            1.6571e-02,  1.1444e-02,  8.6517e-03, -1.0399e-02,  4.3201e-04,
           -9.0027e-03, -3.5950e-02, -3.8422e-02,  2.5208e-02,  5.0720e-02,
           -6.1073e-03, -1.0971e-02,  2.8706e-03, -1.1086e-02, -2.3422e-02,
            8.1940e-03,  3.4363e-02,  3.3356e-02,  4.0466e-02,  2.6703e-04,
           -1.8250e-02, -1.6571e-02,  7.7515e-03,  1.5022e-02,  1.6785e-02,
           -1.5594e-02,  3.3844e-02, -8.1024e-03,  1.1276e-02, -5.9906e-02,
            1.6190e-02, -7.4577e-03, -1.6296e-02, -1.4969e-02,  1.3084e-03,
           -2.6215e-02,  1.6495e-02, -6.8665e-03, -8.0566e-03, -1.7990e-02,
           -3.3783e-02,  1.9913e-03,  3.3035e-03, -1.5945e-03,  3.9124e-02,
            4.1382e-02, -2.5055e-02, -2.7588e-02]]]], dtype=torch.float16)
2025-05-16 03:03:14.631369 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 84, 4, 128],"float16"), Tensor([2, 84, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 84],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0423,  0.0048, -0.0228,  0.0249, -0.0397, -0.0038,  0.0114,
            0.0202,  0.0378, -0.0287, -0.0200, -0.0085, -0.0228,  0.0041,
           -0.0052, -0.0045,  0.0089,  0.0113,  0.0330,  0.0089, -0.0199,
            0.0221,  0.0386, -0.0173,  0.0354,  0.0147,  0.0275,  0.0109,
           -0.0129, -0.0038,  0.0005, -0.0284, -0.0523, -0.0180,  0.0306,
           -0.0290,  0.0129,  0.0160,  0.0030, -0.0105, -0.0202,  0.0039,
           -0.0234,  0.0016,  0.0068, -0.0155,  0.0026, -0.0172, -0.0411,
           -0.0179,  0.0067, -0.0189,  0.0385, -0.0138,  0.0191, -0.0138,
            0.0004, -0.0354, -0.0228, -0.0027, -0.0099, -0.0221, -0.0046,
            0.0237,  0.0684, -0.0245,  0.0012,  0.0015, -0.0109,  0.0006,
            0.0367, -0.0511,  0.0412,  0.0224, -0.0002, -0.0155, -0.0652,
            0.0274, -0.0127,  0.0356,  0.0317,  0.0163, -0.0024,  0.0038]]],


        [[[-0.0297, -0.0057,  0.0011,  0.0331,  0.0338,  0.0240, -0.0279,
            0.0149, -0.0001,  0.0319, -0.0002,  0.0289, -0.0196, -0.0330,
           -0.0289,  0.0055, -0.0466,  0.0123, -0.0053,  0.0260,  0.0267,
           -0.0190, -0.0145,  0.0113,  0.0058, -0.0264, -0.0232,  0.0071,
            0.0149, -0.0239, -0.0633, -0.0182, -0.0092, -0.0036, -0.0189,
            0.0362, -0.0001,  0.0167,  0.0379,  0.0032, -0.0270, -0.0219,
            0.0107, -0.0017, -0.0368, -0.0093,  0.0267,  0.0572,  0.0086,
            0.0497, -0.0069,  0.0199,  0.0255, -0.0196, -0.0030,  0.0044,
           -0.0255,  0.0029,  0.0196, -0.0264,  0.0072, -0.0123, -0.0155,
            0.0174, -0.0063,  0.0311,  0.0089,  0.0018,  0.0061,  0.0090,
           -0.0038, -0.0216,  0.0036,  0.0114, -0.0264,  0.0059,  0.0320,
           -0.0206, -0.0199,  0.0099, -0.0038,  0.0216, -0.0223, -0.0145]]]],
       dtype=torch.float16)
2025-05-16 03:03:14.903705 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 85, 4, 128],"float16"), Tensor([2, 85, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 85],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0066, -0.0042, -0.0043, -0.0115,  0.0076, -0.0015,  0.0075,
           -0.0150, -0.0179, -0.0217,  0.0213, -0.0023, -0.0054, -0.0116,
           -0.0303,  0.0213,  0.0342, -0.0048,  0.0067,  0.0740, -0.0078,
            0.0081,  0.0041, -0.0258,  0.0106,  0.0480, -0.0087,  0.0046,
            0.0112, -0.0125, -0.0080,  0.0001, -0.0095,  0.0118,  0.0021,
            0.0811,  0.0200,  0.0449,  0.0155, -0.0053,  0.0378, -0.0399,
           -0.0176, -0.0118,  0.0010,  0.0100,  0.0354, -0.0079,  0.0117,
            0.0482, -0.0330, -0.0021,  0.0191, -0.0249, -0.0137,  0.0182,
           -0.0090, -0.0070,  0.0478, -0.0062, -0.0758, -0.0411,  0.0124,
           -0.0302,  0.0075, -0.0464,  0.0450,  0.0084, -0.0066, -0.0315,
           -0.0179, -0.0198, -0.0035, -0.0008, -0.0412,  0.0305, -0.0058,
           -0.0139,  0.0129, -0.0391,  0.0034, -0.0116,  0.0038, -0.0079,
           -0.0198]]],


        [[[-0.0226,  0.0133, -0.0107, -0.0168, -0.0132, -0.0272,  0.0140,
            0.0086, -0.0042,  0.0301,  0.0081, -0.0055, -0.0056,  0.0231,
           -0.0201,  0.0083,  0.0233,  0.0263, -0.0020,  0.0035, -0.0507,
            0.0032,  0.0170,  0.0003,  0.0204, -0.0133, -0.0007,  0.0184,
           -0.0217,  0.0141,  0.0246,  0.0627,  0.0575,  0.0365, -0.0149,
           -0.0042,  0.0240,  0.0158, -0.0272, -0.0357, -0.0222,  0.0187,
            0.0104, -0.0040, -0.0094, -0.0085, -0.0151,  0.0025, -0.0073,
            0.0010, -0.0171,  0.0219,  0.0086,  0.0138, -0.0122, -0.0116,
            0.0155, -0.0448, -0.0388,  0.0083, -0.0245, -0.0051,  0.0203,
            0.0255,  0.0021, -0.0103,  0.0136, -0.0089, -0.0262, -0.0078,
           -0.0101, -0.0213, -0.0044,  0.0181, -0.0003,  0.0064, -0.0026,
           -0.0356,  0.0022,  0.0037,  0.0129, -0.0242, -0.0069, -0.0390,
            0.0558]]]], dtype=torch.float16)
2025-05-16 03:03:15.145084 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 86, 4, 128],"float16"), Tensor([2, 86, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 86],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0174,  0.0226, -0.0157, -0.0037, -0.0242,  0.0187, -0.0200,
            0.0218,  0.0168,  0.0434, -0.0222, -0.0462, -0.0144, -0.0107,
           -0.0091, -0.0067, -0.0135, -0.0104, -0.0309, -0.0279, -0.0068,
            0.0135,  0.0015, -0.0050, -0.0075,  0.0120,  0.0013, -0.0111,
            0.0139,  0.0220,  0.0148,  0.0351,  0.0417, -0.0177, -0.0444,
            0.0240,  0.0208,  0.0113,  0.0276, -0.0358, -0.0048,  0.0112,
            0.0475,  0.0262,  0.0097,  0.0144,  0.0086, -0.0131, -0.0351,
           -0.0153,  0.0010,  0.0291,  0.0069, -0.0026,  0.0200, -0.0314,
           -0.0312, -0.0128, -0.0290,  0.0152, -0.0089, -0.0016, -0.0240,
           -0.0259,  0.0482, -0.0232,  0.0170, -0.0293,  0.0292, -0.0165,
           -0.0062, -0.0061, -0.0270, -0.0055,  0.0153, -0.0092,  0.0187,
           -0.0009,  0.0294,  0.0193, -0.0253,  0.0043,  0.0259, -0.0124,
            0.0112, -0.0071]]],


        [[[-0.0164, -0.0416, -0.0279,  0.0011, -0.0003,  0.0075, -0.0239,
           -0.0131,  0.0171,  0.0465, -0.0091,  0.0179, -0.0318, -0.0317,
           -0.0034,  0.0093,  0.0121,  0.0482,  0.0015,  0.0032,  0.0198,
           -0.0046, -0.0128, -0.0079, -0.0147,  0.0179,  0.0087, -0.0062,
           -0.0154,  0.0132, -0.0070,  0.0119, -0.0183,  0.0045, -0.0005,
           -0.0196, -0.0207, -0.0356,  0.0175,  0.0030, -0.0100, -0.0155,
           -0.0329, -0.0165, -0.0108, -0.0260,  0.0042, -0.0019, -0.0057,
           -0.0084,  0.0110,  0.0405, -0.0169, -0.0057,  0.0372, -0.0124,
            0.0011, -0.0323,  0.0271, -0.0194,  0.0058, -0.0338,  0.0031,
           -0.0042, -0.0273,  0.0501, -0.0138,  0.0304, -0.0191,  0.0188,
           -0.0026,  0.0151,  0.0579,  0.0113,  0.0104,  0.0323,  0.0022,
            0.0367, -0.0177, -0.0031,  0.0028,  0.0107,  0.0324,  0.0209,
           -0.0183, -0.0059]]]], dtype=torch.float16)
2025-05-16 03:03:15.340491 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 87, 4, 128],"float16"), Tensor([2, 87, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 87],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0042,  0.0038, -0.0055, -0.0030,  0.0029, -0.0014, -0.0112,
            0.0434,  0.0050, -0.0121, -0.0211,  0.0136,  0.0251, -0.0115,
           -0.0418,  0.0226,  0.0195, -0.0143, -0.0399,  0.0065, -0.0304,
            0.0097,  0.0143,  0.0035,  0.0332,  0.0150, -0.0146, -0.0824,
            0.0071, -0.0107, -0.0148, -0.0192,  0.0471, -0.0254, -0.0039,
            0.0105, -0.0180,  0.0400, -0.0250,  0.0147,  0.0184, -0.0098,
            0.0422, -0.0140,  0.0208,  0.0190,  0.0142, -0.0163, -0.0022,
            0.0004,  0.0066,  0.0160,  0.0036,  0.0144,  0.0028, -0.0327,
            0.0009,  0.0030,  0.0031,  0.0027, -0.0380, -0.0028, -0.0138,
           -0.0106, -0.0138,  0.0091,  0.0248,  0.0138,  0.0069, -0.0360,
           -0.0402,  0.0144, -0.0081, -0.0074,  0.0305,  0.0314,  0.0037,
           -0.0022,  0.0091,  0.0114,  0.0203, -0.0116,  0.0181, -0.0276,
            0.0077, -0.0037, -0.0140]]],


        [[[ 0.0376,  0.0185, -0.0112,  0.0073, -0.0423, -0.0134, -0.0037,
           -0.0055,  0.0043,  0.0263, -0.0362,  0.0048,  0.0104,  0.0017,
            0.0013,  0.0193, -0.0154, -0.0026,  0.0325, -0.0748,  0.0649,
           -0.0104, -0.0043,  0.0104, -0.0027, -0.0162,  0.0019, -0.0088,
            0.0203, -0.0244, -0.0138,  0.0001,  0.0063, -0.0145, -0.0167,
           -0.0144,  0.0149,  0.0120, -0.0076,  0.0080,  0.0056, -0.0392,
            0.0022, -0.0212,  0.0162,  0.0338, -0.0448,  0.0244, -0.0052,
            0.0164, -0.0129, -0.0075,  0.0535, -0.0129, -0.0135, -0.0359,
            0.0307,  0.0008,  0.0138, -0.0003, -0.0666,  0.0144, -0.0062,
           -0.0268, -0.0161,  0.0124,  0.0068, -0.0015,  0.0220,  0.0023,
           -0.0385, -0.0072, -0.0021,  0.0178,  0.0226,  0.0214, -0.0468,
            0.0071,  0.0149, -0.0134,  0.0110,  0.0248,  0.0293,  0.0093,
            0.0247,  0.0221, -0.0059]]]], dtype=torch.float16)
2025-05-16 03:03:15.591966 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 88, 4, 128],"float16"), Tensor([2, 88, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 88],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.8305e-02,  2.1515e-02,  6.6147e-03, -8.8425e-03,  2.0828e-03,
            1.1276e-02,  9.4833e-03,  6.3591e-03,  6.7139e-03, -4.8950e-02,
           -3.1525e-02,  2.5467e-02,  1.4107e-02, -2.9926e-03, -1.8204e-02,
            3.7628e-02,  2.8473e-02, -4.6883e-03,  2.2018e-02, -4.8889e-02,
            2.2064e-02, -2.4414e-04, -1.8082e-02, -1.8738e-02, -4.5776e-02,
            1.7105e-02, -7.7820e-04, -8.3847e-03,  1.4771e-02,  2.5452e-02,
            6.9580e-03,  3.3051e-02, -4.7188e-03, -1.6289e-03,  1.0399e-02,
           -3.7346e-03,  6.2370e-03, -1.8646e-02, -7.0000e-03, -2.9602e-02,
           -6.1035e-05, -2.9812e-03, -2.6215e-02, -1.8280e-02, -6.4087e-04,
           -6.2256e-03, -7.0618e-02,  3.5706e-03,  1.0117e-02,  4.5227e-02,
            2.4368e-02, -2.2125e-02,  2.4155e-02,  9.9564e-04, -9.7504e-03,
           -4.0466e-02, -3.1219e-02, -1.3351e-05,  6.4564e-04, -2.9938e-02,
            7.8583e-03,  7.0038e-03,  6.5498e-03, -4.9820e-03,  3.3569e-02,
            2.9182e-03, -1.3382e-02,  4.6768e-03,  2.5864e-02, -9.9564e-03,
           -4.0680e-02,  6.2927e-02,  1.8829e-02, -3.9673e-03,  4.1885e-03,
           -2.7634e-02,  1.1597e-02,  3.0945e-02, -2.8839e-02, -4.0703e-03,
            2.9564e-03, -4.1580e-03,  2.4948e-02,  1.7975e-02, -9.6207e-03,
            3.0731e-02,  4.6722e-02, -2.1500e-02]]],


        [[[-2.4376e-03, -4.8065e-02, -4.9255e-02, -1.6754e-02, -2.7054e-02,
            2.7130e-02, -1.2428e-02,  1.5335e-02,  1.4969e-02, -1.1566e-02,
           -8.7357e-04, -2.6226e-03, -3.8879e-02,  6.9695e-03,  2.9278e-03,
            3.7323e-02, -3.4256e-03,  8.0948e-03, -5.5603e-02,  8.2779e-03,
           -5.5733e-03, -1.0406e-02,  1.1063e-04,  1.8982e-02,  1.6678e-02,
            1.8539e-02, -5.0507e-03,  1.0910e-02,  7.5989e-03,  3.7842e-03,
           -3.7476e-02, -1.3474e-02,  1.9150e-02,  6.5994e-03, -1.3382e-02,
           -3.7659e-02,  5.1788e-02,  4.5441e-02, -2.1248e-03, -5.3406e-04,
           -6.4125e-03, -2.2018e-02, -9.1705e-03, -4.5776e-03,  9.0027e-03,
           -5.1804e-03, -5.8937e-03,  1.2115e-02,  7.8049e-03,  1.4618e-02,
            8.9035e-03,  6.1920e-02, -1.9745e-02,  2.1362e-02,  2.3148e-02,
            2.5589e-02, -2.9755e-03,  1.2672e-02,  3.4088e-02,  4.0894e-03,
            2.1038e-03,  9.0866e-03,  9.2983e-05,  1.5038e-02, -2.5711e-02,
            2.3594e-03,  2.8381e-02, -8.4305e-03,  6.5880e-03,  1.8158e-02,
           -1.2787e-02, -1.2413e-02, -2.6550e-02, -1.1505e-02,  6.8665e-04,
            8.6975e-03, -3.3600e-02,  7.6065e-03, -6.0844e-03, -1.3405e-02,
            1.6632e-02, -3.8727e-02, -7.6218e-03, -2.0203e-02,  2.8961e-02,
           -1.3588e-02, -5.4779e-03,  6.5117e-03]]]], dtype=torch.float16)
2025-05-16 03:03:15.779764 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 89, 4, 128],"float16"), Tensor([2, 89, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 89],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-5.0140e-02, -8.9874e-03,  5.7526e-03, -1.0529e-02,  3.6499e-02,
           -9.5978e-03,  3.7155e-03,  2.3438e-02, -3.9001e-02,  4.4327e-03,
           -6.4888e-03,  2.2232e-02,  2.7496e-02, -8.4610e-03,  1.3763e-02,
           -1.6525e-02, -3.5896e-03,  4.0833e-02, -3.3302e-03,  7.1983e-03,
            2.0844e-02, -1.7195e-03,  6.1798e-03,  4.2343e-03,  1.6418e-02,
            1.1101e-02,  1.9928e-02, -8.5449e-03,  6.6853e-04,  3.1494e-02,
           -5.4054e-03,  3.7003e-03, -7.1259e-03,  7.8011e-03, -4.5502e-02,
            4.2152e-04,  5.3558e-03,  3.0334e-02,  2.5009e-02,  1.9989e-02,
           -1.7365e-02,  4.8752e-03,  1.8143e-02, -1.4923e-02, -1.4244e-02,
           -8.7929e-04, -5.9891e-04, -4.4746e-03,  1.5068e-03,  1.2299e-02,
           -1.0023e-03,  2.8412e-02, -8.6212e-03, -3.1097e-02,  9.3842e-04,
           -6.8893e-03,  2.3621e-02, -1.9943e-02, -2.2385e-02, -1.0262e-03,
            7.1182e-03,  5.5351e-03, -2.8259e-02, -3.1891e-02,  1.3542e-02,
            3.0075e-02,  7.9117e-03, -1.6724e-02, -1.9089e-02, -3.1433e-02,
           -4.0161e-02, -2.0416e-02,  3.9062e-02,  7.3929e-03, -4.6936e-02,
           -1.2306e-02,  4.5959e-02, -4.4769e-02,  8.6823e-03, -1.5274e-02,
            4.0970e-03,  1.9775e-02, -3.1982e-02, -3.5492e-02, -1.8051e-02,
            2.4445e-02,  4.2450e-02,  1.7487e-02,  9.0103e-03]]],


        [[[ 1.0391e-02, -1.1658e-02, -5.0964e-03, -3.6011e-02,  1.4313e-02,
           -8.6403e-04, -3.0243e-02,  2.5192e-02, -8.1558e-03,  3.6194e-02,
           -3.8269e-02,  8.2855e-03,  8.2779e-03, -4.3716e-03,  1.1948e-02,
           -5.4474e-03,  4.8943e-03,  1.9775e-02,  6.7520e-03, -4.0894e-02,
           -1.1795e-02, -4.2200e-04, -1.6296e-02, -2.2659e-03,  3.8696e-02,
            1.8173e-02,  5.1346e-03, -2.3453e-02, -1.2169e-02, -7.4997e-03,
            1.0811e-02,  1.3409e-03, -8.0414e-03, -5.7007e-02,  4.1962e-03,
            2.5192e-02,  5.0964e-03, -1.0666e-02, -1.3161e-04, -4.8790e-03,
            2.8934e-03,  3.2959e-02,  7.8888e-03,  1.7365e-02,  6.7940e-03,
            4.2381e-03,  3.7659e-02,  2.0218e-03,  7.2021e-03, -7.0190e-03,
           -6.7444e-03,  3.3752e-02,  9.9335e-03, -9.1248e-03,  4.4403e-03,
            5.0964e-03,  4.9591e-05, -2.0279e-02, -1.8021e-02,  3.4637e-03,
           -1.0574e-02, -1.1169e-02, -2.6474e-03,  1.0204e-03, -4.4586e-02,
            3.2562e-02, -1.9512e-03, -1.9350e-03,  1.1314e-02,  1.6876e-02,
           -4.0512e-03,  1.4946e-02,  3.6591e-02,  2.0676e-02, -1.7532e-02,
            1.7288e-02, -6.1340e-02, -6.8817e-03, -1.3618e-02, -9.4070e-03,
            3.4149e-02, -1.0223e-02, -2.9648e-02, -3.3417e-02,  1.3641e-02,
            2.3529e-02, -7.8659e-03,  5.5618e-03,  5.1422e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:16.032552 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 90, 4, 128],"float16"), Tensor([2, 90, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 90],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.8348e-03,  7.4577e-03,  1.6113e-02,  2.7222e-02, -6.0959e-03,
           -2.1667e-03, -1.7654e-02, -1.9196e-02, -6.5117e-03, -3.2539e-03,
           -1.2962e-02,  2.0325e-02,  3.2005e-03,  1.7563e-02,  4.0283e-03,
            2.0828e-03, -2.4689e-02, -7.4730e-03,  2.1637e-02, -4.6356e-02,
            9.0179e-03,  2.8397e-02,  3.0884e-02,  3.2867e-02, -1.1520e-03,
            8.0261e-03, -1.2665e-02,  1.3359e-02,  5.3024e-03,  1.2169e-02,
            4.6509e-02,  1.6693e-02, -3.8574e-02, -8.0414e-03, -3.4882e-02,
            5.7869e-03,  1.1345e-02, -2.6703e-05, -1.0750e-02,  3.0106e-02,
            4.2648e-03,  2.2430e-02,  2.0111e-02, -3.9551e-02,  2.9984e-03,
           -1.4282e-02,  2.3590e-02, -1.5747e-02,  2.4223e-04, -1.9409e-02,
           -9.1629e-03,  7.6981e-03,  1.1147e-02, -4.1931e-02,  3.3661e-02,
           -7.6675e-03,  2.0103e-03,  4.1718e-02, -1.0853e-03,  5.2643e-04,
           -3.2806e-02, -3.7445e-02,  8.0872e-03, -1.6050e-03, -1.0292e-02,
           -4.0207e-03,  2.5055e-02,  3.5614e-02, -9.6130e-03, -2.7435e-02,
           -2.1149e-02,  3.7720e-02,  1.1158e-03,  4.4594e-03, -6.1417e-03,
           -7.1793e-03,  1.2657e-02, -5.9853e-03,  1.3435e-02, -2.0554e-02,
           -4.7485e-02,  2.8534e-02,  1.0529e-02, -9.2392e-03, -2.7866e-03,
           -1.0178e-02, -1.5594e-02, -6.4392e-03,  1.9226e-03, -3.3630e-02]]],


        [[[-2.9556e-02,  1.0330e-02,  1.5678e-03, -1.4969e-02, -1.0849e-02,
           -7.8278e-03, -1.6159e-02,  1.1284e-02, -2.8122e-02,  2.5085e-02,
           -3.2288e-02, -4.8294e-03, -7.6447e-03,  1.0605e-02,  2.4490e-02,
           -1.7853e-02, -1.8723e-02, -1.9775e-02, -2.1973e-02,  3.5686e-03,
            3.2654e-02,  4.5929e-02, -4.7569e-03,  1.9211e-02, -1.8402e-02,
           -1.1978e-02,  1.7700e-02,  1.3008e-02,  3.9005e-03, -2.3087e-02,
            8.1482e-03, -3.2715e-02, -2.6154e-02,  9.5825e-03, -2.6031e-02,
            1.2550e-02, -7.2021e-03, -6.3944e-04,  3.8055e-02, -3.8361e-02,
           -3.7041e-03,  2.1763e-03,  2.9999e-02,  2.5234e-03, -2.5806e-03,
            7.2784e-03, -1.5991e-02,  8.9798e-03, -9.8343e-03, -2.6566e-02,
            1.4709e-02,  1.9424e-02, -6.5117e-03, -4.0771e-02,  1.5762e-02,
           -1.5564e-02, -2.4567e-02,  5.2155e-02,  3.8849e-02, -3.1509e-03,
            1.5884e-02,  1.9470e-02,  8.4534e-03, -3.5126e-02, -2.2156e-02,
            2.9144e-02, -2.8458e-02,  2.5909e-02, -9.9487e-03,  1.0414e-02,
           -6.1798e-04,  3.3112e-03,  1.3733e-04,  6.8604e-02,  1.0521e-02,
           -8.2016e-03,  3.7956e-04, -2.4643e-03, -2.2888e-02, -7.9775e-04,
            5.3558e-02, -8.3771e-03,  1.9012e-02, -4.8981e-03,  1.8341e-02,
           -1.2650e-02,  2.2324e-02, -2.9434e-02,  1.9131e-03, -3.1769e-02]]]],
       dtype=torch.float16)
2025-05-16 03:03:16.226735 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 91, 4, 128],"float16"), Tensor([2, 91, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 91],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.7267e-02,  6.8092e-04, -4.3526e-03, -1.6159e-02,  2.1637e-02,
            1.5228e-02, -5.0537e-02,  2.8717e-02, -5.9509e-02, -2.7863e-02,
           -1.0166e-03, -2.0096e-02,  6.7673e-03,  1.6205e-02,  4.3488e-03,
           -1.0681e-02, -7.3738e-03, -3.9764e-02, -1.8425e-03, -1.5106e-02,
            2.4204e-03, -8.6365e-03, -7.1335e-03,  3.0708e-03, -2.2308e-02,
            1.4511e-02, -1.4320e-02,  3.1494e-02, -2.5806e-03,  4.3716e-03,
            2.1606e-02, -3.6041e-02, -4.0007e-04,  5.3101e-03, -5.7526e-02,
            6.9733e-03, -1.2810e-02,  2.2411e-03, -3.4271e-02,  3.0304e-02,
            6.6681e-03,  1.7563e-02,  2.5040e-02,  6.7139e-03, -5.2147e-03,
            2.3148e-02,  6.1951e-02,  4.0665e-03,  1.8723e-02,  2.1515e-02,
           -2.7557e-02, -9.0485e-03,  5.5542e-03, -3.3813e-02, -4.3716e-03,
            8.4877e-05, -1.8127e-02,  2.7832e-02,  7.0038e-03, -1.2878e-02,
           -1.4305e-06, -2.4796e-02, -9.9792e-03, -1.4618e-02, -2.3365e-03,
            9.0714e-03,  1.0887e-02, -7.4730e-03,  1.8585e-02, -1.1261e-02,
           -1.0780e-02,  3.7193e-03,  2.2522e-02, -1.2283e-02,  1.5236e-02,
            1.0941e-02,  3.4119e-02,  1.1917e-02, -3.0689e-03, -1.9058e-02,
            2.7390e-03,  1.7929e-02,  1.0490e-02,  9.1400e-03,  2.7878e-02,
            1.4801e-02,  1.3458e-02, -7.3433e-03,  1.0429e-02,  1.6144e-02,
            9.6970e-03]]],


        [[[ 2.3880e-02, -6.3538e-02,  1.5869e-03,  3.3493e-03,  6.9008e-03,
            3.3386e-02, -4.3243e-02,  4.6234e-03, -9.4604e-03,  2.2354e-02,
            2.8229e-02,  3.8788e-02,  1.8158e-02,  7.8964e-04,  4.7607e-03,
            6.3934e-03,  3.1082e-02,  5.3329e-03, -1.6327e-02, -1.2733e-02,
           -4.5395e-03,  2.6703e-04,  1.5621e-03,  3.8509e-03,  1.4633e-02,
           -1.1501e-03,  1.2070e-02, -4.4647e-02, -3.5431e-02,  1.9470e-02,
            1.2939e-02,  3.0823e-03,  2.7954e-02, -7.8354e-03,  1.8433e-02,
           -2.5070e-02, -3.4370e-03,  1.6891e-02, -6.0883e-02,  9.8343e-03,
            1.4893e-02, -5.4359e-03,  1.0025e-02,  3.0479e-03,  9.1324e-03,
           -1.6174e-02, -3.1738e-03, -5.1941e-02,  8.9188e-03,  8.7357e-03,
           -1.0437e-02,  3.5675e-02,  1.8753e-02,  1.5366e-02,  2.1683e-02,
            1.5974e-03, -2.4246e-02, -4.1847e-03,  4.4632e-04, -4.1504e-03,
           -3.9101e-03, -1.1826e-03,  5.5313e-03,  2.0432e-02,  5.7068e-02,
           -4.0161e-02,  1.4969e-02,  4.4403e-03,  1.4397e-02, -1.6739e-02,
            8.6823e-03, -1.4282e-02, -1.1147e-02, -4.9500e-02, -1.1482e-02,
            1.4420e-02, -2.0599e-03, -2.7252e-02, -8.5144e-03,  1.0071e-02,
           -2.1118e-02, -3.4161e-03, -1.2215e-02,  6.7139e-03,  4.5853e-03,
            1.4503e-02, -1.6129e-02, -3.4466e-03, -1.0994e-02,  4.6730e-03,
            2.4357e-03]]]], dtype=torch.float16)
2025-05-16 03:03:16.479749 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 92, 4, 128],"float16"), Tensor([2, 92, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 92],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 2.5223e-02,  3.3569e-02,  1.5503e-02, -2.1042e-02,  3.1525e-02,
            2.1179e-02, -1.5854e-02, -1.7960e-02,  3.6144e-03, -1.6937e-02,
            2.4124e-02, -2.2339e-02,  3.6530e-02,  1.6693e-02,  4.8561e-03,
            6.1722e-03, -8.5163e-04,  1.2634e-02, -3.1021e-02, -3.4142e-04,
            7.7400e-03, -2.3193e-02,  4.6921e-03,  3.2532e-02, -7.6218e-03,
            7.9193e-03, -1.1304e-01, -2.1877e-03, -2.2644e-02,  2.7725e-02,
            1.5167e-02, -9.9792e-03,  3.4271e-02, -6.5193e-03, -3.4546e-02,
            5.9509e-02, -1.9699e-02,  7.5035e-03,  9.5673e-03, -7.7438e-03,
           -1.1459e-02,  4.5776e-05, -4.9255e-02, -3.0579e-02,  1.5083e-02,
           -1.0666e-02,  3.4485e-02,  1.9287e-02,  1.4854e-02,  3.9215e-02,
           -1.5068e-03, -6.1111e-03,  2.7206e-02, -2.2675e-02,  1.1148e-03,
            1.0788e-02,  1.8036e-02, -4.5258e-02, -2.7847e-02, -2.4994e-02,
           -8.8959e-03, -1.2169e-03,  6.7444e-03, -1.2032e-02,  2.0084e-03,
           -6.9962e-03,  2.3407e-02,  2.1992e-03,  2.2552e-02,  1.7776e-02,
            1.5701e-02,  9.2545e-03, -4.5853e-03, -1.6754e-02, -2.6672e-02,
            7.1373e-03,  7.8201e-05, -2.5253e-03,  2.7985e-02,  8.5602e-03,
           -2.3193e-03,  2.4204e-03, -4.8485e-03,  1.0353e-02, -2.6733e-02,
           -3.4729e-02, -1.9638e-02, -1.3069e-02,  1.7288e-02,  1.3428e-02,
           -2.7435e-02,  6.9618e-03]]],


        [[[ 2.0813e-02,  1.4870e-02, -5.8212e-03,  7.0343e-03,  2.7527e-02,
           -2.2125e-02, -3.8109e-03,  5.1765e-03,  1.5320e-02,  7.9956e-03,
           -1.1414e-02,  8.3862e-02, -1.5228e-02, -1.7120e-02, -1.3527e-02,
            3.1433e-02,  2.0020e-02, -1.2512e-02, -1.4893e-02, -9.6817e-03,
           -1.4793e-02,  1.3939e-02,  2.0920e-02, -4.2267e-03, -3.6255e-02,
           -7.8812e-03,  1.1177e-03, -6.8092e-04, -2.3758e-02,  2.6749e-02,
           -4.9286e-03, -2.6154e-02, -9.8038e-03,  1.1024e-02, -5.1392e-02,
           -1.6159e-02, -2.7084e-02,  1.1559e-02,  2.2354e-03, -2.2293e-02,
           -1.9135e-02,  2.7588e-02, -8.6060e-03,  9.0599e-06,  1.2779e-02,
           -1.7120e-02, -1.1292e-03,  1.5945e-02, -8.9264e-03, -4.5128e-03,
            3.8624e-03,  1.9333e-02,  3.3073e-03, -4.8645e-02,  5.9357e-03,
           -3.7098e-03, -5.3345e-02,  2.4857e-02,  1.1658e-02, -2.2888e-03,
           -3.0228e-02, -8.9493e-03, -1.6556e-03,  2.4139e-02,  6.9695e-03,
            2.4796e-02, -1.4954e-02,  1.3458e-02,  8.1100e-03, -6.9618e-03,
           -2.7252e-02,  9.5596e-03,  2.7294e-03, -3.5645e-02,  1.4862e-02,
           -3.7872e-02,  2.4338e-02,  3.1235e-02,  2.9343e-02, -7.3547e-03,
            1.4496e-02, -6.4278e-04,  1.4854e-02,  1.4122e-02, -1.3901e-02,
            1.9806e-02,  2.2003e-02, -5.7259e-03,  1.2764e-02, -3.9062e-03,
            1.1587e-03, -1.3885e-03]]]], dtype=torch.float16)
2025-05-16 03:03:16.747525 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 93, 4, 128],"float16"), Tensor([2, 93, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 93],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0169, -0.0144, -0.0287,  0.0108,  0.0235,  0.0015,  0.0170,
           -0.0265,  0.0348, -0.0159, -0.0009,  0.0021,  0.0097, -0.0116,
           -0.0064, -0.0046,  0.0303,  0.0198, -0.0077,  0.0125, -0.0140,
            0.0265, -0.0120,  0.0037, -0.0167,  0.0086, -0.0059, -0.0022,
            0.0250,  0.0173,  0.0025,  0.0131, -0.0022,  0.0115,  0.0083,
           -0.0064, -0.0021,  0.0155, -0.0053,  0.0187,  0.0051,  0.0329,
           -0.0082,  0.0239,  0.0086,  0.0145, -0.0119,  0.0020, -0.0170,
           -0.0177, -0.0154, -0.0151, -0.0233,  0.0013, -0.0233, -0.0293,
           -0.0309, -0.0649,  0.0104,  0.0092,  0.0040, -0.0204, -0.0020,
            0.0332,  0.0061,  0.0040, -0.0154, -0.0026, -0.0118,  0.0069,
            0.0175,  0.0030,  0.0002, -0.0040, -0.0059,  0.0045, -0.0212,
            0.0045, -0.0096, -0.0026, -0.0362,  0.0505, -0.0024, -0.0368,
           -0.0033, -0.0112,  0.0298,  0.0110,  0.0634, -0.0422,  0.0067,
            0.0049,  0.0141]]],


        [[[ 0.0166,  0.0195, -0.0178,  0.0509, -0.0354, -0.0004,  0.0163,
            0.0154, -0.0073, -0.0060,  0.0214, -0.0090,  0.0026, -0.0034,
            0.0208,  0.0150,  0.0108, -0.0053,  0.0210, -0.0031, -0.0241,
           -0.0036, -0.0325, -0.0049, -0.0107, -0.0029, -0.0011, -0.0058,
           -0.0175, -0.0260, -0.0183,  0.0069,  0.0231, -0.0141,  0.0115,
           -0.0036, -0.0027,  0.0099,  0.0242, -0.0006,  0.0059, -0.0320,
            0.0079, -0.0219, -0.0049, -0.0263,  0.0348,  0.0416, -0.0001,
           -0.0019,  0.0139, -0.0047, -0.0163,  0.0010,  0.0093, -0.0070,
            0.0029,  0.0038, -0.0022, -0.0198,  0.0254, -0.0046, -0.0182,
            0.0085, -0.0135, -0.0249,  0.0361,  0.0320,  0.0137,  0.0196,
           -0.0062, -0.0209, -0.0101,  0.0022, -0.0110,  0.0088, -0.0060,
           -0.0052,  0.0041,  0.0067,  0.0010, -0.0001,  0.0029,  0.0121,
            0.0061,  0.0191,  0.0119, -0.0947,  0.0130,  0.0073,  0.0016,
           -0.0170, -0.0132]]]], dtype=torch.float16)
2025-05-16 03:03:16.938702 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 94, 4, 128],"float16"), Tensor([2, 94, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 94],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.9556e-02,  9.3384e-03, -4.7668e-02,  2.7084e-02,  2.0966e-02,
           -1.4816e-02,  4.1077e-02,  7.6332e-03, -2.3529e-02, -1.4847e-02,
           -2.4078e-02,  9.1362e-04, -8.2703e-03, -9.8228e-05,  2.0909e-04,
           -3.1555e-02, -2.7866e-03, -9.0866e-03,  1.4832e-02,  1.3672e-02,
           -2.9297e-03,  3.5858e-04, -1.8143e-02,  9.2621e-03,  1.8501e-03,
            1.9684e-03, -4.8584e-02,  1.0971e-02,  2.6611e-02, -2.5894e-02,
            1.8799e-02,  1.2741e-03,  1.8768e-02,  4.4708e-03,  1.0933e-02,
           -3.7403e-03,  1.1307e-02,  2.6489e-02, -1.5610e-02,  2.2812e-02,
           -4.7363e-02, -2.5253e-03, -6.8970e-03,  3.2410e-02,  4.4785e-03,
           -1.4648e-02, -1.1574e-02, -4.8866e-03, -6.6910e-03, -1.7120e-02,
           -6.5651e-03,  1.9897e-02,  1.2009e-02, -8.7051e-03, -1.9348e-02,
           -1.1337e-02,  4.3365e-02,  1.0490e-04, -3.2654e-02,  1.9312e-03,
           -3.6259e-03,  2.5024e-02, -2.0950e-02,  2.7847e-02,  2.2614e-02,
           -3.7903e-02, -1.9760e-03, -3.9673e-04,  4.7989e-03,  7.6828e-03,
            2.5162e-02, -2.7069e-02,  6.4545e-03, -3.8567e-03, -2.4124e-02,
            5.7068e-02, -8.7357e-04,  2.0767e-02, -8.7128e-03, -1.5106e-02,
           -2.3865e-02, -6.9160e-03,  4.5593e-02,  2.1400e-03,  2.4002e-02,
           -7.2899e-03,  1.0315e-02, -1.5099e-02,  2.4780e-02,  1.1749e-03,
           -1.0481e-03,  2.6215e-02, -2.8122e-02, -8.9035e-03]]],


        [[[-1.6699e-03,  3.2745e-02, -1.4915e-02, -1.3481e-02,  2.7832e-02,
            1.2589e-03, -4.4434e-02,  1.4641e-02,  4.6692e-03,  2.9099e-02,
           -2.3788e-02, -4.9114e-04,  4.6326e-02,  1.1978e-02,  2.0401e-02,
           -1.6479e-02,  1.3672e-02, -3.4698e-02, -2.5253e-03,  3.4637e-03,
            1.7242e-02,  4.7684e-03, -8.2016e-03, -8.2016e-04,  1.7670e-02,
           -7.8583e-03, -1.2184e-02, -2.7283e-02, -8.9645e-03,  3.2482e-03,
            7.9041e-03,  1.0208e-02,  1.6994e-03, -1.5373e-02,  2.2202e-02,
            4.7546e-02,  4.2839e-03,  2.8915e-03,  2.3918e-03, -2.1408e-02,
            3.4515e-02, -3.4454e-02, -1.7273e-02,  1.8570e-02,  1.2650e-02,
            1.9562e-02, -1.1406e-02,  4.6616e-03, -2.3529e-02, -1.7624e-03,
            9.9487e-03,  4.6959e-03, -9.2621e-03,  6.7329e-03, -8.9340e-03,
            1.1909e-02,  2.1637e-02,  7.2193e-04,  2.9266e-02,  2.7542e-03,
            1.3351e-02,  1.5823e-02, -2.3300e-02, -2.6810e-02, -6.6895e-02,
            7.3547e-03,  4.0131e-02, -2.7618e-02, -2.0584e-02,  1.1490e-02,
           -1.4977e-02, -1.2802e-02,  1.6113e-02,  2.7237e-03, -9.2010e-03,
            1.4420e-02,  5.6076e-03,  1.5869e-02, -1.1101e-02, -1.3672e-02,
           -1.8997e-02, -2.8076e-02, -2.5772e-02, -6.7863e-03, -5.8022e-03,
            9.5901e-03,  2.5940e-03,  2.8015e-02, -1.6449e-02, -7.9803e-03,
           -1.5755e-03,  1.1711e-02, -3.2684e-02,  1.1742e-02]]]],
       dtype=torch.float16)
2025-05-16 03:03:17.208440 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 95, 4, 128],"float16"), Tensor([2, 95, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 95],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-1.2566e-02,  1.8265e-02, -1.5083e-02,  1.1887e-02,  1.1673e-02,
            2.9068e-03,  7.8011e-04,  4.8370e-03, -2.8381e-03,  3.0334e-02,
            2.0905e-02,  1.8072e-03,  4.1199e-02,  4.5288e-02,  5.4502e-04,
           -5.4138e-02, -8.9569e-03, -1.0040e-02, -1.9012e-02, -7.3662e-03,
           -1.6632e-02, -8.6441e-03, -3.9154e-02, -5.7487e-03, -6.0692e-03,
            4.6196e-03,  8.4972e-04, -2.1606e-02, -2.1164e-02, -2.5864e-02,
            1.4267e-02,  7.7171e-03, -2.2430e-02,  6.9763e-02,  1.6037e-02,
           -1.4248e-03, -3.9581e-02,  1.0979e-02,  1.5106e-02, -1.5478e-03,
           -2.4796e-02,  1.2810e-02, -1.5411e-02, -9.5215e-03, -1.7044e-02,
            1.6083e-02,  2.8687e-03,  2.6443e-02,  4.5090e-03,  4.2786e-02,
            1.5961e-02,  2.8030e-02,  1.4641e-02, -1.5701e-02, -9.6054e-03,
           -1.1597e-02,  3.5896e-03, -6.7215e-03,  1.1368e-02, -9.3689e-03,
            7.3471e-03,  1.5259e-02, -4.7112e-03,  1.0880e-02, -4.2725e-02,
            1.1017e-02, -1.6006e-02,  1.3107e-02,  3.2539e-03, -4.3640e-03,
            2.2751e-02, -4.4159e-02,  1.6159e-02,  5.2567e-03, -1.8936e-02,
            8.9188e-03, -1.3191e-02,  4.5166e-03,  1.1444e-05,  8.3389e-03,
           -1.5488e-02, -1.3748e-02,  1.0605e-03, -7.8049e-03,  1.1383e-02,
           -4.3610e-02,  1.2093e-03,  1.3977e-02, -2.2919e-02,  1.2062e-02,
            1.1597e-03, -2.4445e-02,  1.0292e-02,  1.0178e-02,  3.4637e-02]]],


        [[[ 1.5503e-02,  6.0959e-03,  4.5929e-03, -2.0584e-02,  6.8207e-03,
            1.3039e-02,  3.4882e-02,  8.2626e-03, -4.1504e-03,  1.2159e-03,
            1.2192e-02,  1.6235e-02,  3.7262e-02, -5.9929e-03,  6.2828e-03,
           -2.9861e-02, -8.9645e-03,  5.8479e-03, -2.9755e-02, -1.4954e-02,
            8.6441e-03,  1.3943e-03,  2.0466e-03,  6.1607e-03, -1.7944e-02,
            2.1954e-03, -1.1917e-02, -3.2578e-03,  1.1765e-02,  5.1842e-03,
           -1.3794e-02, -1.7262e-03, -1.8097e-02,  1.7303e-02,  2.3987e-02,
           -9.1400e-03,  5.0507e-03, -9.2163e-03, -2.1851e-02, -1.9379e-02,
            2.7283e-02, -1.9592e-02, -4.5853e-03, -4.2224e-04, -1.6159e-02,
            1.9150e-02,  8.0185e-03,  6.1569e-03,  2.8809e-02,  2.5787e-02,
           -3.9673e-04,  5.0995e-02, -3.0563e-02, -2.5116e-02, -1.7075e-02,
           -1.7731e-02, -8.4076e-03, -2.3041e-02,  3.0212e-02,  1.3733e-02,
           -1.1604e-02, -9.0790e-03, -1.0307e-02,  2.0981e-03, -2.3209e-02,
            2.6642e-02, -5.5199e-03,  1.1120e-03,  8.6823e-03, -4.7493e-03,
            5.9891e-03,  3.0106e-02,  1.2489e-02, -8.1177e-03,  2.7084e-04,
            4.7607e-03,  1.0071e-02, -1.0729e-03, -8.2855e-03, -6.6490e-03,
           -2.0416e-02, -5.0316e-03, -4.4617e-02,  1.1780e-02,  1.8738e-02,
            2.2583e-02, -3.4882e-02, -2.4124e-02, -6.4621e-03,  9.9716e-03,
           -2.0004e-02,  6.0081e-03,  2.2278e-02, -6.8398e-03, -1.0719e-03]]]],
       dtype=torch.float16)
2025-05-16 03:03:17.437076 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 96, 4, 128],"float16"), Tensor([2, 96, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 96],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-8.1863e-03,  1.5030e-02,  1.4656e-02, -1.3100e-02, -1.2070e-02,
            2.0233e-02,  1.0269e-02,  3.2024e-03,  1.9217e-03, -6.1073e-03,
           -2.1561e-02, -5.3501e-04,  9.6893e-03,  9.3918e-03, -3.9001e-02,
           -2.8992e-02, -9.8801e-03,  5.7495e-02,  2.7176e-02,  3.4485e-02,
            1.8578e-03,  7.9880e-03, -8.5602e-03, -1.3514e-03,  2.3590e-02,
           -4.0375e-02, -1.9821e-02, -7.3853e-03, -3.2684e-02, -2.6337e-02,
           -5.9166e-03,  4.1161e-03, -2.4994e-02, -2.0706e-02, -1.4160e-02,
           -2.3132e-02, -4.4495e-02, -1.1436e-02, -1.7181e-02, -1.3214e-02,
           -1.0216e-02,  1.1810e-02,  7.9346e-03, -1.4811e-03,  2.5425e-03,
            5.1842e-03,  3.2440e-02,  7.4036e-02,  1.8524e-02, -5.3482e-03,
            4.1428e-03, -2.1530e-02, -3.3203e-02,  1.5411e-02, -8.6060e-03,
            2.6474e-02, -4.2236e-02,  9.2621e-03,  1.2459e-02,  4.2076e-03,
            1.0910e-02, -6.1264e-03,  1.4420e-02, -2.1286e-02, -1.2909e-02,
            4.6753e-02, -9.6512e-03,  3.8635e-02,  4.8828e-03, -2.2293e-02,
           -2.9465e-02,  5.7869e-03,  4.7989e-03,  2.4490e-02, -2.8412e-02,
           -5.9570e-02,  1.3542e-02, -1.6251e-02, -5.9891e-03,  3.1414e-03,
            3.4351e-03,  6.2256e-03, -1.2848e-02, -2.7695e-03, -1.7262e-04,
            2.1240e-02, -6.6795e-03,  1.5526e-02,  4.6387e-02,  2.1912e-02,
           -5.2872e-03,  5.3329e-03,  5.9395e-03, -1.1276e-02,  4.4312e-02,
            2.1561e-02]]],


        [[[-9.4452e-03, -4.8828e-03,  4.6158e-03,  9.8724e-03, -4.7241e-02,
            1.7944e-02, -1.3000e-02, -1.3609e-03, -1.1978e-02,  1.1482e-03,
            2.2583e-02, -7.8888e-03,  7.0419e-03, -3.2730e-03, -3.6144e-03,
            1.6586e-02, -5.0583e-03,  1.8768e-02,  1.8921e-03, -7.9155e-04,
            9.6436e-03,  1.0662e-03,  1.0345e-02, -2.9648e-02, -1.2627e-02,
            1.1620e-02,  2.3972e-02,  1.9028e-02, -2.9037e-02, -9.3746e-04,
           -7.1754e-03,  1.7109e-03, -2.8458e-02,  2.3865e-02,  3.3905e-02,
           -1.2955e-02, -1.0063e-02, -3.8727e-02, -1.5396e-02, -2.8473e-02,
           -1.7609e-02, -1.7899e-02,  3.1395e-03,  2.4033e-02,  1.4946e-02,
            4.9530e-02,  2.8397e-02,  1.2756e-02,  1.8120e-05,  5.2299e-03,
           -5.1270e-02,  5.3024e-03, -1.3168e-02, -1.0101e-02, -6.5155e-03,
            3.3150e-03, -7.1945e-03,  9.8114e-03,  1.2650e-02, -1.2489e-02,
            4.9057e-03,  1.6312e-02,  1.9455e-03, -2.4757e-03,  3.3691e-02,
           -1.7212e-02, -1.6174e-02, -9.5291e-03,  1.0094e-02, -2.1439e-02,
            1.0986e-03, -8.3084e-03, -1.4782e-03, -2.0004e-02,  2.2034e-02,
           -7.6981e-03, -1.2428e-02, -2.4841e-02,  1.7607e-04,  7.4959e-03,
            8.6288e-03,  5.5580e-03, -3.5767e-02,  1.9424e-02,  1.5411e-02,
            8.6060e-03, -2.7710e-02, -4.5013e-04,  1.9684e-02,  9.2087e-03,
            8.7280e-03,  3.0380e-02,  3.3844e-02,  4.7150e-03, -1.1505e-02,
            8.4381e-03]]]], dtype=torch.float16)
2025-05-16 03:03:17.633151 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 97, 4, 128],"float16"), Tensor([2, 97, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 97],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0095, -0.0007,  0.0105, -0.0031,  0.0712, -0.0036, -0.0240,
           -0.0065, -0.0136,  0.0050, -0.0074, -0.0070, -0.0024,  0.0308,
           -0.0032,  0.0122,  0.0325, -0.0130, -0.0125,  0.0031,  0.0183,
           -0.0037, -0.0270, -0.0096,  0.0002, -0.0546,  0.0004, -0.0046,
           -0.0151,  0.0274, -0.0119, -0.0070, -0.0011, -0.0099, -0.0032,
           -0.0196,  0.0188,  0.0251, -0.0111,  0.0059, -0.0072, -0.0065,
           -0.0173,  0.0059, -0.0073,  0.0080,  0.0361, -0.0279, -0.0317,
           -0.0232,  0.0160,  0.0104, -0.0042,  0.0293, -0.0058,  0.0088,
            0.0049, -0.0406, -0.0075, -0.0043,  0.0001,  0.0045,  0.0020,
           -0.0211,  0.0102, -0.0354, -0.0223, -0.0132,  0.0575, -0.0081,
           -0.0088,  0.0008,  0.0248, -0.0068,  0.0244, -0.0245, -0.0008,
           -0.0078, -0.0002, -0.0020, -0.0039,  0.0026,  0.0157,  0.0572,
            0.0096,  0.0025,  0.0107,  0.0568, -0.0103,  0.0202,  0.0014,
            0.0035, -0.0094,  0.0251, -0.0265, -0.0239, -0.0172]]],


        [[[-0.0223, -0.0125, -0.0149,  0.0064, -0.0109,  0.0080,  0.0063,
           -0.0127,  0.0126, -0.0089,  0.0253, -0.0314,  0.0234,  0.0083,
            0.0144, -0.0143, -0.0155,  0.0080,  0.0078,  0.0029, -0.0717,
            0.0208, -0.0176, -0.0130,  0.0051,  0.0148,  0.0154,  0.0017,
            0.0143, -0.0255,  0.0185,  0.0289,  0.0066, -0.0180, -0.0056,
            0.0214, -0.0059, -0.0132, -0.0300, -0.0396, -0.0022,  0.0145,
           -0.0111, -0.0071, -0.0124,  0.0023,  0.0023,  0.0372, -0.0064,
            0.0092, -0.0098, -0.0047,  0.0216,  0.0339,  0.0163,  0.0127,
            0.0055, -0.0052, -0.0111,  0.0198, -0.0147,  0.0080, -0.0035,
            0.0037, -0.0399,  0.0172, -0.0228,  0.0004, -0.0196,  0.0041,
            0.0298,  0.0021,  0.0070, -0.0060,  0.0284,  0.0295,  0.0054,
           -0.0093, -0.0172,  0.0113, -0.0136,  0.0169,  0.0321, -0.0053,
            0.0012,  0.0141,  0.0090, -0.0226, -0.0050, -0.0301, -0.0213,
           -0.0110, -0.0033, -0.0293,  0.0018,  0.0317,  0.0283]]]],
       dtype=torch.float16)
2025-05-16 03:03:17.821186 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 98, 4, 128],"float16"), Tensor([2, 98, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 98],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0041,  0.0294,  0.0291,  0.0097, -0.0035,  0.0193,  0.0145,
            0.0569,  0.0120, -0.0328, -0.0049,  0.0246, -0.0108,  0.0008,
           -0.0045, -0.0142, -0.0429, -0.0134, -0.0009,  0.0092, -0.0208,
            0.0155, -0.0215,  0.0005, -0.0322, -0.0171, -0.0177, -0.0172,
            0.0161,  0.0154, -0.0163,  0.0063,  0.0234,  0.0198, -0.0063,
           -0.0237, -0.0075,  0.0023, -0.0103,  0.0106,  0.0125, -0.0248,
           -0.0056,  0.0259, -0.0167,  0.0151,  0.0086, -0.0267,  0.0253,
           -0.0211,  0.0144, -0.0119, -0.0267, -0.0239,  0.0216,  0.0227,
            0.0111, -0.0212,  0.0143,  0.0190,  0.0046, -0.0247, -0.0131,
           -0.0396,  0.0340,  0.0399,  0.0100,  0.0076,  0.0187, -0.0224,
            0.0138, -0.0330, -0.0255, -0.0099,  0.0132,  0.0281,  0.0254,
           -0.0028, -0.0017,  0.0269,  0.0006,  0.0130, -0.0240, -0.0181,
           -0.0242, -0.0050, -0.0235,  0.0694, -0.0334, -0.0280,  0.0198,
           -0.0176, -0.0190,  0.0007,  0.0293,  0.0178, -0.0117,  0.0005]]],


        [[[-0.0046,  0.0323,  0.0366,  0.0027,  0.0021, -0.0103, -0.0016,
           -0.0151, -0.0036,  0.0205, -0.0125,  0.0124,  0.0235,  0.0281,
            0.0129, -0.0142, -0.0157, -0.0052,  0.0490, -0.0128, -0.0206,
           -0.0016, -0.0021, -0.0292, -0.0064, -0.0008,  0.0113, -0.0016,
           -0.0015, -0.0226, -0.0035, -0.0150,  0.0078,  0.0061,  0.0059,
           -0.0092, -0.0151, -0.0284, -0.0077, -0.0103,  0.0453, -0.0248,
           -0.0292,  0.0152,  0.0179,  0.0196,  0.0128, -0.0485, -0.0572,
            0.0058,  0.0069,  0.0039, -0.0170, -0.0075,  0.0443, -0.0064,
           -0.0231,  0.0024,  0.0047,  0.0061, -0.0224,  0.0016,  0.0182,
           -0.0125, -0.0008,  0.0217,  0.0379,  0.0220,  0.0094,  0.0192,
           -0.0251,  0.0047,  0.0041,  0.0010, -0.0150, -0.0073, -0.0071,
           -0.0229, -0.0148, -0.0023, -0.0053,  0.0206,  0.0029,  0.0092,
           -0.0084, -0.0158,  0.0122, -0.0308, -0.0017,  0.0255, -0.0180,
            0.0298,  0.0066,  0.0086, -0.0097,  0.0244, -0.0044, -0.0066]]]],
       dtype=torch.float16)
2025-05-16 03:03:18.045206 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 4, 128],"float16"), Tensor([2, 99, 4, 128],"float16"), Tensor([2, 99, 4, 128],"float16"), attn_mask=Tensor([2, 1, 1, 99],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0023, -0.0071,  0.0232, -0.0232,  0.0099, -0.0241, -0.0032,
            0.0353,  0.0057,  0.0197, -0.0029,  0.0327, -0.0110, -0.0304,
            0.0015, -0.0069,  0.0153,  0.0189,  0.0078,  0.0230,  0.0186,
           -0.0193,  0.0054, -0.0030, -0.0101,  0.0107,  0.0282, -0.0143,
           -0.0066, -0.0392, -0.0213, -0.0004, -0.0414, -0.0121,  0.0046,
            0.0061,  0.0459,  0.0254, -0.0014, -0.0035,  0.0163,  0.0119,
            0.0158,  0.0029, -0.0210,  0.0136, -0.0220, -0.0291, -0.0136,
            0.0002, -0.0143, -0.0104, -0.0038, -0.0153,  0.0344,  0.0076,
            0.0222,  0.0205, -0.0267, -0.0400, -0.0058,  0.0144,  0.0011,
           -0.0044,  0.0075,  0.0005,  0.0033,  0.0164, -0.0106,  0.0123,
            0.0020, -0.0192, -0.0028,  0.0358, -0.0181, -0.0102,  0.0218,
           -0.0109,  0.0099, -0.0083, -0.0271,  0.0131, -0.0156, -0.0043,
           -0.0267,  0.0176,  0.0008,  0.0006, -0.0074, -0.0238, -0.0149,
           -0.0055,  0.0037, -0.0048,  0.0380,  0.0250,  0.0019, -0.0144,
            0.0008]]],


        [[[-0.0031,  0.0121, -0.0109,  0.0016, -0.0334, -0.0078,  0.0104,
           -0.0176, -0.0185, -0.0161,  0.0103, -0.0097, -0.0071,  0.0244,
            0.0034,  0.0005,  0.0056, -0.0073,  0.0113, -0.0015, -0.0090,
           -0.0074,  0.0186, -0.0027,  0.0134,  0.0112,  0.0135,  0.0131,
            0.0374, -0.0260, -0.0243, -0.0163, -0.0047, -0.0039, -0.0361,
            0.0076,  0.0151, -0.0156, -0.0385, -0.0174,  0.0255,  0.0002,
           -0.0245, -0.0090,  0.0005,  0.0158,  0.0128, -0.0099, -0.0222,
           -0.0013, -0.0005, -0.0270,  0.0019,  0.0344,  0.0172,  0.0045,
           -0.0259, -0.0034, -0.0080,  0.0059,  0.0195, -0.0079,  0.0115,
            0.0078, -0.0148, -0.0005, -0.0206, -0.0045, -0.0154, -0.0464,
            0.0191, -0.0142, -0.0048, -0.0193,  0.0223,  0.0116,  0.0068,
            0.0084, -0.0029,  0.0146, -0.0033, -0.0213,  0.0391, -0.0139,
           -0.0163,  0.0135,  0.0181, -0.0128,  0.0033,  0.0447,  0.0356,
            0.0507,  0.0107,  0.0413, -0.0124,  0.0025,  0.0015, -0.0195,
            0.0067]]]], dtype=torch.float16)
2025-05-16 03:03:18.288402 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 111790 / 164352 (68%)
Max absolute difference: 0.5967
Max relative difference: inf
 x: array([[[[-3.3630e-02,  2.1469e-02,  3.8666e-02, ..., -7.2327e-02,
           2.2247e-02, -1.6861e-02],
         [-8.4076e-03,  1.3901e-02,  6.2523e-03, ...,  5.9998e-02,...
 y: array([[[[ 3.5889e-01,  1.9373e-01,  4.4507e-01, ...,  5.7831e-02,
          -1.9798e-03, -9.6802e-02],
         [ 3.4375e-01,  1.6571e-02,  4.6826e-01, ...,  3.7769e-01,...
2025-05-16 03:03:18.578626 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 114234 / 167424 (68.2%)
Max absolute difference: 0.546
Max relative difference: 30032.
 x: array([[[[ 5.9557e-04,  2.5139e-03, -1.5869e-03, ...,  2.0950e-02,
          -5.4703e-03, -2.2568e-02],
         [ 1.0956e-02, -2.3232e-03,  2.5997e-03, ..., -3.0518e-02,...
 y: array([[[[-4.6753e-01,  4.1431e-01, -1.4465e-01, ..., -4.4653e-01,
           4.6558e-01,  7.2449e-02],
         [-8.7097e-02,  4.1431e-01,  3.1714e-01, ..., -4.5117e-01,...
2025-05-16 03:03:18.846478 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 110, 8, 96],"float16"), Tensor([2, 110, 8, 96],"float16"), Tensor([2, 110, 8, 96],"float16"), attn_mask=Tensor([2, 1, 110, 110],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 110, 8, 96],"float16"), Tensor([2, 110, 8, 96],"float16"), Tensor([2, 110, 8, 96],"float16"), attn_mask=Tensor([2, 1, 110, 110],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 114955 / 168960 (68%)
Max absolute difference: 0.5566
Max relative difference: 37216.
 x: array([[[[-1.5717e-02, -1.4740e-02, -1.2001e-02, ..., -3.0041e-03,
           8.4000e-03, -9.5749e-03],
         [-2.3773e-02,  2.8351e-02, -1.4420e-02, ...,  7.0374e-02,...
 y: array([[[[-2.5854e-01,  1.7383e-01, -1.0126e-01, ...,  1.6357e-01,
           4.1211e-01,  2.6880e-01],
         [ 1.7761e-01,  5.8685e-02,  4.1895e-01, ...,  4.0503e-01,...
2025-05-16 03:03:19.058010 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 111, 8, 96],"float16"), Tensor([2, 111, 8, 96],"float16"), Tensor([2, 111, 8, 96],"float16"), attn_mask=Tensor([2, 1, 111, 111],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 111, 8, 96],"float16"), Tensor([2, 111, 8, 96],"float16"), Tensor([2, 111, 8, 96],"float16"), attn_mask=Tensor([2, 1, 111, 111],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 115624 / 170496 (67.8%)
Max absolute difference: 0.544
Max relative difference: inf
 x: array([[[[ 1.5198e-02,  1.2153e-04, -3.7079e-02, ..., -2.5864e-02,
          -1.1566e-02, -5.4413e-02],
         [-6.4697e-03,  1.0262e-02,  5.2368e-02, ..., -4.3488e-02,...
 y: array([[[[-2.9956e-01, -1.5060e-02,  4.2334e-01, ..., -7.8247e-02,
          -4.7546e-02, -2.6978e-01],
         [-4.7510e-01, -1.0474e-01, -2.5293e-01, ..., -4.6973e-01,...
2025-05-16 03:03:19.301852 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 112, 8, 96],"float16"), Tensor([2, 112, 8, 96],"float16"), Tensor([2, 112, 8, 96],"float16"), attn_mask=Tensor([2, 1, 112, 112],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 112, 8, 96],"float16"), Tensor([2, 112, 8, 96],"float16"), Tensor([2, 112, 8, 96],"float16"), attn_mask=Tensor([2, 1, 112, 112],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 116172 / 172032 (67.5%)
Max absolute difference: 0.5557
Max relative difference: 49632.
 x: array([[[[ 0.03195 , -0.0499  , -0.05283 , ...,  0.04294 ,  0.0297  ,
           0.002436],
         [ 0.02147 ,  0.06036 , -0.02377 , ..., -0.04434 ,  0.002274,...
 y: array([[[[ 1.9623e-02, -3.7671e-01,  2.4634e-01, ...,  4.7046e-01,
          -3.0908e-01,  4.0845e-01],
         [-4.3774e-01, -1.1731e-01, -2.7661e-01, ..., -6.5430e-02,...
2025-05-16 03:03:19.500265 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 35, 1, 64],"float16"), Tensor([2, 35, 1, 64],"float16"), Tensor([2, 35, 1, 64],"float16"), attn_mask=Tensor([2, 1, 35, 35],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 2.2430e-03, -1.1055e-02,  2.1591e-02,  ...,  1.3704e-03,
            6.2561e-02, -1.4900e-02],
          [-1.9287e-02, -2.0828e-02,  2.0859e-02,  ...,  1.7410e-02,
           -4.5891e-03, -7.9041e-03],
          [ 5.3215e-03,  2.3926e-02, -1.5656e-02,  ..., -1.0628e-02,
           -3.8361e-02, -2.0889e-02],
          ...,
          [ 1.8478e-02, -4.6120e-03,  1.3939e-02,  ..., -2.0462e-02,
           -2.2110e-02, -2.6993e-02],
          [-2.2980e-02, -1.2064e-03, -4.6883e-03,  ..., -4.4891e-02,
           -1.3437e-03,  1.4847e-02],
          [-9.0179e-03, -1.7593e-02,  2.7237e-03,  ...,  1.8473e-03,
           -1.0925e-02,  4.5013e-03]]],


        [[[ 1.1513e-02, -7.2403e-03, -4.7119e-02,  ..., -2.8275e-02,
            7.6782e-02, -3.2940e-03],
          [ 1.8295e-02,  9.4452e-03,  3.3417e-02,  ..., -2.9221e-02,
            1.5121e-02, -2.3254e-02],
          [-1.0330e-02, -1.0376e-02,  1.1971e-02,  ..., -1.6525e-02,
            8.9502e-04,  9.8038e-03],
          ...,
          [-5.6992e-03,  1.5955e-03, -4.9286e-03,  ...,  3.1066e-04,
            2.8290e-02,  1.5465e-02],
          [-1.2573e-02,  1.1948e-02,  6.7863e-03,  ..., -5.6386e-05,
           -3.7415e-02, -1.0338e-03],
          [ 2.6340e-03,  4.3640e-02, -1.5259e-02,  ..., -1.4458e-02,
           -5.9204e-03,  1.4315e-03]]]], dtype=torch.float16)
2025-05-16 03:03:19.644463 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 36, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), Tensor([2, 36, 1, 64],"float16"), attn_mask=Tensor([2, 1, 36, 36],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0298,  0.0275, -0.0033,  ...,  0.0211, -0.0026,  0.0054],
          [ 0.0031, -0.0022, -0.0266,  ...,  0.0148, -0.0247,  0.0069],
          [ 0.0065,  0.0013, -0.0157,  ..., -0.0316,  0.0570, -0.0140],
          ...,
          [ 0.0204,  0.0258, -0.0416,  ..., -0.0298,  0.0221, -0.0252],
          [-0.0023,  0.0072,  0.0149,  ...,  0.0117, -0.0202, -0.0057],
          [ 0.0007,  0.0484,  0.0154,  ..., -0.0107,  0.0063, -0.0208]]],


        [[[-0.0319,  0.0142,  0.0059,  ..., -0.0019,  0.0026, -0.0228],
          [ 0.0157, -0.0161,  0.0059,  ..., -0.0167, -0.0053,  0.0094],
          [ 0.0069,  0.0425, -0.0310,  ..., -0.0115, -0.0211, -0.0066],
          ...,
          [-0.0237, -0.0072,  0.0061,  ...,  0.0004, -0.0210,  0.0172],
          [ 0.0225,  0.0104,  0.0081,  ..., -0.0060, -0.0032, -0.0035],
          [ 0.0130,  0.0156,  0.0017,  ...,  0.0110, -0.0100, -0.0045]]]],
       dtype=torch.float16)
2025-05-16 03:03:19.862996 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), Tensor([2, 37, 1, 64],"float16"), attn_mask=Tensor([2, 1, 37, 37],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0033, -0.0052,  0.0029,  ...,  0.0082,  0.0271,  0.0093],
          [-0.0329, -0.0415, -0.0009,  ..., -0.0087, -0.0201,  0.0108],
          [ 0.0071,  0.0134, -0.0043,  ...,  0.0095, -0.0016, -0.0110],
          ...,
          [ 0.0218,  0.0378,  0.0092,  ..., -0.0035, -0.0133,  0.0161],
          [ 0.0015,  0.0162, -0.0135,  ...,  0.0202,  0.0023, -0.0094],
          [ 0.0068,  0.0012,  0.0030,  ..., -0.0138,  0.0010,  0.0198]]],


        [[[ 0.0011, -0.0101,  0.0112,  ...,  0.0181,  0.0071,  0.0233],
          [-0.0184,  0.0074, -0.0360,  ..., -0.0527, -0.0117, -0.0053],
          [ 0.0172,  0.0338,  0.0124,  ...,  0.0064,  0.0042,  0.0120],
          ...,
          [-0.0050,  0.0058, -0.0097,  ..., -0.0210,  0.0017,  0.0887],
          [-0.0031, -0.0215,  0.0142,  ...,  0.0204, -0.0022,  0.0119],
          [ 0.0283,  0.0061, -0.0010,  ...,  0.0061,  0.0159,  0.0047]]]],
       dtype=torch.float16)
2025-05-16 03:03:20.092375 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 38, 38],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.1759e-02, -1.7151e-02, -3.6964e-03,  ...,  4.3449e-03,
            1.0666e-02, -1.6602e-02],
          [ 1.6968e-02, -1.7792e-02, -8.4076e-03,  ...,  4.9515e-03,
           -8.8196e-03, -6.5613e-03],
          [ 8.0032e-03, -4.9057e-03, -4.5943e-04,  ..., -5.3558e-03,
           -4.3602e-03,  1.4076e-03],
          ...,
          [-4.3144e-03,  6.6452e-03,  8.4457e-03,  ..., -6.9427e-03,
           -8.9645e-04, -4.2175e-02],
          [-5.0278e-03, -1.3016e-02,  1.1787e-03,  ...,  1.1719e-02,
           -7.8106e-04, -7.3929e-03],
          [-3.7074e-05, -7.2098e-04, -1.5617e-02,  ..., -2.8214e-02,
           -8.4457e-03,  1.6846e-02]]],


        [[[-2.0767e-02,  8.4610e-03,  1.7288e-02,  ...,  3.9673e-03,
            1.9104e-02, -5.2795e-02],
          [-4.7379e-03, -9.9945e-03, -5.0507e-03,  ...,  8.8806e-03,
           -7.4348e-03, -1.2207e-02],
          [-3.3264e-03, -1.1015e-03, -4.7646e-03,  ...,  9.1782e-03,
            1.2733e-02, -2.4139e-02],
          ...,
          [-1.0704e-02, -1.7990e-02,  1.0803e-02,  ...,  5.0449e-04,
           -4.4525e-02,  9.4271e-04],
          [-1.1551e-02,  6.9275e-03,  5.4741e-04,  ...,  3.5278e-02,
           -7.7324e-03, -3.3478e-02],
          [-2.3239e-02, -1.0292e-02, -9.2239e-03,  ..., -1.6861e-02,
            4.5441e-02,  1.2646e-03]]]], dtype=torch.float16)
2025-05-16 03:03:20.253447 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), Tensor([2, 38, 1, 64],"float16"), attn_mask=Tensor([2, 1, 38, 38],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0036,  0.0216,  0.0293,  ...,  0.0169,  0.0309, -0.0007],
          [ 0.0209, -0.0040, -0.0097,  ..., -0.0551,  0.0091,  0.0219],
          [-0.0011,  0.0105,  0.0106,  ...,  0.0059, -0.0528,  0.0210],
          ...,
          [ 0.0233,  0.0152,  0.0093,  ..., -0.0159, -0.0012, -0.0116],
          [ 0.0167,  0.0243,  0.0035,  ..., -0.0165,  0.0023, -0.0073],
          [ 0.0193,  0.0119,  0.0056,  ...,  0.0349,  0.0106, -0.0343]]],


        [[[ 0.0142, -0.0120, -0.0096,  ..., -0.0056,  0.0325,  0.0051],
          [-0.0225, -0.0039, -0.0269,  ..., -0.0188, -0.0069, -0.0183],
          [ 0.0087, -0.0273, -0.0081,  ..., -0.0062, -0.0072,  0.0376],
          ...,
          [-0.0062, -0.0305, -0.0162,  ..., -0.0011, -0.0095,  0.0012],
          [ 0.0026,  0.0102, -0.0469,  ...,  0.0053,  0.0028,  0.0109],
          [-0.0022, -0.0055, -0.0234,  ..., -0.0034,  0.0165, -0.0011]]]],
       dtype=torch.float16)
2025-05-16 03:03:20.473953 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 38, 4, 128],"float16"), Tensor([2, 38, 4, 128],"float16"), Tensor([2, 38, 4, 128],"float16"), attn_mask=Tensor([2, 1, 38, 38],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0056, -0.0962,  0.0111,  ...,  0.0293, -0.0611,  0.0638],
          [ 0.0347, -0.0284,  0.0381,  ..., -0.1152,  0.0247, -0.0006],
          [ 0.0315, -0.0057,  0.0571,  ...,  0.0023, -0.0023, -0.0029],
          ...,
          [ 0.1165, -0.0837, -0.0997,  ...,  0.0488,  0.0116,  0.1335],
          [ 0.0469, -0.0364, -0.0198,  ...,  0.0781, -0.0802, -0.0403],
          [ 0.0109,  0.0112,  0.0446,  ...,  0.0632, -0.0714, -0.0088]]],


        [[[-0.0223, -0.0555,  0.0116,  ..., -0.0181, -0.0462,  0.0042],
          [-0.0303, -0.0273, -0.0077,  ..., -0.0065, -0.0452,  0.0303],
          [ 0.0097,  0.0748, -0.0162,  ..., -0.0328,  0.0025, -0.0035],
          ...,
          [-0.0789,  0.0197,  0.0221,  ...,  0.0114,  0.0162, -0.0284],
          [-0.0132,  0.0575, -0.0688,  ...,  0.0756,  0.0692,  0.0222],
          [-0.0301,  0.0626,  0.0313,  ...,  0.0527,  0.0078,  0.0713]]]],
       dtype=torch.float16)
2025-05-16 03:03:20.717202 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 39, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 4.6043e-03, -3.4618e-03,  2.8725e-03,  ..., -1.2848e-02,
           -1.1879e-02, -2.0828e-02],
          [-2.5223e-02,  8.0032e-03, -2.9221e-02,  ..., -2.5635e-03,
           -1.9562e-02, -2.3819e-02],
          [ 1.3634e-02, -1.6470e-03, -2.4277e-02,  ..., -8.2245e-03,
           -5.8632e-03,  1.1406e-02],
          ...,
          [-3.9291e-03,  1.7090e-02,  9.7504e-03,  ...,  1.2146e-02,
           -2.2781e-04,  1.0208e-02],
          [ 1.3603e-02,  4.7874e-03, -5.2071e-03,  ...,  8.0872e-03,
           -3.0804e-03,  2.1744e-02],
          [ 1.5732e-02,  2.6764e-02,  1.8936e-02,  ..., -1.9943e-02,
           -1.3437e-03, -1.0780e-02]]],


        [[[-6.3438e-03,  1.4000e-03,  4.0222e-02,  ...,  1.5656e-02,
           -4.0741e-03, -9.1248e-03],
          [ 1.7624e-02,  7.6447e-03,  2.3849e-02,  ..., -2.5070e-02,
           -1.7195e-03, -7.3547e-03],
          [ 1.9897e-02,  1.5503e-02, -1.8749e-03,  ..., -6.8359e-03,
           -3.5339e-02, -2.6989e-03],
          ...,
          [ 1.1818e-02, -2.9731e-04,  4.4067e-02,  ...,  2.3834e-02,
            1.0132e-02,  1.4313e-02],
          [-2.7084e-02,  6.9885e-02,  1.0399e-02,  ...,  1.7792e-02,
           -9.7046e-03,  9.1324e-03],
          [ 1.7443e-03, -7.2060e-03,  1.7929e-02,  ..., -1.2115e-02,
           -6.3598e-05,  8.7585e-03]]]], dtype=torch.float16)
2025-05-16 03:03:20.882042 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), Tensor([2, 39, 1, 64],"float16"), attn_mask=Tensor([2, 1, 39, 39],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 1.0742e-02,  8.1329e-03,  1.1742e-02,  ..., -2.0828e-03,
            7.7820e-03,  7.0000e-03],
          [ 8.6365e-03, -3.0609e-02,  2.1118e-02,  ..., -6.1798e-03,
            1.5625e-02, -5.5695e-03],
          [ 1.3245e-02, -2.8488e-02,  3.1605e-03,  ..., -1.0986e-02,
           -2.1790e-02, -2.8854e-02],
          ...,
          [ 1.1803e-02,  2.2324e-02, -1.1414e-02,  ...,  1.8415e-03,
            1.5421e-03,  3.5801e-03],
          [-2.0859e-02,  1.4259e-02,  1.9318e-02,  ..., -1.9798e-03,
           -1.7212e-02, -1.0056e-02],
          [ 5.5733e-03,  9.3079e-03, -1.8139e-03,  ...,  6.4697e-03,
           -8.5754e-03,  4.2305e-03]]],


        [[[-6.9885e-03,  2.9964e-03,  1.2047e-02,  ..., -2.6138e-02,
           -3.0731e-02,  1.1092e-04],
          [ 3.5400e-02,  8.6594e-03, -2.0733e-03,  ..., -1.6510e-05,
            1.0509e-03, -3.1261e-03],
          [ 6.4812e-03,  3.3913e-03, -7.4692e-03,  ...,  1.6235e-02,
           -1.8051e-02,  6.9427e-03],
          ...,
          [ 1.6953e-02, -2.7954e-02, -1.1272e-03,  ...,  3.2196e-02,
            1.3718e-02, -3.3569e-02],
          [ 2.0355e-02, -5.6934e-04, -2.2446e-02,  ..., -2.3746e-03,
            7.5264e-03,  5.8699e-04],
          [-7.2937e-03, -6.1836e-03, -2.4738e-03,  ..., -2.4704e-02,
           -1.3161e-02, -1.1024e-03]]]], dtype=torch.float16)
2025-05-16 03:03:21.105466 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 39, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), Tensor([2, 39, 4, 128],"float16"), attn_mask=Tensor([2, 1, 39, 39],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0102,  0.0450, -0.0279,  ...,  0.0546, -0.0248, -0.0217],
          [ 0.1143,  0.0092, -0.0677,  ..., -0.0450,  0.0025,  0.0704],
          [-0.0338, -0.0341, -0.0395,  ...,  0.0835,  0.0387,  0.0135],
          ...,
          [-0.0010,  0.0203, -0.0610,  ..., -0.0555, -0.0441,  0.0007],
          [-0.0381, -0.0199,  0.0362,  ..., -0.0006, -0.0320,  0.0439],
          [-0.0167,  0.0286,  0.0116,  ...,  0.0058, -0.0311, -0.0748]]],


        [[[ 0.0751,  0.0019,  0.0052,  ...,  0.0823,  0.0649,  0.0454],
          [ 0.0284,  0.0373, -0.0623,  ..., -0.0541,  0.1899, -0.0131],
          [ 0.0310, -0.0228,  0.0289,  ..., -0.0366,  0.0110,  0.0748],
          ...,
          [-0.0274, -0.0208,  0.0327,  ..., -0.0489,  0.0044, -0.0156],
          [-0.0144,  0.0480, -0.0143,  ..., -0.0033, -0.0488,  0.1598],
          [ 0.0585, -0.0223, -0.0660,  ..., -0.0638,  0.0104,  0.0359]]]],
       dtype=torch.float16)
2025-05-16 03:03:21.343862 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 40, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), Tensor([2, 40, 4, 128],"float16"), attn_mask=Tensor([2, 1, 40, 40],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0220, -0.0319, -0.0076,  ..., -0.0107, -0.0405, -0.0255],
          [-0.0468, -0.0028,  0.0043,  ...,  0.1870,  0.0071,  0.0481],
          [ 0.0846,  0.0412,  0.0048,  ...,  0.0074, -0.0498,  0.0149],
          ...,
          [-0.0195,  0.0933,  0.0042,  ..., -0.0067, -0.0191,  0.0198],
          [-0.0400,  0.1062,  0.0227,  ...,  0.0397,  0.0406, -0.0136],
          [ 0.0093, -0.0475, -0.0113,  ...,  0.0317, -0.0079,  0.0200]]],


        [[[ 0.1432, -0.0226,  0.0194,  ..., -0.0350, -0.0169,  0.0165],
          [-0.0056, -0.1263,  0.0330,  ..., -0.0125, -0.0050,  0.0693],
          [ 0.0400,  0.0024,  0.1071,  ...,  0.0938, -0.0402, -0.0861],
          ...,
          [-0.0401, -0.0258, -0.0138,  ..., -0.0038,  0.0385,  0.0555],
          [ 0.0011,  0.0268,  0.0009,  ...,  0.0293,  0.0016,  0.0205],
          [-0.0026,  0.0282, -0.0353,  ..., -0.0206, -0.0060,  0.0050]]]],
       dtype=torch.float16)
2025-05-16 03:03:21.523763 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 41, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), Tensor([2, 41, 4, 128],"float16"), attn_mask=Tensor([2, 1, 41, 41],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0152, -0.0598, -0.0102,  ...,  0.0178, -0.0250,  0.0549],
          [-0.0614,  0.0136, -0.0003,  ...,  0.0265, -0.0901,  0.0179],
          [ 0.0300,  0.0500, -0.0169,  ..., -0.0281, -0.0340, -0.0360],
          ...,
          [-0.0254, -0.0475,  0.0031,  ..., -0.0399, -0.0288, -0.0131],
          [-0.0684, -0.0143, -0.0177,  ...,  0.0921, -0.0930,  0.0411],
          [ 0.0189,  0.0545,  0.0129,  ...,  0.1353,  0.1495, -0.0372]]],


        [[[ 0.0694, -0.0128,  0.0080,  ..., -0.0550,  0.0129,  0.0343],
          [-0.0036, -0.0143, -0.0139,  ...,  0.0150,  0.0466, -0.0161],
          [-0.0280, -0.0770,  0.0328,  ..., -0.0380, -0.0662,  0.0237],
          ...,
          [ 0.0848, -0.1367, -0.0078,  ...,  0.0700, -0.0221,  0.0034],
          [-0.0056,  0.0100,  0.0010,  ...,  0.0718, -0.0433,  0.0552],
          [ 0.0073, -0.0920,  0.1299,  ...,  0.0481, -0.0234, -0.0742]]]],
       dtype=torch.float16)
2025-05-16 03:03:21.690294 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), Tensor([2, 45, 1, 64],"float16"), attn_mask=Tensor([2, 1, 45, 45],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-0.0616, -0.0070, -0.0171,  ...,  0.0173, -0.0244,  0.0208],
          [ 0.0108, -0.0163, -0.0027,  ..., -0.0014,  0.0002, -0.0054],
          [ 0.0096, -0.0032, -0.0122,  ..., -0.0163, -0.0016, -0.0126],
          ...,
          [-0.0225, -0.0106,  0.0184,  ..., -0.0115, -0.0063, -0.0091],
          [-0.0126,  0.0104,  0.0304,  ..., -0.0062, -0.0109,  0.0218],
          [-0.0177, -0.0030, -0.0027,  ...,  0.0067,  0.0028,  0.0179]]],


        [[[-0.0048, -0.0042, -0.0130,  ...,  0.0034,  0.0080,  0.0150],
          [ 0.0151,  0.0234, -0.0029,  ...,  0.0126,  0.0026, -0.0285],
          [ 0.0174,  0.0041,  0.0013,  ...,  0.0290, -0.0048,  0.0005],
          ...,
          [ 0.0132, -0.0131, -0.0012,  ..., -0.0185, -0.0050, -0.0011],
          [ 0.0082,  0.0159,  0.0344,  ..., -0.0109, -0.0364,  0.0082],
          [-0.0150, -0.0027, -0.0023,  ...,  0.0191,  0.0076,  0.0034]]]],
       dtype=torch.float16)
2025-05-16 03:03:21.840203 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), Tensor([2, 47, 1, 64],"float16"), attn_mask=Tensor([2, 1, 47, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-5.6458e-02, -2.6474e-02,  5.8899e-03,  ...,  3.6659e-03,
            2.4002e-02,  1.4782e-03],
          [-1.6003e-03,  6.9237e-03,  1.3725e-02,  ..., -1.4365e-05,
           -1.7757e-03,  8.9645e-03],
          [-1.4313e-02, -1.1168e-03,  1.8143e-02,  ..., -2.4155e-02,
            4.6539e-03,  8.4381e-03],
          ...,
          [-3.2349e-02, -2.1484e-02,  1.2276e-02,  ...,  3.4241e-02,
           -2.3026e-02,  1.1009e-02],
          [ 2.1332e-02, -4.6272e-03, -1.7181e-02,  ..., -2.2373e-03,
            3.2593e-02, -1.4442e-02],
          [-2.2640e-03,  2.4986e-03,  2.9633e-02,  ..., -1.3794e-02,
           -1.6983e-02, -5.3833e-02]]],


        [[[ 2.9984e-02, -1.4931e-02, -2.3376e-02,  ..., -6.0425e-03,
           -8.1730e-04,  9.9716e-03],
          [-1.8524e-02, -1.4252e-02,  6.5117e-03,  ...,  4.2953e-03,
           -1.1177e-02,  1.7729e-03],
          [-1.2573e-02,  8.5220e-03,  1.3809e-02,  ..., -5.6114e-03,
            4.0054e-04,  1.0231e-02],
          ...,
          [-3.6774e-02, -1.4334e-03,  1.4458e-02,  ...,  8.1482e-03,
            7.3433e-03, -1.6632e-02],
          [-2.4090e-03,  7.3204e-03,  3.8834e-03,  ...,  3.9697e-05,
            1.8215e-03, -1.2703e-02],
          [-1.1559e-03, -2.1652e-02, -2.7728e-04,  ..., -6.6833e-03,
           -3.0914e-02,  1.5617e-02]]]], dtype=torch.float16)
2025-05-16 03:03:22.064928 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 47, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), Tensor([2, 47, 4, 128],"float16"), attn_mask=Tensor([2, 1, 47, 47],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 1.5060e-02,  7.8674e-02, -6.0616e-03,  ..., -2.0248e-02,
           -9.3918e-03, -5.6793e-02],
          [-9.5367e-05, -6.7062e-03,  1.0391e-02,  ...,  2.6459e-02,
            1.4374e-02, -3.3142e-02],
          [ 5.9662e-02, -6.7940e-03,  1.6525e-02,  ...,  5.9387e-02,
            2.8458e-02, -9.5901e-03],
          ...,
          [-8.9966e-02, -1.1330e-02, -1.9424e-02,  ..., -3.2120e-03,
            7.6294e-02,  2.5146e-02],
          [ 1.0254e-02,  3.4698e-02,  5.2643e-03,  ...,  5.7556e-02,
           -2.0508e-02,  1.3779e-02],
          [ 1.9821e-02, -5.7373e-02,  9.2346e-02,  ...,  2.5314e-02,
            1.9348e-02,  9.0790e-03]]],


        [[[-3.6835e-02,  7.4097e-02, -2.5879e-02,  ...,  5.3711e-02,
           -1.0612e-02,  1.9333e-02],
          [-3.2288e-02, -1.3809e-02, -2.3575e-02,  ...,  1.2711e-02,
            6.6090e-04,  5.2155e-02],
          [ 9.3079e-04, -2.3651e-03,  1.9241e-02,  ...,  8.5754e-03,
            5.5542e-03,  1.8890e-02],
          ...,
          [ 9.8190e-03,  1.9226e-03, -1.9913e-02,  ..., -1.6663e-02,
            9.1553e-04,  5.3162e-02],
          [-7.6721e-02, -5.1392e-02,  3.2074e-02,  ..., -3.8776e-03,
            8.7662e-03,  4.4891e-02],
          [-2.2125e-02, -6.8665e-03, -2.9846e-02,  ..., -1.5469e-03,
            1.6785e-03,  2.8275e-02]]]], dtype=torch.float16)
2025-05-16 03:03:22.315697 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 50, 50],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.9800e-02,  4.1466e-03,  1.6689e-03,  ..., -1.7899e-02,
            7.9727e-03,  2.7962e-03],
          [-1.7822e-02,  2.5730e-03, -2.0966e-02,  ..., -1.5404e-02,
            8.3542e-03, -6.6261e-03],
          [ 4.0512e-03, -1.7746e-02, -1.9302e-02,  ...,  3.5725e-03,
            2.5070e-02,  5.2929e-04],
          ...,
          [ 1.1284e-02,  3.1555e-02,  2.6989e-03,  ...,  9.5139e-03,
           -2.7039e-02,  8.7357e-03],
          [-7.3090e-03,  9.9716e-03, -1.7029e-02,  ...,  6.8092e-03,
           -5.1193e-03, -1.3809e-02],
          [ 1.2100e-02,  3.1452e-03,  5.6076e-03,  ..., -1.4793e-02,
           -1.8433e-02,  8.1711e-03]]],


        [[[ 2.0828e-02,  1.7029e-02, -1.1444e-02,  ..., -3.9005e-03,
           -6.9962e-03,  5.2910e-03],
          [ 8.7051e-03,  1.4053e-02,  2.0828e-03,  ..., -1.2045e-03,
           -3.1071e-03,  2.8580e-02],
          [-4.5013e-03, -1.3748e-02, -9.4452e-03,  ..., -2.6657e-02,
            8.2855e-03, -2.1072e-02],
          ...,
          [-2.2774e-03,  1.4336e-02, -2.9850e-03,  ...,  6.3057e-03,
            6.6643e-03, -4.4899e-03],
          [ 1.6174e-02,  1.2817e-02,  1.0941e-02,  ...,  2.3746e-03,
           -1.1154e-02,  2.8610e-05],
          [ 3.1929e-03, -1.7776e-02,  5.0850e-03,  ..., -9.3689e-03,
           -1.2749e-02,  1.3885e-02]]]], dtype=torch.float16)
2025-05-16 03:03:22.473535 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), Tensor([2, 50, 1, 64],"float16"), attn_mask=Tensor([2, 1, 50, 50],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0098,  0.0076,  0.0049,  ...,  0.0030,  0.0190, -0.0028],
          [-0.0471, -0.0166,  0.0067,  ...,  0.0012, -0.0124, -0.0118],
          [-0.0097,  0.0083,  0.0065,  ...,  0.0077,  0.0105, -0.0097],
          ...,
          [-0.0086, -0.0149,  0.0015,  ..., -0.0060, -0.0068,  0.0154],
          [ 0.0049,  0.0071, -0.0044,  ...,  0.0172, -0.0032,  0.0118],
          [-0.0047, -0.0167, -0.0020,  ...,  0.0181,  0.0062,  0.0008]]],


        [[[-0.0075,  0.0156,  0.0035,  ..., -0.0119,  0.0037,  0.0061],
          [ 0.0266, -0.0070, -0.0119,  ...,  0.0136, -0.0098,  0.0022],
          [-0.0007, -0.0368,  0.0048,  ...,  0.0020,  0.0033,  0.0108],
          ...,
          [ 0.0051,  0.0092,  0.0198,  ...,  0.0021,  0.0225, -0.0076],
          [-0.0058,  0.0031,  0.0078,  ..., -0.0373, -0.0071,  0.0172],
          [ 0.0109, -0.0113, -0.0086,  ...,  0.0018,  0.0058, -0.0067]]]],
       dtype=torch.float16)
2025-05-16 03:03:22.686588 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 51, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0192, -0.0052,  0.0060,  ...,  0.0130, -0.0032,  0.0035],
          [-0.0075, -0.0094,  0.0186,  ..., -0.0154,  0.0041,  0.0129],
          [ 0.0018, -0.0078, -0.0308,  ...,  0.0009, -0.0039,  0.0026],
          ...,
          [ 0.0038, -0.0032,  0.0064,  ..., -0.0240,  0.0304, -0.0050],
          [ 0.0184, -0.0173, -0.0108,  ..., -0.0192, -0.0029, -0.0144],
          [-0.0013,  0.0156, -0.0028,  ..., -0.0077, -0.0076, -0.0067]]],


        [[[-0.0064,  0.0057,  0.0050,  ..., -0.0105,  0.0090, -0.0083],
          [-0.0145,  0.0181,  0.0146,  ...,  0.0174, -0.0156,  0.0011],
          [ 0.0039,  0.0052, -0.0206,  ..., -0.0010, -0.0046, -0.0093],
          ...,
          [-0.0023,  0.0051, -0.0060,  ...,  0.0016, -0.0097, -0.0066],
          [ 0.0122, -0.0233,  0.0154,  ..., -0.0088,  0.0049,  0.0007],
          [ 0.0152, -0.0174,  0.0055,  ..., -0.0085, -0.0060, -0.0264]]]],
       dtype=torch.float16)
2025-05-16 03:03:22.913309 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), Tensor([2, 51, 1, 64],"float16"), attn_mask=Tensor([2, 1, 51, 51],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0023, -0.0069, -0.0174,  ..., -0.0015,  0.0260,  0.0161],
          [-0.0018,  0.0076, -0.0047,  ...,  0.0037,  0.0052,  0.0056],
          [-0.0010, -0.0018, -0.0010,  ...,  0.0135,  0.0295,  0.0021],
          ...,
          [ 0.0009, -0.0093, -0.0249,  ...,  0.0009,  0.0012, -0.0047],
          [-0.0080,  0.0153, -0.0006,  ..., -0.0152, -0.0114,  0.0166],
          [ 0.0144,  0.0123,  0.0017,  ...,  0.0005, -0.0063,  0.0049]]],


        [[[ 0.0261, -0.0294, -0.0076,  ..., -0.0188,  0.0140,  0.0118],
          [-0.0071, -0.0003,  0.0106,  ..., -0.0089,  0.0135,  0.0035],
          [ 0.0007,  0.0177,  0.0019,  ..., -0.0076, -0.0130, -0.0052],
          ...,
          [ 0.0252, -0.0070, -0.0090,  ...,  0.0037, -0.0033,  0.0045],
          [-0.0096,  0.0084,  0.0039,  ..., -0.0009, -0.0037,  0.0162],
          [ 0.0101, -0.0163, -0.0185,  ...,  0.0082, -0.0296,  0.0017]]]],
       dtype=torch.float16)
2025-05-16 03:03:23.078996 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 51, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), Tensor([2, 51, 4, 128],"float16"), attn_mask=Tensor([2, 1, 51, 51],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0111, -0.0129,  0.0280,  ...,  0.0092,  0.0431,  0.0029],
          [-0.0543, -0.0144, -0.0089,  ..., -0.0323, -0.0172,  0.0524],
          [ 0.0142, -0.0395,  0.0111,  ...,  0.0016, -0.0042,  0.0135],
          ...,
          [ 0.0131,  0.0284,  0.1033,  ...,  0.0387, -0.0019,  0.0004],
          [-0.0216, -0.0010,  0.0033,  ..., -0.0714, -0.0298,  0.0645],
          [ 0.0282, -0.0149, -0.0212,  ..., -0.0515, -0.0019,  0.0467]]],


        [[[ 0.0081,  0.0575,  0.0267,  ..., -0.0338, -0.0370, -0.0372],
          [-0.0165,  0.0140, -0.0595,  ..., -0.0623,  0.0282, -0.0089],
          [ 0.0199, -0.0464, -0.0622,  ...,  0.0092,  0.0524,  0.0198],
          ...,
          [-0.0270,  0.0677,  0.0187,  ...,  0.0306,  0.0054,  0.0159],
          [-0.0994,  0.0178,  0.0184,  ..., -0.0017, -0.0555, -0.0180],
          [-0.0812, -0.0249,  0.0008,  ..., -0.0598,  0.0009, -0.0182]]]],
       dtype=torch.float16)
2025-05-16 03:03:23.260625 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 52, 52],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-2.9190e-02, -1.0857e-02,  5.7793e-03,  ...,  1.2413e-02,
            8.4763e-03, -6.3515e-04],
          [-6.8283e-03, -6.0272e-03, -5.2795e-03,  ..., -2.5558e-03,
           -2.2259e-03, -4.7951e-03],
          [-1.0750e-02,  1.4007e-05,  5.3864e-03,  ..., -1.9806e-02,
           -6.6719e-03,  6.2752e-04],
          ...,
          [-2.1973e-02,  2.7008e-03,  1.2115e-02,  ..., -1.0223e-02,
           -1.1241e-04,  1.6693e-02],
          [-2.1954e-03,  1.8616e-03, -1.7960e-02,  ..., -9.0027e-03,
            9.2926e-03, -3.5172e-03],
          [-1.0361e-02, -1.0262e-02, -6.0196e-03,  ..., -1.5736e-03,
           -4.8981e-03,  3.2711e-03]]],


        [[[-1.4114e-02, -6.5804e-03,  5.6171e-04,  ...,  4.8370e-03,
            4.4608e-04, -2.3329e-04],
          [-2.3636e-02,  1.8250e-02,  8.2245e-03,  ...,  8.5831e-03,
            1.4648e-03, -2.2087e-03],
          [-1.1581e-02, -1.0433e-03,  4.8294e-03,  ...,  6.3782e-03,
           -4.0703e-03,  7.9117e-03],
          ...,
          [-5.8136e-03, -1.2960e-03,  3.4771e-03,  ..., -2.1725e-03,
            5.6839e-03,  9.7198e-03],
          [-1.3065e-03,  1.3077e-02,  1.6586e-02,  ...,  8.4152e-03,
            3.3550e-03,  5.3894e-02],
          [ 1.4931e-02,  1.2802e-02, -6.3896e-03,  ...,  3.1769e-02,
            2.7161e-03,  2.2659e-02]]]], dtype=torch.float16)
2025-05-16 03:03:23.416042 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), Tensor([2, 52, 1, 64],"float16"), attn_mask=Tensor([2, 1, 52, 52],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 0.0097, -0.0213, -0.0167,  ...,  0.0089,  0.0147, -0.0026],
          [ 0.0125,  0.0139,  0.0162,  ..., -0.0249, -0.0067,  0.0083],
          [ 0.0093, -0.0043, -0.0121,  ...,  0.0129, -0.0050, -0.0072],
          ...,
          [ 0.0036, -0.0037, -0.0222,  ..., -0.0087, -0.0070, -0.0117],
          [ 0.0110, -0.0142, -0.0108,  ...,  0.0027,  0.0061, -0.0045],
          [ 0.0240, -0.0225, -0.0090,  ...,  0.0018,  0.0293,  0.0072]]],


        [[[-0.0005, -0.0063, -0.0005,  ..., -0.0322, -0.0071,  0.0053],
          [ 0.0128,  0.0260,  0.0034,  ..., -0.0110, -0.0102,  0.0014],
          [ 0.0042,  0.0188,  0.0117,  ..., -0.0166, -0.0184,  0.0126],
          ...,
          [ 0.0331,  0.0054, -0.0105,  ...,  0.0041, -0.0027, -0.0129],
          [ 0.0014,  0.0078,  0.0153,  ..., -0.0004, -0.0185, -0.0210],
          [ 0.0126, -0.0056, -0.0108,  ..., -0.0134, -0.0053, -0.0057]]]],
       dtype=torch.float16)
2025-05-16 03:03:23.662107 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 53, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), Tensor([2, 53, 4, 128],"float16"), attn_mask=Tensor([2, 1, 53, 53],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0139,  0.0092, -0.0006,  ..., -0.0484,  0.0141,  0.0128],
          [-0.0580, -0.0224, -0.0090,  ..., -0.0359,  0.0569,  0.0371],
          [ 0.0121,  0.0032,  0.0134,  ..., -0.0457, -0.0484, -0.0357],
          ...,
          [-0.0333,  0.0532,  0.0011,  ..., -0.0088, -0.0408,  0.0065],
          [-0.0239,  0.0015,  0.0045,  ...,  0.0746, -0.0386, -0.0200],
          [ 0.0085, -0.0419, -0.0424,  ...,  0.0232, -0.0175,  0.0075]]],


        [[[-0.0447,  0.0337,  0.0098,  ...,  0.0918, -0.0492, -0.0035],
          [ 0.0009, -0.0030, -0.0440,  ...,  0.0275, -0.0210, -0.0342],
          [-0.0452, -0.0047,  0.0206,  ...,  0.0295,  0.0616,  0.0421],
          ...,
          [ 0.0148, -0.0143, -0.0045,  ..., -0.0188, -0.0094,  0.0362],
          [ 0.0706,  0.0330, -0.0352,  ..., -0.0120, -0.0030,  0.0110],
          [ 0.0088, -0.0143, -0.0292,  ...,  0.0124, -0.0076,  0.0067]]]],
       dtype=torch.float16)
2025-05-16 03:03:23.855181 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 54, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), Tensor([2, 54, 4, 128],"float16"), attn_mask=Tensor([2, 1, 54, 54],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0032,  0.0324, -0.0439,  ..., -0.0417,  0.0432, -0.0064],
          [-0.0282, -0.0247, -0.0295,  ..., -0.0015, -0.0003,  0.0015],
          [ 0.0896, -0.0316, -0.0073,  ...,  0.0230,  0.0291,  0.0111],
          ...,
          [-0.0047,  0.0086, -0.0051,  ..., -0.0008,  0.0305, -0.0007],
          [-0.0152, -0.0258,  0.0210,  ..., -0.0057,  0.0142, -0.0140],
          [-0.0016,  0.0175, -0.0026,  ..., -0.0989,  0.0240,  0.0119]]],


        [[[-0.0269, -0.0226,  0.0007,  ...,  0.0198,  0.0532,  0.0751],
          [ 0.0088,  0.0715,  0.0192,  ...,  0.0253, -0.0344, -0.0188],
          [ 0.0012,  0.0566, -0.0055,  ..., -0.0189,  0.0118, -0.0090],
          ...,
          [ 0.0710,  0.0473, -0.0013,  ...,  0.0107, -0.0079, -0.0211],
          [-0.0735,  0.0194, -0.0137,  ...,  0.0079,  0.0230,  0.0080],
          [-0.0244, -0.0138,  0.0271,  ...,  0.0598,  0.0045, -0.0100]]]],
       dtype=torch.float16)
2025-05-16 03:03:24.093140 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), Tensor([2, 57, 1, 64],"float16"), attn_mask=Tensor([2, 1, 57, 57],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 2.6062e-02, -1.7929e-02,  1.7288e-02,  ...,  1.5625e-02,
           -1.3351e-02, -4.0932e-03],
          [ 1.3819e-03, -4.3396e-02, -1.3786e-02,  ..., -6.2485e-03,
           -5.4359e-03, -1.2375e-02],
          [ 1.2169e-03,  2.0660e-02, -6.3934e-03,  ..., -2.4853e-03,
            9.6977e-05,  2.7714e-03],
          ...,
          [ 8.7814e-03,  9.9945e-04,  6.4230e-04,  ...,  6.6566e-03,
            4.0359e-03, -9.0170e-04],
          [ 1.2611e-02,  2.9469e-03, -3.0613e-03,  ...,  2.0325e-02,
            3.4313e-03,  2.5925e-02],
          [-2.2629e-02, -4.9057e-03, -2.0981e-03,  ..., -1.1665e-02,
            7.2718e-04,  5.1422e-03]]],


        [[[ 8.0414e-03, -5.3406e-03,  1.4915e-02,  ...,  1.1692e-03,
           -5.2261e-03, -1.5839e-02],
          [ 8.0185e-03,  1.1482e-02,  2.1240e-02,  ..., -1.6220e-02,
            1.0689e-02, -1.1337e-02],
          [-6.6109e-03,  1.6571e-02, -1.1063e-02,  ..., -2.9343e-02,
           -4.2868e-04,  1.2421e-02],
          ...,
          [ 1.5059e-03, -6.4583e-03,  1.5574e-03,  ..., -1.2474e-02,
           -2.3003e-03, -3.8834e-03],
          [ 1.9440e-02,  5.2681e-03,  1.2711e-02,  ..., -2.5314e-02,
            1.7366e-03,  1.5396e-02],
          [-9.1095e-03,  6.8512e-03,  1.8661e-02,  ...,  4.7722e-03,
           -5.1231e-03, -5.0688e-04]]]], dtype=torch.float16)
2025-05-16 03:03:24.327549 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 57, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), Tensor([2, 57, 4, 128],"float16"), attn_mask=Tensor([2, 1, 57, 57],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[ 0.0152,  0.0032,  0.0023,  ...,  0.0258,  0.0062, -0.0473],
          [ 0.0211,  0.0443, -0.0172,  ..., -0.0340,  0.0082, -0.0394],
          [ 0.0247, -0.0246, -0.0158,  ..., -0.0408,  0.0190, -0.0430],
          ...,
          [ 0.0181,  0.0658, -0.0267,  ..., -0.0448,  0.0482, -0.0110],
          [ 0.0825, -0.0159, -0.0074,  ..., -0.0039,  0.0035,  0.0713],
          [-0.0065, -0.0048, -0.0289,  ..., -0.0212,  0.0624, -0.0448]]],


        [[[-0.0331, -0.0051,  0.0103,  ..., -0.0730, -0.0139,  0.0231],
          [-0.0373, -0.0170, -0.0127,  ...,  0.0320,  0.0048, -0.0903],
          [-0.0387, -0.0190, -0.0021,  ...,  0.0143,  0.0177, -0.0277],
          ...,
          [ 0.0558,  0.0346, -0.0026,  ..., -0.0026, -0.0291, -0.0666],
          [ 0.0214, -0.0130, -0.0271,  ...,  0.0509,  0.0339, -0.0695],
          [ 0.0789, -0.0365, -0.0051,  ..., -0.0304, -0.0261, -0.0313]]]],
       dtype=torch.float16)
2025-05-16 03:03:24.520511 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), Tensor([2, 59, 1, 64],"float16"), attn_mask=Tensor([2, 1, 59, 59],"float16"), dropout_p=0.0, training=False, is_causal=False, )
[not compare]  None tensor([[[[-0.0031, -0.0168, -0.0125,  ..., -0.0100, -0.0006,  0.0002],
          [ 0.0069,  0.0070, -0.0012,  ..., -0.0079, -0.0060, -0.0027],
          [-0.0045, -0.0048,  0.0098,  ..., -0.0062,  0.0041,  0.0020],
          ...,
          [-0.0061,  0.0187,  0.0047,  ..., -0.0073, -0.0061, -0.0160],
          [ 0.0238, -0.0193, -0.0120,  ...,  0.0025,  0.0160,  0.0148],
          [ 0.0061, -0.0049, -0.0104,  ..., -0.0031,  0.0366, -0.0048]]],


        [[[ 0.0023,  0.0050,  0.0148,  ...,  0.0081, -0.0160,  0.0078],
          [ 0.0056,  0.0004, -0.0171,  ...,  0.0009,  0.0094,  0.0037],
          [ 0.0116, -0.0013,  0.0122,  ..., -0.0159, -0.0038,  0.0028],
          ...,
          [ 0.0014, -0.0064, -0.0209,  ..., -0.0158, -0.0061, -0.0033],
          [-0.0027, -0.0050, -0.0066,  ..., -0.0146,  0.0029, -0.0037],
          [ 0.0042, -0.0005,  0.0037,  ..., -0.0135,  0.0172,  0.0082]]]],
       dtype=torch.float16)
2025-05-16 03:03:24.724961 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 74, 8, 96],"float16"), Tensor([2, 74, 8, 96],"float16"), Tensor([2, 74, 8, 96],"float16"), attn_mask=Tensor([2, 1, 74, 74],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 74, 8, 96],"float16"), Tensor([2, 74, 8, 96],"float16"), Tensor([2, 74, 8, 96],"float16"), attn_mask=Tensor([2, 1, 74, 74],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 83217 / 113664 (73.2%)
Max absolute difference: 0.561
Max relative difference: 40672.
 x: array([[[[-0.00388 , -0.0583  ,  0.00783 , ...,  0.02322 , -0.02351 ,
           0.004276],
         [-0.00704 , -0.02403 , -0.01259 , ..., -0.001351, -0.008934,...
 y: array([[[[ 4.3970e-01, -1.4209e-01,  1.4526e-01, ..., -3.0078e-01,
           2.2144e-01, -1.5906e-01],
         [-3.4619e-01, -1.1816e-01,  1.7957e-01, ...,  2.5757e-01,...
2025-05-16 03:03:24.983626 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 79, 8, 96],"float16"), Tensor([2, 79, 8, 96],"float16"), Tensor([2, 79, 8, 96],"float16"), attn_mask=Tensor([2, 1, 79, 79],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 79, 8, 96],"float16"), Tensor([2, 79, 8, 96],"float16"), Tensor([2, 79, 8, 96],"float16"), attn_mask=Tensor([2, 1, 79, 79],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 87195 / 121344 (71.9%)
Max absolute difference: 0.587
Max relative difference: inf
 x: array([[[[ 4.2480e-02,  5.6641e-02, -4.3365e-02, ...,  4.9652e-02,
          -3.8743e-04,  1.9745e-02],
         [-1.9897e-02, -1.8358e-03,  4.7874e-03, ...,  9.1614e-02,...
 y: array([[[[-2.1948e-01, -4.4043e-01, -4.1943e-01, ...,  3.8599e-01,
          -9.2102e-02, -2.2253e-01],
         [-1.2231e-01,  1.2854e-01, -1.2988e-01, ...,  2.3730e-01,...
2025-05-16 03:03:25.246145 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 80, 8, 96],"float16"), Tensor([2, 80, 8, 96],"float16"), Tensor([2, 80, 8, 96],"float16"), attn_mask=Tensor([2, 1, 80, 80],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 80, 8, 96],"float16"), Tensor([2, 80, 8, 96],"float16"), Tensor([2, 80, 8, 96],"float16"), attn_mask=Tensor([2, 1, 80, 80],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 88499 / 122880 (72%)
Max absolute difference: 0.5454
Max relative difference: 56576.
 x: array([[[[-6.1890e-02, -2.8275e-02,  7.8430e-03, ...,  3.0807e-02,
           3.3386e-02,  2.7634e-02],
         [ 1.7838e-02, -2.0706e-02, -2.5345e-02, ...,  1.1147e-02,...
 y: array([[[[-2.4805e-01, -4.8853e-01, -4.0869e-01, ...,  2.4133e-01,
          -3.8696e-01, -7.3059e-02],
         [-1.1823e-01, -3.6597e-01,  3.5132e-01, ...,  1.9287e-01,...
2025-05-16 03:03:25.507037 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 82, 8, 96],"float16"), Tensor([2, 82, 8, 96],"float16"), Tensor([2, 82, 8, 96],"float16"), attn_mask=Tensor([2, 1, 82, 82],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 82, 8, 96],"float16"), Tensor([2, 82, 8, 96],"float16"), Tensor([2, 82, 8, 96],"float16"), attn_mask=Tensor([2, 1, 82, 82],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 90021 / 125952 (71.5%)
Max absolute difference: 0.5566
Max relative difference: inf
 x: array([[[[-7.8613e-02,  3.6163e-02, -8.2550e-03, ..., -1.7746e-02,
          -9.7046e-03, -1.3641e-02],
         [ 3.5370e-02, -3.1052e-02,  5.7007e-02, ..., -1.8854e-03,...
 y: array([[[[-3.3203e-01,  3.0518e-01, -1.8933e-01, ...,  3.0469e-01,
           4.7412e-01,  4.0210e-01],
         [-1.7090e-01,  8.3496e-02, -4.8071e-01, ...,  4.8438e-01,...
2025-05-16 03:03:25.691306 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 91, 8, 96],"float16"), Tensor([2, 91, 8, 96],"float16"), Tensor([2, 91, 8, 96],"float16"), attn_mask=Tensor([2, 1, 91, 91],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 91, 8, 96],"float16"), Tensor([2, 91, 8, 96],"float16"), Tensor([2, 91, 8, 96],"float16"), attn_mask=Tensor([2, 1, 91, 91],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 99071 / 139776 (70.9%)
Max absolute difference: 0.5527
Max relative difference: 7744.
 x: array([[[[-3.4119e-02,  2.7695e-02, -2.0325e-02, ..., -2.5436e-02,
           5.6305e-02, -5.1086e-02],
         [ 1.3947e-02,  5.4810e-02, -8.7341e-02, ...,  3.1952e-02,...
 y: array([[[[-4.6997e-01, -1.6931e-01,  1.0950e-01, ...,  6.4392e-02,
           8.5083e-02, -3.3203e-01],
         [-1.4136e-01, -6.7322e-02, -3.8574e-01, ...,  9.4299e-02,...
2025-05-16 03:03:25.921921 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 114, 1, 64],"float16"), Tensor([4, 114, 1, 64],"float16"), Tensor([4, 114, 1, 64],"float16"), attn_mask=Tensor([4, 1, 114, 114],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 2.9182e-03, -3.2978e-03,  5.0240e-03,  ...,  4.0359e-03,
            2.4199e-04,  1.2579e-03],
          [-1.1683e-03, -2.2240e-03,  4.7493e-03,  ..., -1.0920e-03,
           -7.1239e-04, -1.5541e-02],
          [ 3.0327e-03,  5.9280e-03,  1.1177e-02,  ..., -2.7580e-03,
            2.3804e-03,  5.8670e-03],
          ...,
          [-4.9400e-03,  3.8490e-03, -7.9498e-03,  ...,  4.8828e-03,
           -4.9324e-03, -4.5662e-03],
          [-1.0971e-02, -1.3580e-03, -2.9202e-03,  ..., -5.1765e-03,
            1.6928e-03, -2.5196e-03],
          [-1.6470e-03,  8.8882e-03,  2.7313e-03,  ...,  2.7657e-04,
           -5.8327e-03, -2.9087e-04]]],


        [[[-4.9706e-03,  8.5688e-04,  4.4250e-03,  ..., -8.8072e-04,
            6.1340e-03, -4.5395e-03],
          [ 6.9733e-03, -2.0370e-03, -1.4877e-03,  ...,  2.2831e-03,
            7.5102e-04, -1.2337e-02],
          [ 8.7814e-03, -2.5501e-03,  2.1572e-03,  ..., -4.3716e-03,
            6.2943e-03,  2.7351e-03],
          ...,
          [ 5.1727e-03,  1.0307e-02,  1.9169e-03,  ...,  5.7907e-03,
           -1.3763e-02, -5.3704e-05],
          [ 4.6768e-03,  2.3422e-03,  2.9659e-03,  ..., -7.2098e-03,
            1.3527e-02,  7.2098e-03],
          [ 9.1887e-04, -1.0586e-03,  5.6000e-03,  ..., -5.4054e-03,
            5.6686e-03,  2.5082e-03]]],


        [[[ 4.9019e-03,  1.8632e-04, -4.4365e-03,  ...,  1.1339e-03,
           -7.4310e-03, -2.2948e-04],
          [ 4.6921e-03, -8.0948e-03, -1.8978e-03,  ...,  2.6207e-03,
            4.3411e-03,  1.0796e-03],
          [-5.7793e-03,  4.3907e-03, -3.9253e-03,  ..., -4.5471e-03,
            1.2827e-03, -5.7144e-03],
          ...,
          [ 4.4346e-05,  2.2888e-05,  7.6637e-03,  ...,  1.1673e-03,
            2.0008e-03,  2.1305e-03],
          [-2.1248e-03,  1.3275e-02,  5.9700e-03,  ..., -1.2047e-02,
            2.0050e-02,  3.8862e-04],
          [ 8.8196e-03,  8.6365e-03,  1.8282e-03,  ...,  7.4120e-03,
           -1.7395e-03, -8.3618e-03]]],


        [[[ 4.8256e-03,  7.8058e-04,  6.5880e-03,  ...,  7.3586e-03,
            2.8019e-03, -8.8120e-04],
          [ 1.1978e-03,  2.2411e-03, -1.0338e-03,  ..., -8.7786e-04,
            7.4005e-03,  2.4452e-03],
          [-3.4771e-03, -2.2106e-03,  3.4046e-04,  ...,  7.6218e-03,
            3.8683e-05, -9.5673e-03],
          ...,
          [-5.6000e-03,  4.7874e-03, -1.0357e-03,  ...,  6.7940e-03,
            3.0422e-03, -5.0507e-03],
          [ 1.8334e-04,  5.2834e-03, -6.1798e-04,  ...,  1.2760e-03,
            2.0123e-03, -1.0748e-03],
          [-1.2314e-02, -2.8477e-03, -8.1482e-03,  ..., -4.9706e-03,
            7.8506e-03, -8.2855e-03]]]], dtype=torch.float16)
2025-05-16 03:03:26.158037 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 115, 1, 64],"float16"), Tensor([4, 115, 1, 64],"float16"), Tensor([4, 115, 1, 64],"float16"), attn_mask=Tensor([4, 1, 115, 115],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 115, 1, 64],"float16"), Tensor([4, 115, 1, 64],"float16"), Tensor([4, 115, 1, 64],"float16"), attn_mask=Tensor([4, 1, 115, 115],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 19876 / 29440 (67.5%)
Max absolute difference: 0.529
Max relative difference: 39584.
 x: array([[[[ 1.4549e-02,  1.8883e-04, -1.3237e-02, ..., -3.0624e-02,
          -1.4320e-02, -3.0518e-02]],
...
 y: array([[[[-3.0591e-01, -2.9205e-02,  4.6387e-01, ...,  7.2205e-02,
           4.4116e-01, -4.9146e-01]],
...
2025-05-16 03:03:26.424671 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 127, 1, 64],"float16"), Tensor([4, 127, 1, 64],"float16"), Tensor([4, 127, 1, 64],"float16"), attn_mask=Tensor([4, 1, 127, 127],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 127, 1, 64],"float16"), Tensor([4, 127, 1, 64],"float16"), Tensor([4, 127, 1, 64],"float16"), attn_mask=Tensor([4, 1, 127, 127],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 21270 / 32512 (65.4%)
Max absolute difference: 0.505
Max relative difference: 6744.
 x: array([[[[-1.8875e-02, -1.2863e-02, -5.8746e-03, ..., -3.3600e-02,
          -2.0615e-02,  5.4504e-02]],
...
 y: array([[[[-1.3904e-01,  4.1357e-01, -3.9893e-01, ...,  1.3721e-01,
           4.6387e-01, -2.1497e-01]],
...
2025-05-16 03:03:26.658078 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 132, 1, 64],"float16"), Tensor([4, 132, 1, 64],"float16"), Tensor([4, 132, 1, 64],"float16"), attn_mask=Tensor([4, 1, 132, 132],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 5.9547e-03,  7.5722e-03, -7.2594e-03,  ...,  8.2397e-03,
           -7.4615e-03, -8.6136e-03],
          [ 2.5368e-03,  7.9498e-03, -7.7591e-03,  ...,  2.9125e-03,
            1.1358e-03, -1.7738e-03],
          [ 4.6387e-03,  9.0122e-04, -6.8951e-04,  ..., -6.5346e-03,
           -2.0504e-03, -6.7520e-03],
          ...,
          [ 1.2302e-03,  9.7809e-03,  5.5313e-03,  ..., -7.0190e-04,
           -2.9221e-03, -4.3411e-03],
          [ 5.7220e-04,  7.9651e-03, -5.4016e-03,  ...,  2.1744e-04,
            4.2648e-03,  1.4553e-03],
          [-8.2321e-03,  6.2408e-03, -3.1452e-03,  ...,  6.2866e-03,
            8.4534e-03, -4.4937e-03]]],


        [[[ 3.0303e-04,  2.6989e-03, -6.4163e-03,  ..., -7.2823e-03,
            4.0398e-03,  1.8978e-04],
          [-5.5008e-03,  3.2158e-03,  1.7147e-03,  ..., -2.7351e-03,
            2.8954e-03, -7.9956e-03],
          [ 7.1602e-03,  9.8228e-04,  1.7288e-02,  ...,  4.7374e-04,
           -7.9346e-03, -1.0605e-03],
          ...,
          [-5.6076e-03, -1.7662e-03, -3.0308e-03,  ...,  3.3498e-04,
            1.9484e-03, -2.5749e-04],
          [-3.3741e-03,  1.1543e-02, -2.8954e-03,  ..., -4.3178e-04,
            2.9430e-03,  6.7978e-03],
          [ 1.1467e-02,  1.3618e-03,  5.5580e-03,  ...,  3.0804e-03,
            7.5626e-04,  9.1782e-03]]],


        [[[-3.0088e-04, -6.1178e-04, -9.0408e-03,  ..., -2.0256e-03,
            6.2227e-04,  3.4122e-03],
          [ 8.1635e-03,  1.2848e-02,  2.2068e-03,  ..., -2.5291e-03,
           -9.9258e-03,  4.6277e-04],
          [ 4.4703e-06,  3.7651e-03, -8.2855e-03,  ...,  3.4404e-04,
           -2.1136e-04,  1.5898e-03],
          ...,
          [-1.1148e-03,  1.2636e-04, -1.2512e-03,  ..., -1.2913e-03,
            5.4207e-03,  3.5400e-03],
          [ 5.9509e-03,  7.9441e-04,  7.4539e-03,  ...,  1.2693e-03,
            1.1587e-03, -4.8943e-03],
          [-9.5034e-04,  7.0953e-03, -3.5152e-03,  ..., -4.6768e-03,
            3.9053e-04,  5.5771e-03]]],


        [[[ 3.0918e-03, -1.7223e-03, -2.1946e-04,  ..., -6.1073e-03,
            4.6654e-03, -1.1787e-03],
          [-2.8381e-03, -3.0117e-03,  2.9526e-03,  ..., -4.7455e-03,
           -5.3406e-04,  9.7885e-03],
          [ 1.5259e-03,  1.8787e-03,  2.5291e-03,  ...,  2.7657e-03,
           -8.9264e-03,  9.9945e-04],
          ...,
          [ 3.0785e-03, -2.4052e-03,  2.5005e-03,  ..., -2.5809e-05,
            3.7518e-03,  4.0131e-03],
          [ 2.3975e-03,  3.9368e-03,  2.2335e-03,  ..., -4.6396e-04,
            2.5978e-03,  7.4387e-04],
          [-7.0686e-03,  2.2869e-03, -1.5678e-03,  ...,  3.3784e-04,
            9.7733e-03,  2.1896e-03]]]], dtype=torch.float16)
2025-05-16 03:03:26.914940 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
[not compare]  None tensor([[[[-2.2054e-05, -1.4503e-02,  1.3123e-03,  ..., -1.1215e-02,
           -1.0590e-02,  6.8512e-03],
          [-8.3084e-03,  7.2479e-03, -4.8637e-03,  ..., -3.0727e-03,
           -8.1558e-03,  2.5177e-03],
          [-1.6289e-03, -6.8760e-04, -1.2329e-02,  ..., -2.2125e-03,
            1.0033e-03,  1.3008e-02],
          ...,
          [-7.0877e-03,  1.1017e-02, -1.7914e-02,  ...,  1.1993e-02,
            1.1047e-02,  1.7567e-03],
          [ 3.2928e-02, -1.0574e-02, -1.1501e-03,  ...,  1.3702e-02,
           -3.7384e-04, -5.8365e-03],
          [ 1.1612e-02, -1.7548e-02,  5.3787e-03,  ..., -9.5749e-03,
           -3.2482e-03, -1.1841e-02]]],


        [[[-4.7150e-03,  1.1589e-02,  8.4610e-03,  ...,  9.8038e-03,
            1.1078e-02,  1.1169e-02],
          [-1.4771e-02, -4.4098e-03,  8.5831e-05,  ...,  2.8412e-02,
           -2.2079e-02, -1.0178e-02],
          [-1.9592e-02, -1.7303e-02,  5.1537e-03,  ...,  5.9242e-03,
            8.5983e-03, -4.1199e-02],
          ...,
          [-9.7275e-03, -7.3624e-03, -2.7771e-03,  ...,  1.9424e-02,
            3.7518e-03,  7.4768e-04],
          [ 6.0654e-03,  1.6342e-02,  6.5842e-03,  ..., -2.2842e-02,
            6.1111e-03, -5.0659e-03],
          [-2.5848e-02, -7.3090e-03,  1.0033e-03,  ..., -6.7215e-03,
            1.0452e-02,  1.6632e-02]]],


        [[[-7.0496e-03,  1.5457e-02,  6.7482e-03,  ...,  9.3689e-03,
            9.0981e-04,  2.0218e-02],
          [ 6.4163e-03,  2.5970e-02, -9.2926e-03,  ...,  6.1417e-03,
            1.6083e-02,  9.0485e-03],
          [ 3.6278e-03,  4.4174e-03, -4.5700e-03,  ...,  2.6367e-02,
           -3.2684e-02,  8.5373e-03],
          ...,
          [ 2.9129e-02,  4.1771e-03, -1.7242e-02,  ..., -1.1246e-02,
            8.6823e-03, -3.5439e-03],
          [ 9.3689e-03, -2.8046e-02,  2.4048e-02,  ..., -3.5400e-03,
           -5.0201e-03, -1.7151e-02],
          [ 5.0659e-03, -7.3090e-03,  1.5854e-02,  ...,  2.6646e-03,
            1.6251e-02, -2.1179e-02]]],


        [[[ 1.5038e-02, -8.8806e-03, -2.6989e-03,  ..., -2.0798e-02,
            1.9867e-02,  2.8305e-02],
          [-1.2672e-02, -2.6741e-03,  3.3245e-03,  ...,  1.1959e-03,
            6.8235e-04, -5.5237e-03],
          [-1.7899e-02, -1.6413e-03, -1.0056e-02,  ..., -5.1918e-03,
           -2.1076e-03,  5.9967e-03],
          ...,
          [-2.8687e-03,  1.7757e-03,  1.0933e-02,  ...,  6.2943e-03,
           -1.4519e-02,  7.6904e-03],
          [ 1.2558e-02,  9.2850e-03,  8.3160e-03,  ..., -5.0049e-02,
            5.5923e-03,  1.6693e-02],
          [-3.5706e-03,  3.0258e-02, -2.0813e-02,  ..., -1.8940e-03,
            1.0544e-02, -7.2098e-03]]]], dtype=torch.float16)
2025-05-16 03:03:27.247302 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
[not compare]  None tensor([[[[ 0.0042,  0.0182,  0.0137,  ..., -0.0123,  0.0051, -0.0018],
          [-0.0210,  0.0106,  0.0023,  ...,  0.0101,  0.0194, -0.0088],
          [-0.0053, -0.0094,  0.0124,  ..., -0.0022, -0.0052, -0.0197],
          ...,
          [ 0.0008, -0.0356,  0.0018,  ..., -0.0103, -0.0038,  0.0059],
          [ 0.0066,  0.0181,  0.0017,  ...,  0.0071,  0.0068,  0.0046],
          [ 0.0038,  0.0014,  0.0081,  ..., -0.0125,  0.0045,  0.0107]]],


        [[[ 0.0148,  0.0148,  0.0102,  ...,  0.0160,  0.0037, -0.0094],
          [-0.0130, -0.0003,  0.0023,  ..., -0.0053, -0.0120,  0.0002],
          [-0.0006, -0.0019,  0.0089,  ...,  0.0103,  0.0084,  0.0118],
          ...,
          [-0.0063,  0.0110,  0.0043,  ...,  0.0044, -0.0028, -0.0070],
          [ 0.0173,  0.0231, -0.0318,  ..., -0.0106,  0.0092, -0.0166],
          [ 0.0157, -0.0036,  0.0136,  ...,  0.0013, -0.0078, -0.0255]]],


        [[[-0.0017,  0.0027, -0.0051,  ...,  0.0191, -0.0309, -0.0108],
          [ 0.0308, -0.0049,  0.0018,  ...,  0.0067,  0.0096, -0.0049],
          [ 0.0139, -0.0092,  0.0033,  ..., -0.0111,  0.0305,  0.0057],
          ...,
          [ 0.0030,  0.0110, -0.0160,  ..., -0.0189, -0.0179,  0.0025],
          [ 0.0062, -0.0072, -0.0064,  ..., -0.0067,  0.0055,  0.0091],
          [ 0.0135, -0.0128, -0.0015,  ...,  0.0080,  0.0206, -0.0214]]],


        [[[ 0.0009, -0.0002, -0.0035,  ...,  0.0152,  0.0244,  0.0063],
          [ 0.0145, -0.0004,  0.0145,  ..., -0.0006,  0.0013,  0.0276],
          [ 0.0072, -0.0064,  0.0048,  ...,  0.0003,  0.0135, -0.0100],
          ...,
          [-0.0044, -0.0056,  0.0282,  ...,  0.0024,  0.0051, -0.0422],
          [-0.0136, -0.0226, -0.0119,  ..., -0.0096, -0.0009, -0.0074],
          [-0.0117, -0.0100, -0.0083,  ..., -0.0003,  0.0040, -0.0018]]]],
       dtype=torch.float16)
2025-05-16 03:03:27.667279 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 147, 1, 64],"float16"), Tensor([4, 147, 1, 64],"float16"), Tensor([4, 147, 1, 64],"float16"), attn_mask=Tensor([4, 1, 147, 147],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 147, 1, 64],"float16"), Tensor([4, 147, 1, 64],"float16"), Tensor([4, 147, 1, 64],"float16"), attn_mask=Tensor([4, 1, 147, 147],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 23174 / 37632 (61.6%)
Max absolute difference: 0.544
Max relative difference: inf
 x: array([[[[ 1.3145e-02, -3.1281e-02,  1.3901e-02, ..., -1.6708e-03,
          -3.8055e-02,  4.1748e-02]],
...
 y: array([[[[-1.0962e-01,  1.2494e-01,  2.5488e-01, ..., -3.5913e-01,
          -4.5508e-01,  4.2920e-01]],
...
2025-05-16 03:03:27.907805 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 148, 1, 64],"float16"), Tensor([4, 148, 1, 64],"float16"), Tensor([4, 148, 1, 64],"float16"), attn_mask=Tensor([4, 1, 148, 148],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 5.1041e-03, -2.6989e-03, -1.1511e-03,  ..., -1.8187e-03,
           -1.5211e-03, -1.9178e-03],
          [ 1.4076e-03, -4.2267e-03, -9.8572e-03,  ..., -5.4283e-03,
           -3.0136e-03, -7.8125e-03],
          [ 9.3460e-04, -1.6823e-03, -2.9354e-03,  ...,  2.2621e-03,
           -4.7836e-03,  4.1580e-03],
          ...,
          [ 7.5874e-03,  1.5154e-03, -8.3923e-03,  ..., -1.6117e-03,
           -8.3494e-04,  4.4298e-04],
          [ 2.5101e-03, -1.2922e-03, -1.3399e-03,  ...,  1.0727e-02,
            7.9393e-04, -4.8304e-04],
          [-5.0964e-03,  2.5024e-03,  3.7956e-03,  ..., -6.1264e-03,
            1.0925e-02, -4.0779e-03]]],


        [[[-8.6212e-03,  3.0727e-03, -3.4180e-03,  ...,  4.6997e-03,
            7.2441e-03, -1.0574e-02],
          [ 2.2335e-03, -5.5847e-03, -3.6011e-03,  ..., -1.5488e-03,
           -9.0942e-03, -4.3411e-03],
          [-4.9472e-06,  6.6338e-03, -1.6174e-03,  ...,  3.6755e-03,
           -9.6893e-03,  2.2697e-03],
          ...,
          [-2.1763e-03,  7.5102e-04, -5.8022e-03,  ...,  6.5422e-03,
           -1.7958e-03, -5.3444e-03],
          [-1.8196e-03,  1.0557e-03,  1.4162e-04,  ..., -2.9278e-03,
           -5.2032e-03,  3.4695e-03],
          [-5.0850e-03,  1.9197e-03,  1.4542e-02,  ..., -2.2392e-03,
           -4.4942e-04,  3.0708e-03]]],


        [[[-1.3718e-02, -7.9823e-04,  2.0161e-03,  ..., -2.4853e-03,
            1.6003e-03,  6.8207e-03],
          [ 7.4921e-03, -7.4310e-03,  2.0275e-03,  ..., -1.2455e-03,
           -4.7505e-05,  4.0817e-03],
          [ 8.6365e-03, -1.5125e-03,  2.0161e-03,  ..., -1.1292e-02,
            4.8714e-03,  7.5455e-03],
          ...,
          [ 4.3106e-04,  4.6234e-03,  5.8746e-03,  ..., -3.7975e-03,
           -3.4199e-03, -2.7256e-03],
          [-2.7962e-03, -5.4436e-03, -1.1330e-02,  ..., -5.8031e-04,
           -1.8930e-03, -5.3749e-03],
          [-2.5940e-03, -5.6953e-03, -4.1509e-04,  ...,  5.6152e-03,
            5.4436e-03,  2.5673e-03]]],


        [[[ 4.7798e-03, -3.9558e-03, -7.9393e-04,  ...,  2.7828e-03,
           -5.7449e-03,  1.9970e-03],
          [ 2.9526e-03, -1.2283e-03,  1.5354e-03,  ...,  7.5531e-03,
           -8.7891e-03,  7.7248e-05],
          [ 1.3695e-03, -6.4354e-03, -9.6262e-05,  ..., -1.1711e-02,
           -3.4523e-03,  4.9553e-03],
          ...,
          [ 1.9627e-03,  4.3793e-03,  1.9159e-03,  ...,  2.0714e-03,
            6.2294e-03, -5.0201e-03],
          [-3.4595e-04, -1.7090e-03, -3.1681e-03,  ..., -5.9128e-03,
           -8.8348e-03,  1.3685e-03],
          [-3.7670e-03,  4.7159e-04,  2.4033e-03,  ...,  4.6682e-04,
           -1.4277e-03, -2.8629e-03]]]], dtype=torch.float16)
2025-05-16 03:03:28.166708 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 148, 8, 16],"float16"), Tensor([4, 148, 2, 16],"float16"), Tensor([4, 148, 2, 16],"float16"), attn_mask=Tensor([4, 1, 148, 148],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 148, 8, 16],"float16"), Tensor([4, 148, 2, 16],"float16"), Tensor([4, 148, 2, 16],"float16"), attn_mask=Tensor([4, 1, 148, 148],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 63425 / 75776 (83.7%)
Max absolute difference: 0.521
Max relative difference: 21600.
 x: array([[[[-4.4556e-02, -2.0096e-02, -1.2009e-02, ..., -1.2726e-02,
          -2.1057e-02,  9.1705e-03],
         [-4.6600e-02, -1.5778e-02, -1.3588e-02, ..., -1.2314e-02,...
 y: array([[[[ 1.7114e-01, -4.3823e-01,  1.9849e-01, ..., -3.2425e-03,
          -9.4788e-02,  4.8364e-01],
         [-4.9896e-02,  3.7817e-01, -2.9297e-01, ..., -4.5508e-01,...
2025-05-16 03:03:28.425939 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 152, 1, 64],"float16"), Tensor([4, 152, 1, 64],"float16"), Tensor([4, 152, 1, 64],"float16"), attn_mask=Tensor([4, 1, 152, 152],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 152, 1, 64],"float16"), Tensor([4, 152, 1, 64],"float16"), Tensor([4, 152, 1, 64],"float16"), attn_mask=Tensor([4, 1, 152, 152],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 23469 / 38912 (60.3%)
Max absolute difference: 0.5366
Max relative difference: 20528.
 x: array([[[[ 4.1687e-02,  1.3332e-03,  3.0502e-02, ...,  3.8757e-02,
           1.4221e-02,  3.1013e-03]],
...
 y: array([[[[ 3.1174e-02, -1.4075e-01, -2.6050e-01, ..., -7.0251e-02,
          -3.1567e-01, -1.3403e-01]],
...
2025-05-16 03:03:28.656372 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 156, 1, 64],"float16"), Tensor([4, 156, 1, 64],"float16"), Tensor([4, 156, 1, 64],"float16"), attn_mask=Tensor([4, 1, 156, 156],"float16"), is_causal=False, )
[not compare]  None tensor([[[[ 1.4849e-03, -2.3594e-03, -4.1425e-05,  ..., -5.4855e-03,
           -2.2149e-04, -1.4181e-03],
          [-1.6851e-03, -4.5300e-05,  2.4700e-03,  ..., -5.5084e-03,
           -4.1161e-03,  2.4414e-04],
          [-2.8458e-03,  5.2643e-03, -5.0507e-03,  ...,  8.4543e-04,
           -7.2365e-03, -4.3945e-03],
          ...,
          [-7.7486e-06, -4.0932e-03,  2.1660e-04,  ..., -1.1377e-03,
            3.4142e-04, -2.1610e-03],
          [ 3.2043e-03, -1.6190e-02,  1.6356e-03,  ..., -2.6093e-03,
            5.0354e-03,  1.0500e-03],
          [-1.6270e-03, -2.8114e-03, -2.0351e-03,  ..., -5.3444e-03,
            4.3440e-04, -1.5516e-03]]],


        [[[-1.3084e-02,  8.0185e-03,  7.0524e-04,  ..., -6.5193e-03,
            1.0742e-02, -3.3627e-03],
          [ 4.8904e-03, -1.0521e-02, -7.8278e-03,  ..., -5.5027e-04,
            2.8324e-03,  1.6031e-03],
          [-4.0627e-03, -4.7798e-03, -4.0483e-04,  ...,  6.4888e-03,
           -1.8597e-03,  2.3479e-03],
          ...,
          [ 6.2943e-04, -6.9580e-03, -4.6082e-03,  ..., -4.3640e-03,
           -1.4095e-03,  4.8180e-03],
          [ 1.0967e-03,  9.5654e-04,  9.8801e-04,  ...,  2.6178e-04,
           -1.6232e-03,  2.5129e-04],
          [-3.4180e-03,  8.9836e-04,  3.6180e-05,  ...,  2.6531e-03,
           -4.4556e-03,  4.4107e-04]]],


        [[[-9.4843e-04,  2.6016e-03, -5.7297e-03,  ...,  2.9812e-03,
            2.3804e-03, -2.0657e-03],
          [-1.2846e-03,  2.0275e-03,  2.8968e-04,  ..., -1.6327e-03,
           -1.2465e-03,  2.5570e-05],
          [-2.7981e-03,  1.6489e-03,  3.0556e-03,  ..., -9.7990e-05,
           -3.3927e-04, -1.0242e-03],
          ...,
          [-1.4791e-03,  1.1864e-03, -1.9825e-04,  ...,  1.1654e-03,
            2.6760e-03,  2.7561e-03],
          [ 3.7813e-04, -4.3335e-03, -1.8196e-03,  ...,  2.3937e-03,
            5.5084e-03,  3.1929e-03],
          [-1.3800e-03,  7.5798e-03,  6.0539e-03,  ..., -1.3170e-03,
            7.1564e-03,  1.2493e-03]]],


        [[[-5.2681e-03,  6.9962e-03, -1.7509e-03,  ..., -3.4275e-03,
            4.3983e-03,  8.8501e-04],
          [ 4.9210e-04,  1.3628e-03, -3.8028e-04,  ...,  2.9755e-03,
           -1.2407e-03,  4.9019e-03],
          [-3.5429e-04,  1.0824e-03,  1.4524e-03,  ...,  9.7198e-03,
           -2.2011e-03, -8.2827e-04],
          ...,
          [-2.1381e-03, -4.3373e-03, -5.6763e-03,  ..., -8.2397e-04,
            8.9264e-04, -4.2725e-03],
          [-4.2191e-03,  1.7157e-03, -1.6155e-03,  ...,  7.1716e-04,
           -1.3037e-03,  6.8665e-03],
          [-5.6696e-04, -5.4550e-03, -1.8091e-03,  ..., -6.4421e-04,
            5.6725e-03, -1.9741e-03]]]], dtype=torch.float16)
2025-05-16 03:03:28.879323 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
[not compare]  None tensor([[[[ 0.0037, -0.0009,  0.0098,  ...,  0.0089,  0.0049, -0.0261],
          [ 0.0029,  0.0163,  0.0168,  ..., -0.0081, -0.0095,  0.0102],
          [-0.0036,  0.0238, -0.0072,  ..., -0.0350,  0.0077, -0.0005],
          ...,
          [ 0.0144, -0.0010,  0.0010,  ...,  0.0173,  0.0066, -0.0025],
          [ 0.0124, -0.0060,  0.0005,  ..., -0.0158, -0.0142, -0.0061],
          [-0.0024,  0.0198,  0.0120,  ..., -0.0048,  0.0040, -0.0153]]],


        [[[-0.0108, -0.0130, -0.0078,  ..., -0.0300,  0.0195, -0.0053],
          [ 0.0281, -0.0161, -0.0121,  ..., -0.0081,  0.0014, -0.0001],
          [ 0.0108, -0.0144, -0.0317,  ...,  0.0046,  0.0299, -0.0084],
          ...,
          [ 0.0125,  0.0138,  0.0525,  ...,  0.0020,  0.0164,  0.0283],
          [ 0.0078,  0.0108, -0.0077,  ..., -0.0027, -0.0049,  0.0301],
          [ 0.0155, -0.0083, -0.0243,  ..., -0.0064,  0.0171, -0.0055]]],


        [[[-0.0014,  0.0157, -0.0015,  ...,  0.0081,  0.0110,  0.0113],
          [ 0.0102,  0.0041,  0.0037,  ..., -0.0096, -0.0117,  0.0094],
          [ 0.0127, -0.0141, -0.0122,  ...,  0.0019,  0.0335,  0.0130],
          ...,
          [-0.0049,  0.0037,  0.0064,  ...,  0.0076, -0.0003, -0.0005],
          [-0.0057,  0.0079, -0.0058,  ...,  0.0227,  0.0016,  0.0047],
          [-0.0089,  0.0196, -0.0049,  ...,  0.0475, -0.0191, -0.0088]]],


        [[[ 0.0079, -0.0048, -0.0151,  ..., -0.0015,  0.0292,  0.0006],
          [-0.0127, -0.0003,  0.0048,  ...,  0.0119,  0.0024, -0.0065],
          [-0.0109, -0.0178, -0.0041,  ..., -0.0090,  0.0013, -0.0101],
          ...,
          [-0.0056, -0.0112, -0.0065,  ..., -0.0109, -0.0014, -0.0054],
          [-0.0167, -0.0046,  0.0097,  ..., -0.0060, -0.0057,  0.0065],
          [-0.0190, -0.0032, -0.0206,  ...,  0.0306,  0.0166,  0.0032]]]],
       dtype=torch.float16)
2025-05-16 03:03:29.305805 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 164, 8, 16],"float16"), Tensor([4, 164, 2, 16],"float16"), Tensor([4, 164, 2, 16],"float16"), attn_mask=Tensor([4, 1, 164, 164],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 164, 8, 16],"float16"), Tensor([4, 164, 2, 16],"float16"), Tensor([4, 164, 2, 16],"float16"), attn_mask=Tensor([4, 1, 164, 164],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 69649 / 83968 (82.9%)
Max absolute difference: 0.5366
Max relative difference: inf
 x: array([[[[-1.4061e-02,  7.9803e-03, -2.1011e-02, ..., -1.7456e-02,
           1.9196e-02, -2.4567e-02],
         [-1.6647e-02,  1.0986e-02, -2.0203e-02, ..., -1.8051e-02,...
 y: array([[[[ 4.3896e-01,  4.6289e-01, -3.2056e-01, ..., -2.9248e-01,
           3.4229e-01,  4.0430e-01],
         [-3.2324e-01, -1.6492e-01,  2.6636e-01, ...,  4.3213e-01,...
2025-05-16 03:03:29.488409 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
[not compare]  None tensor([[[[-1.9321e-03, -2.0096e-02,  5.9013e-03,  ...,  1.7975e-02,
            1.3371e-03, -3.9711e-03],
          [ 1.8435e-03, -2.8439e-03,  3.0403e-03,  ...,  1.6388e-02,
            1.0262e-03,  7.5531e-04],
          [-5.6362e-04,  1.3170e-03,  1.4236e-02,  ..., -9.4938e-04,
           -6.9160e-03,  2.5129e-04],
          ...,
          [ 3.2959e-03, -1.2093e-02,  8.4076e-03,  ..., -1.2405e-02,
            3.7956e-03,  5.5771e-03],
          [-2.6798e-03, -1.0872e-02, -4.6806e-03,  ...,  3.0304e-02,
            3.3295e-02, -6.3896e-05],
          [-7.5722e-03,  3.4924e-03, -3.3600e-02,  ..., -2.3632e-03,
            7.2861e-04,  3.7766e-04]]],


        [[[-3.9246e-02,  3.7479e-03, -8.4686e-03,  ...,  3.0823e-03,
           -9.0885e-04, -1.3504e-03],
          [ 1.0090e-03,  1.2177e-02,  9.0408e-04,  ..., -3.7994e-03,
            2.8229e-03,  2.3117e-03],
          [-2.4071e-03,  1.4734e-03, -1.8402e-02,  ...,  1.3931e-02,
           -2.3365e-03, -1.5656e-02],
          ...,
          [-9.9640e-03,  4.3335e-03, -4.2496e-03,  ..., -1.4048e-03,
            1.1436e-02,  2.5482e-02],
          [ 6.7215e-03, -1.7212e-02,  9.5062e-03,  ..., -8.9645e-03,
            1.7548e-02,  8.0414e-03],
          [ 8.5449e-04,  8.3313e-03, -5.0735e-03,  ...,  2.6505e-02,
            1.4259e-02,  1.2035e-03]]],


        [[[-1.9989e-02,  7.9803e-03,  1.5831e-03,  ..., -9.5978e-03,
            1.0162e-02, -5.6534e-03],
          [ 1.6975e-03, -4.6539e-03,  2.3766e-03,  ..., -8.3542e-04,
            3.6713e-02,  1.6006e-02],
          [-9.8801e-04, -1.2863e-02, -2.8244e-02,  ..., -8.8596e-04,
            5.0812e-03, -2.1744e-02],
          ...,
          [ 1.0872e-02,  3.4790e-02, -5.4588e-03,  ..., -1.8021e-02,
            4.6387e-03,  2.6840e-02],
          [-2.0599e-03, -5.6648e-03, -2.8763e-02,  ...,  2.2984e-03,
           -2.1210e-03,  8.1406e-03],
          [ 1.3914e-03, -1.5541e-02, -8.5754e-03,  ..., -1.2474e-02,
            2.5415e-04,  1.3512e-02]]],


        [[[ 1.7212e-02, -6.4659e-03,  2.7695e-02,  ...,  1.1459e-02,
            8.0261e-03, -1.6800e-02],
          [ 2.1790e-02, -6.0234e-03, -3.7842e-03,  ...,  5.4817e-03,
            1.8997e-02, -6.5842e-03],
          [ 7.5150e-03, -1.3550e-02,  5.4474e-03,  ..., -1.6785e-04,
           -2.5845e-03,  1.1490e-02],
          ...,
          [ 3.2043e-03, -2.6321e-03,  5.2605e-03,  ...,  1.1093e-02,
            1.1383e-02,  1.0900e-03],
          [-1.6422e-03,  9.8724e-03, -1.7719e-03,  ...,  2.5864e-03,
            1.6136e-03,  2.3937e-03],
          [ 4.6539e-04,  1.4870e-02, -9.6130e-03,  ..., -2.6188e-03,
           -1.6327e-02, -6.9695e-03]]]], dtype=torch.float16)
2025-05-16 03:03:29.911975 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 172, 8, 16],"float16"), Tensor([4, 172, 2, 16],"float16"), Tensor([4, 172, 2, 16],"float16"), attn_mask=Tensor([4, 1, 172, 172],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 172, 8, 16],"float16"), Tensor([4, 172, 2, 16],"float16"), Tensor([4, 172, 2, 16],"float16"), attn_mask=Tensor([4, 1, 172, 172],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 72648 / 88064 (82.5%)
Max absolute difference: 0.5493
Max relative difference: 49952.
 x: array([[[[-1.9043e-02,  4.5837e-02,  3.2593e-02, ..., -2.6489e-02,
          -9.1614e-02, -1.7426e-02],
         [-2.2400e-02,  4.5288e-02,  3.0060e-02, ..., -2.7786e-02,...
 y: array([[[[ 4.9878e-01,  3.8354e-01,  3.4393e-02, ..., -1.2659e-01,
           2.1057e-01,  2.6904e-01],
         [-1.1627e-01,  1.7502e-02, -2.5317e-01, ..., -2.1729e-01,...
2025-05-16 03:03:30.151743 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 182, 1, 64],"float16"), Tensor([4, 182, 1, 64],"float16"), Tensor([4, 182, 1, 64],"float16"), attn_mask=Tensor([4, 1, 182, 182],"float16"), is_causal=False, )
[not compare]  None tensor([[[[-1.8625e-03, -2.4757e-03, -1.9169e-04,  ..., -1.8921e-03,
           -3.4828e-03,  3.5992e-03],
          [ 1.9741e-03,  1.8177e-03, -7.7629e-03,  ...,  1.1759e-03,
           -2.7237e-03,  3.8052e-03],
          [-1.3094e-03, -3.9721e-04,  7.0572e-05,  ...,  1.7185e-03,
            1.9531e-03,  1.2636e-04],
          ...,
          [ 3.3131e-03, -3.4218e-03,  3.9711e-03,  ...,  2.0294e-03,
           -8.3542e-03, -8.4076e-03],
          [ 4.2763e-03,  3.9983e-04, -1.4782e-03,  ...,  3.7746e-03,
            3.8223e-03,  3.8886e-04],
          [-8.7128e-03, -1.2045e-03, -6.0081e-03,  ..., -1.6127e-03,
            6.4621e-03,  1.0052e-03]]],


        [[[ 7.5531e-04, -8.6746e-03, -1.0757e-03,  ...,  3.3627e-03,
            3.1681e-03,  4.4060e-03],
          [ 9.4271e-04, -2.1648e-04, -1.0624e-03,  ..., -2.0275e-03,
            1.5545e-04,  1.9073e-03],
          [ 3.1490e-03,  3.0899e-03, -5.1727e-03,  ..., -5.5161e-03,
            8.6546e-04, -9.8572e-03],
          ...,
          [-2.5320e-04,  2.1114e-03, -1.1425e-03,  ...,  3.0780e-04,
            1.6956e-03, -5.0583e-03],
          [ 2.6722e-03, -8.1062e-04,  3.5267e-03,  ..., -1.8501e-03,
            6.7568e-04, -2.8610e-03],
          [ 1.9932e-03,  1.9855e-03, -4.8876e-04,  ...,  1.5268e-03,
           -5.7182e-03,  1.2245e-03]]],


        [[[ 3.2673e-03,  7.3242e-03, -2.9602e-03,  ..., -6.0844e-03,
           -1.6727e-03,  9.5224e-04],
          [ 1.0595e-03, -4.9400e-03,  1.5850e-03,  ..., -1.0643e-03,
           -4.8876e-04, -3.3784e-04],
          [-5.8842e-04,  4.3907e-03, -3.0174e-03,  ..., -2.2163e-03,
            9.8610e-04,  4.3449e-03],
          ...,
          [ 5.8212e-03,  3.6449e-03,  3.4409e-03,  ..., -7.7133e-03,
           -6.0177e-04,  1.9550e-03],
          [ 6.2704e-04,  2.6340e-03, -7.2441e-03,  ..., -4.6501e-03,
           -1.2159e-03,  1.3565e-02],
          [ 3.7556e-03,  2.6608e-03,  4.5853e-03,  ..., -8.8425e-03,
            3.1719e-03,  2.4891e-03]]],


        [[[-3.1757e-04, -2.4204e-03, -6.3057e-03,  ...,  3.7441e-03,
            4.6082e-03,  2.5535e-04],
          [-8.6823e-03, -2.6398e-03, -2.1210e-03,  ...,  1.9188e-03,
           -3.4218e-03, -4.9925e-04],
          [-6.3744e-03,  1.0843e-03, -8.8739e-04,  ..., -9.7275e-04,
           -2.6760e-03,  6.5765e-03],
          ...,
          [ 2.7695e-03,  4.1962e-03,  1.9312e-03,  ..., -3.6068e-03,
           -4.6768e-03,  2.1591e-03],
          [-1.0643e-03,  1.9193e-05,  5.3635e-03,  ..., -2.4529e-03,
           -2.0847e-03, -1.2302e-04],
          [ 4.1056e-04,  1.5402e-03, -1.4181e-03,  ...,  5.4054e-03,
           -1.0796e-02, -2.4757e-03]]]], dtype=torch.float16)
2025-05-16 03:03:30.344621 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 198, 8, 16],"float16"), Tensor([4, 198, 2, 16],"float16"), Tensor([4, 198, 2, 16],"float16"), attn_mask=Tensor([4, 1, 198, 198],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 198, 8, 16],"float16"), Tensor([4, 198, 2, 16],"float16"), Tensor([4, 198, 2, 16],"float16"), attn_mask=Tensor([4, 1, 198, 198],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 81570 / 101376 (80.5%)
Max absolute difference: 0.525
Max relative difference: inf
 x: array([[[[ 4.6468e-04,  3.8605e-03,  2.4521e-02, ..., -5.7587e-02,
           1.9165e-02, -3.6297e-03],
         [ 1.0576e-03,  3.9940e-03,  2.8427e-02, ..., -5.5664e-02,...
 y: array([[[[-3.4155e-01, -2.3706e-01, -4.5093e-01, ..., -1.6882e-01,
           2.1118e-01, -2.3657e-01],
         [-1.1090e-01,  4.2529e-01,  1.5979e-01, ...,  1.8445e-01,...
2025-05-16 03:03:30.570489 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 304, 8, 96],"float16"), Tensor([4, 304, 8, 96],"float16"), Tensor([4, 304, 8, 96],"float16"), attn_mask=Tensor([4, 1, 304, 304],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 304, 8, 96],"float16"), Tensor([4, 304, 8, 96],"float16"), Tensor([4, 304, 8, 96],"float16"), attn_mask=Tensor([4, 1, 304, 304],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 420463 / 933888 (45%)
Max absolute difference: 0.5527
Max relative difference: inf
 x: array([[[[-2.6047e-02,  6.7787e-03, -6.0272e-02, ...,  4.7913e-02,
          -1.9012e-02,  1.5839e-02],
         [-2.2240e-03,  9.6130e-04, -1.9791e-02, ..., -9.2163e-03,...
 y: array([[[[ 2.0667e-01, -4.9121e-01,  3.3716e-01, ...,  4.8462e-01,
           9.4360e-02,  2.9834e-01],
         [ 4.2334e-01, -4.3066e-01,  4.6948e-01, ..., -3.3521e-01,...
2025-05-16 03:03:30.947166 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 346, 8, 96],"float16"), Tensor([4, 346, 8, 96],"float16"), Tensor([4, 346, 8, 96],"float16"), attn_mask=Tensor([4, 1, 346, 346],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 346, 8, 96],"float16"), Tensor([4, 346, 8, 96],"float16"), Tensor([4, 346, 8, 96],"float16"), attn_mask=Tensor([4, 1, 346, 346],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 449236 / 1062912 (42.3%)
Max absolute difference: 0.5576
Max relative difference: inf
 x: array([[[[-0.01822 , -0.01045 ,  0.02324 , ...,  0.02551 , -0.016   ,
          -0.02045 ],
         [-0.00624 , -0.00482 ,  0.01862 , ...,  0.03023 ,  0.00981 ,...
 y: array([[[[-4.5215e-01,  3.8599e-01, -4.7559e-01, ..., -1.4087e-01,
          -3.7329e-01,  2.7026e-01],
         [-9.1919e-02, -4.9854e-01, -1.5649e-01, ..., -1.0516e-01,...
2025-05-16 03:03:31.369086 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 377, 8, 96],"float16"), Tensor([4, 377, 8, 96],"float16"), Tensor([4, 377, 8, 96],"float16"), attn_mask=Tensor([4, 1, 377, 377],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 377, 8, 96],"float16"), Tensor([4, 377, 8, 96],"float16"), Tensor([4, 377, 8, 96],"float16"), attn_mask=Tensor([4, 1, 377, 377],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 473780 / 1158144 (40.9%)
Max absolute difference: 0.543
Max relative difference: inf
 x: array([[[[-8.3237e-03,  1.7838e-02, -3.2074e-02, ..., -2.9259e-03,
          -9.0790e-03, -7.4402e-02],
         [ 5.2094e-02,  4.7607e-03, -2.4414e-02, ..., -8.1940e-03,...
 y: array([[[[ 2.5757e-01, -1.4026e-01, -1.5930e-01, ...,  2.4658e-01,
          -3.1605e-03, -4.5825e-01],
         [-1.5564e-01,  3.2288e-02, -5.3467e-02, ...,  2.6465e-01,...
2025-05-16 03:03:31.786003 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 396, 4, 96],"float16"), Tensor([4, 396, 4, 96],"float16"), Tensor([4, 396, 4, 96],"float16"), attn_mask=Tensor([4, 1, 396, 396],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 396, 4, 96],"float16"), Tensor([4, 396, 4, 96],"float16"), Tensor([4, 396, 4, 96],"float16"), attn_mask=Tensor([4, 1, 396, 396],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 238915 / 608256 (39.3%)
Max absolute difference: 0.5493
Max relative difference: inf
 x: array([[[[-6.1768e-02,  5.7037e-02, -5.4443e-02, ..., -4.3762e-02,
          -2.2907e-03, -1.5712e-04],
         [ 1.4870e-02, -6.6261e-03,  3.0365e-02, ...,  7.4158e-03,...
 y: array([[[[-3.1934e-01,  2.3022e-01,  2.5952e-01, ...,  3.1677e-02,
           2.7222e-01,  1.2622e-01],
         [ 4.6313e-01, -3.5059e-01, -2.4280e-01, ...,  1.7542e-01,...
2025-05-16 03:03:32.091898 test begin: paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 396, 8, 96],"float16"), Tensor([4, 396, 8, 96],"float16"), Tensor([4, 396, 8, 96],"float16"), attn_mask=Tensor([4, 1, 396, 396],"float16"), is_causal=True, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 396, 8, 96],"float16"), Tensor([4, 396, 8, 96],"float16"), Tensor([4, 396, 8, 96],"float16"), attn_mask=Tensor([4, 1, 396, 396],"float16"), is_causal=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 478943 / 1216512 (39.4%)
Max absolute difference: 0.554
Max relative difference: inf
 x: array([[[[-3.1433e-02, -4.3304e-02, -1.9897e-02, ..., -4.6722e-02,
           1.1604e-02, -9.9716e-03],
         [-2.1439e-02, -6.8176e-02,  4.9353e-05, ...,  1.8051e-02,...
 y: array([[[[ 1.1877e-01, -1.1676e-01,  9.9304e-02, ..., -4.3945e-01,
          -3.4961e-01,  2.9724e-02],
         [ 3.0444e-01, -1.8774e-01,  4.4849e-01, ...,  6.4774e-03,...
