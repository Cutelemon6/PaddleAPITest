paddle.nn.functional.interpolate(Tensor([1, 1, 640, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 19, 19],"float32"), size=tuple(20,20,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 20, 20],"float32"), size=list[19,19,], mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 64, 10, 10],"float32"), size=tuple(20,20,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 64, 19, 19],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=Tensor([1],"int32"), scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 3, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([24, 32, 16, 16],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([256, 128, 8, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([256, 32, 32, 64],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([256, 4, 4, 8],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([256, 64, 16, 32],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 1, 1],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 1, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 128, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 3, 3],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 6, 6],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 150, 64, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 16, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 32, 64],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 64, 128],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 1, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 32, 32],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 32, 1, 1],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 2, 2],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 3, 3],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 6, 6],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 5, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 160, 4, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 80, 8, 6],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 16, 16],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 32, 32],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 256, 152, 120],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 256, 152, 124],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 256, 152, 128],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 7],"float32"), mode="area", size=list[2,5,], )

grep: warning: GREP_OPTIONS is deprecated; please use an alias or script
2025-05-15 01:59:33.829482 test begin: paddle.nn.functional.interpolate(Tensor([1, 1, 640, 480],"float32"), size=list[10,8,], )
W0515 01:59:40.012557 15843 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 6.1, Driver API Version: 12.0, Runtime API Version: 11.8
W0515 01:59:40.013876 15843 gpu_resources.cc:164] device: 0, cuDNN Version: 8.8.
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([1, 1, 640, 480],"float32"), size=list[10,8,], ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 80 / 307200 (0.026%)
Max absolute difference: 0.49732763
Max relative difference: 1.
 x: array([[[[-0.238195,  0.      ,  0.      , ...,  0.      ,  0.      ,
           0.      ],
         [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,...
 y: array([[[[-0.238195,  0.      ,  0.      , ...,  0.      ,  0.      ,
           0.      ],
         [ 0.      ,  0.      ,  0.      , ...,  0.      ,  0.      ,...
2025-05-15 02:00:13.421095 test begin: paddle.nn.functional.interpolate(Tensor([1, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 6923623 / 8388608 (82.5%)
Max absolute difference: 0.4006625
Max relative difference: 1632081.9
 x: array([[[[-0.366248, -0.155079,  0.056091, ...,  0.367636,  0.375304,
           0.382973],
         [-0.126261, -0.088708, -0.051155, ...,  0.187886,  0.128938,...
 y: array([[[[-0.366248, -0.260248, -0.048247, ...,  0.371425,  0.379124,
           0.382973],
         [-0.245782, -0.183528, -0.05902 , ...,  0.264674,  0.238801,...
2025-05-15 02:00:14.393336 test begin: paddle.nn.functional.interpolate(Tensor([1, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1793995 / 2097152 (85.5%)
Max absolute difference: 0.35906225
Max relative difference: 128745.84
 x: array([[[[-3.800078e-01, -3.802951e-01, -3.805824e-01, ...,
          -4.159174e-01, -4.162047e-01, -4.164920e-01],
         [-3.806569e-01, -3.809403e-01, -3.812237e-01, ...,...
 y: array([[[[-0.380008, -0.380008, -0.380008, ..., -0.416492, -0.416492,
          -0.416492],
         [-0.380008, -0.380008, -0.380008, ..., -0.416492, -0.416492,...
2025-05-15 02:00:14.692193 test begin: paddle.nn.functional.interpolate(Tensor([1, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1847616 / 2097152 (88.1%)
Max absolute difference: 0.4908721
Max relative difference: 1139332.8
 x: array([[[[-0.20158 , -0.204562, -0.207544, ..., -0.001516,  0.004816,
           0.011148],
         [-0.200138, -0.203152, -0.206167, ..., -0.004589,  0.001703,...
 y: array([[[[-0.20158 , -0.20158 , -0.20158 , ...,  0.011148,  0.011148,
           0.011148],
         [-0.20158 , -0.20158 , -0.20158 , ...,  0.011148,  0.011148,...
2025-05-15 02:00:15.009796 test begin: paddle.nn.functional.interpolate(Tensor([1, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1854447 / 2097152 (88.4%)
Max absolute difference: 0.5431435
Max relative difference: 1186047.2
 x: array([[[[-0.311727, -0.298561, -0.285395, ...,  0.056806,  0.055755,
           0.054705],
         [-0.298146, -0.285987, -0.273828, ...,  0.03993 ,  0.037738,...
 y: array([[[[-0.311727, -0.311727, -0.311727, ...,  0.054705,  0.054705,
           0.054705],
         [-0.311727, -0.311727, -0.311727, ...,  0.054705,  0.054705,...
2025-05-15 02:00:15.300874 test begin: paddle.nn.functional.interpolate(Tensor([1, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([1, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 141 / 256 (55.1%)
Max absolute difference: 1.156
Max relative difference: 1.402
 x: array([[[[ 4.5000e+01]],

        [[-1.1777e+00]],...
 y: array([[[[ 44.7   ]],

        [[ -1.277 ]],...
2025-05-15 02:00:18.114803 test begin: paddle.nn.functional.interpolate(Tensor([1, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 163 / 192 (84.9%)
Max absolute difference: 0.7561371
Max relative difference: 322.12354
 x: array([[[ 0.274872, -0.42067 ,  0.414324, -0.420766, -0.261204,
          0.369512,  0.085605, -0.076008,  0.020412, -0.41829 ,
         -0.209391, -0.063697, -0.395963,  0.377835,  0.090065,...
 y: array([[[ 0.274872, -0.414337,  0.410141, -0.400991, -0.272256,
          0.367207,  0.03586 , -0.039088,  0.011983, -0.420203,
         -0.128805, -0.009586, -0.22791 ,  0.240285, -0.021968,...
2025-05-15 02:00:18.257665 test begin: paddle.nn.functional.interpolate(Tensor([1, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 175 / 192 (91.1%)
Max absolute difference: 0.685632
Max relative difference: 50.08376
 x: array([[[-0.145637,  0.277252, -0.49123 , -0.057826, -0.155917,
          0.474602,  0.159173,  0.293473,  0.321678, -0.039154,
          0.019414,  0.231006, -0.139515, -0.46055 , -0.103252,...
 y: array([[[-0.145637,  0.272018, -0.46167 , -0.07458 , -0.14323 ,
          0.400185,  0.172175,  0.253111,  0.297361,  0.020632,
          0.007429,  0.20887 , -0.150327, -0.341101, -0.177207,...
2025-05-15 02:00:18.393230 test begin: paddle.nn.functional.interpolate(Tensor([1, 3, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 3, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 301 / 384 (78.4%)
Max absolute difference: 0.3267
Max relative difference: 124.75
 x: array([[[-1.2524e-01,  7.8491e-02,  2.8223e-01, -1.2207e-02,
         -3.0664e-01, -1.8555e-01, -6.4331e-02, -1.3196e-01,
         -1.9958e-01, -7.6477e-02,  4.6661e-02,  2.4487e-01,...
 y: array([[[-0.1252  ,  0.0769  ,  0.279   , -0.005253, -0.2974  ,
         -0.1903  , -0.07007 , -0.1282  , -0.1953  , -0.0852  ,
          0.03696 ,  0.2277  ,  0.4243  ,  0.316   ,  0.1753  ,...
2025-05-15 02:00:18.530350 test begin: paddle.nn.functional.interpolate(Tensor([1, 3, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 3, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 330 / 384 (85.9%)
Max absolute difference: 0.41889825
Max relative difference: 117.08902
 x: array([[[-0.121309, -0.238027, -0.354744,  0.021635,  0.398014,
          0.15286 , -0.092293,  0.165955,  0.424203,  0.025787,
         -0.37263 , -0.325719, -0.278808,  0.097289,  0.473385,...
 y: array([[[-0.121309, -0.237108, -0.352906,  0.012744,  0.38616 ,
          0.162512, -0.080711,  0.151721,  0.407936,  0.054021,
         -0.341258, -0.329782, -0.28324 ,  0.058791,  0.431926,...
2025-05-15 02:00:18.713249 test begin: paddle.nn.functional.interpolate(Tensor([1, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 28242 / 32768 (86.2%)
Max absolute difference: 0.32004237
Max relative difference: 1204.707
 x: array([[[[-0.348933, -0.324567, -0.300202, ...,  0.357662,  0.382027,
           0.406393],
         [-0.340816, -0.317569, -0.294323, ...,  0.333338,  0.356585,...
 y: array([[[[-0.348933, -0.348933, -0.348933, ...,  0.406393,  0.406393,
           0.406393],
         [-0.348933, -0.348933, -0.348933, ...,  0.406393,  0.406393,...
2025-05-15 02:00:18.895206 test begin: paddle.nn.functional.interpolate(Tensor([1, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 27826 / 32768 (84.9%)
Max absolute difference: 0.3518505
Max relative difference: 1348.124
 x: array([[[[-1.784152e-01, -1.580924e-01, -1.377697e-01, ...,
          -1.226380e-01, -1.418400e-01, -1.610419e-01],
         [-1.828038e-01, -1.618504e-01, -1.408970e-01, ...,...
 y: array([[[[-0.178415, -0.178415, -0.178415, ..., -0.161042, -0.161042,
          -0.161042],
         [-0.178415, -0.178415, -0.178415, ..., -0.161042, -0.161042,...
2025-05-15 02:00:19.075049 test begin: paddle.nn.functional.interpolate(Tensor([1, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([1, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 28339 / 32768 (86.5%)
Max absolute difference: 0.4231519
Max relative difference: 5395.2046
 x: array([[[[ 0.216596,  0.226526,  0.236456, ...,  0.424249,  0.425974,
           0.4277  ],
         [ 0.228008,  0.230876,  0.233744, ...,  0.357762,  0.376909,...
 y: array([[[[ 0.216596,  0.216596,  0.216596, ...,  0.4277  ,  0.4277  ,
           0.4277  ],
         [ 0.216596,  0.216596,  0.216596, ...,  0.4277  ,  0.4277  ,...
2025-05-15 02:00:19.230542 test begin: paddle.nn.functional.interpolate(Tensor([16, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([16, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 85408 / 122880 (69.5%)
Max absolute difference: 0.1967158
Max relative difference: 913814.6
 x: array([[[[-2.824731e-01, -7.832497e-02,  1.258231e-01,  1.963006e-01,
           1.331076e-01,  6.991450e-02],
         [-2.254291e-01, -1.282115e-01, -3.099390e-02,  3.202965e-02,...
 y: array([[[[-0.282473, -0.15488 ,  0.100305,  0.188402,  0.10941 ,
           0.069914],
         [-0.249197, -0.16059 ,  0.016625,  0.099287,  0.087395,...
2025-05-15 02:00:19.393325 test begin: paddle.nn.functional.interpolate(Tensor([16, 160, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([16, 160, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 376204 / 491520 (76.5%)
Max absolute difference: 0.2599786
Max relative difference: 32480.936
 x: array([[[[ 1.453419e-01, -2.250515e-02, -1.903522e-01, ...,
           3.518780e-01,  1.624222e-01, -2.703350e-02],
         [-4.685836e-02,  1.208269e-03,  4.927490e-02, ...,...
 y: array([[[[ 1.453419e-01,  5.302601e-02, -1.316057e-01, ...,
           2.855684e-01,  7.716714e-02, -2.703350e-02],
         [ 4.237746e-02,  1.367901e-02, -4.371788e-02, ...,...
2025-05-15 02:00:19.579336 test begin: paddle.nn.functional.interpolate(Tensor([16, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([16, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 393395 / 491520 (80%)
Max absolute difference: 0.34122962
Max relative difference: 84732.484
 x: array([[[[ 8.929864e-02, -8.733232e-02, -2.639633e-01, ...,
          -4.439623e-01, -3.707307e-01, -2.974991e-01],
         [-1.644539e-01, -1.971599e-01, -2.298660e-01, ...,...
 y: array([[[[ 8.929864e-02, -3.031181e-03, -1.876908e-01, ...,
          -4.123396e-01, -3.357792e-01, -2.974991e-01],
         [-4.180685e-02, -9.526604e-02, -2.021844e-01, ...,...
2025-05-15 02:00:19.801422 test begin: paddle.nn.functional.interpolate(Tensor([16, 40, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([16, 40, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1602334 / 1966080 (81.5%)
Max absolute difference: 0.3701467
Max relative difference: 206360.22
 x: array([[[[-4.929598e-01, -2.437848e-01,  5.390190e-03, ...,
           2.125508e-01,  9.124835e-02, -3.005362e-02],
         [-7.961970e-02, -3.738960e-02,  4.840503e-03, ...,...
 y: array([[[[-4.929598e-01, -3.656639e-01, -1.110720e-01, ...,
           1.558552e-01,  3.191597e-02, -3.005362e-02],
         [-2.829564e-01, -2.093740e-01, -6.220916e-02, ...,...
2025-05-15 02:00:20.114193 test begin: paddle.nn.functional.interpolate(Tensor([16, 80, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([16, 80, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 786146 / 983040 (80%)
Max absolute difference: 0.3517126
Max relative difference: 166781.94
 x: array([[[[-1.503493e-01, -2.061101e-01, -2.618708e-01, ...,
          -2.849148e-01, -1.427824e-02,  2.563583e-01],
         [-1.641040e-01, -1.203893e-01, -7.667450e-02, ...,...
 y: array([[[[-1.503493e-01, -1.794970e-01, -2.377923e-01, ...,
          -1.680489e-01,  1.148892e-01,  2.563583e-01],
         [-1.574559e-01, -1.597377e-01, -1.643011e-01, ...,...
2025-05-15 02:00:20.355492 test begin: paddle.nn.functional.interpolate(Tensor([16, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([16, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 188176 / 245760 (76.6%)
Max absolute difference: 0.26518112
Max relative difference: 172486.62
 x: array([[[[-2.573954e-01, -2.975502e-01, -3.377050e-01, ...,
           3.455398e-01,  1.833276e-01,  2.111552e-02],
         [-5.833996e-02, -1.074792e-02,  3.684411e-02, ...,...
 y: array([[[[-2.573954e-01, -2.794805e-01, -3.236508e-01, ...,
           2.887655e-01,  1.103322e-01,  2.111552e-02],
         [-1.507585e-01, -1.469897e-01, -1.394521e-01, ...,...
2025-05-15 02:00:20.560994 test begin: paddle.nn.functional.interpolate(Tensor([160, 32, 8, 6],"float16"), scale_factor=8, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([160, 32, 8, 6],"float16"), scale_factor=8, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1 / 245760 (0.000407%)
Max absolute difference: 0.02734
Max relative difference: 86.3
 x: array([[[[ 5.5371e-01, -1.4980e+00,  2.3516e+00, -4.9648e+00,
           1.5938e+00,  2.2812e+00],
         [ 9.0723e-01, -1.8193e+00,  2.5664e+00, -6.6016e+00,...
 y: array([[[[ 5.5371e-01, -1.4961e+00,  2.3516e+00, -4.9570e+00,
           1.5879e+00,  2.2812e+00],
         [ 9.0527e-01, -1.8223e+00,  2.5664e+00, -6.5938e+00,...
2025-05-15 02:00:22.722550 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 11846 / 13056 (90.7%)
Max absolute difference: 0.58983535
Max relative difference: 1718.1395409
 x: array([[[[[-4.712011e-01, -4.033644e-01,  2.390922e-01,  4.350407e-01],
          [ 5.017379e-02,  4.926024e-02,  1.010112e-01,  4.154060e-01],
          [ 3.444100e-01,  3.106479e-01,  3.300528e-02,  3.810452e-01],...
 y: array([[[[[-4.712011e-01, -4.033644e-01,  2.390922e-01,  4.350407e-01],
          [ 2.736367e-02,  2.945793e-02,  1.070523e-01,  4.162650e-01],
          [ 3.650385e-01,  3.268207e-01,  2.464881e-02,  3.870584e-01],...
2025-05-15 02:00:22.925396 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 11060 / 13056 (84.7%)
Max absolute difference: 0.29757361
Max relative difference: 19599.90673612
 x: array([[[[[ 1.882949e-01,  2.527387e-02,  3.823838e-01,  4.047442e-01],
          [-1.657153e-01,  2.363592e-01,  4.485344e-01,  4.527796e-01],
          [-3.766224e-01,  3.345485e-01,  4.587902e-01,  4.360866e-01],...
 y: array([[[[[ 9.170418e-03,  8.120662e-02,  1.534329e-01,  1.504976e-01],
          [-1.017281e-01,  9.395089e-02,  1.761055e-01,  2.772026e-01],
          [-2.723412e-01,  1.135575e-01,  2.109865e-01,  4.721334e-01],...
2025-05-15 02:00:23.123696 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 179 / 192 (93.2%)
Max absolute difference: 0.82078044
Max relative difference: 71.4423351
 x: array([[[[[ 0.490695, -0.051432,  0.347912, -0.318483],
          [ 0.019852, -0.195949,  0.350663,  0.113178],
          [-0.206971, -0.065215, -0.28785 ,  0.145731]],...
 y: array([[[[[ 0.490695, -0.051432,  0.347912, -0.318483],
          [ 0.216966, -0.385604,  0.038084,  0.106619],
          [ 0.12941 ,  0.465482,  0.282276,  0.344188]],...
2025-05-15 02:00:23.318182 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 188 / 192 (97.9%)
Max absolute difference: 0.78385842
Max relative difference: 163.9327862
 x: array([[[[[-0.342005, -0.377226,  0.463156,  0.125587],
          [ 0.237916,  0.098114,  0.026551,  0.115628],
          [ 0.45584 ,  0.007971,  0.07769 ,  0.394212]],...
 y: array([[[[[-0.101794, -0.026834, -0.012073, -0.275519],
          [-0.087052, -0.115502, -0.29869 , -0.128163],
          [-0.249825,  0.03465 ,  0.272776,  0.163443]],...
2025-05-15 02:00:23.490027 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 135 / 144 (93.8%)
Max absolute difference: 0.30413541
Max relative difference: 203.55442886
 x: array([[[[ 0.358472, -0.159068],
         [ 0.287426, -0.069167],
         [-0.329419,  0.074862],...
 y: array([[[[ 0.481735, -0.233273],
         [ 0.243304, -0.14281 ],
         [-0.28703 ,  0.118139],...
2025-05-15 02:00:23.642773 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 128 / 144 (88.9%)
Max absolute difference: 0.34848062
Max relative difference: 109.69830192
 x: array([[[[-0.262773, -0.142156],
         [ 0.129331, -0.508913],
         [ 0.178868,  0.004606],...
 y: array([[[[ 0.085707, -0.245132],
         [-0.069876, -0.410112],
         [ 0.233704, -0.020033],...
2025-05-15 02:00:23.779939 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 136 / 144 (94.4%)
Max absolute difference: 0.60161267
Max relative difference: 44.58049128
 x: array([[[[-0.337404, -0.172795],
         [ 0.028072,  0.06649 ],
         [ 0.374902,  0.33199 ],...
 y: array([[[[-0.337404, -0.172795],
         [ 0.080909,  0.116717],
         [ 0.303859,  0.281696],...
2025-05-15 02:00:23.916502 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 131 / 144 (91%)
Max absolute difference: 0.32903732
Max relative difference: 77.96256811
 x: array([[[[-0.262754, -0.351966],
         [ 0.358782, -0.080246],
         [-0.013537,  0.374738],...
 y: array([[[[-0.171618, -0.197253],
         [ 0.217112, -0.109139],
         [-0.054645,  0.249508],...
2025-05-15 02:00:24.094200 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 362 / 408 (88.7%)
Max absolute difference: 0.38744656
Max relative difference: 135.02993321
 x: array([[[[-4.831500e-01, -3.401547e-01],
         [-1.823858e-01, -1.804584e-01],
         [ 1.819073e-02, -7.579340e-03],...
 y: array([[[[-0.48315 , -0.340155],
         [-0.195544, -0.187445],
         [ 0.021095, -0.025398],...
2025-05-15 02:00:24.257784 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 350 / 408 (85.8%)
Max absolute difference: 0.28173953
Max relative difference: 31.89854865
 x: array([[[[-4.610639e-01,  4.173918e-01],
         [ 3.721003e-02,  1.802279e-02],
         [ 3.777298e-01, -2.454165e-01],...
 y: array([[[[-0.306799,  0.444674],
         [-0.030708,  0.18661 ],
         [ 0.394047, -0.210411],...
2025-05-15 02:00:24.442012 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 370 / 432 (85.6%)
Max absolute difference: 0.31463695
Max relative difference: 162.84226877
 x: array([[[[-4.798949e-03,  1.021734e-02],
         [ 7.377080e-02, -3.168396e-02],
         [ 1.970827e-01, -6.746395e-02],...
 y: array([[[[ 0.235827,  0.187953],
         [ 0.380002, -0.148824],
         [ 0.4841  , -0.326318],...
2025-05-15 02:00:24.602941 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 374 / 432 (86.6%)
Max absolute difference: 0.31601261
Max relative difference: 707.43435179
 x: array([[[[-1.271097e-01,  3.142162e-01],
         [-8.365364e-02, -1.926440e-02],
         [ 4.715689e-03, -2.060089e-01],...
 y: array([[[[-1.487886e-01,  3.081065e-01],
         [-6.891135e-02,  6.365071e-02],
         [ 4.745178e-02, -2.544309e-01],...
2025-05-15 02:00:24.790028 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 604 / 672 (89.9%)
Max absolute difference: 0.5255519
Max relative difference: 3225.70642657
 x: array([[[[-8.679612e-02, -1.672744e-01],
         [-4.089656e-02, -1.594138e-01],
         [ 5.003002e-03, -1.515533e-01],...
 y: array([[[[-8.679612e-02, -1.672744e-01],
         [-4.395653e-02, -1.599379e-01],
         [-1.116942e-03, -1.526014e-01],...
2025-05-15 02:00:24.953023 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 601 / 672 (89.4%)
Max absolute difference: 0.37685991
Max relative difference: 87.86690685
 x: array([[[[ 2.415752e-01,  3.938060e-01],
         [ 2.686431e-01,  1.572934e-01],
         [ 2.957110e-01, -7.921920e-02],...
 y: array([[[[ 0.324185,  0.268847],
         [ 0.318779,  0.253256],
         [ 0.264719,  0.097347],...
2025-05-15 02:00:25.132946 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 856 / 936 (91.5%)
Max absolute difference: 0.59639695
Max relative difference: 663.55514567
 x: array([[[[-2.131252e-01,  3.377849e-01],
         [-2.839496e-01,  3.609053e-01],
         [-3.547741e-01,  3.840258e-01],...
 y: array([[[[-2.131252e-01,  3.377849e-01],
         [-2.785446e-01,  3.591409e-01],
         [-3.439640e-01,  3.804969e-01],...
2025-05-15 02:00:25.324096 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 819 / 936 (87.5%)
Max absolute difference: 0.45518521
Max relative difference: 242.70917257
 x: array([[[[-3.915329e-01, -1.582121e-01],
         [-2.924825e-01, -2.064354e-01],
         [-1.934321e-01, -2.546588e-01],...
 y: array([[[[-0.233501, -0.229389],
         [-0.233501, -0.229389],
         [-0.182496, -0.253545],...
2025-05-15 02:00:25.520808 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 374 / 408 (91.7%)
Max absolute difference: 0.53329516
Max relative difference: 119.10566465
 x: array([[[[-0.195774,  0.229985],
         [-0.310098, -0.429115],
         [ 0.151788,  0.234489],...
 y: array([[[[-0.195774,  0.229985],
         [-0.381887, -0.452126],
         [ 0.261815,  0.246507],...
2025-05-15 02:00:25.696735 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 346 / 408 (84.8%)
Max absolute difference: 0.30044217
Max relative difference: 96.90465423
 x: array([[[[-0.161182,  0.170805],
         [ 0.154872, -0.066302],
         [ 0.231503, -0.29883 ],...
 y: array([[[[-0.00166 ,  0.127105],
         [ 0.114244, -0.092803],
         [ 0.22996 , -0.287607],...
2025-05-15 02:00:25.869543 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 964 / 1156 (83.4%)
Max absolute difference: 0.30605707
Max relative difference: 1172.92327845
 x: array([[[[-0.265364,  0.201926],
         [-0.347659,  0.081461],
         [-0.37727 , -0.015756],...
 y: array([[[[-2.653636e-01,  2.019260e-01],
         [-3.440590e-01,  8.673097e-02],
         [-3.854358e-01, -1.199637e-02],...
2025-05-15 02:00:26.033451 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 848 / 1156 (73.4%)
Max absolute difference: 0.1510936
Max relative difference: 421.27137472
 x: array([[[[-0.053392, -0.47322 ],
         [-0.294559, -0.004506],
         [-0.421131,  0.340235],...
 y: array([[[[-5.339190e-02, -4.732204e-01],
         [-2.173223e-01, -1.546170e-01],
         [-4.695229e-01,  3.355420e-01],...
2025-05-15 02:00:26.186583 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1688 / 1904 (88.7%)
Max absolute difference: 0.47121283
Max relative difference: 583.90741409
 x: array([[[[ 0.376832, -0.392669],
         [ 0.258783, -0.092257],
         [ 0.140735,  0.208155],...
 y: array([[[[ 0.376832, -0.392669],
         [ 0.266653, -0.112285],
         [ 0.156475,  0.1681  ],...
2025-05-15 02:00:26.361057 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1552 / 1904 (81.5%)
Max absolute difference: 0.26878681
Max relative difference: 880.72018484
 x: array([[[[ 0.155156,  0.418921],
         [ 0.204688,  0.117879],
         [ 0.25422 , -0.183162],...
 y: array([[[[ 0.155156,  0.418921],
         [ 0.160463,  0.386666],
         [ 0.213533,  0.064122],...
2025-05-15 02:00:26.540416 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2375 / 2652 (89.6%)
Max absolute difference: 0.51383569
Max relative difference: 1064.62834932
 x: array([[[[ 0.204742, -0.471786],
         [ 0.200308, -0.383214],
         [ 0.195873, -0.294641],...
 y: array([[[[ 0.204742, -0.471786],
         [ 0.200646, -0.389973],
         [ 0.19655 , -0.30816 ],...
2025-05-15 02:00:26.702790 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2144 / 2652 (80.8%)
Max absolute difference: 0.25984545
Max relative difference: 10604.67771291
 x: array([[[[ 0.044154,  0.168792],
         [ 0.01361 ,  0.140959],
         [-0.016934,  0.113126],...
 y: array([[[[ 0.044154,  0.168792],
         [ 0.044154,  0.168792],
         [ 0.025967,  0.152219],...
2025-05-15 02:00:26.857625 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 376 / 432 (87%)
Max absolute difference: 0.30091148
Max relative difference: 60.2165776
 x: array([[[[-1.080370e-01,  1.606376e-01],
         [-2.712337e-02, -5.151211e-01],
         [ 2.780709e-01, -4.302963e-01],...
 y: array([[[[-0.011667,  0.036995],
         [-0.04863 , -0.374692],
         [ 0.218026, -0.37515 ],...
2025-05-15 02:00:27.037432 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 376 / 432 (87%)
Max absolute difference: 0.32819118
Max relative difference: 141.20347092
 x: array([[[[-1.411372e-01, -7.142950e-02],
         [-3.459951e-01, -7.309648e-02],
         [ 1.485585e-01,  2.752375e-01],...
 y: array([[[[ 0.023396, -0.08329 ],
         [-0.502191, -0.074481],
         [ 0.086713,  0.326421],...
2025-05-15 02:00:27.196828 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1067 / 1296 (82.3%)
Max absolute difference: 0.2650243
Max relative difference: 18908.84440967
 x: array([[[[-2.682681e-01,  5.367410e-01],
         [-2.699704e-01,  3.312648e-01],
         [-2.245785e-01,  5.934328e-02],...
 y: array([[[[-0.191439,  0.467247],
         [-0.240832,  0.2035  ],
         [-0.136797,  0.014461],...
2025-05-15 02:00:27.335721 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1048 / 1296 (80.9%)
Max absolute difference: 0.3021835
Max relative difference: 518.43797995
 x: array([[[[-0.236366,  0.374768],
         [-0.439093,  0.44675 ],
         [-0.430404,  0.347255],...
 y: array([[[[-0.240321,  0.369221],
         [-0.39304 ,  0.454618],
         [-0.547176,  0.517184],...
2025-05-15 02:00:27.509836 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 614 / 672 (91.4%)
Max absolute difference: 0.51801556
Max relative difference: 145.8830666
 x: array([[[[-6.647150e-02, -4.351865e-01],
         [-2.633586e-02,  2.382005e-01],
         [ 2.888837e-01,  1.969979e-02],...
 y: array([[[[-0.066472, -0.435187],
         [-0.004544,  0.341317],
         [ 0.234904,  0.039259],...
2025-05-15 02:00:27.672774 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 585 / 672 (87.1%)
Max absolute difference: 0.33522086
Max relative difference: 367.4202237
 x: array([[[[ 3.627464e-01,  1.795370e-01],
         [ 3.608216e-01,  1.623733e-01],
         [-2.749529e-01,  1.781449e-01],...
 y: array([[[[ 3.409026e-01, -2.288145e-02],
         [ 3.767233e-01,  3.098963e-01],
         [-2.739546e-01,  1.945098e-01],...
2025-05-15 02:00:27.856997 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1709 / 1904 (89.8%)
Max absolute difference: 0.56143297
Max relative difference: 640.26981344
 x: array([[[[-0.414772,  0.166066],
         [-0.19962 , -0.079574],
         [ 0.001905, -0.182144],...
 y: array([[[[-4.147716e-01,  1.660662e-01],
         [-2.090327e-01, -6.882700e-02],
         [-1.294645e-02, -2.023795e-01],...
2025-05-15 02:00:28.028251 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1519 / 1904 (79.8%)
Max absolute difference: 0.27113462
Max relative difference: 510.45443348
 x: array([[[[ 0.226154,  0.118961],
         [ 0.174048, -0.080822],
         [ 0.100594, -0.265358],...
 y: array([[[[ 0.226154,  0.118961],
         [ 0.190736, -0.016839],
         [ 0.136246, -0.225762],...
2025-05-15 02:00:28.202385 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2822 / 3136 (90%)
Max absolute difference: 0.53556559
Max relative difference: 1269.40932176
 x: array([[[[ 0.486032, -0.290223],
         [ 0.203729, -0.200622],
         [-0.078574, -0.111021],...
 y: array([[[[ 0.486032, -0.290223],
         [ 0.222549, -0.206595],
         [-0.040934, -0.122968],...
2025-05-15 02:00:28.364693 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2740 / 3136 (87.4%)
Max absolute difference: 0.32779196
Max relative difference: 4122.7034662
 x: array([[[[-0.348456,  0.322121],
         [-0.394505,  0.336554],
         [-0.440555,  0.350987],...
 y: array([[[[-0.348456,  0.322121],
         [-0.35339 ,  0.323668],
         [-0.402728,  0.339131],...
2025-05-15 02:00:28.513322 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3991 / 4368 (91.4%)
Max absolute difference: 0.58503729
Max relative difference: 992.70812602
 x: array([[[[-0.131976,  0.23668 ],
         [-0.037209,  0.146175],
         [ 0.057558,  0.055669],...
 y: array([[[[-0.131976,  0.23668 ],
         [-0.044441,  0.153082],
         [ 0.043093,  0.069483],...
2025-05-15 02:00:28.657655 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3662 / 4368 (83.8%)
Max absolute difference: 0.32618508
Max relative difference: 1120.45061733
 x: array([[[[-0.478656, -0.133845],
         [-0.337396, -0.192236],
         [-0.196136, -0.250627],...
 y: array([[[[-0.478656, -0.133845],
         [-0.478656, -0.133845],
         [-0.394544, -0.168613],...
2025-05-15 02:00:28.797347 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 841 / 936 (89.9%)
Max absolute difference: 0.55961511
Max relative difference: 273.13660117
 x: array([[[[-0.067673,  0.201018],
         [-0.184276, -0.167381],
         [-0.19933 ,  0.337796],...
 y: array([[[[-0.067673,  0.201018],
         [-0.205864, -0.239039],
         [-0.109763,  0.26129 ],...
2025-05-15 02:00:28.947193 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 825 / 936 (88.1%)
Max absolute difference: 0.33443642
Max relative difference: 1882.88257785
 x: array([[[[ 2.681469e-01,  1.068463e-01],
         [ 1.781348e-01,  2.293416e-01],
         [ 2.746265e-01,  1.378205e-02],...
 y: array([[[[ 9.686933e-02,  1.971477e-01],
         [ 2.840899e-01,  1.922394e-01],
         [ 3.030524e-01,  5.245597e-02],...
2025-05-15 02:00:29.099941 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2345 / 2652 (88.4%)
Max absolute difference: 0.59662956
Max relative difference: 1029.18896502
 x: array([[[[-0.111165,  0.173903],
         [-0.239426,  0.340577],
         [-0.279467,  0.39947 ],...
 y: array([[[[-1.111648e-01,  1.739030e-01],
         [-2.338142e-01,  3.332848e-01],
         [-2.939745e-01,  4.163218e-01],...
2025-05-15 02:00:29.244672 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2156 / 2652 (81.3%)
Max absolute difference: 0.30847878
Max relative difference: 793.29418036
 x: array([[[[ 0.108398,  0.191669],
         [ 0.041682, -0.083302],
         [-0.031184, -0.302418],...
 y: array([[[[ 0.108398,  0.191669],
         [ 0.063048,  0.004761],
         [-0.00672 , -0.282791],...
2025-05-15 02:00:29.386287 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3971 / 4368 (90.9%)
Max absolute difference: 0.65559773
Max relative difference: 7062.01890603
 x: array([[[[-0.216057, -0.114852],
         [-0.067147, -0.039694],
         [ 0.081764,  0.035463],...
 y: array([[[[-0.216057, -0.114852],
         [-0.077074, -0.044705],
         [ 0.061909,  0.025442],...
2025-05-15 02:00:29.523701 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3708 / 4368 (84.9%)
Max absolute difference: 0.30235785
Max relative difference: 1581.52287627
 x: array([[[[-0.492295,  0.241635],
         [-0.472303,  0.151228],
         [-0.452311,  0.060822],...
 y: array([[[[-0.492295,  0.241635],
         [-0.490153,  0.231949],
         [-0.468733,  0.135084],...
2025-05-15 02:00:29.661643 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 5490 / 6084 (90.2%)
Max absolute difference: 0.6025338
Max relative difference: 2719.9388266
 x: array([[[[-4.793154e-01, -2.594796e-01],
         [-4.263732e-01, -1.783673e-01],
         [-3.734311e-01, -9.725496e-02],...
 y: array([[[[-4.793154e-01, -2.594796e-01],
         [-4.304136e-01, -1.845574e-01],
         [-3.815117e-01, -1.096352e-01],...
2025-05-15 02:00:29.835809 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 5250 / 6084 (86.3%)
Max absolute difference: 0.33728545
Max relative difference: 1815.70548859
 x: array([[[[-0.259847, -0.246725],
         [-0.109153, -0.142576],
         [ 0.041541, -0.038428],...
 y: array([[[[-0.259847, -0.246725],
         [-0.259847, -0.246725],
         [-0.170118, -0.18471 ],...
2025-05-15 02:00:30.003080 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 465 / 676 (68.8%)
Max absolute difference: 0.14558552
Max relative difference: 37.37208774
 x: array([[[[-0.472853, -0.511878],
         [ 0.114422, -0.450914],
         [ 0.301615, -0.281779],...
 y: array([[[[-0.376409, -0.448962],
         [ 0.201915, -0.39555 ],
         [ 0.277569, -0.251899],...
2025-05-15 02:00:30.176045 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 491 / 676 (72.6%)
Max absolute difference: 0.11779705
Max relative difference: 57.31399274
 x: array([[[[ 4.245102e-01,  3.122131e-01],
         [ 4.699980e-01, -1.987951e-02],
         [ 2.038999e-01, -4.398620e-01],...
 y: array([[[[ 0.472803,  0.347436],
         [ 0.514513,  0.018794],
         [ 0.26726 , -0.453505],...
2025-05-15 02:00:30.339181 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 102 / 104 (98.1%)
Max absolute difference: 1.14023668
Max relative difference: 40.75291615
 x: array([[[[-0.070985, -0.193195],
         [ 0.050646,  0.266778]],
...
 y: array([[[[ 0.065635, -0.098283],
         [-0.475857,  0.45317 ]],
...
2025-05-15 02:00:30.475400 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 98 / 104 (94.2%)
Max absolute difference: 0.82975574
Max relative difference: 4099.41271492
 x: array([[[[-0.418426, -0.117562],
         [-0.234184, -0.460782]],
...
 y: array([[[[ 1.179754e-01,  2.695502e-01],
         [-5.434514e-01, -3.501308e-02]],
...
2025-05-15 02:00:30.651331 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 495 / 672 (73.7%)
Max absolute difference: 0.20400887
Max relative difference: 45.36407589
 x: array([[[[ 0.232384,  0.363927],
         [-0.00374 , -0.191417],
         [ 0.207847,  0.097773],...
 y: array([[[[ 0.232384,  0.363927],
         [ 0.000553, -0.181319],
         [ 0.196082,  0.07958 ],...
2025-05-15 02:00:30.824280 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 366 / 672 (54.5%)
Max absolute difference: 0.10002386
Max relative difference: 24.70711497
 x: array([[[[ 1.704076e-01,  1.339163e-01],
         [-1.898455e-01,  3.341669e-01],
         [ 2.038220e-01,  1.956070e-01],...
 y: array([[[[ 0.170408,  0.133916],
         [-0.159824,  0.317479],
         [ 0.164345,  0.210862],...
2025-05-15 02:00:31.002374 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 95 / 112 (84.8%)
Max absolute difference: 0.72615359
Max relative difference: 32.28844513
 x: array([[[[ 1.976319e-01,  2.847281e-02],
         [ 1.090602e-01, -3.916094e-01]],
...
 y: array([[[[ 0.197632,  0.028473],
         [-0.096621,  0.018967]],
...
2025-05-15 02:00:31.156506 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 110 / 112 (98.2%)
Max absolute difference: 0.8601042
Max relative difference: 154.94381963
 x: array([[[[ 4.136712e-01,  3.902864e-01],
         [-1.777610e-02, -2.617819e-01]],
...
 y: array([[[[ 4.536885e-01, -6.657471e-02],
         [ 4.768356e-01,  3.226310e-01]],
...
2025-05-15 02:00:31.328299 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1040 / 1232 (84.4%)
Max absolute difference: 0.4074149
Max relative difference: 1601.25973578
 x: array([[[[-0.078543,  0.466652],
         [-0.22533 ,  0.471066],
         [-0.372117,  0.47548 ],...
 y: array([[[[-0.078543,  0.466652],
         [-0.216942,  0.470814],
         [-0.355341,  0.474975],...
2025-05-15 02:00:31.495797 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 881 / 1232 (71.5%)
Max absolute difference: 0.18841407
Max relative difference: 1585.91105557
 x: array([[[[-0.492432,  0.43246 ],
         [-0.445755,  0.14009 ],
         [-0.399078, -0.152281],...
 y: array([[[[-4.924323e-01,  4.324603e-01],
         [-4.726298e-01,  3.084243e-01],
         [-4.231236e-01, -1.665752e-03],...
2025-05-15 02:00:31.649485 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 70 / 96 (72.9%)
Max absolute difference: 0.68402526
Max relative difference: 134.31817711
 x: array([[[[ 0.423835,  0.047133],
         [ 0.40802 ,  0.078805],
         [ 0.318874,  0.358618],...
 y: array([[[[ 0.423835,  0.047133],
         [ 0.408307,  0.07823 ],
         [ 0.322783,  0.346187],...
2025-05-15 02:00:31.815397 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 96 / 96 (100%)
Max absolute difference: 0.9105229
Max relative difference: 553.96052347
 x: array([[[[-0.218645,  0.326686],
         [-0.146113,  0.418159],
         [-0.172705, -0.149151],...
 y: array([[[[ 1.604801e-01, -4.140434e-01],
         [-2.163926e-01,  8.350179e-02],
         [-7.894486e-03,  2.631549e-01],...
2025-05-15 02:00:31.979554 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 99 / 104 (95.2%)
Max absolute difference: 0.89212769
Max relative difference: 92.86119978
 x: array([[[[ 3.015456e-01,  3.929070e-01],
         [-1.397594e-01,  4.573905e-01],
         [-2.138942e-01,  2.392080e-02],...
 y: array([[[[-0.267069, -0.200152],
         [-0.027417,  0.238318],
         [-0.188403,  0.280346],...
2025-05-15 02:00:32.144123 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 100 / 104 (96.2%)
Max absolute difference: 0.9036755
Max relative difference: 26.02870652
 x: array([[[[ 0.459424, -0.302521],
         [-0.159942,  0.166209],
         [-0.141779,  0.034399],...
 y: array([[[[-0.207868,  0.377693],
         [ 0.126211,  0.405602],
         [-0.016697,  0.34829 ],...
2025-05-15 02:00:32.297263 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.73534027
Max relative difference: 2521.5462394
 x: array([[[[ 0.151663,  0.290245],
         [-0.250484, -0.388611]],
...
 y: array([[[[-4.459902e-01,  4.255101e-01],
         [ 1.070871e-01,  9.065628e-02]],
...
2025-05-15 02:00:32.471169 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.98101713
Max relative difference: 16.90692349
 x: array([[[[ 0.292536,  0.439369],
         [-0.09566 , -0.484326]],
...
 y: array([[[[ 0.240931,  0.184269],
         [ 0.121952,  0.496691]],
...
2025-05-15 02:00:32.618504 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 12 / 16 (75%)
Max absolute difference: 0.68112751
Max relative difference: 9.94889933
 x: array([[[[ 0.293151, -0.388114],
         [ 0.409245, -0.352166]],
...
 y: array([[[[ 0.293151, -0.388114],
         [-0.271882, -0.43635 ]],
...
2025-05-15 02:00:32.787709 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.84440263
Max relative difference: 6.98774844
 x: array([[[[-0.405747, -0.077402],
         [-0.449997, -0.325414]],
...
 y: array([[[[ 0.438656,  0.201161],
         [ 0.253381,  0.079651]],
...
2025-05-15 02:00:32.947282 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 156 / 176 (88.6%)
Max absolute difference: 0.72230183
Max relative difference: 28.48114848
 x: array([[[[ 0.479392, -0.049284],
         [ 0.060417,  0.168768],
         [-0.358559,  0.38682 ],...
 y: array([[[[ 0.479392, -0.049284],
         [ 0.084358,  0.156308],
         [-0.310676,  0.3619  ],...
2025-05-15 02:00:33.105556 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 169 / 176 (96%)
Max absolute difference: 0.85259242
Max relative difference: 152.33491973
 x: array([[[[-1.013088e-01,  4.706394e-03],
         [-2.001310e-02,  6.268243e-02],
         [ 6.128254e-02,  1.206585e-01],...
 y: array([[[[-0.065264, -0.412021],
         [-0.059423, -0.32612 ],
         [-0.04482 , -0.111366],...
2025-05-15 02:00:33.256355 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1062 / 1248 (85.1%)
Max absolute difference: 0.50052602
Max relative difference: 19794.52477629
 x: array([[[[ 0.228566, -0.391805],
         [-0.056265,  0.319298],
         [ 0.285427,  0.437035],...
 y: array([[[[ 2.285658e-01, -3.918050e-01],
         [-5.108619e-02,  3.063693e-01],
         [ 2.673062e-01,  4.381480e-01],...
2025-05-15 02:00:33.399704 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 911 / 1248 (73%)
Max absolute difference: 0.24847247
Max relative difference: 2168.13383013
 x: array([[[[-0.338794,  0.273548],
         [ 0.334959,  0.354575],
         [ 0.271437,  0.102826],...
 y: array([[[[-0.338794,  0.273548],
         [ 0.278812,  0.347823],
         [ 0.289207,  0.125305],...
2025-05-15 02:00:33.576471 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 178 / 208 (85.6%)
Max absolute difference: 0.79703754
Max relative difference: 85.19273666
 x: array([[[[ 6.584885e-02,  3.483023e-01],
         [-3.972667e-01,  8.584391e-02]],
...
 y: array([[[[ 0.065849,  0.348302],
         [-0.494956, -0.193615]],
...
2025-05-15 02:00:33.745180 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 205 / 208 (98.6%)
Max absolute difference: 0.88099566
Max relative difference: 105.45692683
 x: array([[[[-0.038158,  0.382806],
         [ 0.050419, -0.244758]],
...
 y: array([[[[ 0.122749, -0.298155],
         [ 0.259002,  0.314599]],
...
2025-05-15 02:00:33.910135 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2083 / 2288 (91%)
Max absolute difference: 0.45059637
Max relative difference: 2490.93433952
 x: array([[[[-0.388455,  0.191696],
         [-0.120728,  0.105086],
         [ 0.146998,  0.018477],...
 y: array([[[[-0.388455,  0.191696],
         [-0.136027,  0.110036],
         [ 0.116401,  0.028375],...
2025-05-15 02:00:34.079943 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1897 / 2288 (82.9%)
Max absolute difference: 0.2710086
Max relative difference: 8155.92256252
 x: array([[[[-0.116933,  0.350881],
         [-0.057572,  0.073394],
         [ 0.001788, -0.204093],...
 y: array([[[[-0.116933,  0.350881],
         [-0.09175 ,  0.23316 ],
         [-0.028792, -0.061145],...
2025-05-15 02:00:34.255442 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.7668267
Max relative difference: 150.17712
 x: array([[[ 0.197855,  0.26123 , -0.213796, -0.292518],
        [ 0.098927,  0.130615, -0.106898, -0.146259],
        [ 0.472196, -0.37088 ,  0.287548,  0.479579],...
 y: array([[[ 0.197855,  0.26123 , -0.213796, -0.292518],
        [ 0.098927,  0.130615, -0.106898, -0.146259],
        [ 0.472196, -0.37088 ,  0.287548,  0.479579],...
2025-05-15 02:00:34.395866 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 32 / 48 (66.7%)
Max absolute difference: 0.3683981
Max relative difference: 13.060323
 x: array([[[ 0.469384, -0.237959, -0.463731,  0.066531],
        [-0.008458,  0.145974,  0.105084, -0.398863],
        [-0.389861,  0.053718, -0.105976, -0.057896],...
 y: array([[[ 0.469384, -0.237959, -0.463731,  0.066531],
        [-0.071211,  0.183024,  0.173937, -0.429839],
        [-0.359896, -0.113354, -0.127521, -0.212047],...
2025-05-15 02:00:34.573642 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 48 (79.2%)
Max absolute difference: 0.32008702
Max relative difference: 32.4667
 x: array([[[ 0.130366, -0.36553 , -0.451621, -0.031097],
        [ 0.326252, -0.290357,  0.279695,  0.143036],
        [ 0.07866 ,  0.029023, -0.215635, -0.294211],...
 y: array([[[ 0.133182, -0.169779, -0.38986 , -0.152382],
        [ 0.373112, -0.418378,  0.416204,  0.277533],
        [ 0.140871,  0.030852, -0.244305, -0.319787],...
2025-05-15 02:00:34.725532 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.5281095
Max relative difference: 32.65384
 x: array([[[-0.318023,  0.201173, -0.077425, -0.380689],
        [ 0.051732,  0.041636,  0.033042,  0.013763],
        [ 0.206929,  0.166542,  0.132168,  0.055052],...
 y: array([[[-0.318023,  0.201173, -0.077425, -0.380689],
        [ 0.051732,  0.041636,  0.033042,  0.013763],
        [ 0.206929,  0.166542,  0.132168,  0.055052],...
2025-05-15 02:00:34.898060 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.5313713
Max relative difference: 10.373371
 x: array([[[-0.303225, -0.111972,  0.328073, -0.287876],
        [ 0.044469,  0.11685 , -0.004811, -0.127299],
        [ 0.2289  ,  0.265299, -0.169713, -0.087818],...
 y: array([[[-0.303225, -0.111972,  0.328073, -0.287876],
        [ 0.044469,  0.11685 , -0.004811, -0.127299],
        [ 0.2289  ,  0.265299, -0.169713, -0.087818],...
2025-05-15 02:00:35.065460 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 56 (66.1%)
Max absolute difference: 0.3627605
Max relative difference: 52.59831
 x: array([[[ 0.060712,  0.039237,  0.085196, -0.250485],
        [-0.038263, -0.180324, -0.322043,  0.346493],
        [ 0.225525, -0.030419, -0.194476,  0.1369  ],...
 y: array([[[ 0.060712,  0.039237,  0.085196, -0.250485],
        [ 0.005122, -0.184842, -0.320592,  0.324   ],
        [ 0.211643,  0.00059 , -0.175148,  0.131958],...
2025-05-15 02:00:35.240185 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 56 (67.9%)
Max absolute difference: 0.18829115
Max relative difference: 5.6080246
 x: array([[[ 0.484266,  0.480968,  0.053278, -0.415438],
        [ 0.118893,  0.166752, -0.070248,  0.05587 ],
        [-0.459252,  0.018022,  0.120744,  0.202759],...
 y: array([[[ 0.388729,  0.484704,  0.029586, -0.278882],
        [ 0.141883,  0.071994, -0.073953,  0.008455],
        [-0.458378, -0.006152,  0.114762,  0.211317],...
2025-05-15 02:00:35.390883 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.57476974
Max relative difference: 33.09423
 x: array([[[ 0.020717, -0.27529 , -0.297583,  0.048743],
        [ 0.102971,  0.133576, -0.203237,  0.171903],
        [ 0.102971,  0.133576, -0.203237,  0.171903],...
 y: array([[[ 0.020717, -0.27529 , -0.297583,  0.048743],
        [ 0.102971,  0.133576, -0.203237,  0.171903],
        [ 0.102971,  0.133576, -0.203237,  0.171903],...
2025-05-15 02:00:35.564124 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[-0.124724, -0.276657,  0.32983 ,  0.119716],
        [-0.319215, -0.319474,  0.190036, -0.316127],
        [-0.307391,  0.120142,  0.319   ,  0.099339],...
 y: array([[[-0.124724, -0.276657,  0.32983 ,  0.119716],
        [-0.319215, -0.319474,  0.190036, -0.316127],
        [-0.307391,  0.120142,  0.319   ,  0.099339],...
2025-05-15 02:00:35.740674 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[ 0.014081,  0.032166,  0.158089,  0.45266 ],
        [ 0.202541,  0.117951, -0.036442,  0.292907],
        [-0.385834,  0.284649,  0.050394, -0.029284],...
 y: array([[[ 0.014081,  0.032166,  0.158089,  0.45266 ],
        [-0.030923,  0.172169,  0.079036,  0.147976],
        [-0.273816,  0.288694, -0.209203,  0.083316],...
2025-05-15 02:00:35.892238 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[-0.493302,  0.129897, -0.410691, -0.188619],
        [ 0.388037,  0.103664,  0.359144,  0.003939],
        [-0.053915, -0.106216, -0.078818, -0.280728],...
 y: array([[[-0.372865,  0.141097, -0.307148, -0.147056],
        [ 0.362364,  0.067467,  0.34086 , -0.039794],
        [-0.076093, -0.098745, -0.106164, -0.274615],...
2025-05-15 02:00:36.065420 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[-0.196157, -0.491718,  0.398806,  0.017244],
        [ 0.182745, -0.197342,  0.193634, -0.071033],
        [ 0.03528 ,  0.19552 , -0.014225, -0.092921],...
 y: array([[[-0.196157, -0.491718,  0.398806,  0.017244],
        [ 0.106436, -0.076559,  0.249673, -0.012695],
        [ 0.115455,  0.18821 , -0.310216, -0.255183],...
2025-05-15 02:00:36.233559 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.85272837
Max relative difference: 174.62068
 x: array([[[ 0.022313, -0.07338 ,  0.385511,  0.449479],
        [-0.313877,  0.396834,  0.090595,  0.145295],
        [-0.384042, -0.074176,  0.045784,  0.35369 ],...
 y: array([[[ 0.022313, -0.07338 ,  0.385511,  0.449479],
        [-0.313877,  0.396834,  0.090595,  0.145295],
        [-0.384042, -0.074176,  0.045784,  0.35369 ],...
2025-05-15 02:00:36.399098 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 72 (51.4%)
Max absolute difference: 0.10576183
Max relative difference: 12.574954
 x: array([[[-0.353393, -0.242265,  0.287347,  0.227421],
        [-0.372732,  0.281623, -0.319484, -0.089207],
        [-0.099962, -0.214156,  0.193438,  0.141072],...
 y: array([[[-0.353393, -0.242265,  0.287347,  0.227421],
        [-0.370379,  0.271062, -0.311861, -0.085892],
        [-0.084688, -0.191645,  0.196567,  0.143338],...
2025-05-15 02:00:36.549941 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 21 / 72 (29.2%)
Max absolute difference: 0.03906342
Max relative difference: 2.907567
 x: array([[[-0.034979, -0.387759, -0.111911, -0.187856],
        [ 0.10664 , -0.100908,  0.106491, -0.42612 ],
        [ 0.143094,  0.395768,  0.081788, -0.269208],...
 y: array([[[-0.026578, -0.375569, -0.098846, -0.201804],
        [ 0.103438, -0.078429,  0.100906, -0.421857],
        [ 0.154616,  0.398503,  0.092075, -0.26172 ],...
2025-05-15 02:00:36.725708 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.705135
Max relative difference: 57.374664
 x: array([[[ 0.443191, -0.073369, -0.106322, -0.186428],
        [-0.179436, -0.246452,  0.401418,  0.252721],
        [-0.385337, -0.148872, -0.244972,  0.314237],...
 y: array([[[ 0.443191, -0.073369, -0.106322, -0.186428],
        [-0.179436, -0.246452,  0.401418,  0.252721],
        [-0.385337, -0.148872, -0.244972,  0.314237],...
2025-05-15 02:00:36.899771 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[-0.265791,  0.074576, -0.27345 ,  0.237021],
        [ 0.023397,  0.1401  , -0.346278, -0.335871],
        [ 0.318635, -0.351432, -0.039689, -0.202746],...
 y: array([[[-0.265791,  0.074576, -0.27345 ,  0.237021],
        [ 0.023397,  0.1401  , -0.346278, -0.335871],
        [ 0.318635, -0.351432, -0.039689, -0.202746],...
2025-05-15 02:00:37.059728 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[ 0.373759, -0.183367, -0.145398, -0.084471],
        [-0.243516,  0.281011,  0.473512, -0.275382],
        [ 0.125543, -0.188697,  0.372723,  0.1187  ],...
 y: array([[[ 0.373759, -0.183367, -0.145398, -0.084471],
        [-0.197383,  0.222297,  0.460913, -0.226121],
        [ 0.029721, -0.059408,  0.350337,  0.133711],...
2025-05-15 02:00:37.231949 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[ 0.47175 , -0.311707, -0.107952, -0.355343],
        [-0.457186, -0.157771, -0.338237, -0.259624],
        [-0.384535,  0.17821 ,  0.329161, -0.372064],...
 y: array([[[ 0.47175 , -0.311707, -0.107952, -0.355343],
        [-0.457186, -0.157771, -0.338237, -0.259624],
        [-0.384535,  0.17821 ,  0.329161, -0.372064],...
2025-05-15 02:00:37.369210 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[ 0.079362, -0.160522,  0.198266, -0.071996],
        [-0.194041,  0.198635,  0.248024, -0.188641],
        [ 0.019333,  0.038954,  0.492992,  0.089813],...
 y: array([[[ 0.079362, -0.160522,  0.198266, -0.071996],
        [-0.167369,  0.178675,  0.278645, -0.153835],
        [ 0.122931, -0.027106,  0.312584,  0.144131],...
2025-05-15 02:00:37.546675 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[ 0.293919,  0.389376, -0.122305, -0.272057],
        [-0.185504,  0.308041,  0.339113,  0.008427],
        [ 0.288548, -0.234655, -0.23124 ,  0.045444],...
 y: array([[[ 0.293919,  0.389376, -0.122305, -0.272057],
        [-0.261203,  0.295199,  0.411968,  0.052714],
        [ 0.45024 , -0.390495, -0.420419,  0.043306],...
2025-05-15 02:00:37.689890 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[ 1.955222e-01,  1.713081e-01,  1.737315e-01, -3.092660e-01],
        [-1.051284e-01,  4.384670e-02, -2.760632e-01,  4.748154e-02],
        [-2.279005e-01, -2.154072e-01,  2.929403e-01, -2.920771e-01],...
 y: array([[[ 0.195522,  0.171308,  0.173732, -0.309266],
        [-0.135193,  0.031101, -0.321043,  0.083156],
        [-0.248502, -0.270187,  0.429381, -0.375462],...
2025-05-15 02:00:37.847538 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[-0.124852, -0.05544 ,  0.314271,  0.247303],
        [ 0.154169,  0.138675,  0.461299, -0.104168],
        [-0.243606,  0.03623 , -0.103611, -0.19382 ],...
 y: array([[[-0.124852, -0.05544 ,  0.314271,  0.247303],
        [ 0.185172,  0.160243,  0.477635, -0.143221],
        [-0.3508  ,  0.005227, -0.248923, -0.20647 ],...
2025-05-15 02:00:38.052208 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[ 3.967043e-01,  8.267745e-02,  3.576259e-02, -3.647532e-01],
        [-2.493029e-01, -2.090861e-02,  6.430637e-02, -2.609010e-01],
        [-9.388341e-02, -3.159098e-01, -2.292169e-02,  6.405891e-02],...
 y: array([[[ 0.396704,  0.082677,  0.035763, -0.364753],
        [-0.321082, -0.032418,  0.067478, -0.249362],
        [-0.037084, -0.386783, -0.045522,  0.142414],...
2025-05-15 02:00:38.472653 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[-0.108484, -0.303233, -0.194824, -0.337646],
        [ 0.087494,  0.290177,  0.237209,  0.19518 ],
        [-0.058671,  0.350609,  0.141935,  0.124159],...
 y: array([[[-0.108484, -0.303233, -0.194824, -0.337646],
        [ 0.087494,  0.290177,  0.237209,  0.19518 ],
        [-0.058671,  0.350609,  0.141935,  0.124159],...
2025-05-15 02:00:38.858358 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[ 0.136433, -0.146755,  0.369597,  0.142698],
        [-0.12823 ,  0.234637,  0.213879,  0.021413],
        [-0.12266 ,  0.300642,  0.090572, -0.091427],...
 y: array([[[ 0.136433, -0.146755,  0.369597,  0.142698],
        [-0.149404,  0.265149,  0.201421,  0.01171 ],
        [-0.110959,  0.298587,  0.072139, -0.109143],...
2025-05-15 02:00:39.013638 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[-0.365163, -0.266982,  0.028528,  0.047802],
        [ 0.269875, -0.178237, -0.050095, -0.052484],
        [ 0.269346, -0.336561, -0.17297 ,  0.11194 ],...
 y: array([[[-0.365163, -0.266982,  0.028528,  0.047802],
        [ 0.216955, -0.185632, -0.043543, -0.044127],
        [ 0.28115 , -0.321724, -0.164186,  0.096381],...
2025-05-15 02:00:39.188174 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[-0.291149,  0.368159, -0.013391,  0.33413 ],
        [-0.374571,  0.400773, -0.060617,  0.158236],
        [-0.363861,  0.068617,  0.017841, -0.021337],...
 y: array([[[-0.291149,  0.368159, -0.013391,  0.33413 ],
        [-0.382913,  0.404034, -0.06534 ,  0.140647],
        [-0.35634 , -0.018658,  0.040715, -0.057462],...
2025-05-15 02:00:39.338086 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[ 0.391138,  0.248894, -0.339335,  0.259261],
        [-0.117606, -0.114396,  0.173518,  0.090407],
        [-0.275906, -0.334803,  0.064726,  0.070772],...
 y: array([[[ 0.391138,  0.248894, -0.339335,  0.259261],
        [-0.117606, -0.114396,  0.173518,  0.090407],
        [-0.275906, -0.334803,  0.064726,  0.070772],...
2025-05-15 02:00:39.507466 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[-0.213375, -0.046719,  0.366094,  0.421524],
        [ 0.010991,  0.260484,  0.350343,  0.109251],
        [ 0.242873,  0.040047,  0.327459,  0.086512],...
 y: array([[[-0.213375, -0.046719,  0.366094,  0.421524],
        [ 0.025269,  0.280033,  0.34934 ,  0.08938 ],
        [ 0.272795, -0.016789,  0.324157,  0.099411],...
2025-05-15 02:00:39.672987 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[-0.151848,  0.42292 ,  0.042581,  0.224226],
        [-0.162878,  0.146968,  0.101274,  0.328386],
        [-0.008017,  0.101781, -0.095596,  0.394886],...
 y: array([[[-0.151848,  0.42292 ,  0.042581,  0.224226],
        [-0.161464,  0.182346,  0.093749,  0.315032],
        [-0.032408,  0.094581, -0.062298,  0.389996],...
2025-05-15 02:00:39.848021 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[ 0.081251,  0.262787, -0.066405,  0.434207],
        [-0.271434, -0.128618, -0.247011, -0.136798],
        [ 0.050749, -0.295836, -0.188863,  0.054039],...
 y: array([[[ 8.125085e-02,  2.627865e-01, -6.640469e-02,  4.342073e-01],
        [-3.034966e-01, -1.641998e-01, -2.634299e-01, -1.887081e-01],
        [ 1.706789e-01, -3.058583e-01, -1.565857e-01,  1.579957e-01],...
2025-05-15 02:00:40.015961 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.0848155
Max relative difference: 229.28508
 x: array([[[ 0.457131, -0.255224,  0.366202, -0.432177],
        [ 0.421984, -0.50781 ,  0.29771 , -0.320874],
        [-0.403787,  0.12603 ,  0.169234,  0.12553 ],...
 y: array([[[ 0.457131, -0.255224,  0.366202, -0.432177],
        [ 0.421984, -0.50781 ,  0.29771 , -0.320874],
        [-0.403787,  0.12603 ,  0.169234,  0.12553 ],...
2025-05-15 02:00:40.170379 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 66 / 112 (58.9%)
Max absolute difference: 0.22878483
Max relative difference: 4.589568
 x: array([[[-0.388675, -0.146697,  0.324372, -0.065523],
        [-0.338854,  0.202494,  0.031076, -0.339757],
        [ 0.004674,  0.084625, -0.155623, -0.371541],...
 y: array([[[-0.388675, -0.146697,  0.324372, -0.065523],
        [-0.340387,  0.19175 ,  0.0401  , -0.331319],
        [-0.028516,  0.11104 , -0.148508, -0.379532],...
2025-05-15 02:00:40.309267 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 55 / 112 (49.1%)
Max absolute difference: 0.11428723
Max relative difference: 5.0918045
 x: array([[[ 0.401085, -0.220754, -0.094577,  0.467804],
        [-0.214806, -0.365022,  0.123015, -0.18675 ],
        [-0.199007, -0.339616, -0.017379, -0.160095],...
 y: array([[[ 0.401085, -0.220754, -0.094577,  0.467804],
        [-0.10727 , -0.339832,  0.085023, -0.072463],
        [-0.273457, -0.362637,  0.04359 , -0.241756],...
2025-05-15 02:00:40.492650 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.9844702
Max relative difference: 617.3792
 x: array([[[ 0.509241,  0.060217, -0.209803,  0.179407],
        [ 0.284682, -0.356391, -0.049552, -0.175006],
        [ 0.29202 ,  0.025143, -0.597875, -0.099523],...
 y: array([[[ 5.092406e-01,  6.021705e-02, -2.098031e-01,  1.794073e-01],
        [ 2.846825e-01, -3.563913e-01, -4.955155e-02, -1.750056e-01],
        [ 2.920201e-01,  2.514257e-02, -5.978751e-01, -9.952298e-02],...
2025-05-15 02:00:40.672576 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[ 0.32556 ,  0.371206, -0.171172,  0.426949],
        [-0.012705,  0.288159, -0.327184,  0.231999],
        [-0.28363 ,  0.177771, -0.439328,  0.004451],...
 y: array([[[ 0.32556 ,  0.371206, -0.171172,  0.426949],
        [-0.012705,  0.288159, -0.327184,  0.231999],
        [-0.28363 ,  0.177771, -0.439328,  0.004451],...
2025-05-15 02:00:40.837707 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[-0.434498, -0.22782 , -0.036305,  0.295521],
        [ 0.112413, -0.269885,  0.23758 ,  0.327399],
        [ 0.407203, -0.323611,  0.178969,  0.23022 ],...
 y: array([[[-0.434498, -0.22782 , -0.036305,  0.295521],
        [ 0.133448, -0.271503,  0.248114,  0.328626],
        [ 0.410485, -0.328641,  0.148884,  0.212817],...
2025-05-15 02:00:41.003611 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[ 0.422788,  0.054452, -0.057634, -0.3798  ],
        [ 0.355644, -0.074774, -0.145037,  0.120164],
        [ 0.089279, -0.207489, -0.125172,  0.307939],...
 y: array([[[ 4.227885e-01,  5.445200e-02, -5.763391e-02, -3.798002e-01],
        [ 3.705651e-01, -4.605722e-02, -1.256140e-01,  9.060934e-03],
        [ 1.847215e-01, -1.821045e-01, -1.536813e-01,  3.454316e-01],...
2025-05-15 02:00:41.176898 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[-0.221682, -0.444056, -0.361081,  0.463338],
        [ 0.052703, -0.01944 , -0.293072,  0.382234],
        [ 0.278926,  0.27776 , -0.096767,  0.131472],...
 y: array([[[-0.221682, -0.444056, -0.361081,  0.463338],
        [ 0.073809,  0.013223, -0.287841,  0.375995],
        [ 0.304468,  0.29898 , -0.041894,  0.060267],...
2025-05-15 02:00:41.331723 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[-3.903050e-01,  1.528790e-01,  4.166154e-01, -1.238011e-01],
        [-3.652871e-01,  2.150148e-01,  3.280801e-01, -2.702240e-01],
        [-3.142556e-01,  2.621071e-01,  2.291526e-01, -4.351353e-01],...
 y: array([[[-3.903050e-01,  1.528790e-01,  4.166154e-01, -1.238011e-01],
        [-3.652871e-01,  2.150148e-01,  3.280801e-01, -2.702240e-01],
        [-3.142556e-01,  2.621071e-01,  2.291526e-01, -4.351353e-01],...
2025-05-15 02:00:41.505087 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[-0.026778, -0.184141,  0.484396, -0.131   ],
        [ 0.262326,  0.087227,  0.005843,  0.239435],
        [ 0.431139,  0.194356, -0.120159,  0.384613],...
 y: array([[[-0.026778, -0.184141,  0.484396, -0.131   ],
        [ 0.270586,  0.09498 , -0.00783 ,  0.250019],
        [ 0.430475,  0.1864  , -0.09714 ,  0.373602],...
2025-05-15 02:00:41.668917 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[ 0.391461,  0.077982, -0.337027, -0.33599 ],
        [ 0.334274,  0.204353, -0.010085, -0.3251  ],
        [ 0.201835,  0.283906,  0.092103, -0.344138],...
 y: array([[[ 0.391461,  0.077982, -0.337027, -0.33599 ],
        [ 0.349762,  0.170128, -0.098632, -0.328049],
        [ 0.266676,  0.287134,  0.171697, -0.326058],...
2025-05-15 02:00:41.831097 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[ 0.170353, -0.449744,  0.049043, -0.023158],
        [-0.137052, -0.04027 , -0.030485, -0.28258 ],
        [-0.209668,  0.147556, -0.082231, -0.42283 ],...
 y: array([[[ 0.170353, -0.449744,  0.049043, -0.023158],
        [-0.15901 , -0.011022, -0.036166, -0.30111 ],
        [-0.152958,  0.111061, -0.081686, -0.408817],...
2025-05-15 02:00:41.987842 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[-4.382071e-02, -4.812429e-02,  1.706246e-01, -1.531576e-01],
        [-1.270744e-01,  9.266642e-02,  2.945672e-01,  2.600093e-04],
        [-2.551571e-01,  3.092675e-01,  4.852482e-01,  2.362871e-01],...
 y: array([[[-4.382071e-02, -4.812429e-02,  1.706246e-01, -1.531576e-01],
        [-1.270745e-01,  9.266645e-02,  2.945673e-01,  2.600408e-04],
        [-2.551571e-01,  3.092676e-01,  4.852483e-01,  2.362871e-01],...
2025-05-15 02:00:42.161349 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[-0.160497, -0.453639, -0.235733,  0.18416 ],
        [-0.119363,  0.078888, -0.111232,  0.070443],
        [-0.063328,  0.341145, -0.023799,  0.031903],...
 y: array([[[-0.160497, -0.453639, -0.235733,  0.18416 ],
        [-0.118541,  0.089539, -0.108741,  0.068168],
        [-0.059696,  0.326409, -0.023761,  0.037379],...
2025-05-15 02:00:42.314364 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[-0.335553,  0.002387, -0.039171,  0.420676],
        [ 0.021663,  0.145454,  0.071339,  0.432927],
        [ 0.269369,  0.277283,  0.195971,  0.356475],...
 y: array([[[-0.335553,  0.002387, -0.039171,  0.420676],
        [-0.092739,  0.099635,  0.035947,  0.429003],
        [ 0.28082 ,  0.249248,  0.151513,  0.441815],...
2025-05-15 02:00:42.486327 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[-0.360249, -0.110081, -0.410514,  0.358611],
        [-0.04997 ,  0.061273, -0.12148 ,  0.4197  ],
        [ 0.211947,  0.22738 ,  0.065907,  0.43667 ],...
 y: array([[[-0.360249, -0.110081, -0.410514,  0.358611],
        [-0.029284,  0.072697, -0.102211,  0.423772],
        [ 0.2243  ,  0.247079,  0.043456,  0.418344],...
2025-05-15 02:00:42.651215 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.2436526
Max relative difference: 14.169227
 x: array([[[-0.293865,  0.687574, -0.449647,  0.14439 ],
        [ 0.081356, -0.464519, -0.018686, -0.099433],
        [ 0.247486,  0.115236, -0.664186, -0.099143],...
 y: array([[[-0.293865,  0.687574, -0.449647,  0.14439 ],
        [ 0.081356, -0.464519, -0.018686, -0.099433],
        [ 0.247486,  0.115236, -0.664186, -0.099143],...
2025-05-15 02:00:42.817125 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 105 / 144 (72.9%)
Max absolute difference: 0.26322308
Max relative difference: 19.591333
 x: array([[[ 0.036539, -0.310819,  0.036865, -0.017557],
        [-0.101212,  0.124456,  0.011001,  0.120511],
        [-0.134473,  0.415501,  0.023463,  0.181579],...
 y: array([[[ 0.036539, -0.310819,  0.036865, -0.017557],
        [-0.094729,  0.103972,  0.012218,  0.114014],
        [-0.17068 ,  0.442406,  0.007861,  0.20482 ],...
2025-05-15 02:00:42.971402 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 92 / 144 (63.9%)
Max absolute difference: 0.14281622
Max relative difference: 179.33412
 x: array([[[-0.408041,  0.278738, -0.188083, -0.449258],
        [-0.261001, -0.065921, -0.125252, -0.316384],
        [-0.10073 , -0.330522, -0.091751, -0.164859],...
 y: array([[[-4.080408e-01,  2.787375e-01, -1.880830e-01, -4.492577e-01],
        [-3.154605e-01,  6.173038e-02, -1.485229e-01, -3.655966e-01],
        [-1.611600e-01, -2.999481e-01, -8.258931e-02, -2.261614e-01],...
2025-05-15 02:00:43.152038 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.1652244
Max relative difference: 24.616657
 x: array([[[-3.795215e-01, -3.238509e-01,  3.499427e-01, -1.797118e-01],
        [-4.770038e-01, -3.647632e-01,  1.448230e-01, -2.915433e-01],
        [-3.559589e-01,  4.831488e-01, -6.116556e-02,  1.058800e-01],...
 y: array([[[-3.795215e-01, -3.238509e-01,  3.499427e-01, -1.797118e-01],
        [-4.770038e-01, -3.647632e-01,  1.448230e-01, -2.915433e-01],
        [-3.559589e-01,  4.831488e-01, -6.116556e-02,  1.058800e-01],...
2025-05-15 02:00:43.312012 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.0803952
Max relative difference: 167.13588
 x: array([[[ 0.677076,  0.27931 ,  0.258052, -0.64568 ],
        [ 0.472891, -0.001355,  0.158305, -0.359089],
        [-0.22194 ,  0.393133, -0.251754, -0.410722],...
 y: array([[[ 0.677076,  0.27931 ,  0.258052, -0.64568 ],
        [ 0.472891, -0.001355,  0.158305, -0.359089],
        [-0.22194 ,  0.393133, -0.251754, -0.410722],...
2025-05-15 02:00:43.486194 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 107 / 152 (70.4%)
Max absolute difference: 0.3559704
Max relative difference: 10.2323475
 x: array([[[ 3.859760e-01,  1.164693e-01,  1.833290e-01, -6.186482e-02],
        [ 1.871350e-03, -9.434213e-02, -3.515067e-02,  1.966808e-01],
        [-3.460999e-01, -2.577491e-01, -2.281200e-01,  3.960576e-01],...
 y: array([[[ 0.385976,  0.116469,  0.183329, -0.061865],
        [ 0.021077, -0.083802, -0.024227,  0.183754],
        [-0.343823, -0.284072, -0.231782,  0.429372],...
2025-05-15 02:00:43.656692 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 89 / 152 (58.6%)
Max absolute difference: 0.18428124
Max relative difference: 9.42017
 x: array([[[ 1.677979e-01, -3.860968e-01, -3.826224e-01, -9.883554e-02],
        [ 2.111662e-01, -1.283706e-01,  4.969257e-02, -2.949788e-01],
        [ 2.545345e-01,  1.293557e-01,  4.820075e-01, -4.911221e-01],...
 y: array([[[ 0.167798, -0.386097, -0.382622, -0.098836],
        [ 0.192906, -0.236887, -0.132335, -0.212392],
        [ 0.238557,  0.034404,  0.322734, -0.418859],...
2025-05-15 02:00:43.810956 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.0633962
Max relative difference: 9.124586
 x: array([[[ 0.242931,  0.266788, -0.053904,  0.079103],
        [ 0.39645 ,  0.25423 , -0.461874,  0.325938],
        [-0.091247, -0.50307 ,  0.280568, -0.026386],...
 y: array([[[ 0.242931,  0.266788, -0.053904,  0.079103],
        [ 0.39645 ,  0.25423 , -0.461874,  0.325938],
        [-0.091247, -0.50307 ,  0.280568, -0.026386],...
2025-05-15 02:00:43.985034 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[-0.239524, -0.169154, -0.415623,  0.007792],
        [-0.09455 , -0.014416, -0.382595,  0.087957],
        [ 0.1954  ,  0.295059, -0.316537,  0.248285],...
 y: array([[[-0.239524, -0.169154, -0.415623,  0.007792],
        [-0.09455 , -0.014416, -0.382595,  0.087957],
        [ 0.1954  ,  0.295059, -0.316537,  0.248285],...
2025-05-15 02:00:44.163320 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[ 0.250191,  0.092041, -0.190885,  0.418433],
        [-0.071419, -0.125018, -0.272951,  0.157456],
        [-0.39303 , -0.342077, -0.355018, -0.10352 ],...
 y: array([[[ 0.250191,  0.092041, -0.190885,  0.418433],
        [-0.071419, -0.125018, -0.272951,  0.157456],
        [-0.39303 , -0.342077, -0.355018, -0.10352 ],...
2025-05-15 02:00:44.334637 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[-0.150859, -0.282247,  0.324252, -0.188456],
        [-0.281235,  0.024025,  0.39264 , -0.032411],
        [-0.411611,  0.330297,  0.461028,  0.123635],...
 y: array([[[-0.150859, -0.282247,  0.324252, -0.188456],
        [-0.219669, -0.120604,  0.360345, -0.106099],
        [-0.357288,  0.202684,  0.432533,  0.058616],...
2025-05-15 02:00:44.506818 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[-0.173362,  0.456468, -0.258685, -0.124185],
        [-0.198861,  0.447536, -0.001159, -0.158368],
        [-0.22436 ,  0.438603,  0.256368, -0.19255 ],...
 y: array([[[-0.173362,  0.456468, -0.258685, -0.124185],
        [-0.200277,  0.44704 ,  0.013148, -0.160267],
        [-0.227193,  0.437611,  0.284982, -0.196348],...
2025-05-15 02:00:44.686400 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[-4.492877e-01,  4.843279e-01, -9.554238e-02, -4.885298e-01],
        [-4.099085e-01,  4.795650e-01, -8.330660e-02, -4.104153e-01],
        [-3.223991e-01,  4.689810e-01, -5.611598e-02, -2.368274e-01],...
 y: array([[[-4.492877e-01,  4.843279e-01, -9.554238e-02, -4.885298e-01],
        [-4.099085e-01,  4.795650e-01, -8.330660e-02, -4.104153e-01],
        [-3.223992e-01,  4.689810e-01, -5.611599e-02, -2.368274e-01],...
2025-05-15 02:00:44.860828 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[ 0.30343 , -0.13035 , -0.151851, -0.326035],
        [ 0.280834,  0.165016,  0.141013, -0.044156],
        [ 0.258239,  0.460382,  0.433877,  0.237724],...
 y: array([[[ 0.30343 , -0.13035 , -0.151851, -0.326035],
        [ 0.280953,  0.163462,  0.139471, -0.045639],
        [ 0.258476,  0.457273,  0.430794,  0.234757],...
2025-05-15 02:00:45.032106 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[ 4.756812e-01,  3.467167e-01,  2.290562e-01,  7.808007e-02],
        [ 1.500916e-01,  1.005834e-01,  1.306420e-01,  1.760110e-01],
        [-1.754979e-01, -1.455499e-01,  3.222790e-02,  2.739419e-01],...
 y: array([[[ 0.475681,  0.346717,  0.229056,  0.07808 ],
        [ 0.320639,  0.22951 ,  0.182192,  0.124714],
        [-0.023901, -0.030948,  0.07805 ,  0.228344],...
2025-05-15 02:00:45.203201 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[-0.371168, -0.423691,  0.485305,  0.117464],
        [-0.392413, -0.388411,  0.297698, -0.146037],
        [-0.413658, -0.353132,  0.11009 , -0.409537],...
 y: array([[[-3.711680e-01, -4.236908e-01,  4.853053e-01,  1.174637e-01],
        [-3.935312e-01, -3.865545e-01,  2.878234e-01, -1.599051e-01],
        [-4.158943e-01, -3.494182e-01,  9.034152e-02, -4.372739e-01],...
2025-05-15 02:00:45.356172 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[-0.21112 ,  0.492279, -0.113448, -0.347003],
        [-0.163739,  0.418598, -0.094426, -0.249194],
        [-0.045286,  0.234398, -0.046871, -0.00467 ],...
 y: array([[[-0.21112 ,  0.492279, -0.113448, -0.347003],
        [-0.163739,  0.418598, -0.094426, -0.249194],
        [-0.045286,  0.234398, -0.046871, -0.00467 ],...
2025-05-15 02:00:45.530248 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[-0.279274,  0.377894,  0.443466, -0.198891],
        [-0.357641,  0.084721,  0.253511, -0.089081],
        [-0.436007, -0.208452,  0.063556,  0.020728],...
 y: array([[[-0.279274,  0.377894,  0.443466, -0.198891],
        [-0.356857,  0.087653,  0.255411, -0.09018 ],
        [-0.43444 , -0.202588,  0.067355,  0.018532],...
2025-05-15 02:00:45.698143 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[-4.892674e-01,  3.266402e-01,  1.127463e-01, -1.665074e-01],
        [-1.096985e-01,  3.791621e-02,  1.299237e-01, -7.885899e-02],
        [ 2.698705e-01, -2.508077e-01,  1.471011e-01,  8.789430e-03],...
 y: array([[[-0.489267,  0.32664 ,  0.112746, -0.166507],
        [-0.328238,  0.204151,  0.120034, -0.129323],
        [ 0.074335, -0.102071,  0.138252, -0.036363],...
2025-05-15 02:00:45.864298 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[ 0.421669, -0.466692,  0.270477, -0.343501],
        [ 0.238749, -0.323691, -0.047277, -0.404114],
        [ 0.055828, -0.180691, -0.365031, -0.464726],...
 y: array([[[ 0.421669, -0.466692,  0.270477, -0.343501],
        [ 0.229603, -0.316541, -0.063165, -0.407144],
        [ 0.037536, -0.166391, -0.396807, -0.470788],...
2025-05-15 02:00:46.018059 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.2838482
Max relative difference: 1729.7733
 x: array([[[ 0.295538, -0.250997, -0.330545,  0.611916],
        [ 0.453234,  0.291297, -0.448935,  0.128526],
        [ 0.108752,  0.030803,  0.514142, -0.085764],...
 y: array([[[ 2.955378e-01, -2.509974e-01, -3.305452e-01,  6.119164e-01],
        [ 4.532337e-01,  2.912973e-01, -4.489349e-01,  1.285263e-01],
        [ 1.087521e-01,  3.080296e-02,  5.141422e-01, -8.576375e-02],...
2025-05-15 02:00:46.158818 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 139 / 184 (75.5%)
Max absolute difference: 0.43370438
Max relative difference: 108.97993
 x: array([[[-0.045654, -0.361654, -0.335689,  0.298696],
        [ 0.138612, -0.162046, -0.228323,  0.223991],
        [ 0.322878,  0.037562, -0.120958,  0.149286],...
 y: array([[[-0.045654, -0.361654, -0.335689,  0.298696],
        [ 0.127723, -0.173841, -0.234668,  0.228406],
        [ 0.301101,  0.013972, -0.133647,  0.158115],...
2025-05-15 02:00:46.298481 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 115 / 184 (62.5%)
Max absolute difference: 0.18703367
Max relative difference: 47.803677
 x: array([[[ 0.40793 ,  0.493299,  0.467962, -0.346146],
        [ 0.439242,  0.471606,  0.397684, -0.048331],
        [ 0.470554,  0.449913,  0.327405,  0.249484],...
 y: array([[[ 4.079301e-01,  4.932989e-01,  4.679624e-01, -3.461461e-01],
        [ 4.195775e-01,  4.852294e-01,  4.418201e-01, -2.353646e-01],
        [ 4.528556e-01,  4.621739e-01,  3.671277e-01,  8.115391e-02],...
2025-05-15 02:00:46.473528 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.1644791
Max relative difference: 30.321697
 x: array([[[ 0.263817,  0.163331, -0.181165,  0.111695],
        [ 0.045642,  0.370178,  0.501411,  0.167783],
        [ 0.269857,  0.023447, -0.391018,  0.133911],...
 y: array([[[ 0.263817,  0.163331, -0.181165,  0.111695],
        [ 0.045642,  0.370178,  0.501411,  0.167783],
        [ 0.269857,  0.023447, -0.391018,  0.133911],...
2025-05-15 02:00:46.637232 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-3.067649e-01, -9.786365e-02, -7.357032e-02,  4.063972e-01],
        [-3.249691e-01, -6.475612e-02, -4.499669e-03,  3.459846e-01],
        [-3.856496e-01,  4.560231e-02,  2.257358e-01,  1.446094e-01],...
 y: array([[[-3.067649e-01, -9.786365e-02, -7.357032e-02,  4.063972e-01],
        [-3.249691e-01, -6.475612e-02, -4.499669e-03,  3.459846e-01],
        [-3.856496e-01,  4.560231e-02,  2.257358e-01,  1.446094e-01],...
2025-05-15 02:00:46.808186 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[ 1.631882e-01,  4.687715e-01, -4.191490e-01, -1.697287e-01],
        [ 2.169620e-01,  2.800134e-01, -2.812208e-01,  4.106951e-02],
        [ 2.707358e-01,  9.125519e-02, -1.432926e-01,  2.518677e-01],...
 y: array([[[ 0.163188,  0.468772, -0.419149, -0.169729],
        [ 0.215984,  0.283445, -0.283729,  0.037237],
        [ 0.26878 ,  0.098119, -0.148308,  0.244202],...
2025-05-15 02:00:46.979122 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-0.257617, -0.034447, -0.254136, -0.237245],
        [-0.213454, -0.204289, -0.045508,  0.034195],
        [-0.169292, -0.374131,  0.163121,  0.305635],...
 y: array([[[-0.257617, -0.034447, -0.254136, -0.237245],
        [-0.243509, -0.088702, -0.187491, -0.150535],
        [-0.196484, -0.269552,  0.03466 ,  0.138498],...
2025-05-15 02:00:47.128364 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-0.160581, -0.086354,  0.472471, -0.1578  ],
        [-0.05857 , -0.190028,  0.425615, -0.169791],
        [ 0.043442, -0.293702,  0.378759, -0.181783],...
 y: array([[[-0.160581, -0.086354,  0.472471, -0.1578  ],
        [-0.053933, -0.19474 ,  0.423485, -0.170337],
        [ 0.052715, -0.303127,  0.374499, -0.182873],...
2025-05-15 02:00:47.266920 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[-4.909512e-01, -4.462946e-01, -3.711668e-01, -6.788570e-02],
        [-4.349585e-01, -3.833342e-01, -3.442463e-01, -4.775590e-02],
        [-2.109879e-01, -1.314931e-01, -2.365643e-01,  3.276328e-02],...
 y: array([[[-4.909512e-01, -4.462946e-01, -3.711668e-01, -6.788570e-02],
        [-4.349585e-01, -3.833342e-01, -3.442463e-01, -4.775590e-02],
        [-2.109879e-01, -1.314931e-01, -2.365643e-01,  3.276328e-02],...
2025-05-15 02:00:47.404644 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[ 0.1155  ,  0.094172, -0.281311,  0.366307],
        [-0.015481, -0.060951, -0.238683,  0.061012],
        [-0.146462, -0.216073, -0.196054, -0.244282],...
 y: array([[[ 1.154996e-01,  9.417211e-02, -2.813108e-01,  3.663068e-01],
        [-1.263366e-02, -5.757841e-02, -2.396092e-01,  6.764922e-02],
        [-1.407669e-01, -2.093289e-01, -1.979076e-01, -2.310084e-01],...
2025-05-15 02:00:47.546894 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[-0.079689, -0.034841, -0.054551, -0.33994 ],
        [-0.075505,  0.126025,  0.050087, -0.135661],
        [-0.071322,  0.286891,  0.154725,  0.068619],...
 y: array([[[-0.079689, -0.034841, -0.054551, -0.33994 ],
        [-0.078573,  0.008057, -0.026647, -0.285465],
        [-0.074111,  0.179647,  0.084966, -0.067567],...
2025-05-15 02:00:47.695308 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[-0.004301,  0.229977,  0.385508, -0.471639],
        [ 0.034465, -0.021336,  0.23233 , -0.118872],
        [ 0.07323 , -0.272648,  0.079152,  0.233896],...
 y: array([[[-0.004301,  0.229977,  0.385508, -0.471639],
        [ 0.03615 , -0.032262,  0.22567 , -0.103534],
        [ 0.076601, -0.294502,  0.065833,  0.264571],...
2025-05-15 02:00:47.868866 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[ 0.138371, -0.493182,  0.1889  ,  0.194137],
        [ 0.142688, -0.472225,  0.13934 ,  0.198611],
        [ 0.164271, -0.36744 , -0.108457,  0.220983],...
 y: array([[[ 0.138371, -0.493182,  0.1889  ,  0.194137],
        [ 0.142688, -0.472225,  0.13934 ,  0.198611],
        [ 0.164271, -0.36744 , -0.108457,  0.220983],...
2025-05-15 02:00:48.036499 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[-0.293075, -0.149844,  0.464009,  0.091695],
        [-0.142262, -0.151483,  0.158484,  0.213242],
        [ 0.008551, -0.153121, -0.147041,  0.334789],...
 y: array([[[-0.293075, -0.149844,  0.464009,  0.091695],
        [-0.146032, -0.151442,  0.166122,  0.210204],
        [ 0.001011, -0.153039, -0.131765,  0.328712],...
2025-05-15 02:00:48.192041 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[-0.303591, -0.147652,  0.198419, -0.326402],
        [-0.028982, -0.193415,  0.029843, -0.227569],
        [ 0.245627, -0.239177, -0.138734, -0.128735],...
 y: array([[[-0.303591, -0.147652,  0.198419, -0.326402],
        [-0.244914, -0.15743 ,  0.162399, -0.305284],
        [ 0.048472, -0.206322, -0.017705, -0.199692],...
2025-05-15 02:00:48.330230 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[-0.412675, -0.067224, -0.236236, -0.121934],
        [-0.288164,  0.007704, -0.215524, -0.084044],
        [-0.163652,  0.082631, -0.194811, -0.046153],...
 y: array([[[-0.412675, -0.067224, -0.236236, -0.121934],
        [-0.282976,  0.010826, -0.214661, -0.082465],
        [-0.153276,  0.088875, -0.193085, -0.042996],...
2025-05-15 02:00:48.508505 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[-4.414053e-01, -4.646243e-01, -3.361443e-01,  4.556194e-02],
        [-4.006296e-01, -4.286289e-01, -3.283786e-01,  6.209709e-02],
        [-1.287912e-01, -1.886593e-01, -2.766073e-01,  1.723315e-01],...
 y: array([[[-4.414053e-01, -4.646243e-01, -3.361443e-01,  4.556194e-02],
        [-4.006296e-01, -4.286289e-01, -3.283786e-01,  6.209709e-02],
        [-1.287912e-01, -1.886593e-01, -2.766073e-01,  1.723315e-01],...
2025-05-15 02:00:48.684810 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[ 0.138814, -0.250744,  0.462188, -0.392687],
        [-0.02657 , -0.294673,  0.232635, -0.077487],
        [-0.191954, -0.338602,  0.003083,  0.237713],...
 y: array([[[ 0.138814, -0.250744,  0.462188, -0.392687],
        [-0.021939, -0.293443,  0.239063, -0.086313],
        [-0.182692, -0.336141,  0.015938,  0.220062],...
2025-05-15 02:00:48.859773 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[-3.648148e-02,  3.962944e-01,  1.338206e-01,  3.596654e-01],
        [ 2.647608e-03,  2.026444e-01,  8.378343e-02,  2.903346e-01],
        [ 4.177670e-02,  8.994347e-03,  3.374623e-02,  2.210037e-01],...
 y: array([[[-0.036481,  0.396294,  0.133821,  0.359665],
        [-0.030202,  0.365215,  0.12579 ,  0.348538],
        [ 0.011665,  0.158017,  0.072252,  0.274357],...
2025-05-15 02:00:49.014858 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[-0.119197, -0.233358, -0.011395, -0.090322],
        [ 0.036278,  0.008796,  0.087251,  0.004508],
        [ 0.191753,  0.25095 ,  0.185897,  0.099338],...
 y: array([[[-0.119197, -0.233358, -0.011395, -0.090322],
        [ 0.042497,  0.018482,  0.091197,  0.008301],
        [ 0.204191,  0.270322,  0.193789,  0.106924],...
2025-05-15 02:00:49.193198 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[-3.819831e-01,  1.062233e-01, -1.772702e-01,  4.318172e-01],
        [-3.861961e-01,  8.514648e-02, -1.667954e-01,  4.224471e-01],
        [-4.283260e-01, -1.256221e-01, -6.204698e-02,  3.287468e-01],...
 y: array([[[-3.819831e-01,  1.062233e-01, -1.772702e-01,  4.318172e-01],
        [-3.861961e-01,  8.514648e-02, -1.667954e-01,  4.224471e-01],
        [-4.283260e-01, -1.256221e-01, -6.204698e-02,  3.287468e-01],...
2025-05-15 02:00:49.347294 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[ 0.105644,  0.483085, -0.109617, -0.148151],
        [ 0.200542,  0.270511, -0.176063, -0.104928],
        [ 0.295441,  0.057937, -0.242509, -0.061705],...
 y: array([[[ 0.105644,  0.483085, -0.109617, -0.148151],
        [ 0.197622,  0.277052, -0.174019, -0.106258],
        [ 0.289601,  0.071018, -0.23842 , -0.064364],...
2025-05-15 02:00:49.467572 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[ 0.143132, -0.044709, -0.06076 ,  0.445478],
        [-0.027737, -0.165167,  0.088737,  0.415599],
        [-0.198606, -0.285625,  0.238233,  0.38572 ],...
 y: array([[[ 0.143132, -0.044709, -0.06076 ,  0.445478],
        [ 0.124825, -0.057615, -0.044743,  0.442277],
        [-0.058249, -0.186677,  0.115433,  0.410264],...
2025-05-15 02:00:49.607763 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[-0.060441, -0.32036 , -0.071956,  0.113974],
        [-0.159087, -0.120539, -0.119001,  0.128408],
        [-0.257733,  0.079283, -0.166046,  0.142842],...
 y: array([[[-6.044118e-02, -3.203605e-01, -7.195596e-02,  1.139740e-01],
        [-1.628813e-01, -1.128533e-01, -1.208101e-01,  1.289629e-01],
        [-2.653214e-01,  9.465389e-02, -1.696643e-01,  1.439518e-01],...
2025-05-15 02:00:49.782392 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[ 0.396046, -0.329305, -0.058774, -0.473051],
        [ 0.397   , -0.325292, -0.050114, -0.470286],
        [ 0.416076, -0.24502 ,  0.123082, -0.414983],...
 y: array([[[ 0.396046, -0.329305, -0.058774, -0.473051],
        [ 0.397   , -0.325292, -0.050114, -0.470286],
        [ 0.416076, -0.24502 ,  0.123082, -0.414983],...
2025-05-15 02:00:49.953142 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-2.509207e-01, -3.689797e-01,  4.568383e-01,  3.407476e-01],
        [-2.416521e-01, -1.559801e-01,  3.331416e-01,  3.098461e-01],
        [-2.323836e-01,  5.701964e-02,  2.094449e-01,  2.789446e-01],...
 y: array([[[-0.250921, -0.36898 ,  0.456838,  0.340748],
        [-0.241961, -0.16308 ,  0.337265,  0.310876],
        [-0.233001,  0.04282 ,  0.217691,  0.281005],...
2025-05-15 02:00:50.118765 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-4.250928e-01, -4.505178e-01,  3.980843e-01,  4.009205e-01],
        [-1.962371e-01, -4.352807e-01,  2.272362e-01,  2.870678e-01],
        [ 3.261867e-02, -4.200436e-01,  5.638804e-02,  1.732151e-01],...
 y: array([[[-0.425093, -0.450518,  0.398084,  0.40092 ],
        [-0.412817, -0.449701,  0.38892 ,  0.394813],
        [-0.167301, -0.433354,  0.205635,  0.272673],...
2025-05-15 02:00:50.296034 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-3.055395e-01, -2.235478e-01, -2.533817e-01,  1.440182e-01],
        [-3.006988e-01, -2.407875e-01, -3.053390e-01,  1.414078e-01],
        [-2.958581e-01, -2.580272e-01, -3.572964e-01,  1.387974e-01],...
 y: array([[[-0.305539, -0.223548, -0.253382,  0.144018],
        [-0.300519, -0.241426, -0.307263,  0.141311],
        [-0.295499, -0.259304, -0.361145,  0.138604],...
2025-05-15 02:00:50.465420 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[ 0.364151,  0.083172,  0.434422, -0.41093 ],
        [ 0.364151,  0.083172,  0.434422, -0.41093 ],
        [ 0.387009,  0.107093,  0.372404, -0.2202  ],...
 y: array([[[ 0.364151,  0.083172,  0.434422, -0.41093 ],
        [ 0.364151,  0.083172,  0.434422, -0.41093 ],
        [ 0.387009,  0.107093,  0.372404, -0.2202  ],...
2025-05-15 02:00:50.642053 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[-0.298162,  0.29373 , -0.223439, -0.183488],
        [-0.163569,  0.100857, -0.154111,  0.012858],
        [-0.028977, -0.092015, -0.084782,  0.209204],...
 y: array([[[-0.298162,  0.29373 , -0.223439, -0.183488],
        [-0.168376,  0.107746, -0.156587,  0.005845],
        [-0.038591, -0.078238, -0.089734,  0.195179],...
2025-05-15 02:00:50.796754 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[-0.0838  , -0.251668,  0.406476, -0.241367],
        [-0.008893, -0.224811,  0.201991, -0.080965],
        [ 0.066013, -0.197953, -0.002494,  0.079437],...
 y: array([[[-0.0838  , -0.251668,  0.406476, -0.241367],
        [-0.0838  , -0.251668,  0.406476, -0.241367],
        [-0.003345, -0.222821,  0.186844, -0.069083],...
2025-05-15 02:00:50.938164 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[-0.365712,  0.041362, -0.313021, -0.268385],
        [-0.103952,  0.102974, -0.143107, -0.287262],
        [ 0.157808,  0.164587,  0.026808, -0.30614 ],...
 y: array([[[-3.657125e-01,  4.136157e-02, -3.130209e-01, -2.683851e-01],
        [-9.460352e-02,  1.051749e-01, -1.370383e-01, -2.879367e-01],
        [ 1.765054e-01,  1.689883e-01,  3.894434e-02, -3.074883e-01],...
2025-05-15 02:00:51.092180 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[ 0.419532, -0.181944, -0.337696, -0.072985],
        [ 0.419532, -0.181944, -0.337696, -0.072985],
        [ 0.271019, -0.204108, -0.374605, -0.035743],...
 y: array([[[ 0.419532, -0.181944, -0.337696, -0.072985],
        [ 0.419532, -0.181944, -0.337696, -0.072985],
        [ 0.27102 , -0.204108, -0.374605, -0.035743],...
2025-05-15 02:00:51.232040 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[ 0.447147, -0.328505,  0.394   , -0.441715],
        [ 0.323604, -0.227919,  0.165369, -0.277244],
        [ 0.20006 , -0.127333, -0.063262, -0.112774],...
 y: array([[[ 0.447147, -0.328505,  0.394   , -0.441715],
        [ 0.32829 , -0.231734,  0.174041, -0.283483],
        [ 0.209432, -0.134963, -0.045918, -0.125251],...
2025-05-15 02:00:51.403628 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[-0.342017, -0.149497,  0.432113,  0.458394],
        [-0.275324, -0.103242,  0.343276,  0.397067],
        [-0.208632, -0.056987,  0.25444 ,  0.335739],...
 y: array([[[-0.342017, -0.149497,  0.432113,  0.458394],
        [-0.342017, -0.149497,  0.432113,  0.458394],
        [-0.27389 , -0.102247,  0.341366,  0.395748],...
2025-05-15 02:00:51.559818 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[-0.441229,  0.042663,  0.229076,  0.370705],
        [-0.161965,  0.011129,  0.215702,  0.252022],
        [ 0.117298, -0.020405,  0.202328,  0.133338],...
 y: array([[[-0.441229,  0.042663,  0.229076,  0.370705],
        [-0.152336,  0.010042,  0.215241,  0.247929],
        [ 0.136558, -0.022579,  0.201406,  0.125153],...
2025-05-15 02:00:51.699254 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[-0.194672,  0.08138 , -0.055971,  0.395371],
        [-0.194672,  0.08138 , -0.055971,  0.395371],
        [-0.048839, -0.056924,  0.045604,  0.270536],...
 y: array([[[-0.194672,  0.08138 , -0.055971,  0.395371],
        [-0.194672,  0.08138 , -0.055971,  0.395371],
        [-0.048839, -0.056924,  0.045604,  0.270536],...
2025-05-15 02:00:51.837831 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[ 2.563447e-01,  7.620466e-02, -2.575178e-01,  2.635765e-01],
        [ 2.667111e-01, -5.990393e-02, -7.950716e-02,  3.987084e-02],
        [ 2.770776e-01, -1.960125e-01,  9.850352e-02, -1.838348e-01],...
 y: array([[[ 0.256345,  0.076205, -0.257518,  0.263576],
        [ 0.266296, -0.05446 , -0.086628,  0.048819],
        [ 0.276248, -0.185124,  0.084263, -0.165938],...
2025-05-15 02:00:51.978084 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[ 3.336743e-01,  4.375506e-02, -1.679506e-01, -7.432160e-03],
        [ 1.139291e-01, -1.534764e-04, -7.199094e-02,  1.388219e-01],
        [-1.058162e-01, -4.406201e-02,  2.396872e-02,  2.850760e-01],...
 y: array([[[ 0.333674,  0.043755, -0.167951, -0.007432],
        [ 0.333674,  0.043755, -0.167951, -0.007432],
        [ 0.120796,  0.001219, -0.07499 ,  0.134251],...
2025-05-15 02:00:52.156302 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[-0.067998,  0.017989, -0.216805,  0.189432],
        [ 0.080977, -0.085199, -0.091761,  0.174573],
        [ 0.229952, -0.188387,  0.033283,  0.159713],...
 y: array([[[-0.067998,  0.017989, -0.216805,  0.189432],
        [ 0.085943, -0.088639, -0.087593,  0.174077],
        [ 0.239884, -0.195267,  0.041619,  0.158722],...
2025-05-15 02:00:52.311731 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[ 0.478988,  0.123045,  0.420082, -0.408356],
        [ 0.478988,  0.123045,  0.420082, -0.408356],
        [ 0.268172,  0.044255,  0.195519, -0.372576],...
 y: array([[[ 0.478988,  0.123045,  0.420082, -0.408356],
        [ 0.478988,  0.123045,  0.420082, -0.408356],
        [ 0.268172,  0.044255,  0.195519, -0.372576],...
2025-05-15 02:00:52.451755 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[-4.415435e-01, -1.467203e-04, -2.316003e-01,  4.382625e-01],
        [-4.222489e-01, -2.473373e-02, -7.364441e-02,  2.060736e-01],
        [-4.029542e-01, -4.932075e-02,  8.431145e-02, -2.611534e-02],...
 y: array([[[-4.415435e-01, -1.467203e-04, -2.316003e-01,  4.382625e-01],
        [-4.230580e-01, -2.370266e-02, -8.026838e-02,  2.158106e-01],
        [-4.045725e-01, -4.725860e-02,  7.106352e-02, -6.641408e-03],...
2025-05-15 02:00:52.595461 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[ 0.310008, -0.44839 ,  0.39973 , -0.456334],
        [ 0.10439 , -0.461363,  0.241919, -0.359064],
        [-0.101228, -0.474337,  0.084108, -0.261794],...
 y: array([[[ 3.100079e-01, -4.483901e-01,  3.997304e-01, -4.563342e-01],
        [ 3.100079e-01, -4.483901e-01,  3.997304e-01, -4.563342e-01],
        [ 1.216978e-01, -4.602713e-01,  2.552030e-01, -3.672518e-01],...
2025-05-15 02:00:52.772232 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[-0.139742,  0.382987, -0.319817,  0.417879],
        [-0.027691,  0.154454, -0.313639,  0.368189],
        [ 0.084359, -0.074078, -0.30746 ,  0.3185  ],...
 y: array([[[-1.397421e-01,  3.829872e-01, -3.198173e-01,  4.178793e-01],
        [-2.407697e-02,  1.470824e-01, -3.134394e-01,  3.665865e-01],
        [ 9.158816e-02, -8.882252e-02, -3.070614e-01,  3.152937e-01],...
2025-05-15 02:00:52.918695 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[ 1.994779e-01,  2.672821e-01,  4.409345e-01,  3.853625e-01],
        [ 1.994779e-01,  2.672821e-01,  4.409345e-01,  3.853625e-01],
        [ 4.297948e-02,  2.472037e-01,  3.045461e-01,  2.118996e-01],...
 y: array([[[ 1.994779e-01,  2.672821e-01,  4.409345e-01,  3.853625e-01],
        [ 1.994779e-01,  2.672821e-01,  4.409345e-01,  3.853625e-01],
        [ 4.297943e-02,  2.472037e-01,  3.045461e-01,  2.118996e-01],...
2025-05-15 02:00:53.096847 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[-2.575764e-01, -4.531222e-01,  4.099781e-01, -7.644159e-02],
        [-2.383472e-01, -2.769321e-01,  1.941943e-01,  1.768953e-02],
        [-2.191180e-01, -1.007420e-01, -2.158942e-02,  1.118206e-01],...
 y: array([[[-0.257576, -0.453122,  0.409978, -0.076442],
        [-0.239188, -0.28464 ,  0.203635,  0.013571],
        [-0.220801, -0.116159, -0.002708,  0.103584],...
2025-05-15 02:00:53.249456 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[ 0.296462,  0.003967,  0.002425,  0.260159],
        [ 0.192747,  0.007556, -0.005062,  0.087726],
        [ 0.089031,  0.011144, -0.012548, -0.084707],...
 y: array([[[ 2.964625e-01,  3.966971e-03,  2.424989e-03,  2.601588e-01],
        [ 2.964625e-01,  3.966971e-03,  2.424989e-03,  2.601588e-01],
        [ 2.069821e-01,  7.063135e-03, -4.034001e-03,  1.113930e-01],...
2025-05-15 02:00:53.392573 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[-0.491987, -0.469409, -0.053864, -0.480474],
        [-0.249024, -0.444296, -0.119766, -0.242559],
        [-0.00606 , -0.419183, -0.185668, -0.004644],...
 y: array([[[-0.491987, -0.469409, -0.053864, -0.480474],
        [-0.241431, -0.443511, -0.121826, -0.235124],
        [ 0.009125, -0.417613, -0.189787,  0.010225],...
2025-05-15 02:00:53.533624 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[ 0.02728 ,  0.3153  ,  0.089873, -0.463707],
        [ 0.02728 ,  0.3153  ,  0.089873, -0.463707],
        [ 0.11939 ,  0.1549  ,  0.076824, -0.419776],...
 y: array([[[ 0.02728 ,  0.3153  ,  0.089873, -0.463707],
        [ 0.02728 ,  0.3153  ,  0.089873, -0.463707],
        [ 0.11939 ,  0.1549  ,  0.076824, -0.419776],...
2025-05-15 02:00:53.676225 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[-0.209153, -0.355955,  0.141767,  0.449619],
        [-0.260592, -0.12979 ,  0.157104,  0.259942],
        [-0.312031,  0.096375,  0.172441,  0.070264],...
 y: array([[[-0.209153, -0.355955,  0.141767,  0.449619],
        [-0.258254, -0.14007 ,  0.156407,  0.268563],
        [-0.307354,  0.075815,  0.171047,  0.087507],...
2025-05-15 02:00:53.816153 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[ 3.443642e-02,  1.856950e-01,  1.822649e-01, -2.607512e-01],
        [ 6.923473e-02,  1.948408e-01,  9.045342e-02, -8.388750e-02],
        [ 1.040330e-01,  2.039867e-01, -1.358047e-03,  9.297625e-02],...
 y: array([[[ 3.443642e-02,  1.856950e-01,  1.822649e-01, -2.607512e-01],
        [ 3.443642e-02,  1.856950e-01,  1.822649e-01, -2.607512e-01],
        [ 6.260648e-02,  1.930988e-01,  1.079413e-01, -1.175758e-01],...
2025-05-15 02:00:53.992438 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[-0.271163, -0.333082, -0.339452,  0.273059],
        [-0.296341, -0.240965, -0.147551,  0.105082],
        [-0.321519, -0.148849,  0.044349, -0.062894],...
 y: array([[[-0.271163, -0.333082, -0.339452,  0.273059],
        [-0.297104, -0.238174, -0.141736,  0.099992],
        [-0.323044, -0.143266,  0.055979, -0.073074],...
2025-05-15 02:00:54.174192 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[ 0.409489,  0.245217, -0.294622, -0.321013],
        [ 0.409489,  0.245217, -0.294622, -0.321013],
        [ 0.375737,  0.103307, -0.180947, -0.181537],...
 y: array([[[ 0.409489,  0.245217, -0.294622, -0.321013],
        [ 0.409489,  0.245217, -0.294622, -0.321013],
        [ 0.375737,  0.103307, -0.180947, -0.181537],...
2025-05-15 02:00:54.330400 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[ 0.404574, -0.361517, -0.247892, -0.340532],
        [ 0.186597, -0.394596, -0.239335, -0.113456],
        [-0.03138 , -0.427676, -0.230779,  0.11362 ],...
 y: array([[[ 0.404574, -0.361517, -0.247892, -0.340532],
        [ 0.196855, -0.393039, -0.239738, -0.124142],
        [-0.010864, -0.424562, -0.231584,  0.092248],...
2025-05-15 02:00:54.472254 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[-0.135446, -0.167545, -0.141273,  0.002049],
        [-0.036905, -0.00822 , -0.079155, -0.091316],
        [ 0.061636,  0.151104, -0.017036, -0.184682],...
 y: array([[[-1.354458e-01, -1.675453e-01, -1.412730e-01,  2.049152e-03],
        [-1.354458e-01, -1.675453e-01, -1.412730e-01,  2.049152e-03],
        [-6.093198e-02, -4.706818e-02, -9.430087e-02, -6.855139e-02],...
2025-05-15 02:00:54.616685 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[ 0.261944,  0.063955,  0.26802 , -0.352203],
        [ 0.138799, -0.039861,  0.140711, -0.26614 ],
        [ 0.015654, -0.143677,  0.013401, -0.180078],...
 y: array([[[ 0.261944,  0.063955,  0.26802 , -0.352203],
        [ 0.135177, -0.042914,  0.136966, -0.263609],
        [ 0.00841 , -0.149784,  0.005912, -0.175015],...
2025-05-15 02:00:54.793448 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[-0.213949, -0.23889 ,  0.099975,  0.013093],
        [-0.213949, -0.23889 ,  0.099975,  0.013093],
        [-0.11297 , -0.18737 ,  0.11157 ,  0.028634],...
 y: array([[[-0.213949, -0.23889 ,  0.099975,  0.013093],
        [-0.213949, -0.23889 ,  0.099975,  0.013093],
        [-0.11297 , -0.18737 ,  0.11157 ,  0.028634],...
2025-05-15 02:00:54.948254 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[-1.759617e-02, -3.514197e-01,  5.858418e-03, -4.010729e-01],
        [-2.465820e-02, -3.813684e-01, -1.055425e-01, -1.875566e-01],
        [-3.172023e-02, -4.113170e-01, -2.169434e-01,  2.595969e-02],...
 y: array([[[-1.759617e-02, -3.514197e-01,  5.858418e-03, -4.010729e-01],
        [-2.431519e-02, -3.799137e-01, -1.001316e-01, -1.979273e-01],
        [-3.103420e-02, -4.084077e-01, -2.061216e-01,  5.218142e-03],...
2025-05-15 02:00:55.068907 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[ 1.785368e-01, -2.697449e-01,  4.557496e-01,  7.412948e-03],
        [ 9.842844e-02, -2.719185e-01,  2.936935e-01,  5.123015e-02],
        [ 1.832008e-02, -2.740922e-01,  1.316375e-01,  9.504735e-02],...
 y: array([[[ 1.785368e-01, -2.697449e-01,  4.557496e-01,  7.412948e-03],
        [ 1.785368e-01, -2.697449e-01,  4.557496e-01,  7.412948e-03],
        [ 1.222444e-01, -2.712723e-01,  3.418724e-01,  3.820341e-02],...
2025-05-15 02:00:55.210082 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[-0.129336, -0.179766,  0.433534, -0.265814],
        [-0.110951, -0.226444,  0.419808, -0.269829],
        [-0.092567, -0.273121,  0.406082, -0.273845],...
 y: array([[[-1.293358e-01, -1.797662e-01,  4.335341e-01, -2.658136e-01],
        [-1.104259e-01, -2.277774e-01,  4.194157e-01, -2.699438e-01],
        [-9.151600e-02, -2.757886e-01,  4.052974e-01, -2.740740e-01],...
2025-05-15 02:00:55.343408 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[-0.13814 ,  0.231455, -0.2838  , -0.073445],
        [-0.13814 ,  0.231455, -0.2838  , -0.073445],
        [-0.128007,  0.171679, -0.245689, -0.092682],...
 y: array([[[-0.13814 ,  0.231455, -0.2838  , -0.073445],
        [-0.13814 ,  0.231455, -0.2838  , -0.073445],
        [-0.128007,  0.171679, -0.245689, -0.092682],...
2025-05-15 02:00:55.484445 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[-7.894108e-02, -3.971239e-01, -3.014664e-01,  4.784901e-01],
        [-3.146474e-02, -2.770136e-01, -2.678724e-01,  3.918606e-01],
        [ 1.601160e-02, -1.569033e-01, -2.342784e-01,  3.052310e-01],...
 y: array([[[-0.078941, -0.397124, -0.301466,  0.47849 ],
        [-0.033839, -0.283019, -0.269552,  0.396192],
        [ 0.011264, -0.168914, -0.237638,  0.313894],...
2025-05-15 02:00:55.624245 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[-0.286369, -0.131882,  0.37807 ,  0.393348],
        [-0.300922, -0.098352,  0.225342,  0.321594],
        [-0.315476, -0.064822,  0.072614,  0.249839],...
 y: array([[[-0.286369, -0.131882,  0.37807 ,  0.393348],
        [-0.286369, -0.131882,  0.37807 ,  0.393348],
        [-0.295816, -0.110117,  0.278931,  0.34677 ],...
2025-05-15 02:00:55.799912 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[-0.022135, -0.150971, -0.031844, -0.067593],
        [-0.055663, -0.019414, -0.114204,  0.0255  ],
        [-0.08919 ,  0.112143, -0.196563,  0.118592],...
 y: array([[[-0.022135, -0.150971, -0.031844, -0.067593],
        [-0.056594, -0.01576 , -0.116491,  0.028086],
        [-0.091053,  0.119451, -0.201139,  0.123764],...
2025-05-15 02:00:55.966259 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[ 0.300875, -0.109357, -0.093489, -0.443188],
        [ 0.300875, -0.109357, -0.093489, -0.443188],
        [ 0.248164, -0.127136, -0.062076, -0.363924],...
 y: array([[[ 0.300875, -0.109357, -0.093489, -0.443188],
        [ 0.300875, -0.109357, -0.093489, -0.443188],
        [ 0.248164, -0.127136, -0.062076, -0.363924],...
2025-05-15 02:00:56.132658 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[ 9.946779e-02,  2.341603e-01,  8.299649e-03,  2.916570e-01],
        [-2.671751e-02,  1.001726e-01, -7.164814e-02,  1.333755e-01],
        [-1.529028e-01, -3.381501e-02, -1.515959e-01, -2.490588e-02],...
 y: array([[[ 0.099468,  0.23416 ,  0.0083  ,  0.291657],
        [-0.020238,  0.107053, -0.067543,  0.141504],
        [-0.139943, -0.020054, -0.143385, -0.00865 ],...
2025-05-15 02:00:56.303642 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[ 0.301589,  0.109378,  0.391487,  0.140382],
        [ 0.138238, -0.008449,  0.399945,  0.016025],
        [-0.025112, -0.126275,  0.408404, -0.108332],...
 y: array([[[ 3.015886e-01,  1.093781e-01,  3.914872e-01,  1.403818e-01],
        [ 3.015886e-01,  1.093781e-01,  3.914872e-01,  1.403818e-01],
        [ 2.043230e-01,  3.921910e-02,  3.965236e-01,  6.633440e-02],...
2025-05-15 02:00:56.473253 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[-0.4496  ,  0.340748,  0.224825,  0.462148],
        [-0.350012,  0.318003,  0.289858,  0.346952],
        [-0.250425,  0.295258,  0.354891,  0.231755],...
 y: array([[[-4.495996e-01,  3.407478e-01,  2.248247e-01,  4.621480e-01],
        [-3.473207e-01,  3.173883e-01,  2.916154e-01,  3.438382e-01],
        [-2.450417e-01,  2.940288e-01,  3.584061e-01,  2.255283e-01],...
2025-05-15 02:00:56.645226 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[ 8.546092e-02,  2.465393e-01,  3.631166e-01,  1.380689e-01],
        [ 8.546092e-02,  2.465393e-01,  3.631166e-01,  1.380689e-01],
        [ 3.868476e-02,  2.165660e-01,  2.679087e-01,  8.287522e-02],...
 y: array([[[ 8.546092e-02,  2.465393e-01,  3.631166e-01,  1.380689e-01],
        [ 8.546092e-02,  2.465393e-01,  3.631166e-01,  1.380689e-01],
        [ 3.868476e-02,  2.165660e-01,  2.679087e-01,  8.287522e-02],...
2025-05-15 02:00:56.814831 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[ 1.920383e-01, -3.887274e-01,  4.070399e-01,  2.042906e-01],
        [ 6.630532e-02, -3.885260e-01,  4.161498e-01,  2.699009e-01],
        [-5.942760e-02, -3.883246e-01,  4.252597e-01,  3.355111e-01],...
 y: array([[[ 0.192038, -0.388727,  0.40704 ,  0.204291],
        [ 0.072923, -0.388537,  0.41567 ,  0.266448],
        [-0.046193, -0.388346,  0.424301,  0.328605],...
2025-05-15 02:00:56.984210 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[-0.14253 , -0.148569, -0.069441, -0.175543],
        [-0.033228, -0.032225,  0.018935, -0.141025],
        [ 0.076075,  0.084119,  0.107312, -0.106508],...
 y: array([[[-0.14253 , -0.148569, -0.069441, -0.175543],
        [-0.14253 , -0.148569, -0.069441, -0.175543],
        [-0.083324, -0.085549, -0.021571, -0.156846],...
2025-05-15 02:00:57.151782 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[ 0.162878, -0.402857,  0.156214, -0.404487],
        [ 0.079204, -0.41707 ,  0.169284, -0.366723],
        [-0.00447 , -0.431284,  0.182354, -0.328959],...
 y: array([[[ 1.628778e-01, -4.028566e-01,  1.562136e-01, -4.044871e-01],
        [ 7.700180e-02, -4.174445e-01,  1.696276e-01, -3.657292e-01],
        [-8.874184e-03, -4.320323e-01,  1.830417e-01, -3.269712e-01],...
2025-05-15 02:00:57.322954 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[-0.256619, -0.230967, -0.382292,  0.432823],
        [-0.256619, -0.230967, -0.382292,  0.432823],
        [-0.184333, -0.227174, -0.341356,  0.406253],...
 y: array([[[-0.256619, -0.230967, -0.382292,  0.432823],
        [-0.256619, -0.230967, -0.382292,  0.432823],
        [-0.184333, -0.227174, -0.341356,  0.406253],...
2025-05-15 02:00:57.476166 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[-3.878767e-01, -7.875163e-02,  4.920429e-01, -4.128633e-01],
        [-2.872269e-01, -1.705401e-01,  3.647337e-01, -3.519443e-01],
        [-1.865771e-01, -2.623285e-01,  2.374246e-01, -2.910254e-01],...
 y: array([[[-3.878767e-01, -7.875163e-02,  4.920429e-01, -4.128633e-01],
        [-2.926466e-01, -1.655976e-01,  3.715889e-01, -3.552246e-01],
        [-1.974164e-01, -2.524436e-01,  2.511348e-01, -2.975859e-01],...
2025-05-15 02:00:57.616288 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[-0.429807, -0.120745, -0.128687, -0.104587],
        [-0.2682  , -0.148698, -0.188877, -0.009617],
        [-0.106593, -0.176651, -0.249068,  0.085353],...
 y: array([[[-4.298068e-01, -1.207454e-01, -1.286866e-01, -1.045872e-01],
        [-4.298068e-01, -1.207454e-01, -1.286866e-01, -1.045872e-01],
        [-3.509741e-01, -1.343808e-01, -1.580479e-01, -5.826031e-02],...
2025-05-15 02:00:57.775102 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[ 0.107573,  0.032147, -0.272495, -0.429736],
        [-0.016429,  0.102883, -0.222104, -0.303913],
        [-0.14043 ,  0.173619, -0.171713, -0.178089],...
 y: array([[[ 0.107573,  0.032147, -0.272495, -0.429736],
        [-0.019608,  0.104696, -0.220812, -0.300687],
        [-0.146789,  0.177246, -0.169128, -0.171637],...
2025-05-15 02:00:57.957133 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[-0.422103, -0.106024, -0.465414,  0.439715],
        [-0.422103, -0.106024, -0.465414,  0.439715],
        [-0.421455, -0.096381, -0.382687,  0.390714],...
 y: array([[[-0.422103, -0.106024, -0.465414,  0.439715],
        [-0.422103, -0.106024, -0.465414,  0.439715],
        [-0.421455, -0.096381, -0.382687,  0.390714],...
2025-05-15 02:00:58.112414 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[-3.008450e-01, -1.063651e-01,  3.883320e-01,  1.305992e-01],
        [-2.464641e-01, -1.347195e-01,  2.146879e-01, -9.662236e-03],
        [-1.920832e-01, -1.630739e-01,  4.104390e-02, -1.499237e-01],...
 y: array([[[-3.008450e-01, -1.063651e-01,  3.883320e-01,  1.305992e-01],
        [-2.494550e-01, -1.331600e-01,  2.242384e-01, -1.947843e-03],
        [-1.980651e-01, -1.599550e-01,  6.014479e-02, -1.344949e-01],...
2025-05-15 02:00:58.288686 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[ 0.40354 ,  0.331885, -0.091816, -0.331639],
        [ 0.329673,  0.317922, -0.162947, -0.160341],
        [ 0.255806,  0.303959, -0.234079,  0.010957],...
 y: array([[[ 0.40354 ,  0.331885, -0.091816, -0.331639],
        [ 0.40354 ,  0.331885, -0.091816, -0.331639],
        [ 0.371492,  0.325827, -0.122677, -0.257319],...
2025-05-15 02:00:58.460541 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[-0.037936, -0.449957,  0.065336,  0.443466],
        [ 0.045047, -0.448449, -0.051815,  0.318173],
        [ 0.128031, -0.446941, -0.168966,  0.192881],...
 y: array([[[-3.793641e-02, -4.499575e-01,  6.533594e-02,  4.434658e-01],
        [ 4.712172e-02, -4.484113e-01, -5.474401e-02,  3.150410e-01],
        [ 1.321799e-01, -4.468652e-01, -1.748240e-01,  1.866161e-01],...
2025-05-15 02:00:58.637572 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-0.238029,  0.490548, -0.026221, -0.142058],
        [-0.238029,  0.490548, -0.026221, -0.142058],
        [-0.190523,  0.428242, -0.018524, -0.124678],...
 y: array([[[-0.238029,  0.490548, -0.026221, -0.142058],
        [-0.238029,  0.490548, -0.026221, -0.142058],
        [-0.190523,  0.428241, -0.018524, -0.124678],...
2025-05-15 02:00:58.807131 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-2.551899e-01,  5.673605e-02, -4.437987e-01,  2.817255e-01],
        [-1.965840e-01, -1.119994e-02, -4.339074e-01,  1.012442e-01],
        [-1.379781e-01, -7.913592e-02, -4.240162e-01, -7.923714e-02],...
 y: array([[[-2.551899e-01,  5.673605e-02, -4.437987e-01,  2.817255e-01],
        [-1.998716e-01, -7.388900e-03, -4.344623e-01,  1.113687e-01],
        [-1.445534e-01, -7.151385e-02, -4.251260e-01, -5.898802e-02],...
2025-05-15 02:00:58.983961 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-0.392184,  0.42041 ,  0.288987,  0.350643],
        [-0.23049 ,  0.317295,  0.159231,  0.170809],
        [-0.068795,  0.214181,  0.029476, -0.009025],...
 y: array([[[-3.921840e-01,  4.204096e-01,  2.889866e-01,  3.506426e-01],
        [-3.921840e-01,  4.204096e-01,  2.889866e-01,  3.506426e-01],
        [-3.307652e-01,  3.812421e-01,  2.396997e-01,  2.823336e-01],...
2025-05-15 02:00:59.157473 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-1.431270e-01, -1.612305e-01, -3.962643e-01,  3.726329e-01],
        [-1.184364e-01, -1.787312e-01, -2.680474e-01,  2.404309e-01],
        [-9.374584e-02, -1.962319e-01, -1.398305e-01,  1.082289e-01],...
 y: array([[[-0.143127, -0.161231, -0.396264,  0.372633],
        [-0.117834, -0.179158, -0.26492 ,  0.237206],
        [-0.092541, -0.197086, -0.133576,  0.10178 ],...
2025-05-15 02:00:59.313007 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[ 3.268496e-01,  2.775629e-01, -3.509908e-01, -3.831414e-01],
        [ 3.268496e-01,  2.775629e-01, -3.509908e-01, -3.831414e-01],
        [ 2.993535e-01,  2.745829e-01, -3.183964e-01, -3.867156e-01],...
 y: array([[[ 3.268496e-01,  2.775629e-01, -3.509908e-01, -3.831414e-01],
        [ 3.268496e-01,  2.775629e-01, -3.509908e-01, -3.831414e-01],
        [ 2.993535e-01,  2.745829e-01, -3.183964e-01, -3.867156e-01],...
2025-05-15 02:00:59.490148 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[ 0.073565, -0.06071 ,  0.409449,  0.488445],
        [ 0.053329,  0.008269,  0.374406,  0.353477],
        [ 0.033093,  0.077248,  0.339364,  0.218509],...
 y: array([[[ 0.073565, -0.06071 ,  0.409449,  0.488445],
        [ 0.054485,  0.004327,  0.376409,  0.361189],
        [ 0.035406,  0.069365,  0.343369,  0.233933],...
2025-05-15 02:00:59.644603 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[ 1.459523e-01,  7.797855e-02,  1.669638e-01, -4.651169e-02],
        [ 9.089523e-02,  1.107599e-01,  7.746664e-02,  6.548189e-02],
        [ 3.583816e-02,  1.435412e-01, -1.203055e-02,  1.774755e-01],...
 y: array([[[ 0.145952,  0.077979,  0.166964, -0.046512],
        [ 0.145952,  0.077979,  0.166964, -0.046512],
        [ 0.128017,  0.088657,  0.137809, -0.010029],...
2025-05-15 02:00:59.824708 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[ 0.429041,  0.372929, -0.490467, -0.471801],
        [ 0.335149,  0.296886, -0.473356, -0.299967],
        [ 0.241258,  0.220844, -0.456245, -0.128133],...
 y: array([[[ 4.290406e-01,  3.729292e-01, -4.904669e-01, -4.718010e-01],
        [ 3.329138e-01,  2.950759e-01, -4.729485e-01, -2.958756e-01],
        [ 2.367870e-01,  2.172226e-01, -4.554300e-01, -1.199502e-01],...
2025-05-15 02:00:59.995735 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[-2.812081e-01,  1.013232e-01,  2.033179e-01, -5.557408e-02],
        [-2.812081e-01,  1.013232e-01,  2.033179e-01, -5.557408e-02],
        [-2.468474e-01,  7.051653e-02,  1.949774e-01, -7.294172e-02],...
 y: array([[[-2.812081e-01,  1.013232e-01,  2.033179e-01, -5.557408e-02],
        [-2.812081e-01,  1.013232e-01,  2.033179e-01, -5.557408e-02],
        [-2.468474e-01,  7.051653e-02,  1.949774e-01, -7.294172e-02],...
2025-05-15 02:01:00.171509 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[-0.117553, -0.432414,  0.003986,  0.237897],
        [-0.166709, -0.273565,  0.08294 ,  0.126423],
        [-0.215865, -0.114717,  0.161893,  0.014948],...
 y: array([[[-0.117553, -0.432414,  0.003986,  0.237897],
        [-0.163851, -0.282801,  0.078349,  0.132904],
        [-0.210149, -0.133187,  0.152713,  0.02791 ],...
2025-05-15 02:01:00.341236 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[ 0.403712,  0.039941,  0.281597,  0.256913],
        [ 0.25581 ,  0.019532,  0.326109,  0.22661 ],
        [ 0.107909, -0.000877,  0.370622,  0.196306],...
 y: array([[[ 4.037124e-01,  3.994127e-02,  2.815967e-01,  2.569132e-01],
        [ 4.037124e-01,  3.994127e-02,  2.815967e-01,  2.569132e-01],
        [ 3.635415e-01,  3.439808e-02,  2.936865e-01,  2.486826e-01],...
2025-05-15 02:01:00.498034 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[ 0.417854,  0.2265  ,  0.02966 , -0.232354],
        [ 0.286597,  0.122829, -0.07288 , -0.084109],
        [ 0.155339,  0.019158, -0.17542 ,  0.064137],...
 y: array([[[ 0.417854,  0.2265  ,  0.02966 , -0.232354],
        [ 0.283544,  0.120418, -0.075265, -0.080661],
        [ 0.149234,  0.014336, -0.180189,  0.071032],...
2025-05-15 02:01:00.640059 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[-2.760066e-01, -1.199970e-01, -4.075500e-02,  3.853839e-01],
        [-2.760066e-01, -1.199970e-01, -4.075500e-02,  3.853839e-01],
        [-2.494153e-01, -1.177504e-01, -5.308055e-02,  3.616614e-01],...
 y: array([[[-2.760066e-01, -1.199970e-01, -4.075500e-02,  3.853839e-01],
        [-2.760066e-01, -1.199970e-01, -4.075500e-02,  3.853839e-01],
        [-2.494153e-01, -1.177504e-01, -5.308054e-02,  3.616614e-01],...
2025-05-15 02:01:00.816766 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[ 0.343042,  0.338553, -0.214854,  0.410914],
        [ 0.242341,  0.20339 , -0.178598,  0.330934],
        [ 0.141641,  0.068228, -0.142342,  0.250954],...
 y: array([[[ 3.430420e-01,  3.385529e-01, -2.148541e-01,  4.109143e-01],
        [ 2.482919e-01,  2.113771e-01, -1.807406e-01,  3.356602e-01],
        [ 1.535418e-01,  8.420134e-02, -1.466271e-01,  2.604061e-01],...
2025-05-15 02:01:00.985751 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[ 3.732476e-01, -3.048617e-01,  5.280121e-02, -3.386734e-01],
        [ 2.624285e-01, -3.085649e-01, -7.282130e-03, -2.395563e-01],
        [ 1.516094e-01, -3.122680e-01, -6.736547e-02, -1.404391e-01],...
 y: array([[[ 3.732476e-01, -3.048617e-01,  5.280121e-02, -3.386734e-01],
        [ 3.732476e-01, -3.048617e-01,  5.280121e-02, -3.386734e-01],
        [ 3.491565e-01, -3.056667e-01,  3.973962e-02, -3.171262e-01],...
2025-05-15 02:01:01.161396 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[ 0.085887,  0.1261  ,  0.318309, -0.152044],
        [-0.00098 ,  0.172162,  0.164169, -0.100836],
        [-0.087847,  0.218224,  0.01003 , -0.049627],...
 y: array([[[ 0.085887,  0.1261  ,  0.318309, -0.152044],
        [-0.002954,  0.173209,  0.160666, -0.099672],
        [-0.091795,  0.220317,  0.003024, -0.0473  ],...
2025-05-15 02:01:01.340296 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[-0.440236, -0.350778,  0.207991, -0.199778],
        [-0.440236, -0.350778,  0.207991, -0.199778],
        [-0.436343, -0.346662,  0.195983, -0.190749],...
 y: array([[[-0.440236, -0.350778,  0.207991, -0.199778],
        [-0.440236, -0.350778,  0.207991, -0.199778],
        [-0.436343, -0.346662,  0.195983, -0.190749],...
2025-05-15 02:01:01.518624 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[ 7.199655e-02,  4.593359e-02, -6.478424e-02, -2.279111e-01],
        [-6.751304e-03,  1.409348e-01, -1.567865e-01, -9.294932e-02],
        [-8.549917e-02,  2.359360e-01, -2.487887e-01,  4.201248e-02],...
 y: array([[[ 7.199655e-02,  4.593359e-02, -6.478424e-02, -2.279111e-01],
        [-2.026433e-03,  1.352347e-01, -1.512663e-01, -1.010470e-01],
        [-7.604942e-02,  2.245359e-01, -2.377484e-01,  2.581705e-02],...
2025-05-15 02:01:01.675222 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[-2.037830e-01, -5.578386e-02,  3.795514e-01,  2.241712e-01],
        [-1.664303e-01, -5.649972e-02,  3.497515e-01,  8.278095e-02],
        [-1.290776e-01, -5.721557e-02,  3.199516e-01, -5.860926e-02],...
 y: array([[[-0.203783, -0.055784,  0.379551,  0.224171],
        [-0.203783, -0.055784,  0.379551,  0.224171],
        [-0.19769 , -0.055901,  0.37469 ,  0.201108],...
2025-05-15 02:01:01.819172 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[ 0.455722, -0.415313,  0.208248,  0.021946],
        [ 0.454431, -0.240818,  0.081821,  0.034723],
        [ 0.453139, -0.066323, -0.044605,  0.047501],...
 y: array([[[ 0.455722, -0.415313,  0.208248,  0.021946],
        [ 0.454402, -0.236941,  0.079012,  0.035007],
        [ 0.453082, -0.058568, -0.050224,  0.048069],...
2025-05-15 02:01:01.999753 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[ 0.012688,  0.264829, -0.376543,  0.297395],
        [ 0.012688,  0.264829, -0.376543,  0.297395],
        [ 0.004348,  0.252073, -0.37307 ,  0.290353],...
 y: array([[[ 0.012688,  0.264829, -0.376543,  0.297395],
        [ 0.012688,  0.264829, -0.376543,  0.297395],
        [ 0.004348,  0.252073, -0.37307 ,  0.290353],...
2025-05-15 02:01:02.169775 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[-0.174611,  0.385794, -0.446912,  0.194999],
        [-0.163835,  0.388434, -0.428851,  0.086898],
        [-0.153059,  0.391074, -0.410789, -0.021203],...
 y: array([[[-0.174611,  0.385794, -0.446912,  0.194999],
        [-0.164491,  0.388274, -0.42995 ,  0.093478],
        [-0.154371,  0.390753, -0.412988, -0.008043],...
2025-05-15 02:01:02.325337 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[-0.265593,  0.442441,  0.426208,  0.350724],
        [-0.306649,  0.425574,  0.268547,  0.302468],
        [-0.347706,  0.408706,  0.110885,  0.254211],...
 y: array([[[-0.265593,  0.442441,  0.426208,  0.350724],
        [-0.265593,  0.442441,  0.426208,  0.350724],
        [-0.27006 ,  0.440606,  0.409055,  0.345474],...
2025-05-15 02:01:02.504506 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[-0.160936,  0.120634, -0.432539, -0.08477 ],
        [-0.088221,  0.017189, -0.34722 ,  0.019263],
        [-0.015506, -0.086257, -0.261901,  0.123296],...
 y: array([[[-1.609358e-01,  1.206344e-01, -4.325393e-01, -8.477040e-02],
        [-8.664013e-02,  1.494005e-02, -3.453654e-01,  2.152443e-02],
        [-1.234440e-02, -9.075432e-02, -2.581915e-01,  1.278193e-01],...
2025-05-15 02:01:02.686651 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[ 3.260945e-01, -3.284919e-01, -3.114177e-01,  3.217194e-01],
        [ 3.260945e-01, -3.284919e-01, -3.114177e-01,  3.217194e-01],
        [ 3.210102e-01, -3.231115e-01, -3.115671e-01,  3.229356e-01],...
 y: array([[[ 3.260945e-01, -3.284919e-01, -3.114177e-01,  3.217194e-01],
        [ 3.260945e-01, -3.284919e-01, -3.114177e-01,  3.217194e-01],
        [ 3.210102e-01, -3.231115e-01, -3.115671e-01,  3.229356e-01],...
2025-05-15 02:01:02.866997 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[-2.907160e-01, -2.039432e-01, -2.853946e-01, -5.462117e-02],
        [-2.680871e-01, -2.008963e-01, -1.650158e-01, -1.352998e-01],
        [-2.454582e-01, -1.978494e-01, -4.463692e-02, -2.159784e-01],...
 y: array([[[-0.290716, -0.203943, -0.285395, -0.054621],
        [-0.269483, -0.201084, -0.172443, -0.130322],
        [-0.248251, -0.198225, -0.059492, -0.206022],...
2025-05-15 02:01:03.038392 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[ 0.06787 , -0.49501 ,  0.004169,  0.17075 ],
        [ 0.10207 , -0.416122,  0.069732,  0.103889],
        [ 0.136271, -0.337233,  0.135295,  0.037027],...
 y: array([[[ 6.786953e-02, -4.950102e-01,  4.169214e-03,  1.707504e-01],
        [ 6.786953e-02, -4.950102e-01,  4.169214e-03,  1.707504e-01],
        [ 6.973081e-02, -4.907169e-01,  7.737258e-03,  1.671117e-01],...
2025-05-15 02:01:03.197779 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[-0.090202,  0.043855,  0.335562, -0.126732],
        [-0.072872,  0.060935,  0.27166 , -0.082904],
        [-0.055542,  0.078015,  0.207758, -0.039077],...
 y: array([[[-0.090202,  0.043855,  0.335562, -0.126732],
        [-0.072503,  0.061299,  0.2703  , -0.081972],
        [-0.054805,  0.078742,  0.205039, -0.037212],...
2025-05-15 02:01:03.377808 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[ 2.892291e-01,  2.324060e-01,  2.386579e-01,  4.022482e-01],
        [ 2.892291e-01,  2.324060e-01,  2.386579e-01,  4.022482e-01],
        [ 2.892291e-01,  2.324060e-01,  2.386579e-01,  4.022482e-01],...
 y: array([[[ 2.892291e-01,  2.324060e-01,  2.386579e-01,  4.022482e-01],
        [ 2.892291e-01,  2.324060e-01,  2.386579e-01,  4.022482e-01],
        [ 2.892291e-01,  2.324060e-01,  2.386579e-01,  4.022482e-01],...
2025-05-15 02:01:03.560601 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[-3.675343e-01, -3.534659e-01,  1.068492e-01, -3.272514e-01],
        [-2.101849e-01, -3.011400e-01,  1.062945e-01, -2.297105e-01],
        [-5.283561e-02, -2.488142e-01,  1.057397e-01, -1.321697e-01],...
 y: array([[[-3.675343e-01, -3.534659e-01,  1.068492e-01, -3.272514e-01],
        [-2.200193e-01, -3.044104e-01,  1.063292e-01, -2.358069e-01],
        [-7.250427e-02, -2.553549e-01,  1.058091e-01, -1.443623e-01],...
2025-05-15 02:01:03.717678 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[-0.031809,  0.049116, -0.339501,  0.372136],
        [-0.005073, -0.021557, -0.332782,  0.273831],
        [ 0.021662, -0.092229, -0.326063,  0.175526],...
 y: array([[[-0.031809,  0.049116, -0.339501,  0.372136],
        [-0.031809,  0.049116, -0.339501,  0.372136],
        [-0.031809,  0.049116, -0.339501,  0.372136],...
2025-05-15 02:01:03.895080 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[-0.007404, -0.459159, -0.487874, -0.240067],
        [ 0.000517, -0.286338, -0.327547, -0.243721],
        [ 0.008439, -0.113517, -0.16722 , -0.247376],...
 y: array([[[-7.404207e-03, -4.591586e-01, -4.878737e-01, -2.400665e-01],
        [ 6.822420e-04, -2.827374e-01, -3.242068e-01, -2.437974e-01],
        [ 8.768692e-03, -1.063163e-01, -1.605398e-01, -2.475282e-01],...
2025-05-15 02:01:04.050218 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[-0.152887, -0.229946, -0.341805, -0.433393],
        [-0.152887, -0.229946, -0.341805, -0.433393],
        [-0.152887, -0.229946, -0.341805, -0.433393],...
 y: array([[[-0.152887, -0.229946, -0.341805, -0.433393],
        [-0.152887, -0.229946, -0.341805, -0.433393],
        [-0.152887, -0.229946, -0.341805, -0.433393],...
2025-05-15 02:01:04.241148 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[ 4.329002e-03, -3.056282e-01,  1.947636e-01, -3.055472e-01],
        [ 7.800388e-02, -1.769120e-01,  1.082050e-01, -3.296756e-01],
        [ 1.516788e-01, -4.819584e-02,  2.164651e-02, -3.538041e-01],...
 y: array([[[ 0.004329, -0.305628,  0.194764, -0.305547],
        [ 0.073343, -0.185055,  0.113681, -0.328149],
        [ 0.142357, -0.064482,  0.032599, -0.350751],...
2025-05-15 02:01:04.399507 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[-0.461892, -0.393989, -0.161932, -0.06063 ],
        [-0.380859, -0.297896, -0.18231 ,  0.020924],
        [-0.299826, -0.201803, -0.202688,  0.102478],...
 y: array([[[-0.461892, -0.393989, -0.161932, -0.06063 ],
        [-0.461892, -0.393989, -0.161932, -0.06063 ],
        [-0.461892, -0.393989, -0.161932, -0.06063 ],...
2025-05-15 02:01:04.582442 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[-3.473401e-01, -1.608180e-01, -4.097243e-01, -1.702114e-01],
        [-3.221645e-01, -1.537115e-01, -3.792661e-01, -1.604917e-01],
        [-2.969890e-01, -1.466049e-01, -3.488078e-01, -1.507721e-01],...
 y: array([[[-0.34734 , -0.160818, -0.409724, -0.170211],
        [-0.321651, -0.153566, -0.378644, -0.160293],
        [-0.295961, -0.146315, -0.347565, -0.150375],...
2025-05-15 02:01:04.739424 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[-1.266235e-02, -4.297201e-01, -1.641582e-01,  2.401360e-01],
        [-1.266235e-02, -4.297201e-01, -1.641582e-01,  2.401360e-01],
        [-1.266235e-02, -4.297201e-01, -1.641582e-01,  2.401360e-01],...
 y: array([[[-1.266235e-02, -4.297201e-01, -1.641582e-01,  2.401360e-01],
        [-1.266235e-02, -4.297201e-01, -1.641582e-01,  2.401360e-01],
        [-1.266235e-02, -4.297201e-01, -1.641582e-01,  2.401360e-01],...
2025-05-15 02:01:04.918360 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[ 1.530032e-03, -3.652999e-01, -3.508324e-01, -2.708984e-01],
        [-9.032520e-02, -2.946716e-01, -2.600095e-01, -1.861426e-01],
        [-1.821804e-01, -2.240433e-01, -1.691866e-01, -1.013869e-01],...
 y: array([[[ 0.00153 , -0.3653  , -0.350832, -0.270898],
        [-0.084446, -0.299192, -0.265822, -0.191567],
        [-0.170423, -0.233084, -0.180812, -0.112236],...
2025-05-15 02:01:05.102981 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[ 3.190266e-01,  2.189476e-02,  5.881219e-02, -3.419640e-01],
        [ 3.486402e-01,  7.803411e-02,  5.803857e-02, -3.631263e-01],
        [ 3.782538e-01,  1.341735e-01,  5.726495e-02, -3.842887e-01],...
 y: array([[[ 0.319027,  0.021895,  0.058812, -0.341964],
        [ 0.319027,  0.021895,  0.058812, -0.341964],
        [ 0.319027,  0.021895,  0.058812, -0.341964],...
2025-05-15 02:01:05.263062 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[ 0.003562,  0.017111, -0.484788,  0.195519],
        [-0.067181,  0.017154, -0.476877,  0.243912],
        [-0.137924,  0.017196, -0.468966,  0.292305],...
 y: array([[[ 0.003562,  0.017111, -0.484788,  0.195519],
        [-0.068596,  0.017154, -0.476719,  0.24488 ],
        [-0.140754,  0.017198, -0.46865 ,  0.294241],...
2025-05-15 02:01:05.412026 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[ 2.353076e-01,  3.687056e-01,  2.724227e-01,  1.535584e-01],
        [ 2.353076e-01,  3.687056e-01,  2.724227e-01,  1.535584e-01],
        [ 2.353076e-01,  3.687056e-01,  2.724227e-01,  1.535584e-01],...
 y: array([[[ 2.353076e-01,  3.687056e-01,  2.724227e-01,  1.535584e-01],
        [ 2.353076e-01,  3.687056e-01,  2.724227e-01,  1.535584e-01],
        [ 2.353076e-01,  3.687056e-01,  2.724227e-01,  1.535584e-01],...
2025-05-15 02:01:05.560515 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[-2.893733e-01,  3.888939e-01, -2.686454e-01, -2.712088e-01],
        [-2.249750e-01,  3.858524e-01, -1.939955e-01, -2.195699e-01],
        [-1.605767e-01,  3.828110e-01, -1.193456e-01, -1.679310e-01],...
 y: array([[[-0.289373,  0.388894, -0.268645, -0.271209],
        [-0.229142,  0.386049, -0.198826, -0.222911],
        [-0.168911,  0.383205, -0.129006, -0.174614],...
2025-05-15 02:01:05.749833 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[-0.26036 , -0.428377, -0.041254,  0.228655],
        [-0.204332, -0.382944, -0.065306,  0.199306],
        [-0.148305, -0.337512, -0.089358,  0.169956],...
 y: array([[[-0.26036 , -0.428377, -0.041254,  0.228655],
        [-0.26036 , -0.428377, -0.041254,  0.228655],
        [-0.26036 , -0.428377, -0.041254,  0.228655],...
2025-05-15 02:01:05.908250 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[-3.346560e-01,  3.996920e-01,  2.346751e-01, -1.978330e-01],
        [-2.649272e-01,  4.108318e-01,  2.101512e-01, -2.156081e-01],
        [-1.951984e-01,  4.219716e-01,  1.856273e-01, -2.333832e-01],...
 y: array([[[-0.334656,  0.399692,  0.234675, -0.197833],
        [-0.26356 ,  0.41105 ,  0.20967 , -0.215957],
        [-0.192464,  0.422408,  0.184666, -0.23408 ],...
2025-05-15 02:01:06.086096 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[ 0.147282,  0.150775, -0.14649 , -0.136099],
        [ 0.147282,  0.150775, -0.14649 , -0.136099],
        [ 0.147282,  0.150775, -0.14649 , -0.136099],...
 y: array([[[ 0.147282,  0.150775, -0.14649 , -0.136099],
        [ 0.147282,  0.150775, -0.14649 , -0.136099],
        [ 0.147282,  0.150775, -0.14649 , -0.136099],...
2025-05-15 02:01:06.261256 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[ 7.069357e-02,  4.863005e-01, -3.573999e-01, -4.787634e-01],
        [ 4.822635e-02,  3.436948e-01, -2.314845e-01, -4.281453e-01],
        [ 2.575913e-02,  2.010892e-01, -1.055692e-01, -3.775272e-01],...
 y: array([[[ 0.070694,  0.486301, -0.3574  , -0.478763],
        [ 0.049695,  0.353019, -0.239717, -0.431455],
        [ 0.028697,  0.219738, -0.122035, -0.384146],...
2025-05-15 02:01:06.423030 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[-0.077073,  0.14575 , -0.408121, -0.123827],
        [-0.103984,  0.077778, -0.413172, -0.153668],
        [-0.130894,  0.009806, -0.418223, -0.183509],...
 y: array([[[-0.077073,  0.14575 , -0.408121, -0.123827],
        [-0.077073,  0.14575 , -0.408121, -0.123827],
        [-0.077073,  0.14575 , -0.408121, -0.123827],...
2025-05-15 02:01:06.600999 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[-0.331556,  0.140588, -0.38738 ,  0.10062 ],
        [-0.264387,  0.163749, -0.259566,  0.131536],
        [-0.197218,  0.186909, -0.131752,  0.162452],...
 y: array([[[-0.331556,  0.140588, -0.38738 ,  0.10062 ],
        [-0.263095,  0.164194, -0.257108,  0.13213 ],
        [-0.194634,  0.1878  , -0.126836,  0.163641],...
2025-05-15 02:01:06.772113 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[ 4.455569e-01,  1.299479e-01, -3.745721e-02,  3.838143e-01],
        [ 4.455569e-01,  1.299479e-01, -3.745721e-02,  3.838143e-01],
        [ 4.455569e-01,  1.299479e-01, -3.745721e-02,  3.838143e-01],...
 y: array([[[ 4.455569e-01,  1.299479e-01, -3.745721e-02,  3.838143e-01],
        [ 4.455569e-01,  1.299479e-01, -3.745721e-02,  3.838143e-01],
        [ 4.455569e-01,  1.299479e-01, -3.745721e-02,  3.838143e-01],...
2025-05-15 02:01:06.928100 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[-0.234496,  0.091617,  0.152158,  0.36119 ],
        [-0.276725,  0.058103,  0.212889,  0.210773],
        [-0.318954,  0.024588,  0.273621,  0.060357],...
 y: array([[[-2.344962e-01,  9.161723e-02,  1.521580e-01,  3.611895e-01],
        [-2.739365e-01,  6.031604e-02,  2.088788e-01,  2.207066e-01],
        [-3.133767e-01,  2.901484e-02,  2.655995e-01,  8.022363e-02],...
2025-05-15 02:01:07.108808 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[-0.160797, -0.312746, -0.166125,  0.010806],
        [-0.052145, -0.189166, -0.059366, -0.005576],
        [ 0.056507, -0.065586,  0.047393, -0.021957],...
 y: array([[[-1.607974e-01, -3.127463e-01, -1.661254e-01,  1.080619e-02],
        [-1.607974e-01, -3.127463e-01, -1.661254e-01,  1.080619e-02],
        [-1.607974e-01, -3.127463e-01, -1.661254e-01,  1.080619e-02],...
2025-05-15 02:01:07.279236 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[-0.349374,  0.231523, -0.432626, -0.246329],
        [-0.337923,  0.250608, -0.286964, -0.136687],
        [-0.326473,  0.269693, -0.141302, -0.027045],...
 y: array([[[-0.349374,  0.231523, -0.432626, -0.246329],
        [-0.337707,  0.250968, -0.284216, -0.134618],
        [-0.326041,  0.270413, -0.135805, -0.022908],...
2025-05-15 02:01:07.434892 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[-0.021959, -0.360078,  0.478272,  0.363715],
        [-0.021959, -0.360078,  0.478272,  0.363715],
        [-0.021959, -0.360078,  0.478272,  0.363715],...
 y: array([[[-0.021959, -0.360078,  0.478272,  0.363715],
        [-0.021959, -0.360078,  0.478272,  0.363715],
        [-0.021959, -0.360078,  0.478272,  0.363715],...
2025-05-15 02:01:07.576186 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[ 7.859088e-02,  4.427902e-01, -1.162752e-01, -4.510745e-01],
        [-2.340224e-02,  3.668304e-01, -7.494300e-02, -3.801416e-01],
        [-1.253954e-01,  2.908706e-01, -3.361084e-02, -3.092087e-01],...
 y: array([[[ 7.859088e-02,  4.427902e-01, -1.162752e-01, -4.510745e-01],
        [-1.660270e-02,  3.718944e-01, -7.769848e-02, -3.848705e-01],
        [-1.117963e-01,  3.009986e-01, -3.912180e-02, -3.186664e-01],...
2025-05-15 02:01:07.760385 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[ 0.249913,  0.319027,  0.299497, -0.483325],
        [ 0.283817,  0.288419,  0.250806, -0.355057],
        [ 0.317721,  0.257812,  0.202114, -0.226789],...
 y: array([[[ 0.249913,  0.319027,  0.299497, -0.483325],
        [ 0.249913,  0.319027,  0.299497, -0.483325],
        [ 0.249913,  0.319027,  0.299497, -0.483325],...
2025-05-15 02:01:07.918802 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[ 0.018305, -0.282148,  0.018296, -0.295246],
        [-0.024376, -0.185246,  0.090913, -0.220205],
        [-0.067056, -0.088344,  0.163531, -0.145163],...
 y: array([[[ 1.830457e-02, -2.821482e-01,  1.829597e-02, -2.952461e-01],
        [-2.516626e-02, -1.834515e-01,  9.225825e-02, -2.188149e-01],
        [-6.863709e-02, -8.475483e-02,  1.662205e-01, -1.423837e-01],...
2025-05-15 02:01:08.096395 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[-0.164373, -0.477922,  0.39259 , -0.047323],
        [-0.164373, -0.477922,  0.39259 , -0.047323],
        [-0.164373, -0.477922,  0.39259 , -0.047323],...
 y: array([[[-0.164373, -0.477922,  0.39259 , -0.047323],
        [-0.164373, -0.477922,  0.39259 , -0.047323],
        [-0.164373, -0.477922,  0.39259 , -0.047323],...
2025-05-15 02:01:08.270230 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[ 0.095882, -0.129181, -0.416092,  0.066996],
        [ 0.09407 , -0.193637, -0.412975,  0.114996],
        [ 0.092258, -0.258093, -0.409857,  0.162996],...
 y: array([[[ 0.095882, -0.129181, -0.416092,  0.066996],
        [ 0.094192, -0.189301, -0.413184,  0.111767],
        [ 0.092502, -0.249421, -0.410277,  0.156538],...
2025-05-15 02:01:08.447336 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[ 3.468316e-01, -1.976027e-01, -9.457863e-02, -1.194776e-01],
        [ 3.099361e-01, -1.074244e-01, -7.498419e-02, -1.284711e-01],
        [ 2.730406e-01, -1.724620e-02, -5.538976e-02, -1.374645e-01],...
 y: array([[[ 3.468316e-01, -1.976027e-01, -9.457863e-02, -1.194776e-01],
        [ 3.468316e-01, -1.976027e-01, -9.457863e-02, -1.194776e-01],
        [ 3.468316e-01, -1.976027e-01, -9.457863e-02, -1.194776e-01],...
2025-05-15 02:01:08.604785 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[-0.086516, -0.411265,  0.06028 , -0.234611],
        [ 0.005616, -0.286248,  0.037904, -0.227705],
        [ 0.097749, -0.161232,  0.015527, -0.220798],...
 y: array([[[-8.651636e-02, -4.112650e-01,  6.027992e-02, -2.346115e-01],
        [ 7.291352e-03, -2.839754e-01,  3.749680e-02, -2.275789e-01],
        [ 1.010991e-01, -1.566857e-01,  1.471367e-02, -2.205464e-01],...
2025-05-15 02:01:08.789616 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[ 0.027187, -0.383606,  0.286284, -0.01585 ],
        [ 0.027187, -0.383606,  0.286284, -0.01585 ],
        [ 0.027187, -0.383606,  0.286284, -0.01585 ],...
 y: array([[[ 0.027187, -0.383606,  0.286284, -0.01585 ],
        [ 0.027187, -0.383606,  0.286284, -0.01585 ],
        [ 0.027187, -0.383606,  0.286284, -0.01585 ],...
2025-05-15 02:01:08.955704 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[ 2.782069e-01, -3.842404e-01,  2.420630e-01, -4.609945e-01],
        [ 2.005808e-01, -3.167787e-01,  2.182304e-01, -3.357245e-01],
        [ 1.229547e-01, -2.493169e-01,  1.943977e-01, -2.104546e-01],...
 y: array([[[ 0.278207, -0.38424 ,  0.242063, -0.460994],
        [ 0.205848, -0.321356,  0.219848, -0.344225],
        [ 0.13349 , -0.258472,  0.197632, -0.227456],...
2025-05-15 02:01:09.140661 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[-2.150069e-01,  8.234575e-02, -7.379150e-02, -6.892133e-02],
        [-2.034987e-01,  8.539711e-02, -3.701986e-02, -2.689153e-02],
        [-1.919905e-01,  8.844848e-02, -2.482203e-04,  1.513828e-02],...
 y: array([[[-0.215007,  0.082346, -0.073791, -0.068921],
        [-0.215007,  0.082346, -0.073791, -0.068921],
        [-0.215007,  0.082346, -0.073791, -0.068921],...
2025-05-15 02:01:09.315349 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[-0.267356,  0.369954,  0.397807,  0.387731],
        [-0.287149,  0.38898 ,  0.409085,  0.342804],
        [-0.306943,  0.408006,  0.420364,  0.297876],...
 y: array([[[-0.267356,  0.369954,  0.397807,  0.387731],
        [-0.287503,  0.38932 ,  0.409287,  0.342001],
        [-0.30765 ,  0.408686,  0.420767,  0.296271],...
2025-05-15 02:01:09.485357 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[-0.163146, -0.214954,  0.022012, -0.485389],
        [-0.163146, -0.214954,  0.022012, -0.485389],
        [-0.163146, -0.214954,  0.022012, -0.485389],...
 y: array([[[-0.163146, -0.214954,  0.022012, -0.485389],
        [-0.163146, -0.214954,  0.022012, -0.485389],
        [-0.163146, -0.214954,  0.022012, -0.485389],...
2025-05-15 02:01:09.643986 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[-0.366505,  0.001592, -0.480409, -0.284941],
        [-0.225446,  0.053263, -0.469925, -0.225905],
        [-0.084387,  0.104933, -0.459442, -0.16687 ],...
 y: array([[[-3.665051e-01,  1.592289e-03, -4.804087e-01, -2.849409e-01],
        [-2.350976e-01,  4.972724e-02, -4.706427e-01, -2.299445e-01],
        [-1.036902e-01,  9.786219e-02, -4.608766e-01, -1.749481e-01],...
2025-05-15 02:01:09.827853 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[ 0.422143, -0.18697 , -0.049743,  0.412335],
        [ 0.338861, -0.081904, -0.107444,  0.312443],
        [ 0.255578,  0.023163, -0.165145,  0.212552],...
 y: array([[[ 0.422143, -0.18697 , -0.049743,  0.412335],
        [ 0.422143, -0.18697 , -0.049743,  0.412335],
        [ 0.422143, -0.18697 , -0.049743,  0.412335],...
2025-05-15 02:01:10.003956 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[-4.763502e-01,  2.877049e-01, -4.061324e-01,  4.747387e-01],
        [-3.569389e-01,  2.554400e-01, -2.934770e-01,  3.677274e-01],
        [-2.375276e-01,  2.231750e-01, -1.808217e-01,  2.607161e-01],...
 y: array([[[-0.47635 ,  0.287705, -0.406132,  0.474739],
        [-0.354844,  0.254874, -0.291501,  0.36585 ],
        [-0.233338,  0.222043, -0.176869,  0.256961],...
2025-05-15 02:01:10.170716 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[-0.140049,  0.187955, -0.253041, -0.042614],
        [-0.140049,  0.187955, -0.253041, -0.042614],
        [-0.140049,  0.187955, -0.253041, -0.042614],...
 y: array([[[-0.140049,  0.187955, -0.253041, -0.042614],
        [-0.140049,  0.187955, -0.253041, -0.042614],
        [-0.140049,  0.187955, -0.253041, -0.042614],...
2025-05-15 02:01:10.326758 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[ 1.832820e-01,  2.188033e-01, -3.813577e-01, -4.990521e-01],
        [ 8.782390e-02,  2.327164e-01, -3.733203e-01, -3.482832e-01],
        [-7.634170e-03,  2.466295e-01, -3.652828e-01, -1.975142e-01],...
 y: array([[[ 0.183282,  0.218803, -0.381358, -0.499052],
        [ 0.094407,  0.231757, -0.373875, -0.358681],
        [ 0.005532,  0.24471 , -0.366391, -0.21831 ],...
2025-05-15 02:01:10.505961 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[-7.183005e-02,  1.726362e-01,  1.070773e-01,  2.074655e-01],
        [ 5.111570e-03,  9.429723e-02,  4.865007e-02,  2.217562e-01],
        [ 8.205319e-02,  1.595829e-02, -9.777180e-03,  2.360469e-01],...
 y: array([[[-0.07183 ,  0.172636,  0.107077,  0.207466],
        [-0.07183 ,  0.172636,  0.107077,  0.207466],
        [-0.07183 ,  0.172636,  0.107077,  0.207466],...
2025-05-15 02:01:10.662002 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[-0.26095 ,  0.012176,  0.206251,  0.035906],
        [-0.156882,  0.05164 ,  0.168753,  0.027548],
        [-0.052815,  0.091105,  0.131256,  0.01919 ],...
 y: array([[[-2.609496e-01,  1.217552e-02,  2.062506e-01,  3.590645e-02],
        [-1.550882e-01,  5.232086e-02,  1.681068e-01,  2.740408e-02],
        [-4.922676e-02,  9.246621e-02,  1.299631e-01,  1.890171e-02],...
2025-05-15 02:01:10.805551 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[ 0.245038, -0.408056, -0.153355,  0.23036 ],
        [ 0.245038, -0.408056, -0.153355,  0.23036 ],
        [ 0.245038, -0.408056, -0.153355,  0.23036 ],...
 y: array([[[ 0.245038, -0.408056, -0.153355,  0.23036 ],
        [ 0.245038, -0.408056, -0.153355,  0.23036 ],
        [ 0.245038, -0.408056, -0.153355,  0.23036 ],...
2025-05-15 02:01:10.982547 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[ 0.418043,  0.457178, -0.141765, -0.159471],
        [ 0.428122,  0.413233, -0.140156, -0.091106],
        [ 0.4382  ,  0.369287, -0.138546, -0.022741],...
 y: array([[[ 4.180427e-01,  4.571784e-01, -1.417651e-01, -1.594709e-01],
        [ 4.274211e-01,  4.162867e-01, -1.402675e-01, -9.585692e-02],
        [ 4.367996e-01,  3.753951e-01, -1.387700e-01, -3.224290e-02],...
2025-05-15 02:01:11.158227 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[-4.452361e-01, -2.816127e-01,  4.180260e-01, -3.177118e-01],
        [-4.506101e-01, -2.872720e-01,  4.242195e-01, -2.630088e-01],
        [-4.559841e-01, -2.929312e-01,  4.304129e-01, -2.083059e-01],...
 y: array([[[-0.445236, -0.281613,  0.418026, -0.317712],
        [-0.445236, -0.281613,  0.418026, -0.317712],
        [-0.445236, -0.281613,  0.418026, -0.317712],...
2025-05-15 02:01:11.331643 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[-0.185591,  0.020422,  0.370115, -0.348542],
        [-0.193809,  0.061543,  0.268447, -0.25069 ],
        [-0.202027,  0.102663,  0.166779, -0.152838],...
 y: array([[[-1.855910e-01,  2.042205e-02,  3.701151e-01, -3.485423e-01],
        [-1.939483e-01,  6.223948e-02,  2.667238e-01, -2.490316e-01],
        [-2.023056e-01,  1.040569e-01,  1.633324e-01, -1.495209e-01],...
2025-05-15 02:01:11.489697 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[ 3.014474e-01, -2.923826e-01,  4.086911e-01,  1.399622e-01],
        [ 3.014474e-01, -2.923826e-01,  4.086911e-01,  1.399622e-01],
        [ 3.014474e-01, -2.923826e-01,  4.086911e-01,  1.399622e-01],...
 y: array([[[ 3.014474e-01, -2.923826e-01,  4.086911e-01,  1.399622e-01],
        [ 3.014474e-01, -2.923826e-01,  4.086911e-01,  1.399622e-01],
        [ 3.014474e-01, -2.923826e-01,  4.086911e-01,  1.399622e-01],...
2025-05-15 02:01:11.667726 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[ 0.436093,  0.196087,  0.307354,  0.241088],
        [ 0.375934,  0.107468,  0.316076,  0.125595],
        [ 0.315774,  0.01885 ,  0.324798,  0.010101],...
 y: array([[[ 0.436093,  0.196087,  0.307354,  0.241088],
        [ 0.380145,  0.113672,  0.315466,  0.133679],
        [ 0.324197,  0.031256,  0.323577,  0.02627 ],...
2025-05-15 02:01:11.824975 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[-0.162925,  0.295955, -0.255014,  0.176526],
        [-0.100092,  0.233591, -0.252509,  0.13971 ],
        [-0.037258,  0.171227, -0.250004,  0.102894],...
 y: array([[[-1.629254e-01,  2.959553e-01, -2.550143e-01,  1.765260e-01],
        [-1.629254e-01,  2.959553e-01, -2.550143e-01,  1.765260e-01],
        [-1.629254e-01,  2.959553e-01, -2.550143e-01,  1.765260e-01],...
2025-05-15 02:01:12.006432 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[-2.911441e-01, -1.841815e-01,  8.984681e-02,  3.659519e-01],
        [-2.770220e-01, -2.129606e-01,  3.694969e-02,  3.342855e-01],
        [-2.628999e-01, -2.417397e-01, -1.594742e-02,  3.026191e-01],...
 y: array([[[-0.291144, -0.184181,  0.089847,  0.365952],
        [-0.276787, -0.21344 ,  0.036068,  0.333758],
        [-0.262429, -0.242699, -0.017711,  0.301564],...
2025-05-15 02:01:12.180107 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[-4.668750e-01,  2.962260e-01, -2.973662e-01,  4.584799e-01],
        [-4.668750e-01,  2.962260e-01, -2.973662e-01,  4.584799e-01],
        [-4.668750e-01,  2.962260e-01, -2.973662e-01,  4.584799e-01],...
 y: array([[[-4.668750e-01,  2.962260e-01, -2.973662e-01,  4.584799e-01],
        [-4.668750e-01,  2.962260e-01, -2.973662e-01,  4.584799e-01],
        [-4.668750e-01,  2.962260e-01, -2.973662e-01,  4.584799e-01],...
2025-05-15 02:01:12.356361 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[-4.456861e-01, -2.627615e-01, -3.038337e-01, -1.824481e-01],
        [-4.413901e-01, -1.655556e-01, -2.043647e-01, -1.627393e-01],
        [-4.370942e-01, -6.834964e-02, -1.048957e-01, -1.430304e-01],...
 y: array([[[-4.456861e-01, -2.627615e-01, -3.038337e-01, -1.824481e-01],
        [-4.416930e-01, -1.724078e-01, -2.113764e-01, -1.641286e-01],
        [-4.376998e-01, -8.205406e-02, -1.189192e-01, -1.458090e-01],...
2025-05-15 02:01:12.533209 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[-0.361182, -0.381261,  0.08015 , -0.322724],
        [-0.377277, -0.333885,  0.058559, -0.288475],
        [-0.393372, -0.28651 ,  0.036967, -0.254225],...
 y: array([[[-0.361182, -0.381261,  0.08015 , -0.322724],
        [-0.361182, -0.381261,  0.08015 , -0.322724],
        [-0.361182, -0.381261,  0.08015 , -0.322724],...
2025-05-15 02:01:12.707045 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[-2.268740e-01,  4.347751e-01,  1.368162e-01, -4.888326e-01],
        [-2.535113e-01,  3.969866e-01,  6.964011e-02, -3.837104e-01],
        [-2.801487e-01,  3.591980e-01,  2.463966e-03, -2.785882e-01],...
 y: array([[[-2.268740e-01,  4.347751e-01,  1.368162e-01, -4.888326e-01],
        [-2.539480e-01,  3.963671e-01,  6.853885e-02, -3.819871e-01],
        [-2.810220e-01,  3.579590e-01,  2.614613e-04, -2.751416e-01],...
2025-05-15 02:01:12.868134 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[-0.416309,  0.174011,  0.230289, -0.078855],
        [-0.416309,  0.174011,  0.230289, -0.078855],
        [-0.416309,  0.174011,  0.230289, -0.078855],...
 y: array([[[-0.416309,  0.174011,  0.230289, -0.078855],
        [-0.416309,  0.174011,  0.230289, -0.078855],
        [-0.416309,  0.174011,  0.230289, -0.078855],...
2025-05-15 02:01:13.063309 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[ 4.576823e-01, -2.002198e-01, -2.551628e-02,  2.241198e-01],
        [ 3.954263e-01, -1.688470e-01, -7.465051e-02,  2.267024e-01],
        [ 3.331702e-01, -1.374742e-01, -1.237847e-01,  2.292850e-01],...
 y: array([[[ 4.576823e-01, -2.002198e-01, -2.551628e-02,  2.241198e-01],
        [ 3.998445e-01, -1.710735e-01, -7.116356e-02,  2.265191e-01],
        [ 3.420066e-01, -1.419271e-01, -1.168109e-01,  2.289184e-01],...
2025-05-15 02:01:13.225965 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[ 0.080505, -0.32697 ,  0.107614,  0.394359],
        [ 0.117296, -0.246038,  0.023033,  0.403818],
        [ 0.154087, -0.165106, -0.061549,  0.413277],...
 y: array([[[ 0.080505, -0.32697 ,  0.107614,  0.394359],
        [ 0.080505, -0.32697 ,  0.107614,  0.394359],
        [ 0.080505, -0.32697 ,  0.107614,  0.394359],...
2025-05-15 02:01:13.386208 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[-2.984539e-01,  1.415605e-01, -2.704789e-01, -4.325563e-01],
        [-1.984906e-01,  8.593192e-02, -1.811465e-01, -3.171808e-01],
        [-9.852745e-02,  3.030331e-02, -9.181405e-02, -2.018053e-01],...
 y: array([[[-0.298454,  0.141561, -0.270479, -0.432556],
        [-0.196878,  0.085035, -0.179706, -0.31532 ],
        [-0.095303,  0.028509, -0.088932, -0.198084],...
2025-05-15 02:01:13.569780 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[-1.760054e-01, -2.014393e-01, -9.787872e-02,  4.662824e-01],
        [-1.760054e-01, -2.014393e-01, -9.787872e-02,  4.662824e-01],
        [-1.760054e-01, -2.014393e-01, -9.787872e-02,  4.662824e-01],...
 y: array([[[-1.760054e-01, -2.014393e-01, -9.787872e-02,  4.662824e-01],
        [-1.760054e-01, -2.014393e-01, -9.787872e-02,  4.662824e-01],
        [-1.760054e-01, -2.014393e-01, -9.787872e-02,  4.662824e-01],...
2025-05-15 02:01:13.742840 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[ 6.205192e-02,  1.280497e-01,  2.678427e-01,  3.935746e-01],
        [ 1.130539e-01,  4.888392e-02,  2.823108e-01,  2.800194e-01],
        [ 1.640558e-01, -3.028190e-02,  2.967789e-01,  1.664642e-01],...
 y: array([[[ 0.062052,  0.12805 ,  0.267843,  0.393575],
        [ 0.109411,  0.054539,  0.281277,  0.28813 ],
        [ 0.15677 , -0.018972,  0.294712,  0.182686],...
2025-05-15 02:01:13.914727 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[ 1.178786e-01,  1.927029e-01, -4.756103e-01, -2.035073e-01],
        [ 5.889183e-02,  2.065948e-01, -4.562120e-01, -1.650200e-01],
        [-9.489432e-05,  2.204867e-01, -4.368138e-01, -1.265327e-01],...
 y: array([[[ 1.178786e-01,  1.927029e-01, -4.756103e-01, -2.035073e-01],
        [ 1.178786e-01,  1.927029e-01, -4.756103e-01, -2.035073e-01],
        [ 1.178786e-01,  1.927029e-01, -4.756103e-01, -2.035073e-01],...
2025-05-15 02:01:14.079561 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[ 0.273384,  0.430678, -0.15351 , -0.055842],
        [ 0.23986 ,  0.368261, -0.166241, -0.01152 ],
        [ 0.206337,  0.305843, -0.178973,  0.032801],...
 y: array([[[ 0.273384,  0.430678, -0.15351 , -0.055842],
        [ 0.239328,  0.36727 , -0.166443, -0.010817],
        [ 0.205273,  0.303861, -0.179377,  0.034208],...
2025-05-15 02:01:14.254794 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[ 0.076713, -0.411447, -0.01216 , -0.198047],
        [ 0.076713, -0.411447, -0.01216 , -0.198047],
        [ 0.076713, -0.411447, -0.01216 , -0.198047],...
 y: array([[[ 0.076713, -0.411447, -0.01216 , -0.198047],
        [ 0.076713, -0.411447, -0.01216 , -0.198047],
        [ 0.076713, -0.411447, -0.01216 , -0.198047],...
2025-05-15 02:01:14.413217 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[-1.798826e-01, -3.424665e-01, -4.664000e-01,  1.478490e-01],
        [-1.219945e-01, -2.843416e-01, -4.085750e-01,  1.906811e-01],
        [-6.410634e-02, -2.262167e-01, -3.507500e-01,  2.335133e-01],...
 y: array([[[-1.798826e-01, -3.424665e-01, -4.664000e-01,  1.478490e-01],
        [-1.261552e-01, -2.885193e-01, -4.127312e-01,  1.876025e-01],
        [-7.242776e-02, -2.345721e-01, -3.590623e-01,  2.273561e-01],...
2025-05-15 02:01:14.599364 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[-0.022597,  0.495995,  0.209454, -0.09045 ],
        [-0.029969,  0.456634,  0.137631, -0.082652],
        [-0.037341,  0.417273,  0.065807, -0.074855],...
 y: array([[[-2.259732e-02,  4.959950e-01,  2.094542e-01, -9.044962e-02],
        [-2.259732e-02,  4.959950e-01,  2.094542e-01, -9.044962e-02],
        [-2.259732e-02,  4.959950e-01,  2.094542e-01, -9.044962e-02],...
2025-05-15 02:01:14.773236 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[ 0.443027, -0.07731 ,  0.297873, -0.278924],
        [ 0.351537, -0.108543,  0.304803, -0.197245],
        [ 0.260048, -0.139775,  0.311733, -0.115566],...
 y: array([[[ 4.430270e-01, -7.731003e-02,  2.978733e-01, -2.789237e-01],
        [ 3.501078e-01, -1.090305e-01,  3.049115e-01, -1.959687e-01],
        [ 2.571887e-01, -1.407510e-01,  3.119496e-01, -1.130136e-01],...
2025-05-15 02:01:14.957660 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[-0.150756,  0.072757, -0.015963,  0.463146],
        [-0.150756,  0.072757, -0.015963,  0.463146],
        [-0.150756,  0.072757, -0.015963,  0.463146],...
 y: array([[[-0.150756,  0.072757, -0.015963,  0.463146],
        [-0.150756,  0.072757, -0.015963,  0.463146],
        [-0.150756,  0.072757, -0.015963,  0.463146],...
2025-05-15 02:01:15.143786 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[-1.165872e-01, -2.528499e-01,  2.583759e-02, -3.001385e-01],
        [-6.775104e-02, -2.203670e-01,  9.776688e-03, -2.417947e-01],
        [-1.891493e-02, -1.878840e-01, -6.284216e-03, -1.834510e-01],...
 y: array([[[-0.116587, -0.25285 ,  0.025838, -0.300138],
        [-0.071282, -0.222716,  0.010938, -0.246013],
        [-0.025977, -0.192582, -0.003962, -0.191888],...
2025-05-15 02:01:15.301585 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[ 0.196837,  0.245392, -0.039272, -0.121071],
        [ 0.218327,  0.238579, -0.059526, -0.171974],
        [ 0.239817,  0.231766, -0.07978 , -0.222877],...
 y: array([[[ 1.968371e-01,  2.453921e-01, -3.927198e-02, -1.210708e-01],
        [ 1.968371e-01,  2.453921e-01, -3.927198e-02, -1.210708e-01],
        [ 1.968371e-01,  2.453921e-01, -3.927198e-02, -1.210708e-01],...
2025-05-15 02:01:15.447303 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[-2.213432e-01, -3.054080e-01,  4.844979e-01, -2.374697e-01],
        [-2.025640e-01, -3.227057e-01,  4.854590e-01, -1.532309e-01],
        [-1.837848e-01, -3.400034e-01,  4.864201e-01, -6.899218e-02],...
 y: array([[[-2.213432e-01, -3.054080e-01,  4.844979e-01, -2.374697e-01],
        [-2.022751e-01, -3.229718e-01,  4.854738e-01, -1.519349e-01],
        [-1.832070e-01, -3.405356e-01,  4.864497e-01, -6.640022e-02],...
2025-05-15 02:01:15.627115 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[-2.666512e-01, -2.158906e-01,  2.997085e-01, -3.547168e-01],
        [-2.666512e-01, -2.158906e-01,  2.997085e-01, -3.547168e-01],
        [-2.666512e-01, -2.158906e-01,  2.997085e-01, -3.547168e-01],...
 y: array([[[-2.666512e-01, -2.158906e-01,  2.997085e-01, -3.547168e-01],
        [-2.666512e-01, -2.158906e-01,  2.997085e-01, -3.547168e-01],
        [-2.666512e-01, -2.158906e-01,  2.997085e-01, -3.547168e-01],...
2025-05-15 02:01:15.798748 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[-0.19955 , -0.482829, -0.065678,  0.411959],
        [-0.160699, -0.397582, -0.026738,  0.40096 ],
        [-0.121848, -0.312336,  0.012202,  0.389962],...
 y: array([[[-0.19955 , -0.482829, -0.065678,  0.411959],
        [-0.163525, -0.403782, -0.02957 ,  0.40176 ],
        [-0.127499, -0.324735,  0.006538,  0.391562],...
2025-05-15 02:01:15.972904 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[-0.003223, -0.287064, -0.466732,  0.095171],
        [ 0.035447, -0.267415, -0.424341,  0.140486],
        [ 0.074117, -0.247767, -0.381949,  0.185801],...
 y: array([[[-3.223170e-03, -2.870639e-01, -4.667324e-01,  9.517139e-02],
        [-3.223170e-03, -2.870639e-01, -4.667324e-01,  9.517139e-02],
        [-3.223170e-03, -2.870639e-01, -4.667324e-01,  9.517139e-02],...
2025-05-15 02:01:16.147625 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[ 2.207097e-01,  4.484971e-01,  4.981275e-01, -4.861523e-02],
        [ 1.499192e-01,  3.235340e-01,  4.755237e-01,  1.661190e-02],
        [ 7.912868e-02,  1.985708e-01,  4.529200e-01,  8.183903e-02],...
 y: array([[[ 2.207097e-01,  4.484971e-01,  4.981275e-01, -4.861523e-02],
        [ 1.488466e-01,  3.216406e-01,  4.751813e-01,  1.760018e-02],
        [ 7.698353e-02,  1.947841e-01,  4.522350e-01,  8.381560e-02],...
2025-05-15 02:01:16.334997 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[-0.208567, -0.392811, -0.155234,  0.45401 ],
        [-0.208567, -0.392811, -0.155234,  0.45401 ],
        [-0.208567, -0.392811, -0.155234,  0.45401 ],...
 y: array([[[-0.208567, -0.392811, -0.155234,  0.45401 ],
        [-0.208567, -0.392811, -0.155234,  0.45401 ],
        [-0.208567, -0.392811, -0.155234,  0.45401 ],...
2025-05-15 02:01:16.495970 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[-0.380371,  0.01551 ,  0.022561, -0.47589 ],
        [-0.316811, -0.038963,  0.045637, -0.439593],
        [-0.25325 , -0.093437,  0.068713, -0.403295],...
 y: array([[[-3.803710e-01,  1.551044e-02,  2.256095e-02, -4.758897e-01],
        [-3.214591e-01, -3.497926e-02,  4.394934e-02, -4.422471e-01],
        [-2.625473e-01, -8.546897e-02,  6.533772e-02, -4.086044e-01],...
2025-05-15 02:01:16.642742 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[ 0.162013,  0.396566,  0.483253, -0.100298],
        [ 0.173951,  0.403187,  0.472824, -0.062414],
        [ 0.185888,  0.409809,  0.462395, -0.02453 ],...
 y: array([[[ 1.620126e-01,  3.965656e-01,  4.832528e-01, -1.002979e-01],
        [ 1.620126e-01,  3.965656e-01,  4.832528e-01, -1.002979e-01],
        [ 1.620126e-01,  3.965656e-01,  4.832528e-01, -1.002979e-01],...
2025-05-15 02:01:16.830528 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[-4.050519e-01,  2.160477e-01,  3.905246e-01,  3.911808e-01],
        [-3.367588e-01,  2.472624e-01,  3.587556e-01,  3.213493e-01],
        [-2.684658e-01,  2.784772e-01,  3.269867e-01,  2.515177e-01],...
 y: array([[[-4.050519e-01,  2.160477e-01,  3.905246e-01,  3.911808e-01],
        [-3.357395e-01,  2.477283e-01,  3.582815e-01,  3.203070e-01],
        [-2.664272e-01,  2.794089e-01,  3.260383e-01,  2.494331e-01],...
2025-05-15 02:01:16.990122 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[ 0.21178 ,  0.16687 , -0.023933, -0.422402],
        [ 0.21178 ,  0.16687 , -0.023933, -0.422402],
        [ 0.21178 ,  0.16687 , -0.023933, -0.422402],...
 y: array([[[ 0.21178 ,  0.16687 , -0.023933, -0.422402],
        [ 0.21178 ,  0.16687 , -0.023933, -0.422402],
        [ 0.21178 ,  0.16687 , -0.023933, -0.422402],...
2025-05-15 02:01:17.137645 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[ 3.867085e-01,  2.866644e-01, -1.727231e-01, -4.018638e-01],
        [ 3.471429e-01,  2.847283e-01, -1.209681e-01, -3.219752e-01],
        [ 3.075772e-01,  2.827923e-01, -6.921317e-02, -2.420867e-01],...
 y: array([[[ 3.867085e-01,  2.866644e-01, -1.727231e-01, -4.018638e-01],
        [ 3.500521e-01,  2.848707e-01, -1.247737e-01, -3.278494e-01],
        [ 3.133957e-01,  2.830770e-01, -7.682420e-02, -2.538350e-01],...
2025-05-15 02:01:17.262140 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[-4.708891e-01,  2.420776e-01, -6.258865e-02,  2.417357e-01],
        [-4.067541e-01,  1.616948e-01, -9.543257e-02,  2.212932e-01],
        [-3.426191e-01,  8.131202e-02, -1.282765e-01,  2.008507e-01],...
 y: array([[[-4.708891e-01,  2.420776e-01, -6.258865e-02,  2.417357e-01],
        [-4.708891e-01,  2.420776e-01, -6.258865e-02,  2.417357e-01],
        [-4.708891e-01,  2.420776e-01, -6.258865e-02,  2.417357e-01],...
2025-05-15 02:01:17.409404 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[ 9.404478e-02,  1.649473e-01, -1.569175e-01, -4.496511e-01],
        [ 9.674918e-02,  1.621314e-01, -1.482497e-01, -3.499823e-01],
        [ 9.945357e-02,  1.593154e-01, -1.395818e-01, -2.503136e-01],...
 y: array([[[ 9.404478e-02,  1.649473e-01, -1.569175e-01, -4.496511e-01],
        [ 9.678894e-02,  1.620900e-01, -1.481222e-01, -3.485166e-01],
        [ 9.953310e-02,  1.592326e-01, -1.393269e-01, -2.473821e-01],...
2025-05-15 02:01:17.554506 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[ 0.122148, -0.061904, -0.47244 , -0.070852],
        [ 0.122148, -0.061904, -0.47244 , -0.070852],
        [ 0.122148, -0.061904, -0.47244 , -0.070852],...
 y: array([[[ 0.122148, -0.061904, -0.47244 , -0.070852],
        [ 0.122148, -0.061904, -0.47244 , -0.070852],
        [ 0.122148, -0.061904, -0.47244 , -0.070852],...
2025-05-15 02:01:17.695935 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[ 6.172324e-03,  4.160388e-01,  2.904494e-01,  4.003990e-01],
        [-5.053156e-02,  3.875767e-01,  2.852196e-01,  3.546812e-01],
        [-1.072355e-01,  3.591146e-01,  2.799897e-01,  3.089634e-01],...
 y: array([[[ 0.006172,  0.416039,  0.290449,  0.400399],
        [-0.04634 ,  0.38968 ,  0.285606,  0.35806 ],
        [-0.098853,  0.363322,  0.280763,  0.315722],...
2025-05-15 02:01:17.882453 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[ 1.786915e-01,  4.897251e-01, -7.633428e-02, -2.621107e-01],
        [ 1.870049e-01,  4.518096e-01, -5.953287e-02, -1.706489e-01],
        [ 1.953184e-01,  4.138942e-01, -4.273145e-02, -7.918707e-02],...
 y: array([[[ 1.786915e-01,  4.897251e-01, -7.633428e-02, -2.621107e-01],
        [ 1.786915e-01,  4.897251e-01, -7.633428e-02, -2.621107e-01],
        [ 1.786915e-01,  4.897251e-01, -7.633428e-02, -2.621107e-01],...
2025-05-15 02:01:18.068754 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[-3.002859e-01, -1.331596e-01, -1.628532e-01, -3.187433e-01],
        [-2.734715e-01, -1.651615e-01, -1.897323e-01, -2.265502e-01],
        [-2.466572e-01, -1.971633e-01, -2.166114e-01, -1.343570e-01],...
 y: array([[[-0.300286, -0.13316 , -0.162853, -0.318743],
        [-0.273083, -0.165625, -0.190122, -0.225214],
        [-0.24588 , -0.198091, -0.21739 , -0.131685],...
2025-05-15 02:01:18.225749 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[-2.694584e-01,  3.478858e-01, -3.572780e-02,  1.466820e-01],
        [-2.694584e-01,  3.478858e-01, -3.572780e-02,  1.466820e-01],
        [-2.694584e-01,  3.478858e-01, -3.572780e-02,  1.466820e-01],...
 y: array([[[-2.694584e-01,  3.478858e-01, -3.572780e-02,  1.466820e-01],
        [-2.694584e-01,  3.478858e-01, -3.572780e-02,  1.466820e-01],
        [-2.694584e-01,  3.478858e-01, -3.572780e-02,  1.466820e-01],...
2025-05-15 02:01:18.371535 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[-3.331616e-02, -3.399786e-01, -1.002182e-01,  4.864008e-01],
        [-9.243268e-02, -3.081755e-01, -1.200032e-01,  4.212661e-01],
        [-1.515492e-01, -2.763723e-01, -1.397881e-01,  3.561313e-01],...
 y: array([[[-0.033316, -0.339979, -0.100218,  0.486401],
        [-0.088041, -0.310538, -0.118533,  0.426105],
        [-0.142766, -0.281097, -0.136849,  0.365808],...
2025-05-15 02:01:18.515625 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[-2.964676e-01, -8.713052e-02,  7.466668e-02,  2.289427e-01],
        [-2.691405e-01, -5.507845e-02,  7.256671e-02,  2.187731e-01],
        [-2.418133e-01, -2.302639e-02,  7.046673e-02,  2.086034e-01],...
 y: array([[[-2.964676e-01, -8.713052e-02,  7.466668e-02,  2.289427e-01],
        [-2.964676e-01, -8.713052e-02,  7.466668e-02,  2.289427e-01],
        [-2.964676e-01, -8.713052e-02,  7.466668e-02,  2.289427e-01],...
2025-05-15 02:01:18.660282 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[-7.557004e-02,  1.497031e-01,  1.273056e-01, -7.096794e-02],
        [-3.348501e-03,  1.543335e-01,  5.916918e-02, -1.150023e-01],
        [ 6.887304e-02,  1.589640e-01, -8.967289e-03, -1.590366e-01],...
 y: array([[[-7.557004e-02,  1.497031e-01,  1.273056e-01, -7.096794e-02],
        [-2.316754e-03,  1.543997e-01,  5.819578e-02, -1.156313e-01],
        [ 7.093653e-02,  1.590963e-01, -1.091407e-02, -1.602947e-01],...
2025-05-15 02:01:18.850581 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[-0.03776 ,  0.451024,  0.420406, -0.148186],
        [-0.03776 ,  0.451024,  0.420406, -0.148186],
        [-0.03776 ,  0.451024,  0.420406, -0.148186],...
 y: array([[[-0.03776 ,  0.451024,  0.420406, -0.148186],
        [-0.03776 ,  0.451024,  0.420406, -0.148186],
        [-0.03776 ,  0.451024,  0.420406, -0.148186],...
2025-05-15 02:01:19.016450 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[ 2.658021e-01, -4.301949e-01, -1.581458e-01, -2.332341e-02],
        [ 2.834809e-01, -3.711904e-01, -9.576903e-02,  4.637899e-02],
        [ 3.011597e-01, -3.121858e-01, -3.339222e-02,  1.160814e-01],...
 y: array([[[ 0.265802, -0.430195, -0.158146, -0.023323],
        [ 0.282161, -0.375595, -0.100425,  0.041176],
        [ 0.29852 , -0.320995, -0.042705,  0.105675],...
2025-05-15 02:01:19.205183 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[ 3.125280e-01,  1.440955e-01,  3.079136e-01, -2.214271e-01],
        [ 2.153390e-01,  1.154722e-01,  2.893982e-01, -1.613930e-01],
        [ 1.181499e-01,  8.684890e-02,  2.708828e-01, -1.013590e-01],...
 y: array([[[ 0.312528,  0.144096,  0.307914, -0.221427],
        [ 0.312528,  0.144096,  0.307914, -0.221427],
        [ 0.312528,  0.144096,  0.307914, -0.221427],...
2025-05-15 02:01:19.391557 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[-4.488620e-01,  1.422419e-01,  2.916854e-02, -9.425650e-02],
        [-3.996505e-01,  1.409827e-01,  1.162101e-03, -1.329691e-01],
        [-3.504390e-01,  1.397236e-01, -2.684434e-02, -1.716816e-01],...
 y: array([[[-4.488620e-01,  1.422419e-01,  2.916854e-02, -9.425650e-02],
        [-3.989574e-01,  1.409650e-01,  7.676457e-04, -1.335143e-01],
        [-3.490528e-01,  1.396881e-01, -2.763325e-02, -1.727721e-01],...
2025-05-15 02:01:19.551756 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[ 0.385786, -0.09915 ,  0.313317, -0.249309],
        [ 0.385786, -0.09915 ,  0.313317, -0.249309],
        [ 0.385786, -0.09915 ,  0.313317, -0.249309],...
 y: array([[[ 0.385786, -0.09915 ,  0.313317, -0.249309],
        [ 0.385786, -0.09915 ,  0.313317, -0.249309],
        [ 0.385786, -0.09915 ,  0.313317, -0.249309],...
2025-05-15 02:01:19.696701 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[-0.268815,  0.262343, -0.147869,  0.207836],
        [-0.266449,  0.205828, -0.126493,  0.226607],
        [-0.264084,  0.149312, -0.105118,  0.245377],...
 y: array([[[-0.268815,  0.262343, -0.147869,  0.207836],
        [-0.266627,  0.210066, -0.128096,  0.225199],
        [-0.264439,  0.15779 , -0.108324,  0.242561],...
2025-05-15 02:01:19.876229 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[ 0.22704 , -0.389878,  0.263177, -0.408711],
        [ 0.185014, -0.361835,  0.256165, -0.307485],
        [ 0.142987, -0.333793,  0.249152, -0.206259],...
 y: array([[[ 0.22704 , -0.389878,  0.263177, -0.408711],
        [ 0.22704 , -0.389878,  0.263177, -0.408711],
        [ 0.22704 , -0.389878,  0.263177, -0.408711],...
2025-05-15 02:01:20.063394 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[-1.271681e-01,  5.882717e-02, -2.767117e-01, -3.436893e-01],
        [-1.409782e-01,  1.868354e-02, -2.958862e-01, -2.762639e-01],
        [-1.547882e-01, -2.146009e-02, -3.150608e-01, -2.088386e-01],...
 y: array([[[-1.271681e-01,  5.882717e-02, -2.767117e-01, -3.436893e-01],
        [-1.411700e-01,  1.812599e-02, -2.961525e-01, -2.753274e-01],
        [-1.551718e-01, -2.257518e-02, -3.155934e-01, -2.069656e-01],...
2025-05-15 02:01:20.230306 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[ 0.443703, -0.29418 ,  0.340621, -0.138677],
        [ 0.443703, -0.29418 ,  0.340621, -0.138677],
        [ 0.443703, -0.29418 ,  0.340621, -0.138677],...
 y: array([[[ 0.443703, -0.29418 ,  0.340621, -0.138677],
        [ 0.443703, -0.29418 ,  0.340621, -0.138677],
        [ 0.443703, -0.29418 ,  0.340621, -0.138677],...
2025-05-15 02:01:20.381144 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[ 0.122142, -0.470338,  0.05603 , -0.416201],
        [ 0.149019, -0.443329,  0.059857, -0.334127],
        [ 0.175896, -0.416321,  0.063684, -0.252054],...
 y: array([[[ 1.221422e-01, -4.703378e-01,  5.602963e-02, -4.162006e-01],
        [ 1.469943e-01, -4.453642e-01,  5.956827e-02, -3.403107e-01],
        [ 1.718464e-01, -4.203906e-01,  6.310692e-02, -2.644208e-01],...
2025-05-15 02:01:20.533730 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[ 0.081941, -0.361295,  0.384148,  0.071409],
        [ 0.058679, -0.366919,  0.277998,  0.11942 ],
        [ 0.035417, -0.372542,  0.171847,  0.16743 ],...
 y: array([[[ 8.194143e-02, -3.612954e-01,  3.841479e-01,  7.140949e-02],
        [ 8.194143e-02, -3.612954e-01,  3.841479e-01,  7.140949e-02],
        [ 8.194143e-02, -3.612954e-01,  3.841479e-01,  7.140949e-02],...
2025-05-15 02:01:20.680158 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[ 3.106359e-01, -1.579932e-01,  3.961481e-01, -2.441965e-01],
        [ 2.959281e-01, -1.488317e-01,  3.161587e-01, -2.467260e-01],
        [ 2.812204e-01, -1.396702e-01,  2.361694e-01, -2.492555e-01],...
 y: array([[[ 3.106359e-01, -1.579932e-01,  3.961481e-01, -2.441965e-01],
        [ 2.957266e-01, -1.487062e-01,  3.150630e-01, -2.467606e-01],
        [ 2.808174e-01, -1.394192e-01,  2.339779e-01, -2.493248e-01],...
2025-05-15 02:01:20.831562 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 3.017861e-01,  3.581337e-01, -2.252793e-01,  2.153598e-01],
        [ 3.017861e-01,  3.581337e-01, -2.252793e-01,  2.153598e-01],
        [ 3.017861e-01,  3.581337e-01, -2.252793e-01,  2.153598e-01],...
 y: array([[[ 3.017861e-01,  3.581337e-01, -2.252793e-01,  2.153598e-01],
        [ 3.017861e-01,  3.581337e-01, -2.252793e-01,  2.153598e-01],
        [ 3.017861e-01,  3.581337e-01, -2.252793e-01,  2.153598e-01],...
2025-05-15 02:01:21.008290 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 2.793095e-01,  2.754571e-01,  1.730237e-01, -2.912369e-01],
        [ 1.870030e-01,  3.005789e-01,  1.017595e-01, -1.945801e-01],
        [ 9.469661e-02,  3.257006e-01,  3.049535e-02, -9.792338e-02],...
 y: array([[[ 2.793095e-01,  2.754571e-01,  1.730237e-01, -2.912369e-01],
        [ 1.939884e-01,  2.986777e-01,  1.071525e-01, -2.018947e-01],
        [ 1.086673e-01,  3.218983e-01,  4.128128e-02, -1.125525e-01],...
2025-05-15 02:01:21.170257 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 0.138445, -0.07319 , -0.150844,  0.247177],
        [ 0.121668, -0.041608, -0.100816,  0.194293],
        [ 0.104892, -0.010026, -0.050788,  0.141409],...
 y: array([[[ 1.384449e-01, -7.319006e-02, -1.508442e-01,  2.471772e-01],
        [ 1.384449e-01, -7.319006e-02, -1.508442e-01,  2.471772e-01],
        [ 1.384449e-01, -7.319006e-02, -1.508442e-01,  2.471772e-01],...
2025-05-15 02:01:21.360444 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 1.493846e-01,  3.812855e-01, -9.713666e-02,  2.807944e-01],
        [ 9.619308e-02,  3.474044e-01, -6.265052e-02,  2.982025e-01],
        [ 4.300157e-02,  3.135233e-01, -2.816438e-02,  3.156107e-01],...
 y: array([[[ 0.149385,  0.381285, -0.097137,  0.280794],
        [ 0.095474,  0.346947, -0.062184,  0.298438],
        [ 0.041564,  0.312608, -0.027232,  0.316081],...
2025-05-15 02:01:21.523646 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 0.419662, -0.030164,  0.359444, -0.199434],
        [ 0.419662, -0.030164,  0.359444, -0.199434],
        [ 0.419662, -0.030164,  0.359444, -0.199434],...
 y: array([[[ 0.419662, -0.030164,  0.359444, -0.199434],
        [ 0.419662, -0.030164,  0.359444, -0.199434],
        [ 0.419662, -0.030164,  0.359444, -0.199434],...
2025-05-15 02:01:21.667603 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[-4.212781e-01, -8.019404e-02, -2.614186e-01, -1.381413e-01],
        [-3.771712e-01, -5.105054e-02, -2.912283e-01, -1.704269e-01],
        [-3.330643e-01, -2.190704e-02, -3.210381e-01, -2.027125e-01],...
 y: array([[[-0.421278, -0.080194, -0.261419, -0.138141],
        [-0.380523, -0.053265, -0.288963, -0.167973],
        [-0.339769, -0.026337, -0.316507, -0.197805],...
2025-05-15 02:01:21.853420 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 4.210921e-01, -3.475779e-01,  2.087344e-01, -2.659942e-01],
        [ 3.990730e-01, -3.038468e-01,  2.336106e-01, -2.932080e-01],
        [ 3.770539e-01, -2.601157e-01,  2.584867e-01, -3.204219e-01],...
 y: array([[[ 4.210921e-01, -3.475779e-01,  2.087344e-01, -2.659942e-01],
        [ 4.210921e-01, -3.475779e-01,  2.087344e-01, -2.659942e-01],
        [ 4.210921e-01, -3.475779e-01,  2.087344e-01, -2.659942e-01],...
2025-05-15 02:01:22.042733 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 1.623606e-01,  7.033178e-02,  5.161310e-02, -4.423053e-01],
        [ 1.057652e-01,  2.970010e-02,  3.020572e-02, -3.677048e-01],
        [ 4.916985e-02, -1.093157e-02,  8.798347e-03, -2.931044e-01],...
 y: array([[[ 1.623606e-01,  7.033178e-02,  5.161310e-02, -4.423053e-01],
        [ 1.050106e-01,  2.915835e-02,  2.992029e-02, -3.667102e-01],
        [ 4.766063e-02, -1.201508e-02,  8.227484e-03, -2.911150e-01],...
2025-05-15 02:01:22.223340 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[-0.254308, -0.174243, -0.375182, -0.459386],
        [-0.254308, -0.174243, -0.375182, -0.459386],
        [-0.254308, -0.174243, -0.375182, -0.459386],...
 y: array([[[-0.254308, -0.174243, -0.375182, -0.459386],
        [-0.254308, -0.174243, -0.375182, -0.459386],
        [-0.254308, -0.174243, -0.375182, -0.459386],...
2025-05-15 02:01:22.382222 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[-3.879523e-01, -1.203387e-01, -4.099964e-01,  2.291919e-01],
        [-3.034713e-01, -4.648093e-02, -3.115099e-01,  2.317218e-01],
        [-2.189904e-01,  2.737682e-02, -2.130234e-01,  2.342518e-01],...
 y: array([[[-3.879523e-01, -1.203387e-01, -4.099964e-01,  2.291919e-01],
        [-3.099185e-01, -5.211743e-02, -3.190260e-01,  2.315288e-01],
        [-2.318848e-01,  1.610380e-02, -2.280556e-01,  2.338656e-01],...
2025-05-15 02:01:22.529803 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[ 0.029487, -0.319376,  0.260541, -0.193238],
        [ 0.081585, -0.304514,  0.253834, -0.194475],
        [ 0.133682, -0.289651,  0.247127, -0.195712],...
 y: array([[[ 2.948723e-02, -3.193759e-01,  2.605414e-01, -1.932382e-01],
        [ 2.948723e-02, -3.193759e-01,  2.605414e-01, -1.932382e-01],
        [ 2.948723e-02, -3.193759e-01,  2.605414e-01, -1.932382e-01],...
2025-05-15 02:01:22.677333 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[ 0.251538,  0.499967,  0.206801,  0.209173],
        [ 0.264333,  0.396007,  0.187722,  0.13692 ],
        [ 0.277128,  0.292048,  0.168644,  0.064667],...
 y: array([[[ 2.515379e-01,  4.999669e-01,  2.068011e-01,  2.091729e-01],
        [ 2.645014e-01,  3.946393e-01,  1.874714e-01,  1.359691e-01],
        [ 2.774648e-01,  2.893118e-01,  1.681417e-01,  6.276533e-02],...
2025-05-15 02:01:22.858859 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[ 1.236075e-01,  1.359099e-01,  2.762954e-01,  3.794419e-01],
        [ 1.236075e-01,  1.359099e-01,  2.762954e-01,  3.794419e-01],
        [ 1.236075e-01,  1.359099e-01,  2.762954e-01,  3.794419e-01],...
 y: array([[[ 1.236075e-01,  1.359099e-01,  2.762954e-01,  3.794419e-01],
        [ 1.236075e-01,  1.359099e-01,  2.762954e-01,  3.794419e-01],
        [ 1.236075e-01,  1.359099e-01,  2.762954e-01,  3.794419e-01],...
2025-05-15 02:01:23.034123 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[ 0.280346,  0.046373, -0.25694 , -0.286536],
        [ 0.18424 ,  0.044104, -0.21068 , -0.211076],
        [ 0.088135,  0.041836, -0.16442 , -0.135615],...
 y: array([[[ 2.803457e-01,  4.637255e-02, -2.569399e-01, -2.865362e-01],
        [ 1.916042e-01,  4.427787e-02, -2.142244e-01, -2.168576e-01],
        [ 1.028626e-01,  4.218318e-02, -1.715090e-01, -1.471789e-01],...
2025-05-15 02:01:23.213880 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[ 2.233649e-01,  3.017423e-01, -4.080822e-02,  3.131897e-01],
        [ 2.465680e-01,  2.450645e-01, -3.126562e-02,  2.734705e-01],
        [ 2.697712e-01,  1.883866e-01, -2.172302e-02,  2.337513e-01],...
 y: array([[[ 2.233649e-01,  3.017423e-01, -4.080822e-02,  3.131897e-01],
        [ 2.233649e-01,  3.017423e-01, -4.080822e-02,  3.131897e-01],
        [ 2.233649e-01,  3.017423e-01, -4.080822e-02,  3.131897e-01],...
2025-05-15 02:01:23.374166 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[-0.328968,  0.025067, -0.46782 , -0.196936],
        [-0.245549,  0.011478, -0.393086, -0.122749],
        [-0.162129, -0.002111, -0.318352, -0.048561],...
 y: array([[[-3.289684e-01,  2.506694e-02, -4.678195e-01, -1.969364e-01],
        [-2.444652e-01,  1.130156e-02, -3.921150e-01, -1.217851e-01],
        [-1.599621e-01, -2.463813e-03, -3.164106e-01, -4.663382e-02],...
2025-05-15 02:01:23.561044 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[-0.371568, -0.275695,  0.041546, -0.431623],
        [-0.371568, -0.275695,  0.041546, -0.431623],
        [-0.371568, -0.275695,  0.041546, -0.431623],...
 y: array([[[-0.371568, -0.275695,  0.041546, -0.431623],
        [-0.371568, -0.275695,  0.041546, -0.431623],
        [-0.371568, -0.275695,  0.041546, -0.431623],...
2025-05-15 02:01:23.718772 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[-2.424661e-01,  3.794208e-01,  3.392779e-01, -3.138193e-01],
        [-2.501651e-01,  3.502699e-01,  2.909239e-01, -2.852700e-01],
        [-2.578641e-01,  3.211188e-01,  2.425699e-01, -2.567207e-01],...
 y: array([[[-0.242466,  0.379421,  0.339278, -0.313819],
        [-0.249573,  0.352512,  0.294643, -0.287466],
        [-0.25668 ,  0.325604,  0.250009, -0.261113],...
2025-05-15 02:01:23.890926 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[ 0.225155,  0.145657,  0.169059,  0.067796],
        [ 0.148401,  0.142012,  0.151738,  0.071276],
        [ 0.071646,  0.138368,  0.134416,  0.074756],...
 y: array([[[ 0.225155,  0.145657,  0.169059,  0.067796],
        [ 0.225155,  0.145657,  0.169059,  0.067796],
        [ 0.225155,  0.145657,  0.169059,  0.067796],...
2025-05-15 02:01:24.075351 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[ 4.532593e-01, -1.773010e-02,  4.752603e-01,  2.971354e-02],
        [ 4.559973e-01, -1.676638e-02,  4.388046e-01,  3.689567e-02],
        [ 4.587353e-01, -1.580267e-02,  4.023488e-01,  4.407779e-02],...
 y: array([[[ 0.453259, -0.01773 ,  0.47526 ,  0.029714],
        [ 0.456032, -0.016754,  0.438337,  0.036988],
        [ 0.458806, -0.015778,  0.401414,  0.044262],...
2025-05-15 02:01:24.236584 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[-0.230103,  0.211256,  0.12915 , -0.302103],
        [-0.230103,  0.211256,  0.12915 , -0.302103],
        [-0.230103,  0.211256,  0.12915 , -0.302103],...
 y: array([[[-0.230103,  0.211256,  0.12915 , -0.302103],
        [-0.230103,  0.211256,  0.12915 , -0.302103],
        [-0.230103,  0.211256,  0.12915 , -0.302103],...
2025-05-15 02:01:24.390200 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[-1.728274e-01,  4.210937e-01,  4.075634e-01, -4.922980e-01],
        [-1.918617e-01,  3.292852e-01,  3.945861e-01, -4.678948e-01],
        [-2.108961e-01,  2.374768e-01,  3.816088e-01, -4.434917e-01],...
 y: array([[[-0.172827,  0.421094,  0.407563, -0.492298],
        [-0.190392,  0.336374,  0.395588, -0.469779],
        [-0.207957,  0.251655,  0.383613, -0.44726 ],...
2025-05-15 02:01:24.539974 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[ 0.396352, -0.202541, -0.151592,  0.230123],
        [ 0.372637, -0.144872, -0.090066,  0.218053],
        [ 0.348922, -0.087204, -0.02854 ,  0.205984],...
 y: array([[[ 3.963516e-01, -2.025406e-01, -1.515918e-01,  2.301231e-01],
        [ 3.963516e-01, -2.025406e-01, -1.515918e-01,  2.301231e-01],
        [ 3.963516e-01, -2.025406e-01, -1.515918e-01,  2.301231e-01],...
2025-05-15 02:01:24.722983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[-0.214262, -0.377848,  0.415249, -0.347944],
        [-0.153796, -0.371283,  0.422943, -0.290167],
        [-0.09333 , -0.364717,  0.430637, -0.23239 ],...
 y: array([[[-2.142622e-01, -3.778484e-01,  4.152490e-01, -3.479437e-01],
        [-1.530305e-01, -3.711995e-01,  4.230406e-01, -2.894353e-01],
        [-9.179878e-02, -3.645506e-01,  4.308322e-01, -2.309269e-01],...
2025-05-15 02:01:24.898415 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[-0.157589, -0.052153, -0.301221, -0.348041],
        [-0.157589, -0.052153, -0.301221, -0.348041],
        [-0.157589, -0.052153, -0.301221, -0.348041],...
 y: array([[[-0.157589, -0.052153, -0.301221, -0.348041],
        [-0.157589, -0.052153, -0.301221, -0.348041],
        [-0.157589, -0.052153, -0.301221, -0.348041],...
2025-05-15 02:01:25.080181 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[-2.788582e-01,  3.383743e-01,  4.561230e-01, -4.027005e-01],
        [-2.831720e-01,  3.312318e-01,  3.719004e-01, -3.781163e-01],
        [-2.874859e-01,  3.240893e-01,  2.876778e-01, -3.535321e-01],...
 y: array([[[-2.788582e-01,  3.383743e-01,  4.561230e-01, -4.027005e-01],
        [-2.828377e-01,  3.317854e-01,  3.784276e-01, -3.800216e-01],
        [-2.868172e-01,  3.251964e-01,  3.007323e-01, -3.573426e-01],...
2025-05-15 02:01:25.241059 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[ 5.898916e-02, -2.975606e-01,  2.098432e-02,  1.716188e-01],
        [ 7.186833e-02, -2.562580e-01,  1.567667e-02,  1.754237e-01],
        [ 8.474751e-02, -2.149553e-01,  1.036902e-02,  1.792287e-01],...
 y: array([[[ 5.898916e-02, -2.975606e-01,  2.098432e-02,  1.716188e-01],
        [ 5.898916e-02, -2.975606e-01,  2.098432e-02,  1.716188e-01],
        [ 5.898916e-02, -2.975606e-01,  2.098432e-02,  1.716188e-01],...
2025-05-15 02:01:25.389868 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[-2.994790e-01,  4.477060e-01,  1.352797e-01, -4.646833e-01],
        [-2.167580e-01,  3.449300e-01,  8.699325e-02, -4.364428e-01],
        [-1.340370e-01,  2.421539e-01,  3.870681e-02, -4.082023e-01],...
 y: array([[[-2.994790e-01,  4.477060e-01,  1.352797e-01, -4.646833e-01],
        [-2.157240e-01,  3.436453e-01,  8.638968e-02, -4.360898e-01],
        [-1.319690e-01,  2.395845e-01,  3.749965e-02, -4.074963e-01],...
2025-05-15 02:01:25.575115 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[ 2.695271e-01, -3.187455e-03, -7.332711e-02,  8.663590e-02],
        [ 2.695271e-01, -3.187455e-03, -7.332711e-02,  8.663590e-02],
        [ 2.695271e-01, -3.187455e-03, -7.332711e-02,  8.663590e-02],...
 y: array([[[ 2.695271e-01, -3.187455e-03, -7.332711e-02,  8.663590e-02],
        [ 2.695271e-01, -3.187455e-03, -7.332711e-02,  8.663590e-02],
        [ 2.695271e-01, -3.187455e-03, -7.332711e-02,  8.663590e-02],...
2025-05-15 02:01:25.748520 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[ 0.099733,  0.155701,  0.198224, -0.228465],
        [ 0.091795,  0.103609,  0.182031, -0.228194],
        [ 0.083858,  0.051517,  0.165838, -0.227923],...
 y: array([[[ 9.973311e-02,  1.557007e-01,  1.982243e-01, -2.284647e-01],
        [ 9.241280e-02,  1.076605e-01,  1.832906e-01, -2.282150e-01],
        [ 8.509248e-02,  5.962028e-02,  1.683569e-01, -2.279653e-01],...
2025-05-15 02:01:25.906164 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[ 0.378011, -0.38857 ,  0.097877, -0.295596],
        [ 0.366967, -0.398661,  0.089101, -0.292198],
        [ 0.355923, -0.408751,  0.080324, -0.2888  ],...
 y: array([[[ 0.378011, -0.38857 ,  0.097877, -0.295596],
        [ 0.378011, -0.38857 ,  0.097877, -0.295596],
        [ 0.378011, -0.38857 ,  0.097877, -0.295596],...
2025-05-15 02:01:26.085497 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[-0.225676,  0.419715, -0.068075,  0.227071],
        [-0.209533,  0.354745, -0.046686,  0.185736],
        [-0.19339 ,  0.289775, -0.025296,  0.144402],...
 y: array([[[-2.256764e-01,  4.197153e-01, -6.807512e-02,  2.270706e-01],
        [-2.093337e-01,  3.539431e-01, -4.642149e-02,  1.852258e-01],
        [-1.929909e-01,  2.881710e-01, -2.476785e-02,  1.433810e-01],...
2025-05-15 02:01:26.262056 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[ 1.732056e-01, -4.243867e-01, -2.394278e-01,  3.667454e-01],
        [ 1.732056e-01, -4.243867e-01, -2.394278e-01,  3.667454e-01],
        [ 1.732056e-01, -4.243867e-01, -2.394278e-01,  3.667454e-01],...
 y: array([[[ 1.732056e-01, -4.243867e-01, -2.394278e-01,  3.667454e-01],
        [ 1.732056e-01, -4.243867e-01, -2.394278e-01,  3.667454e-01],
        [ 1.732056e-01, -4.243867e-01, -2.394278e-01,  3.667454e-01],...
2025-05-15 02:01:26.424976 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[ 2.417051e-01, -9.266989e-03,  1.947363e-01,  4.196911e-01],
        [ 2.146901e-01,  6.475740e-03,  1.152701e-01,  3.346613e-01],
        [ 1.876751e-01,  2.221847e-02,  3.580397e-02,  2.496315e-01],...
 y: array([[[ 0.241705, -0.009267,  0.194736,  0.419691],
        [ 0.216799,  0.005247,  0.121472,  0.341298],
        [ 0.191892,  0.019761,  0.048208,  0.262904],...
2025-05-15 02:01:26.608698 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[ 3.765725e-01, -8.552641e-02, -2.119203e-01,  7.298367e-02],
        [ 3.508445e-01, -2.622075e-02, -1.607361e-01,  2.205856e-02],
        [ 3.251166e-01,  3.308491e-02, -1.095518e-01, -2.886655e-02],...
 y: array([[[ 3.765725e-01, -8.552641e-02, -2.119203e-01,  7.298367e-02],
        [ 3.765725e-01, -8.552641e-02, -2.119203e-01,  7.298367e-02],
        [ 3.765725e-01, -8.552641e-02, -2.119203e-01,  7.298367e-02],...
2025-05-15 02:01:26.784335 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[ 0.334656,  0.409651, -0.478082, -0.050931],
        [ 0.329569,  0.377685, -0.399154, -0.023498],
        [ 0.324482,  0.345718, -0.320225,  0.003935],...
 y: array([[[ 0.334656,  0.409651, -0.478082, -0.050931],
        [ 0.329507,  0.377295, -0.398191, -0.023164],
        [ 0.324358,  0.344938, -0.3183  ,  0.004604],...
2025-05-15 02:01:26.947922 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[ 0.496674,  0.431265, -0.380054, -0.330284],
        [ 0.496674,  0.431265, -0.380054, -0.330284],
        [ 0.496674,  0.431265, -0.380054, -0.330284],...
 y: array([[[ 0.496674,  0.431265, -0.380054, -0.330284],
        [ 0.496674,  0.431265, -0.380054, -0.330284],
        [ 0.496674,  0.431265, -0.380054, -0.330284],...
2025-05-15 02:01:27.127379 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[-0.129673,  0.293098, -0.436986,  0.362006],
        [-0.074661,  0.313336, -0.32702 ,  0.265988],
        [-0.019649,  0.333575, -0.217054,  0.16997 ],...
 y: array([[[-0.129673,  0.293098, -0.436986,  0.362006],
        [-0.07897 ,  0.311751, -0.335632,  0.273508],
        [-0.028266,  0.330405, -0.234278,  0.185009],...
2025-05-15 02:01:27.306208 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[ 0.068432, -0.281376,  0.236177, -0.251303],
        [ 0.072939, -0.276533,  0.226253, -0.27335 ],
        [ 0.077446, -0.27169 ,  0.216329, -0.295396],...
 y: array([[[ 6.843159e-02, -2.813762e-01,  2.361767e-01, -2.513033e-01],
        [ 6.843159e-02, -2.813762e-01,  2.361767e-01, -2.513033e-01],
        [ 6.843159e-02, -2.813762e-01,  2.361767e-01, -2.513033e-01],...
2025-05-15 02:01:27.479872 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[-1.204566e-01,  3.449812e-01,  2.693617e-01,  2.545659e-01],
        [-6.054810e-02,  3.094413e-01,  2.870389e-01,  1.875322e-01],
        [-6.396080e-04,  2.739014e-01,  3.047162e-01,  1.204986e-01],...
 y: array([[[-1.204566e-01,  3.449812e-01,  2.693617e-01,  2.545659e-01],
        [-5.982631e-02,  3.090131e-01,  2.872519e-01,  1.867246e-01],
        [ 8.039693e-04,  2.730451e-01,  3.051421e-01,  1.188833e-01],...
2025-05-15 02:01:27.642932 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[-6.068371e-02, -1.697476e-01,  4.254731e-01,  3.826342e-01],
        [-6.068371e-02, -1.697476e-01,  4.254731e-01,  3.826342e-01],
        [-6.068371e-02, -1.697476e-01,  4.254731e-01,  3.826342e-01],...
 y: array([[[-6.068371e-02, -1.697476e-01,  4.254731e-01,  3.826342e-01],
        [-6.068371e-02, -1.697476e-01,  4.254731e-01,  3.826342e-01],
        [-6.068371e-02, -1.697476e-01,  4.254731e-01,  3.826342e-01],...
2025-05-15 02:01:27.843442 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[ 1.430796e-01,  3.972966e-01, -3.524773e-01,  3.140441e-01],
        [ 1.556943e-01,  3.420281e-01, -2.939629e-01,  2.829462e-01],
        [ 1.683090e-01,  2.867597e-01, -2.354485e-01,  2.518483e-01],...
 y: array([[[ 1.430796e-01,  3.972966e-01, -3.524773e-01,  3.140441e-01],
        [ 1.547032e-01,  3.463707e-01, -2.985605e-01,  2.853896e-01],
        [ 1.663267e-01,  2.954448e-01, -2.446436e-01,  2.567351e-01],...
2025-05-15 02:01:28.027698 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[ 3.241026e-01,  1.535101e-01,  7.139987e-02, -4.985167e-01],
        [ 2.798105e-01,  1.658301e-01,  2.608565e-02, -4.184616e-01],
        [ 2.355185e-01,  1.781501e-01, -1.922857e-02, -3.384065e-01],...
 y: array([[[ 0.324103,  0.15351 ,  0.0714  , -0.498517],
        [ 0.324103,  0.15351 ,  0.0714  , -0.498517],
        [ 0.324103,  0.15351 ,  0.0714  , -0.498517],...
2025-05-15 02:01:28.190229 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[ 7.049936e-02,  8.895703e-02, -2.888155e-01,  3.329477e-01],
        [ 1.053250e-01,  8.142611e-02, -2.180922e-01,  2.480772e-01],
        [ 1.401507e-01,  7.389518e-02, -1.473689e-01,  1.632067e-01],...
 y: array([[[ 7.049936e-02,  8.895703e-02, -2.888155e-01,  3.329477e-01],
        [ 1.057396e-01,  8.133645e-02, -2.172502e-01,  2.470668e-01],
        [ 1.409799e-01,  7.371587e-02, -1.456850e-01,  1.611859e-01],...
2025-05-15 02:01:28.338009 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[-0.47954 ,  0.433713,  0.066535, -0.16818 ],
        [-0.47954 ,  0.433713,  0.066535, -0.16818 ],
        [-0.47954 ,  0.433713,  0.066535, -0.16818 ],...
 y: array([[[-0.47954 ,  0.433713,  0.066535, -0.16818 ],
        [-0.47954 ,  0.433713,  0.066535, -0.16818 ],
        [-0.47954 ,  0.433713,  0.066535, -0.16818 ],...
2025-05-15 02:01:28.519385 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[ 0.054918, -0.075452, -0.307061,  0.047124],
        [ 0.058344, -0.053557, -0.233061,  0.006381],
        [ 0.061769, -0.031662, -0.159061, -0.034361],...
 y: array([[[ 5.491837e-02, -7.545213e-02, -3.070607e-01,  4.712389e-02],
        [ 5.807378e-02, -5.528284e-02, -2.388938e-01,  9.592905e-03],
        [ 6.122919e-02, -3.511354e-02, -1.707269e-01, -2.793808e-02],...
2025-05-15 02:01:28.681484 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[-0.323819,  0.238449, -0.123596,  0.260232],
        [-0.242349,  0.171913, -0.060748,  0.23493 ],
        [-0.160879,  0.105378,  0.002101,  0.209628],...
 y: array([[[-0.323819,  0.238449, -0.123596,  0.260232],
        [-0.323819,  0.238449, -0.123596,  0.260232],
        [-0.323819,  0.238449, -0.123596,  0.260232],...
2025-05-15 02:01:28.861728 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[-3.243220e-01,  4.926106e-01, -1.246093e-01, -2.914269e-01],
        [-2.420007e-01,  4.063434e-01, -6.722723e-02, -2.320542e-01],
        [-1.596794e-01,  3.200762e-01, -9.845128e-03, -1.726815e-01],...
 y: array([[[-3.243220e-01,  4.926106e-01, -1.246093e-01, -2.914269e-01],
        [-2.410322e-01,  4.053285e-01, -6.655214e-02, -2.313557e-01],
        [-1.577424e-01,  3.180464e-01, -8.494957e-03, -1.712845e-01],...
2025-05-15 02:01:29.035480 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[ 2.220185e-02, -1.176194e-01, -3.251289e-01,  3.235957e-01],
        [ 2.220185e-02, -1.176194e-01, -3.251289e-01,  3.235957e-01],
        [ 2.220185e-02, -1.176194e-01, -3.251289e-01,  3.235957e-01],...
 y: array([[[ 2.220185e-02, -1.176194e-01, -3.251289e-01,  3.235957e-01],
        [ 2.220185e-02, -1.176194e-01, -3.251289e-01,  3.235957e-01],
        [ 2.220185e-02, -1.176194e-01, -3.251289e-01,  3.235957e-01],...
2025-05-15 02:01:29.222387 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[-0.395614,  0.381953, -0.037136,  0.12182 ],
        [-0.333452,  0.366686, -0.056963,  0.087502],
        [-0.271291,  0.35142 , -0.076789,  0.053183],...
 y: array([[[-3.956136e-01,  3.819526e-01, -3.713632e-02,  1.218203e-01],
        [-3.383673e-01,  3.678936e-01, -5.539494e-02,  9.021533e-02],
        [-2.811210e-01,  3.538346e-01, -7.365355e-02,  5.861037e-02],...
2025-05-15 02:01:29.386482 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[ 2.679566e-01, -5.210277e-02, -4.578955e-01, -6.155165e-02],
        [ 2.110929e-01,  2.793221e-03, -4.192011e-01, -8.635119e-02],
        [ 1.542293e-01,  5.768922e-02, -3.805068e-01, -1.111507e-01],...
 y: array([[[ 0.267957, -0.052103, -0.457895, -0.061552],
        [ 0.267957, -0.052103, -0.457895, -0.061552],
        [ 0.267957, -0.052103, -0.457895, -0.061552],...
2025-05-15 02:01:29.573673 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[-3.371513e-01,  3.397183e-01,  2.988618e-01, -4.229141e-01],
        [-2.794510e-01,  2.639623e-01,  2.319469e-01, -3.305725e-01],
        [-2.217507e-01,  1.882063e-01,  1.650320e-01, -2.382309e-01],...
 y: array([[[-3.371513e-01,  3.397183e-01,  2.988618e-01, -4.229141e-01],
        [-2.787801e-01,  2.630814e-01,  2.311688e-01, -3.294988e-01],
        [-2.204089e-01,  1.864445e-01,  1.634758e-01, -2.360835e-01],...
2025-05-15 02:01:29.752120 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[-1.385551e-02, -3.351711e-01,  3.862525e-01, -2.252769e-01],
        [-1.385551e-02, -3.351711e-01,  3.862525e-01, -2.252769e-01],
        [-1.385551e-02, -3.351711e-01,  3.862525e-01, -2.252769e-01],...
 y: array([[[-1.385551e-02, -3.351711e-01,  3.862525e-01, -2.252769e-01],
        [-1.385551e-02, -3.351711e-01,  3.862525e-01, -2.252769e-01],
        [-1.385551e-02, -3.351711e-01,  3.862525e-01, -2.252769e-01],...
2025-05-15 02:01:29.928008 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[-3.360049e-02, -2.315245e-01, -2.366475e-01, -1.327338e-01],
        [ 1.858767e-02, -1.743463e-01, -1.994890e-01, -1.557443e-01],
        [ 7.077583e-02, -1.171681e-01, -1.623305e-01, -1.787548e-01],...
 y: array([[[-3.360049e-02, -2.315245e-01, -2.366475e-01, -1.327338e-01],
        [ 1.444861e-02, -1.788811e-01, -2.024360e-01, -1.539193e-01],
        [ 6.249770e-02, -1.262378e-01, -1.682246e-01, -1.751049e-01],...
2025-05-15 02:01:30.105950 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[ 2.189035e-01, -1.767525e-01, -3.407354e-01,  8.259808e-02],
        [ 2.424338e-01, -1.647335e-01, -2.797456e-01,  3.822289e-02],
        [ 2.659641e-01, -1.527146e-01, -2.187558e-01, -6.152291e-03],...
 y: array([[[ 0.218904, -0.176752, -0.340735,  0.082598],
        [ 0.218904, -0.176752, -0.340735,  0.082598],
        [ 0.218904, -0.176752, -0.340735,  0.082598],...
2025-05-15 02:01:30.285280 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[ 4.200945e-01,  3.741588e-01,  1.052946e-02,  4.487223e-01],
        [ 4.163044e-01,  3.309910e-01, -2.113112e-02,  4.208145e-01],
        [ 4.125143e-01,  2.878233e-01, -5.279170e-02,  3.929068e-01],...
 y: array([[[ 0.420095,  0.374159,  0.010529,  0.448722],
        [ 0.416261,  0.330495, -0.021495,  0.420494],
        [ 0.412427,  0.286831, -0.05352 ,  0.392265],...
2025-05-15 02:01:30.467371 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.65938246
Max relative difference: 22.257023
 x: array([[[-0.287368,  0.053902, -0.101585, -0.27701 ],
        [-0.15479 , -0.335225,  0.209003,  0.387918],
        [ 0.240331,  0.339635,  0.325756,  0.261377],...
 y: array([[[-0.287368,  0.053902, -0.101585, -0.27701 ],
        [-0.15479 , -0.335225,  0.209003,  0.387918],
        [ 0.240331,  0.339635,  0.325756,  0.261377],...
2025-05-15 02:01:30.635783 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 34 / 88 (38.6%)
Max absolute difference: 0.06322625
Max relative difference: 2.9222007
 x: array([[[-0.107344, -0.224949, -0.058209, -0.316188],
        [ 0.410036,  0.430693,  0.090497,  0.255861],
        [-0.086463, -0.129319,  0.333515, -0.048634],...
 y: array([[[-0.107344, -0.224949, -0.058209, -0.316188],
        [ 0.404862,  0.424136,  0.08901 ,  0.25014 ],
        [-0.074279, -0.115418,  0.328445, -0.040597],...
2025-05-15 02:01:30.787853 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 17 / 88 (19.3%)
Max absolute difference: 0.02657858
Max relative difference: 23.437145
 x: array([[[ 0.248951,  0.218608, -0.261783,  0.317213],
        [ 0.418269,  0.074869,  0.396037,  0.263784],
        [-0.010772,  0.212229, -0.123356,  0.317256],...
 y: array([[[ 0.248951,  0.218608, -0.261783,  0.317213],
        [ 0.411427,  0.080677,  0.369458,  0.265943],
        [ 0.004496,  0.207002, -0.103158,  0.315231],...
2025-05-15 02:01:30.968170 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.75303245
Max relative difference: 52.8534
 x: array([[[-0.075852, -0.032846, -0.271854, -0.248474],
        [ 0.107487, -0.299459, -0.448631, -0.403413],
        [-0.276535, -0.091052, -0.115943, -0.207571],...
 y: array([[[-0.075852, -0.032846, -0.271854, -0.248474],
        [ 0.107487, -0.299459, -0.448631, -0.403413],
        [-0.276535, -0.091052, -0.115943, -0.207571],...
2025-05-15 02:01:31.142190 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.7938634
Max relative difference: 16.375315
 x: array([[[ 0.312091,  0.229775,  0.460563,  0.181664],
        [-0.459618, -0.52173 , -0.366098,  0.397542],
        [-0.159986, -0.56553 , -0.092062,  0.520349],...
 y: array([[[ 0.312091,  0.229775,  0.460563,  0.181664],
        [-0.459618, -0.52173 , -0.366098,  0.397542],
        [-0.159986, -0.56553 , -0.092062,  0.520349],...
2025-05-15 02:01:31.311281 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 76 / 112 (67.9%)
Max absolute difference: 0.15559839
Max relative difference: 3138.2341
 x: array([[[-0.123493,  0.059168,  0.213097,  0.130792],
        [-0.238047, -0.127376,  0.341973, -0.118468],
        [-0.271486,  0.059862,  0.096296, -0.070518],...
 y: array([[[-1.234927e-01,  5.916834e-02,  2.130966e-01,  1.307915e-01],
        [-2.345225e-01, -1.216362e-01,  3.380073e-01, -1.107982e-01],
        [-2.727561e-01,  3.300485e-02,  1.267809e-01, -8.566191e-02],...
2025-05-15 02:01:31.482600 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 48 / 112 (42.9%)
Max absolute difference: 0.11545879
Max relative difference: 9.266766
 x: array([[[-2.363245e-01,  3.851954e-01, -4.207629e-01, -1.572199e-01],
        [-3.530443e-01, -2.245766e-01, -3.948254e-01,  2.343727e-01],
        [-1.567427e-01, -4.080504e-01, -2.901003e-01,  6.459332e-02],...
 y: array([[[-2.363245e-01,  3.851954e-01, -4.207629e-01, -1.572199e-01],
        [-3.326647e-01, -1.181085e-01, -3.993542e-01,  1.659994e-01],
        [-2.205596e-01, -4.305596e-01, -3.140653e-01,  1.530043e-01],...
2025-05-15 02:01:31.651967 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.0595866
Max relative difference: 64.38231
 x: array([[[-0.610548, -0.336508, -0.205201, -0.175625],
        [-0.571295,  0.06505 , -0.062528,  0.175548],
        [-0.157248,  0.576495,  0.487651, -0.231083],...
 y: array([[[-0.610548, -0.336508, -0.205201, -0.175625],
        [-0.571295,  0.06505 , -0.062528,  0.175548],
        [-0.157248,  0.576495,  0.487651, -0.231083],...
2025-05-15 02:01:31.819671 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 80 (46.2%)
Max absolute difference: 0.8915336
Max relative difference: 12.377071
 x: array([[[ 0.119081,  0.106554, -0.029513,  0.451608],
        [ 0.340539,  0.037145, -0.230657, -0.220882],
        [-0.160594,  0.096302,  0.191715,  0.364335],...
 y: array([[[ 0.119081,  0.106554, -0.029513,  0.451608],
        [ 0.340539,  0.037145, -0.230657, -0.220882],
        [-0.160594,  0.096302,  0.191715,  0.364335],...
2025-05-15 02:01:31.983245 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 91 / 136 (66.9%)
Max absolute difference: 0.32780817
Max relative difference: 69.50639
 x: array([[[ 0.188443, -0.123938,  0.308476, -0.179323],
        [ 0.196956, -0.059104, -0.00538 ,  0.194491],
        [ 0.223447,  0.011955, -0.240511,  0.356099],...
 y: array([[[ 0.188443, -0.123938,  0.308476, -0.179323],
        [ 0.196584, -0.06194 ,  0.008351,  0.178137],
        [ 0.217459,  0.004467, -0.23601 ,  0.385284],...
2025-05-15 02:01:32.150650 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 90 / 136 (66.2%)
Max absolute difference: 0.16446109
Max relative difference: 31.936562
 x: array([[[ 0.392903, -0.304081, -0.181033, -0.301349],
        [ 0.363141, -0.081535,  0.025144,  0.002346],
        [ 0.247477,  0.133311,  0.177893,  0.17669 ],...
 y: array([[[ 0.392903, -0.304081, -0.181033, -0.301349],
        [ 0.372672, -0.152808, -0.040887, -0.094916],
        [ 0.341548,  0.07992 ,  0.174724,  0.222674],...
2025-05-15 02:01:32.320441 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 80 (46.2%)
Max absolute difference: 0.8997346
Max relative difference: 4.9602504
 x: array([[[-2.011270e-01,  4.650912e-02,  8.955623e-02,  1.623951e-01],
        [-1.434479e-01, -5.321222e-02, -2.375930e-01, -2.051058e-01],
        [ 1.678429e-01,  8.580407e-02, -4.266312e-01, -4.412234e-02],...
 y: array([[[-2.011270e-01,  4.650912e-02,  8.955623e-02,  1.623951e-01],
        [-1.434479e-01, -5.321222e-02, -2.375930e-01, -2.051058e-01],
        [ 1.678429e-01,  8.580407e-02, -4.266312e-01, -4.412234e-02],...
2025-05-15 02:01:32.493927 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 8 / 80 (10%)
Max absolute difference: 0.41788614
Max relative difference: 2.1639857
 x: array([[[ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.292375,  0.369977,  0.179604,  0.129395],...
 y: array([[[ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.292375,  0.369977,  0.179604,  0.129395],...
2025-05-15 02:01:32.664818 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 8 / 16 (50%)
Max absolute difference: 0.54731035
Max relative difference: 3.663957
 x: array([[[-0.231183, -0.368944,  0.021622, -0.054968],
        [ 0.072802,  0.097722,  0.355233, -0.411324]],
...
 y: array([[[-0.231183, -0.368944,  0.021622, -0.054968],
        [-0.381308, -0.390502, -0.133348, -0.223746]],
...
2025-05-15 02:01:32.832245 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.7823397
Max relative difference: 21.471199
 x: array([[[ 0.110449, -0.033606, -0.025059,  0.211037],
        [-0.20986 , -0.415951,  0.189692,  0.498298]],
...
 y: array([[[-0.302755,  0.100599,  0.346662, -0.480995],
        [ 0.297326,  0.366388, -0.23951 ,  0.220439]],
...
2025-05-15 02:01:32.998094 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 8 / 80 (10%)
Max absolute difference: 0.7612984
Max relative difference: 30.81209
 x: array([[[ 0.289641,  0.215033, -0.136996, -0.455633],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
 y: array([[[ 0.289641,  0.215033, -0.136996, -0.455633],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
2025-05-15 02:01:33.172736 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.403019
Max relative difference: 18.418062
 x: array([[[-0.628236,  0.746917, -0.480459,  0.344709],
        [ 0.458464,  0.013335, -0.125108,  0.35236 ],
        [-0.186825, -0.050021, -0.102221,  0.046067],...
 y: array([[[-0.628236,  0.746917, -0.480459,  0.344709],
        [ 0.458463,  0.013335, -0.125108,  0.35236 ],
        [-0.186825, -0.050021, -0.102221,  0.046067],...
2025-05-15 02:01:33.355579 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 116 / 160 (72.5%)
Max absolute difference: 0.33425596
Max relative difference: 28.252998
 x: array([[[ 0.095505,  0.297745, -0.491593,  0.026552],
        [-0.075386, -0.018452, -0.069781,  0.183783],
        [-0.246276, -0.33465 ,  0.35203 ,  0.341015],...
 y: array([[[ 0.095505,  0.297745, -0.491593,  0.026552],
        [-0.066391, -0.00181 , -0.091982,  0.175508],
        [-0.228288, -0.301366,  0.307629,  0.324464],...
2025-05-15 02:01:33.536756 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 103 / 160 (64.4%)
Max absolute difference: 0.19706793
Max relative difference: 6.1907587
 x: array([[[-0.012103, -0.42542 ,  0.260997, -0.011821],
        [-0.019339, -0.022684,  0.061119, -0.046974],
        [-0.026574,  0.380052, -0.138758, -0.082126],...
 y: array([[[-0.012103, -0.42542 ,  0.260997, -0.011821],
        [-0.015922, -0.212865,  0.155506, -0.030374],
        [-0.023559,  0.212246, -0.055476, -0.067479],...
2025-05-15 02:01:33.712512 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.0594895
Max relative difference: 74.24603
 x: array([[[-0.405449, -0.475178, -0.530003,  0.28629 ],
        [-0.204421, -0.088082,  0.333506,  0.302417],
        [ 0.625068, -0.262396, -0.167729,  0.028546],...
 y: array([[[-0.405449, -0.475178, -0.530003,  0.28629 ],
        [-0.204421, -0.088082,  0.333506,  0.302417],
        [ 0.625068, -0.262396, -0.167729,  0.028546],...
2025-05-15 02:01:33.880099 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.2916079
Max relative difference: 20.792492
 x: array([[[-0.366312,  0.807304,  0.15617 ,  0.379157],
        [-0.172717,  0.189189, -0.21681 ,  0.139474],
        [-0.512823, -0.092224,  0.009957, -0.285887],...
 y: array([[[-0.366312,  0.807304,  0.15617 ,  0.379157],
        [-0.172717,  0.189189, -0.21681 ,  0.139474],
        [-0.512823, -0.092224,  0.009957, -0.285887],...
2025-05-15 02:01:34.051903 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 132 / 184 (71.7%)
Max absolute difference: 0.41326588
Max relative difference: 808.66406
 x: array([[[ 0.244485,  0.355701, -0.250131,  0.420639],
        [ 0.127601,  0.20899 , -0.307724,  0.349801],
        [ 0.010718,  0.062278, -0.365318,  0.278963],...
 y: array([[[ 2.444852e-01,  3.557011e-01, -2.501306e-01,  4.206393e-01],
        [ 1.345081e-01,  2.176590e-01, -3.043212e-01,  3.539869e-01],
        [ 2.453107e-02,  7.961677e-02, -3.585119e-01,  2.873345e-01],...
2025-05-15 02:01:34.215506 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 133 / 184 (72.3%)
Max absolute difference: 0.1771362
Max relative difference: 127.749275
 x: array([[[ 0.063493,  0.078265, -0.189463,  0.257803],
        [ 0.218315,  0.03775 , -0.245864,  0.020266],
        [ 0.373136, -0.002764, -0.302264, -0.21727 ],...
 y: array([[[ 0.063493,  0.078265, -0.189463,  0.257803],
        [ 0.121084,  0.063194, -0.210443,  0.169444],
        [ 0.285628,  0.020135, -0.270386, -0.083011],...
2025-05-15 02:01:34.393437 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 80 (46.2%)
Max absolute difference: 1.0878334
Max relative difference: 28.483114
 x: array([[[-0.754862, -0.405461,  0.075024, -0.099049],
        [-0.362124,  0.108623, -0.250399, -0.074407],
        [ 0.507054,  0.20883 , -0.010401,  0.721857],...
 y: array([[[-0.754862, -0.405461,  0.075024, -0.099049],
        [-0.362124,  0.108623, -0.250399, -0.074407],
        [ 0.507054,  0.20883 , -0.010401,  0.721857],...
2025-05-15 02:01:34.559133 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.039392
Max relative difference: 39.8489
 x: array([[[-0.201672, -0.251085, -0.11454 ,  0.266046],
        [ 0.37895 ,  0.062065,  0.162957, -0.146244],
        [-0.520121, -0.406672, -0.44543 ,  0.380018],...
 y: array([[[-0.201672, -0.251085, -0.11454 ,  0.266046],
        [ 0.37895 ,  0.062065,  0.162957, -0.146244],
        [-0.520121, -0.406672, -0.44543 ,  0.380018],...
2025-05-15 02:01:34.728347 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 167 / 208 (80.3%)
Max absolute difference: 0.43507338
Max relative difference: 79.04446
 x: array([[[ 0.364668,  0.021449,  0.463488,  0.212776],
        [ 0.331717, -0.100446,  0.236425,  0.034985],
        [ 0.298767, -0.222342,  0.009362, -0.142807],...
 y: array([[[ 0.364668,  0.021449,  0.463488,  0.212776],
        [ 0.333826, -0.092645,  0.250957,  0.046363],
        [ 0.302984, -0.206739,  0.038426, -0.120049],...
2025-05-15 02:01:34.903371 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 150 / 208 (72.1%)
Max absolute difference: 0.21217841
Max relative difference: 79.48875
 x: array([[[ 0.181699, -0.149774, -0.217061,  0.366279],
        [ 0.062906, -0.231759, -0.200355,  0.290076],
        [-0.055887, -0.313745, -0.18365 ,  0.213872],...
 y: array([[[ 0.181699, -0.149774, -0.217061,  0.366279],
        [ 0.156315, -0.167292, -0.213491,  0.349996],
        [ 0.0294  , -0.254883, -0.195644,  0.268582],...
2025-05-15 02:01:35.083366 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.0265875
Max relative difference: 13.783211
 x: array([[[ 0.240284, -0.064041,  0.100182, -0.15218 ],
        [-0.485866,  0.417234,  0.210699, -0.031914],
        [-0.26795 ,  0.319446,  0.322898, -0.401681],...
 y: array([[[ 0.240284, -0.064041,  0.100182, -0.15218 ],
        [-0.485866,  0.417234,  0.210699, -0.031914],
        [-0.26795 ,  0.319446,  0.322898, -0.401681],...
2025-05-15 02:01:35.242409 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.4516349
Max relative difference: 33.05831
 x: array([[[ 3.505916e-01,  1.262325e-01, -7.008256e-02,  4.083582e-01],
        [-7.832583e-01, -6.946196e-01,  4.606147e-01,  2.663995e-01],
        [-6.433195e-01, -8.706757e-02,  4.230678e-02, -2.222718e-01],...
 y: array([[[ 3.505916e-01,  1.262325e-01, -7.008255e-02,  4.083582e-01],
        [-7.832583e-01, -6.946197e-01,  4.606147e-01,  2.663995e-01],
        [-6.433195e-01, -8.706756e-02,  4.230678e-02, -2.222719e-01],...
2025-05-15 02:01:35.433507 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 183 / 232 (78.9%)
Max absolute difference: 0.44081604
Max relative difference: 183.07672
 x: array([[[ 8.974572e-02,  3.588345e-01,  1.582657e-01,  2.845294e-01],
        [-2.816953e-03,  3.222575e-01, -2.206848e-03,  7.548409e-02],
        [-9.537962e-02,  2.856804e-01, -1.626794e-01, -1.335612e-01],...
 y: array([[[ 8.974572e-02,  3.588345e-01,  1.582657e-01,  2.845294e-01],
        [ 3.464088e-03,  3.247395e-01,  8.682371e-03,  8.966932e-02],
        [-8.281755e-02,  2.906445e-01, -1.409010e-01, -1.051908e-01],...
2025-05-15 02:01:35.603509 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 161 / 232 (69.4%)
Max absolute difference: 0.24530825
Max relative difference: 768.0692
 x: array([[[ 0.296796, -0.290208, -0.445451, -0.405074],
        [ 0.341903, -0.042207, -0.370331, -0.270768],
        [ 0.387009,  0.205793, -0.295212, -0.136462],...
 y: array([[[ 2.967956e-01, -2.902082e-01, -4.454512e-01, -4.050736e-01],
        [ 2.992152e-01, -2.769055e-01, -4.414218e-01, -3.978694e-01],
        [ 3.476057e-01, -1.085098e-02, -3.608335e-01, -2.537866e-01],...
2025-05-15 02:01:35.774352 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.5715582
Max relative difference: 13.463443
 x: array([[[ 0.560868, -0.437525,  0.250834, -0.191491],
        [ 0.133573, -0.131448, -0.386374,  0.558673],
        [-0.526611, -0.192711, -0.522191, -0.187248],...
 y: array([[[ 0.560868, -0.437525,  0.250834, -0.191491],
        [ 0.133573, -0.131448, -0.386374,  0.558673],
        [-0.526611, -0.192711, -0.522191, -0.187248],...
2025-05-15 02:01:35.943701 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 36 / 80 (45%)
Max absolute difference: 0.39602512
Max relative difference: 4.902987
 x: array([[[ 0.074879,  0.098129,  0.222404,  0.199717],
        [ 0.074879,  0.098129,  0.222404,  0.199717],
        [ 0.072281, -0.109606,  0.125529, -0.036309],...
 y: array([[[ 0.074879,  0.098129,  0.222404,  0.199717],
        [ 0.074879,  0.098129,  0.222404,  0.199717],
        [ 0.072281, -0.109606,  0.125529, -0.036309],...
2025-05-15 02:01:36.103895 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 30 / 40 (75%)
Max absolute difference: 0.7001779
Max relative difference: 5.734421
 x: array([[[-0.24004 ,  0.484115,  0.49212 , -0.317481],
        [-0.286699, -0.217426,  0.058253, -0.385743],
        [-0.156134, -0.017632,  0.297032,  0.066584],...
 y: array([[[-0.24004 ,  0.484115,  0.49212 , -0.317481],
        [-0.181596, -0.131202,  0.065987, -0.388388],
        [-0.209307,  0.080906,  0.367905,  0.030715],...
2025-05-15 02:01:36.272091 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 30 / 40 (75%)
Max absolute difference: 0.40646416
Max relative difference: 181.66582
 x: array([[[ 0.14836 , -0.443049,  0.230028,  0.265641],
        [-0.330165, -0.254257, -0.26311 ,  0.011738],
        [ 0.041996,  0.161111,  0.196052,  0.298602],...
 y: array([[[ 0.000812, -0.192124,  0.046544, -0.009309],
        [-0.314096, -0.248712, -0.153836,  0.064227],
        [ 0.041996,  0.161111,  0.196052,  0.298602],...
2025-05-15 02:01:36.441661 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 30 / 80 (37.5%)
Max absolute difference: 0.7142802
Max relative difference: 63.57683
 x: array([[[-0.288516, -0.46864 ,  0.015587,  0.42617 ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.197007, -0.205823, -0.174333, -0.19057 ],...
 y: array([[[-0.288516, -0.46864 ,  0.015587,  0.42617 ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.197007, -0.205823, -0.174333, -0.19057 ],...
2025-05-15 02:01:36.608608 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.76490414
Max relative difference: 5.912493
 x: array([[[ 0.415216,  0.096262,  0.302961, -0.189925],
        [-0.029949, -0.129325,  0.091781, -0.157925],
        [-0.170418, -0.171915, -0.00132 , -0.136279],...
 y: array([[[ 0.415216,  0.096262,  0.302961, -0.189925],
        [-0.029949, -0.129325,  0.091781, -0.157925],
        [-0.170418, -0.171915, -0.00132 , -0.136279],...
2025-05-15 02:01:36.775271 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 44 / 64 (68.8%)
Max absolute difference: 0.18803951
Max relative difference: 204.20769
 x: array([[[ 0.185848, -0.432982, -0.233583, -0.469986],
        [-0.324866,  0.130502,  0.445312, -0.346186],
        [-0.360288, -0.049809,  0.321583,  0.044012],...
 y: array([[[ 1.858475e-01, -4.329818e-01, -2.335831e-01, -4.699858e-01],
        [-3.309679e-01,  1.113925e-01,  4.381438e-01, -3.381125e-01],
        [-3.470428e-01, -1.823989e-02,  3.254130e-01,  7.553370e-02],...
2025-05-15 02:01:36.927973 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 41 / 64 (64.1%)
Max absolute difference: 0.1065031
Max relative difference: 6.0895114
 x: array([[[-0.414703, -0.447877,  0.34478 , -0.083508],
        [ 0.201221,  0.296766, -0.232642,  0.327148],
        [-0.017222,  0.306139, -0.010759,  0.169614],...
 y: array([[[-0.3082  , -0.343044,  0.285762, -0.011936],
        [ 0.127439,  0.267384, -0.265542,  0.276549],
        [ 0.017636,  0.329053,  0.034718,  0.192795],...
2025-05-15 02:01:37.103380 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 35 / 80 (43.8%)
Max absolute difference: 0.59342647
Max relative difference: 9.733505
 x: array([[[ 0.111497, -0.360757,  0.242183, -0.133625],
        [-0.255438, -0.181747,  0.314593,  0.290336],
        [ 0.02394 , -0.170464, -0.059124, -0.018531],...
 y: array([[[ 0.111497, -0.360757,  0.242183, -0.133625],
        [-0.255438, -0.181747,  0.314593,  0.290336],
        [ 0.02394 , -0.170464, -0.059124, -0.018531],...
2025-05-15 02:01:37.271687 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 32 / 80 (40%)
Max absolute difference: 0.52298208
Max relative difference: 5.39920073
 x: array([[[-0.030689,  0.03677 ,  0.059522,  0.036867],
        [-0.092067,  0.110311,  0.178565,  0.110601],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
 y: array([[[-0.030689,  0.03677 ,  0.059522,  0.036867],
        [-0.092067,  0.110311,  0.178565,  0.110601],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
2025-05-15 02:01:37.430676 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 24 / 32 (75%)
Max absolute difference: 0.75951382
Max relative difference: 28.39483738
 x: array([[[ 0.242659,  0.33721 ,  0.052574,  0.392704],
        [ 0.075476, -0.143676, -0.111451, -0.055916],
        [ 0.141337,  0.192349, -0.358745, -0.419164],...
 y: array([[[ 0.242659,  0.33721 ,  0.052574,  0.392704],
        [ 0.106237, -0.096003,  0.155177,  0.336837],
        [-0.141334,  0.378582, -0.343972,  0.34035 ],...
2025-05-15 02:01:37.603542 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 29 / 32 (90.6%)
Max absolute difference: 0.65404098
Max relative difference: 13.47938874
 x: array([[[-0.216149,  0.084245, -0.465388,  0.154221],
        [-0.338215,  0.057983,  0.370176,  0.384411],
        [-0.412874, -0.249185, -0.477982, -0.460449],...
 y: array([[[-0.037806,  0.205086, -0.164504, -0.056554],
        [-0.232545, -0.013491,  0.364254,  0.169232],
        [-0.334421, -0.126803, -0.391272, -0.46172 ],...
2025-05-15 02:01:37.770551 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 80 (20%)
Max absolute difference: 0.62611619
Max relative difference: 8.02979729
 x: array([[[ 0.485696, -0.264595,  0.04747 , -0.280832],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
 y: array([[[ 0.485696, -0.264595,  0.04747 , -0.280832],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
2025-05-15 02:01:37.924901 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.66764328
Max relative difference: 38.05084748
 x: array([[[ 0.109179,  0.069702, -0.319837, -0.053222],
        [ 0.05459 ,  0.034851, -0.159918, -0.026611],
        [-0.428732,  0.237279, -0.341888, -0.327692],...
 y: array([[[ 0.109179,  0.069702, -0.319837, -0.053222],
        [ 0.05459 ,  0.034851, -0.159918, -0.026611],
        [-0.428732,  0.237279, -0.341888, -0.327693],...
2025-05-15 02:01:38.100728 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 36 / 48 (75%)
Max absolute difference: 0.53729327
Max relative difference: 4.66663587
 x: array([[[ 0.24252 , -0.290621,  0.288293, -0.43117 ],
        [-0.246614, -0.14359 ,  0.003576,  0.334141],
        [ 0.144982,  0.095993, -0.178811, -0.273049],...
 y: array([[[ 0.24252 , -0.290621,  0.288293, -0.43117 ],
        [-0.276985, -0.124027,  0.058721,  0.321092],
        [ 0.047078,  0.128343, -0.277418, -0.208931],...
2025-05-15 02:01:38.269251 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 41 / 48 (85.4%)
Max absolute difference: 0.29675315
Max relative difference: 14.52308007
 x: array([[[-0.298611, -0.484793,  0.218171, -0.363088],
        [-0.317697, -0.0928  , -0.284939, -0.373986],
        [ 0.138223,  0.130273, -0.113888,  0.035114],...
 y: array([[[-0.062354, -0.434866,  0.101383, -0.385129],
        [-0.499661, -0.032247, -0.323126, -0.360179],
        [ 0.175489,  0.177775, -0.097039, -0.00451 ],...
2025-05-15 02:01:38.438306 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.64346638
Max relative difference: 710.13469119
 x: array([[[-0.262206, -0.460606, -0.374283,  0.352267],
        [ 0.038487,  0.071264,  0.015651, -0.062648],
        [ 0.153946,  0.285055,  0.062606, -0.250592],...
 y: array([[[-0.262206, -0.460606, -0.374283,  0.352267],
        [ 0.038487,  0.071264,  0.015651, -0.062648],
        [ 0.153946,  0.285055,  0.062606, -0.250592],...
2025-05-15 02:01:38.612983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.53539509
Max relative difference: 54.43998515
 x: array([[[ 0.270074,  0.304216,  0.247475, -0.249794],
        [ 0.135037,  0.152108,  0.123738, -0.124897],
        [-0.271036,  0.109292, -0.143287, -0.499327],...
 y: array([[[ 0.270074,  0.304216,  0.247475, -0.249794],
        [ 0.135037,  0.152108,  0.123738, -0.124897],
        [-0.271036,  0.109292, -0.143287, -0.499327],...
2025-05-15 02:01:38.780361 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 36 / 48 (75%)
Max absolute difference: 0.61715363
Max relative difference: 7.08591267
 x: array([[[ 0.07025 , -0.394675, -0.044894, -0.087441],
        [-0.254014,  0.060723,  0.228539, -0.00933 ],
        [ 0.070126,  0.325494, -0.148655, -0.32202 ],...
 y: array([[[ 0.07025 , -0.394675, -0.044894, -0.087441],
        [-0.31229 ,  0.079812,  0.240041,  0.032867],
        [ 0.216822,  0.324556,  0.07302 , -0.294852],...
2025-05-15 02:01:38.937322 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 48 (79.2%)
Max absolute difference: 0.25176364
Max relative difference: 7.36530527
 x: array([[[ 0.0471  , -0.238969,  0.189462, -0.010799],
        [-0.104871,  0.408695,  0.221478,  0.219278],
        [-0.161884, -0.134487, -0.285649,  0.053442],...
 y: array([[[-0.12667 , -0.110291, -0.038337, -0.107022],
        [-0.012536,  0.474102,  0.400331,  0.348964],
        [-0.131864, -0.144787, -0.295213,  0.048181],...
2025-05-15 02:01:39.107230 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.74429681
Max relative difference: 9.18169608
 x: array([[[-0.331699,  0.099714,  0.309507, -0.091242],
        [ 0.074475, -0.079638, -0.070603,  0.098568],
        [ 0.297899, -0.318552, -0.282413,  0.394272],...
 y: array([[[-0.331699,  0.099714,  0.309507, -0.091242],
        [ 0.074475, -0.079638, -0.070603,  0.098568],
        [ 0.297899, -0.318552, -0.282414,  0.394273],...
2025-05-15 02:01:39.286458 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.72508168
Max relative difference: 13.16436581
 x: array([[[-0.229454, -0.290683, -0.213022,  0.061889],
        [-0.092908, -0.133087,  0.087644,  0.12726 ],
        [-0.054593, -0.096858,  0.262334,  0.198686],...
 y: array([[[-0.229454, -0.290683, -0.213022,  0.061889],
        [-0.092908, -0.133087,  0.087644,  0.12726 ],
        [-0.054593, -0.096858,  0.262334,  0.198686],...
2025-05-15 02:01:39.470252 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 45 / 56 (80.4%)
Max absolute difference: 0.32300728
Max relative difference: 42.18940659
 x: array([[[ 0.468162, -0.165362,  0.026422, -0.403553],
        [ 0.397351, -0.019609,  0.241527,  0.062535],
        [ 0.290337, -0.385769,  0.067455,  0.205492],...
 y: array([[[ 0.468162, -0.165362,  0.026422, -0.403553],
        [ 0.402896,  0.017717,  0.201236,  0.016662],
        [ 0.265107, -0.496564,  0.092165,  0.290482],...
2025-05-15 02:01:39.639343 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 33 / 56 (58.9%)
Max absolute difference: 0.203914
Max relative difference: 5.86752572
 x: array([[[ 0.208033,  0.022942,  0.44076 , -0.371057],
        [ 0.029089, -0.168836,  0.183379,  0.228936],
        [-0.141464,  0.123929,  0.182352, -0.257269],...
 y: array([[[ 0.075119, -0.01565 ,  0.39494 , -0.256484],
        [ 0.155182, -0.172172,  0.170934,  0.247597],
        [-0.105765,  0.132421,  0.196934, -0.215663],...
2025-05-15 02:01:39.809056 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.69908679
Max relative difference: 2.45382296
 x: array([[[-3.465288e-01,  4.398258e-01,  1.651168e-01,  1.915583e-01],
        [ 1.326270e-01,  9.609249e-02, -1.500868e-02,  1.218494e-01],
        [ 1.326270e-01,  9.609249e-02, -1.500868e-02,  1.218494e-01],...
 y: array([[[-3.465288e-01,  4.398258e-01,  1.651168e-01,  1.915583e-01],
        [ 1.326270e-01,  9.609249e-02, -1.500868e-02,  1.218494e-01],
        [ 1.326270e-01,  9.609249e-02, -1.500868e-02,  1.218494e-01],...
2025-05-15 02:01:39.979042 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[-0.322434, -0.220112, -0.083801, -0.409244],
        [ 0.415137, -0.060671, -0.014368, -0.436616],
        [ 0.065129,  0.003308, -0.266605,  0.009892],...
 y: array([[[-0.322434, -0.220112, -0.083801, -0.409244],
        [ 0.415137, -0.060671, -0.014368, -0.436616],
        [ 0.065129,  0.003308, -0.266605,  0.009892],...
2025-05-15 02:01:40.147746 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[-0.306916,  0.319295, -0.222171,  0.0183  ],
        [ 0.358034,  0.414483,  0.237353,  0.05219 ],
        [ 0.170936,  0.018809,  0.077623,  0.150428],...
 y: array([[[-0.306916,  0.319295, -0.222171,  0.0183  ],
        [ 0.268032,  0.434247,  0.116083,  0.069662],
        [ 0.253844, -0.436158,  0.281705,  0.19625 ],...
2025-05-15 02:01:40.314012 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[ 0.399278, -0.439768, -0.131504,  0.383134],
        [-0.270054,  0.274505, -0.354275, -0.187022],
        [-0.06725 , -0.019613, -0.153048,  0.373744],...
 y: array([[[ 0.308713, -0.348237, -0.158447,  0.291737],
        [-0.252808,  0.26889 , -0.356533, -0.136704],
        [-0.061171, -0.042975, -0.132489,  0.388577],...
2025-05-15 02:01:40.478736 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 8, 4), (2, 7, 4) mismatch)
 x: array([[[ 0.204476, -0.208663, -0.069864,  0.083148],
        [ 0.087132,  0.230805,  0.284666, -0.179951],
        [ 0.082476, -0.094493,  0.277902,  0.080533],...
 y: array([[[ 0.204476, -0.208663, -0.069864,  0.083148],
        [ 0.152027,  0.254675,  0.215995, -0.227573],
        [-0.083253, -0.398142,  0.444505,  0.39495 ],...
2025-05-15 02:01:40.630261 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.79663499
Max relative difference: 46.08828904
 x: array([[[-0.067043,  0.08263 , -0.309383, -0.06957 ],
        [-0.18595 ,  0.152943,  0.209087,  0.221295],
        [-0.147836,  0.15858 , -0.017395,  0.160857],...
 y: array([[[-0.067043,  0.08263 , -0.309383, -0.06957 ],
        [-0.18595 ,  0.152943,  0.209087,  0.221295],
        [-0.147836,  0.15858 , -0.017395,  0.160857],...
2025-05-15 02:01:40.804524 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 44 / 64 (68.8%)
Max absolute difference: 0.18989463
Max relative difference: 8.63200045
 x: array([[[-0.124218, -0.398417, -0.040464,  0.256229],
        [ 0.372135,  0.146452, -0.18796 , -0.050485],
        [-0.039593,  0.089519, -0.287123, -0.182866],...
 y: array([[[-0.124218, -0.398417, -0.040464,  0.256229],
        [ 0.365975,  0.125229, -0.198005, -0.046387],
        [-0.079931,  0.145056, -0.271154, -0.214073],...
2025-05-15 02:01:40.969562 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 33 / 64 (51.6%)
Max absolute difference: 0.09642003
Max relative difference: 5.38844478
 x: array([[[-0.302777, -0.416571, -0.242264, -0.316305],
        [ 0.143161, -0.345606, -0.308508,  0.299599],
        [-0.177973, -0.066624,  0.034087, -0.175866],...
 y: array([[[-0.227969, -0.425465, -0.243326, -0.219885],
        [ 0.095497, -0.301196, -0.326555,  0.251018],
        [-0.172332, -0.073777,  0.07974 , -0.184005],...
2025-05-15 02:01:41.138357 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.54691516
Max relative difference: 33.02524246
 x: array([[[ 3.517261e-01,  1.661803e-01, -1.372301e-01,  1.023336e-01],
        [-1.565408e-01,  1.823070e-01,  4.162589e-02, -3.269969e-01],
        [-3.802458e-04,  7.725842e-02,  4.990639e-02, -1.668861e-01],...
 y: array([[[ 3.517261e-01,  1.661803e-01, -1.372301e-01,  1.023336e-01],
        [-1.565408e-01,  1.823070e-01,  4.162589e-02, -3.269969e-01],
        [-3.802545e-04,  7.725843e-02,  4.990639e-02, -1.668861e-01],...
2025-05-15 02:01:41.290308 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.62439543
Max relative difference: 58.84552213
 x: array([[[-0.284575, -0.112854, -0.061938, -0.402293],
        [-0.024206, -0.141631,  0.120562,  0.219567],
        [-0.289751, -0.173347,  0.194792,  0.223716],...
 y: array([[[-0.284575, -0.112854, -0.061938, -0.402293],
        [-0.024206, -0.141631,  0.120562,  0.219567],
        [-0.289751, -0.173347,  0.194792,  0.223716],...
2025-05-15 02:01:41.463730 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 30 / 72 (41.7%)
Max absolute difference: 0.0705003
Max relative difference: 612.04584775
 x: array([[[-0.338006,  0.062034, -0.47318 ,  0.480255],
        [-0.384895, -0.450574,  0.084818,  0.341855],
        [-0.155328, -0.283611, -0.240831, -0.395734],...
 y: array([[[-3.380062e-01,  6.203384e-02, -4.731805e-01,  4.802547e-01],
        [-3.839873e-01, -4.484866e-01,  7.930348e-02,  3.300371e-01],
        [-1.338910e-01, -2.794357e-01, -2.374238e-01, -3.933905e-01],...
2025-05-15 02:01:41.632822 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 23 / 72 (31.9%)
Max absolute difference: 0.03827751
Max relative difference: 3.81424853
 x: array([[[ 0.215884,  0.242116, -0.027162, -0.424469],
        [ 0.358828, -0.324115,  0.142002, -0.140034],
        [ 0.244982,  0.234417,  0.356114, -0.118277],...
 y: array([[[ 0.22292 ,  0.205948, -0.019159, -0.407942],
        [ 0.36426 , -0.295852,  0.150372, -0.14438 ],
        [ 0.219658,  0.230531,  0.360373, -0.105719],...
2025-05-15 02:01:41.799985 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.76438039
Max relative difference: 13.80889085
 x: array([[[ 0.457838, -0.343141,  0.162346, -0.367282],
        [-0.124334, -0.315806,  0.263303, -0.124962],
        [-0.159603, -0.156521, -0.130804, -0.126329],...
 y: array([[[ 0.457838, -0.343141,  0.162346, -0.367282],
        [-0.124334, -0.315806,  0.263303, -0.124962],
        [-0.159603, -0.156521, -0.130804, -0.126329],...
2025-05-15 02:01:41.956178 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[-0.139529, -0.144362,  0.306475,  0.033519],
        [ 0.224781, -0.1964  ,  0.212911,  0.228   ],
        [ 0.134394, -0.081805, -0.257504, -0.048608],...
 y: array([[[-0.139529, -0.144362,  0.306475,  0.033519],
        [ 0.224781, -0.1964  ,  0.212911,  0.228   ],
        [ 0.134394, -0.081805, -0.257504, -0.048608],...
2025-05-15 02:01:42.128697 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[-0.392518, -0.419983, -0.331834,  0.034552],
        [ 0.173146, -0.026821, -0.463117, -0.274448],
        [-0.167748, -0.457853,  0.033312,  0.316297],...
 y: array([[[-0.392518, -0.419983, -0.331834,  0.034552],
        [ 0.130534, -0.0807  , -0.401063, -0.200605],
        [-0.164492, -0.321034, -0.086272,  0.224825],...
2025-05-15 02:01:42.282498 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[-0.333244, -0.033592, -0.154855,  0.19991 ],
        [-0.168736,  0.106117, -0.439907, -0.160304],
        [ 0.081172,  0.363964, -0.390314, -0.05318 ],...
 y: array([[[-0.333244, -0.033592, -0.154855,  0.19991 ],
        [-0.168736,  0.106117, -0.439907, -0.160304],
        [ 0.081172,  0.363964, -0.390314, -0.05318 ],...
2025-05-15 02:01:42.423722 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 10, 4), (2, 9, 4) mismatch)
 x: array([[[ 0.081063,  0.3363  ,  0.322625, -0.233845],
        [ 0.034803,  0.168153,  0.30262 ,  0.399732],
        [ 0.04257 ,  0.377834, -0.128794,  0.333616],...
 y: array([[[ 0.081063,  0.3363  ,  0.322625, -0.233845],
        [ 0.035774,  0.194363,  0.248694,  0.391468],
        [ 0.008586,  0.278505, -0.209789,  0.287737],...
2025-05-15 02:01:42.596885 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[-0.19231 , -0.00419 ,  0.167077, -0.230648],
        [ 0.194408,  0.198633,  0.20599 ,  0.175009],
        [-0.221318, -0.022562,  0.353775,  0.347248],...
 y: array([[[-0.19231 , -0.00419 ,  0.167077, -0.230648],
        [ 0.255468,  0.230657,  0.212135,  0.23906 ],
        [-0.361549, -0.097039,  0.395434,  0.379068],...
2025-05-15 02:01:42.750751 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[ 0.157178, -0.091098,  0.004007, -0.261816],
        [ 0.372522, -0.071707, -0.279792,  0.104774],
        [ 0.066313, -0.036107,  0.224948,  0.389713],...
 y: array([[[ 0.157178, -0.091098,  0.004007, -0.261816],
        [ 0.394057, -0.069767, -0.308172,  0.141433],
        [-0.006519, -0.028627,  0.343419,  0.444887],...
2025-05-15 02:01:42.924398 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[ 0.397921,  0.324842, -0.008813,  0.398878],
        [-0.02214 ,  0.366433,  0.293439, -0.11662 ],
        [ 0.129479,  0.096406, -0.221458,  0.189016],...
 y: array([[[ 0.397921,  0.324842, -0.008813,  0.398878],
        [-0.068813,  0.371054,  0.327022, -0.173897],
        [ 0.179052,  0.027744, -0.358578,  0.279745],...
2025-05-15 02:01:43.092213 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 11, 4), (2, 10, 4) mismatch)
 x: array([[[ 0.077356, -0.46185 ,  0.307643,  0.204367],
        [ 0.30008 , -0.437658, -0.004931,  0.067956],
        [-0.195095, -0.080344, -0.03951 ,  0.137905],...
 y: array([[[ 0.077356, -0.46185 ,  0.307643,  0.204367],
        [ 0.324827, -0.43497 , -0.039662,  0.0528  ],
        [-0.325075,  0.008312, -0.039472,  0.159181],...
2025-05-15 02:01:43.269650 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[-0.188512, -0.009515,  0.043776,  0.15147 ],
        [-0.110499,  0.101136, -0.31493 ,  0.043004],
        [-0.145905,  0.063288, -0.165042, -0.045889],...
 y: array([[[-0.188512, -0.009515,  0.043776,  0.15147 ],
        [-0.110499,  0.101136, -0.31493 ,  0.043004],
        [-0.145905,  0.063288, -0.165042, -0.045889],...
2025-05-15 02:01:43.419824 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[-0.495733,  0.100992,  0.322131, -0.091697],
        [ 0.303022, -0.050949,  0.004289, -0.425525],
        [ 0.372627,  0.040923,  0.106819,  0.016873],...
 y: array([[[-0.495733,  0.100992,  0.322131, -0.091697],
        [ 0.366922, -0.063104, -0.021138, -0.452231],
        [ 0.354598,  0.065375,  0.140038,  0.118706],...
2025-05-15 02:01:43.560126 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[ 0.213127,  0.47292 , -0.092054, -0.41223 ],
        [-0.359642,  0.383734,  0.10367 , -0.463252],
        [-0.118301, -0.101197, -0.110809, -0.425392],...
 y: array([[[ 0.213127,  0.47292 , -0.092054, -0.41223 ],
        [-0.311911,  0.391166,  0.08736 , -0.459   ],
        [-0.149019, -0.062438, -0.089312, -0.429491],...
2025-05-15 02:01:43.696879 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 12, 4), (2, 11, 4) mismatch)
 x: array([[[-0.356933, -0.339852,  0.434604,  0.032161],
        [ 0.039417, -0.315821,  0.388811,  0.251977],
        [ 0.027929,  0.06828 , -0.07854 ,  0.139599],...
 y: array([[[-0.356933, -0.339852,  0.434604,  0.032161],
        [ 0.079052, -0.313418,  0.384232,  0.273958],
        [ 0.002327,  0.165676, -0.1961  ,  0.098141],...
2025-05-15 02:01:43.870174 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.7170648
Max relative difference: 26.32485792
 x: array([[[-0.107281,  0.178414, -0.080335, -0.209174],
        [-0.288268,  0.2711  ,  0.510722,  0.330008],
        [-0.200055,  0.265653,  0.233917,  0.164677],...
 y: array([[[-0.107281,  0.178414, -0.080335, -0.209174],
        [-0.288268,  0.2711  ,  0.510722,  0.330008],
        [-0.200055,  0.265653,  0.233917,  0.164677],...
2025-05-15 02:01:44.037084 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 56 / 96 (58.3%)
Max absolute difference: 0.1451549
Max relative difference: 14.18486215
 x: array([[[ 0.393112, -0.300416,  0.232289,  0.166355],
        [-0.045495,  0.15601 ,  0.17154 ,  0.288688],
        [-0.282839, -0.02404 ,  0.210644, -0.216544],...
 y: array([[[ 0.393112, -0.300416,  0.232289,  0.166355],
        [-0.03752 ,  0.147711,  0.172645,  0.286464],
        [-0.276037, -0.011707,  0.208314, -0.192466],...
2025-05-15 02:01:44.213808 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 96 (39.6%)
Max absolute difference: 0.05864502
Max relative difference: 10.78503997
 x: array([[[-0.240513, -0.372443,  0.455535, -0.359781],
        [ 0.291977,  0.145501, -0.161705, -0.00751 ],
        [ 0.465697,  0.310808,  0.092723,  0.326242],...
 y: array([[[-0.240513, -0.372443,  0.455535, -0.359781],
        [ 0.247603,  0.102339, -0.110268, -0.036866],
        [ 0.461081,  0.306624,  0.06009 ,  0.304953],...
2025-05-15 02:01:44.389813 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.76515097
Max relative difference: 81.58447567
 x: array([[[-0.31282 , -0.320507, -0.419833,  0.105261],
        [-0.064819,  0.285424, -0.190188, -0.071484],
        [ 0.076682, -0.323075,  0.021466,  0.186425],...
 y: array([[[-0.31282 , -0.320507, -0.419833,  0.105261],
        [-0.064819,  0.285424, -0.190188, -0.071484],
        [ 0.076682, -0.323075,  0.021466,  0.186425],...
2025-05-15 02:01:44.560836 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[-0.045809, -0.382046,  0.04616 , -0.443707],
        [-0.186261, -0.002741,  0.18936 , -0.474133],
        [-0.253484, -0.031922,  0.033711, -0.382978],...
 y: array([[[-0.045809, -0.382046,  0.04616 , -0.443707],
        [-0.186261, -0.002741,  0.18936 , -0.474133],
        [-0.253484, -0.031922,  0.033711, -0.382978],...
2025-05-15 02:01:44.725033 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[-0.042468, -0.438324, -0.328115, -0.282947],
        [-0.378051,  0.160302,  0.099078,  0.153067],
        [-0.155422,  0.046389, -0.152901,  0.237647],...
 y: array([[[-0.042468, -0.438324, -0.328115, -0.282947],
        [-0.399407,  0.198396,  0.126263,  0.180813],
        [-0.09664 , -0.006974, -0.222016,  0.229242],...
2025-05-15 02:01:44.892425 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[ 0.043863,  0.237563, -0.429112, -0.287258],
        [ 0.059752, -0.023886, -0.428624, -0.036742],
        [-0.033155, -0.020988, -0.223534, -0.133237],...
 y: array([[[ 0.043863,  0.237563, -0.429112, -0.287258],
        [ 0.057715,  0.009633, -0.428686, -0.068859],
        [-0.018046, -0.034841, -0.255061, -0.105545],...
2025-05-15 02:01:45.062837 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 13, 4), (2, 12, 4) mismatch)
 x: array([[[-0.393791, -0.09023 ,  0.062026, -0.290217],
        [ 0.180039,  0.255034,  0.281613, -0.048045],
        [ 0.434984,  0.039874,  0.031711,  0.077123],...
 y: array([[[-0.393791, -0.09023 ,  0.062026, -0.290217],
        [ 0.232206,  0.286422,  0.301575, -0.02603 ],
        [ 0.452347, -0.050193, -0.056407,  0.089245],...
2025-05-15 02:01:45.234958 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.04628898
Max relative difference: 84.31857948
 x: array([[[ 0.149604,  0.032617, -0.378593,  0.198967],
        [ 0.512172,  0.086382,  0.359151,  0.24897 ],
        [-0.153347,  0.13396 , -0.258138, -0.398422],...
 y: array([[[ 0.149604,  0.032617, -0.378593,  0.198967],
        [ 0.512172,  0.086382,  0.359151,  0.24897 ],
        [-0.153347,  0.13396 , -0.258138, -0.398422],...
2025-05-15 02:01:45.411133 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 77 / 112 (68.8%)
Max absolute difference: 0.19096972
Max relative difference: 11.04935179
 x: array([[[-0.474152,  0.347873, -0.361603, -0.429752],
        [ 0.049977,  0.082647, -0.403992,  0.142534],
        [ 0.323162, -0.090881, -0.363735,  0.200416],...
 y: array([[[-0.474152,  0.347873, -0.361603, -0.429752],
        [ 0.03385 ,  0.090808, -0.402688,  0.124925],
        [ 0.316646, -0.083964, -0.369603,  0.217958],...
2025-05-15 02:01:45.579357 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 56 / 112 (50%)
Max absolute difference: 0.09941986
Max relative difference: 55.42649747
 x: array([[[ 0.350887, -0.44284 , -0.326623,  0.470996],
        [ 0.103475, -0.461312,  0.047415,  0.264185],
        [ 0.019086, -0.287494,  0.287885,  0.165134],...
 y: array([[[ 3.508870e-01, -4.428397e-01, -3.266232e-01,  4.709961e-01],
        [ 1.466738e-01, -4.580868e-01, -1.789292e-02,  3.002946e-01],
        [ 1.251050e-02, -3.343015e-01,  2.687973e-01,  1.669687e-01],...
2025-05-15 02:01:45.735814 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.94963281
Max relative difference: 11.00645563
 x: array([[[-0.271397,  0.50942 ,  0.322628, -0.079696],
        [ 0.149419,  0.194081, -0.017122,  0.058399],
        [-0.013178,  0.024707,  0.039287,  0.57271 ],...
 y: array([[[-0.271397,  0.50942 ,  0.322628, -0.079696],
        [ 0.149419,  0.194081, -0.017122,  0.058399],
        [-0.013178,  0.024707,  0.039287,  0.57271 ],...
2025-05-15 02:01:45.915282 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.90005422
Max relative difference: 25.10747221
 x: array([[[ 0.285353, -0.329782,  0.247933, -0.159943],
        [ 0.002101, -0.348764, -0.05744 ,  0.127364],
        [ 0.195441, -0.527197,  0.364735,  0.309151],...
 y: array([[[ 0.285353, -0.329782,  0.247933, -0.159943],
        [ 0.002101, -0.348764, -0.05744 ,  0.127364],
        [ 0.195441, -0.527197,  0.364735,  0.309151],...
2025-05-15 02:01:46.083477 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 66 / 112 (58.9%)
Max absolute difference: 0.24630695
Max relative difference: 6.19814273
 x: array([[[-0.056427, -0.468837,  0.048325,  0.222449],
        [-0.35978 , -0.405475, -0.222482, -0.187362],
        [-0.386638, -0.229264, -0.20048 , -0.055445],...
 y: array([[[-0.056427, -0.468837,  0.048325,  0.222449],
        [-0.350446, -0.407424, -0.214149, -0.174753],
        [-0.396329, -0.244738, -0.213847, -0.085788],...
2025-05-15 02:01:46.251232 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 50 / 112 (44.6%)
Max absolute difference: 0.09389425
Max relative difference: 43.09579075
 x: array([[[-2.218593e-02, -1.487993e-01, -2.482537e-01, -1.252248e-01],
        [ 3.884515e-03, -2.964583e-01,  2.616242e-01,  3.525609e-02],
        [ 1.295637e-01, -1.687639e-01,  3.816426e-01,  7.984266e-04],...
 y: array([[[-0.022186, -0.148799, -0.248254, -0.125225],
        [-0.000667, -0.270677,  0.172598,  0.007236],
        [ 0.100226, -0.218475,  0.409052,  0.028   ],...
2025-05-15 02:01:46.414605 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.05882016
Max relative difference: 156.98945001
 x: array([[[-0.121041,  0.132398,  0.160652,  0.467906],
        [-0.009097, -0.248064,  0.142692,  0.29676 ],
        [ 0.211084,  0.224607,  0.509672, -0.282991],...
 y: array([[[-0.121041,  0.132398,  0.160652,  0.467906],
        [-0.009097, -0.248064,  0.142692,  0.29676 ],
        [ 0.211084,  0.224607,  0.509672, -0.282991],...
2025-05-15 02:01:46.585677 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[ 0.090284,  0.200214,  0.311406, -0.23639 ],
        [ 0.123998, -0.110949,  0.090154,  0.090879],
        [ 0.0817  , -0.30901 , -0.042796,  0.370826],...
 y: array([[[ 0.090284,  0.200214,  0.311406, -0.23639 ],
        [ 0.123998, -0.110949,  0.090154,  0.090879],
        [ 0.0817  , -0.30901 , -0.042796,  0.370826],...
2025-05-15 02:01:46.752691 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[-0.290464, -0.048568, -0.309272, -0.317504],
        [-0.221757, -0.226691,  0.073997,  0.181006],
        [ 0.020736, -0.235215,  0.229233,  0.131672],...
 y: array([[[-2.904645e-01, -4.856825e-02, -3.092715e-01, -3.175035e-01],
        [-2.191141e-01, -2.335418e-01,  8.873844e-02,  2.001798e-01],
        [ 5.275716e-02, -2.228246e-01,  2.236335e-01,  8.573478e-02],...
2025-05-15 02:01:46.915314 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[-2.926576e-01,  2.308702e-01, -2.208874e-01, -3.832186e-01],
        [ 1.717820e-01,  1.145926e-01,  1.495690e-04,  1.271214e-01],
        [ 2.567395e-01,  4.288562e-02,  2.009605e-01,  3.540293e-01],...
 y: array([[[-0.292658,  0.23087 , -0.220887, -0.383219],
        [ 0.068573,  0.140432, -0.04897 ,  0.013713],
        [ 0.32885 ,  0.045847,  0.168455,  0.377619],...
2025-05-15 02:01:47.081278 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 15, 4), (2, 14, 4) mismatch)
 x: array([[[ 4.973099e-01,  4.110677e-01,  2.647564e-01,  4.331338e-01],
        [ 4.623472e-01,  1.122653e-01, -9.122287e-02,  4.495533e-01],
        [ 4.358412e-01,  7.947336e-02, -1.278247e-01,  4.402943e-01],...
 y: array([[[ 0.49731 ,  0.411068,  0.264756,  0.433134],
        [ 0.459658,  0.089281, -0.118606,  0.450816],
        [ 0.43339 ,  0.125584, -0.072037,  0.433932],...
2025-05-15 02:01:47.244723 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[ 0.288815,  0.374756, -0.238772, -0.099137],
        [ 0.065071,  0.382216, -0.1789  , -0.052219],
        [-0.219703,  0.393776, -0.104773,  0.005063],...
 y: array([[[ 0.288815,  0.374756, -0.238772, -0.099137],
        [ 0.065071,  0.382216, -0.1789  , -0.052219],
        [-0.219703,  0.393776, -0.104773,  0.005063],...
2025-05-15 02:01:47.408465 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[-4.648114e-01,  1.675382e-01, -4.756537e-01,  4.526474e-01],
        [-3.814714e-01,  1.685695e-01, -3.121593e-01,  4.315204e-01],
        [-2.599194e-01,  1.787772e-01, -2.222116e-01,  2.507118e-01],...
 y: array([[[-0.464811,  0.167538, -0.475654,  0.452647],
        [-0.37909 ,  0.168599, -0.307488,  0.430917],
        [-0.249698,  0.180147, -0.223376,  0.226693],...
2025-05-15 02:01:47.575956 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[-0.20217 ,  0.067502, -0.312677, -0.072765],
        [-0.087276, -0.129533, -0.070152,  0.102261],
        [-0.039403, -0.164491,  0.14273 ,  0.168975],...
 y: array([[[-0.20217 ,  0.067502, -0.312677, -0.072765],
        [-0.118393, -0.076169, -0.135836,  0.054858],
        [-0.019656, -0.230765,  0.107531,  0.20333 ],...
2025-05-15 02:01:47.745084 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 16, 4), (2, 15, 4) mismatch)
 x: array([[[-0.302461,  0.494671, -0.381157, -0.312611],
        [-0.261173, -0.048173, -0.138181, -0.31972 ],
        [-0.198315, -0.293527, -0.048574, -0.183816],...
 y: array([[[-0.302461,  0.494671, -0.381157, -0.312611],
        [-0.258224, -0.086948, -0.120825, -0.320228],
        [-0.183173, -0.24358 , -0.079592, -0.12354 ],...
2025-05-15 02:01:47.915653 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.17659402
Max relative difference: 6.15395255
 x: array([[[-0.103965, -0.361092, -0.55755 ,  0.014786],
        [ 0.188232,  0.456274, -0.139455, -0.021738],
        [-0.373875,  0.010056, -0.219902,  0.095319],...
 y: array([[[-0.103965, -0.361092, -0.55755 ,  0.014786],
        [ 0.188232,  0.456274, -0.139455, -0.021738],
        [-0.373875,  0.010056, -0.219902,  0.095319],...
2025-05-15 02:01:48.067233 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 92 / 128 (71.9%)
Max absolute difference: 0.22520501
Max relative difference: 30.91786757
 x: array([[[-0.077918,  0.070146, -0.287173,  0.374133],
        [-0.064136, -0.179148,  0.176799,  0.165215],
        [ 0.026831, -0.152929,  0.326146, -0.042058],...
 y: array([[[-0.077918,  0.070146, -0.287173,  0.374133],
        [-0.064688, -0.169176,  0.15824 ,  0.173571],
        [ 0.010291, -0.188088,  0.351953, -0.025674],...
2025-05-15 02:01:48.240921 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 68 / 128 (53.1%)
Max absolute difference: 0.13573356
Max relative difference: 168.73717615
 x: array([[[ 0.482784, -0.284628, -0.24965 , -0.476129],
        [-0.018386, -0.337601, -0.149527, -0.404261],
        [-0.348283, -0.322643,  0.005704, -0.204424],...
 y: array([[[ 4.827838e-01, -2.846283e-01, -2.496498e-01, -4.761294e-01],
        [ 1.173473e-01, -3.232539e-01, -1.766433e-01, -4.237255e-01],
        [-3.511819e-01, -3.572053e-01, -5.512723e-02, -3.088724e-01],...
2025-05-15 02:01:48.408288 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.06729728
Max relative difference: 106.72171875
 x: array([[[-0.552638, -0.010702, -0.1765  , -0.132163],
        [-0.40977 ,  0.081378, -0.40549 , -0.417295],
        [-0.094417, -0.497453, -0.391478, -0.126785],...
 y: array([[[-0.552638, -0.010702, -0.1765  , -0.132163],
        [-0.40977 ,  0.081378, -0.40549 , -0.417295],
        [-0.094417, -0.497453, -0.391478, -0.126785],...
2025-05-15 02:01:48.578688 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[ 0.211138,  0.233027,  0.363423, -0.353158],
        [-0.013063,  0.270209,  0.284604, -0.394019],
        [-0.357987,  0.327412,  0.163345, -0.456882],...
 y: array([[[ 0.211138,  0.233027,  0.363423, -0.353158],
        [-0.013063,  0.270209,  0.284604, -0.394019],
        [-0.357987,  0.327412,  0.163345, -0.456882],...
2025-05-15 02:01:48.718016 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[-0.495211, -0.104938, -0.173441, -0.006465],
        [-0.354327,  0.23174 , -0.133069, -0.282243],
        [-0.126547,  0.349626, -0.128148, -0.476263],...
 y: array([[[-4.952114e-01, -1.049377e-01, -1.734406e-01, -6.464874e-03],
        [-3.515097e-01,  2.384739e-01, -1.322620e-01, -2.877589e-01],
        [-1.093250e-01,  3.339208e-01, -1.312602e-01, -4.763931e-01],...
2025-05-15 02:01:48.894337 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[-0.077206, -0.477098, -0.377729,  0.201227],
        [ 0.114362, -0.058415, -0.164296,  0.031496],
        [ 0.189435,  0.225744, -0.029836, -0.086909],...
 y: array([[[-0.077206, -0.477098, -0.377729,  0.201227],
        [ 0.05301 , -0.192503, -0.23265 ,  0.085854],
        [ 0.253344,  0.245335, -0.009452, -0.091643],...
2025-05-15 02:01:49.069358 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 17, 4), (2, 16, 4) mismatch)
 x: array([[[ 0.399381, -0.021576, -0.273759,  0.146048],
        [ 0.310691, -0.178102, -0.173385,  0.338487],
        [ 0.200998, -0.269325, -0.032373,  0.470257],...
 y: array([[[ 0.399381, -0.021576, -0.273759,  0.146048],
        [ 0.304779, -0.188537, -0.166694,  0.351316],
        [ 0.176571, -0.251013,  0.005393,  0.459514],...
2025-05-15 02:01:49.239815 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.13621217
Max relative difference: 55.18090242
 x: array([[[-0.032123,  0.089629,  0.272635,  0.634965],
        [ 0.379491, -0.162221,  0.469453,  0.39686 ],
        [ 0.197005, -0.532445, -0.220879, -0.48848 ],...
 y: array([[[-0.032123,  0.089629,  0.272635,  0.634965],
        [ 0.379491, -0.162221,  0.469453,  0.39686 ],
        [ 0.197005, -0.532445, -0.220879, -0.48848 ],...
2025-05-15 02:01:49.393448 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 111 / 144 (77.1%)
Max absolute difference: 0.38102413
Max relative difference: 182.83427545
 x: array([[[ 0.382109,  0.416582,  0.282299,  0.44165 ],
        [ 0.299917,  0.107432,  0.065369,  0.020176],
        [ 0.261805, -0.117824, -0.050344, -0.295544],...
 y: array([[[ 0.382109,  0.416582,  0.282299,  0.44165 ],
        [ 0.303785,  0.12198 ,  0.075577,  0.04001 ],
        [ 0.248797, -0.128207, -0.077559, -0.305642],...
2025-05-15 02:01:49.576860 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 84 / 144 (58.3%)
Max absolute difference: 0.15644054
Max relative difference: 307.70805289
 x: array([[[ 0.389805,  0.173028, -0.229551, -0.190009],
        [ 0.022975,  0.178831,  0.061469,  0.048694],
        [-0.287111,  0.177151,  0.27841 ,  0.235588],...
 y: array([[[ 3.898049e-01,  1.730279e-01, -2.295514e-01, -1.900087e-01],
        [ 1.588381e-01,  1.766820e-01, -4.631635e-02, -3.971423e-02],
        [-2.261067e-01,  1.827720e-01,  2.590754e-01,  2.107766e-01],...
2025-05-15 02:01:49.731259 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.24196843
Max relative difference: 28.6746773
 x: array([[[-0.27215 , -0.407761,  0.08648 , -0.295804],
        [-0.550493, -0.00571 , -0.306658,  0.384237],
        [-0.573596, -0.006518, -0.29704 , -0.569502],...
 y: array([[[-0.27215 , -0.407761,  0.08648 , -0.295804],
        [-0.550493, -0.00571 , -0.306658,  0.384237],
        [-0.573596, -0.006518, -0.29704 , -0.569502],...
2025-05-15 02:01:49.912242 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.13635315
Max relative difference: 16.08760831
 x: array([[[-0.324618, -0.347045, -0.426054, -0.486301],
        [-0.273921,  0.527326, -0.355887, -0.616422],
        [-0.288008,  0.087386,  0.379511, -0.363582],...
 y: array([[[-0.324618, -0.347045, -0.426054, -0.486301],
        [-0.273921,  0.527326, -0.355886, -0.616422],
        [-0.288008,  0.087386,  0.379511, -0.363582],...
2025-05-15 02:01:50.101350 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 92 / 144 (63.9%)
Max absolute difference: 0.30167082
Max relative difference: 15.53813336
 x: array([[[-0.076813,  0.226886, -0.305938,  0.152441],
        [ 0.164712,  0.025035, -0.03395 ,  0.226316],
        [ 0.352732, -0.100726,  0.214842,  0.22899 ],...
 y: array([[[-0.076813,  0.226886, -0.305938,  0.152441],
        [ 0.153346,  0.034534, -0.046749,  0.22284 ],
        [ 0.35518 , -0.117535,  0.200159,  0.255543],...
2025-05-15 02:01:50.283156 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 75 / 144 (52.1%)
Max absolute difference: 0.15617105
Max relative difference: 33.86127203
 x: array([[[ 4.007255e-01,  3.685984e-01,  3.822939e-01,  1.070085e-01],
        [ 4.047669e-01,  1.181834e-01,  4.375410e-01,  2.845119e-01],
        [ 4.055546e-01, -7.802802e-02,  4.383959e-01,  4.414933e-01],...
 y: array([[[ 0.400726,  0.368598,  0.382294,  0.107009],
        [ 0.40327 ,  0.21093 ,  0.417079,  0.21877 ],
        [ 0.407511, -0.051851,  0.475054,  0.405039],...
2025-05-15 02:01:50.454638 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.01027545
Max relative difference: 129.19340976
 x: array([[[-0.17801 , -0.332185, -0.083011,  0.050209],
        [ 0.402148,  0.054542,  0.439421, -0.344421],
        [ 0.635307, -0.014739,  0.121561,  0.134022],...
 y: array([[[-1.780097e-01, -3.321854e-01, -8.301070e-02,  5.020949e-02],
        [ 4.021484e-01,  5.454227e-02,  4.394214e-01, -3.444208e-01],
        [ 6.353072e-01, -1.473853e-02,  1.215606e-01,  1.340222e-01],...
2025-05-15 02:01:50.622983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.04786323
Max relative difference: 144.82095163
 x: array([[[-0.10476 , -0.170096,  0.456561,  0.556999],
        [-0.465095, -0.233451, -0.162939,  0.08994 ],
        [ 0.116577, -0.223112,  0.292605, -0.573555],...
 y: array([[[-0.10476 , -0.170096,  0.456561,  0.556999],
        [-0.465095, -0.233451, -0.162938,  0.08994 ],
        [ 0.116577, -0.223112,  0.292605, -0.573555],...
2025-05-15 02:01:50.775116 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 106 / 152 (69.7%)
Max absolute difference: 0.36785186
Max relative difference: 9.32776121
 x: array([[[-1.534007e-02, -3.904082e-01, -2.246301e-01, -1.456215e-02],
        [-1.976745e-01, -3.766466e-01, -4.712404e-02,  9.228387e-02],
        [-3.596975e-01, -3.661885e-01,  8.328520e-02,  1.805621e-01],...
 y: array([[[-0.01534 , -0.390408, -0.22463 , -0.014562],
        [-0.188558, -0.377335, -0.055999,  0.086942],
        [-0.361775, -0.364261,  0.112631,  0.188445],...
2025-05-15 02:01:50.944627 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 96 / 152 (63.2%)
Max absolute difference: 0.18064345
Max relative difference: 31.79416306
 x: array([[[ 0.128514, -0.458598, -0.011251,  0.457918],
        [-0.055721, -0.075542,  0.110238,  0.02889 ],
        [-0.239957,  0.307513,  0.231728, -0.400139],...
 y: array([[[ 0.128514, -0.458598, -0.011251,  0.457918],
        [ 0.021852, -0.236829,  0.059085,  0.209533],
        [-0.172081,  0.166388,  0.186969, -0.242075],...
2025-05-15 02:01:51.121054 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.19191959
Max relative difference: 44.29021539
 x: array([[[-0.442516, -0.170881,  0.279357, -0.261441],
        [-0.045211, -0.405544,  0.514663, -0.420983],
        [ 0.247982, -0.147751,  0.406929, -0.30932 ],...
 y: array([[[-0.442516, -0.170881,  0.279357, -0.261441],
        [-0.045211, -0.405544,  0.514663, -0.420983],
        [ 0.247982, -0.147751,  0.406929, -0.30932 ],...
2025-05-15 02:01:51.279533 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[-8.926059e-02,  4.705668e-01,  3.457611e-02,  9.679158e-02],
        [-1.293400e-01,  4.558763e-01, -1.033251e-04, -2.511666e-03],
        [-2.094989e-01,  4.264953e-01, -6.946220e-02, -2.011182e-01],...
 y: array([[[-8.926059e-02,  4.705668e-01,  3.457611e-02,  9.679158e-02],
        [-1.293400e-01,  4.558763e-01, -1.033251e-04, -2.511666e-03],
        [-2.094989e-01,  4.264953e-01, -6.946220e-02, -2.011182e-01],...
2025-05-15 02:01:51.465260 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[-0.415074,  0.375223, -0.336963,  0.26297 ],
        [-0.308759,  0.250428, -0.269951,  0.251813],
        [-0.202444,  0.125633, -0.202939,  0.240656],...
 y: array([[[-0.415074,  0.375223, -0.336963,  0.26297 ],
        [-0.308759,  0.250428, -0.269951,  0.251813],
        [-0.202444,  0.125633, -0.202939,  0.240656],...
2025-05-15 02:01:51.611760 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[ 0.007707, -0.192394, -0.042171,  0.197843],
        [-0.170467, -0.220402, -0.171354,  0.051254],
        [-0.34864 , -0.24841 , -0.300537, -0.095335],...
 y: array([[[ 0.007707, -0.192394, -0.042171,  0.197843],
        [-0.086329, -0.207176, -0.110351,  0.120477],
        [-0.274401, -0.23674 , -0.246711, -0.034256],...
2025-05-15 02:01:51.787106 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 20, 4), (2, 19, 4) mismatch)
 x: array([[[-0.260257, -0.122747,  0.322879,  0.047863],
        [-0.195699, -0.210613,  0.145893, -0.126316],
        [-0.131142, -0.298479, -0.031094, -0.300494],...
 y: array([[[-0.260257, -0.122747,  0.322879,  0.047863],
        [-0.192113, -0.215495,  0.13606 , -0.135992],
        [-0.123969, -0.308242, -0.050759, -0.319847],...
2025-05-15 02:01:51.957371 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.03170468
Max relative difference: 1077.83604081
 x: array([[[-0.113846, -0.071195,  0.43717 ,  0.056611],
        [ 0.504456,  0.073507,  0.078054, -0.192395],
        [ 0.438968, -0.177829, -0.478201,  0.201633],...
 y: array([[[-1.138464e-01, -7.119455e-02,  4.371701e-01,  5.661140e-02],
        [ 5.044564e-01,  7.350673e-02,  7.805424e-02, -1.923947e-01],
        [ 4.389682e-01, -1.778287e-01, -4.782010e-01,  2.016326e-01],...
2025-05-15 02:01:52.123842 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 112 / 160 (70%)
Max absolute difference: 0.35262978
Max relative difference: 27.11883434
 x: array([[[ 0.346926, -0.377003, -0.017345,  0.310569],
        [ 0.186504, -0.221669, -0.176134,  0.344073],
        [ 0.026083, -0.066334, -0.334923,  0.377576],...
 y: array([[[ 3.469263e-01, -3.770035e-01, -1.734492e-02,  3.105693e-01],
        [ 1.949477e-01, -2.298441e-01, -1.677768e-01,  3.423092e-01],
        [ 4.296920e-02, -8.268465e-02, -3.182087e-01,  3.740491e-01],...
2025-05-15 02:01:52.290567 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 100 / 160 (62.5%)
Max absolute difference: 0.20116627
Max relative difference: 30.88357372
 x: array([[[ 0.233144, -0.075395,  0.453635,  0.286132],
        [ 0.075422, -0.187467,  0.027636,  0.380126],
        [-0.082301, -0.299538, -0.398363,  0.47412 ],...
 y: array([[[ 0.233144, -0.075395,  0.453635,  0.286132],
        [ 0.149902, -0.134544,  0.228802,  0.33574 ],
        [-0.016583, -0.252842, -0.220864,  0.434956],...
2025-05-15 02:01:52.463894 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.29046523
Max relative difference: 70.73094731
 x: array([[[ 0.164838,  0.444721, -0.614216,  0.012925],
        [-0.049266, -0.055576, -0.525134,  0.53243 ],
        [-0.06349 , -0.215312, -0.17081 , -0.304341],...
 y: array([[[ 0.164838,  0.444721, -0.614216,  0.012925],
        [-0.049266, -0.055576, -0.525134,  0.53243 ],
        [-0.06349 , -0.215312, -0.17081 , -0.304341],...
2025-05-15 02:01:52.638178 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[-1.635876e-01,  1.891166e-01,  2.850788e-01, -2.797209e-01],
        [-2.329160e-01,  9.541029e-02,  1.590272e-01, -2.778753e-01],
        [-3.869791e-01, -1.128259e-01, -1.210875e-01, -2.737738e-01],...
 y: array([[[-1.635876e-01,  1.891166e-01,  2.850788e-01, -2.797209e-01],
        [-2.329160e-01,  9.541031e-02,  1.590272e-01, -2.778753e-01],
        [-3.869790e-01, -1.128259e-01, -1.210875e-01, -2.737738e-01],...
2025-05-15 02:01:52.808392 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[ 0.352117, -0.367879, -0.462674, -0.44083 ],
        [-0.051232,  0.025649, -0.097043, -0.374616],
        [-0.454581,  0.419177,  0.268588, -0.308403],...
 y: array([[[ 0.352117, -0.367879, -0.462674, -0.44083 ],
        [-0.049109,  0.023577, -0.098968, -0.374965],
        [-0.450335,  0.415034,  0.264739, -0.3091  ],...
2025-05-15 02:01:52.973433 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[ 0.32731 , -0.339706, -0.142091, -0.191165],
        [ 0.196451, -0.336905, -0.218227,  0.066766],
        [ 0.065592, -0.334104, -0.294363,  0.324696],...
 y: array([[[ 0.32731 , -0.339706, -0.142091, -0.191165],
        [ 0.264996, -0.338372, -0.178347, -0.068341],
        [ 0.126521, -0.335408, -0.258914,  0.204602],...
2025-05-15 02:01:53.145627 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 21, 4), (2, 20, 4) mismatch)
 x: array([[[ 0.345881, -0.179892,  0.408669,  0.346112],
        [-0.025284, -0.119369,  0.308801,  0.347502],
        [-0.396449, -0.058846,  0.208933,  0.348893],...
 y: array([[[ 0.345881, -0.179892,  0.408669,  0.346112],
        [-0.044819, -0.116183,  0.303545,  0.347576],
        [-0.435519, -0.052475,  0.198421,  0.349039],...
2025-05-15 02:01:53.301323 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[-0.00427 , -0.401942,  0.334675, -0.277324],
        [-0.005721, -0.335194,  0.361684, -0.255076],
        [-0.009347, -0.168327,  0.429208, -0.199456],...
 y: array([[[-0.00427 , -0.401942,  0.334675, -0.277324],
        [-0.005721, -0.335194,  0.361684, -0.255076],
        [-0.009347, -0.168327,  0.429208, -0.199456],...
2025-05-15 02:01:53.474892 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[ 0.150038,  0.352893,  0.025819,  0.268608],
        [-0.10568 ,  0.066037,  0.046768,  0.110643],
        [-0.361399, -0.22082 ,  0.067717, -0.047322],...
 y: array([[[ 0.150038,  0.352893,  0.025819,  0.268608],
        [-0.103123,  0.068905,  0.046558,  0.112223],
        [-0.356285, -0.215083,  0.067298, -0.044163],...
2025-05-15 02:01:53.649723 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[ 0.410943, -0.322336,  0.199698, -0.000741],
        [ 0.397421, -0.33054 ,  0.13405 ,  0.003816],
        [ 0.383898, -0.338744,  0.068401,  0.008373],...
 y: array([[[ 4.109431e-01, -3.223365e-01,  1.996980e-01, -7.411221e-04],
        [ 4.052063e-01, -3.258168e-01,  1.718472e-01,  1.192209e-03],
        [ 3.908642e-01, -3.345175e-01,  1.022203e-01,  6.025535e-03],...
2025-05-15 02:01:53.801512 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 22, 4), (2, 21, 4) mismatch)
 x: array([[[-0.261884,  0.373756, -0.06394 , -0.058375],
        [-0.081207,  0.010471, -0.162747, -0.058526],
        [ 0.099469, -0.352813, -0.261555, -0.058676],...
 y: array([[[-0.261884,  0.373756, -0.06394 , -0.058375],
        [-0.072174, -0.007693, -0.167688, -0.058533],
        [ 0.117537, -0.389141, -0.271436, -0.058691],...
2025-05-15 02:01:53.976985 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.21612009
Max relative difference: 43.40236342
 x: array([[[-0.448673,  0.50232 , -0.185989, -0.70715 ],
        [-0.335896, -0.068641,  0.08488 ,  0.015361],
        [-0.341477, -0.119594, -0.734335,  0.166232],...
 y: array([[[-0.448673,  0.50232 , -0.185989, -0.70715 ],
        [-0.335896, -0.06864 ,  0.08488 ,  0.015361],
        [-0.341477, -0.119594, -0.734335,  0.166232],...
2025-05-15 02:01:54.136424 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 130 / 176 (73.9%)
Max absolute difference: 0.35208975
Max relative difference: 69.21760554
 x: array([[[ 0.320686, -0.435932,  0.451319, -0.442466],
        [ 0.399096, -0.277586,  0.398011, -0.448412],
        [ 0.477506, -0.11924 ,  0.344703, -0.454358],...
 y: array([[[ 0.320686, -0.435932,  0.451319, -0.442466],
        [ 0.394616, -0.286634,  0.401057, -0.448072],
        [ 0.468545, -0.137337,  0.350795, -0.453678],...
2025-05-15 02:01:54.311760 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 120 / 176 (68.2%)
Max absolute difference: 0.16324405
Max relative difference: 7.88671197
 x: array([[[ 0.126972, -0.316093, -0.170496, -0.156441],
        [-0.001838, -0.366113, -0.095886, -0.280939],
        [-0.130648, -0.416132, -0.021277, -0.405437],...
 y: array([[[ 0.126972, -0.316093, -0.170496, -0.156441],
        [ 0.072325, -0.337314, -0.138844, -0.209259],
        [-0.064291, -0.390365, -0.059712, -0.341302],...
2025-05-15 02:01:54.468796 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.29846712
Max relative difference: 17.12827418
 x: array([[[-0.118207,  0.064828, -0.084933, -0.148503],
        [ 0.217024,  0.028603, -0.278254,  0.469374],
        [ 0.186329,  0.407907, -0.510084,  0.061038],...
 y: array([[[-0.118207,  0.064828, -0.084934, -0.148503],
        [ 0.217024,  0.028603, -0.278254,  0.469374],
        [ 0.186329,  0.407907, -0.510084,  0.061038],...
2025-05-15 02:01:54.610943 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.45588635
Max relative difference: 357.27721974
 x: array([[[-0.712035, -0.553101,  0.068534,  0.173819],
        [-0.285833,  0.012459,  0.075427,  0.510008],
        [-0.486342,  0.008077,  0.030022, -0.168617],...
 y: array([[[-0.712035, -0.553101,  0.068534,  0.173819],
        [-0.285833,  0.012459,  0.075427,  0.510008],
        [-0.486342,  0.008077,  0.030022, -0.168617],...
2025-05-15 02:01:54.752638 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 148 / 184 (80.4%)
Max absolute difference: 0.36998402
Max relative difference: 173.13664039
 x: array([[[-0.22218 , -0.329955,  0.069636,  0.147163],
        [-0.137134, -0.176129,  0.204654, -0.104694],
        [-0.052089, -0.022303,  0.339673, -0.356552],...
 y: array([[[-2.221801e-01, -3.299545e-01,  6.963577e-02,  1.471632e-01],
        [-1.421598e-01, -1.852183e-01,  1.966759e-01, -8.981180e-02],
        [-6.213941e-02, -4.048198e-02,  3.237161e-01, -3.267868e-01],...
2025-05-15 02:01:54.893843 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 123 / 184 (66.8%)
Max absolute difference: 0.172857
Max relative difference: 70.20307449
 x: array([[[-0.2505  ,  0.249348,  0.041933, -0.278684],
        [-0.039113, -0.018976,  0.211575, -0.252074],
        [ 0.172274, -0.2873  ,  0.381217, -0.225465],...
 y: array([[[-0.2505  ,  0.249348,  0.041933, -0.278684],
        [-0.171868,  0.149537,  0.105037, -0.268785],
        [ 0.052795, -0.135639,  0.285332, -0.240505],...
2025-05-15 02:01:55.036082 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.15210184
Max relative difference: 72.99305835
 x: array([[[-0.201009, -0.164183, -0.035899, -0.720761],
        [-0.367255,  0.636018,  0.134055, -0.502871],
        [-0.540945,  0.673738, -0.094315, -0.185715],...
 y: array([[[-0.201009, -0.164183, -0.035899, -0.720761],
        [-0.367255,  0.636018,  0.134055, -0.502871],
        [-0.540945,  0.673738, -0.094315, -0.185715],...
2025-05-15 02:01:55.207529 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-3.722082e-01,  1.785238e-01, -4.388934e-01, -3.408306e-01],
        [-3.097657e-01,  1.937218e-01, -3.376072e-01, -2.496420e-01],
        [-1.016241e-01,  2.443818e-01,  1.356393e-05,  5.432003e-02],...
 y: array([[[-3.722082e-01,  1.785238e-01, -4.388934e-01, -3.408306e-01],
        [-3.097657e-01,  1.937218e-01, -3.376072e-01, -2.496420e-01],
        [-1.016241e-01,  2.443818e-01,  1.358405e-05,  5.432005e-02],...
2025-05-15 02:01:55.361803 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-4.610668e-01,  4.560676e-01,  4.062125e-01,  3.421227e-01],
        [-4.712968e-01,  2.827011e-01,  2.483676e-01,  1.584451e-01],
        [-4.815267e-01,  1.093347e-01,  9.052261e-02, -2.523248e-02],...
 y: array([[[-4.610668e-01,  4.560676e-01,  4.062125e-01,  3.421227e-01],
        [-4.711108e-01,  2.858532e-01,  2.512375e-01,  1.617847e-01],
        [-4.811547e-01,  1.156389e-01,  9.626242e-02, -1.855330e-02],...
2025-05-15 02:01:55.537668 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-0.225   , -0.211463,  0.493191, -0.104595],
        [-0.252258,  0.065994,  0.354146, -0.054943],
        [-0.279516,  0.343451,  0.215102, -0.00529 ],...
 y: array([[[-0.225   , -0.211463,  0.493191, -0.104595],
        [-0.233707, -0.122831,  0.448774, -0.088734],
        [-0.262732,  0.17261 ,  0.300717, -0.035863],...
2025-05-15 02:01:55.690543 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 24, 4), (2, 23, 4) mismatch)
 x: array([[[-0.351649,  0.015094, -0.056565, -0.16664 ],
        [-0.090225,  0.121766, -0.21839 , -0.228371],
        [ 0.171199,  0.228437, -0.380215, -0.290101],...
 y: array([[[-0.351649,  0.015094, -0.056565, -0.16664 ],
        [-0.078342,  0.126614, -0.225746, -0.231176],
        [ 0.194965,  0.238135, -0.394926, -0.295713],...
2025-05-15 02:01:55.865180 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.45287752
Max relative difference: 8.2507281
 x: array([[[-0.455891,  0.008772, -0.415383, -0.885135],
        [-0.082154,  0.320036,  0.398849, -0.819277],
        [-0.105096,  0.732185, -0.571494,  0.317364],...
 y: array([[[-0.455891,  0.008772, -0.415383, -0.885135],
        [-0.082154,  0.320036,  0.398849, -0.819277],
        [-0.105096,  0.732185, -0.571494,  0.317364],...
2025-05-15 02:01:56.033866 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 150 / 192 (78.1%)
Max absolute difference: 0.45126329
Max relative difference: 45.59785889
 x: array([[[-0.149307, -0.432612, -0.161694, -0.246982],
        [-0.002188, -0.434497,  0.108263, -0.006257],
        [ 0.14493 , -0.436382,  0.378221,  0.234468],...
 y: array([[[-0.149307, -0.432612, -0.161694, -0.246982],
        [-0.011143, -0.434382,  0.091831, -0.02091 ],
        [ 0.12702 , -0.436153,  0.345357,  0.205163],...
2025-05-15 02:01:56.186130 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 130 / 192 (67.7%)
Max absolute difference: 0.22339516
Max relative difference: 18.86469158
 x: array([[[-0.17387 ,  0.21684 ,  0.453678,  0.171992],
        [-0.12841 ,  0.009621,  0.386921, -0.014376],
        [-0.08295 , -0.197598,  0.320164, -0.200744],...
 y: array([[[-0.17387 ,  0.21684 ,  0.453678,  0.171992],
        [-0.159348,  0.150645,  0.432353,  0.112458],
        [-0.110942, -0.070005,  0.361269, -0.08599 ],...
2025-05-15 02:01:56.358983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.28107963
Max relative difference: 55.62397919
 x: array([[[ 0.034581,  0.390584,  0.351762, -0.606815],
        [-0.30279 , -0.082711, -0.135543, -0.400849],
        [-0.591128,  0.194433, -0.510641, -0.02484 ],...
 y: array([[[ 0.034581,  0.390584,  0.351762, -0.606815],
        [-0.30279 , -0.082711, -0.135543, -0.400849],
        [-0.591128,  0.194434, -0.510641, -0.02484 ],...
2025-05-15 02:01:56.525661 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[-3.717205e-02,  3.093270e-01, -4.436996e-01, -4.641467e-01],
        [-2.063659e-02,  2.479724e-01, -3.975243e-01, -3.934732e-01],
        [ 4.550525e-02,  2.553711e-03, -2.128232e-01, -1.107793e-01],...
 y: array([[[-3.717205e-02,  3.093270e-01, -4.436996e-01, -4.641467e-01],
        [-2.063659e-02,  2.479724e-01, -3.975244e-01, -3.934732e-01],
        [ 4.550524e-02,  2.553720e-03, -2.128232e-01, -1.107794e-01],...
2025-05-15 02:01:56.695065 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[-2.840494e-01, -1.730672e-01,  4.442534e-01, -1.793600e-02],
        [-4.586663e-02, -1.122738e-01,  4.661217e-01, -8.771068e-03],
        [ 1.923161e-01, -5.148037e-02,  4.879900e-01,  3.938648e-04],...
 y: array([[[-2.840494e-01, -1.730672e-01,  4.442534e-01, -1.793600e-02],
        [-5.104452e-02, -1.135954e-01,  4.656463e-01, -8.970306e-03],
        [ 1.819603e-01, -5.412356e-02,  4.870392e-01, -4.610785e-06],...
2025-05-15 02:01:56.866983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[ 9.426530e-03,  2.050868e-01, -4.187036e-01,  4.222155e-01],
        [ 1.706586e-01, -3.318605e-02, -4.435480e-01,  4.249059e-01],
        [ 3.318907e-01, -2.714589e-01, -4.683924e-01,  4.275962e-01],...
 y: array([[[ 0.009427,  0.205087, -0.418704,  0.422216],
        [ 0.052422,  0.141547, -0.425329,  0.422933],
        [ 0.224403, -0.11261 , -0.451829,  0.425803],...
2025-05-15 02:01:57.019569 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 25, 4), (2, 24, 4) mismatch)
 x: array([[[ 0.196399, -0.180728, -0.373773, -0.309553],
        [ 0.261131, -0.18495 , -0.191708, -0.36724 ],
        [ 0.325862, -0.189173, -0.009643, -0.424928],...
 y: array([[[ 1.963992e-01, -1.807276e-01, -3.737729e-01, -3.095529e-01],
        [ 2.639452e-01, -1.851341e-01, -1.837919e-01, -3.697485e-01],
        [ 3.314912e-01, -1.895406e-01,  6.189170e-03, -4.299442e-01],...
2025-05-15 02:01:57.195214 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[-0.278864,  0.001699,  0.093202, -0.321694],
        [-0.229059, -0.021178,  0.111751, -0.320469],
        [ 0.019963, -0.135563,  0.204494, -0.314349],...
 y: array([[[-0.278864,  0.001699,  0.093202, -0.321694],
        [-0.229059, -0.021178,  0.111751, -0.320469],
        [ 0.019963, -0.135563,  0.204494, -0.314349],...
2025-05-15 02:01:57.365399 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[-0.234412,  0.392533,  0.260827,  0.232827],
        [-0.257093,  0.265308,  0.293197, -0.036813],
        [-0.279775,  0.138083,  0.325567, -0.306453],...
 y: array([[[-0.234412,  0.392533,  0.260827,  0.232827],
        [-0.256526,  0.268489,  0.292388, -0.030072],
        [-0.278641,  0.144444,  0.323948, -0.292971],...
2025-05-15 02:01:57.541114 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[ 1.792934e-01, -3.726216e-01,  2.045423e-01, -3.657829e-01],
        [ 1.527943e-02, -1.228673e-01, -1.167352e-02, -3.582887e-01],
        [-1.487345e-01,  1.268871e-01, -2.278894e-01, -3.507945e-01],...
 y: array([[[ 0.179293, -0.372622,  0.204542, -0.365783],
        [ 0.144248, -0.319255,  0.158342, -0.364182],
        [-0.030981, -0.052424, -0.072657, -0.356175],...
2025-05-15 02:01:57.719961 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 26, 4), (2, 25, 4) mismatch)
 x: array([[[-0.196057,  0.084888,  0.239182,  0.496593],
        [-0.151349,  0.101807,  0.198291,  0.232003],
        [-0.106642,  0.118726,  0.157399, -0.032588],...
 y: array([[[-0.196057,  0.084888,  0.239182,  0.496593],
        [-0.149487,  0.102512,  0.196587,  0.220978],
        [-0.102917,  0.120135,  0.153992, -0.054637],...
2025-05-15 02:01:57.887818 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.51797567
Max relative difference: 9.90706127
 x: array([[[ 0.025175,  0.339757, -0.097417,  0.239596],
        [-0.409082,  0.205756,  0.069357,  0.745812],
        [-0.093441,  0.820949,  0.242909,  0.627022],...
 y: array([[[ 0.025175,  0.339757, -0.097417,  0.239596],
        [-0.409082,  0.205756,  0.069357,  0.745812],
        [-0.093441,  0.820949,  0.242909,  0.627022],...
2025-05-15 02:01:58.058682 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 162 / 208 (77.9%)
Max absolute difference: 0.43070581
Max relative difference: 46.11455918
 x: array([[[-0.158858, -0.023889,  0.234503,  0.309868],
        [ 0.043639,  0.12453 ,  0.299991,  0.31512 ],
        [ 0.246136,  0.272948,  0.365478,  0.320372],...
 y: array([[[-0.158858, -0.023889,  0.234503,  0.309868],
        [ 0.030679,  0.115031,  0.295799,  0.314784],
        [ 0.220217,  0.253951,  0.357096,  0.3197  ],...
2025-05-15 02:01:58.231464 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 142 / 208 (68.3%)
Max absolute difference: 0.25888163
Max relative difference: 30.61523975
 x: array([[[ 4.397321e-01,  4.358093e-01, -3.425682e-01, -1.833250e-01],
        [ 3.879576e-01,  3.721250e-01, -1.983567e-01, -2.862638e-01],
        [ 3.361832e-01,  3.084406e-01, -5.414518e-02, -3.892026e-01],...
 y: array([[[ 0.439732,  0.435809, -0.342568, -0.183325],
        [ 0.428669,  0.422202, -0.311754, -0.20532 ],
        [ 0.373355,  0.354163, -0.157682, -0.315298],...
2025-05-15 02:01:58.384748 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.25419887
Max relative difference: 23.62175306
 x: array([[[-0.296533, -0.493504,  0.580194, -0.282879],
        [-0.563244, -0.041984,  0.307303, -0.163766],
        [-0.350287,  0.958961,  0.09341 , -0.34957 ],...
 y: array([[[-0.296533, -0.493504,  0.580194, -0.282879],
        [-0.563244, -0.041984,  0.307303, -0.163766],
        [-0.350288,  0.958961,  0.09341 , -0.34957 ],...
2025-05-15 02:01:58.525108 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[-0.350851,  0.100647,  0.420199,  0.286141],
        [-0.338853,  0.093769,  0.380387,  0.293446],
        [-0.258863,  0.047913,  0.114971,  0.342149],...
 y: array([[[-0.350851,  0.100647,  0.420199,  0.286141],
        [-0.338853,  0.093769,  0.380387,  0.293446],
        [-0.258863,  0.047913,  0.114971,  0.342149],...
2025-05-15 02:01:58.672093 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[-3.701935e-01, -7.677288e-02, -4.053599e-01,  4.415574e-01],
        [-1.915517e-01, -2.226728e-01, -3.167234e-01,  2.190621e-01],
        [-1.290980e-02, -3.685728e-01, -2.280868e-01, -3.433172e-03],...
 y: array([[[-0.370194, -0.076773, -0.40536 ,  0.441557],
        [-0.196554, -0.218588, -0.319205,  0.225292],
        [-0.022914, -0.360402, -0.23305 ,  0.009027],...
2025-05-15 02:01:58.854781 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[ 0.362291,  0.350752, -0.433626, -0.329991],
        [ 0.222048,  0.374574, -0.285629, -0.235826],
        [ 0.081805,  0.398396, -0.137631, -0.141661],...
 y: array([[[ 3.622913e-01,  3.507520e-01, -4.336263e-01, -3.299905e-01],
        [ 3.397831e-01,  3.545753e-01, -4.098736e-01, -3.148777e-01],
        [ 1.897286e-01,  3.800639e-01, -2.515225e-01, -2.141254e-01],...
2025-05-15 02:01:59.027800 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 27, 4), (2, 26, 4) mismatch)
 x: array([[[-0.049783,  0.026869,  0.188975,  0.027186],
        [-0.049824,  0.152484,  0.107206, -0.017789],
        [-0.049865,  0.2781  ,  0.025438, -0.062764],...
 y: array([[[-0.049783,  0.026869,  0.188975,  0.027186],
        [-0.049826,  0.157509,  0.103936, -0.019588],
        [-0.049869,  0.288149,  0.018897, -0.066362],...
2025-05-15 02:01:59.181234 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[ 0.462865,  0.178907, -0.367822, -0.27032 ],
        [ 0.43264 ,  0.177498, -0.364644, -0.258474],
        [ 0.130382,  0.163403, -0.332859, -0.140013],...
 y: array([[[ 0.462865,  0.178907, -0.367822, -0.27032 ],
        [ 0.43264 ,  0.177498, -0.364644, -0.258474],
        [ 0.130382,  0.163403, -0.332859, -0.140013],...
2025-05-15 02:01:59.359682 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[-0.463585,  0.491893, -0.201995,  0.110431],
        [-0.146081,  0.442029, -0.216196,  0.176985],
        [ 0.171424,  0.392164, -0.230397,  0.243538],...
 y: array([[[-0.463585,  0.491893, -0.201995,  0.110431],
        [-0.15585 ,  0.443563, -0.215759,  0.174937],
        [ 0.151885,  0.395233, -0.229523,  0.239442],...
2025-05-15 02:01:59.528117 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[ 0.143188,  0.070217, -0.211139,  0.232158],
        [ 0.133147, -0.031756, -0.073233,  0.142236],
        [ 0.123106, -0.133729,  0.064672,  0.052313],...
 y: array([[[ 1.431884e-01,  7.021701e-02, -2.111390e-01,  2.321585e-01],
        [ 1.421126e-01,  5.929134e-02, -1.963634e-01,  2.225239e-01],
        [ 1.313543e-01, -4.996539e-02, -4.860732e-02,  1.261781e-01],...
2025-05-15 02:01:59.687190 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 28, 4), (2, 27, 4) mismatch)
 x: array([[[-2.879651e-01, -4.160495e-01,  2.049985e-01,  3.381501e-01],
        [-3.398505e-01, -2.445615e-01,  8.556049e-02,  3.141396e-01],
        [-3.917360e-01, -7.307347e-02, -3.387750e-02,  2.901291e-01],...
 y: array([[[-0.287965, -0.41605 ,  0.204998,  0.33815 ],
        [-0.341846, -0.237966,  0.080967,  0.313216],
        [-0.395727, -0.059882, -0.043065,  0.288282],...
2025-05-15 02:01:59.868667 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.46623241
Max relative difference: 96.62667573
 x: array([[[ 0.151501,  0.594159,  0.6535  , -0.591483],
        [ 0.203922,  0.18985 ,  0.494977,  0.30791 ],
        [ 0.241591, -0.000993,  0.370798, -0.622181],...
 y: array([[[ 0.151501,  0.594159,  0.6535  , -0.591483],
        [ 0.203922,  0.18985 ,  0.494977,  0.30791 ],
        [ 0.241591, -0.000993,  0.370798, -0.622181],...
2025-05-15 02:02:00.028883 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 171 / 224 (76.3%)
Max absolute difference: 0.42703147
Max relative difference: 49.49575126
 x: array([[[ 0.12797 , -0.045677, -0.290108,  0.130661],
        [ 0.193777, -0.168489, -0.113885,  0.019935],
        [ 0.259583, -0.291301,  0.062338, -0.090791],...
 y: array([[[ 0.12797 , -0.045677, -0.290108,  0.130661],
        [ 0.189389, -0.160301, -0.125633,  0.027317],
        [ 0.250809, -0.274926,  0.038841, -0.076027],...
2025-05-15 02:02:00.201885 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 165 / 224 (73.7%)
Max absolute difference: 0.27087292
Max relative difference: 27.71641234
 x: array([[[-3.739355e-01,  1.391180e-01, -1.030119e-01, -4.757952e-01],
        [-3.291672e-01,  9.276461e-02, -6.103231e-02, -3.536085e-01],
        [-2.843989e-01,  4.641120e-02, -1.905274e-02, -2.314219e-01],...
 y: array([[[-0.373935,  0.139118, -0.103012, -0.475795],
        [-0.369139,  0.134152, -0.098514, -0.462704],
        [-0.321173,  0.084487, -0.053536, -0.33179 ],...
2025-05-15 02:02:00.373088 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.24675808
Max relative difference: 537.87828955
 x: array([[[-0.016519,  0.051329,  0.33915 ,  0.517304],
        [-0.372555,  0.199182, -0.171962,  0.296401],
        [ 0.129187,  0.193062, -0.115741,  0.184153],...
 y: array([[[-0.016519,  0.051329,  0.33915 ,  0.517304],
        [-0.372555,  0.199182, -0.171962,  0.296401],
        [ 0.129187,  0.193062, -0.115741,  0.184153],...
2025-05-15 02:02:00.526839 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-4.044484e-01, -3.686144e-01, -3.886589e-01,  5.743601e-05],
        [-3.931897e-01, -3.659153e-01, -3.821707e-01, -8.222974e-03],
        [-1.680156e-01, -3.119326e-01, -2.524071e-01, -1.738315e-01],...
 y: array([[[-4.044484e-01, -3.686144e-01, -3.886589e-01,  5.743601e-05],
        [-3.931897e-01, -3.659153e-01, -3.821707e-01, -8.222991e-03],
        [-1.680156e-01, -3.119326e-01, -2.524070e-01, -1.738315e-01],...
2025-05-15 02:02:00.668152 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-0.172387,  0.486667, -0.416306,  0.049898],
        [-0.102908,  0.168931, -0.158405, -0.079601],
        [-0.033429, -0.148804,  0.099496, -0.2091  ],...
 y: array([[[-0.172387,  0.486667, -0.416306,  0.049898],
        [-0.105224,  0.179523, -0.167002, -0.075285],
        [-0.038061, -0.127621,  0.082303, -0.200467],...
2025-05-15 02:02:00.842706 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-0.16663 , -0.222659, -0.442973, -0.281014],
        [-0.133443, -0.234347, -0.449059, -0.16481 ],
        [-0.100256, -0.246034, -0.455145, -0.048607],...
 y: array([[[-0.16663 , -0.222659, -0.442973, -0.281014],
        [-0.164849, -0.223286, -0.443299, -0.274781],
        [-0.129247, -0.235824, -0.449829, -0.150118],...
2025-05-15 02:02:01.015983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 29, 4), (2, 28, 4) mismatch)
 x: array([[[-3.328797e-02, -4.463392e-02, -4.517718e-01, -3.868200e-01],
        [ 1.299384e-01, -1.767634e-01, -4.599077e-01, -1.741324e-01],
        [ 2.931647e-01, -3.088928e-01, -4.680436e-01,  3.855533e-02],...
 y: array([[[-0.033288, -0.044634, -0.451772, -0.38682 ],
        [ 0.135984, -0.181657, -0.460209, -0.166255],
        [ 0.305256, -0.31868 , -0.468646,  0.05431 ],...
2025-05-15 02:02:01.186305 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[-0.146357, -0.13031 ,  0.227126,  0.334889],
        [-0.146357, -0.13031 ,  0.227126,  0.334889],
        [ 0.006125, -0.000508,  0.067058,  0.117899],...
 y: array([[[-0.146357, -0.13031 ,  0.227126,  0.334889],
        [-0.146357, -0.13031 ,  0.227126,  0.334889],
        [ 0.006125, -0.000508,  0.067058,  0.117899],...
2025-05-15 02:02:01.357196 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[ 0.26488 ,  0.419727, -0.197332,  0.177719],
        [ 0.062606,  0.370672, -0.220448,  0.20602 ],
        [-0.139669,  0.321616, -0.243563,  0.234321],...
 y: array([[[ 0.26488 ,  0.419727, -0.197332,  0.177719],
        [ 0.06983 ,  0.372424, -0.219622,  0.205009],
        [-0.125221,  0.32512 , -0.241912,  0.232299],...
2025-05-15 02:02:01.525481 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[ 4.391894e-01, -3.664724e-01,  4.345239e-01, -1.080562e-01],
        [ 3.882316e-01, -3.250178e-01,  3.635971e-01, -2.134282e-01],
        [ 3.372739e-01, -2.835631e-01,  2.926702e-01, -3.188002e-01],...
 y: array([[[ 0.439189, -0.366472,  0.434524, -0.108056],
        [ 0.439189, -0.366472,  0.434524, -0.108056],
        [ 0.384457, -0.321947,  0.358343, -0.221234],...
2025-05-15 02:02:01.680635 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 30, 4), (2, 29, 4) mismatch)
 x: array([[[-4.076400e-01, -2.608680e-01, -4.664748e-01,  3.053998e-01],
        [-1.776391e-01, -2.805548e-01, -4.083255e-01,  2.036113e-01],
        [ 5.236191e-02, -3.002415e-01, -3.501761e-01,  1.018228e-01],...
 y: array([[[-0.40764 , -0.260868, -0.466475,  0.3054  ],
        [-0.169425, -0.281258, -0.406249,  0.199976],
        [ 0.068791, -0.301648, -0.346023,  0.094552],...
2025-05-15 02:02:01.855722 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.49750925
Max relative difference: 13.4365484
 x: array([[[-0.657625, -0.427947, -0.234906,  0.243827],
        [-0.357855,  0.170762, -0.745018, -0.276512],
        [-0.244936, -0.25132 , -0.030525,  0.23355 ],...
 y: array([[[-0.657625, -0.427947, -0.234906,  0.243827],
        [-0.357855,  0.170762, -0.745018, -0.276512],
        [-0.244936, -0.25132 , -0.030525,  0.23355 ],...
2025-05-15 02:02:02.023820 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 205 / 240 (85.4%)
Max absolute difference: 0.30817583
Max relative difference: 130.88408518
 x: array([[[ 0.305116,  0.319278,  0.403882, -0.207391],
        [ 0.304022,  0.156528,  0.256586, -0.294244],
        [ 0.302929, -0.006222,  0.109291, -0.381096],...
 y: array([[[ 0.305116,  0.319278,  0.403882, -0.207391],
        [ 0.304098,  0.167752,  0.266745, -0.288254],
        [ 0.303079,  0.016227,  0.129608, -0.369116],...
2025-05-15 02:02:02.197516 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 168 / 240 (70%)
Max absolute difference: 0.25483096
Max relative difference: 20.33477372
 x: array([[[-0.373573, -0.408217, -0.277404,  0.330618],
        [-0.118742, -0.236279, -0.159928,  0.136201],
        [ 0.136089, -0.064341, -0.042453, -0.058216],...
 y: array([[[-0.373573, -0.408217, -0.277404,  0.330618],
        [-0.373573, -0.408217, -0.277404,  0.330618],
        [-0.099866, -0.223543, -0.151226,  0.1218  ],...
2025-05-15 02:02:02.381873 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.23527603
Max relative difference: 65.77102257
 x: array([[[ 0.140255, -0.210535,  0.288006, -0.53154 ],
        [-0.167526, -0.375415, -0.173703,  0.551199],
        [-0.334912, -0.392594, -0.683456,  0.181013],...
 y: array([[[ 0.140255, -0.210535,  0.288006, -0.53154 ],
        [-0.167526, -0.375415, -0.173703,  0.551199],
        [-0.334912, -0.392594, -0.683456,  0.181013],...
2025-05-15 02:02:02.526509 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[ 7.823248e-02, -1.342260e-02, -4.997908e-01, -8.322782e-02],
        [ 7.823248e-02, -1.342260e-02, -4.997908e-01, -8.322782e-02],
        [ 1.622620e-01,  2.776033e-02, -4.295626e-01,  4.631998e-02],...
 y: array([[[ 7.823248e-02, -1.342260e-02, -4.997908e-01, -8.322782e-02],
        [ 7.823248e-02, -1.342260e-02, -4.997908e-01, -8.322782e-02],
        [ 1.622620e-01,  2.776032e-02, -4.295626e-01,  4.631996e-02],...
2025-05-15 02:02:02.673012 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[ 0.158127, -0.066224, -0.442038,  0.29584 ],
        [ 0.220836, -0.175313, -0.244921,  0.17997 ],
        [ 0.283544, -0.284401, -0.047804,  0.064101],...
 y: array([[[ 0.158127, -0.066224, -0.442038,  0.29584 ],
        [ 0.218457, -0.171175, -0.252398,  0.184366],
        [ 0.278787, -0.276126, -0.062758,  0.072891],...
2025-05-15 02:02:02.822836 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[ 0.246683, -0.200498,  0.17133 ,  0.193223],
        [ 0.147324, -0.059075,  0.035591,  0.208868],
        [ 0.047966,  0.082348, -0.100148,  0.224514],...
 y: array([[[ 0.246683, -0.200498,  0.17133 ,  0.193223],
        [ 0.246683, -0.200498,  0.17133 ,  0.193223],
        [ 0.145187, -0.056034,  0.032672,  0.209205],...
2025-05-15 02:02:03.014519 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 31, 4), (2, 30, 4) mismatch)
 x: array([[[-0.032212,  0.067818, -0.370733,  0.311824],
        [ 0.108683,  0.119679, -0.16971 ,  0.206785],
        [ 0.249577,  0.17154 ,  0.031314,  0.101747],...
 y: array([[[-0.032212,  0.067818, -0.370733,  0.311824],
        [ 0.113541,  0.121467, -0.162778,  0.203163],
        [ 0.259294,  0.175116,  0.045178,  0.094503],...
2025-05-15 02:02:03.175240 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[ 4.370177e-01,  1.086839e-01,  4.930365e-01,  9.698826e-02],
        [ 4.370177e-01,  1.086839e-01,  4.930365e-01,  9.698826e-02],
        [ 4.068307e-01,  1.770806e-01,  4.708972e-01,  4.556027e-02],...
 y: array([[[ 4.370177e-01,  1.086839e-01,  4.930365e-01,  9.698826e-02],
        [ 4.370177e-01,  1.086839e-01,  4.930365e-01,  9.698826e-02],
        [ 4.068307e-01,  1.770806e-01,  4.708972e-01,  4.556027e-02],...
2025-05-15 02:02:03.323209 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[ 0.327799, -0.392886,  0.243673,  0.279829],
        [ 0.213519, -0.297891,  0.085404,  0.199136],
        [ 0.09924 , -0.202897, -0.072865,  0.118443],...
 y: array([[[ 0.327799, -0.392886,  0.243673,  0.279829],
        [ 0.21809 , -0.301691,  0.091735,  0.202363],
        [ 0.108382, -0.210497, -0.060203,  0.124898],...
2025-05-15 02:02:03.464570 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[ 0.274646, -0.035057, -0.106927,  0.283591],
        [ 0.102262, -0.109653, -0.013526,  0.173351],
        [-0.070122, -0.184249,  0.079875,  0.06311 ],...
 y: array([[[ 0.274646, -0.035057, -0.106927,  0.283591],
        [ 0.274646, -0.035057, -0.106927,  0.283591],
        [ 0.107649, -0.107322, -0.016445,  0.176796],...
2025-05-15 02:02:03.600348 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 32, 4), (2, 31, 4) mismatch)
 x: array([[[-0.091906, -0.333005, -0.091174, -0.395356],
        [ 0.0623  , -0.114465,  0.052819, -0.148185],
        [ 0.216505,  0.104075,  0.196813,  0.098987],...
 y: array([[[-0.091906, -0.333005, -0.091174, -0.395356],
        [ 0.06744 , -0.10718 ,  0.057619, -0.139945],
        [ 0.226785,  0.118645,  0.206412,  0.115465],...
2025-05-15 02:02:03.745641 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.89966748
Max relative difference: 86.29106446
 x: array([[[ 0.066091, -0.369083, -0.92937 ,  0.503227],
        [ 0.230645,  0.318721, -0.066928,  0.916506],
        [ 0.876423, -0.672838, -0.30455 ,  1.145769],...
 y: array([[[ 0.066091, -0.369083, -0.92937 ,  0.503227],
        [ 0.230645,  0.318721, -0.066928,  0.916506],
        [ 0.876423, -0.672838, -0.30455 ,  1.145769],...
2025-05-15 02:02:03.919134 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 203 / 256 (79.3%)
Max absolute difference: 0.39447921
Max relative difference: 44.6615737
 x: array([[[-0.483989, -0.196888,  0.336747, -0.381995],
        [-0.472989, -0.014314,  0.279771, -0.189953],
        [-0.461989,  0.16826 ,  0.222794,  0.002089],...
 y: array([[[-0.483989, -0.196888,  0.336747, -0.381995],
        [-0.47377 , -0.027271,  0.283814, -0.203582],
        [-0.46355 ,  0.142346,  0.230881, -0.025169],...
2025-05-15 02:02:04.092969 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 184 / 256 (71.9%)
Max absolute difference: 0.2245341
Max relative difference: 30.55708731
 x: array([[[ 0.032606, -0.171685, -0.239189, -0.263172],
        [-0.018623, -0.204202, -0.055173, -0.304026],
        [-0.069852, -0.236719,  0.128843, -0.344879],...
 y: array([[[ 0.032606, -0.171685, -0.239189, -0.263172],
        [ 0.032606, -0.171685, -0.239189, -0.263172],
        [-0.017022, -0.203186, -0.060923, -0.302749],...
2025-05-15 02:02:04.267261 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.84206491
Max relative difference: 115.75706519
 x: array([[[-0.005226,  0.152032, -0.296082,  0.036219],
        [-0.293426,  0.992516, -0.542828,  0.172445],
        [-0.034305,  0.696195, -0.184294, -0.470857],...
 y: array([[[-0.005226,  0.152032, -0.296082,  0.036219],
        [-0.293426,  0.992516, -0.542828,  0.172445],
        [-0.034305,  0.696195, -0.184294, -0.470857],...
2025-05-15 02:02:04.437080 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[ 3.497786e-01, -2.563863e-01,  4.417978e-01, -2.818777e-01],
        [ 3.497786e-01, -2.563863e-01,  4.417978e-01, -2.818777e-01],
        [ 3.790799e-01, -1.307180e-01,  3.178757e-01, -3.379397e-01],...
 y: array([[[ 3.497786e-01, -2.563863e-01,  4.417978e-01, -2.818777e-01],
        [ 3.497786e-01, -2.563863e-01,  4.417978e-01, -2.818777e-01],
        [ 3.790798e-01, -1.307180e-01,  3.178757e-01, -3.379397e-01],...
2025-05-15 02:02:04.593197 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[-0.248925,  0.037595,  0.15457 ,  0.409773],
        [-0.320702,  0.174665,  0.25488 ,  0.383603],
        [-0.39248 ,  0.311735,  0.35519 ,  0.357434],...
 y: array([[[-0.248925,  0.037595,  0.15457 ,  0.409773],
        [-0.317692,  0.168917,  0.250674,  0.384701],
        [-0.38646 ,  0.300239,  0.346777,  0.359629],...
2025-05-15 02:02:04.736082 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[-0.067032, -0.169089,  0.245986,  0.298165],
        [-0.040471, -0.198733,  0.105378,  0.309534],
        [-0.013909, -0.228376, -0.03523 ,  0.320902],...
 y: array([[[-0.067032, -0.169089,  0.245986,  0.298165],
        [-0.067032, -0.169089,  0.245986,  0.298165],
        [-0.042707, -0.196237,  0.117214,  0.308577],...
2025-05-15 02:02:04.920022 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 33, 4), (2, 32, 4) mismatch)
 x: array([[[ 0.410733, -0.326642, -0.292608, -0.232882],
        [ 0.25973 , -0.167563, -0.227519, -0.124232],
        [ 0.108728, -0.008485, -0.16243 , -0.015582],...
 y: array([[[ 0.410733, -0.326642, -0.292608, -0.232882],
        [ 0.254859, -0.162432, -0.225419, -0.120727],
        [ 0.098986,  0.001778, -0.15823 , -0.008572],...
2025-05-15 02:02:05.077196 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[ 0.073324,  0.013651, -0.357394,  0.437924],
        [ 0.073324,  0.013651, -0.357394,  0.437924],
        [-0.026644,  0.072545, -0.283862,  0.231077],...
 y: array([[[ 0.073324,  0.013651, -0.357394,  0.437924],
        [ 0.073324,  0.013651, -0.357394,  0.437924],
        [-0.026644,  0.072545, -0.283862,  0.231077],...
2025-05-15 02:02:05.255481 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[-0.172086, -0.212622, -0.453124, -0.185879],
        [-0.142774, -0.078201, -0.381248, -0.051093],
        [-0.113462,  0.05622 , -0.309372,  0.083693],...
 y: array([[[-0.172086, -0.212622, -0.453124, -0.185879],
        [-0.144056, -0.084082, -0.384393, -0.05699 ],
        [-0.116026,  0.044458, -0.315661,  0.071899],...
2025-05-15 02:02:05.427032 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[ 1.120949e-01, -3.327440e-01, -4.966286e-01, -2.489463e-01],
        [ 3.134259e-02, -2.361675e-01, -3.216915e-01, -2.158654e-01],
        [-4.940971e-02, -1.395911e-01, -1.467544e-01, -1.827844e-01],...
 y: array([[[ 1.120949e-01, -3.327440e-01, -4.966286e-01, -2.489463e-01],
        [ 1.120949e-01, -3.327440e-01, -4.966286e-01, -2.489463e-01],
        [ 4.242624e-02, -2.494231e-01, -3.457025e-01, -2.204059e-01],...
2025-05-15 02:02:05.581681 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 34, 4), (2, 33, 4) mismatch)
 x: array([[[ 0.112689,  0.007744, -0.056467,  0.053722],
        [-0.053811,  0.081111, -0.078452, -0.06135 ],
        [-0.22031 ,  0.154479, -0.100437, -0.176422],...
 y: array([[[ 1.126890e-01,  7.743681e-03, -5.646697e-02,  5.372188e-02],
        [-5.901366e-02,  8.340413e-02, -7.913912e-02, -6.494601e-02],
        [-2.307163e-01,  1.590646e-01, -1.018113e-01, -1.836139e-01],...
2025-05-15 02:02:05.759081 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.40496863
Max relative difference: 169.82186088
 x: array([[[ 0.48544 , -0.567986,  0.393546, -0.071591],
        [ 0.206644, -0.249191, -0.077676,  0.038628],
        [ 0.26975 , -0.279934,  0.371792, -0.247559],...
 y: array([[[ 0.48544 , -0.567986,  0.393546, -0.071591],
        [ 0.206644, -0.249191, -0.077676,  0.038628],
        [ 0.26975 , -0.279934,  0.371792, -0.247559],...
2025-05-15 02:02:05.927983 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 219 / 272 (80.5%)
Max absolute difference: 0.49318535
Max relative difference: 1710.81788347
 x: array([[[-4.393471e-01,  1.162962e-01,  4.977272e-01,  4.541792e-01],
        [-1.653094e-01,  5.792237e-02,  3.671115e-01,  4.398475e-01],
        [ 1.087283e-01, -4.514333e-04,  2.364957e-01,  4.255158e-01],...
 y: array([[[-4.393471e-01,  1.162962e-01,  4.977272e-01,  4.541792e-01],
        [-1.852394e-01,  6.216774e-02,  3.766108e-01,  4.408898e-01],
        [ 6.886828e-02,  8.039296e-03,  2.554944e-01,  4.276004e-01],...
2025-05-15 02:02:06.095693 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 194 / 272 (71.3%)
Max absolute difference: 0.2837993
Max relative difference: 29.41475807
 x: array([[[-0.381545, -0.056064,  0.411379,  0.323801],
        [-0.199831,  0.044112,  0.268745,  0.123488],
        [-0.018117,  0.144288,  0.126112, -0.076826],...
 y: array([[[-0.381545, -0.056064,  0.411379,  0.323801],
        [-0.381545, -0.056064,  0.411379,  0.323801],
        [-0.224772,  0.030363,  0.288323,  0.150982],...
2025-05-15 02:02:06.273180 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 80 (46.2%)
Max absolute difference: 1.46881461
Max relative difference: 11.30054586
 x: array([[[-0.247503, -0.253931, -0.25334 , -0.297412],
        [-0.067194, -0.013127,  0.242687, -0.17637 ],
        [ 0.476755,  0.624072,  0.154131,  0.491574],...
 y: array([[[-0.247503, -0.253931, -0.25334 , -0.297412],
        [-0.067194, -0.013127,  0.242687, -0.17637 ],
        [ 0.476755,  0.624072,  0.154131,  0.491574],...
2025-05-15 02:02:06.441196 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[ 0.094001, -0.003499, -0.090297,  0.382817],
        [ 0.094001, -0.003499, -0.090297,  0.382817],
        [ 0.019205,  0.06947 , -0.072118,  0.252336],...
 y: array([[[ 0.094001, -0.003499, -0.090297,  0.382817],
        [ 0.094001, -0.003499, -0.090297,  0.382817],
        [ 0.019205,  0.06947 , -0.072118,  0.252336],...
2025-05-15 02:02:06.610465 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[-0.392993,  0.194614, -0.438851,  0.297162],
        [-0.188056,  0.219147, -0.438783,  0.247153],
        [ 0.016881,  0.24368 , -0.438715,  0.197144],...
 y: array([[[-0.392993,  0.194614, -0.438851,  0.297162],
        [-0.197371,  0.218032, -0.438786,  0.249426],
        [-0.00175 ,  0.24145 , -0.438721,  0.20169 ],...
2025-05-15 02:02:06.784971 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[-3.874701e-01,  3.243431e-01,  2.688447e-03,  4.878501e-02],
        [-2.966448e-01,  3.123370e-01,  1.117411e-01,  5.792568e-03],
        [-2.058196e-01,  3.003309e-01,  2.207937e-01, -3.719987e-02],...
 y: array([[[-0.38747 ,  0.324343,  0.002688,  0.048785],
        [-0.38747 ,  0.324343,  0.002688,  0.048785],
        [-0.313945,  0.314624,  0.090969,  0.013982],...
2025-05-15 02:02:06.944467 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 35, 4), (2, 34, 4) mismatch)
 x: array([[[ 4.301699e-01, -9.996481e-02, -3.063854e-01, -1.086453e-01],
        [ 2.806104e-01, -9.781954e-02, -2.115632e-01, -1.518358e-01],
        [ 1.310509e-01, -9.567427e-02, -1.167410e-01, -1.950263e-01],...
 y: array([[[ 0.43017 , -0.099965, -0.306385, -0.108645],
        [ 0.276078, -0.097755, -0.20869 , -0.153145],
        [ 0.121987, -0.095544, -0.110994, -0.197644],...
2025-05-15 02:02:07.122622 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[-0.27626 ,  0.268687, -0.170793,  0.130082],
        [-0.27626 ,  0.268687, -0.170793,  0.130082],
        [-0.206417,  0.225648, -0.19825 ,  0.090428],...
 y: array([[[-0.27626 ,  0.268687, -0.170793,  0.130082],
        [-0.27626 ,  0.268687, -0.170793,  0.130082],
        [-0.206417,  0.225648, -0.19825 ,  0.090428],...
2025-05-15 02:02:07.295057 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[-0.394707, -0.263751, -0.200555,  0.108581],
        [-0.194145, -0.160486, -0.106185,  0.200309],
        [ 0.006417, -0.057221, -0.011815,  0.292037],...
 y: array([[[-3.947068e-01, -2.637506e-01, -2.005552e-01,  1.085806e-01],
        [-2.035832e-01, -1.653451e-01, -1.106261e-01,  1.959921e-01],
        [-1.245967e-02, -6.693962e-02, -2.069703e-02,  2.834036e-01],...
2025-05-15 02:02:07.474328 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[ 0.313083,  0.467633, -0.110069,  0.110841],
        [ 0.303235,  0.382364, -0.023059,  0.163975],
        [ 0.293388,  0.297096,  0.06395 ,  0.217108],...
 y: array([[[ 0.313083,  0.467633, -0.110069,  0.110841],
        [ 0.313083,  0.467633, -0.110069,  0.110841],
        [ 0.305637,  0.403155, -0.044275,  0.151019],...
2025-05-15 02:02:07.646466 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 36, 4), (2, 35, 4) mismatch)
 x: array([[[-0.286218,  0.171773, -0.07809 ,  0.214746],
        [-0.271286,  0.171531, -0.047166,  0.193737],
        [-0.256353,  0.17129 , -0.016243,  0.172727],...
 y: array([[[-0.286218,  0.171773, -0.07809 ,  0.214746],
        [-0.270846,  0.171524, -0.046257,  0.193119],
        [-0.255475,  0.171276, -0.014424,  0.171492],...
2025-05-15 02:02:07.820422 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.61633003
Max relative difference: 38.8486304
 x: array([[[-0.422711, -0.092262,  0.612573,  0.5434  ],
        [ 0.004741,  0.187309,  0.128785, -0.122855],
        [ 0.210916, -0.216373, -0.362885, -0.05258 ],...
 y: array([[[-0.422711, -0.092262,  0.612573,  0.5434  ],
        [ 0.004741,  0.187309,  0.128785, -0.122855],
        [ 0.210916, -0.216374, -0.362885, -0.05258 ],...
2025-05-15 02:02:07.991556 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 235 / 288 (81.6%)
Max absolute difference: 0.41526389
Max relative difference: 138.55224613
 x: array([[[ 0.377472,  0.148578,  0.210469,  0.259479],
        [ 0.410904,  0.232542,  0.186594,  0.167863],
        [ 0.444336,  0.316506,  0.162718,  0.076247],...
 y: array([[[ 3.774721e-01,  1.485775e-01,  2.104690e-01,  2.594785e-01],
        [ 4.084203e-01,  2.263044e-01,  1.883672e-01,  1.746685e-01],
        [ 4.393685e-01,  3.040312e-01,  1.662654e-01,  8.985848e-02],...
2025-05-15 02:02:08.152307 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 208 / 288 (72.2%)
Max absolute difference: 0.27519159
Max relative difference: 57.97316164
 x: array([[[-2.346411e-02, -3.446197e-01, -3.851693e-01, -2.317469e-01],
        [-5.470935e-02, -2.338419e-01, -2.345057e-01, -2.826130e-01],
        [-8.595458e-02, -1.230641e-01, -8.384212e-02, -3.334791e-01],...
 y: array([[[-2.346411e-02, -3.446197e-01, -3.851693e-01, -2.317469e-01],
        [-2.346411e-02, -3.446197e-01, -3.851693e-01, -2.317469e-01],
        [-4.709091e-02, -2.608525e-01, -2.712416e-01, -2.702105e-01],...
2025-05-15 02:02:08.294668 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.60199664
Max relative difference: 18.40570594
 x: array([[[-7.637715e-01,  8.791353e-02, -1.880534e-01,  1.906097e-02],
        [-3.298460e-01,  1.988603e-03, -4.747167e-01,  1.599181e-01],
        [-6.320587e-01, -5.534405e-01,  1.010581e-01,  2.299635e-01],...
 y: array([[[-7.637715e-01,  8.791353e-02, -1.880534e-01,  1.906099e-02],
        [-3.298461e-01,  1.988588e-03, -4.747168e-01,  1.599181e-01],
        [-6.320586e-01, -5.534404e-01,  1.010581e-01,  2.299635e-01],...
2025-05-15 02:02:08.473288 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[ 0.208445, -0.484378,  0.190222,  0.193051],
        [ 0.208445, -0.484378,  0.190222,  0.193051],
        [ 0.131688, -0.334144,  0.241565,  0.173114],...
 y: array([[[ 0.208445, -0.484378,  0.190222,  0.193051],
        [ 0.208445, -0.484378,  0.190222,  0.193051],
        [ 0.131688, -0.334143,  0.241565,  0.173114],...
2025-05-15 02:02:08.653229 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[ 0.23068 , -0.218134, -0.012232, -0.144302],
        [ 0.17175 , -0.140741, -0.032737, -0.069347],
        [ 0.11282 , -0.063348, -0.053241,  0.005608],...
 y: array([[[ 0.23068 , -0.218134, -0.012232, -0.144302],
        [ 0.174612, -0.1445  , -0.031741, -0.072987],
        [ 0.118544, -0.070866, -0.051249, -0.001673],...
2025-05-15 02:02:08.832242 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[-0.310919,  0.369066,  0.086197,  0.444618],
        [-0.323063,  0.215376,  0.133509,  0.404564],
        [-0.335207,  0.061687,  0.180821,  0.364509],...
 y: array([[[-0.310919,  0.369066,  0.086197,  0.444618],
        [-0.310919,  0.369066,  0.086197,  0.444618],
        [-0.319452,  0.261068,  0.119443,  0.416472],...
2025-05-15 02:02:09.009888 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 37, 4), (2, 36, 4) mismatch)
 x: array([[[ 0.380107, -0.38249 ,  0.475388,  0.329302],
        [ 0.363429, -0.379635,  0.264955,  0.269953],
        [ 0.346751, -0.37678 ,  0.054522,  0.210604],...
 y: array([[[ 0.380107, -0.38249 ,  0.475388,  0.329302],
        [ 0.362952, -0.379554,  0.258943,  0.268257],
        [ 0.345798, -0.376617,  0.042498,  0.207212],...
2025-05-15 02:02:09.184221 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[ 4.378015e-01,  3.557568e-01, -3.156874e-01,  9.155301e-02],
        [ 4.378015e-01,  3.557568e-01, -3.156874e-01,  9.155301e-02],
        [ 3.183722e-01,  2.230209e-01, -3.188839e-01,  7.254943e-02],...
 y: array([[[ 4.378015e-01,  3.557568e-01, -3.156874e-01,  9.155301e-02],
        [ 4.378015e-01,  3.557568e-01, -3.156874e-01,  9.155301e-02],
        [ 3.183722e-01,  2.230209e-01, -3.188839e-01,  7.254943e-02],...
2025-05-15 02:02:09.350312 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[-0.139245,  0.308717, -0.492704,  0.40187 ],
        [-0.21533 ,  0.097465, -0.466957,  0.174455],
        [-0.291415, -0.113788, -0.441209, -0.052959],...
 y: array([[[-0.139245,  0.308717, -0.492704,  0.40187 ],
        [-0.211526,  0.108027, -0.468244,  0.185826],
        [-0.283807, -0.092663, -0.443784, -0.030217],...
2025-05-15 02:02:09.530932 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[ 3.493382e-01, -1.532495e-01,  3.441216e-01, -2.657134e-01],
        [ 1.950244e-01, -1.305518e-01,  2.527009e-01, -1.949388e-01],
        [ 4.071056e-02, -1.078542e-01,  1.612801e-01, -1.241643e-01],...
 y: array([[[ 0.349338, -0.153249,  0.344122, -0.265713],
        [ 0.349338, -0.153249,  0.344122, -0.265713],
        [ 0.24917 , -0.138516,  0.284778, -0.219772],...
2025-05-15 02:02:09.684174 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 38, 4), (2, 37, 4) mismatch)
 x: array([[[-5.012610e-02,  4.942256e-01, -4.086748e-01, -4.500292e-01],
        [ 7.510759e-03,  4.129795e-01, -2.659645e-01, -3.117595e-01],
        [ 6.514762e-02,  3.317333e-01, -1.232543e-01, -1.734898e-01],...
 y: array([[[-5.012610e-02,  4.942256e-01, -4.086748e-01, -4.500292e-01],
        [ 9.111782e-03,  4.107226e-01, -2.620003e-01, -3.079187e-01],
        [ 6.834967e-02,  3.272197e-01, -1.153259e-01, -1.658082e-01],...
2025-05-15 02:02:09.869370 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.97442512
Max relative difference: 29.17319068
 x: array([[[-0.5138  ,  0.700201, -0.629237, -0.135223],
        [-0.294839, -0.065269, -0.941984, -0.242239],
        [-0.458161,  0.341191, -0.986831, -0.631596],...
 y: array([[[-0.5138  ,  0.700201, -0.629237, -0.135223],
        [-0.294839, -0.065269, -0.941984, -0.242239],
        [-0.458161,  0.341191, -0.986831, -0.631596],...
2025-05-15 02:02:10.045977 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 256 / 304 (84.2%)
Max absolute difference: 0.3518066
Max relative difference: 87.06804087
 x: array([[[ 3.442757e-02,  3.725933e-01, -4.356723e-01, -1.665807e-01],
        [ 1.343768e-01,  3.380998e-01, -3.638065e-01, -2.019362e-01],
        [ 2.343260e-01,  3.036063e-01, -2.919406e-01, -2.372918e-01],...
 y: array([[[ 0.034428,  0.372593, -0.435672, -0.166581],
        [ 0.126813,  0.34071 , -0.369245, -0.199261],
        [ 0.219199,  0.308827, -0.302818, -0.231941],...
2025-05-15 02:02:10.219094 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 212 / 304 (69.7%)
Max absolute difference: 0.25705886
Max relative difference: 26.22411169
 x: array([[[ 0.237323,  0.343612, -0.283076,  0.237341],
        [ 0.105896,  0.349907, -0.310416,  0.295014],
        [-0.025531,  0.356202, -0.337756,  0.352687],...
 y: array([[[ 0.237323,  0.343612, -0.283076,  0.237341],
        [ 0.237323,  0.343612, -0.283076,  0.237341],
        [ 0.152011,  0.347698, -0.300823,  0.274778],...
2025-05-15 02:02:10.380289 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.7800811
Max relative difference: 14.93273678
 x: array([[[-0.178665,  0.218336,  0.797151,  0.158715],
        [-0.277201,  0.395783,  0.460346, -0.658715],
        [-0.333029,  0.204341, -0.802665, -0.491345],...
 y: array([[[-0.178665,  0.218336,  0.797151,  0.158715],
        [-0.277201,  0.395783,  0.460346, -0.658715],
        [-0.333029,  0.204341, -0.802665, -0.491345],...
2025-05-15 02:02:10.555789 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[ 0.002304,  0.353158, -0.391939,  0.281253],
        [ 0.002304,  0.353158, -0.391939,  0.281253],
        [ 0.017244,  0.367783, -0.398518,  0.243494],...
 y: array([[[ 0.002304,  0.353158, -0.391939,  0.281253],
        [ 0.002304,  0.353158, -0.391939,  0.281253],
        [ 0.017244,  0.367783, -0.398518,  0.243494],...
2025-05-15 02:02:10.724633 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[-2.546943e-01, -1.161761e-01,  1.017590e-01, -2.687548e-01],
        [-9.210678e-02, -7.762117e-02,  4.176697e-02, -3.157478e-01],
        [ 7.048071e-02, -3.906622e-02, -1.822509e-02, -3.627408e-01],...
 y: array([[[-0.254694, -0.116176,  0.101759, -0.268755],
        [-0.100456, -0.079601,  0.044848, -0.313335],
        [ 0.053783, -0.043026, -0.012064, -0.357914],...
2025-05-15 02:02:10.898145 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[ 0.333546,  0.032299, -0.47432 , -0.208545],
        [ 0.34365 ,  0.076916, -0.297663, -0.18554 ],
        [ 0.353753,  0.121534, -0.121006, -0.162534],...
 y: array([[[ 3.335465e-01,  3.229894e-02, -4.743200e-01, -2.085453e-01],
        [ 3.335465e-01,  3.229894e-02, -4.743200e-01, -2.085453e-01],
        [ 3.395624e-01,  5.886608e-02, -3.691310e-01, -1.948469e-01],...
2025-05-15 02:02:11.070697 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 39, 4), (2, 38, 4) mismatch)
 x: array([[[-0.24122 ,  0.459478,  0.039796,  0.36896 ],
        [-0.217801,  0.23346 , -0.082151,  0.270264],
        [-0.194383,  0.007443, -0.204098,  0.171569],...
 y: array([[[-0.24122 ,  0.459478,  0.039796,  0.36896 ],
        [-0.217168,  0.227352, -0.085447,  0.267597],
        [-0.193117, -0.004775, -0.210689,  0.166234],...
2025-05-15 02:02:11.225980 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[ 0.392004, -0.149761,  0.111049,  0.329442],
        [ 0.392004, -0.149761,  0.111049,  0.329442],
        [ 0.344075, -0.162244,  0.056672,  0.293708],...
 y: array([[[ 0.392004, -0.149761,  0.111049,  0.329442],
        [ 0.392004, -0.149761,  0.111049,  0.329442],
        [ 0.344075, -0.162244,  0.056672,  0.293708],...
2025-05-15 02:02:11.403415 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[-0.056504, -0.374555, -0.126963,  0.455351],
        [-0.086283, -0.375829, -0.165469,  0.224247],
        [-0.116062, -0.377104, -0.203975, -0.006858],...
 y: array([[[-0.056504, -0.374555, -0.126963,  0.455351],
        [-0.084716, -0.375762, -0.163442,  0.23641 ],
        [-0.112927, -0.37697 , -0.199922,  0.017469],...
2025-05-15 02:02:11.576673 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[ 0.432731,  0.0105  , -0.354914, -0.302183],
        [ 0.410255,  0.040779, -0.206257, -0.233242],
        [ 0.38778 ,  0.071058, -0.0576  , -0.164302],...
 y: array([[[ 0.432731,  0.0105  , -0.354914, -0.302183],
        [ 0.432731,  0.0105  , -0.354914, -0.302183],
        [ 0.420556,  0.026901, -0.274392, -0.26484 ],...
2025-05-15 02:02:11.747108 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 40, 4), (2, 39, 4) mismatch)
 x: array([[[-0.258956,  0.169462,  0.326392, -0.036008],
        [-0.301623,  0.091353,  0.299455, -0.021476],
        [-0.344291,  0.013244,  0.272518, -0.006944],...
 y: array([[[-0.258956,  0.169462,  0.326392, -0.036008],
        [-0.302746,  0.089298,  0.298746, -0.021093],
        [-0.346536,  0.009133,  0.2711  , -0.006179],...
2025-05-15 02:02:11.904792 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 2.12821258
Max relative difference: 20.54022034
 x: array([[[-0.6266  , -0.313296,  0.629488,  0.348811],
        [-0.106396,  0.54624 ,  0.726148, -0.76454 ],
        [ 0.611291,  0.421323,  0.116962, -0.265337],...
 y: array([[[-0.6266  , -0.313296,  0.629488,  0.348811],
        [-0.106396,  0.54624 ,  0.726148, -0.76454 ],
        [ 0.611291,  0.421323,  0.116962, -0.265337],...
2025-05-15 02:02:12.045131 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 264 / 320 (82.5%)
Max absolute difference: 0.48841331
Max relative difference: 114.42852179
 x: array([[[ 0.257061,  0.200033, -0.368294, -0.157191],
        [ 0.182332,  0.233763, -0.155656, -0.133364],
        [ 0.107603,  0.267494,  0.056982, -0.109537],...
 y: array([[[ 0.257061,  0.200033, -0.368294, -0.157191],
        [ 0.18808 ,  0.231169, -0.172013, -0.135197],
        [ 0.119099,  0.262305,  0.024269, -0.113203],...
2025-05-15 02:02:12.225872 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 240 / 320 (75%)
Max absolute difference: 0.2751243
Max relative difference: 434.95123871
 x: array([[[ 3.712532e-02,  2.187244e-05,  4.217014e-01,  3.696440e-01],
        [ 1.232306e-01, -9.491572e-03,  2.664783e-01,  3.627492e-01],
        [ 2.093360e-01, -1.900502e-02,  1.112551e-01,  3.558544e-01],...
 y: array([[[ 3.712532e-02,  2.187244e-05,  4.217014e-01,  3.696440e-01],
        [ 3.712532e-02,  2.187244e-05,  4.217014e-01,  3.696440e-01],
        [ 8.376571e-02, -5.131243e-03,  3.376222e-01,  3.659093e-01],...
2025-05-15 02:02:12.384535 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.53242273
Max relative difference: 63.22510342
 x: array([[[-0.653036, -0.514587, -0.224242,  0.293965],
        [ 0.635205,  0.316421, -0.877035, -0.636154],
        [ 1.159269, -0.264776, -0.198119, -0.369534],...
 y: array([[[-0.653036, -0.514587, -0.224242,  0.293965],
        [ 0.635205,  0.316421, -0.877035, -0.636154],
        [ 1.159269, -0.264776, -0.198119, -0.369534],...
2025-05-15 02:02:12.567128 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[-0.419872, -0.464626,  0.233144, -0.111792],
        [-0.419872, -0.464626,  0.233144, -0.111792],
        [-0.338971, -0.411427,  0.257959, -0.145656],...
 y: array([[[-0.419872, -0.464626,  0.233144, -0.111792],
        [-0.419872, -0.464626,  0.233144, -0.111792],
        [-0.338971, -0.411427,  0.257959, -0.145656],...
2025-05-15 02:02:12.741409 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[-3.871764e-01, -3.685903e-01, -1.128885e-02,  3.838431e-02],
        [-2.626813e-01, -2.603953e-01, -9.189693e-02,  5.007917e-02],
        [-1.381862e-01, -1.522002e-01, -1.725050e-01,  6.177404e-02],...
 y: array([[[-0.387176, -0.36859 , -0.011289,  0.038384],
        [-0.269385, -0.266221, -0.087556,  0.049449],
        [-0.151593, -0.163852, -0.163824,  0.060515],...
2025-05-15 02:02:12.918798 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[ 2.284026e-01, -2.679632e-03,  2.495874e-01,  1.674485e-02],
        [ 2.435467e-01,  5.559882e-02,  1.735906e-01,  2.815047e-02],
        [ 2.586908e-01,  1.138773e-01,  9.759373e-02,  3.955608e-02],...
 y: array([[[ 0.228403, -0.00268 ,  0.249587,  0.016745],
        [ 0.228403, -0.00268 ,  0.249587,  0.016745],
        [ 0.23579 ,  0.025749,  0.212516,  0.022309],...
2025-05-15 02:02:13.088902 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 41, 4), (2, 40, 4) mismatch)
 x: array([[[ 0.240391,  0.178479, -0.296006, -0.04458 ],
        [ 0.248325,  0.178094, -0.167949, -0.125347],
        [ 0.256259,  0.17771 , -0.039893, -0.206115],...
 y: array([[[ 2.403911e-01,  1.784785e-01, -2.960059e-01, -4.457977e-02],
        [ 2.485283e-01,  1.780846e-01, -1.646659e-01, -1.274184e-01],
        [ 2.566654e-01,  1.776907e-01, -3.332585e-02, -2.102571e-01],...
2025-05-15 02:02:13.248386 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[ 0.034396,  0.033894,  0.308518,  0.367404],
        [ 0.034396,  0.033894,  0.308518,  0.367404],
        [ 0.031982, -0.010647,  0.318644,  0.34696 ],...
 y: array([[[ 0.034396,  0.033894,  0.308518,  0.367404],
        [ 0.034396,  0.033894,  0.308518,  0.367404],
        [ 0.031982, -0.010647,  0.318644,  0.34696 ],...
2025-05-15 02:02:13.391151 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[ 0.295203, -0.224908,  0.216529,  0.153924],
        [ 0.30216 , -0.143797,  0.113252,  0.00529 ],
        [ 0.309118, -0.062687,  0.009976, -0.143344],...
 y: array([[[ 2.952027e-01, -2.249076e-01,  2.165289e-01,  1.539240e-01],
        [ 3.017778e-01, -1.482585e-01,  1.189324e-01,  1.346478e-02],
        [ 3.083529e-01, -7.160937e-02,  2.133597e-02, -1.269945e-01],...
2025-05-15 02:02:13.573942 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[ 3.235767e-01,  1.141140e-01,  4.992218e-01, -4.532981e-01],
        [ 3.565006e-01,  1.096474e-02,  4.733959e-01, -3.882251e-01],
        [ 3.894246e-01, -9.218447e-02,  4.475701e-01, -3.231520e-01],...
 y: array([[[ 0.323577,  0.114114,  0.499222, -0.453298],
        [ 0.323577,  0.114114,  0.499222, -0.453298],
        [ 0.337861,  0.069361,  0.488017, -0.425065],...
2025-05-15 02:02:13.745315 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 42, 4), (2, 41, 4) mismatch)
 x: array([[[-1.413398e-01, -3.341766e-01,  2.936754e-01,  3.827318e-01],
        [-2.802355e-03, -2.043617e-01,  1.502736e-01,  3.689285e-01],
        [ 1.357351e-01, -7.454675e-02,  6.871759e-03,  3.551252e-01],...
 y: array([[[-1.413398e-01, -3.341766e-01,  2.936754e-01,  3.827318e-01],
        [ 6.610830e-04, -2.011163e-01,  1.466885e-01,  3.685834e-01],
        [ 1.426620e-01, -6.805600e-02, -2.983340e-04,  3.544351e-01],...
2025-05-15 02:02:13.919739 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.33606661
Max relative difference: 33.97953882
 x: array([[[-0.21473 ,  0.213063, -0.263061,  0.356114],
        [-0.135555, -0.330243, -0.147449,  0.631555],
        [ 0.321341, -0.346996, -0.955975, -0.435482],...
 y: array([[[-0.21473 ,  0.213063, -0.263061,  0.356114],
        [-0.135555, -0.330243, -0.147449,  0.631555],
        [ 0.321341, -0.346996, -0.955974, -0.435482],...
2025-05-15 02:02:14.093535 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 274 / 336 (81.5%)
Max absolute difference: 0.38044782
Max relative difference: 130.85623
 x: array([[[ 2.281458e-01,  4.467790e-01, -1.199962e-01,  2.762819e-01],
        [ 9.676851e-02,  3.928271e-01, -3.163448e-02,  2.068363e-01],
        [-3.460878e-02,  3.388753e-01,  5.672722e-02,  1.373908e-01],...
 y: array([[[ 0.228146,  0.446779, -0.119996,  0.276282],
        [ 0.107022,  0.397038, -0.038531,  0.212256],
        [-0.014101,  0.347297,  0.042934,  0.148231],...
2025-05-15 02:02:14.251253 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 266 / 336 (79.2%)
Max absolute difference: 0.31167011
Max relative difference: 126.14971258
 x: array([[[ 3.570328e-01, -2.618090e-01, -4.109450e-01,  2.303352e-01],
        [ 2.270719e-01, -1.454964e-01, -2.119395e-01,  1.092715e-01],
        [ 9.711099e-02, -2.918382e-02, -1.293389e-02, -1.179219e-02],...
 y: array([[[ 3.570328e-01, -2.618090e-01, -4.109450e-01,  2.303352e-01],
        [ 3.570328e-01, -2.618090e-01, -4.109450e-01,  2.303352e-01],
        [ 3.006476e-01, -2.113453e-01, -3.246040e-01,  1.778102e-01],...
2025-05-15 02:02:14.395016 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.46970921
Max relative difference: 1282.27253868
 x: array([[[-0.419239,  0.381698, -0.488929,  0.603198],
        [ 0.75954 ,  0.200274,  0.46877 ,  0.608604],
        [-0.101418, -0.157169,  0.061842, -0.211107],...
 y: array([[[-4.192387e-01,  3.816984e-01, -4.889292e-01,  6.031980e-01],
        [ 7.595403e-01,  2.002739e-01,  4.687702e-01,  6.086036e-01],
        [-1.014182e-01, -1.571688e-01,  6.184173e-02, -2.111071e-01],...
2025-05-15 02:02:14.570471 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-3.752463e-01,  3.328805e-01,  2.852962e-01, -4.225231e-01],
        [-3.752463e-01,  3.328805e-01,  2.852962e-01, -4.225231e-01],
        [-3.117374e-01,  2.806066e-01,  2.749290e-01, -4.276552e-01],...
 y: array([[[-3.752463e-01,  3.328805e-01,  2.852962e-01, -4.225231e-01],
        [-3.752463e-01,  3.328805e-01,  2.852962e-01, -4.225231e-01],
        [-3.117374e-01,  2.806066e-01,  2.749290e-01, -4.276552e-01],...
2025-05-15 02:02:14.745998 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[ 0.066409, -0.055853, -0.436417, -0.250375],
        [ 0.097473,  0.008562, -0.278687, -0.296675],
        [ 0.128537,  0.072977, -0.120956, -0.342975],...
 y: array([[[ 0.066409, -0.055853, -0.436417, -0.250375],
        [ 0.095731,  0.004949, -0.287535, -0.294078],
        [ 0.125052,  0.06575 , -0.138653, -0.337781],...
2025-05-15 02:02:14.921222 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-4.651967e-01, -1.751045e-02,  1.805054e-01,  3.259804e-01],
        [-3.968892e-01, -3.444287e-02,  1.997353e-01,  3.044995e-01],
        [-3.285817e-01, -5.137528e-02,  2.189652e-01,  2.830185e-01],...
 y: array([[[-4.651967e-01, -1.751045e-02,  1.805054e-01,  3.259804e-01],
        [-4.651967e-01, -1.751045e-02,  1.805054e-01,  3.259804e-01],
        [-4.392504e-01, -2.394214e-02,  1.878098e-01,  3.178210e-01],...
2025-05-15 02:02:15.105965 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 43, 4), (2, 42, 4) mismatch)
 x: array([[[-1.025647e-01,  1.245161e-01,  4.011240e-01, -1.197503e-01],
        [-5.143639e-02,  2.562268e-02,  4.140984e-01, -6.321693e-02],
        [-3.081020e-04, -7.327075e-02,  4.270728e-01, -6.683507e-03],...
 y: array([[[-0.102565,  0.124516,  0.401124, -0.11975 ],
        [-0.050189,  0.023211,  0.414415, -0.061838],
        [ 0.002186, -0.078095,  0.427706, -0.003926],...
2025-05-15 02:02:15.284273 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[-2.664616e-01,  4.821633e-01,  2.221985e-01,  1.186725e-02],
        [-2.664616e-01,  4.821633e-01,  2.221985e-01,  1.186725e-02],
        [-2.615454e-01,  4.531158e-01,  1.901409e-01, -2.169985e-02],...
 y: array([[[-2.664616e-01,  4.821633e-01,  2.221985e-01,  1.186725e-02],
        [-2.664616e-01,  4.821633e-01,  2.221985e-01,  1.186725e-02],
        [-2.615454e-01,  4.531158e-01,  1.901409e-01, -2.169986e-02],...
2025-05-15 02:02:15.438212 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[ 4.328618e-01, -3.481597e-01, -3.950838e-01,  2.250854e-01],
        [ 2.543359e-01, -1.580073e-01, -3.671227e-01,  2.113833e-01],
        [ 7.580997e-02,  3.214514e-02, -3.391617e-01,  1.976813e-01],...
 y: array([[[ 0.432862, -0.34816 , -0.395084,  0.225085],
        [ 0.264537, -0.168873, -0.36872 ,  0.212166],
        [ 0.096213,  0.010413, -0.342357,  0.199247],...
2025-05-15 02:02:15.615286 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[ 0.375693, -0.341814,  0.226014, -0.284237],
        [ 0.265241, -0.211813,  0.257023, -0.24375 ],
        [ 0.154789, -0.081811,  0.288032, -0.203262],...
 y: array([[[ 0.375693, -0.341814,  0.226014, -0.284237],
        [ 0.375693, -0.341814,  0.226014, -0.284237],
        [ 0.339712, -0.299465,  0.236115, -0.271048],...
2025-05-15 02:02:15.773402 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 44, 4), (2, 43, 4) mismatch)
 x: array([[[-0.445894, -0.454973,  0.421306, -0.231355],
        [-0.312823, -0.374819,  0.300953, -0.172526],
        [-0.179753, -0.294665,  0.180601, -0.113696],...
 y: array([[[-0.445894, -0.454973,  0.421306, -0.231355],
        [-0.309655, -0.372911,  0.298088, -0.171125],
        [-0.173417, -0.290848,  0.17487 , -0.110895],...
2025-05-15 02:02:15.928643 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.87626308
Max relative difference: 46.68433539
 x: array([[[ 0.21602 , -0.967626,  1.28919 ,  0.468463],
        [ 0.068629,  0.014276,  0.210908,  0.563483],
        [ 0.057058, -0.306073,  0.729369, -0.390721],...
 y: array([[[ 0.21602 , -0.967626,  1.28919 ,  0.468463],
        [ 0.068629,  0.014276,  0.210908,  0.563483],
        [ 0.057057, -0.306073,  0.729369, -0.390721],...
2025-05-15 02:02:16.100488 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 292 / 352 (83%)
Max absolute difference: 0.50734298
Max relative difference: 246.49284
 x: array([[[ 2.577189e-01,  4.536038e-03, -3.304854e-01, -9.187943e-02],
        [ 1.162222e-01,  5.956002e-02, -1.639945e-01, -7.180169e-02],
        [-2.527442e-02,  1.145840e-01,  2.496421e-03, -5.172396e-02],...
 y: array([[[ 2.577189e-01,  4.536038e-03, -3.304854e-01, -9.187943e-02],
        [ 1.274103e-01,  5.520929e-02, -1.771589e-01, -7.338923e-02],
        [-2.898212e-03,  1.058825e-01, -2.383236e-02, -5.489904e-02],...
2025-05-15 02:02:16.279213 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 259 / 352 (73.6%)
Max absolute difference: 0.26338875
Max relative difference: 49.13988864
 x: array([[[-3.673471e-01,  3.970811e-01,  7.279997e-02, -1.157981e-01],
        [-3.526334e-01,  2.975529e-01,  4.688524e-03, -5.180175e-02],
        [-3.379197e-01,  1.980247e-01, -6.342292e-02,  1.219455e-02],...
 y: array([[[-0.367347,  0.397081,  0.0728  , -0.115798],
        [-0.367347,  0.397081,  0.0728  , -0.115798],
        [-0.362554,  0.364659,  0.050612, -0.094951],...
2025-05-15 02:02:16.438299 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.66310025
Max relative difference: 14.02175406
 x: array([[[-0.092045,  0.426616,  0.213421,  0.144467],
        [ 0.04846 ,  0.402234,  0.175465, -0.42547 ],
        [-0.230327, -0.317041,  0.121374, -0.427255],...
 y: array([[[-0.092045,  0.426616,  0.213421,  0.144467],
        [ 0.04846 ,  0.402234,  0.175465, -0.42547 ],
        [-0.230327, -0.317041,  0.121374, -0.427255],...
2025-05-15 02:02:16.620222 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[ 0.207556, -0.022968,  0.265354,  0.21475 ],
        [ 0.207556, -0.022968,  0.265354,  0.21475 ],
        [ 0.180979, -0.042935,  0.238888,  0.185801],...
 y: array([[[ 0.207556, -0.022968,  0.265354,  0.21475 ],
        [ 0.207556, -0.022968,  0.265354,  0.21475 ],
        [ 0.180979, -0.042935,  0.238888,  0.185801],...
2025-05-15 02:02:16.775012 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[ 0.444483, -0.498491, -0.200721, -0.265163],
        [ 0.330704, -0.399867, -0.097747, -0.136959],
        [ 0.216926, -0.301244,  0.005228, -0.008755],...
 y: array([[[ 4.444827e-01, -4.984906e-01, -2.007213e-01, -2.651628e-01],
        [ 3.373194e-01, -4.056012e-01, -1.037337e-01, -1.444124e-01],
        [ 2.301560e-01, -3.127118e-01, -6.746164e-03, -2.366204e-02],...
2025-05-15 02:02:16.958202 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[ 0.123798, -0.479195,  0.216083,  0.029722],
        [ 0.082042, -0.323863,  0.212813,  0.045754],
        [ 0.040286, -0.168532,  0.209542,  0.061786],...
 y: array([[[ 0.123798, -0.479195,  0.216083,  0.029722],
        [ 0.123798, -0.479195,  0.216083,  0.029722],
        [ 0.112457, -0.437006,  0.215195,  0.034076],...
2025-05-15 02:02:17.112513 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 45, 4), (2, 44, 4) mismatch)
 x: array([[[ 0.005147,  0.313293,  0.083053, -0.391519],
        [ 0.093078,  0.193684,  0.052386, -0.331637],
        [ 0.181009,  0.074075,  0.02172 , -0.271756],...
 y: array([[[ 5.146847e-03,  3.132932e-01,  8.305295e-02, -3.915188e-01],
        [ 9.512267e-02,  1.909024e-01,  5.167309e-02, -3.302446e-01],
        [ 1.850985e-01,  6.851161e-02,  2.029322e-02, -2.689705e-01],...
2025-05-15 02:02:17.235627 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[-1.268793e-02,  1.785747e-01,  1.164030e-01,  3.160513e-02],
        [-1.268793e-02,  1.785747e-01,  1.164030e-01,  3.160513e-02],
        [ 8.717544e-03,  1.801581e-01,  1.045735e-01,  2.249493e-02],...
 y: array([[[-1.268793e-02,  1.785747e-01,  1.164030e-01,  3.160513e-02],
        [-1.268793e-02,  1.785747e-01,  1.164030e-01,  3.160513e-02],
        [ 8.717535e-03,  1.801581e-01,  1.045735e-01,  2.249493e-02],...
2025-05-15 02:02:17.355990 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[-0.176981,  0.488822, -0.208793, -0.35595 ],
        [-0.179221,  0.477365, -0.221112, -0.369474],
        [-0.181461,  0.465909, -0.233432, -0.382998],...
 y: array([[[-1.769810e-01,  4.888219e-01, -2.087932e-01, -3.559498e-01],
        [-1.790886e-01,  4.780422e-01, -2.203845e-01, -3.686750e-01],
        [-1.811963e-01,  4.672625e-01, -2.319759e-01, -3.814001e-01],...
2025-05-15 02:02:17.540982 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[ 0.302452,  0.23165 , -0.432531,  0.047572],
        [ 0.303629,  0.148291, -0.42138 ,  0.013662],
        [ 0.304805,  0.064931, -0.410229, -0.020248],...
 y: array([[[ 3.024525e-01,  2.316505e-01, -4.325311e-01,  4.757227e-02],
        [ 3.024525e-01,  2.316505e-01, -4.325311e-01,  4.757227e-02],
        [ 3.027082e-01,  2.135288e-01, -4.301070e-01,  4.020047e-02],...
2025-05-15 02:02:17.696098 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 46, 4), (2, 45, 4) mismatch)
 x: array([[[ 5.430802e-02, -1.842303e-01,  2.206853e-01, -1.436191e-01],
        [ 6.760412e-02, -1.453514e-01,  1.200632e-01, -2.062889e-01],
        [ 8.090021e-02, -1.064726e-01,  1.944112e-02, -2.689587e-01],...
 y: array([[[ 0.054308, -0.18423 ,  0.220685, -0.143619],
        [ 0.067906, -0.144468,  0.117776, -0.207713],
        [ 0.081505, -0.104705,  0.014867, -0.271807],...
2025-05-15 02:02:17.836706 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.69879046
Max relative difference: 60.47764546
 x: array([[[ 0.491572, -0.535005, -0.644826, -0.195905],
        [ 0.709038,  0.089787,  0.775033, -0.811118],
        [ 0.876005, -0.330976,  0.570266,  0.2953  ],...
 y: array([[[ 0.491572, -0.535005, -0.644826, -0.195905],
        [ 0.709038,  0.089787,  0.775033, -0.811118],
        [ 0.876005, -0.330976,  0.570266,  0.2953  ],...
2025-05-15 02:02:17.976556 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 298 / 368 (81%)
Max absolute difference: 0.62404001
Max relative difference: 549.70806267
 x: array([[[-0.334703,  0.128934, -0.165672,  0.276498],
        [-0.324405,  0.15309 , -0.209258,  0.234315],
        [-0.314107,  0.177246, -0.252844,  0.192133],...
 y: array([[[-3.347030e-01,  1.289341e-01, -1.656720e-01,  2.764977e-01],
        [-3.252290e-01,  1.511575e-01, -2.057713e-01,  2.376897e-01],
        [-3.157551e-01,  1.733808e-01, -2.458705e-01,  1.988817e-01],...
2025-05-15 02:02:18.124879 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 273 / 368 (74.2%)
Max absolute difference: 0.26936408
Max relative difference: 98.37714644
 x: array([[[-0.381746, -0.220364,  0.171104, -0.438591],
        [-0.284118, -0.091263,  0.213507, -0.306769],
        [-0.186489,  0.037839,  0.25591 , -0.174947],...
 y: array([[[-0.381746, -0.220364,  0.171104, -0.438591],
        [-0.381746, -0.220364,  0.171104, -0.438591],
        [-0.360523, -0.192298,  0.180322, -0.409934],...
2025-05-15 02:02:18.271894 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.67187889
Max relative difference: 17.98061014
 x: array([[[ 0.428306,  0.492836, -0.72521 , -0.372496],
        [ 0.009069, -0.3136  ,  0.141666,  0.526881],
        [-0.024163,  0.585362, -1.514713,  0.113216],...
 y: array([[[ 0.428306,  0.492836, -0.72521 , -0.372496],
        [ 0.009069, -0.3136  ,  0.141666,  0.526881],
        [-0.024163,  0.585362, -1.514713,  0.113216],...
2025-05-15 02:02:18.415469 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[ 0.164871,  0.217053,  0.240376,  0.095077],
        [ 0.164871,  0.217053,  0.240376,  0.095077],
        [ 0.169045,  0.214154,  0.220607,  0.088185],...
 y: array([[[ 0.164871,  0.217053,  0.240376,  0.095077],
        [ 0.164871,  0.217053,  0.240376,  0.095077],
        [ 0.169045,  0.214154,  0.220607,  0.088185],...
2025-05-15 02:02:18.602221 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[ 0.36594 , -0.328486,  0.255051,  0.483645],
        [ 0.310972, -0.280681,  0.260375,  0.391294],
        [ 0.256004, -0.232877,  0.265699,  0.298944],...
 y: array([[[ 0.36594 , -0.328486,  0.255051,  0.483645],
        [ 0.31427 , -0.28355 ,  0.260056,  0.396835],
        [ 0.2626  , -0.238613,  0.26506 ,  0.310026],...
2025-05-15 02:02:18.785794 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[-0.161009,  0.189016,  0.376581,  0.013496],
        [-0.179657,  0.082497,  0.323169,  0.078321],
        [-0.198305, -0.024021,  0.269757,  0.143145],...
 y: array([[[-1.610085e-01,  1.890157e-01,  3.765815e-01,  1.349630e-02],
        [-1.610085e-01,  1.890157e-01,  3.765815e-01,  1.349630e-02],
        [-1.640504e-01,  1.716404e-01,  3.678688e-01,  2.407052e-02],...
2025-05-15 02:02:18.972953 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 47, 4), (2, 46, 4) mismatch)
 x: array([[[-0.375156, -0.213633, -0.042045, -0.496408],
        [-0.215964, -0.146214, -0.106914, -0.36228 ],
        [-0.056772, -0.078795, -0.171784, -0.228152],...
 y: array([[[-0.375156, -0.213633, -0.042045, -0.496408],
        [-0.212427, -0.144716, -0.108356, -0.359299],
        [-0.049697, -0.075799, -0.174667, -0.22219 ],...
2025-05-15 02:02:19.159807 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[-2.663327e-01, -2.840350e-01, -1.001033e-01, -2.676393e-01],
        [-2.663327e-01, -2.840350e-01, -1.001033e-01, -2.676393e-01],
        [-2.683334e-01, -2.783917e-01, -9.343434e-02, -2.563856e-01],...
 y: array([[[-2.663327e-01, -2.840350e-01, -1.001033e-01, -2.676393e-01],
        [-2.663327e-01, -2.840350e-01, -1.001033e-01, -2.676393e-01],
        [-2.683334e-01, -2.783917e-01, -9.343433e-02, -2.563856e-01],...
2025-05-15 02:02:19.317671 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[-0.367351,  0.226696, -0.045287, -0.203536],
        [-0.314669,  0.27103 , -0.092926, -0.251148],
        [-0.261987,  0.315363, -0.140565, -0.29876 ],...
 y: array([[[-0.367351,  0.226696, -0.045287, -0.203536],
        [-0.317876,  0.268331, -0.090026, -0.24825 ],
        [-0.268401,  0.309966, -0.134766, -0.292963],...
2025-05-15 02:02:19.460786 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[ 1.723970e-01, -2.870261e-01,  2.509051e-01,  1.534387e-01],
        [ 2.180446e-01, -2.997865e-01,  1.647976e-01,  8.348720e-02],
        [ 2.636922e-01, -3.125470e-01,  7.869015e-02,  1.353568e-02],...
 y: array([[[ 0.172397, -0.287026,  0.250905,  0.153439],
        [ 0.172397, -0.287026,  0.250905,  0.153439],
        [ 0.177363, -0.288414,  0.241537,  0.145828],...
2025-05-15 02:02:19.606118 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 48, 4), (2, 47, 4) mismatch)
 x: array([[[ 1.161622e-01, -2.931550e-01,  3.507914e-01, -3.969756e-01],
        [ 7.483454e-04, -2.759506e-01,  2.207187e-01, -3.084665e-01],
        [-1.146655e-01, -2.587461e-01,  9.064597e-02, -2.199574e-01],...
 y: array([[[ 1.161622e-01, -2.931550e-01,  3.507914e-01, -3.969756e-01],
        [-1.760646e-03, -2.755766e-01,  2.178910e-01, -3.065424e-01],
        [-1.196834e-01, -2.579981e-01,  8.499065e-02, -2.161092e-01],...
2025-05-15 02:02:19.785966 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.6178211
Max relative difference: 26.80676454
 x: array([[[-0.438916, -0.462826, -0.48817 ,  0.229084],
        [-0.332651,  0.559251, -0.02364 , -0.745403],
        [ 0.180272,  0.471205,  0.080238,  0.510962],...
 y: array([[[-0.438916, -0.462826, -0.48817 ,  0.229084],
        [-0.332651,  0.559251, -0.02364 , -0.745403],
        [ 0.180272,  0.471205,  0.080238,  0.510962],...
2025-05-15 02:02:19.971140 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 321 / 384 (83.6%)
Max absolute difference: 0.57061601
Max relative difference: 438.45027446
 x: array([[[-3.462678e-01,  5.451083e-02,  3.475940e-01, -7.176459e-03],
        [-1.860990e-01, -2.012965e-02,  2.922216e-01, -8.434718e-02],
        [-2.593023e-02, -9.477012e-02,  2.368492e-01, -1.615179e-01],...
 y: array([[[-3.462678e-01,  5.451083e-02,  3.475940e-01, -7.176459e-03],
        [-1.990488e-01, -1.409489e-02,  2.966985e-01, -7.810784e-02],
        [-5.182985e-02, -8.270060e-02,  2.458030e-01, -1.490392e-01],...
2025-05-15 02:02:20.132749 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 276 / 384 (71.9%)
Max absolute difference: 0.28052934
Max relative difference: 46.9375907
 x: array([[[-8.125052e-02,  1.022412e-01, -3.387157e-01, -1.329996e-02],
        [-1.069846e-01,  7.830055e-02, -2.006764e-01, -4.519004e-02],
        [-1.327186e-01,  5.435986e-02, -6.263703e-02, -7.708013e-02],...
 y: array([[[-0.081251,  0.102241, -0.338716, -0.0133  ],
        [-0.081251,  0.102241, -0.338716, -0.0133  ],
        [-0.08405 ,  0.099637, -0.323698, -0.016769],...
2025-05-15 02:02:20.315701 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.59890279
Max relative difference: 16.68423077
 x: array([[[ 0.079227,  0.471886,  0.313437, -0.196561],
        [ 0.396734,  0.282268,  0.796326, -0.064971],
        [-0.737312,  0.096506,  0.371818,  0.467862],...
 y: array([[[ 0.079227,  0.471886,  0.313437, -0.196561],
        [ 0.396734,  0.282268,  0.796326, -0.064971],
        [-0.737312,  0.096506,  0.371818,  0.467862],...
2025-05-15 02:02:20.492200 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[ 0.177999, -0.406156, -0.48073 ,  0.300162],
        [ 0.177999, -0.406156, -0.48073 ,  0.300162],
        [ 0.175457, -0.401035, -0.473652,  0.29846 ],...
 y: array([[[ 0.177999, -0.406156, -0.48073 ,  0.300162],
        [ 0.177999, -0.406156, -0.48073 ,  0.300162],
        [ 0.175457, -0.401035, -0.473652,  0.29846 ],...
2025-05-15 02:02:20.662613 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[-0.112619, -0.35188 , -0.155914,  0.004619],
        [ 0.002981, -0.291839, -0.212625, -0.094915],
        [ 0.118581, -0.231798, -0.269336, -0.194449],...
 y: array([[[-0.112619, -0.35188 , -0.155914,  0.004619],
        [-0.004151, -0.295544, -0.209126, -0.088773],
        [ 0.104316, -0.239208, -0.262338, -0.182166],...
2025-05-15 02:02:20.817972 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[ 2.349554e-03,  3.091894e-01,  2.290188e-01,  2.939388e-01],
        [-2.904546e-02,  1.671793e-01,  2.139182e-01,  2.982700e-01],
        [-6.044047e-02,  2.516922e-02,  1.988177e-01,  3.026012e-01],...
 y: array([[[ 0.00235 ,  0.309189,  0.229019,  0.293939],
        [ 0.00235 ,  0.309189,  0.229019,  0.293939],
        [ 0.000641,  0.301461,  0.228197,  0.294175],...
2025-05-15 02:02:20.995825 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 49, 4), (2, 48, 4) mismatch)
 x: array([[[-0.4045  , -0.372828,  0.319624,  0.053182],
        [-0.329317, -0.363771,  0.20603 ,  0.022657],
        [-0.254134, -0.354715,  0.092435, -0.007867],...
 y: array([[[-0.4045  , -0.372828,  0.319624,  0.053182],
        [-0.327717, -0.363579,  0.203613,  0.022008],
        [-0.250935, -0.354329,  0.087601, -0.009166],...
2025-05-15 02:02:21.165768 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[ 4.216019e-01, -8.028100e-02,  4.487394e-01,  3.249418e-02],
        [ 4.216019e-01, -8.028100e-02,  4.487394e-01,  3.249418e-02],
        [ 4.216019e-01, -8.028100e-02,  4.487394e-01,  3.249418e-02],...
 y: array([[[ 4.216019e-01, -8.028100e-02,  4.487394e-01,  3.249418e-02],
        [ 4.216019e-01, -8.028100e-02,  4.487394e-01,  3.249418e-02],
        [ 4.216019e-01, -8.028100e-02,  4.487394e-01,  3.249418e-02],...
2025-05-15 02:02:21.338721 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[ 1.213897e-01,  3.992230e-01, -2.269875e-01,  5.639240e-02],
        [ 1.263245e-01,  2.809382e-01, -2.576549e-01,  7.491991e-02],
        [ 1.312592e-01,  1.626534e-01, -2.883222e-01,  9.344741e-02],...
 y: array([[[ 0.12139 ,  0.399223, -0.226988,  0.056392],
        [ 0.126016,  0.288331, -0.255738,  0.073762],
        [ 0.130642,  0.177439, -0.284489,  0.091131],...
2025-05-15 02:02:21.504467 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[-4.133257e-01,  4.298712e-01,  4.999306e-01, -4.965424e-01],
        [-3.822155e-01,  4.418434e-01,  4.295639e-01, -3.432701e-01],
        [-3.511054e-01,  4.538157e-01,  3.591973e-01, -1.899978e-01],...
 y: array([[[-4.133257e-01,  4.298712e-01,  4.999306e-01, -4.965424e-01],
        [-4.133257e-01,  4.298712e-01,  4.999306e-01, -4.965424e-01],
        [-4.133257e-01,  4.298712e-01,  4.999306e-01, -4.965424e-01],...
2025-05-15 02:02:21.675373 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 50, 4), (2, 49, 4) mismatch)
 x: array([[[-3.007135e-01, -1.674706e-02,  2.924866e-01,  2.937869e-01],
        [-2.685609e-01, -7.749214e-02,  1.915206e-01,  3.251919e-01],
        [-2.364082e-01, -1.382372e-01,  9.055470e-02,  3.565969e-01],...
 y: array([[[-3.007135e-01, -1.674706e-02,  2.924866e-01,  2.937869e-01],
        [-2.678910e-01, -7.875766e-02,  1.894172e-01,  3.258462e-01],
        [-2.350685e-01, -1.407683e-01,  8.634779e-02,  3.579055e-01],...
2025-05-15 02:02:21.847283 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.61042351
Max relative difference: 16.35258338
 x: array([[[ 0.394666, -0.776866, -0.882377,  0.081074],
        [ 0.211892,  0.17793 ,  0.198054,  0.216422],
        [-0.413806,  0.020462, -0.348384,  0.252669],...
 y: array([[[ 0.394666, -0.776866, -0.882377,  0.081074],
        [ 0.211892,  0.17793 ,  0.198054,  0.216422],
        [-0.413807,  0.020462, -0.348384,  0.252669],...
2025-05-15 02:02:22.025895 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 331 / 400 (82.8%)
Max absolute difference: 0.5726331
Max relative difference: 192.24381012
 x: array([[[-2.402137e-01, -4.091380e-01, -3.899129e-01, -3.457697e-01],
        [-2.339315e-01, -2.774438e-01, -3.420402e-01, -3.717429e-01],
        [-2.276494e-01, -1.457496e-01, -2.941675e-01, -3.977162e-01],...
 y: array([[[-0.240214, -0.409138, -0.389913, -0.34577 ],
        [-0.234444, -0.288194, -0.345948, -0.369623],
        [-0.228675, -0.167251, -0.301983, -0.393476],...
2025-05-15 02:02:22.204275 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 308 / 400 (77%)
Max absolute difference: 0.30266267
Max relative difference: 77.38825445
 x: array([[[ 0.403859, -0.335425, -0.055027, -0.18819 ],
        [ 0.25612 , -0.297351, -0.1101  , -0.223992],
        [ 0.108381, -0.259277, -0.165173, -0.259795],...
 y: array([[[ 0.403859, -0.335425, -0.055027, -0.18819 ],
        [ 0.403859, -0.335425, -0.055027, -0.18819 ],
        [ 0.403859, -0.335425, -0.055027, -0.18819 ],...
2025-05-15 02:02:22.361332 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.37519784
Max relative difference: 9.35846941
 x: array([[[ 0.217813, -0.826179,  0.071738,  0.205457],
        [ 0.401399, -0.749026,  0.179112,  0.760603],
        [-0.843645,  0.131107, -0.817345, -0.745452],...
 y: array([[[ 0.217813, -0.826179,  0.071738,  0.205457],
        [ 0.401399, -0.749026,  0.179112,  0.760603],
        [-0.843645,  0.131107, -0.817345, -0.745452],...
2025-05-15 02:02:22.534882 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[-3.029946e-01, -1.237692e-01,  1.168801e-01,  2.497322e-01],
        [-3.029946e-01, -1.237692e-01,  1.168801e-01,  2.497322e-01],
        [-3.029946e-01, -1.237692e-01,  1.168801e-01,  2.497322e-01],...
 y: array([[[-3.029946e-01, -1.237692e-01,  1.168801e-01,  2.497322e-01],
        [-3.029946e-01, -1.237692e-01,  1.168801e-01,  2.497322e-01],
        [-3.029946e-01, -1.237692e-01,  1.168801e-01,  2.497322e-01],...
2025-05-15 02:02:22.709349 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[ 0.313103, -0.304222,  0.243346, -0.359766],
        [ 0.290334, -0.186008,  0.202887, -0.234214],
        [ 0.267566, -0.067794,  0.162428, -0.108662],...
 y: array([[[ 0.313103, -0.304222,  0.243346, -0.359766],
        [ 0.291775, -0.193487,  0.205447, -0.242157],
        [ 0.270447, -0.082752,  0.167548, -0.124548],...
2025-05-15 02:02:22.878151 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[-2.057477e-02, -3.001872e-01,  2.701696e-01,  3.230683e-01],
        [ 1.484775e-02, -1.994824e-01,  1.542532e-01,  2.423689e-01],
        [ 5.027026e-02, -9.877751e-02,  3.833676e-02,  1.616694e-01],...
 y: array([[[-0.020575, -0.300187,  0.27017 ,  0.323068],
        [-0.020575, -0.300187,  0.27017 ,  0.323068],
        [-0.020575, -0.300187,  0.27017 ,  0.323068],...
2025-05-15 02:02:23.051696 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 51, 4), (2, 50, 4) mismatch)
 x: array([[[-0.133148, -0.446702, -0.325622,  0.181995],
        [-0.198554, -0.37158 , -0.197684,  0.06332 ],
        [-0.263961, -0.296458, -0.069745, -0.055356],...
 y: array([[[-0.133148, -0.446702, -0.325622,  0.181995],
        [-0.199889, -0.370047, -0.195073,  0.060898],
        [-0.266631, -0.293391, -0.064523, -0.0602  ],...
2025-05-15 02:02:23.229137 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[ 0.226365,  0.19351 , -0.080901, -0.251475],
        [ 0.226365,  0.19351 , -0.080901, -0.251475],
        [ 0.226365,  0.19351 , -0.080901, -0.251475],...
 y: array([[[ 0.226365,  0.19351 , -0.080901, -0.251475],
        [ 0.226365,  0.19351 , -0.080901, -0.251475],
        [ 0.226365,  0.19351 , -0.080901, -0.251475],...
2025-05-15 02:02:23.390470 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[-7.302023e-02,  1.135935e-01, -3.530964e-01, -7.588041e-02],
        [-5.508175e-02,  1.124627e-02, -2.495416e-01, -8.736390e-02],
        [-3.714327e-02, -9.110092e-02, -1.459867e-01, -9.884739e-02],...
 y: array([[[-0.07302 ,  0.113593, -0.353096, -0.07588 ],
        [-0.05623 ,  0.017796, -0.256169, -0.086629],
        [-0.039439, -0.078   , -0.159242, -0.097378],...
2025-05-15 02:02:23.575494 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[ 3.821361e-01,  2.183386e-01, -2.109324e-01, -4.124193e-02],
        [ 2.884845e-01,  2.128954e-01, -2.488321e-01, -6.886325e-02],
        [ 1.948330e-01,  2.074523e-01, -2.867318e-01, -9.648457e-02],...
 y: array([[[ 0.382136,  0.218339, -0.210932, -0.041242],
        [ 0.382136,  0.218339, -0.210932, -0.041242],
        [ 0.382136,  0.218339, -0.210932, -0.041242],...
2025-05-15 02:02:23.749368 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 52, 4), (2, 51, 4) mismatch)
 x: array([[[-4.646243e-01, -2.330512e-01, -4.725775e-01, -2.421420e-01],
        [-3.845882e-01, -2.707492e-01, -3.754472e-01, -2.056869e-01],
        [-3.045520e-01, -3.084471e-01, -2.783170e-01, -1.692319e-01],...
 y: array([[[-4.646243e-01, -2.330512e-01, -4.725775e-01, -2.421420e-01],
        [-3.829874e-01, -2.715031e-01, -3.735046e-01, -2.049578e-01],
        [-3.013506e-01, -3.099550e-01, -2.744318e-01, -1.677737e-01],...
2025-05-15 02:02:23.922500 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.98925351
Max relative difference: 29.01451246
 x: array([[[ 0.059902, -0.25294 , -1.353882,  0.988233],
        [ 0.557448, -0.527452, -0.174666, -0.330627],
        [ 0.99653 , -0.224737, -0.427264, -0.333123],...
 y: array([[[ 0.059902, -0.25294 , -1.353882,  0.988233],
        [ 0.557448, -0.527452, -0.174666, -0.330627],
        [ 0.99653 , -0.224737, -0.427264, -0.333123],...
2025-05-15 02:02:24.094748 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 342 / 416 (82.2%)
Max absolute difference: 0.49711776
Max relative difference: 955.8862894
 x: array([[[-0.06558 , -0.218297, -0.010754,  0.41443 ],
        [ 0.008557, -0.103948,  0.05929 ,  0.365757],
        [ 0.082693,  0.010401,  0.129334,  0.317084],...
 y: array([[[-6.557954e-02, -2.182972e-01, -1.075414e-02,  4.144304e-01],
        [ 2.451513e-03, -1.133651e-01,  5.352177e-02,  3.697656e-01],
        [ 7.048257e-02, -8.432989e-03,  1.177977e-01,  3.251008e-01],...
2025-05-15 02:02:24.280391 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 299 / 416 (71.9%)
Max absolute difference: 0.28067606
Max relative difference: 484.05343685
 x: array([[[-4.065898e-01,  4.926097e-01,  4.632347e-01,  2.847585e-01],
        [-3.896703e-01,  3.614414e-01,  4.490107e-01,  2.659567e-01],
        [-3.727508e-01,  2.302731e-01,  4.347867e-01,  2.471549e-01],...
 y: array([[[-4.065898e-01,  4.926097e-01,  4.632347e-01,  2.847585e-01],
        [-4.065898e-01,  4.926097e-01,  4.632347e-01,  2.847585e-01],
        [-4.065898e-01,  4.926097e-01,  4.632347e-01,  2.847585e-01],...
2025-05-15 02:02:24.440614 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.6967558
Max relative difference: 44.33796257
 x: array([[[ 0.95392 ,  0.006399,  1.188306, -0.094367],
        [ 0.256059, -0.25996 ,  1.12344 ,  0.155408],
        [ 0.22818 , -1.451691, -0.518254,  0.024242],...
 y: array([[[ 0.95392 ,  0.006399,  1.188306, -0.094367],
        [ 0.256059, -0.25996 ,  1.12344 ,  0.155408],
        [ 0.22818 , -1.451691, -0.518254,  0.024242],...
2025-05-15 02:02:24.569496 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[ 6.197537e-02,  1.224407e-01,  1.190542e-01, -4.410808e-01],
        [ 6.197537e-02,  1.224407e-01,  1.190542e-01, -4.410808e-01],
        [ 6.197537e-02,  1.224407e-01,  1.190542e-01, -4.410808e-01],...
 y: array([[[ 6.197537e-02,  1.224407e-01,  1.190542e-01, -4.410808e-01],
        [ 6.197537e-02,  1.224407e-01,  1.190542e-01, -4.410808e-01],
        [ 6.197537e-02,  1.224407e-01,  1.190542e-01, -4.410808e-01],...
2025-05-15 02:02:24.715060 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[ 3.664504e-01, -1.436826e-01,  2.894544e-01,  3.562975e-01],
        [ 2.619429e-01, -1.677051e-01,  1.591982e-01,  3.808141e-01],
        [ 1.574353e-01, -1.917276e-01,  2.894192e-02,  4.053307e-01],...
 y: array([[[ 0.36645 , -0.143683,  0.289454,  0.356298],
        [ 0.268705, -0.166151,  0.167627,  0.379228],
        [ 0.17096 , -0.188619,  0.045799,  0.402158],...
2025-05-15 02:02:24.892765 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[-0.30594 , -0.437469, -0.37535 , -0.049656],
        [-0.222693, -0.342774, -0.374835, -0.081741],
        [-0.139447, -0.248079, -0.374321, -0.113826],...
 y: array([[[-0.30594 , -0.437469, -0.37535 , -0.049656],
        [-0.30594 , -0.437469, -0.37535 , -0.049656],
        [-0.30594 , -0.437469, -0.37535 , -0.049656],...
2025-05-15 02:02:25.075799 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 53, 4), (2, 52, 4) mismatch)
 x: array([[[-4.690088e-01,  2.865085e-01,  3.701512e-01,  5.908738e-02],
        [-3.687000e-01,  1.964537e-01,  3.861870e-01,  5.943153e-02],
        [-2.683912e-01,  1.063990e-01,  4.022227e-01,  5.977568e-02],...
 y: array([[[-0.469009,  0.286508,  0.370151,  0.059087],
        [-0.366733,  0.194688,  0.386501,  0.059438],
        [-0.264458,  0.102867,  0.402852,  0.059789],...
2025-05-15 02:02:25.252248 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[ 0.424141,  0.29506 , -0.239403,  0.167153],
        [ 0.424141,  0.29506 , -0.239403,  0.167153],
        [ 0.424141,  0.29506 , -0.239403,  0.167153],...
 y: array([[[ 0.424141,  0.29506 , -0.239403,  0.167153],
        [ 0.424141,  0.29506 , -0.239403,  0.167153],
        [ 0.424141,  0.29506 , -0.239403,  0.167153],...
2025-05-15 02:02:25.431487 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[-0.224447, -0.326185, -0.466701, -0.25557 ],
        [-0.158707, -0.326797, -0.414862, -0.299859],
        [-0.092967, -0.327408, -0.363023, -0.344147],...
 y: array([[[-0.224447, -0.326185, -0.466701, -0.25557 ],
        [-0.163005, -0.326757, -0.418252, -0.296963],
        [-0.101564, -0.327328, -0.369802, -0.338356],...
2025-05-15 02:02:25.614400 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[ 4.340282e-01, -1.374747e-01,  2.780142e-01, -6.182318e-02],
        [ 3.033296e-01, -1.947307e-01,  1.470722e-01, -5.658727e-02],
        [ 1.726310e-01, -2.519867e-01,  1.613021e-02, -5.135135e-02],...
 y: array([[[ 0.434028, -0.137475,  0.278014, -0.061823],
        [ 0.434028, -0.137475,  0.278014, -0.061823],
        [ 0.434028, -0.137475,  0.278014, -0.061823],...
2025-05-15 02:02:25.773527 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 54, 4), (2, 53, 4) mismatch)
 x: array([[[ 0.107857,  0.221855,  0.366695, -0.469644],
        [ 0.047299,  0.191969,  0.284103, -0.344736],
        [-0.013258,  0.162083,  0.201512, -0.219827],...
 y: array([[[ 0.107857,  0.221855,  0.366695, -0.469644],
        [ 0.046135,  0.191394,  0.282515, -0.342333],
        [-0.015587,  0.160934,  0.198335, -0.215023],...
2025-05-15 02:02:25.953708 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.98404895
Max relative difference: 25.17535522
 x: array([[[-0.922304, -0.071702, -0.194424, -0.669914],
        [ 0.279195,  0.100372,  0.383647, -0.047594],
        [-1.24759 , -0.482297,  0.985016, -0.270542],...
 y: array([[[-9.223037e-01, -7.170171e-02, -1.944237e-01, -6.699137e-01],
        [ 2.791946e-01,  1.003722e-01,  3.836465e-01, -4.759416e-02],
        [-1.247590e+00, -4.822973e-01,  9.850156e-01, -2.705415e-01],...
2025-05-15 02:02:26.116827 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 348 / 432 (80.6%)
Max absolute difference: 0.565249
Max relative difference: 123.93682947
 x: array([[[ 4.312724e-01, -4.291425e-01, -2.846687e-01, -2.415567e-01],
        [ 4.272631e-01, -3.391806e-01, -3.063632e-01, -2.265939e-01],
        [ 4.232537e-01, -2.492188e-01, -3.280577e-01, -2.116310e-01],...
 y: array([[[ 0.431272, -0.429143, -0.284669, -0.241557],
        [ 0.427596, -0.346649, -0.304562, -0.227836],
        [ 0.423919, -0.264156, -0.324456, -0.214115],...
2025-05-15 02:02:26.289836 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 300 / 432 (69.4%)
Max absolute difference: 0.2555658
Max relative difference: 84.06805691
 x: array([[[-1.781629e-01,  4.812199e-02, -2.391643e-01, -2.495680e-01],
        [-1.380473e-01,  4.201713e-02, -1.932990e-01, -2.114370e-01],
        [-9.793177e-02,  3.591227e-02, -1.474337e-01, -1.733059e-01],...
 y: array([[[-0.178163,  0.048122, -0.239164, -0.249568],
        [-0.178163,  0.048122, -0.239164, -0.249568],
        [-0.178163,  0.048122, -0.239164, -0.249568],...
2025-05-15 02:02:26.468344 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.73746819
Max relative difference: 9.54646476
 x: array([[[ 5.084126e-01,  1.082209e-01,  1.584935e-02,  1.188174e-01],
        [ 6.122727e-01, -3.304232e-01, -5.781305e-01,  1.057160e+00],
        [ 3.115375e-01,  1.626640e-01, -3.745401e-01,  8.766387e-02],...
 y: array([[[ 5.084126e-01,  1.082209e-01,  1.584934e-02,  1.188174e-01],
        [ 6.122727e-01, -3.304232e-01, -5.781305e-01,  1.057160e+00],
        [ 3.115375e-01,  1.626641e-01, -3.745402e-01,  8.766390e-02],...
2025-05-15 02:02:26.639272 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[-0.334654,  0.044679,  0.470796,  0.210198],
        [-0.334654,  0.044679,  0.470796,  0.210198],
        [-0.334654,  0.044679,  0.470796,  0.210198],...
 y: array([[[-0.334654,  0.044679,  0.470796,  0.210198],
        [-0.334654,  0.044679,  0.470796,  0.210198],
        [-0.334654,  0.044679,  0.470796,  0.210198],...
2025-05-15 02:02:26.811507 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[ 0.213111, -0.083888,  0.19469 , -0.189756],
        [ 0.241343,  0.004891,  0.221128, -0.110958],
        [ 0.269576,  0.09367 ,  0.247565, -0.032159],...
 y: array([[[ 0.213111, -0.083888,  0.19469 , -0.189756],
        [ 0.239479, -0.000972,  0.219382, -0.116161],
        [ 0.265847,  0.081944,  0.244074, -0.042566],...
2025-05-15 02:02:26.983891 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[-3.178750e-02,  2.176219e-01,  3.994369e-01, -2.078165e-01],
        [-9.470967e-02,  1.479067e-01,  3.174112e-01, -1.728644e-01],
        [-1.576318e-01,  7.819158e-02,  2.353856e-01, -1.379122e-01],...
 y: array([[[-0.031787,  0.217622,  0.399437, -0.207817],
        [-0.031787,  0.217622,  0.399437, -0.207817],
        [-0.031787,  0.217622,  0.399437, -0.207817],...
2025-05-15 02:02:27.161347 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 55, 4), (2, 54, 4) mismatch)
 x: array([[[ 3.951526e-01,  2.883527e-01,  1.352803e-01,  8.580688e-02],
        [ 2.878474e-01,  2.796739e-01,  1.084557e-01,  5.688549e-02],
        [ 1.805421e-01,  2.709950e-01,  8.163115e-02,  2.796409e-02],...
 y: array([[[ 3.951526e-01,  2.883527e-01,  1.352803e-01,  8.580688e-02],
        [ 2.858227e-01,  2.795101e-01,  1.079496e-01,  5.633980e-02],
        [ 1.764929e-01,  2.706675e-01,  8.061891e-02,  2.687272e-02],...
2025-05-15 02:02:27.320175 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[ 3.674419e-01, -4.014556e-01, -1.939377e-01,  4.089972e-01],
        [ 3.674419e-01, -4.014556e-01, -1.939377e-01,  4.089972e-01],
        [ 3.674419e-01, -4.014556e-01, -1.939377e-01,  4.089972e-01],...
 y: array([[[ 3.674419e-01, -4.014556e-01, -1.939377e-01,  4.089972e-01],
        [ 3.674419e-01, -4.014556e-01, -1.939377e-01,  4.089972e-01],
        [ 3.674419e-01, -4.014556e-01, -1.939377e-01,  4.089972e-01],...
2025-05-15 02:02:27.467550 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[-3.573495e-01,  1.694802e-01, -1.145516e-01,  3.868567e-01],
        [-3.522092e-01,  7.135566e-02, -1.461378e-01,  2.482591e-01],
        [-3.470690e-01, -2.676891e-02, -1.777240e-01,  1.096615e-01],...
 y: array([[[-0.357349,  0.16948 , -0.114552,  0.386857],
        [-0.352552,  0.077897, -0.144032,  0.257499],
        [-0.347754, -0.013686, -0.173513,  0.128141],...
2025-05-15 02:02:27.618239 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[ 3.437087e-01, -1.054406e-01, -4.631049e-03, -5.640683e-02],
        [ 2.405559e-01, -1.327442e-01,  3.584416e-02,  5.153447e-03],
        [ 1.374032e-01, -1.600477e-01,  7.631937e-02,  6.671372e-02],...
 y: array([[[ 0.343709, -0.105441, -0.004631, -0.056407],
        [ 0.343709, -0.105441, -0.004631, -0.056407],
        [ 0.343709, -0.105441, -0.004631, -0.056407],...
2025-05-15 02:02:27.801267 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 56, 4), (2, 55, 4) mismatch)
 x: array([[[ 0.480351, -0.341981, -0.256556,  0.391046],
        [ 0.401825, -0.276313, -0.260216,  0.383599],
        [ 0.323298, -0.210644, -0.263875,  0.376153],...
 y: array([[[ 4.803513e-01, -3.419810e-01, -2.565563e-01,  3.910458e-01],
        [ 4.003706e-01, -2.750966e-01, -2.602836e-01,  3.834615e-01],
        [ 3.203900e-01, -2.082123e-01, -2.640108e-01,  3.758772e-01],...
2025-05-15 02:02:27.961221 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.74777893
Max relative difference: 28.42561934
 x: array([[[ 0.680482,  0.765593,  0.705181,  1.196721],
        [ 0.357743,  0.764053,  0.653619,  0.452601],
        [ 1.042286,  0.475342,  0.192011,  0.714302],...
 y: array([[[ 0.680482,  0.765593,  0.705181,  1.196721],
        [ 0.357743,  0.764053,  0.653619,  0.452601],
        [ 1.042286,  0.475342,  0.192011,  0.714302],...
2025-05-15 02:02:28.135792 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 339 / 448 (75.7%)
Max absolute difference: 0.46179329
Max relative difference: 314.75918219
 x: array([[[ 3.255486e-01,  1.091011e-01, -4.471396e-01,  4.718987e-01],
        [ 3.150235e-01,  1.682960e-02, -3.730327e-01,  4.452967e-01],
        [ 3.044984e-01, -7.544191e-02, -2.989259e-01,  4.186948e-01],...
 y: array([[[ 0.325549,  0.109101, -0.44714 ,  0.471899],
        [ 0.315904,  0.024547, -0.379231,  0.447522],
        [ 0.306259, -0.060007, -0.311322,  0.423145],...
2025-05-15 02:02:28.316390 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 313 / 448 (69.9%)
Max absolute difference: 0.25425297
Max relative difference: 57.48887543
 x: array([[[-3.766751e-01,  3.701168e-01,  4.927476e-01,  6.785804e-02],
        [-3.390114e-01,  3.526878e-01,  4.895903e-01,  7.106840e-02],
        [-3.013476e-01,  3.352589e-01,  4.864330e-01,  7.427877e-02],...
 y: array([[[-0.376675,  0.370117,  0.492748,  0.067858],
        [-0.376675,  0.370117,  0.492748,  0.067858],
        [-0.376675,  0.370117,  0.492748,  0.067858],...
2025-05-15 02:02:28.509738 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.01031929
Max relative difference: 37.28523802
 x: array([[[-0.625941,  0.161975, -0.35715 , -0.322186],
        [-0.797751,  0.051261,  0.111875,  0.502282],
        [-0.993854,  0.068103,  0.47542 , -0.418569],...
 y: array([[[-0.625941,  0.161975, -0.35715 , -0.322186],
        [-0.797751,  0.051261,  0.111875,  0.502282],
        [-0.993854,  0.068103,  0.47542 , -0.418569],...
2025-05-15 02:02:28.685880 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[-0.1712  ,  0.467664,  0.227485, -0.054663],
        [-0.1712  ,  0.467664,  0.227485, -0.054663],
        [-0.1712  ,  0.467664,  0.227485, -0.054663],...
 y: array([[[-0.1712  ,  0.467664,  0.227485, -0.054663],
        [-0.1712  ,  0.467664,  0.227485, -0.054663],
        [-0.1712  ,  0.467664,  0.227485, -0.054663],...
2025-05-15 02:02:28.858172 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[ 0.127687, -0.406701, -0.229224,  0.225071],
        [ 0.102309, -0.2551  , -0.232454,  0.169704],
        [ 0.076932, -0.103499, -0.235683,  0.114338],...
 y: array([[[ 0.127687, -0.406701, -0.229224,  0.225071],
        [ 0.104017, -0.265299, -0.232236,  0.173429],
        [ 0.080347, -0.123896, -0.235249,  0.121787],...
2025-05-15 02:02:29.033077 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[-0.374258, -0.259699, -0.28454 , -0.176059],
        [-0.355766, -0.197506, -0.167418, -0.184382],
        [-0.337274, -0.135312, -0.050296, -0.192705],...
 y: array([[[-0.374258, -0.259699, -0.28454 , -0.176059],
        [-0.374258, -0.259699, -0.28454 , -0.176059],
        [-0.374258, -0.259699, -0.28454 , -0.176059],...
2025-05-15 02:02:29.204383 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 57, 4), (2, 56, 4) mismatch)
 x: array([[[-0.215729,  0.428485,  0.003258, -0.2915  ],
        [-0.17026 ,  0.309177,  0.028135, -0.230961],
        [-0.12479 ,  0.18987 ,  0.053011, -0.170422],...
 y: array([[[-2.157289e-01,  4.284845e-01,  3.258340e-03, -2.915004e-01],
        [-1.694329e-01,  3.070079e-01,  2.858711e-02, -2.298605e-01],
        [-1.231369e-01,  1.855313e-01,  5.391588e-02, -1.682207e-01],...
2025-05-15 02:02:29.375626 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[-1.201289e-01,  3.205835e-01, -4.079807e-01, -2.429077e-03],
        [-1.201289e-01,  3.205835e-01, -4.079807e-01, -2.429077e-03],
        [-1.201289e-01,  3.205835e-01, -4.079807e-01, -2.429077e-03],...
 y: array([[[-1.201289e-01,  3.205835e-01, -4.079807e-01, -2.429077e-03],
        [-1.201289e-01,  3.205835e-01, -4.079807e-01, -2.429077e-03],
        [-1.201289e-01,  3.205835e-01, -4.079807e-01, -2.429077e-03],...
2025-05-15 02:02:29.555301 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[-4.941843e-01,  1.683841e-02, -1.062065e-01, -4.658905e-02],
        [-3.343113e-01,  9.695958e-02, -4.785503e-02, -3.485174e-02],
        [-1.744384e-01,  1.770807e-01,  1.049639e-02, -2.311443e-02],...
 y: array([[[-0.494184,  0.016838, -0.106206, -0.046589],
        [-0.34516 ,  0.091523, -0.051815, -0.035648],
        [-0.196135,  0.166207,  0.002577, -0.024707],...
2025-05-15 02:02:29.712955 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[-0.481575,  0.191378, -0.207645,  0.406342],
        [-0.328879,  0.154167, -0.252783,  0.361724],
        [-0.176183,  0.116957, -0.29792 ,  0.317107],...
 y: array([[[-0.481575,  0.191378, -0.207645,  0.406342],
        [-0.481575,  0.191378, -0.207645,  0.406342],
        [-0.481575,  0.191378, -0.207645,  0.406342],...
2025-05-15 02:02:29.895806 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 58, 4), (2, 57, 4) mismatch)
 x: array([[[-0.386338,  0.452037, -0.480966, -0.342704],
        [-0.347571,  0.387584, -0.414455, -0.296679],
        [-0.308804,  0.323131, -0.347944, -0.250654],...
 y: array([[[-3.863382e-01,  4.520366e-01, -4.809664e-01, -3.427036e-01],
        [-3.468790e-01,  3.864331e-01, -4.132673e-01, -2.958571e-01],
        [-3.074198e-01,  3.208295e-01, -3.455681e-01, -2.490106e-01],...
2025-05-15 02:02:30.074692 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.62949874
Max relative difference: 8.19397219
 x: array([[[ 0.377742,  0.286171,  1.457534, -0.366689],
        [-0.417214,  0.041454,  0.066867,  0.558026],
        [-0.565842,  0.266068, -0.228086, -0.070631],...
 y: array([[[ 0.377742,  0.286171,  1.457534, -0.366689],
        [-0.417214,  0.041454,  0.066867,  0.558026],
        [-0.565842,  0.266068, -0.228086, -0.070631],...
2025-05-15 02:02:30.253135 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 362 / 464 (78%)
Max absolute difference: 0.43818911
Max relative difference: 428.18793546
 x: array([[[ 0.148313,  0.237907,  0.39526 ,  0.36979 ],
        [ 0.067847,  0.18008 ,  0.373345,  0.341249],
        [-0.012619,  0.122252,  0.35143 ,  0.312707],...
 y: array([[[ 0.148313,  0.237907,  0.39526 ,  0.36979 ],
        [ 0.074623,  0.184949,  0.37519 ,  0.343652],
        [ 0.000933,  0.131991,  0.355121,  0.317514],...
2025-05-15 02:02:30.412899 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 318 / 464 (68.5%)
Max absolute difference: 0.34843238
Max relative difference: 94.71221191
 x: array([[[ 0.40154 ,  0.021565, -0.104428,  0.350555],
        [ 0.323809, -0.053834, -0.085215,  0.342145],
        [ 0.246078, -0.129233, -0.066002,  0.333734],...
 y: array([[[ 0.40154 ,  0.021565, -0.104428,  0.350555],
        [ 0.40154 ,  0.021565, -0.104428,  0.350555],
        [ 0.40154 ,  0.021565, -0.104428,  0.350555],...
2025-05-15 02:02:30.557572 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 2.18681059
Max relative difference: 91.58091905
 x: array([[[ 0.11403 ,  0.15611 , -0.161801, -0.715348],
        [ 0.710983, -0.152484,  0.124939, -0.497252],
        [ 0.529671, -0.281509, -0.305868, -0.844039],...
 y: array([[[ 0.11403 ,  0.15611 , -0.161801, -0.715348],
        [ 0.710983, -0.152484,  0.124939, -0.497252],
        [ 0.529671, -0.281509, -0.305868, -0.844039],...
2025-05-15 02:02:30.718366 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[ 9.350004e-02, -1.249540e-01,  2.049694e-01,  5.163942e-02],
        [ 9.350004e-02, -1.249540e-01,  2.049694e-01,  5.163942e-02],
        [ 9.350004e-02, -1.249540e-01,  2.049694e-01,  5.163942e-02],...
 y: array([[[ 9.350004e-02, -1.249540e-01,  2.049694e-01,  5.163942e-02],
        [ 9.350004e-02, -1.249540e-01,  2.049694e-01,  5.163942e-02],
        [ 9.350004e-02, -1.249540e-01,  2.049694e-01,  5.163942e-02],...
2025-05-15 02:02:30.899730 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[-1.590769e-01, -4.897189e-01,  3.459717e-01, -1.462029e-01],
        [-2.092682e-01, -4.511818e-01,  3.666395e-01, -7.156963e-02],
        [-2.594596e-01, -4.126447e-01,  3.873072e-01,  3.063664e-03],...
 y: array([[[-1.590769e-01, -4.897189e-01,  3.459717e-01, -1.462029e-01],
        [-2.058341e-01, -4.538185e-01,  3.652254e-01, -7.667612e-02],
        [-2.525913e-01, -4.179182e-01,  3.844790e-01, -7.149317e-03],...
2025-05-15 02:02:31.075261 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[ 4.561686e-01,  3.075944e-01, -4.213975e-01,  1.022980e-01],
        [ 4.390165e-01,  1.983509e-01, -2.809941e-01,  1.221423e-01],
        [ 4.218644e-01,  8.910749e-02, -1.405908e-01,  1.419866e-01],...
 y: array([[[ 0.456169,  0.307594, -0.421397,  0.102298],
        [ 0.456169,  0.307594, -0.421397,  0.102298],
        [ 0.456169,  0.307594, -0.421397,  0.102298],...
2025-05-15 02:02:31.253716 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 59, 4), (2, 58, 4) mismatch)
 x: array([[[-1.356190e-01,  3.396851e-01,  3.167589e-01, -1.696441e-01],
        [-3.809647e-02,  3.057056e-01,  2.653897e-01, -1.457776e-01],
        [ 5.942603e-02,  2.717261e-01,  2.140205e-01, -1.219110e-01],...
 y: array([[[-1.356190e-01,  3.396851e-01,  3.167589e-01, -1.696441e-01],
        [-3.638555e-02,  3.051094e-01,  2.644885e-01, -1.453589e-01],
        [ 6.284788e-02,  2.705338e-01,  2.122180e-01, -1.210736e-01],...
2025-05-15 02:02:31.412970 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[-4.312913e-03,  3.347811e-01,  2.683592e-01, -1.641032e-01],
        [-4.312913e-03,  3.347811e-01,  2.683592e-01, -1.641032e-01],
        [-4.312913e-03,  3.347811e-01,  2.683592e-01, -1.641032e-01],...
 y: array([[[-4.312913e-03,  3.347811e-01,  2.683592e-01, -1.641032e-01],
        [-4.312913e-03,  3.347811e-01,  2.683592e-01, -1.641032e-01],
        [-4.312913e-03,  3.347811e-01,  2.683592e-01, -1.641032e-01],...
2025-05-15 02:02:31.593091 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[-0.243247,  0.320798, -0.42901 , -0.386317],
        [-0.188599,  0.345983, -0.404844, -0.393699],
        [-0.133952,  0.371167, -0.380678, -0.401081],...
 y: array([[[-0.243247,  0.320798, -0.42901 , -0.386317],
        [-0.192368,  0.344246, -0.40651 , -0.39319 ],
        [-0.141489,  0.367694, -0.384011, -0.400063],...
2025-05-15 02:02:31.748270 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[ 0.172701,  0.15321 ,  0.248024, -0.001169],
        [ 0.081135,  0.099584,  0.155608, -0.008884],
        [-0.010432,  0.045958,  0.063191, -0.016599],...
 y: array([[[ 1.727009e-01,  1.532103e-01,  2.480243e-01, -1.169362e-03],
        [ 1.727009e-01,  1.532103e-01,  2.480243e-01, -1.169362e-03],
        [ 1.727009e-01,  1.532103e-01,  2.480243e-01, -1.169362e-03],...
2025-05-15 02:02:31.930097 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 60, 4), (2, 59, 4) mismatch)
 x: array([[[ 0.062985,  0.470299, -0.462657, -0.103127],
        [ 0.058027,  0.433868, -0.318527, -0.146444],
        [ 0.053069,  0.397437, -0.174397, -0.189762],...
 y: array([[[ 0.062985,  0.470299, -0.462657, -0.103127],
        [ 0.057941,  0.43324 , -0.316042, -0.147191],
        [ 0.052898,  0.396181, -0.169427, -0.191255],...
2025-05-15 02:02:32.096515 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.62181314
Max relative difference: 5432.85543201
 x: array([[[ 0.716728, -0.671684,  1.120074, -0.251667],
        [-0.801729, -0.090004, -0.828588, -0.875148],
        [ 0.476243, -0.10924 , -0.522178,  0.107555],...
 y: array([[[ 7.167278e-01, -6.716842e-01,  1.120074e+00, -2.516673e-01],
        [-8.017287e-01, -9.000441e-02, -8.285880e-01, -8.751475e-01],
        [ 4.762428e-01, -1.092398e-01, -5.221782e-01,  1.075546e-01],...
2025-05-15 02:02:32.274162 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 409 / 480 (85.2%)
Max absolute difference: 0.61270031
Max relative difference: 74.53613434
 x: array([[[ 3.240729e-01, -4.864102e-01, -4.879523e-01, -1.086633e-01],
        [ 2.359576e-01, -4.625851e-01, -4.511299e-01, -8.787408e-02],
        [ 1.478424e-01, -4.387600e-01, -4.143074e-01, -6.708490e-02],...
 y: array([[[ 0.324073, -0.48641 , -0.487952, -0.108663],
        [ 0.243425, -0.464604, -0.45425 , -0.089636],
        [ 0.162777, -0.442798, -0.420548, -0.070608],...
2025-05-15 02:02:32.456942 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 352 / 480 (73.3%)
Max absolute difference: 0.25227274
Max relative difference: 57.13628975
 x: array([[[ 1.856307e-01, -3.334453e-01, -2.126119e-01,  2.012757e-01],
        [ 1.730667e-01, -2.557329e-01, -1.308334e-01,  2.450464e-01],
        [ 1.605027e-01, -1.780206e-01, -4.905497e-02,  2.888171e-01],...
 y: array([[[ 0.185631, -0.333445, -0.212612,  0.201276],
        [ 0.185631, -0.333445, -0.212612,  0.201276],
        [ 0.185631, -0.333445, -0.212612,  0.201276],...
2025-05-15 02:02:32.631491 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.53764494
Max relative difference: 7.17514927
 x: array([[[ 0.473227, -0.66292 , -0.147468, -0.753425],
        [ 0.54569 , -0.368867, -0.410703, -0.144223],
        [ 0.83582 ,  0.967585,  0.492335,  0.52809 ],...
 y: array([[[ 0.473227, -0.66292 , -0.147468, -0.753425],
        [ 0.54569 , -0.368867, -0.410703, -0.144223],
        [ 0.83582 ,  0.967585,  0.492335,  0.52809 ],...
2025-05-15 02:02:32.800147 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[ 4.718151e-01, -1.763293e-01, -4.780961e-02,  4.518055e-01],
        [ 4.718151e-01, -1.763293e-01, -4.780961e-02,  4.518055e-01],
        [ 4.718151e-01, -1.763293e-01, -4.780961e-02,  4.518055e-01],...
 y: array([[[ 4.718151e-01, -1.763293e-01, -4.780961e-02,  4.518055e-01],
        [ 4.718151e-01, -1.763293e-01, -4.780961e-02,  4.518055e-01],
        [ 4.718151e-01, -1.763293e-01, -4.780961e-02,  4.518055e-01],...
2025-05-15 02:02:32.976497 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[-8.335440e-02,  2.346427e-01, -1.941764e-01, -2.173669e-01],
        [-9.398552e-02,  2.232280e-01, -1.116304e-01, -1.427831e-01],
        [-1.046166e-01,  2.118132e-01, -2.908441e-02, -6.819921e-02],...
 y: array([[[-0.083354,  0.234643, -0.194176, -0.217367],
        [-0.093247,  0.224021, -0.117367, -0.147966],
        [-0.103139,  0.2134  , -0.040557, -0.078565],...
2025-05-15 02:02:33.157517 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[-2.049186e-01,  6.430803e-02,  3.075487e-01, -4.470865e-01],
        [-1.720638e-01,  1.241978e-01,  2.502972e-01, -3.524986e-01],
        [-1.392090e-01,  1.840875e-01,  1.930458e-01, -2.579106e-01],...
 y: array([[[-2.049186e-01,  6.430803e-02,  3.075487e-01, -4.470865e-01],
        [-2.049186e-01,  6.430803e-02,  3.075487e-01, -4.470865e-01],
        [-2.049186e-01,  6.430803e-02,  3.075487e-01, -4.470865e-01],...
2025-05-15 02:02:33.321456 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 61, 4), (2, 60, 4) mismatch)
 x: array([[[ 0.035093, -0.016668,  0.240322, -0.030583],
        [ 0.028961,  0.020383,  0.227562, -0.046933],
        [ 0.022829,  0.057433,  0.214802, -0.063283],...
 y: array([[[ 0.035093, -0.016668,  0.240322, -0.030583],
        [ 0.028857,  0.021011,  0.227346, -0.04721 ],
        [ 0.022621,  0.058689,  0.214369, -0.063837],...
2025-05-15 02:02:33.507331 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[-1.361540e-01,  2.710387e-01,  7.385196e-02, -2.093087e-02],
        [-1.361540e-01,  2.710387e-01,  7.385196e-02, -2.093087e-02],
        [-1.361540e-01,  2.710387e-01,  7.385196e-02, -2.093087e-02],...
 y: array([[[-1.361540e-01,  2.710387e-01,  7.385196e-02, -2.093087e-02],
        [-1.361540e-01,  2.710387e-01,  7.385196e-02, -2.093087e-02],
        [-1.361540e-01,  2.710387e-01,  7.385196e-02, -2.093087e-02],...
2025-05-15 02:02:33.687818 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[ 5.338774e-02,  2.275501e-01, -2.218455e-01, -9.758448e-02],
        [ 9.117554e-02,  2.698743e-01, -1.209933e-01, -5.435176e-02],
        [ 1.289633e-01,  3.121986e-01, -2.014121e-02, -1.111903e-02],...
 y: array([[[ 0.053388,  0.22755 , -0.221845, -0.097584],
        [ 0.08853 ,  0.266912, -0.128053, -0.057378],
        [ 0.123673,  0.306273, -0.034261, -0.017172],...
2025-05-15 02:02:33.845887 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[ 0.042942, -0.278145, -0.001495, -0.358211],
        [ 0.003571, -0.283093,  0.055666, -0.374261],
        [-0.0358  , -0.288041,  0.112828, -0.390311],...
 y: array([[[ 4.294196e-02, -2.781454e-01, -1.494928e-03, -3.582106e-01],
        [ 4.294196e-02, -2.781454e-01, -1.494928e-03, -3.582106e-01],
        [ 4.294196e-02, -2.781454e-01, -1.494928e-03, -3.582106e-01],...
2025-05-15 02:02:34.029036 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 62, 4), (2, 61, 4) mismatch)
 x: array([[[-0.264496, -0.185965,  0.343582, -0.216535],
        [-0.159204, -0.136842,  0.252127, -0.190004],
        [-0.053912, -0.087719,  0.160671, -0.163473],...
 y: array([[[-2.644957e-01, -1.859645e-01,  3.435820e-01, -2.165348e-01],
        [-1.574488e-01, -1.360229e-01,  2.506025e-01, -1.895617e-01],
        [-5.040189e-02, -8.608126e-02,  1.576230e-01, -1.625886e-01],...
2025-05-15 02:02:34.211932 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.31678857
Max relative difference: 36.00161739
 x: array([[[-0.23459 ,  0.045372,  1.057846,  0.33199 ],
        [-0.656436, -0.145872,  1.499802, -0.723727],
        [-0.670574, -0.537224,  0.437382, -0.688964],...
 y: array([[[-0.23459 ,  0.045372,  1.057846,  0.33199 ],
        [-0.656437, -0.145872,  1.499802, -0.723727],
        [-0.670574, -0.537224,  0.437382, -0.688964],...
2025-05-15 02:02:34.377992 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 402 / 496 (81%)
Max absolute difference: 0.49449263
Max relative difference: 165.13785843
 x: array([[[-2.064068e-02, -1.628253e-01, -1.431117e-01, -4.175509e-01],
        [-7.378125e-02, -1.113841e-01, -1.093626e-01, -3.645586e-01],
        [-1.269218e-01, -5.994296e-02, -7.561341e-02, -3.115662e-01],...
 y: array([[[-2.064068e-02, -1.628253e-01, -1.431117e-01, -4.175509e-01],
        [-6.925123e-02, -1.157693e-01, -1.122395e-01, -3.690759e-01],
        [-1.178618e-01, -6.871327e-02, -8.136737e-02, -3.206010e-01],...
2025-05-15 02:02:34.555021 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 371 / 496 (74.8%)
Max absolute difference: 0.2618994
Max relative difference: 237.27638983
 x: array([[[ 1.946597e-01,  3.794684e-01,  2.286564e-01,  1.664214e-01],
        [ 2.208619e-01,  3.022570e-01,  1.715559e-01,  2.059535e-01],
        [ 2.470640e-01,  2.250455e-01,  1.144554e-01,  2.454856e-01],...
 y: array([[[ 1.946597e-01,  3.794684e-01,  2.286564e-01,  1.664214e-01],
        [ 1.946597e-01,  3.794684e-01,  2.286564e-01,  1.664214e-01],
        [ 1.946597e-01,  3.794684e-01,  2.286564e-01,  1.664214e-01],...
2025-05-15 02:02:34.730558 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 2.14249211
Max relative difference: 382.94799029
 x: array([[[-0.885271, -0.848924,  0.027609,  0.469702],
        [-0.099266, -0.470244, -1.049244,  0.410803],
        [-0.266943, -0.455336, -0.731996,  0.125921],...
 y: array([[[-0.885271, -0.848925,  0.027609,  0.469702],
        [-0.099266, -0.470244, -1.049244,  0.410803],
        [-0.266943, -0.455336, -0.731996,  0.125922],...
2025-05-15 02:02:34.885232 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[ 0.320235, -0.407058, -0.120373,  0.049399],
        [ 0.320235, -0.407058, -0.120373,  0.049399],
        [ 0.320235, -0.407058, -0.120373,  0.049399],...
 y: array([[[ 0.320235, -0.407058, -0.120373,  0.049399],
        [ 0.320235, -0.407058, -0.120373,  0.049399],
        [ 0.320235, -0.407058, -0.120373,  0.049399],...
2025-05-15 02:02:35.065402 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[ 0.091129,  0.147367, -0.451946,  0.332184],
        [ 0.022786,  0.074318, -0.326565,  0.242573],
        [-0.045558,  0.001268, -0.201185,  0.152962],...
 y: array([[[ 0.091129,  0.147367, -0.451946,  0.332184],
        [ 0.027603,  0.079467, -0.335404,  0.24889 ],
        [-0.035923,  0.011567, -0.218862,  0.165596],...
2025-05-15 02:02:35.218100 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[-2.560244e-01, -2.592693e-01, -3.429911e-01,  2.029729e-02],
        [-2.490767e-01, -2.587262e-01, -2.867040e-01, -2.464837e-02],
        [-2.421290e-01, -2.581832e-01, -2.304168e-01, -6.959403e-02],...
 y: array([[[-2.560244e-01, -2.592693e-01, -3.429911e-01,  2.029729e-02],
        [-2.560244e-01, -2.592693e-01, -3.429911e-01,  2.029729e-02],
        [-2.560244e-01, -2.592693e-01, -3.429911e-01,  2.029729e-02],...
2025-05-15 02:02:35.402886 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 63, 4), (2, 62, 4) mismatch)
 x: array([[[-0.152942, -0.466572, -0.385374,  0.186519],
        [-0.143386, -0.413832, -0.343639,  0.159479],
        [-0.13383 , -0.361091, -0.301905,  0.132439],...
 y: array([[[-1.529421e-01, -4.665722e-01, -3.853736e-01,  1.865188e-01],
        [-1.432295e-01, -4.129672e-01, -3.429551e-01,  1.590357e-01],
        [-1.335168e-01, -3.593623e-01, -3.005365e-01,  1.315526e-01],...
2025-05-15 02:02:35.579649 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[-0.100336,  0.2942  ,  0.068182,  0.418857],
        [-0.100336,  0.2942  ,  0.068182,  0.418857],
        [-0.100336,  0.2942  ,  0.068182,  0.418857],...
 y: array([[[-0.100336,  0.2942  ,  0.068182,  0.418857],
        [-0.100336,  0.2942  ,  0.068182,  0.418857],
        [-0.100336,  0.2942  ,  0.068182,  0.418857],...
2025-05-15 02:02:35.762046 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[ 1.937155e-01, -2.552154e-01, -1.687155e-01, -5.921739e-02],
        [ 1.804458e-01, -2.552754e-01, -1.486866e-01,  1.376874e-02],
        [ 1.671762e-01, -2.553354e-01, -1.286577e-01,  8.675487e-02],...
 y: array([[[ 0.193715, -0.255215, -0.168715, -0.059217],
        [ 0.181388, -0.255271, -0.150108,  0.008589],
        [ 0.16906 , -0.255327, -0.131501,  0.076396],...
2025-05-15 02:02:35.920632 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[-2.225149e-01, -2.662874e-01,  4.712328e-01,  2.105524e-01],
        [-2.071021e-01, -2.590138e-01,  4.504482e-01,  2.200397e-01],
        [-1.916893e-01, -2.517401e-01,  4.296636e-01,  2.295270e-01],...
 y: array([[[-2.225149e-01, -2.662874e-01,  4.712328e-01,  2.105524e-01],
        [-2.225149e-01, -2.662874e-01,  4.712328e-01,  2.105524e-01],
        [-2.225149e-01, -2.662874e-01,  4.712328e-01,  2.105524e-01],...
2025-05-15 02:02:36.066015 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 64, 4), (2, 63, 4) mismatch)
 x: array([[[ 0.212645,  0.175211,  0.147547, -0.417507],
        [ 0.163497,  0.20593 ,  0.128044, -0.317008],
        [ 0.114349,  0.236649,  0.108541, -0.216509],...
 y: array([[[ 2.126447e-01,  1.752113e-01,  1.475471e-01, -4.175073e-01],
        [ 1.627041e-01,  2.064257e-01,  1.277293e-01, -3.153873e-01],
        [ 1.127636e-01,  2.376400e-01,  1.079116e-01, -2.132674e-01],...
2025-05-15 02:02:36.249491 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.41309617
Max relative difference: 30.78229283
 x: array([[[ 0.217655, -0.0607  ,  0.745295,  1.391709],
        [ 0.931519,  0.375959, -0.134535,  0.604211],
        [ 0.145405, -0.439649, -1.140794,  1.084456],...
 y: array([[[ 0.217655, -0.0607  ,  0.745295,  1.391709],
        [ 0.931519,  0.375959, -0.134535,  0.604211],
        [ 0.145405, -0.439649, -1.140794,  1.084456],...
2025-05-15 02:02:36.400348 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 445 / 512 (86.9%)
Max absolute difference: 0.6802881
Max relative difference: 573.47783568
 x: array([[[-4.140663e-02, -3.945759e-01, -3.434621e-04,  1.715434e-01],
        [-6.442120e-02, -3.029338e-01, -1.309031e-03,  2.012733e-01],
        [-8.743577e-02, -2.112916e-01, -2.274601e-03,  2.310032e-01],...
 y: array([[[-4.140663e-02, -3.945759e-01, -3.434621e-04,  1.715434e-01],
        [-6.244852e-02, -3.107888e-01, -1.226268e-03,  1.987250e-01],
        [-8.349042e-02, -2.270017e-01, -2.109075e-03,  2.259066e-01],...
2025-05-15 02:02:36.582025 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 401 / 512 (78.3%)
Max absolute difference: 0.35123245
Max relative difference: 85.54708391
 x: array([[[-0.19899 , -0.22102 ,  0.361537,  0.10546 ],
        [-0.122906, -0.219617,  0.371027,  0.089971],
        [-0.046821, -0.218213,  0.380518,  0.074482],...
 y: array([[[-0.19899 , -0.22102 ,  0.361537,  0.10546 ],
        [-0.19899 , -0.22102 ,  0.361537,  0.10546 ],
        [-0.19899 , -0.22102 ,  0.361537,  0.10546 ],...
2025-05-15 02:02:36.759343 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.27865687
Max relative difference: 29.78988524
 x: array([[[ 0.473353, -0.003072,  0.691434,  0.133876],
        [ 1.007014, -0.043176, -0.630468,  0.656915],
        [-0.476577, -0.173086, -0.485557, -0.617581],...
 y: array([[[ 0.473354, -0.003072,  0.691434,  0.133876],
        [ 1.007014, -0.043176, -0.630468,  0.656915],
        [-0.476577, -0.173086, -0.485557, -0.617581],...
2025-05-15 02:02:36.926746 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[ 0.24907 ,  0.295264, -0.160368,  0.427073],
        [ 0.24907 ,  0.295264, -0.160368,  0.427073],
        [ 0.24907 ,  0.295264, -0.160368,  0.427073],...
 y: array([[[ 0.24907 ,  0.295264, -0.160368,  0.427073],
        [ 0.24907 ,  0.295264, -0.160368,  0.427073],
        [ 0.24907 ,  0.295264, -0.160368,  0.427073],...
2025-05-15 02:02:37.118438 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[ 4.632071e-01,  4.237065e-01, -7.852308e-02,  2.919354e-01],
        [ 4.463999e-01,  3.486223e-01, -1.219824e-01,  1.886251e-01],
        [ 4.295928e-01,  2.735380e-01, -1.654418e-01,  8.531487e-02],...
 y: array([[[ 4.632071e-01,  4.237065e-01, -7.852308e-02,  2.919354e-01],
        [ 4.476005e-01,  3.539854e-01, -1.188782e-01,  1.960044e-01],
        [ 4.319938e-01,  2.842643e-01, -1.592333e-01,  1.000735e-01],...
2025-05-15 02:02:37.297845 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[ 0.430833,  0.121264, -0.481539, -0.241903],
        [ 0.426291,  0.136101, -0.378765, -0.220821],
        [ 0.42175 ,  0.150939, -0.275991, -0.199739],...
 y: array([[[ 4.308328e-01,  1.212638e-01, -4.815386e-01, -2.419028e-01],
        [ 4.308328e-01,  1.212638e-01, -4.815386e-01, -2.419028e-01],
        [ 4.308328e-01,  1.212638e-01, -4.815386e-01, -2.419028e-01],...
2025-05-15 02:02:37.478929 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 65, 4), (2, 64, 4) mismatch)
 x: array([[[-4.080846e-01, -4.879214e-01,  2.325527e-01,  3.473769e-01],
        [-3.950139e-01, -3.611457e-01,  2.512509e-01,  3.066557e-01],
        [-3.819432e-01, -2.343700e-01,  2.699492e-01,  2.659344e-01],...
 y: array([[[-0.408085, -0.487921,  0.232553,  0.347377],
        [-0.394806, -0.359133,  0.251548,  0.306009],
        [-0.381528, -0.230345,  0.270543,  0.264642],...
2025-05-15 02:02:37.659658 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[-3.284035e-01,  2.288153e-01,  1.044720e-01, -8.280704e-02],
        [-3.284035e-01,  2.288153e-01,  1.044720e-01, -8.280704e-02],
        [-3.284035e-01,  2.288153e-01,  1.044720e-01, -8.280704e-02],...
 y: array([[[-3.284035e-01,  2.288153e-01,  1.044720e-01, -8.280704e-02],
        [-3.284035e-01,  2.288153e-01,  1.044720e-01, -8.280704e-02],
        [-3.284035e-01,  2.288153e-01,  1.044720e-01, -8.280704e-02],...
2025-05-15 02:02:37.828443 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[ 0.141113, -0.368131,  0.100455,  0.00234 ],
        [ 0.082018, -0.375924,  0.07498 ,  0.012165],
        [ 0.022923, -0.383717,  0.049504,  0.02199 ],...
 y: array([[[ 1.411125e-01, -3.681311e-01,  1.004554e-01,  2.339839e-03],
        [ 8.626499e-02, -3.753637e-01,  7.681061e-02,  1.145896e-02],
        [ 3.141747e-02, -3.825963e-01,  5.316579e-02,  2.057809e-02],...
2025-05-15 02:02:38.005180 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[-4.876759e-01,  1.035538e-01,  2.510987e-02,  3.473614e-01],
        [-4.279373e-01,  3.277125e-02,  8.737822e-02,  3.329244e-01],
        [-3.681986e-01, -3.801126e-02,  1.496466e-01,  3.184874e-01],...
 y: array([[[-0.487676,  0.103554,  0.02511 ,  0.347361],
        [-0.487676,  0.103554,  0.02511 ,  0.347361],
        [-0.487676,  0.103554,  0.02511 ,  0.347361],...
2025-05-15 02:02:38.166840 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 66, 4), (2, 65, 4) mismatch)
 x: array([[[-3.670295e-01, -3.488815e-01, -1.662710e-01, -3.482814e-01],
        [-3.238106e-01, -3.546676e-01, -2.033427e-01, -2.419040e-01],
        [-2.805918e-01, -3.604537e-01, -2.404143e-01, -1.355265e-01],...
 y: array([[[-3.670295e-01, -3.488815e-01, -1.662710e-01, -3.482814e-01],
        [-3.231353e-01, -3.547580e-01, -2.039219e-01, -2.402418e-01],
        [-2.792412e-01, -3.606345e-01, -2.415728e-01, -1.322023e-01],...
2025-05-15 02:02:38.316642 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.39358244
Max relative difference: 5332.29817043
 x: array([[[-1.041186,  0.320784,  0.078519, -1.05002 ],
        [-0.061703, -0.288287, -0.468251, -0.230837],
        [ 0.662873, -0.314961,  0.315152,  0.141787],...
 y: array([[[-1.041186e+00,  3.207841e-01,  7.851907e-02, -1.050020e+00],
        [-6.170289e-02, -2.882866e-01, -4.682511e-01, -2.308367e-01],
        [ 6.628731e-01, -3.149606e-01,  3.151522e-01,  1.417869e-01],...
2025-05-15 02:02:38.491809 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 463 / 528 (87.7%)
Max absolute difference: 0.54964406
Max relative difference: 140.45720072
 x: array([[[ 0.103051,  0.058663,  0.237956, -0.400898],
        [ 0.023872,  0.0016  ,  0.151786, -0.408707],
        [-0.055308, -0.055464,  0.065617, -0.416517],...
 y: array([[[ 0.103051,  0.058663,  0.237956, -0.400898],
        [ 0.030693,  0.006516,  0.15921 , -0.408034],
        [-0.041664, -0.045631,  0.080464, -0.415171],...
2025-05-15 02:02:38.673813 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 385 / 528 (72.9%)
Max absolute difference: 0.29572301
Max relative difference: 320.42462695
 x: array([[[ 0.188787,  0.091745, -0.184766, -0.110006],
        [ 0.110631,  0.134209, -0.22685 , -0.128651],
        [ 0.032474,  0.176673, -0.268934, -0.147295],...
 y: array([[[ 0.188787,  0.091745, -0.184766, -0.110006],
        [ 0.188787,  0.091745, -0.184766, -0.110006],
        [ 0.188787,  0.091745, -0.184766, -0.110006],...
2025-05-15 02:02:38.852994 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.16086428
Max relative difference: 46.83166363
 x: array([[[ 0.405799,  0.046357,  0.197972,  0.025014],
        [-0.766181, -0.846841, -0.805136,  0.019607],
        [-0.57815 , -0.56074 ,  0.736373,  1.281988],...
 y: array([[[ 0.405799,  0.046357,  0.197972,  0.025014],
        [-0.766181, -0.846841, -0.805136,  0.019607],
        [-0.57815 , -0.56074 ,  0.736373,  1.281988],...
2025-05-15 02:02:39.023121 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[ 0.496512,  0.433351, -0.139437, -0.222826],
        [ 0.496512,  0.433351, -0.139437, -0.222826],
        [ 0.496512,  0.433351, -0.139437, -0.222826],...
 y: array([[[ 0.496512,  0.433351, -0.139437, -0.222826],
        [ 0.496512,  0.433351, -0.139437, -0.222826],
        [ 0.496512,  0.433351, -0.139437, -0.222826],...
2025-05-15 02:02:39.201602 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[ 0.192352, -0.117263,  0.092937,  0.492762],
        [ 0.106772, -0.046244,  0.144119,  0.436996],
        [ 0.021193,  0.024776,  0.195302,  0.381231],...
 y: array([[[ 0.192352, -0.117263,  0.092937,  0.492762],
        [ 0.11296 , -0.051379,  0.140418,  0.441029],
        [ 0.033569,  0.014505,  0.1879  ,  0.389295],...
2025-05-15 02:02:39.376715 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[-0.446315, -0.48041 , -0.278072,  0.368057],
        [-0.442318, -0.382745, -0.224789,  0.351291],
        [-0.43832 , -0.285079, -0.171506,  0.334525],...
 y: array([[[-0.446315, -0.48041 , -0.278072,  0.368057],
        [-0.446315, -0.48041 , -0.278072,  0.368057],
        [-0.446315, -0.48041 , -0.278072,  0.368057],...
2025-05-15 02:02:39.551654 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 67, 4), (2, 66, 4) mismatch)
 x: array([[[-2.210827e-01, -2.515729e-01, -2.879305e-01,  8.007227e-02],
        [-1.313924e-01, -2.401527e-01, -2.424136e-01,  6.642009e-02],
        [-4.170209e-02, -2.287325e-01, -1.968968e-01,  5.276790e-02],...
 y: array([[[-0.221083, -0.251573, -0.28793 ,  0.080072],
        [-0.130013, -0.239977, -0.241713,  0.06621 ],
        [-0.038942, -0.228381, -0.195496,  0.052348],...
2025-05-15 02:02:39.728801 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[ 0.319852, -0.107343, -0.284519, -0.486939],
        [ 0.319852, -0.107343, -0.284519, -0.486939],
        [ 0.319852, -0.107343, -0.284519, -0.486939],...
 y: array([[[ 0.319852, -0.107343, -0.284519, -0.486939],
        [ 0.319852, -0.107343, -0.284519, -0.486939],
        [ 0.319852, -0.107343, -0.284519, -0.486939],...
2025-05-15 02:02:39.886898 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[-0.480978,  0.379482, -0.350653, -0.344033],
        [-0.392484,  0.337666, -0.326926, -0.250095],
        [-0.303991,  0.295851, -0.303199, -0.156157],...
 y: array([[[-0.480978,  0.379482, -0.350653, -0.344033],
        [-0.39892 ,  0.340707, -0.328652, -0.256927],
        [-0.316863,  0.301933, -0.306651, -0.16982 ],...
2025-05-15 02:02:40.070499 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[-0.361048, -0.428563, -0.159433,  0.073211],
        [-0.364673, -0.349424, -0.082853,  0.091873],
        [-0.368298, -0.270286, -0.006273,  0.110535],...
 y: array([[[-0.361048, -0.428563, -0.159433,  0.073211],
        [-0.361048, -0.428563, -0.159433,  0.073211],
        [-0.361048, -0.428563, -0.159433,  0.073211],...
2025-05-15 02:02:40.248736 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 68, 4), (2, 67, 4) mismatch)
 x: array([[[ 0.299848,  0.118546,  0.020467,  0.074318],
        [ 0.238977,  0.076441, -0.017674,  0.038077],
        [ 0.178106,  0.034337, -0.055814,  0.001836],...
 y: array([[[ 0.299848,  0.118546,  0.020467,  0.074318],
        [ 0.238055,  0.075803, -0.018252,  0.037528],
        [ 0.176262,  0.033061, -0.05697 ,  0.000738],...
2025-05-15 02:02:40.402180 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.95704365
Max relative difference: 598.62065924
 x: array([[[ 0.440028, -0.245688,  0.11462 ,  0.595456],
        [ 1.708221,  0.450628, -0.406933, -0.288186],
        [-0.003658,  0.232906, -0.603243,  0.599924],...
 y: array([[[ 4.400282e-01, -2.456878e-01,  1.146203e-01,  5.954562e-01],
        [ 1.708221e+00,  4.506284e-01, -4.069325e-01, -2.881857e-01],
        [-3.657587e-03,  2.329059e-01, -6.032432e-01,  5.999239e-01],...
2025-05-15 02:02:40.575783 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 445 / 544 (81.8%)
Max absolute difference: 0.61062792
Max relative difference: 157.20049965
 x: array([[[ 0.085636, -0.056565,  0.063859, -0.097272],
        [ 0.133652, -0.029733,  0.076721, -0.124771],
        [ 0.181669, -0.0029  ,  0.089582, -0.15227 ],...
 y: array([[[ 0.085636, -0.056565,  0.063859, -0.097272],
        [ 0.129496, -0.032055,  0.075607, -0.122391],
        [ 0.173356, -0.007546,  0.087355, -0.147509],...
2025-05-15 02:02:40.752773 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 415 / 544 (76.3%)
Max absolute difference: 0.28577956
Max relative difference: 218.20909894
 x: array([[[ 3.397312e-01,  3.732737e-01,  2.799139e-01, -3.419925e-01],
        [ 3.189313e-01,  3.284054e-01,  2.655226e-01, -3.303727e-01],
        [ 2.981314e-01,  2.835370e-01,  2.511313e-01, -3.187528e-01],...
 y: array([[[ 0.339731,  0.373274,  0.279914, -0.341993],
        [ 0.339731,  0.373274,  0.279914, -0.341993],
        [ 0.339731,  0.373274,  0.279914, -0.341993],...
2025-05-15 02:02:40.912601 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.65895952
Max relative difference: 71.09595877
 x: array([[[-0.20087 ,  0.929569,  0.028755, -0.554449],
        [-0.283987,  0.095502,  0.248071,  0.616461],
        [-1.050137,  0.791017, -0.465151,  2.096307],...
 y: array([[[-0.20087 ,  0.92957 ,  0.028755, -0.554449],
        [-0.283987,  0.095502,  0.248071,  0.616462],
        [-1.050137,  0.791017, -0.465151,  2.096307],...
2025-05-15 02:02:41.085973 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[-0.422886, -0.430383,  0.425122,  0.270255],
        [-0.422886, -0.430383,  0.425122,  0.270255],
        [-0.422886, -0.430383,  0.425122,  0.270255],...
 y: array([[[-0.422886, -0.430383,  0.425122,  0.270255],
        [-0.422886, -0.430383,  0.425122,  0.270255],
        [-0.422886, -0.430383,  0.425122,  0.270255],...
2025-05-15 02:02:41.259151 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[ 0.166797, -0.000958,  0.249209,  0.334866],
        [ 0.176883,  0.008757,  0.283688,  0.298006],
        [ 0.18697 ,  0.018472,  0.318167,  0.261146],...
 y: array([[[ 0.166797, -0.000958,  0.249209,  0.334866],
        [ 0.176146,  0.008046,  0.281166,  0.300702],
        [ 0.185494,  0.017051,  0.313124,  0.266537],...
2025-05-15 02:02:41.416687 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[-0.21987 , -0.067135,  0.392938, -0.376191],
        [-0.240545, -0.060597,  0.300069, -0.381261],
        [-0.261221, -0.054058,  0.207199, -0.386331],...
 y: array([[[-0.21987 , -0.067135,  0.392938, -0.376191],
        [-0.21987 , -0.067135,  0.392938, -0.376191],
        [-0.21987 , -0.067135,  0.392938, -0.376191],...
2025-05-15 02:02:41.592926 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 69, 4), (2, 68, 4) mismatch)
 x: array([[[-0.202838, -0.399137, -0.275915, -0.469854],
        [-0.181741, -0.289821, -0.286546, -0.426837],
        [-0.160644, -0.180506, -0.297177, -0.383819],...
 y: array([[[-0.202838, -0.399137, -0.275915, -0.469854],
        [-0.181426, -0.28819 , -0.286705, -0.426195],
        [-0.160014, -0.177243, -0.297494, -0.382535],...
2025-05-15 02:02:41.770691 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[-3.061193e-01, -1.493654e-01, -3.290871e-01,  5.611265e-02],
        [-3.061193e-01, -1.493654e-01, -3.290871e-01,  5.611265e-02],
        [-3.061193e-01, -1.493654e-01, -3.290871e-01,  5.611265e-02],...
 y: array([[[-3.061193e-01, -1.493654e-01, -3.290871e-01,  5.611265e-02],
        [-3.061193e-01, -1.493654e-01, -3.290871e-01,  5.611265e-02],
        [-3.061193e-01, -1.493654e-01, -3.290871e-01,  5.611265e-02],...
2025-05-15 02:02:41.948955 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[-4.638185e-01, -4.171186e-01,  4.719672e-01,  1.845327e-01],
        [-4.426969e-01, -3.195434e-01,  4.283662e-01,  1.884019e-01],
        [-4.215753e-01, -2.219682e-01,  3.847651e-01,  1.922711e-01],...
 y: array([[[-0.463819, -0.417119,  0.471967,  0.184533],
        [-0.44425 , -0.326718,  0.431572,  0.188117],
        [-0.424681, -0.236318,  0.391177,  0.191702],...
2025-05-15 02:02:42.127478 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[-4.789520e-01,  2.983024e-01, -4.383295e-01,  4.276505e-01],
        [-3.932956e-01,  3.077899e-01, -3.303055e-01,  3.610552e-01],
        [-3.076392e-01,  3.172774e-01, -2.222814e-01,  2.944599e-01],...
 y: array([[[-0.478952,  0.298302, -0.438329,  0.42765 ],
        [-0.478952,  0.298302, -0.438329,  0.42765 ],
        [-0.478952,  0.298302, -0.438329,  0.42765 ],...
2025-05-15 02:02:42.308432 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 70, 4), (2, 69, 4) mismatch)
 x: array([[[-3.330522e-01, -6.281790e-02, -2.220519e-01, -1.678296e-01],
        [-3.465895e-01, -9.837976e-02, -1.725434e-01, -1.379755e-01],
        [-3.601267e-01, -1.339416e-01, -1.230348e-01, -1.081214e-01],...
 y: array([[[-3.330522e-01, -6.281790e-02, -2.220519e-01, -1.678296e-01],
        [-3.467885e-01, -9.890273e-02, -1.718153e-01, -1.375365e-01],
        [-3.605249e-01, -1.349876e-01, -1.215787e-01, -1.072433e-01],...
2025-05-15 02:02:42.490542 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.43098832
Max relative difference: 33.66706959
 x: array([[[ 0.215856,  0.945598,  1.213311,  0.328844],
        [ 0.257615, -0.271741,  0.808695, -0.391642],
        [ 0.054957,  0.283894,  1.069333, -0.841832],...
 y: array([[[ 0.215856,  0.945598,  1.213311,  0.328844],
        [ 0.257615, -0.271741,  0.808695, -0.391643],
        [ 0.054957,  0.283894,  1.069333, -0.841832],...
2025-05-15 02:02:42.665666 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 485 / 560 (86.6%)
Max absolute difference: 0.41897598
Max relative difference: 581.81057904
 x: array([[[-4.576048e-01, -4.119994e-01,  4.089203e-01, -2.965432e-01],
        [-3.758768e-01, -4.192168e-01,  3.823299e-01, -2.491478e-01],
        [-2.941488e-01, -4.264341e-01,  3.557394e-01, -2.017524e-01],...
 y: array([[[-4.576048e-01, -4.119994e-01,  4.089203e-01, -2.965432e-01],
        [-3.829836e-01, -4.185892e-01,  3.846421e-01, -2.532692e-01],
        [-3.083624e-01, -4.251789e-01,  3.603638e-01, -2.099951e-01],...
2025-05-15 02:02:42.843982 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 415 / 560 (74.1%)
Max absolute difference: 0.33414635
Max relative difference: 752.81738221
 x: array([[[ 3.075332e-01,  5.133845e-02, -5.886360e-02, -1.031784e-01],
        [ 3.201146e-01,  8.996481e-02, -6.085597e-02, -2.952956e-02],
        [ 3.326960e-01,  1.285912e-01, -6.284834e-02,  4.411926e-02],...
 y: array([[[ 3.075332e-01,  5.133845e-02, -5.886360e-02, -1.031784e-01],
        [ 3.075332e-01,  5.133845e-02, -5.886360e-02, -1.031784e-01],
        [ 3.075332e-01,  5.133845e-02, -5.886360e-02, -1.031784e-01],...
2025-05-15 02:02:43.013336 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.69595999
Max relative difference: 71.49195239
 x: array([[[-0.537716, -0.176185, -0.080682, -0.716405],
        [-0.534921, -0.999068, -0.853882, -0.65678 ],
        [ 1.087529, -0.483208, -1.0357  , -0.598954],...
 y: array([[[-0.537716, -0.176185, -0.080682, -0.716405],
        [-0.534921, -0.999068, -0.853882, -0.65678 ],
        [ 1.087529, -0.483208, -1.0357  , -0.598954],...
2025-05-15 02:02:43.199629 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[-0.211762, -0.40336 ,  0.147092,  0.039838],
        [-0.211762, -0.40336 ,  0.147092,  0.039838],
        [-0.211762, -0.40336 ,  0.147092,  0.039838],...
 y: array([[[-0.211762, -0.40336 ,  0.147092,  0.039838],
        [-0.211762, -0.40336 ,  0.147092,  0.039838],
        [-0.211762, -0.40336 ,  0.147092,  0.039838],...
2025-05-15 02:02:43.357375 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[ 0.220421, -0.041393, -0.412633,  0.412391],
        [ 0.148357, -0.061588, -0.286448,  0.390398],
        [ 0.076292, -0.081784, -0.160263,  0.368405],...
 y: array([[[ 0.220421, -0.041393, -0.412633,  0.412391],
        [ 0.153683, -0.060096, -0.295775,  0.392024],
        [ 0.086945, -0.078798, -0.178917,  0.371656],...
2025-05-15 02:02:43.506581 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[ 0.473453, -0.039248,  0.349792,  0.365819],
        [ 0.43348 ,  0.011802,  0.244281,  0.343883],
        [ 0.393506,  0.062853,  0.138769,  0.321948],...
 y: array([[[ 0.473453, -0.039248,  0.349792,  0.365819],
        [ 0.473453, -0.039248,  0.349792,  0.365819],
        [ 0.473453, -0.039248,  0.349792,  0.365819],...
2025-05-15 02:02:43.686542 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 71, 4), (2, 70, 4) mismatch)
 x: array([[[-4.721027e-01, -4.900545e-01, -3.371537e-01,  3.963569e-01],
        [-4.554932e-01, -3.942400e-01, -3.494905e-01,  2.848864e-01],
        [-4.388838e-01, -2.984256e-01, -3.618273e-01,  1.734158e-01],...
 y: array([[[-0.472103, -0.490054, -0.337154,  0.396357],
        [-0.455253, -0.392851, -0.349669,  0.283271],
        [-0.438402, -0.295648, -0.362185,  0.170185],...
2025-05-15 02:02:43.860898 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[ 0.218208, -0.236575, -0.256513, -0.265419],
        [ 0.218208, -0.236575, -0.256513, -0.265419],
        [ 0.218208, -0.236575, -0.256513, -0.265419],...
 y: array([[[ 0.218208, -0.236575, -0.256513, -0.265419],
        [ 0.218208, -0.236575, -0.256513, -0.265419],
        [ 0.218208, -0.236575, -0.256513, -0.265419],...
2025-05-15 02:02:44.036027 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[ 2.612536e-01, -3.461025e-01,  3.660317e-01, -3.435780e-01],
        [ 1.807755e-01, -3.437709e-01,  3.614878e-01, -3.569272e-01],
        [ 1.002973e-01, -3.414394e-01,  3.569439e-01, -3.702763e-01],...
 y: array([[[ 0.261254, -0.346102,  0.366032, -0.343578],
        [ 0.186754, -0.343944,  0.361825, -0.355936],
        [ 0.112254, -0.341786,  0.357619, -0.368293],...
2025-05-15 02:02:44.201557 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[-0.410436,  0.216197,  0.483444, -0.16391 ],
        [-0.301406,  0.168681,  0.438363, -0.103272],
        [-0.192376,  0.121164,  0.393281, -0.042635],...
 y: array([[[-0.410436,  0.216197,  0.483444, -0.16391 ],
        [-0.410436,  0.216197,  0.483444, -0.16391 ],
        [-0.410436,  0.216197,  0.483444, -0.16391 ],...
2025-05-15 02:02:44.354658 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 72, 4), (2, 71, 4) mismatch)
 x: array([[[ 3.438599e-01, -2.484578e-01, -8.825243e-02, -4.410853e-01],
        [ 3.400264e-01, -2.180217e-01, -6.823399e-02, -3.493622e-01],
        [ 3.361928e-01, -1.875856e-01, -4.821554e-02, -2.576391e-01],...
 y: array([[[ 3.438599e-01, -2.484578e-01, -8.825243e-02, -4.410853e-01],
        [ 3.399716e-01, -2.175869e-01, -6.794801e-02, -3.480519e-01],
        [ 3.360833e-01, -1.867160e-01, -4.764358e-02, -2.550184e-01],...
2025-05-15 02:02:44.537837 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.83519111
Max relative difference: 3283.50618884
 x: array([[[ 1.421479, -1.088583,  0.042156, -1.164933],
        [ 0.210162,  0.805899, -0.217669, -0.256924],
        [ 0.567025,  1.165717, -1.83119 ,  0.371217],...
 y: array([[[ 1.421479e+00, -1.088583e+00,  4.215564e-02, -1.164933e+00],
        [ 2.101622e-01,  8.058986e-01, -2.176691e-01, -2.569244e-01],
        [ 5.670253e-01,  1.165717e+00, -1.831190e+00,  3.712175e-01],...
2025-05-15 02:02:44.708733 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 469 / 576 (81.4%)
Max absolute difference: 0.68307337
Max relative difference: 74.27114431
 x: array([[[-0.45145 ,  0.451116, -0.045987, -0.42685 ],
        [-0.445149,  0.388345, -0.060652, -0.4263  ],
        [-0.438849,  0.325574, -0.075317, -0.42575 ],...
 y: array([[[-0.45145 ,  0.451116, -0.045987, -0.42685 ],
        [-0.4457  ,  0.393826, -0.059371, -0.426348],
        [-0.439949,  0.336537, -0.072756, -0.425846],...
2025-05-15 02:02:44.891968 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 436 / 576 (75.7%)
Max absolute difference: 0.27724238
Max relative difference: 132.55928946
 x: array([[[-4.437194e-01,  4.158171e-01, -2.018660e-02, -1.677521e-01],
        [-3.631403e-01,  3.238288e-01,  1.498273e-02, -1.138854e-01],
        [-2.825612e-01,  2.318406e-01,  5.015206e-02, -6.001880e-02],...
 y: array([[[-0.443719,  0.415817, -0.020187, -0.167752],
        [-0.443719,  0.415817, -0.020187, -0.167752],
        [-0.443719,  0.415817, -0.020187, -0.167752],...
2025-05-15 02:02:45.058318 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.15375796
Max relative difference: 162.05348083
 x: array([[[ 0.701337, -1.118816, -0.395246, -0.017647],
        [ 0.923401, -0.449858, -0.792246,  0.079002],
        [-1.106974, -0.07564 ,  0.671947,  0.509501],...
 y: array([[[ 0.701337, -1.118816, -0.395246, -0.017647],
        [ 0.923401, -0.449858, -0.792246,  0.079002],
        [-1.106973, -0.075641,  0.671947,  0.509501],...
2025-05-15 02:02:45.200606 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[-0.255962,  0.085684,  0.436205,  0.033064],
        [-0.255962,  0.085684,  0.436205,  0.033064],
        [-0.255962,  0.085684,  0.436205,  0.033064],...
 y: array([[[-0.255962,  0.085684,  0.436205,  0.033064],
        [-0.255962,  0.085684,  0.436205,  0.033064],
        [-0.255962,  0.085684,  0.436205,  0.033064],...
2025-05-15 02:02:45.352262 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[ 0.334681, -0.152165, -0.42906 , -0.490383],
        [ 0.225374, -0.194885, -0.402829, -0.377563],
        [ 0.116067, -0.237605, -0.376598, -0.264743],...
 y: array([[[ 3.346810e-01, -1.521649e-01, -4.290605e-01, -4.903834e-01],
        [ 2.335337e-01, -1.916959e-01, -4.047873e-01, -3.859849e-01],
        [ 1.323864e-01, -2.312269e-01, -3.805141e-01, -2.815863e-01],...
2025-05-15 02:02:45.492627 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[ 1.264370e-01, -4.827298e-02,  1.267125e-01, -3.919716e-01],
        [ 1.106907e-01, -8.573425e-02,  1.413831e-01, -2.819797e-01],
        [ 9.494430e-02, -1.231955e-01,  1.560536e-01, -1.719877e-01],...
 y: array([[[ 0.126437, -0.048273,  0.126713, -0.391972],
        [ 0.126437, -0.048273,  0.126713, -0.391972],
        [ 0.126437, -0.048273,  0.126713, -0.391972],...
2025-05-15 02:02:45.639949 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 73, 4), (2, 72, 4) mismatch)
 x: array([[[-1.965946e-01, -4.811884e-02,  2.191003e-01,  4.482374e-01],
        [-2.114144e-01, -4.599034e-02,  1.867163e-01,  3.580146e-01],
        [-2.262342e-01, -4.386183e-02,  1.543323e-01,  2.677919e-01],...
 y: array([[[-1.965946e-01, -4.811884e-02,  2.191003e-01,  4.482374e-01],
        [-2.116231e-01, -4.596036e-02,  1.862602e-01,  3.567439e-01],
        [-2.266517e-01, -4.380187e-02,  1.534201e-01,  2.652504e-01],...
2025-05-15 02:02:45.790582 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[ 3.247959e-01, -3.779888e-01,  1.574330e-01, -5.160253e-02],
        [ 3.247959e-01, -3.779888e-01,  1.574330e-01, -5.160253e-02],
        [ 3.247959e-01, -3.779888e-01,  1.574330e-01, -5.160253e-02],...
 y: array([[[ 3.247959e-01, -3.779888e-01,  1.574330e-01, -5.160253e-02],
        [ 3.247959e-01, -3.779888e-01,  1.574330e-01, -5.160253e-02],
        [ 3.247959e-01, -3.779888e-01,  1.574330e-01, -5.160253e-02],...
2025-05-15 02:02:45.941843 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[ 1.838469e-01, -1.343526e-01,  3.099854e-01, -2.983731e-01],
        [ 1.382838e-01, -9.155114e-02,  2.958993e-01, -3.231754e-01],
        [ 9.272075e-02, -4.874966e-02,  2.818133e-01, -3.479778e-01],...
 y: array([[[ 1.838469e-01, -1.343526e-01,  3.099854e-01, -2.983731e-01],
        [ 1.417011e-01, -9.476125e-02,  2.969558e-01, -3.213152e-01],
        [ 9.955521e-02, -5.516988e-02,  2.839262e-01, -3.442574e-01],...
2025-05-15 02:02:46.137226 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[-0.491583, -0.439232, -0.268794, -0.346546],
        [-0.384967, -0.410521, -0.272703, -0.291907],
        [-0.278351, -0.38181 , -0.276611, -0.237267],...
 y: array([[[-0.491583, -0.439232, -0.268794, -0.346546],
        [-0.491583, -0.439232, -0.268794, -0.346546],
        [-0.491583, -0.439232, -0.268794, -0.346546],...
2025-05-15 02:02:46.298783 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 74, 4), (2, 73, 4) mismatch)
 x: array([[[ 4.726726e-01,  9.720538e-02,  3.003124e-01, -1.559979e-01],
        [ 4.288645e-01,  1.078673e-01,  2.601821e-01, -1.036616e-01],
        [ 3.850563e-01,  1.185292e-01,  2.200519e-01, -5.132528e-02],...
 y: array([[[ 4.726726e-01,  9.720538e-02,  3.003124e-01, -1.559979e-01],
        [ 4.282560e-01,  1.080154e-01,  2.596248e-01, -1.029347e-01],
        [ 3.838394e-01,  1.188254e-01,  2.189371e-01, -4.987149e-02],...
2025-05-15 02:02:46.447466 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 2.23684558
Max relative difference: 37.05921076
 x: array([[[ 0.760847, -0.817069,  0.471257,  0.638054],
        [ 1.132802,  0.495091,  0.298277, -0.158859],
        [ 0.077273,  0.64132 , -1.036816, -0.704223],...
 y: array([[[ 0.760847, -0.817069,  0.471257,  0.638054],
        [ 1.132802,  0.495091,  0.298277, -0.158859],
        [ 0.077273,  0.64132 , -1.036816, -0.704223],...
2025-05-15 02:02:46.590775 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 487 / 592 (82.3%)
Max absolute difference: 0.51930504
Max relative difference: 1081.31993629
 x: array([[[-0.390862,  0.254731,  0.303041,  0.022307],
        [-0.39178 ,  0.274589,  0.27143 ,  0.008598],
        [-0.392698,  0.294446,  0.239819, -0.005112],...
 y: array([[[-3.908618e-01,  2.547314e-01,  3.030406e-01,  2.230741e-02],
        [-3.916995e-01,  2.728480e-01,  2.742011e-01,  9.799662e-03],
        [-3.925372e-01,  2.909646e-01,  2.453616e-01, -2.708089e-03],...
2025-05-15 02:02:46.769682 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 449 / 592 (75.8%)
Max absolute difference: 0.2952218
Max relative difference: 133.0932358
 x: array([[[-4.149272e-01, -1.042459e-01, -2.469774e-01,  2.616882e-01],
        [-4.047692e-01, -9.267980e-02, -2.126240e-01,  2.624577e-01],
        [-3.946111e-01, -8.111372e-02, -1.782707e-01,  2.632272e-01],...
 y: array([[[-4.149272e-01, -1.042459e-01, -2.469774e-01,  2.616882e-01],
        [-4.149272e-01, -1.042459e-01, -2.469774e-01,  2.616882e-01],
        [-4.149272e-01, -1.042459e-01, -2.469774e-01,  2.616882e-01],...
2025-05-15 02:02:46.928623 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.99960492
Max relative difference: 45.56135116
 x: array([[[-0.487272,  0.834375, -0.125963,  0.365526],
        [-1.418926, -0.267924,  0.004484, -0.37215 ],
        [-1.360408, -0.016335, -0.333725,  0.822871],...
 y: array([[[-0.487272,  0.834375, -0.125963,  0.365526],
        [-1.418926, -0.267924,  0.004484, -0.37215 ],
        [-1.360408, -0.016335, -0.333725,  0.822871],...
2025-05-15 02:02:47.101817 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[-4.966641e-01,  4.948287e-01,  1.791528e-01, -4.498340e-01],
        [-4.966641e-01,  4.948287e-01,  1.791528e-01, -4.498340e-01],
        [-4.966641e-01,  4.948287e-01,  1.791528e-01, -4.498340e-01],...
 y: array([[[-4.966641e-01,  4.948287e-01,  1.791528e-01, -4.498340e-01],
        [-4.966641e-01,  4.948287e-01,  1.791528e-01, -4.498340e-01],
        [-4.966641e-01,  4.948287e-01,  1.791528e-01, -4.498340e-01],...
2025-05-15 02:02:47.262444 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[-0.439603, -0.003148, -0.288691,  0.267674],
        [-0.388535, -0.043103, -0.211928,  0.26095 ],
        [-0.337468, -0.083057, -0.135164,  0.254227],...
 y: array([[[-0.439603, -0.003148, -0.288691,  0.267674],
        [-0.392383, -0.040092, -0.217711,  0.261457],
        [-0.345163, -0.077036, -0.146731,  0.25524 ],...
2025-05-15 02:02:47.411111 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[ 6.579030e-02, -4.728042e-01, -1.505566e-02,  2.793881e-01],
        [ 1.084480e-02, -4.512135e-01, -4.550857e-02,  2.365251e-01],
        [-4.410070e-02, -4.296228e-01, -7.596148e-02,  1.936621e-01],...
 y: array([[[ 6.579030e-02, -4.728042e-01, -1.505566e-02,  2.793881e-01],
        [ 6.579030e-02, -4.728042e-01, -1.505566e-02,  2.793881e-01],
        [ 6.579030e-02, -4.728042e-01, -1.505566e-02,  2.793881e-01],...
2025-05-15 02:02:47.593131 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 75, 4), (2, 74, 4) mismatch)
 x: array([[[-0.398577, -0.1087  , -0.178223, -0.10701 ],
        [-0.322939, -0.101851, -0.192009, -0.150566],
        [-0.2473  , -0.095003, -0.205794, -0.194123],...
 y: array([[[-3.985774e-01, -1.086997e-01, -1.782232e-01, -1.070095e-01],
        [-3.219025e-01, -1.017576e-01, -1.921976e-01, -1.511629e-01],
        [-2.452276e-01, -9.481549e-02, -2.061719e-01, -1.953164e-01],...
2025-05-15 02:02:47.780273 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[-0.262272, -0.155195,  0.441097, -0.112986],
        [-0.262272, -0.155195,  0.441097, -0.112986],
        [-0.262272, -0.155195,  0.441097, -0.112986],...
 y: array([[[-0.262272, -0.155195,  0.441097, -0.112986],
        [-0.262272, -0.155195,  0.441097, -0.112986],
        [-0.262272, -0.155195,  0.441097, -0.112986],...
2025-05-15 02:02:47.933688 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 0.129334, -0.221881,  0.409674,  0.397982],
        [ 0.170451, -0.149492,  0.347825,  0.350891],
        [ 0.211569, -0.077103,  0.285976,  0.303799],...
 y: array([[[ 1.293341e-01, -2.218813e-01,  4.096738e-01,  3.979822e-01],
        [ 1.673398e-01, -1.549703e-01,  3.525053e-01,  3.544544e-01],
        [ 2.053455e-01, -8.805934e-02,  2.953369e-01,  3.109265e-01],...
2025-05-15 02:02:48.117478 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 0.21006 ,  0.271372, -0.365311,  0.316801],
        [ 0.168179,  0.297819, -0.265134,  0.318208],
        [ 0.126297,  0.324267, -0.164957,  0.319615],...
 y: array([[[ 0.21006 ,  0.271372, -0.365311,  0.316801],
        [ 0.21006 ,  0.271372, -0.365311,  0.316801],
        [ 0.21006 ,  0.271372, -0.365311,  0.316801],...
2025-05-15 02:02:48.280075 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 76, 4), (2, 75, 4) mismatch)
 x: array([[[ 1.643748e-01,  2.332813e-01, -1.873758e-01, -2.577898e-01],
        [ 1.827135e-01,  1.801866e-01, -1.738237e-01, -2.264451e-01],
        [ 2.010521e-01,  1.270920e-01, -1.602716e-01, -1.951005e-01],...
 y: array([[[ 0.164375,  0.233281, -0.187376, -0.25779 ],
        [ 0.182961,  0.179469, -0.173641, -0.226022],
        [ 0.201548,  0.125657, -0.159905, -0.194253],...
2025-05-15 02:02:48.466052 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.85697376
Max relative difference: 146.13694524
 x: array([[[-0.988042,  1.185974, -0.477615, -0.910238],
        [ 0.743175,  0.405631, -0.92586 ,  0.250221],
        [ 0.224978, -0.849416,  0.113215, -0.443983],...
 y: array([[[-0.988042,  1.185974, -0.477615, -0.910238],
        [ 0.743175,  0.405631, -0.92586 ,  0.250221],
        [ 0.224978, -0.849416,  0.113215, -0.443983],...
2025-05-15 02:02:48.638905 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 508 / 608 (83.6%)
Max absolute difference: 0.57315306
Max relative difference: 691.70555661
 x: array([[[ 0.129656,  0.16068 , -0.356099,  0.095454],
        [ 0.084353,  0.160927, -0.243869,  0.093897],
        [ 0.039051,  0.161173, -0.131638,  0.09234 ],...
 y: array([[[ 0.129656,  0.16068 , -0.356099,  0.095454],
        [ 0.08834 ,  0.160905, -0.253745,  0.094034],
        [ 0.047024,  0.16113 , -0.151391,  0.092614],...
2025-05-15 02:02:48.820296 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 486 / 608 (79.9%)
Max absolute difference: 0.29335104
Max relative difference: 453.1674932
 x: array([[[ 0.355101, -0.381759,  0.165012, -0.197081],
        [ 0.270688, -0.39049 ,  0.163236, -0.179443],
        [ 0.186274, -0.399221,  0.16146 , -0.161805],...
 y: array([[[ 3.551008e-01, -3.817585e-01,  1.650117e-01, -1.970809e-01],
        [ 3.551008e-01, -3.817585e-01,  1.650117e-01, -1.970809e-01],
        [ 3.551008e-01, -3.817585e-01,  1.650117e-01, -1.970809e-01],...
2025-05-15 02:02:48.997465 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.4962511
Max relative difference: 76.22999327
 x: array([[[ 1.009759e-01, -5.054048e-02,  5.504334e-01, -6.536852e-01],
        [ 3.635913e-01,  1.001946e-01, -7.348297e-01, -6.331748e-01],
        [-1.146646e+00,  5.555257e-01, -7.298287e-01,  2.000036e-01],...
 y: array([[[ 1.009759e-01, -5.054048e-02,  5.504334e-01, -6.536852e-01],
        [ 3.635913e-01,  1.001946e-01, -7.348296e-01, -6.331747e-01],
        [-1.146646e+00,  5.555256e-01, -7.298288e-01,  2.000034e-01],...
2025-05-15 02:02:49.173443 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 5.364913e-02, -4.759040e-01, -1.893385e-01, -4.449030e-01],
        [ 5.364913e-02, -4.759040e-01, -1.893385e-01, -4.449030e-01],
        [ 5.364913e-02, -4.759040e-01, -1.893385e-01, -4.449030e-01],...
 y: array([[[ 5.364913e-02, -4.759040e-01, -1.893385e-01, -4.449030e-01],
        [ 5.364913e-02, -4.759040e-01, -1.893385e-01, -4.449030e-01],
        [ 5.364913e-02, -4.759040e-01, -1.893385e-01, -4.449030e-01],...
2025-05-15 02:02:49.337939 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 0.253193,  0.253819, -0.41019 , -0.178293],
        [ 0.167385,  0.27312 , -0.379666, -0.101245],
        [ 0.081578,  0.292421, -0.349141, -0.024197],...
 y: array([[[ 0.253193,  0.253819, -0.41019 , -0.178293],
        [ 0.173907,  0.271653, -0.381986, -0.1071  ],
        [ 0.094621,  0.289487, -0.353781, -0.035908],...
2025-05-15 02:02:49.522865 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 0.366059, -0.1347  ,  0.268334,  0.302475],
        [ 0.318849, -0.06398 ,  0.238963,  0.247105],
        [ 0.271639,  0.006741,  0.209593,  0.191736],...
 y: array([[[ 0.366059, -0.1347  ,  0.268334,  0.302475],
        [ 0.366059, -0.1347  ,  0.268334,  0.302475],
        [ 0.366059, -0.1347  ,  0.268334,  0.302475],...
2025-05-15 02:02:49.682780 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 77, 4), (2, 76, 4) mismatch)
 x: array([[[ 2.147276e-01,  5.611801e-02,  2.079388e-01,  2.628122e-01],
        [ 2.298200e-01,  7.905666e-02,  2.132816e-01,  2.702974e-01],
        [ 2.449124e-01,  1.019953e-01,  2.186244e-01,  2.777825e-01],...
 y: array([[[ 2.147276e-01,  5.611801e-02,  2.079388e-01,  2.628122e-01],
        [ 2.300213e-01,  7.936251e-02,  2.133529e-01,  2.703972e-01],
        [ 2.453149e-01,  1.026070e-01,  2.187669e-01,  2.779821e-01],...
2025-05-15 02:02:49.870534 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[ 1.712482e-01,  4.180969e-01, -1.424729e-01,  4.945760e-02],
        [ 1.712482e-01,  4.180969e-01, -1.424729e-01,  4.945760e-02],
        [ 1.712482e-01,  4.180969e-01, -1.424729e-01,  4.945760e-02],...
 y: array([[[ 1.712482e-01,  4.180969e-01, -1.424729e-01,  4.945760e-02],
        [ 1.712482e-01,  4.180969e-01, -1.424729e-01,  4.945760e-02],
        [ 1.712482e-01,  4.180969e-01, -1.424729e-01,  4.945760e-02],...
2025-05-15 02:02:50.059429 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[-0.39353 ,  0.211944,  0.389209, -0.433972],
        [-0.28742 ,  0.171369,  0.278304, -0.435237],
        [-0.181309,  0.130795,  0.1674  , -0.436501],...
 y: array([[[-0.39353 ,  0.211944,  0.389209, -0.433972],
        [-0.295517,  0.174466,  0.286768, -0.43514 ],
        [-0.197505,  0.136988,  0.184327, -0.436308],...
2025-05-15 02:02:50.258722 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[-3.482251e-01, -3.826814e-02, -4.357077e-02,  3.071695e-01],
        [-3.601464e-01, -8.350169e-03, -5.352410e-02,  3.224331e-01],
        [-3.720677e-01,  2.156780e-02, -6.347744e-02,  3.376968e-01],...
 y: array([[[-0.348225, -0.038268, -0.043571,  0.30717 ],
        [-0.348225, -0.038268, -0.043571,  0.30717 ],
        [-0.348225, -0.038268, -0.043571,  0.30717 ],...
2025-05-15 02:02:50.416168 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 78, 4), (2, 77, 4) mismatch)
 x: array([[[-0.022208,  0.372365, -0.433287,  0.251146],
        [-0.076176,  0.384797, -0.402595,  0.186376],
        [-0.130144,  0.397229, -0.371902,  0.121605],...
 y: array([[[-0.022208,  0.372365, -0.433287,  0.251146],
        [-0.076886,  0.384961, -0.402191,  0.185523],
        [-0.131565,  0.397556, -0.371094,  0.1199  ],...
2025-05-15 02:02:50.566292 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 2.39870188
Max relative difference: 35.82018281
 x: array([[[-0.574459, -0.210177, -0.207994, -0.234479],
        [-0.81944 ,  0.474417,  0.594133, -1.206549],
        [-0.957502,  0.356573,  0.105982, -0.44847 ],...
 y: array([[[-0.574459, -0.210177, -0.207994, -0.234478],
        [-0.81944 ,  0.474417,  0.594133, -1.206549],
        [-0.957502,  0.356573,  0.105983, -0.44847 ],...
2025-05-15 02:02:50.742482 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 515 / 624 (82.5%)
Max absolute difference: 0.57930207
Max relative difference: 82.8231082
 x: array([[[-0.010235, -0.030626,  0.061431,  0.04418 ],
        [ 0.044111, -0.02333 ,  0.006975, -0.008581],
        [ 0.098457, -0.016033, -0.04748 , -0.061343],...
 y: array([[[-0.010235, -0.030626,  0.061431,  0.04418 ],
        [ 0.039312, -0.023974,  0.011784, -0.003922],
        [ 0.088858, -0.017322, -0.037862, -0.052024],...
2025-05-15 02:02:50.900804 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 470 / 624 (75.3%)
Max absolute difference: 0.28878793
Max relative difference: 121.02402671
 x: array([[[-0.229946,  0.24894 ,  0.113334,  0.166198],
        [-0.243369,  0.248273,  0.053602,  0.167018],
        [-0.256793,  0.247605, -0.00613 ,  0.167837],...
 y: array([[[-2.299457e-01,  2.489401e-01,  1.133342e-01,  1.661979e-01],
        [-2.299457e-01,  2.489401e-01,  1.133342e-01,  1.661979e-01],
        [-2.299457e-01,  2.489401e-01,  1.133342e-01,  1.661979e-01],...
2025-05-15 02:02:51.050174 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.90778268
Max relative difference: 63.75010327
 x: array([[[-0.154681, -0.123299,  1.001787,  0.490297],
        [ 0.042171, -0.746387,  1.618228,  0.558458],
        [-0.839678, -1.379665,  0.46186 ,  0.09479 ],...
 y: array([[[-0.154681, -0.123299,  1.001787,  0.490297],
        [ 0.042171, -0.746387,  1.618228,  0.558458],
        [-0.839678, -1.379665,  0.46186 ,  0.09479 ],...
2025-05-15 02:02:51.232470 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[ 9.630027e-02, -4.007597e-01, -6.782779e-02,  3.989096e-02],
        [ 9.630027e-02, -4.007597e-01, -6.782779e-02,  3.989096e-02],
        [ 9.630027e-02, -4.007597e-01, -6.782779e-02,  3.989096e-02],...
 y: array([[[ 9.630027e-02, -4.007597e-01, -6.782779e-02,  3.989096e-02],
        [ 9.630027e-02, -4.007597e-01, -6.782779e-02,  3.989096e-02],
        [ 9.630027e-02, -4.007597e-01, -6.782779e-02,  3.989096e-02],...
2025-05-15 02:02:51.400464 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[-1.052949e-01,  3.098310e-01, -4.731540e-01,  3.076010e-01],
        [-9.850781e-02,  2.360901e-01, -4.354577e-01,  3.225182e-01],
        [-9.172070e-02,  1.623493e-01, -3.977614e-01,  3.374353e-01],...
 y: array([[[-1.052949e-01,  3.098310e-01, -4.731540e-01,  3.076010e-01],
        [-9.902786e-02,  2.417404e-01, -4.383461e-01,  3.213752e-01],
        [-9.276080e-02,  1.736498e-01, -4.035382e-01,  3.351493e-01],...
2025-05-15 02:02:51.539626 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[ 5.519184e-02, -4.331155e-01,  4.478094e-01,  3.021049e-01],
        [ 2.169837e-02, -3.386247e-01,  3.954290e-01,  2.409990e-01],
        [-1.179510e-02, -2.441339e-01,  3.430486e-01,  1.798931e-01],...
 y: array([[[ 0.055192, -0.433115,  0.447809,  0.302105],
        [ 0.055192, -0.433115,  0.447809,  0.302105],
        [ 0.055192, -0.433115,  0.447809,  0.302105],...
2025-05-15 02:02:51.721384 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 79, 4), (2, 78, 4) mismatch)
 x: array([[[-2.770646e-01,  4.834481e-01, -2.367099e-01, -4.701775e-01],
        [-2.502526e-01,  4.556506e-01, -1.578537e-01, -4.342521e-01],
        [-2.234407e-01,  4.278532e-01, -7.899739e-02, -3.983266e-01],...
 y: array([[[-2.770646e-01,  4.834481e-01, -2.367099e-01, -4.701775e-01],
        [-2.499044e-01,  4.552896e-01, -1.568296e-01, -4.337855e-01],
        [-2.227443e-01,  4.271312e-01, -7.694918e-02, -3.973935e-01],...
2025-05-15 02:02:51.879086 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[-3.104517e-01,  4.543135e-01, -4.527249e-01, -1.313253e-01],
        [-3.104517e-01,  4.543135e-01, -4.527249e-01, -1.313253e-01],
        [-3.104517e-01,  4.543135e-01, -4.527249e-01, -1.313253e-01],...
 y: array([[[-3.104517e-01,  4.543135e-01, -4.527249e-01, -1.313253e-01],
        [-3.104517e-01,  4.543135e-01, -4.527249e-01, -1.313253e-01],
        [-3.104517e-01,  4.543135e-01, -4.527249e-01, -1.313253e-01],...
2025-05-15 02:02:52.070904 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[ 4.732463e-01,  2.603815e-01,  3.694279e-01, -2.009936e-01],
        [ 4.123101e-01,  2.740466e-01,  3.014751e-01, -1.161924e-01],
        [ 3.513739e-01,  2.877117e-01,  2.335223e-01, -3.139125e-02],...
 y: array([[[ 0.473246,  0.260381,  0.369428, -0.200994],
        [ 0.416997,  0.272995,  0.306702, -0.122716],
        [ 0.360749,  0.285609,  0.243977, -0.044438],...
2025-05-15 02:02:52.246778 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[-9.907982e-02,  1.451866e-01, -8.120330e-02, -4.583352e-01],
        [-1.322536e-01,  8.674236e-02, -1.178733e-01, -3.614277e-01],
        [-1.654273e-01,  2.829812e-02, -1.545434e-01, -2.645202e-01],...
 y: array([[[-0.09908 ,  0.145187, -0.081203, -0.458335],
        [-0.09908 ,  0.145187, -0.081203, -0.458335],
        [-0.09908 ,  0.145187, -0.081203, -0.458335],...
2025-05-15 02:02:52.409025 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 80, 4), (2, 79, 4) mismatch)
 x: array([[[ 3.348912e-01, -2.937064e-01,  4.739955e-01, -2.429164e-01],
        [ 3.457680e-01, -3.149171e-01,  3.887476e-01, -1.801362e-01],
        [ 3.566449e-01, -3.361279e-01,  3.034997e-01, -1.173561e-01],...
 y: array([[[ 0.334891, -0.293706,  0.473996, -0.242916],
        [ 0.345907, -0.315189,  0.387655, -0.179331],
        [ 0.356924, -0.336672,  0.301314, -0.115746],...
2025-05-15 02:02:52.595125 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.80585098
Max relative difference: 1274.82586126
 x: array([[[ 0.813396, -0.259334,  0.613143,  0.837586],
        [-0.67266 ,  1.00042 , -0.706874,  0.425627],
        [ 0.391094,  1.211617,  0.52555 , -0.66801 ],...
 y: array([[[ 8.133956e-01, -2.593336e-01,  6.131433e-01,  8.375864e-01],
        [-6.726599e-01,  1.000420e+00, -7.068740e-01,  4.256266e-01],
        [ 3.910942e-01,  1.211617e+00,  5.255498e-01, -6.680103e-01],...
2025-05-15 02:02:52.765132 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 582 / 640 (90.9%)
Max absolute difference: 0.57924496
Max relative difference: 104.59282641
 x: array([[[ 3.991007e-01,  3.538774e-01, -4.467715e-01,  1.776521e-01],
        [ 2.904953e-01,  3.143306e-01, -3.445358e-01,  1.580499e-01],
        [ 1.818900e-01,  2.747838e-01, -2.423001e-01,  1.384478e-01],...
 y: array([[[ 3.991007e-01,  3.538774e-01, -4.467715e-01,  1.776521e-01],
        [ 3.001186e-01,  3.178347e-01, -3.535947e-01,  1.597868e-01],
        [ 2.011365e-01,  2.817921e-01, -2.604178e-01,  1.419216e-01],...
2025-05-15 02:02:52.942126 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 509 / 640 (79.5%)
Max absolute difference: 0.34518961
Max relative difference: 1821.74088633
 x: array([[[ 9.021192e-02, -3.791566e-01, -4.027045e-01,  4.662875e-01],
        [ 5.611434e-02, -2.796464e-01, -3.026898e-01,  3.694230e-01],
        [ 2.201675e-02, -1.801362e-01, -2.026751e-01,  2.725585e-01],...
 y: array([[[ 9.021192e-02, -3.791566e-01, -4.027045e-01,  4.662875e-01],
        [ 9.021192e-02, -3.791566e-01, -4.027045e-01,  4.662875e-01],
        [ 9.021192e-02, -3.791566e-01, -4.027045e-01,  4.662875e-01],...
2025-05-15 02:02:53.122841 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.93775423
Max relative difference: 90.62089176
 x: array([[[-0.889861, -0.749078,  0.562168,  0.212137],
        [-1.846735, -1.131291, -0.86562 , -0.189062],
        [-0.97632 , -0.117959,  0.839858,  0.366157],...
 y: array([[[-0.889861, -0.749078,  0.562168,  0.212137],
        [-1.846735, -1.131291, -0.86562 , -0.189062],
        [-0.97632 , -0.117959,  0.839858,  0.366157],...
2025-05-15 02:02:53.315246 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[-0.448847,  0.236788, -0.42614 ,  0.187405],
        [-0.448847,  0.236788, -0.42614 ,  0.187405],
        [-0.448847,  0.236788, -0.42614 ,  0.187405],...
 y: array([[[-0.448847,  0.236788, -0.42614 ,  0.187405],
        [-0.448847,  0.236788, -0.42614 ,  0.187405],
        [-0.448847,  0.236788, -0.42614 ,  0.187405],...
2025-05-15 02:02:53.492846 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[-0.060191, -0.039708, -0.351718, -0.484823],
        [-0.096964, -0.071243, -0.294891, -0.456645],
        [-0.133737, -0.102779, -0.238065, -0.428468],...
 y: array([[[-6.019103e-02, -3.970753e-02, -3.517175e-01, -4.848226e-01],
        [-9.412470e-02, -6.880819e-02, -2.992792e-01, -4.588210e-01],
        [-1.280584e-01, -9.790884e-02, -2.468409e-01, -4.328195e-01],...
2025-05-15 02:02:53.673272 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[ 1.332655e-01, -4.638450e-01, -2.450009e-01, -1.820127e-01],
        [ 1.157580e-01, -3.596266e-01, -2.020029e-01, -2.033360e-01],
        [ 9.825052e-02, -2.554081e-01, -1.590050e-01, -2.246592e-01],...
 y: array([[[ 1.332655e-01, -4.638450e-01, -2.450009e-01, -1.820127e-01],
        [ 1.332655e-01, -4.638450e-01, -2.450009e-01, -1.820127e-01],
        [ 1.332655e-01, -4.638450e-01, -2.450009e-01, -1.820127e-01],...
2025-05-15 02:02:53.834183 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 81, 4), (2, 80, 4) mismatch)
 x: array([[[ 2.112448e-01,  1.617796e-01, -1.585193e-01,  1.111454e-01],
        [ 1.603497e-01,  1.682403e-01, -1.474976e-01,  1.516427e-01],
        [ 1.094546e-01,  1.747011e-01, -1.364760e-01,  1.921400e-01],...
 y: array([[[ 0.211245,  0.16178 , -0.158519,  0.111145],
        [ 0.159705,  0.168322, -0.147358,  0.152155],
        [ 0.108166,  0.174865, -0.136197,  0.193165],...
2025-05-15 02:02:54.017474 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[-0.369132,  0.350488,  0.461009,  0.316373],
        [-0.369132,  0.350488,  0.461009,  0.316373],
        [-0.369132,  0.350488,  0.461009,  0.316373],...
 y: array([[[-0.369132,  0.350488,  0.461009,  0.316373],
        [-0.369132,  0.350488,  0.461009,  0.316373],
        [-0.369132,  0.350488,  0.461009,  0.316373],...
2025-05-15 02:02:54.183548 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[ 0.449328, -0.145485,  0.31026 , -0.389055],
        [ 0.390643, -0.077431,  0.301544, -0.382304],
        [ 0.331959, -0.009377,  0.292828, -0.375554],...
 y: array([[[ 0.449328, -0.145485,  0.31026 , -0.389055],
        [ 0.395191, -0.082705,  0.302219, -0.382827],
        [ 0.341055, -0.019925,  0.294179, -0.3766  ],...
2025-05-15 02:02:54.336199 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[-3.893857e-01, -4.051326e-01, -3.935587e-01,  1.503501e-01],
        [-3.700231e-01, -3.655249e-01, -3.416146e-01,  9.683279e-02],
        [-3.506604e-01, -3.259172e-01, -2.896705e-01,  4.331549e-02],...
 y: array([[[-3.893857e-01, -4.051326e-01, -3.935587e-01,  1.503501e-01],
        [-3.893857e-01, -4.051326e-01, -3.935587e-01,  1.503501e-01],
        [-3.893857e-01, -4.051326e-01, -3.935587e-01,  1.503501e-01],...
2025-05-15 02:02:54.525153 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 82, 4), (2, 81, 4) mismatch)
 x: array([[[ 1.692088e-01,  3.479362e-01, -1.625931e-01,  3.216854e-01],
        [ 1.401055e-01,  2.892485e-01, -1.794577e-01,  3.177207e-01],
        [ 1.110022e-01,  2.305608e-01, -1.963224e-01,  3.137560e-01],...
 y: array([[[ 0.169209,  0.347936, -0.162593,  0.321685],
        [ 0.139742,  0.288515, -0.179669,  0.317671],
        [ 0.110275,  0.229094, -0.196744,  0.313657],...
2025-05-15 02:02:54.718734 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.24752977
Max relative difference: 489.83760229
 x: array([[[ 1.247829, -1.001871, -0.331491, -0.850957],
        [-0.115975,  0.389831,  0.24228 ,  0.597705],
        [-1.222135,  0.958381,  0.305897, -0.546063],...
 y: array([[[ 1.247829, -1.001871, -0.331491, -0.850957],
        [-0.115975,  0.389831,  0.24228 ,  0.597705],
        [-1.222135,  0.958381,  0.305897, -0.546063],...
2025-05-15 02:02:54.890801 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 562 / 656 (85.7%)
Max absolute difference: 0.5844441
Max relative difference: 543.81064927
 x: array([[[ 1.362263e-01,  4.244625e-01, -5.038042e-02, -1.060244e-01],
        [ 1.098777e-01,  3.812918e-01, -6.663507e-03, -1.493618e-01],
        [ 8.352913e-02,  3.381212e-01,  3.705340e-02, -1.926992e-01],...
 y: array([[[ 1.362263e-01,  4.244625e-01, -5.038042e-02, -1.060244e-01],
        [ 1.122198e-01,  3.851292e-01, -1.054946e-02, -1.455096e-01],
        [ 8.821333e-02,  3.457960e-01,  2.928150e-02, -1.849948e-01],...
2025-05-15 02:02:55.054959 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 527 / 656 (80.3%)
Max absolute difference: 0.30733491
Max relative difference: 93.14998585
 x: array([[[ 2.814165e-01, -3.831819e-01, -9.187072e-02, -3.055146e-01],
        [ 2.652703e-01, -3.058301e-01, -4.205037e-02, -2.721107e-01],
        [ 2.491242e-01, -2.284782e-01,  7.769974e-03, -2.387067e-01],...
 y: array([[[ 0.281417, -0.383182, -0.091871, -0.305515],
        [ 0.281417, -0.383182, -0.091871, -0.305515],
        [ 0.281417, -0.383182, -0.091871, -0.305515],...
2025-05-15 02:02:55.240447 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 2.06015363
Max relative difference: 76.1004179
 x: array([[[ 1.425554, -0.448197, -0.014074, -0.783954],
        [ 0.199527, -1.082591,  0.955158, -0.940451],
        [-0.019549, -0.931862,  0.969035,  0.251259],...
 y: array([[[ 1.425554, -0.448197, -0.014074, -0.783954],
        [ 0.199527, -1.082591,  0.955158, -0.940451],
        [-0.019549, -0.931862,  0.969035,  0.251259],...
2025-05-15 02:02:55.391516 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[ 0.229635,  0.314062, -0.414073, -0.104032],
        [ 0.229635,  0.314062, -0.414073, -0.104032],
        [ 0.229635,  0.314062, -0.414073, -0.104032],...
 y: array([[[ 0.229635,  0.314062, -0.414073, -0.104032],
        [ 0.229635,  0.314062, -0.414073, -0.104032],
        [ 0.229635,  0.314062, -0.414073, -0.104032],...
2025-05-15 02:02:55.566200 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[ 1.456202e-01,  6.815575e-02,  4.538885e-01,  1.755995e-01],
        [ 1.073398e-01,  1.008335e-01,  4.271921e-01,  9.936710e-02],
        [ 6.905939e-02,  1.335112e-01,  4.004957e-01,  2.313471e-02],...
 y: array([[[ 1.456202e-01,  6.815575e-02,  4.538885e-01,  1.755995e-01],
        [ 1.103171e-01,  9.829186e-02,  4.292685e-01,  1.052963e-01],
        [ 7.501411e-02,  1.284280e-01,  4.046485e-01,  3.499308e-02],...
2025-05-15 02:02:55.716701 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[ 0.256297, -0.377742, -0.370894,  0.427549],
        [ 0.257198, -0.385145, -0.338627,  0.350289],
        [ 0.258099, -0.392547, -0.306361,  0.273028],...
 y: array([[[ 2.562969e-01, -3.777422e-01, -3.708937e-01,  4.275494e-01],
        [ 2.562969e-01, -3.777422e-01, -3.708937e-01,  4.275494e-01],
        [ 2.562969e-01, -3.777422e-01, -3.708937e-01,  4.275494e-01],...
2025-05-15 02:02:55.905535 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 83, 4), (2, 82, 4) mismatch)
 x: array([[[-0.229394, -0.15455 , -0.091774, -0.151366],
        [-0.174434, -0.108688, -0.079834, -0.112629],
        [-0.119474, -0.062825, -0.067894, -0.073891],...
 y: array([[[-2.293943e-01, -1.545502e-01, -9.177433e-02, -1.513665e-01],
        [-1.737554e-01, -1.081213e-01, -7.968653e-02, -1.121507e-01],
        [-1.181165e-01, -6.169246e-02, -6.759872e-02, -7.293487e-02],...
2025-05-15 02:02:56.065999 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[ 0.429288,  0.235926, -0.019977, -0.206742],
        [ 0.429288,  0.235926, -0.019977, -0.206742],
        [ 0.429288,  0.235926, -0.019977, -0.206742],...
 y: array([[[ 0.429288,  0.235926, -0.019977, -0.206742],
        [ 0.429288,  0.235926, -0.019977, -0.206742],
        [ 0.429288,  0.235926, -0.019977, -0.206742],...
2025-05-15 02:02:56.247625 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[-0.43969 , -0.469137,  0.35975 , -0.109582],
        [-0.383147, -0.408429,  0.301577, -0.111058],
        [-0.326604, -0.347722,  0.243403, -0.112534],...
 y: array([[[-0.43969 , -0.469137,  0.35975 , -0.109582],
        [-0.38756 , -0.413168,  0.306117, -0.110943],
        [-0.33543 , -0.357198,  0.252484, -0.112303],...
2025-05-15 02:02:56.423873 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[-0.372979,  0.135466, -0.292989,  0.424267],
        [-0.302241,  0.078377, -0.259831,  0.36997 ],
        [-0.231503,  0.021289, -0.226674,  0.315673],...
 y: array([[[-0.372979,  0.135466, -0.292989,  0.424267],
        [-0.372979,  0.135466, -0.292989,  0.424267],
        [-0.372979,  0.135466, -0.292989,  0.424267],...
2025-05-15 02:02:56.603157 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 84, 4), (2, 83, 4) mismatch)
 x: array([[[-3.061686e-01,  4.167296e-01, -1.101660e-02, -1.601884e-01],
        [-2.768137e-01,  3.318500e-01,  8.059459e-03, -1.005431e-01],
        [-2.474587e-01,  2.469704e-01,  2.713551e-02, -4.089773e-02],...
 y: array([[[-3.061686e-01,  4.167296e-01, -1.101660e-02, -1.601884e-01],
        [-2.764557e-01,  3.308149e-01,  8.292093e-03, -9.981568e-02],
        [-2.467427e-01,  2.449002e-01,  2.760078e-02, -3.944297e-02],...
2025-05-15 02:02:56.778922 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.24624999
Max relative difference: 42.89934128
 x: array([[[ 0.356109, -0.721678, -0.28625 , -0.701241],
        [ 0.22209 , -0.271246, -0.12318 ,  0.374251],
        [ 1.071041, -0.251975, -1.121918, -0.44409 ],...
 y: array([[[ 0.356109, -0.721678, -0.28625 , -0.701241],
        [ 0.22209 , -0.271246, -0.12318 ,  0.374251],
        [ 1.071042, -0.251975, -1.121917, -0.44409 ],...
2025-05-15 02:02:56.949041 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 579 / 672 (86.2%)
Max absolute difference: 0.50298943
Max relative difference: 219.22138096
 x: array([[[-1.873578e-01, -1.878096e-01,  3.619541e-01,  4.405674e-02],
        [-2.187476e-01, -1.654407e-01,  2.783906e-01, -1.851138e-02],
        [-2.501374e-01, -1.430718e-01,  1.948270e-01, -8.107950e-02],...
 y: array([[[-0.187358, -0.18781 ,  0.361954,  0.044057],
        [-0.215949, -0.167435,  0.285841, -0.012933],
        [-0.24454 , -0.14706 ,  0.209727, -0.069923],...
2025-05-15 02:02:57.128312 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 521 / 672 (77.5%)
Max absolute difference: 0.28869599
Max relative difference: 122.47227726
 x: array([[[ 2.494146e-01,  3.180416e-02,  3.888570e-01, -1.149665e-01],
        [ 1.707645e-01,  5.637219e-02,  3.794967e-01, -1.144991e-01],
        [ 9.211433e-02,  8.094022e-02,  3.701363e-01, -1.140316e-01],...
 y: array([[[ 2.494146e-01,  3.180416e-02,  3.888570e-01, -1.149665e-01],
        [ 2.494146e-01,  3.180416e-02,  3.888570e-01, -1.149665e-01],
        [ 2.494146e-01,  3.180416e-02,  3.888570e-01, -1.149665e-01],...
2025-05-15 02:02:57.299161 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.95128013
Max relative difference: 223.05901692
 x: array([[[ 0.605962,  0.184689, -1.335224, -0.632421],
        [-0.482985, -0.375755, -0.378247,  0.521325],
        [-0.947458,  0.730483, -0.023938,  1.151704],...
 y: array([[[ 6.059621e-01,  1.846891e-01, -1.335224e+00, -6.324212e-01],
        [-4.829847e-01, -3.757550e-01, -3.782471e-01,  5.213249e-01],
        [-9.474582e-01,  7.304828e-01, -2.393774e-02,  1.151704e+00],...
2025-05-15 02:02:57.462889 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[ 0.07547 ,  0.374641, -0.079292,  0.366271],
        [ 0.07547 ,  0.374641, -0.079292,  0.366271],
        [ 0.07547 ,  0.374641, -0.079292,  0.366271],...
 y: array([[[ 0.07547 ,  0.374641, -0.079292,  0.366271],
        [ 0.07547 ,  0.374641, -0.079292,  0.366271],
        [ 0.07547 ,  0.374641, -0.079292,  0.366271],...
2025-05-15 02:02:57.649723 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[-2.597803e-02, -2.675331e-01, -2.766922e-02, -2.898295e-01],
        [ 9.174669e-03, -2.181717e-01,  3.306038e-02, -2.832984e-01],
        [ 4.432737e-02, -1.688102e-01,  9.378999e-02, -2.767672e-01],...
 y: array([[[-2.597803e-02, -2.675331e-01, -2.766922e-02, -2.898295e-01],
        [ 6.421747e-03, -2.220373e-01,  2.830445e-02, -2.838098e-01],
        [ 3.882152e-02, -1.765415e-01,  8.427813e-02, -2.777902e-01],...
2025-05-15 02:02:57.826914 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[-4.294558e-01, -1.426635e-01, -1.186081e-01, -4.855857e-01],
        [-3.990485e-01, -1.181394e-01, -7.015549e-02, -4.067805e-01],
        [-3.686413e-01, -9.361521e-02, -2.170287e-02, -3.279753e-01],...
 y: array([[[-4.294558e-01, -1.426635e-01, -1.186081e-01, -4.855857e-01],
        [-4.294558e-01, -1.426635e-01, -1.186081e-01, -4.855857e-01],
        [-4.294558e-01, -1.426635e-01, -1.186081e-01, -4.855857e-01],...
2025-05-15 02:02:58.003426 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 85, 4), (2, 84, 4) mismatch)
 x: array([[[-4.321837e-01, -2.792064e-01,  2.295131e-01,  1.098474e-01],
        [-4.349551e-01, -2.173849e-01,  2.027842e-01,  1.179395e-01],
        [-4.377265e-01, -1.555634e-01,  1.760552e-01,  1.260316e-01],...
 y: array([[[-4.321837e-01, -2.792064e-01,  2.295131e-01,  1.098474e-01],
        [-4.349885e-01, -2.166400e-01,  2.024621e-01,  1.180370e-01],
        [-4.377933e-01, -1.540737e-01,  1.754112e-01,  1.262266e-01],...
2025-05-15 02:02:58.181694 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[ 0.054234, -0.266044,  0.096871,  0.442935],
        [ 0.054234, -0.266044,  0.096871,  0.442935],
        [ 0.054234, -0.266044,  0.096871,  0.442935],...
 y: array([[[ 0.054234, -0.266044,  0.096871,  0.442935],
        [ 0.054234, -0.266044,  0.096871,  0.442935],
        [ 0.054234, -0.266044,  0.096871,  0.442935],...
2025-05-15 02:02:58.344399 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[-1.218583e-01,  1.090912e-01, -2.272261e-01, -6.453025e-02],
        [-8.393895e-02,  9.453127e-02, -2.089583e-01, -7.611356e-02],
        [-4.601959e-02,  7.997132e-02, -1.906906e-01, -8.769687e-02],...
 y: array([[[-1.218583e-01,  1.090912e-01, -2.272261e-01, -6.453025e-02],
        [-8.691832e-02,  9.567527e-02, -2.103937e-01, -7.520345e-02],
        [-5.197835e-02,  8.225931e-02, -1.935613e-01, -8.587664e-02],...
2025-05-15 02:02:58.510742 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[ 4.556647e-01, -3.955015e-02,  2.480572e-01, -4.098738e-01],
        [ 4.362498e-01, -2.621241e-02,  1.821838e-01, -3.458277e-01],
        [ 4.168350e-01, -1.287467e-02,  1.163104e-01, -2.817816e-01],...
 y: array([[[ 4.556647e-01, -3.955015e-02,  2.480572e-01, -4.098738e-01],
        [ 4.556647e-01, -3.955015e-02,  2.480572e-01, -4.098738e-01],
        [ 4.556647e-01, -3.955015e-02,  2.480572e-01, -4.098738e-01],...
2025-05-15 02:02:58.696512 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 86, 4), (2, 85, 4) mismatch)
 x: array([[[ 2.654996e-01, -3.114768e-01,  3.090598e-01,  2.067570e-01],
        [ 2.125806e-01, -2.537962e-01,  2.281104e-01,  1.725145e-01],
        [ 1.596616e-01, -1.961156e-01,  1.471610e-01,  1.382720e-01],...
 y: array([[[ 0.2655  , -0.311477,  0.30906 ,  0.206757],
        [ 0.211951, -0.25311 ,  0.227147,  0.172107],
        [ 0.158402, -0.194742,  0.145234,  0.137457],...
2025-05-15 02:02:58.877049 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.67612183
Max relative difference: 31.39765611
 x: array([[[-1.010303,  0.439363, -0.494258, -1.016834],
        [-0.565472,  0.056652,  0.07336 , -0.493436],
        [ 1.097204, -0.454322,  0.011091,  0.046694],...
 y: array([[[-1.010303,  0.439363, -0.494258, -1.016834],
        [-0.565472,  0.056652,  0.07336 , -0.493436],
        [ 1.097204, -0.454322,  0.011091,  0.046694],...
2025-05-15 02:02:59.046079 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 599 / 688 (87.1%)
Max absolute difference: 0.68039757
Max relative difference: 255.95841132
 x: array([[[-2.158921e-01,  4.396080e-01,  3.127266e-01, -4.272477e-01],
        [-1.816725e-01,  4.072569e-01,  2.804037e-01, -3.741054e-01],
        [-1.474528e-01,  3.749058e-01,  2.480808e-01, -3.209631e-01],...
 y: array([[[-0.215892,  0.439608,  0.312727, -0.427248],
        [-0.184732,  0.410149,  0.283294, -0.378857],
        [-0.153572,  0.380691,  0.253861, -0.330466],...
2025-05-15 02:02:59.227717 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 538 / 688 (78.2%)
Max absolute difference: 0.32639896
Max relative difference: 27.48753743
 x: array([[[-0.272701, -0.238012,  0.4489  , -0.43091 ],
        [-0.282495, -0.240476,  0.362559, -0.388621],
        [-0.29229 , -0.242941,  0.276218, -0.346332],...
 y: array([[[-0.272701, -0.238012,  0.4489  , -0.43091 ],
        [-0.272701, -0.238012,  0.4489  , -0.43091 ],
        [-0.272701, -0.238012,  0.4489  , -0.43091 ],...
2025-05-15 02:02:59.402130 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.9789751
Max relative difference: 25.95356171
 x: array([[[-1.204878, -0.256354, -0.212036,  0.039017],
        [-1.046064, -1.712647,  0.509159,  0.080249],
        [-0.163334, -0.674341, -0.352348,  0.539711],...
 y: array([[[-1.204878, -0.256354, -0.212036,  0.039017],
        [-1.046064, -1.712647,  0.509159,  0.080249],
        [-0.163334, -0.674341, -0.352348,  0.539711],...
2025-05-15 02:02:59.575034 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[ 1.285562e-01, -1.525372e-01, -2.513365e-01, -3.296387e-01],
        [ 1.285562e-01, -1.525372e-01, -2.513365e-01, -3.296387e-01],
        [ 1.285562e-01, -1.525372e-01, -2.513365e-01, -3.296387e-01],...
 y: array([[[ 1.285562e-01, -1.525372e-01, -2.513365e-01, -3.296387e-01],
        [ 1.285562e-01, -1.525372e-01, -2.513365e-01, -3.296387e-01],
        [ 1.285562e-01, -1.525372e-01, -2.513365e-01, -3.296387e-01],...
2025-05-15 02:02:59.749751 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[-1.005185e-01,  1.788705e-01,  9.110589e-02,  2.085369e-02],
        [-7.581369e-02,  1.737275e-01,  3.831016e-02, -2.611342e-02],
        [-5.110890e-02,  1.685844e-01, -1.448557e-02, -7.308054e-02],...
 y: array([[[-1.005185e-01,  1.788705e-01,  9.110589e-02,  2.085369e-02],
        [-7.776101e-02,  1.741329e-01,  4.247170e-02, -2.241131e-02],
        [-5.500353e-02,  1.693952e-01, -6.162483e-03, -6.567631e-02],...
2025-05-15 02:02:59.917924 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[-1.817962e-01,  4.568235e-01, -7.369074e-02, -4.462751e-01],
        [-1.808329e-01,  3.902586e-01, -7.652993e-02, -3.829363e-01],
        [-1.798697e-01,  3.236937e-01, -7.936913e-02, -3.195975e-01],...
 y: array([[[-1.817962e-01,  4.568235e-01, -7.369074e-02, -4.462751e-01],
        [-1.817962e-01,  4.568235e-01, -7.369074e-02, -4.462751e-01],
        [-1.817962e-01,  4.568235e-01, -7.369074e-02, -4.462751e-01],...
2025-05-15 02:03:00.105416 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 87, 4), (2, 86, 4) mismatch)
 x: array([[[-4.697416e-01,  7.961664e-03,  1.243752e-01,  3.906859e-02],
        [-4.353949e-01, -4.414816e-02,  6.246535e-02,  4.402221e-02],
        [-4.010482e-01, -9.625798e-02,  5.554650e-04,  4.897583e-02],...
 y: array([[[-0.469742,  0.007962,  0.124375,  0.039069],
        [-0.434991, -0.044761,  0.061737,  0.04408 ],
        [-0.40024 , -0.097484, -0.000901,  0.049092],...
2025-05-15 02:03:00.285516 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[-0.018664, -0.279548, -0.243168,  0.457869],
        [-0.018664, -0.279548, -0.243168,  0.457869],
        [-0.018664, -0.279548, -0.243168,  0.457869],...
 y: array([[[-0.018664, -0.279548, -0.243168,  0.457869],
        [-0.018664, -0.279548, -0.243168,  0.457869],
        [-0.018664, -0.279548, -0.243168,  0.457869],...
2025-05-15 02:03:00.449435 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[-0.408488, -0.205627,  0.242531, -0.156381],
        [-0.415387, -0.126479,  0.248868, -0.161931],
        [-0.422286, -0.04733 ,  0.255206, -0.167481],...
 y: array([[[-4.084880e-01, -2.056274e-01,  2.425307e-01, -1.563814e-01],
        [-4.148415e-01, -1.327370e-01,  2.483671e-01, -1.614922e-01],
        [-4.211949e-01, -5.984662e-02,  2.542034e-01, -1.666030e-01],...
2025-05-15 02:03:00.637073 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[-4.370116e-01,  7.653136e-02,  1.812443e-01,  5.475252e-02],
        [-3.847212e-01,  1.128750e-01,  1.306770e-01,  2.005408e-02],
        [-3.324308e-01,  1.492187e-01,  8.010972e-02, -1.464437e-02],...
 y: array([[[-4.370116e-01,  7.653136e-02,  1.812443e-01,  5.475252e-02],
        [-4.370116e-01,  7.653136e-02,  1.812443e-01,  5.475252e-02],
        [-4.370116e-01,  7.653136e-02,  1.812443e-01,  5.475252e-02],...
2025-05-15 02:03:00.821112 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 88, 4), (2, 87, 4) mismatch)
 x: array([[[-2.334156e-02, -1.341441e-01,  4.993237e-01, -3.155743e-01],
        [-4.244703e-02, -1.064051e-01,  4.231904e-01, -2.956133e-01],
        [-6.155250e-02, -7.866613e-02,  3.470571e-01, -2.756523e-01],...
 y: array([[[-2.334156e-02, -1.341441e-01,  4.993237e-01, -3.155743e-01],
        [-4.266919e-02, -1.060826e-01,  4.223051e-01, -2.953812e-01],
        [-6.199681e-02, -7.802104e-02,  3.452865e-01, -2.751881e-01],...
2025-05-15 02:03:00.999165 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.41938189
Max relative difference: 13.09210094
 x: array([[[ 0.643818,  0.31856 ,  0.768509,  0.282413],
        [-0.611306,  0.599746,  0.308317, -0.27941 ],
        [ 0.631592,  0.629149,  0.593461,  0.446759],...
 y: array([[[ 0.643818,  0.31856 ,  0.768509,  0.282413],
        [-0.611306,  0.599746,  0.308317, -0.27941 ],
        [ 0.631592,  0.629149,  0.593461,  0.446759],...
2025-05-15 02:03:01.171807 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 613 / 704 (87.1%)
Max absolute difference: 0.60364242
Max relative difference: 1166.25398908
 x: array([[[ 7.203730e-02,  4.565781e-01, -2.930536e-01,  2.378639e-01],
        [ 1.186642e-02,  4.600919e-01, -2.948436e-01,  2.135801e-01],
        [-4.830445e-02,  4.636057e-01, -2.966335e-01,  1.892962e-01],...
 y: array([[[ 7.203730e-02,  4.565781e-01, -2.930536e-01,  2.378639e-01],
        [ 1.726105e-02,  4.597769e-01, -2.946831e-01,  2.157573e-01],
        [-3.751519e-02,  4.629757e-01, -2.963126e-01,  1.936506e-01],...
2025-05-15 02:03:01.335511 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 564 / 704 (80.1%)
Max absolute difference: 0.25506397
Max relative difference: 815.2184921
 x: array([[[-0.386417, -0.166354,  0.161967, -0.39539 ],
        [-0.37623 , -0.104356,  0.0964  , -0.378649],
        [-0.366043, -0.042358,  0.030834, -0.361909],...
 y: array([[[-3.864173e-01, -1.663537e-01,  1.619671e-01, -3.953898e-01],
        [-3.864173e-01, -1.663537e-01,  1.619671e-01, -3.953898e-01],
        [-3.864173e-01, -1.663537e-01,  1.619671e-01, -3.953898e-01],...
2025-05-15 02:03:01.519658 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 2.704198
Max relative difference: 11.99688413
 x: array([[[-0.22084 , -0.510181, -0.442722,  0.199245],
        [-0.197021, -0.568939,  0.043322, -0.35243 ],
        [-0.863283,  0.04767 , -1.12886 , -2.37366 ],...
 y: array([[[-0.22084 , -0.510181, -0.442722,  0.199245],
        [-0.197021, -0.568939,  0.043322, -0.35243 ],
        [-0.863283,  0.04767 , -1.12886 , -2.37366 ],...
2025-05-15 02:03:01.676328 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[ 0.476415, -0.359586,  0.477305, -0.378631],
        [ 0.476415, -0.359586,  0.477305, -0.378631],
        [ 0.476415, -0.359586,  0.477305, -0.378631],...
 y: array([[[ 0.476415, -0.359586,  0.477305, -0.378631],
        [ 0.476415, -0.359586,  0.477305, -0.378631],
        [ 0.476415, -0.359586,  0.477305, -0.378631],...
2025-05-15 02:03:01.829321 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[-0.477849,  0.228661,  0.234359,  0.453021],
        [-0.469753,  0.236945,  0.163235,  0.430474],
        [-0.461657,  0.245229,  0.092111,  0.407928],...
 y: array([[[-4.778495e-01,  2.286610e-01,  2.343591e-01,  4.530212e-01],
        [-4.703955e-01,  2.362880e-01,  1.688758e-01,  4.322627e-01],
        [-4.629416e-01,  2.439151e-01,  1.033925e-01,  4.115041e-01],...
2025-05-15 02:03:01.978186 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[ 4.196414e-01,  8.005465e-02, -1.964726e-01, -1.724678e-01],
        [ 4.249635e-01,  2.472994e-02, -1.378223e-01, -1.246355e-01],
        [ 4.302856e-01, -3.059476e-02, -7.917195e-02, -7.680318e-02],...
 y: array([[[ 4.196414e-01,  8.005465e-02, -1.964726e-01, -1.724678e-01],
        [ 4.196414e-01,  8.005465e-02, -1.964726e-01, -1.724678e-01],
        [ 4.196414e-01,  8.005465e-02, -1.964726e-01, -1.724678e-01],...
2025-05-15 02:03:02.169461 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 89, 4), (2, 88, 4) mismatch)
 x: array([[[ 4.468180e-01,  3.968828e-01,  1.548179e-01, -4.581231e-01],
        [ 3.911439e-01,  3.398915e-01,  1.104619e-01, -3.917037e-01],
        [ 3.354698e-01,  2.829001e-01,  6.610598e-02, -3.252843e-01],...
 y: array([[[ 0.446818,  0.396883,  0.154818, -0.458123],
        [ 0.390504,  0.339236,  0.109952, -0.39094 ],
        [ 0.33419 ,  0.28159 ,  0.065086, -0.323757],...
2025-05-15 02:03:02.331117 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.77403823
Max relative difference: 224.07449622
 x: array([[[ 0.315179,  0.337425, -0.377388, -0.46117 ],
        [ 0.454788,  0.274107,  0.134705, -0.31568 ],
        [ 0.465034,  0.325474, -0.207272,  0.239769],...
 y: array([[[ 3.151789e-01,  3.374253e-01, -3.773878e-01, -4.611701e-01],
        [ 4.547884e-01,  2.741074e-01,  1.347050e-01, -3.156804e-01],
        [ 4.650335e-01,  3.254739e-01, -2.072720e-01,  2.397693e-01],...
2025-05-15 02:03:02.509173 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 31 / 88 (35.2%)
Max absolute difference: 0.05865209
Max relative difference: 9.04921134
 x: array([[[-0.20189 ,  0.467528,  0.40364 ,  0.288375],
        [-0.048591,  0.27831 ,  0.125041,  0.201163],
        [ 0.04036 ,  0.391083,  0.244269, -0.103102],...
 y: array([[[-0.20189 ,  0.467528,  0.40364 ,  0.288375],
        [-0.050124,  0.280202,  0.127827,  0.202035],
        [ 0.038724,  0.388156,  0.241   , -0.096534],...
2025-05-15 02:03:02.678020 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 12 / 88 (13.6%)
Max absolute difference: 0.02792311
Max relative difference: 9.80181059
 x: array([[[ 0.155975, -0.17671 ,  0.380036, -0.397721],
        [ 0.082231, -0.391226,  0.322825, -0.342814],
        [-0.064957, -0.065692, -0.281873,  0.201336],...
 y: array([[[ 0.155975, -0.17671 ,  0.380036, -0.397721],
        [ 0.08521 , -0.382558,  0.325136, -0.345033],
        [-0.060219, -0.077603, -0.261475,  0.182993],...
2025-05-15 02:03:02.846549 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.69496783
Max relative difference: 160.64823395
 x: array([[[ 0.172588,  0.36491 , -0.209362,  0.359559],
        [-0.130226, -0.075548, -0.052109,  0.063499],
        [-0.166898, -0.273938,  0.48834 , -0.243993],...
 y: array([[[ 0.172588,  0.36491 , -0.209362,  0.359559],
        [-0.130226, -0.075548, -0.052109,  0.063499],
        [-0.166898, -0.273938,  0.48834 , -0.243993],...
2025-05-15 02:03:03.012405 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 0.94678351
Max relative difference: 14.0058155
 x: array([[[-0.472285, -0.086072, -0.16662 ,  0.250492],
        [ 0.032211, -0.084435,  0.405959, -0.020525],
        [ 0.57395 , -0.008798, -0.234558, -0.229214],...
 y: array([[[-0.472285, -0.086072, -0.16662 ,  0.250492],
        [ 0.032211, -0.084435,  0.405959, -0.020525],
        [ 0.57395 , -0.008798, -0.234558, -0.229214],...
2025-05-15 02:03:03.189164 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 70 / 112 (62.5%)
Max absolute difference: 0.13690699
Max relative difference: 5.49929308
 x: array([[[-0.369194,  0.382965, -0.34942 ,  0.445058],
        [-0.403782,  0.311172, -0.23918 ,  0.472953],
        [-0.441373,  0.175165, -0.171387,  0.382347],...
 y: array([[[-0.369194,  0.382965, -0.34942 ,  0.445058],
        [-0.402718,  0.313381, -0.242572,  0.472095],
        [-0.438937,  0.186169, -0.173818,  0.392785],...
2025-05-15 02:03:03.346396 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 52 / 112 (46.4%)
Max absolute difference: 0.0965966
Max relative difference: 6.56390114
 x: array([[[ 0.431683,  0.445072, -0.170289, -0.231591],
        [ 0.337392, -0.023159, -0.313309, -0.205661],
        [ 0.3403  , -0.248169, -0.271758, -0.024782],...
 y: array([[[ 0.431683,  0.445072, -0.170289, -0.231591],
        [ 0.353856,  0.058596, -0.288337, -0.210188],
        [ 0.328776, -0.243821, -0.298787, -0.06833 ],...
2025-05-15 02:03:03.523614 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.67063495
Max relative difference: 33.32067775
 x: array([[[ 0.270933,  0.329047, -0.278343,  0.373123],
        [ 0.197204, -0.012934, -0.327417, -0.277528],
        [ 0.307759,  0.584266,  0.378406, -0.498579],...
 y: array([[[ 0.270933,  0.329047, -0.278343,  0.373123],
        [ 0.197204, -0.012934, -0.327417, -0.277528],
        [ 0.307759,  0.584267,  0.378406, -0.498579],...
2025-05-15 02:03:03.695276 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.96187262
Max relative difference: 42.618702
 x: array([[[-0.254699, -0.243787,  0.216786,  0.139071],
        [ 0.31252 , -0.042155,  0.053719, -0.131284],
        [ 0.08305 ,  0.577352,  0.273569, -0.110062],...
 y: array([[[-0.254699, -0.243787,  0.216786,  0.139071],
        [ 0.31252 , -0.042155,  0.053719, -0.131284],
        [ 0.08305 ,  0.577352,  0.273569, -0.110062],...
2025-05-15 02:03:03.865903 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 109 / 136 (80.1%)
Max absolute difference: 0.35295246
Max relative difference: 16.69651955
 x: array([[[ 0.20704 ,  0.079403, -0.243909, -0.399882],
        [-0.040214,  0.195374, -0.00265 , -0.206008],
        [-0.258405,  0.150301,  0.091613, -0.145005],...
 y: array([[[ 0.20704 ,  0.079403, -0.243909, -0.399882],
        [-0.029397,  0.1903  , -0.013205, -0.21449 ],
        [-0.245247,  0.187125,  0.113377, -0.123215],...
2025-05-15 02:03:04.018964 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 73 / 136 (53.7%)
Max absolute difference: 0.16190152
Max relative difference: 4.77176915
 x: array([[[-0.081314,  0.220181,  0.236778,  0.112919],
        [ 0.081467, -0.059687,  0.355758,  0.263033],
        [ 0.197031, -0.269648,  0.380771,  0.383913],...
 y: array([[[-0.081314,  0.220181,  0.236778,  0.112919],
        [ 0.029334,  0.029944,  0.317654,  0.214957],
        [ 0.199563, -0.262728,  0.442078,  0.37194 ],...
2025-05-15 02:03:04.200918 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.87492072
Max relative difference: 26.73908455
 x: array([[[ 0.500931,  0.171847, -0.066805, -0.102307],
        [ 0.231985,  0.255452, -0.376382,  0.077866],
        [ 0.080732,  0.019702, -0.02052 ,  0.112568],...
 y: array([[[ 0.500931,  0.171847, -0.066805, -0.102307],
        [ 0.231985,  0.255452, -0.376382,  0.077866],
        [ 0.080732,  0.019702, -0.02052 ,  0.112568],...
2025-05-15 02:03:04.394146 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 8 / 80 (10%)
Max absolute difference: 0.89835761
Max relative difference: 5.45898434
 x: array([[[ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [-0.47232 ,  0.221176, -0.046015, -0.31939 ],...
 y: array([[[ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [-0.47232 ,  0.221176, -0.046015, -0.31939 ],...
2025-05-15 02:03:04.562982 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 8 / 16 (50%)
Max absolute difference: 0.71931083
Max relative difference: 2.26431918
 x: array([[[ 0.336511, -0.053559,  0.187981, -0.111165],
        [ 0.266049,  0.237537,  0.259229,  0.139832]],
...
 y: array([[[ 0.336511, -0.053559,  0.187981, -0.111165],
        [-0.32529 , -0.187878,  0.445255,  0.190185]],
...
2025-05-15 02:03:04.745265 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.66963317
Max relative difference: 15.63072353
 x: array([[[ 0.390902,  0.054653,  0.370549,  0.062922],
        [-0.244404,  0.068329, -0.328921, -0.003139]],
...
 y: array([[[ 0.023505, -0.355717,  0.077011,  0.484501],
        [ 0.237603, -0.193747, -0.158924, -0.20699 ]],
...
2025-05-15 02:03:04.921683 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 8 / 80 (10%)
Max absolute difference: 0.68026315
Max relative difference: 11.87260076
 x: array([[[ 0.322908, -0.175316,  0.37675 ,  0.102601],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
 y: array([[[ 0.322908, -0.175316,  0.37675 ,  0.102601],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.      ,  0.      ,  0.      ,  0.      ],...
2025-05-15 02:03:05.103740 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.15117162
Max relative difference: 30.48365381
 x: array([[[-0.011451,  0.020999, -0.495222, -0.144338],
        [ 0.070481, -0.214337, -0.089729,  0.188628],
        [-0.260074, -0.209567,  0.146641,  0.065425],...
 y: array([[[-0.011451,  0.020999, -0.495222, -0.144338],
        [ 0.070481, -0.214337, -0.089729,  0.188628],
        [-0.260074, -0.209567,  0.146641,  0.065425],...
2025-05-15 02:03:05.275496 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 120 / 160 (75%)
Max absolute difference: 0.35304852
Max relative difference: 194.47559235
 x: array([[[ 4.637972e-02,  3.853670e-01,  2.568713e-01, -2.120549e-01],
        [ 3.435286e-02,  2.647654e-01,  1.961538e-01,  8.230267e-03],
        [ 2.232599e-02,  1.441638e-01,  1.354362e-01,  2.285154e-01],...
 y: array([[[ 4.637972e-02,  3.853670e-01,  2.568713e-01, -2.120549e-01],
        [ 3.498585e-02,  2.711128e-01,  1.993494e-01, -3.363687e-03],
        [ 2.359198e-02,  1.568587e-01,  1.418275e-01,  2.053275e-01],...
2025-05-15 02:03:05.455964 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 102 / 160 (63.8%)
Max absolute difference: 0.17734751
Max relative difference: 7.54531216
 x: array([[[-0.436169,  0.038313, -0.327406, -0.199503],
        [-0.067691,  0.152869,  0.006024,  0.131533],
        [ 0.300786,  0.267424,  0.339454,  0.462568],...
 y: array([[[-0.436169,  0.038313, -0.327406, -0.199503],
        [-0.241695,  0.098773, -0.151429, -0.02479 ],
        [ 0.147254,  0.219692,  0.200525,  0.324637],...
2025-05-15 02:03:05.628262 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.22051188
Max relative difference: 19.7486368
 x: array([[[-0.085908, -0.266983,  0.042939,  0.063962],
        [ 0.209413, -0.382138, -0.326251, -0.358069],
        [-0.152974,  0.295744, -0.218472,  0.043983],...
 y: array([[[-0.085908, -0.266983,  0.042939,  0.063962],
        [ 0.209413, -0.382138, -0.326251, -0.358069],
        [-0.152974,  0.295744, -0.218473,  0.043983],...
2025-05-15 02:03:05.802547 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 1.45406855
Max relative difference: 56.56991588
 x: array([[[ 0.386309, -0.24081 , -0.308344, -0.250532],
        [ 0.382477, -0.563686,  0.142124, -0.139095],
        [ 0.768092, -0.432307,  0.031526,  0.151583],...
 y: array([[[ 0.386309, -0.24081 , -0.308344, -0.250532],
        [ 0.382477, -0.563686,  0.142124, -0.139095],
        [ 0.768092, -0.432307,  0.031526,  0.151583],...
2025-05-15 02:03:05.948627 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 137 / 184 (74.5%)
Max absolute difference: 0.40029065
Max relative difference: 218.57133639
 x: array([[[ 0.241238,  0.20355 ,  0.273305, -0.217332],
        [ 0.03627 ,  0.033934,  0.316843, -0.333023],
        [-0.168698, -0.135681,  0.360382, -0.448714],...
 y: array([[[ 0.241238,  0.20355 ,  0.273305, -0.217332],
        [ 0.048382,  0.043957,  0.314271, -0.326187],
        [-0.144475, -0.115636,  0.355236, -0.435041],...
2025-05-15 02:03:06.125258 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 113 / 184 (61.4%)
Max absolute difference: 0.18459012
Max relative difference: 630.01326929
 x: array([[[-0.066604,  0.044799,  0.327737, -0.145847],
        [-0.230827,  0.075574,  0.056874, -0.093434],
        [-0.39505 ,  0.10635 , -0.213989, -0.041021],...
 y: array([[[-6.660420e-02,  4.479897e-02,  3.277366e-01, -1.458475e-01],
        [-1.276919e-01,  5.624687e-02,  2.269808e-01, -1.263508e-01],
        [-3.022280e-01,  8.895516e-02, -6.089292e-02, -7.064595e-02],...
2025-05-15 02:03:06.297632 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.52098092
Max relative difference: 58.36386967
 x: array([[[ 0.108712,  0.119461,  0.074559, -0.076228],
        [-0.121747, -0.7802  ,  0.440115, -0.38807 ],
        [-0.381236, -0.107071,  0.209301,  0.134514],...
 y: array([[[ 0.108712,  0.119461,  0.074559, -0.076228],
        [-0.121747, -0.7802  ,  0.440115, -0.38807 ],
        [-0.381236, -0.107071,  0.209301,  0.134514],...
2025-05-15 02:03:06.450879 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.17298768
Max relative difference: 1215.71303901
 x: array([[[-0.240015, -0.546813,  0.109592, -0.104787],
        [ 0.051339, -0.448394,  0.097431,  0.494195],
        [-0.320568,  0.218903, -0.713213,  0.034377],...
 y: array([[[-2.400147e-01, -5.468126e-01,  1.095919e-01, -1.047872e-01],
        [ 5.133923e-02, -4.483940e-01,  9.743147e-02,  4.941951e-01],
        [-3.205675e-01,  2.189029e-01, -7.132135e-01,  3.437651e-02],...
2025-05-15 02:03:06.626811 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 158 / 208 (76%)
Max absolute difference: 0.46369262
Max relative difference: 34.3656459
 x: array([[[-3.143860e-01,  5.102144e-02,  1.547362e-01, -2.586627e-01],
        [-3.243771e-01,  5.661598e-02,  1.703455e-02, -2.676836e-01],
        [-3.343683e-01,  6.221052e-02, -1.206671e-01, -2.767045e-01],...
 y: array([[[-0.314386,  0.051021,  0.154736, -0.258663],
        [-0.323738,  0.056258,  0.025847, -0.267106],
        [-0.333089,  0.061494, -0.103041, -0.27555 ],...
2025-05-15 02:03:06.800612 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 150 / 208 (72.1%)
Max absolute difference: 0.22119422
Max relative difference: 93.32273641
 x: array([[[ 0.01244 ,  0.001545, -0.355373,  0.493538],
        [ 0.103324,  0.100453, -0.17869 ,  0.266415],
        [ 0.194207,  0.19936 , -0.002007,  0.039291],...
 y: array([[[ 0.01244 ,  0.001545, -0.355373,  0.493538],
        [ 0.03186 ,  0.022679, -0.317621,  0.445007],
        [ 0.128958,  0.12835 , -0.128856,  0.202354],...
2025-05-15 02:03:06.971016 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.06922954
Max relative difference: 16.10937071
 x: array([[[-0.035793, -0.091035,  0.233883, -0.482099],
        [-0.158863, -0.435346, -0.073923, -0.331947],
        [-0.037468, -0.429872,  0.032732, -0.2652  ],...
 y: array([[[-0.035793, -0.091035,  0.233883, -0.482099],
        [-0.158863, -0.435346, -0.073923, -0.331947],
        [-0.037468, -0.429872,  0.032732, -0.2652  ],...
2025-05-15 02:03:07.140379 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 39 / 80 (48.8%)
Max absolute difference: 1.64571247
Max relative difference: 12930.7002904
 x: array([[[ 5.624920e-01,  3.784776e-01,  3.946832e-01,  7.186610e-01],
        [ 7.079966e-01, -2.267268e-01,  2.760181e-01,  6.209801e-01],
        [ 1.742140e-01, -3.048755e-01, -6.341106e-01, -4.319912e-01],...
 y: array([[[ 5.624920e-01,  3.784776e-01,  3.946832e-01,  7.186610e-01],
        [ 7.079966e-01, -2.267268e-01,  2.760181e-01,  6.209801e-01],
        [ 1.742141e-01, -3.048755e-01, -6.341106e-01, -4.319912e-01],...
2025-05-15 02:03:07.314353 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 181 / 232 (78%)
Max absolute difference: 0.36796663
Max relative difference: 134.36720365
 x: array([[[-0.195974, -0.365968,  0.438277,  0.236134],
        [-0.123004, -0.363698,  0.180093,  0.085099],
        [-0.050034, -0.361428, -0.078092, -0.065936],...
 y: array([[[-0.195974, -0.365968,  0.438277,  0.236134],
        [-0.127956, -0.363852,  0.197612,  0.095348],
        [-0.059937, -0.361736, -0.043053, -0.045439],...
2025-05-15 02:03:07.487675 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 162 / 232 (69.8%)
Max absolute difference: 0.27989508
Max relative difference: 22.21366281
 x: array([[[ 0.476343, -0.391293,  0.064874,  0.346858],
        [ 0.211472, -0.418398, -0.044959,  0.320712],
        [-0.053399, -0.445503, -0.154792,  0.294566],...
 y: array([[[ 0.476343, -0.391293,  0.064874,  0.346858],
        [ 0.462136, -0.392747,  0.058983,  0.345455],
        [ 0.177982, -0.421825, -0.058846,  0.317406],...
2025-05-15 02:03:07.642042 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 1.78577482
Max relative difference: 33.28710447
 x: array([[[ 0.224249, -0.341645, -0.521238,  0.441334],
        [ 0.755383, -0.238928,  0.590092, -0.257483],
        [-0.426221,  0.078395,  0.841762, -1.08089 ],...
 y: array([[[ 0.224249, -0.341645, -0.521238,  0.441334],
        [ 0.755383, -0.238928,  0.590092, -0.257483],
        [-0.426221,  0.078395,  0.841762, -1.08089 ],...
2025-05-15 02:03:07.817183 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 34 / 80 (42.5%)
Max absolute difference: 0.44366417
Max relative difference: 7.89265042
 x: array([[[ 0.0794  , -0.223203,  0.204812, -0.103324],
        [ 0.0794  , -0.223203,  0.204812, -0.103324],
        [-0.115009,  0.020984, -0.105893, -0.196786],...
 y: array([[[ 0.0794  , -0.223203,  0.204812, -0.103324],
        [ 0.0794  , -0.223203,  0.204812, -0.103324],
        [-0.115009,  0.020984, -0.105893, -0.196786],...
2025-05-15 02:03:07.992402 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 29 / 40 (72.5%)
Max absolute difference: 0.7521653
Max relative difference: 3.13763571
 x: array([[[-0.366232, -0.412303, -0.263564, -0.225657],
        [-0.428488,  0.009379, -0.386692, -0.048841],
        [ 0.045098, -0.255795,  0.301331,  0.469953],...
 y: array([[[-0.366232, -0.412303, -0.263564, -0.225657],
        [-0.25318 ,  0.119741, -0.33394 ,  0.050189],
        [ 0.049491, -0.231952,  0.169422,  0.293923],...
2025-05-15 02:03:08.164289 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 29 / 40 (72.5%)
Max absolute difference: 0.34155586
Max relative difference: 46.89049521
 x: array([[[-0.301506, -0.325825,  0.39741 ,  0.336644],
        [ 0.020681,  0.072531, -0.151172,  0.062116],
        [ 0.107518, -0.414064,  0.202892,  0.188201],...
 y: array([[[-0.115734, -0.315909,  0.433756,  0.194121],
        [-0.146568, -0.049645, -0.228408,  0.133005],
        [ 0.107518, -0.414064,  0.202892,  0.188201],...
2025-05-15 02:03:08.335244 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 32 / 80 (40%)
Max absolute difference: 0.77597845
Max relative difference: 4.7821224
 x: array([[[ 0.189326,  0.312734,  0.353259, -0.336382],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.023095,  0.33586 , -0.321784, -0.324903],...
 y: array([[[ 0.189326,  0.312734,  0.353259, -0.336382],
        [ 0.      ,  0.      ,  0.      ,  0.      ],
        [ 0.023095,  0.33586 , -0.321784, -0.324903],...
2025-05-15 02:03:08.509663 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 38 / 80 (47.5%)
Max absolute difference: 0.62933759
Max relative difference: 65.04776966
 x: array([[[ 0.175016, -0.206753, -0.371856, -0.233849],
        [ 0.208218, -0.232309, -0.364984,  0.104256],
        [-0.040875, -0.245431, -0.272291, -0.039485],...
 y: array([[[ 0.175016, -0.206753, -0.371856, -0.233849],
        [ 0.208218, -0.232309, -0.364984,  0.104256],
        [-0.040875, -0.245431, -0.272291, -0.039485],...
2025-05-15 02:03:08.662288 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 45 / 64 (70.3%)
Max absolute difference: 0.23663833
Max relative difference: 3.78352237
 x: array([[[-0.085421, -0.069291,  0.231359, -0.133714],
        [ 0.178422, -0.200994, -0.220786, -0.050833],
        [ 0.102387, -0.182885, -0.282858, -0.042907],...
 y: array([[[-0.085421, -0.069291,  0.231359, -0.133714],
        [ 0.179917, -0.201687, -0.214366, -0.072092],
        [ 0.087039, -0.17822 , -0.310986,  0.022002],...
2025-05-15 02:03:08.842014 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 37 / 64 (57.8%)
Max absolute difference: 0.1129063
Max relative difference: 8.72219589
 x: array([[[-0.448457, -0.219485,  0.1447  ,  0.342761],
        [-0.374486,  0.021305,  0.16978 ,  0.299266],
        [-0.026966, -0.059874,  0.237589, -0.047712],...
 y: array([[[-4.374024e-01, -1.769542e-01,  1.378545e-01,  3.581342e-01],
        [-3.790061e-01, -9.776147e-03,  1.947301e-01,  2.472406e-01],
        [ 9.003786e-03, -4.417432e-02,  2.252336e-01, -4.122203e-02],...
2025-05-15 02:03:09.012361 test begin: paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 40 / 80 (50%)
Max absolute difference: 0.76748089
Max relative difference: 24.4531675
 x: array([[[ 0.482005, -0.218967,  0.328967,  0.287152],
        [-0.154352,  0.125587, -0.018254, -0.289643],
        [ 0.036876, -0.067371, -0.112089, -0.094507],...
 y: array([[[ 0.482005, -0.218967,  0.328967,  0.287152],
        [-0.154352,  0.125587, -0.018254, -0.289643],
        [ 0.036876, -0.067371, -0.112089, -0.094507],...
2025-05-15 02:03:09.188412 test begin: paddle.nn.functional.interpolate(Tensor([2, 128, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 128, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 211232 / 262144 (80.6%)
Max absolute difference: 0.31974515
Max relative difference: 1153422.6
 x: array([[[[-3.829683e-01, -1.983584e-01, -1.374865e-02, ...,
          -3.243152e-01, -2.457393e-01, -1.671633e-01],
         [ 2.800374e-02, -6.843475e-02, -1.648732e-01, ...,...
 y: array([[[[-0.382968, -0.287587, -0.096823, ..., -0.288956, -0.207761,
          -0.167163],
         [-0.170633, -0.150275, -0.10956 , ..., -0.267913, -0.127627,...
2025-05-15 02:03:09.360050 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 120 / 144 (83.3%)
Max absolute difference: 0.31694126
Max relative difference: 19.013445
 x: array([[[[ 0.353323,  0.430594, -0.237928,  0.253068, -0.069288,
           0.408965],
         [-0.360284, -0.170526,  0.250871,  0.021322,  0.209525,...
 y: array([[[[ 0.35423 ,  0.404367, -0.245595,  0.205159, -0.180647,
           0.457119],
         [-0.328172, -0.179426,  0.274944,  0.021279,  0.360302,...
2025-05-15 02:03:09.514861 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 131 / 144 (91%)
Max absolute difference: 0.3423785
Max relative difference: 128.01535
 x: array([[[[ 3.714505e-01, -3.558847e-01, -1.509265e-01,  2.666249e-01,
          -8.892152e-02,  4.254418e-01],
         [-4.422095e-01, -1.560640e-01, -1.092663e-01,  2.874095e-02,...
 y: array([[[[ 0.223344, -0.411783, -0.232791,  0.058242, -0.135261,
           0.374551],
         [-0.295632, -0.131462, -0.053515,  0.100996,  0.177121,...
2025-05-15 02:03:09.693647 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 133 / 144 (92.4%)
Max absolute difference: 0.5095168
Max relative difference: 28.624475
 x: array([[[[ 0.200298, -0.290537, -0.065064,  0.250507, -0.465486,
          -0.154327],
         [ 0.01869 ,  0.044249, -0.127921,  0.207044, -0.268641,...
 y: array([[[[ 0.200298, -0.347445,  0.021185, -0.021032, -0.461994,
           0.284493],
         [ 0.009023,  0.151676, -0.155246,  0.091194, -0.297246,...
2025-05-15 02:03:09.869950 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 134 / 144 (93.1%)
Max absolute difference: 0.27153742
Max relative difference: 67.53221
 x: array([[[[ 0.453749, -0.123028, -0.180299, -0.096416, -0.065218,
           0.460938],
         [ 0.069435,  0.261387, -0.055505,  0.111314,  0.087572,...
 y: array([[[[ 0.28156 , -0.105538, -0.086801,  0.110266, -0.050572,
           0.274341],
         [ 0.029927,  0.386689, -0.122174,  0.011071,  0.013998,...
2025-05-15 02:03:10.026758 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 376 / 432 (87%)
Max absolute difference: 0.34842107
Max relative difference: 214.84502
 x: array([[[[-0.570475, -0.219382,  0.251462,  0.171843, -0.144303,
          -0.10791 ,  0.0131  ,  0.05052 ,  0.070163,  0.056157,
           0.244452,  0.458723,  0.203479, -0.163321, -0.091345,...
 y: array([[[[-0.48728 , -0.001016,  0.36142 ,  0.14756 , -0.076813,
           0.021266,  0.083422,  0.002996,  0.050466,  0.209139,
           0.366357,  0.430139,  0.327173,  0.116668, -0.10238 ,...
2025-05-15 02:03:10.208027 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 378 / 432 (87.5%)
Max absolute difference: 0.32552642
Max relative difference: 351.67728
 x: array([[[[ 4.616831e-01,  3.943394e-02, -3.099725e-01, -1.938316e-01,
          -8.837142e-02, -2.283409e-01, -3.641119e-01, -4.227119e-01,
          -2.134370e-01,  1.554305e-01,  3.952487e-01,  3.806306e-01,...
 y: array([[[[ 5.420902e-01,  2.010206e-01, -2.680360e-01, -2.816944e-01,
          -6.563610e-02, -1.231716e-01, -1.822184e-01, -1.259840e-01,
          -2.989709e-02,  3.806903e-02,  1.432091e-01,  2.218008e-01,...
2025-05-15 02:03:10.390614 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 391 / 432 (90.5%)
Max absolute difference: 0.53095555
Max relative difference: 101.62446
 x: array([[[[ 0.175283, -0.035184, -0.23107 , -0.368632, -0.281031,
           0.144315,  0.269932,  0.19573 , -0.045664, -0.328856,
          -0.376344, -0.399066, -0.322719, -0.15342 ,  0.155308,...
 y: array([[[[ 0.175283, -0.02528 , -0.218123, -0.349212, -0.361096,
           0.044234,  0.290883,  0.220173,  0.060949, -0.208916,
          -0.353997, -0.39925 , -0.365832, -0.293079, -0.048089,...
2025-05-15 02:03:10.561863 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 364 / 432 (84.3%)
Max absolute difference: 0.29561508
Max relative difference: 101.716225
 x: array([[[[-1.600490e-01,  1.363600e-01,  3.528001e-01, -7.050975e-02,
          -4.102476e-01, -4.574838e-01, -4.421811e-01, -3.018009e-01,
          -2.676684e-01, -3.663453e-01, -2.459189e-01,  4.978967e-02,...
 y: array([[[[-0.033188,  0.075445,  0.256499,  0.036648, -0.283429,
          -0.230195, -0.168944, -0.075626, -0.083781, -0.244143,
          -0.150365,  0.112839,  0.207474,  0.259967,  0.207793,...
2025-05-15 02:03:10.718423 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[-0.174691, -0.174691, -0.173955, -0.173218, -0.172481,
          -0.058679,  0.055123,  0.168925,  0.015959, -0.137008,
          -0.289974, -0.16559 , -0.041205,  0.083179,  0.030087,...
 y: array([[[[-0.174691, -0.174691, -0.173955, -0.173218, -0.172481,
          -0.058679,  0.055123,  0.168925,  0.015959, -0.137008,
          -0.289974, -0.16559 , -0.041205,  0.083179,  0.030087,...
2025-05-15 02:03:10.903300 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[ 1.124268e-01,  1.949486e-01,  2.774704e-01,  3.599921e-01,
           2.507892e-01,  1.415862e-01,  3.238330e-02,  1.033912e-01,
           1.743990e-01,  2.454068e-01,  4.147741e-02, -1.624519e-01,...
 y: array([[[[ 1.124268e-01,  1.920014e-01,  2.715760e-01,  3.511505e-01,
           2.663896e-01,  1.610868e-01,  5.578392e-02,  8.563918e-02,
           1.541110e-01,  2.225829e-01,  1.143095e-01, -8.233665e-02,...
2025-05-15 02:03:11.063263 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[-3.449850e-01, -1.874819e-01, -2.997865e-02,  1.275245e-01,
           1.261504e-01,  7.938259e-02,  3.261483e-02,  3.089779e-02,
           6.522135e-02,  9.954491e-02,  6.640281e-02, -1.016710e-01,...
 y: array([[[[-0.196972, -0.196972, -0.1395  , -0.082028, -0.024555,
          -0.068106, -0.111656, -0.155206, -0.045397,  0.064412,
           0.17422 , -0.016734, -0.207689, -0.398643, -0.289645,...
2025-05-15 02:03:11.247907 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[-1.308855e-01, -1.493447e-02,  1.010165e-01,  2.169675e-01,
           2.290750e-01,  2.115129e-01,  1.939508e-01,  8.043280e-02,
          -1.098497e-01, -3.001322e-01, -3.918461e-01, -2.864218e-01,...
 y: array([[[[-0.130885, -0.010793,  0.109299,  0.229391,  0.226566,
           0.208377,  0.190187,  0.032862, -0.164216, -0.361295,
          -0.354195, -0.245005, -0.135816, -0.019121,  0.103577,...
2025-05-15 02:03:11.410377 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[-0.043032, -0.043032, -0.049095, ..., -0.176238, -0.175007,
          -0.175007],
         [-0.022001, -0.022001, -0.053137, ...,  0.284466,  0.359328,...
 y: array([[[[-4.303248e-02, -4.303248e-02, -4.909535e-02, -6.425253e-02,
          -7.940970e-02, -9.456687e-02, -9.135116e-02, -1.464404e-02,
           6.206311e-02,  1.387702e-01,  2.154774e-01,  1.080885e-01,...
2025-05-15 02:03:11.590991 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[-0.302242, -0.261551, -0.220861, ..., -0.392509, -0.392509,
          -0.392509],
         [ 0.264851,  0.234313,  0.203775, ...,  0.123089,  0.123089,...
 y: array([[[[-0.302242, -0.263789, -0.225337, -0.186885, -0.148432,
          -0.17609 , -0.256635, -0.33718 , -0.417725, -0.466938,
          -0.265498, -0.064058,  0.137383,  0.338823,  0.294106,...
2025-05-15 02:03:11.748323 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[-0.304681, -0.131999,  0.040683, ..., -0.057331, -0.074619,
          -0.091907],
         [-0.135033, -0.025291,  0.084451, ..., -0.091623, -0.039245,...
 y: array([[[[-8.833152e-02, -8.833152e-02, -4.965170e-02,  4.704786e-02,
           1.437474e-01,  2.404470e-01,  2.811736e-01,  9.800850e-02,
          -8.515663e-02, -2.683217e-01, -4.514868e-01, -3.654885e-01,...
2025-05-15 02:03:11.927708 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[ 0.328278,  0.309078,  0.289877, ...,  0.139644,  0.285752,
           0.431861],
         [ 0.142574,  0.20176 ,  0.260945, ...,  0.363809,  0.385146,...
 y: array([[[[ 3.282783e-01,  3.085975e-01,  2.889168e-01,  2.692360e-01,
           2.495553e-01,  1.619067e-01,  1.988405e-02, -1.221387e-01,
          -2.641615e-01, -3.763313e-01, -2.496763e-01, -1.230214e-01,...
2025-05-15 02:03:12.086096 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[-0.189604, -0.189604, -0.189604, ..., -0.048387, -0.048387,
          -0.048387],
         [-0.128791, -0.128791, -0.128791, ...,  0.438075,  0.438075,...
 y: array([[[[-0.189604, -0.189604, -0.189604, ..., -0.022278, -0.048387,
          -0.048387],
         [-0.128791, -0.128791, -0.128791, ...,  0.356312,  0.438075,...
2025-05-15 02:03:12.269034 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[-0.312328, -0.207264, -0.1022  , ...,  0.036531,  0.036531,
           0.036531],
         [-0.254328, -0.246031, -0.237734, ...,  0.246388,  0.246388,...
 y: array([[[[-0.312328, -0.214133, -0.115939, ...,  0.155727,  0.096129,
           0.036531],
         [-0.261695, -0.261067, -0.26044 , ...,  0.263237,  0.284597,...
2025-05-15 02:03:12.441957 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[-0.30987 , -0.294809, -0.279747, ...,  0.077909, -0.006753,
          -0.091415],
         [ 0.312479,  0.231778,  0.151077, ...,  0.095606,  0.228045,...
 y: array([[[[-0.200546, -0.200546, -0.200546, ...,  0.051763,  0.020681,
           0.020681],
         [ 0.386074,  0.386074,  0.386074, ...,  0.258576,  0.389387,...
2025-05-15 02:03:12.594556 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[-0.149732, -0.179387, -0.209041, ...,  0.238478,  0.236811,
           0.235143],
         [ 0.371829,  0.287387,  0.202944, ...,  0.252303,  0.34138 ,...
 y: array([[[[-0.149732, -0.179957, -0.210182, ...,  0.238543,  0.236843,
           0.235143],
         [ 0.371829,  0.285763,  0.199696, ...,  0.248877,  0.339667,...
2025-05-15 02:03:12.735330 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 379 / 432 (87.7%)
Max absolute difference: 0.3378352
Max relative difference: 179.07227
 x: array([[[[ 1.430213e-01, -1.651110e-02, -6.609973e-03, -7.043189e-02,
          -3.870960e-01,  3.540090e-01],
         [ 1.231597e-01,  1.887481e-01, -1.565596e-01,  2.296241e-02,...
 y: array([[[[ 0.003708,  0.088427, -0.026084, -0.096213, -0.262786,
           0.451941],
         [ 0.199717,  0.28712 , -0.243384,  0.045265,  0.088918,...
2025-05-15 02:03:12.912970 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 382 / 432 (88.4%)
Max absolute difference: 0.3340662
Max relative difference: 200.69968
 x: array([[[[-2.687932e-01,  1.353407e-01,  4.946202e-02,  1.033764e-01,
          -3.964858e-01, -2.955395e-01],
         [-3.015178e-01,  2.851315e-01,  7.139266e-02, -4.499535e-02,...
 y: array([[[[-0.097972,  0.028228,  0.121967,  0.148389, -0.408886,
          -0.28632 ],
         [-0.07214 ,  0.138995,  0.094452,  0.041166, -0.377528,...
2025-05-15 02:03:13.078620 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 383 / 432 (88.7%)
Max absolute difference: 0.5414917
Max relative difference: 234.25844
 x: array([[[[-1.083664e-01, -1.502295e-02, -7.517055e-02, -3.924292e-01,
          -2.232169e-02, -7.280824e-02],
         [ 1.217332e-01, -8.902001e-02,  6.422524e-02, -2.912271e-01,...
 y: array([[[[-0.108366,  0.059736, -0.057635, -0.148599, -0.179437,
           0.43949 ],
         [ 0.110905, -0.086957, -0.061244, -0.079796, -0.128355,...
2025-05-15 02:03:13.258050 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 349 / 432 (80.8%)
Max absolute difference: 0.2700209
Max relative difference: 297.8323
 x: array([[[[ 2.234022e-01, -1.644918e-01,  3.661364e-01,  2.228636e-01,
          -1.615082e-01, -4.992766e-01],
         [-4.243048e-02,  7.406540e-02,  2.210808e-01,  2.719644e-01,...
 y: array([[[[ 1.070464e-01, -1.741985e-01,  3.805668e-01,  2.661971e-01,
          -1.426947e-01, -4.117717e-01],
         [ 1.663082e-02, -2.321505e-03,  2.980278e-01,  2.903858e-01,...
2025-05-15 02:03:13.440534 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1035 / 1296 (79.9%)
Max absolute difference: 0.2808292
Max relative difference: 51.4439
 x: array([[[[ 0.425719,  0.399345,  0.345673, ...,  0.15718 , -0.192838,
          -0.434118],
         [ 0.054289,  0.147417,  0.262278, ...,  0.124188, -0.082383,...
 y: array([[[[ 0.339368,  0.34415 ,  0.294147, ...,  0.229566, -0.052804,
          -0.3308  ],
         [-0.113359,  0.099709,  0.233864, ...,  0.143114,  0.020403,...
2025-05-15 02:03:13.593652 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1067 / 1296 (82.3%)
Max absolute difference: 0.29831806
Max relative difference: 180.67918
 x: array([[[[-0.117847,  0.010388,  0.02006 , ...,  0.336864,  0.389645,
           0.470725],
         [ 0.104388,  0.025622, -0.054016, ...,  0.223583,  0.085721,...
 y: array([[[[-0.168077, -0.053349,  0.072574, ...,  0.378715,  0.494882,
           0.581145],
         [ 0.014008,  0.014942,  0.002388, ...,  0.246128,  0.194875,...
2025-05-15 02:03:13.739685 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1138 / 1296 (87.8%)
Max absolute difference: 0.43487275
Max relative difference: 16725.32
 x: array([[[[ 0.035237, -0.168698, -0.249139, ..., -0.143091, -0.046812,
          -0.027556],
         [-0.140493, -0.196864, -0.207537, ...,  0.03339 , -0.210011,...
 y: array([[[[ 0.035237, -0.159101, -0.28806 , ..., -0.194414, -0.119304,
          -0.027556],
         [-0.132223, -0.192559, -0.226764, ...,  0.160881, -0.0311  ,...
2025-05-15 02:03:13.914465 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 978 / 1296 (75.5%)
Max absolute difference: 0.18149
Max relative difference: 418.81448
 x: array([[[[ 0.104395, -0.102364, -0.276581, ...,  0.014858,  0.008999,
          -0.002083],
         [ 0.090667, -0.093131, -0.259946, ...,  0.064536,  0.153249,...
 y: array([[[[ 0.104395, -0.025786, -0.242755, ...,  0.016524,  0.004894,
          -0.002083],
         [ 0.095751, -0.025328, -0.227126, ...,  0.060089,  0.121496,...
2025-05-15 02:03:14.086318 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[ 0.136181,  0.136181,  0.254728, ...,  0.225157,  0.246791,
           0.246791],
         [ 0.126514,  0.126514,  0.231635, ...,  0.007508,  0.013289,...
 y: array([[[[ 0.136181,  0.136181,  0.254728, ...,  0.203523,  0.225157,
           0.246791],
         [ 0.126514,  0.126514,  0.231635, ...,  0.001726,  0.007508,...
2025-05-15 02:03:14.280020 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[-8.060321e-02, -1.741059e-01, -2.676087e-01, ...,
          -6.139091e-03, -6.139091e-03, -6.139091e-03],
         [-3.127460e-01, -2.311962e-01, -1.496463e-01, ...,...
 y: array([[[[-0.080603, -0.170767, -0.26093 , ...,  0.17272 ,  0.08329 ,
          -0.006139],
         [-0.301822, -0.231128, -0.160434, ..., -0.075443, -0.097478,...
2025-05-15 02:03:14.457870 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[-0.254751, -0.234474, -0.214197, ...,  0.168024,  0.067881,
          -0.032262],
         [-0.03264 , -0.084396, -0.136153, ...,  0.24988 ,  0.129103,...
 y: array([[[[-0.254751, -0.254751, -0.232972, ...,  0.18286 ,  0.075299,
          -0.032262],
         [-0.114903, -0.114903, -0.141838, ...,  0.236323,  0.114808,...
2025-05-15 02:03:14.635564 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[-0.180739, -0.014887,  0.150965, ...,  0.253244,  0.140142,
           0.027041],
         [-0.107686, -0.047384,  0.012918, ...,  0.086352,  0.142365,...
 y: array([[[[-0.180739, -0.008964,  0.162811, ...,  0.261323,  0.144182,
           0.027041],
         [-0.107686, -0.045231,  0.017225, ...,  0.082351,  0.140364,...
2025-05-15 02:03:14.803515 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[ 0.464858,  0.464858,  0.4291  , ..., -0.087593, -0.05391 ,
          -0.05391 ],
         [ 0.438468,  0.438468,  0.387335, ..., -0.152176, -0.155983,...
 y: array([[[[ 0.464858,  0.464858,  0.4291  , ..., -0.1718  , -0.087593,
          -0.05391 ],
         [ 0.438468,  0.438468,  0.387335, ..., -0.142656, -0.152176,...
2025-05-15 02:03:14.976295 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[-0.497163, -0.371424, -0.245685, ..., -0.282197, -0.282197,
          -0.282197],
         [-0.335092, -0.223255, -0.111417, ..., -0.383632, -0.383632,...
 y: array([[[[-0.497163, -0.37834 , -0.259517, ..., -0.225601, -0.253899,
          -0.282197],
         [-0.342719, -0.236414, -0.130109, ..., -0.127985, -0.253421,...
2025-05-15 02:03:15.130317 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[ 0.167589,  0.210521,  0.253453, ..., -0.271797, -0.309614,
          -0.347431],
         [-0.021925, -0.024153, -0.026381, ..., -0.269302, -0.320203,...
 y: array([[[[ 0.167589,  0.167589,  0.186216, ..., -0.290005, -0.331024,
          -0.347431],
         [ 0.048265,  0.048265,  0.054555, ..., -0.292401, -0.342355,...
2025-05-15 02:03:15.303183 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[-2.808203e-01, -2.413996e-01, -2.019789e-01, ...,
           3.997452e-01,  4.285156e-01,  4.572861e-01],
         [-9.623406e-02, -9.818114e-02, -1.001282e-01, ...,...
 y: array([[[[-0.28082 , -0.240414, -0.200008, ...,  0.398307,  0.427796,
           0.457286],
         [-0.096234, -0.09823 , -0.100226, ...,  0.268628,  0.251969,...
2025-05-15 02:03:15.476411 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[-4.081749e-01, -4.081749e-01, -4.081749e-01, ...,
           9.377543e-02,  9.377543e-02,  9.377543e-02],
         [-1.945103e-01, -1.945103e-01, -1.945103e-01, ...,...
 y: array([[[[-4.081749e-01, -4.081749e-01, -4.081749e-01, ...,
           1.015884e-01,  9.377543e-02,  9.377543e-02],
         [-1.945103e-01, -1.945103e-01, -1.945103e-01, ...,...
2025-05-15 02:03:15.643783 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[ 0.083928, -0.011284, -0.106496, ...,  0.026569,  0.026569,
           0.026569],
         [ 0.048618,  0.04178 ,  0.034942, ...,  0.125343,  0.125343,...
 y: array([[[[ 0.083928, -0.005059, -0.094045, ...,  0.172497,  0.099533,
           0.026569],
         [ 0.050279,  0.040002,  0.029724, ...,  0.132509,  0.126602,...
2025-05-15 02:03:15.815351 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[ 0.367592,  0.231884,  0.096175, ...,  0.064839,  0.052487,
           0.040135],
         [ 0.032925, -0.020442, -0.07381 , ...,  0.012193, -0.017645,...
 y: array([[[[ 0.367592,  0.367592,  0.367592, ...,  0.050911,  0.040135,
           0.040135],
         [ 0.156876,  0.156876,  0.156876, ...,  0.00535 , -0.015032,...
2025-05-15 02:03:15.981389 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[ 0.116224,  0.029801, -0.056622, ...,  0.040268,  0.147914,
           0.25556 ],
         [ 0.16926 ,  0.124712,  0.080164, ..., -0.027028, -0.004231,...
 y: array([[[[ 0.116224,  0.028139, -0.059945, ...,  0.036128,  0.145844,
           0.25556 ],
         [ 0.16926 ,  0.123855,  0.078451, ..., -0.027905, -0.00467 ,...
2025-05-15 02:03:16.150086 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[-3.322876e-01, -3.001404e-01,  2.895251e-01, -2.062071e-01,
           5.803205e-02, -6.408793e-02],
         [-3.322876e-01, -3.001404e-01,  2.895251e-01, -2.062071e-01,...
 y: array([[[[-3.322876e-01, -3.001404e-01,  2.895251e-01, -2.062071e-01,
           5.803205e-02, -6.408793e-02],
         [-3.322876e-01, -3.001404e-01,  2.895251e-01, -2.062071e-01,...
2025-05-15 02:03:16.326737 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[-0.230481, -0.178978, -0.114735,  0.167416, -0.191245,
           0.110672],
         [-0.041365, -0.193927, -0.171053, -0.018222, -0.144157,...
 y: array([[[[-2.304809e-01, -1.551373e-01, -2.119029e-01,  7.075049e-02,
          -2.009065e-01,  3.431374e-01],
         [-4.811887e-02, -1.771373e-01, -2.397490e-01,  1.864629e-02,...
2025-05-15 02:03:16.518341 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[ 0.186347,  0.251382, -0.398573,  0.192082,  0.397081,
           0.32508 ],
         [ 0.221924,  0.110734, -0.196788,  0.136783,  0.252435,...
 y: array([[[[ 0.088023,  0.341383, -0.39116 ,  0.234096,  0.423656,
           0.313647],
         [ 0.088023,  0.341383, -0.39116 ,  0.234096,  0.423656,...
2025-05-15 02:03:16.664450 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[ 4.419334e-01,  1.821521e-02,  5.986154e-02, -4.843003e-02,
           2.670896e-01,  3.273434e-01],
         [ 4.205112e-01,  5.319321e-02,  6.383927e-03,  5.456315e-03,...
 y: array([[[[ 4.419334e-01,  1.821521e-02,  5.986154e-02, -4.843003e-02,
           2.670896e-01,  3.273434e-01],
         [ 4.197461e-01,  5.444242e-02,  4.474012e-03,  7.380827e-03,...
2025-05-15 02:03:16.808289 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[ 0.174862,  0.158898,  0.13229 , ...,  0.034645,  0.160484,
           0.235988],
         [ 0.174862,  0.158898,  0.13229 , ...,  0.034645,  0.160484,...
 y: array([[[[ 0.174862,  0.158898,  0.13229 , ...,  0.034645,  0.160484,
           0.235988],
         [ 0.174862,  0.158898,  0.13229 , ...,  0.034645,  0.160484,...
2025-05-15 02:03:16.945839 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[-0.202099, -0.22785 , -0.193949, ..., -0.209404,  0.085226,
           0.144152],
         [-0.240903, -0.170854, -0.098087, ..., -0.148388,  0.078426,...
 y: array([[[[-2.020992e-01, -2.266380e-01, -2.195966e-01, ...,
          -3.565649e-01, -1.366134e-01,  1.441516e-01],
         [-2.395170e-01, -1.760250e-01, -1.100176e-01, ...,...
2025-05-15 02:03:17.084380 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[ 0.283722,  0.021281, -0.210613, ...,  0.331736,  0.189716,
           0.024946],
         [ 0.293495,  0.013816, -0.231816, ...,  0.116831,  0.136116,...
 y: array([[[[ 0.283722,  0.118481, -0.15692 , ...,  0.301597,  0.12869 ,
           0.024946],
         [ 0.283722,  0.118481, -0.15692 , ...,  0.301597,  0.12869 ,...
2025-05-15 02:03:17.269005 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[ 0.196427,  0.312155,  0.415359, ..., -0.47914 , -0.159586,
           0.210583],
         [ 0.219165,  0.189593,  0.16372 , ..., -0.203696, -0.063846,...
 y: array([[[[ 0.196427,  0.312155,  0.415359, ..., -0.47914 , -0.159586,
           0.210583],
         [ 0.219977,  0.185215,  0.154732, ..., -0.193859, -0.060427,...
2025-05-15 02:03:17.422464 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[-0.121323, -0.121323, -0.151662, ...,  0.090422,  0.347811,
           0.347811],
         [-0.121323, -0.121323, -0.151662, ...,  0.090422,  0.347811,...
 y: array([[[[-0.121323, -0.121323, -0.151662, ..., -0.166967,  0.090422,
           0.347811],
         [-0.121323, -0.121323, -0.151662, ..., -0.166967,  0.090422,...
2025-05-15 02:03:17.559569 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[-0.016974, -0.05216 , -0.087347, ...,  0.3216  ,  0.3216  ,
           0.3216  ],
         [-0.024496,  0.006479,  0.037454, ...,  0.055969,  0.055969,...
 y: array([[[[-0.016974, -0.050904, -0.084833, ...,  0.104228,  0.212914,
           0.3216  ],
         [-0.024228,  0.003363,  0.030953, ...,  0.101881,  0.083668,...
2025-05-15 02:03:17.696097 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[-0.154074, -0.007642,  0.13879 , ...,  0.201371,  0.28057 ,
           0.359768],
         [ 0.001349,  0.09099 ,  0.18063 , ...,  0.105443,  0.163847,...
 y: array([[[[-0.154074, -0.154074,  0.003205, ...,  0.189638,  0.274703,
           0.359768],
         [-0.154074, -0.154074,  0.003205, ...,  0.189638,  0.274703,...
2025-05-15 02:03:17.881838 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[-0.311394, -0.30006 , -0.288725, ..., -0.296828, -0.156757,
          -0.016687],
         [-0.323731, -0.290977, -0.258223, ..., -0.169835, -0.153294,...
 y: array([[[[-0.311394, -0.299655, -0.287915, ..., -0.306833, -0.16176 ,
          -0.016687],
         [-0.324172, -0.289456, -0.25474 , ..., -0.166166, -0.153603,...
2025-05-15 02:03:18.065404 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[ 0.454735,  0.454735,  0.437139, ...,  0.265964,  0.299995,
           0.299995],
         [ 0.454735,  0.454735,  0.437139, ...,  0.265964,  0.299995,...
 y: array([[[[ 0.454735,  0.454735,  0.437139, ...,  0.180886,  0.265964,
           0.299995],
         [ 0.454735,  0.454735,  0.437139, ...,  0.180886,  0.265964,...
2025-05-15 02:03:18.253904 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[-0.394189, -0.222854, -0.051519, ...,  0.484455,  0.484455,
           0.484455],
         [-0.234105, -0.13036 , -0.026615, ...,  0.338025,  0.338025,...
 y: array([[[[-0.394189, -0.232278, -0.070366, ...,  0.30107 ,  0.392763,
           0.484455],
         [-0.239822, -0.139502, -0.039182, ...,  0.176139,  0.259697,...
2025-05-15 02:03:18.406045 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[ 0.151975,  0.155462,  0.15895 , ...,  0.439381,  0.442554,
           0.445728],
         [ 0.083423,  0.115925,  0.148427, ...,  0.285134,  0.270082,...
 y: array([[[[ 0.151975,  0.151975,  0.153488, ...,  0.440909,  0.444351,
           0.445728],
         [ 0.151975,  0.151975,  0.153488, ...,  0.440909,  0.444351,...
2025-05-15 02:03:18.596244 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[ 1.327887e-01,  1.362966e-01,  1.398044e-01, ...,
          -3.566346e-02, -2.089164e-01, -3.821694e-01],
         [ 1.923262e-01,  1.613977e-01,  1.304692e-01, ...,...
 y: array([[[[ 1.327887e-01,  1.363843e-01,  1.399798e-01, ...,
          -2.700062e-02, -2.045846e-01, -3.821694e-01],
         [ 1.944525e-01,  1.614902e-01,  1.285279e-01, ...,...
2025-05-15 02:03:18.745548 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[-0.372426, -0.372426, -0.372426, ..., -0.473949, -0.473949,
          -0.473949],
         [-0.372426, -0.372426, -0.372426, ..., -0.473949, -0.473949,...
 y: array([[[[-0.372426, -0.372426, -0.372426, ..., -0.420621, -0.473949,
          -0.473949],
         [-0.372426, -0.372426, -0.372426, ..., -0.420621, -0.473949,...
2025-05-15 02:03:18.924337 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[-0.150968, -0.103665, -0.056362, ...,  0.020875,  0.020875,
           0.020875],
         [-0.250025, -0.211292, -0.172559, ...,  0.035593,  0.035593,...
 y: array([[[[-0.150968, -0.106758, -0.062547, ...,  0.060802,  0.040839,
           0.020875],
         [-0.246487, -0.210001, -0.173514, ...,  0.071948,  0.053508,...
2025-05-15 02:03:19.073444 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[ 2.514837e-01,  1.967044e-01,  1.419252e-01, ...,
          -1.048368e-01, -1.488011e-01, -1.927653e-01],
         [ 2.621322e-01,  2.226357e-01,  1.831392e-01, ...,...
 y: array([[[[ 0.251484,  0.251484,  0.251484, ..., -0.15441 , -0.192765,
          -0.192765],
         [ 0.251484,  0.251484,  0.251484, ..., -0.15441 , -0.192765,...
2025-05-15 02:03:19.256989 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[ 0.124412,  0.122373,  0.120334, ...,  0.063724,  0.151574,
           0.239423],
         [-0.033126, -0.014852,  0.003422, ..., -0.051125, -0.000516,...
 y: array([[[[ 1.244118e-01,  1.223339e-01,  1.202560e-01, ...,
           6.034557e-02,  1.498844e-01,  2.394232e-01],
         [-3.875207e-02, -1.938722e-02, -2.235962e-05, ...,...
2025-05-15 02:03:19.407424 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 463 / 676 (68.5%)
Max absolute difference: 0.11566351
Max relative difference: 44.904007
 x: array([[[[ 4.010480e-01,  2.223884e-01, -9.738155e-02, -2.003941e-01,
           1.005521e-01,  1.530791e-01, -2.195501e-01, -3.824653e-01,
           2.416899e-02,  2.076696e-01, -1.425871e-01, -1.896484e-01,...
 y: array([[[[ 3.478396e-01,  1.661595e-01, -1.090711e-01, -1.388801e-01,
           1.329827e-01,  1.574926e-01, -1.982024e-01, -3.633593e-01,
           5.265116e-04,  1.786266e-01, -8.812845e-02, -2.124088e-01,...
2025-05-15 02:03:19.548288 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 449 / 676 (66.4%)
Max absolute difference: 0.11527267
Max relative difference: 41.24228
 x: array([[[[-0.171716, -0.249049,  0.094272,  0.343855,  0.099738,
           0.217532, -0.169392, -0.31356 ,  0.25259 ,  0.084556,
          -0.331445, -0.235542,  0.485631],...
 y: array([[[[-0.195055, -0.294761,  0.035652,  0.382949,  0.079159,
           0.237099, -0.171699, -0.318787,  0.303354,  0.048081,
          -0.41008 , -0.169972,  0.566497],...
2025-05-15 02:03:19.685015 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 497 / 676 (73.5%)
Max absolute difference: 0.18712375
Max relative difference: 44.413208
 x: array([[[[ 6.283032e-05,  6.853739e-02, -1.215153e-01, -3.525949e-01,
          -4.576123e-01, -3.699748e-01, -1.273283e-01,  1.897241e-01,
           4.688244e-01,  4.535007e-01,  1.619485e-02, -2.298166e-01,...
 y: array([[[[ 6.283032e-05,  6.682552e-02, -1.064728e-01, -3.431131e-01,
          -4.663761e-01, -3.809295e-01, -1.695381e-01,  1.280005e-01,
           4.718891e-01,  4.569485e-01,  1.372432e-01, -2.058299e-01,...
2025-05-15 02:03:19.881776 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 374 / 676 (55.3%)
Max absolute difference: 0.06967741
Max relative difference: 59.978855
 x: array([[[[-0.274119,  0.082962,  0.012277, -0.070481,  0.250377,
           0.232415, -0.010716, -0.094316,  0.366313,  0.139781,
          -0.044123, -0.089406,  0.099924],...
 y: array([[[[-2.741188e-01,  3.718241e-02,  4.146381e-02, -9.516269e-02,
           2.339226e-01,  2.328753e-01, -1.071575e-02, -8.250497e-02,
           3.546955e-01,  1.223554e-01, -6.079850e-02, -6.513271e-02,...
2025-05-15 02:03:20.040657 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 100 / 104 (96.2%)
Max absolute difference: 0.9075623
Max relative difference: 505.3536
 x: array([[[[-0.547829,  0.32648 ],
         [ 0.152152, -0.249241],
         [ 0.302137, -0.573302],...
 y: array([[[[ 1.694522e-01,  4.874011e-01],
         [ 1.396788e-02,  1.739794e-01],
         [ 1.508441e-01, -1.790908e-02],...
2025-05-15 02:03:20.217643 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 101 / 104 (97.1%)
Max absolute difference: 0.8356426
Max relative difference: 2964.3093
 x: array([[[[-0.306686, -0.034357],
         [ 0.164512,  0.129893],
         [-0.074589,  0.337795],...
 y: array([[[[-3.180364e-01,  3.276533e-01],
         [ 1.140815e-01, -7.322854e-02],
         [ 9.478529e-02, -1.602646e-01],...
2025-05-15 02:03:20.370678 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 86 / 104 (82.7%)
Max absolute difference: 0.9317401
Max relative difference: 38.88573
 x: array([[[[-0.095439, -0.428456],
         [ 0.074584, -0.453603],
         [ 0.032643, -0.29841 ],...
 y: array([[[[-0.095439, -0.498958],
         [ 0.070334, -0.365406],
         [ 0.039282,  0.018634],...
2025-05-15 02:03:20.507673 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 102 / 104 (98.1%)
Max absolute difference: 0.83950883
Max relative difference: 41.64349
 x: array([[[[ 0.214442, -0.201066],
         [-0.301301,  0.190681],
         [-0.25364 ,  0.361199],...
 y: array([[[[-0.36977 ,  0.089903],
         [-0.249953, -0.03697 ],
         [-0.072743, -0.117386],...
2025-05-15 02:03:20.688860 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1078 / 1248 (86.4%)
Max absolute difference: 0.4197908
Max relative difference: 201.03688
 x: array([[[[-0.252283, -0.319887, -0.387492, ...,  0.422641,  0.427608,
           0.427608],
         [ 0.16748 ,  0.124616,  0.081751, ...,  0.112394,  0.085941,...
 y: array([[[[-0.252283, -0.315772, -0.379262, ...,  0.412059,  0.419834,
           0.427608],
         [ 0.156986,  0.11615 ,  0.075314, ...,  0.174833,  0.134658,...
2025-05-15 02:03:20.864690 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 900 / 1248 (72.1%)
Max absolute difference: 0.22486633
Max relative difference: 384.1503
 x: array([[[[ 0.37763 ,  0.094211, -0.189208, ...,  0.102591,  0.231994,
           0.361398],
         [ 0.440496,  0.175586, -0.089324, ...,  0.077117,  0.065466,...
 y: array([[[[ 3.776301e-01,  2.870935e-01, -1.469526e-02, ...,
           1.822699e-01,  3.200605e-01,  3.613977e-01],
         [ 4.324366e-01,  3.470545e-01,  6.244733e-02, ...,...
2025-05-15 02:03:21.016084 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 101 / 104 (97.1%)
Max absolute difference: 0.8536097
Max relative difference: 39.825706
 x: array([[[[-0.050674, -0.097087, -0.06562 , -0.091918, -0.315969,
          -0.004095,  0.136839, -0.129649, -0.46944 , -0.266148,
           0.132023,  0.364738,  0.335148],...
 y: array([[[[ 0.466182, -0.260649, -0.22553 , -0.01062 , -0.3868  ,
          -0.331188, -0.017935,  0.211333,  0.113854, -0.214483,
          -0.22636 , -0.009394,  0.095047],...
2025-05-15 02:03:21.189660 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 104 / 104 (100%)
Max absolute difference: 0.9597244
Max relative difference: 377.72382
 x: array([[[[ 0.221283,  0.379413,  0.040626, -0.325459, -0.201228,
          -0.115544,  0.24968 ,  0.362006,  0.010702,  0.378888,
           0.194059, -0.15947 , -0.06492 ],...
 y: array([[[[-0.055008, -0.406411, -0.272816,  0.133216,  0.000534,
          -0.257347, -0.182834, -0.19247 , -0.48273 ,  0.159966,
          -0.074825, -0.311293, -0.036139],...
2025-05-15 02:03:21.339742 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 77 / 104 (74%)
Max absolute difference: 0.7624643
Max relative difference: 20.834389
 x: array([[[[-0.456776, -0.177439, -0.14695 , -0.187128, -0.13877 ,
           0.220664,  0.124223,  0.091121,  0.12584 , -0.277385,
          -0.045503,  0.174106,  0.289174],...
 y: array([[[[-0.456776, -0.184422, -0.143142, -0.188163, -0.174714,
           0.175734,  0.155784,  0.065885,  0.206486, -0.18666 ,
          -0.121116,  0.128901,  0.289174],...
2025-05-15 02:03:21.517971 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 99 / 104 (95.2%)
Max absolute difference: 0.74042666
Max relative difference: 192.70184
 x: array([[[[-0.390694, -0.472128, -0.297013, -0.065906,  0.020641,
           0.364613,  0.418349,  0.162226, -0.423382, -0.268251,
          -0.338169, -0.421657, -0.307236],...
 y: array([[[[-0.492795, -0.300119, -0.07147 , -0.013816, -0.473988,
           0.181862,  0.00216 , -0.368788, -0.195743,  0.069874,
           0.233018,  0.299416,  0.290829],...
2025-05-15 02:03:21.668664 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.66105
Max relative difference: 3.423769
 x: array([[[[ 0.21138 ,  0.388444],
         [-0.192331,  0.231817]],
...
 y: array([[[[ 0.361176, -0.160363],
         [ 0.468719, -0.428461]],
...
2025-05-15 02:03:21.807841 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 14 / 16 (87.5%)
Max absolute difference: 0.79447186
Max relative difference: 99.22843
 x: array([[[[-0.336637,  0.436352],
         [-0.25965 ,  0.089414]],
...
 y: array([[[[ 0.457835,  0.12772 ],
         [ 0.248221, -0.238706]],
...
2025-05-15 02:03:21.984363 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 12 / 16 (75%)
Max absolute difference: 0.7389304
Max relative difference: 11.251327
 x: array([[[[ 0.483532, -0.492477],
         [ 0.123647, -0.156122]],
...
 y: array([[[[ 0.483532,  0.246453],
         [-0.375506,  0.480794]],
...
2025-05-15 02:03:22.155175 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.6315969
Max relative difference: 27.603659
 x: array([[[[ 0.003195,  0.178371],
         [-0.028394, -0.084355]],
...
 y: array([[[[ 0.434256, -0.429224],
         [-0.110199, -0.186685]],
...
2025-05-15 02:03:22.306554 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 165 / 192 (85.9%)
Max absolute difference: 0.7740977
Max relative difference: 60.984444
 x: array([[[[ 0.350241,  0.346423,  0.342605,  0.377401,  0.43794 ,
           0.40706 ,  0.010501, -0.386057, -0.276379, -0.040142,
           0.160535,  0.307871,  0.455208,  0.3361  ,  0.216991,...
 y: array([[[[ 0.350241,  0.346656,  0.34307 ,  0.366346,  0.4232  ,
           0.480054,  0.155332, -0.217089, -0.391416, -0.169559,
           0.052298,  0.20922 ,  0.347588,  0.430351,  0.318492,...
2025-05-15 02:03:22.485517 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 186 / 192 (96.9%)
Max absolute difference: 0.9658248
Max relative difference: 14786.094
 x: array([[[[ 9.903706e-02,  2.038693e-01,  3.087015e-01,  3.749231e-01,
           3.928815e-01,  4.108399e-01,  1.990388e-01, -4.148242e-02,
          -2.026403e-01, -2.050716e-01, -2.075029e-01, -1.858246e-01,...
 y: array([[[[-7.187783e-02, -1.882358e-02,  1.580239e-01,  3.348714e-01,
           2.072224e-01,  4.574037e-02, -1.025737e-01, -2.377200e-01,
          -3.567464e-01, -3.306947e-01, -3.046430e-01, -3.094288e-01,...
2025-05-15 02:03:22.660365 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1058 / 1248 (84.8%)
Max absolute difference: 0.42951018
Max relative difference: 2463.7957
 x: array([[[[-3.485144e-01, -3.244438e-02,  2.206628e-01, ...,
          -2.527669e-01, -4.373565e-01, -4.613594e-01],
         [-2.589263e-01, -7.118059e-02,  1.117179e-01, ...,...
 y: array([[[[-0.348514, -0.040346,  0.209357, ..., -0.150257, -0.427927,
          -0.461359],
         [-0.26438 , -0.073712,  0.10917 , ..., -0.078234, -0.283786,...
2025-05-15 02:03:22.808851 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 894 / 1248 (71.6%)
Max absolute difference: 0.22774506
Max relative difference: 1299.8254
 x: array([[[[-7.448593e-02, -1.916419e-01, -2.828521e-01, ...,
           2.595143e-01,  1.641098e-01, -1.539871e-01],
         [ 1.498197e-01, -9.714445e-02, -2.189478e-01, ...,...
 y: array([[[[-0.074486, -0.176622, -0.274828, ...,  0.261149,  0.123328,
          -0.153987],
         [-0.002833, -0.141119, -0.255037, ...,  0.210387,  0.099558,...
2025-05-15 02:03:22.990794 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 165 / 192 (85.9%)
Max absolute difference: 0.62104344
Max relative difference: 121.11996
 x: array([[[[-0.031375,  0.059567],
         [-0.017078, -0.091479],
         [-0.002781, -0.242525],...
 y: array([[[[-3.137517e-02, -8.062561e-02],
         [-1.794855e-02, -2.256527e-01],
         [-4.521925e-03, -3.706799e-01],...
2025-05-15 02:03:23.175173 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 186 / 192 (96.9%)
Max absolute difference: 0.84285897
Max relative difference: 979.50244
 x: array([[[[ 2.889301e-01,  3.192069e-01],
         [ 3.197067e-01,  1.715644e-01],
         [ 3.504833e-01,  2.392199e-02],...
 y: array([[[[ 3.249303e-03, -4.417020e-01],
         [-3.267306e-04, -3.767511e-01],
         [-1.224684e-02, -1.602480e-01],...
2025-05-15 02:03:23.323663 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2058 / 2304 (89.3%)
Max absolute difference: 0.5112123
Max relative difference: 188331.44
 x: array([[[[-3.204175e-01, -3.343284e-01, -3.482392e-01, ...,
           4.051918e-01,  4.903734e-01,  4.903734e-01],
         [-5.214163e-02, -1.311015e-01, -2.100613e-01, ...,...
 y: array([[[[-3.204175e-01, -3.334816e-01, -3.465457e-01, ...,
           2.237178e-01,  3.570458e-01,  4.903734e-01],
         [-6.847144e-02, -1.389066e-01, -2.093416e-01, ...,...
2025-05-15 02:03:23.506330 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1906 / 2304 (82.7%)
Max absolute difference: 0.27430066
Max relative difference: 510.27127
 x: array([[[[ 0.124999,  0.124529,  0.12406 , ..., -0.244563,  0.05699 ,
           0.358542],
         [-0.04013 ,  0.050467,  0.141064, ..., -0.259207, -0.002801,...
 y: array([[[[ 0.124999,  0.124849,  0.124349, ..., -0.058885,  0.262213,
           0.358542],
         [ 0.072249,  0.081392,  0.111868, ..., -0.072443,  0.233298,...
2025-05-15 02:03:23.673887 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 119 / 144 (82.6%)
Max absolute difference: 0.30575737
Max relative difference: 20.1313848
 x: array([[[[ 6.193528e-02,  3.697998e-01, -1.042063e-01, -7.974884e-02,
          -5.758066e-03,  6.989703e-02],
         [-2.441589e-01, -1.195672e-01,  3.084676e-01, -3.776758e-01,...
 y: array([[[[ 0.057505,  0.405305, -0.16128 , -0.0716  , -0.306722,
           0.233028],
         [-0.38769 , -0.102342,  0.315809, -0.359295, -0.254047,...
2025-05-15 02:03:23.849205 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 127 / 144 (88.2%)
Max absolute difference: 0.36184903
Max relative difference: 17.80788222
 x: array([[[[ 0.137434, -0.508527,  0.531201, -0.089193, -0.405769,
          -0.072919],
         [ 0.344458,  0.073858,  0.189785,  0.03795 ,  0.10788 ,...
 y: array([[[[ 0.121619, -0.189196,  0.326764, -0.08595 , -0.257371,
           0.018791],
         [ 0.347679, -0.069662,  0.260308,  0.035451,  0.048752,...
2025-05-15 02:03:24.020947 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 133 / 144 (92.4%)
Max absolute difference: 0.68456376
Max relative difference: 31.58012418
 x: array([[[[ 0.407436, -0.116514,  0.170325, -0.164655, -0.276441,
          -0.1503  ],
         [ 0.027909,  0.213278,  0.134196,  0.427099,  0.160321,...
 y: array([[[[ 0.407436, -0.120036, -0.091073, -0.245851, -0.221796,
          -0.079642],
         [-0.006662,  0.20287 ,  0.212161,  0.310625,  0.222491,...
2025-05-15 02:03:24.202204 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 130 / 144 (90.3%)
Max absolute difference: 0.29254835
Max relative difference: 36.97810471
 x: array([[[[-0.414032,  0.303828,  0.245624,  0.215076, -0.276639,
           0.02072 ],
         [-0.235709, -0.096514,  0.052208, -0.298075, -0.203587,...
 y: array([[[[-0.282881,  0.259537,  0.122506,  0.09975 , -0.236268,
           0.126769],
         [-0.290787, -0.029179,  0.148934, -0.355874, -0.369134,...
2025-05-15 02:03:24.351235 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 369 / 432 (85.4%)
Max absolute difference: 0.31666486
Max relative difference: 44.68523343
 x: array([[[[ 2.236723e-01, -4.057350e-02, -3.930175e-01, -2.974675e-01,
          -6.497275e-02, -2.843204e-01, -4.059359e-01, -1.260963e-01,
           6.739440e-02,  9.222354e-03, -1.246455e-01, -2.537998e-01,...
 y: array([[[[ 0.356944, -0.132033, -0.502417, -0.288765, -0.104768,
          -0.318655, -0.318456,  0.018213,  0.133154, -0.070831,
          -0.186575, -0.167133, -0.139446, -0.086477,  0.128653,...
2025-05-15 02:03:24.537338 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 382 / 432 (88.4%)
Max absolute difference: 0.33400329
Max relative difference: 3324.53725502
 x: array([[[[-0.316335, -0.398804, -0.385101, -0.222245,  0.06494 ,
           0.351873,  0.470106,  0.335412,  0.138401,  0.001437,
          -0.060473, -0.011813,  0.044677,  0.110873,  0.285402,...
 y: array([[[[-4.009425e-01, -2.990751e-01, -1.386438e-01,  6.548425e-04,
           1.186333e-01,  3.245137e-01,  4.052343e-01,  2.833950e-01,
           6.399560e-02, -1.159945e-01, -7.836880e-02,  1.303987e-01,...
2025-05-15 02:03:24.694441 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 379 / 432 (87.7%)
Max absolute difference: 0.50814732
Max relative difference: 764.65252969
 x: array([[[[-0.498629, -0.118573,  0.19118 ,  0.219722,  0.253765,
           0.29606 ,  0.05323 , -0.379684, -0.165662,  0.210093,
           0.346273,  0.411895,  0.19529 ,  0.078033,  0.109796,...
 y: array([[[[-4.986287e-01, -1.364578e-01,  1.884940e-01,  2.156927e-01,
           2.458038e-01,  2.861082e-01,  1.754642e-01, -2.370767e-01,
          -3.071229e-01,  5.094949e-02,  2.821880e-01,  4.119593e-01,...
2025-05-15 02:03:24.835475 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 370 / 432 (85.6%)
Max absolute difference: 0.2968165
Max relative difference: 1703.6031155
 x: array([[[[ 0.19881 ,  0.163608,  0.106398, -0.126881, -0.246205,
           0.033311,  0.105791, -0.235798, -0.377065, -0.267931,
          -0.128391,  0.035474,  0.009831, -0.110566, -0.152849,...
 y: array([[[[ 5.946124e-02,  3.937008e-02,  5.884802e-03, -2.805744e-02,
          -6.211392e-02,  1.266742e-01,  2.197652e-01, -6.993223e-02,
          -2.125397e-01, -1.345123e-01, -9.521390e-02, -8.173480e-02,...
2025-05-15 02:03:25.025394 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[ 3.358184e-01,  3.358184e-01,  8.297345e-02, -1.698714e-01,
          -4.227163e-01, -3.246967e-01, -2.266771e-01, -1.286575e-01,
          -1.917757e-01, -2.548939e-01, -3.180120e-01, -2.698826e-01,...
 y: array([[[[ 3.358184e-01,  3.358184e-01,  8.297348e-02, -1.698714e-01,
          -4.227163e-01, -3.246967e-01, -2.266771e-01, -1.286575e-01,
          -1.917757e-01, -2.548939e-01, -3.180120e-01, -2.698827e-01,...
2025-05-15 02:03:25.185776 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[ 0.366935,  0.093813, -0.179308, -0.45243 , -0.428659,
          -0.404889, -0.381119, -0.268206, -0.155294, -0.042382,
          -0.132509, -0.222635, -0.312762, -0.282071, -0.251381,...
 y: array([[[[ 0.366935,  0.103568, -0.159799, -0.423166, -0.432055,
          -0.409134, -0.386212, -0.296435, -0.187555, -0.078675,
          -0.100321, -0.187228, -0.274136, -0.296321, -0.266726,...
2025-05-15 02:03:25.330118 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[ 3.677341e-01,  3.131137e-01,  2.584932e-01,  2.038727e-01,
           1.823020e-01,  1.701740e-01,  1.580461e-01,  5.592674e-02,
          -1.181856e-01, -2.922979e-01, -3.953958e-01, -3.564641e-01,...
 y: array([[[[ 1.965691e-01,  1.965691e-01,  1.774132e-01,  1.582574e-01,
           1.391016e-01,  1.266837e-01,  1.142659e-01,  1.018481e-01,
          -2.306930e-02, -1.479867e-01, -2.729041e-01, -2.912406e-01,...
2025-05-15 02:03:25.519455 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 30), (2, 2, 6, 29) mismatch)
 x: array([[[[-0.283455, -0.058693,  0.16607 ,  0.390832,  0.358528,
           0.252776,  0.147025,  0.138833,  0.208688,  0.278544,
           0.252624,  0.035154, -0.182317, -0.369859, -0.317967,...
 y: array([[[[-0.283455, -0.050665,  0.182124,  0.414914,  0.34342 ,
           0.233892,  0.124364,  0.156297,  0.228647,  0.300998,
           0.174956, -0.050281, -0.275519, -0.345766, -0.292021,...
2025-05-15 02:03:25.675960 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[ 0.27176 ,  0.27176 ,  0.256694, ...,  0.158801,  0.154353,
           0.154353],
         [-0.40388 , -0.40388 , -0.367452, ...,  0.361093,  0.40444 ,...
 y: array([[[[ 2.717597e-01,  2.717597e-01,  2.566944e-01,  2.190314e-01,
           1.813684e-01,  1.437053e-01,  8.687530e-02, -4.662258e-02,
          -1.801205e-01, -3.136183e-01, -4.471162e-01, -4.229752e-01,...
2025-05-15 02:03:25.830132 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[-0.39498 , -0.203421, -0.011862, ..., -0.298708, -0.298708,
          -0.298708],
         [-0.050885, -0.019076,  0.012733, ...,  0.320796,  0.320796,...
 y: array([[[[-3.949796e-01, -2.139565e-01, -3.293334e-02,  1.480898e-01,
           3.291129e-01,  4.149733e-01,  4.247034e-01,  4.344335e-01,
           4.441636e-01,  4.323754e-01,  2.484399e-01,  6.450436e-02,...
2025-05-15 02:03:26.019050 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[ 0.250157,  0.189581,  0.129004, ...,  0.043541,  0.243258,
           0.442975],
         [ 0.386721,  0.340724,  0.294726, ...,  0.095456,  0.049267,...
 y: array([[[[ 2.450807e-01,  2.450807e-01,  2.344580e-01,  2.079012e-01,
           1.813444e-01,  1.547877e-01,  1.064042e-01, -2.928583e-02,
          -1.649759e-01, -3.006659e-01, -4.363560e-01, -3.948309e-01,...
2025-05-15 02:03:26.206964 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 42), (2, 2, 6, 41) mismatch)
 x: array([[[[-0.259347, -0.178771, -0.098195, ..., -0.146807, -0.11197 ,
          -0.077132],
         [-0.11627 , -0.072031, -0.027791, ..., -0.062558,  0.031574,...
 y: array([[[[-2.593469e-01, -1.767566e-01, -9.416636e-02, -1.157607e-02,
           7.101422e-02,  5.500466e-02, -3.988477e-02, -1.347742e-01,
          -2.296636e-01, -3.011902e-01, -1.858137e-01, -7.043719e-02,...
2025-05-15 02:03:26.368504 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[ 0.446036,  0.446036,  0.446036, ...,  0.01939 ,  0.01939 ,
           0.01939 ],
         [-0.349942, -0.349942, -0.349942, ..., -0.36612 , -0.36612 ,...
 y: array([[[[ 0.446036,  0.446036,  0.446036, ...,  0.012002,  0.01939 ,
           0.01939 ],
         [-0.349942, -0.349942, -0.349942, ..., -0.302125, -0.36612 ,...
2025-05-15 02:03:26.547840 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[-0.322393, -0.343101, -0.36381 , ...,  0.068337,  0.068337,
           0.068337],
         [ 0.285327,  0.264323,  0.243319, ..., -0.288825, -0.288825,...
 y: array([[[[-0.322393, -0.341747, -0.361102, ...,  0.094749,  0.081543,
           0.068337],
         [ 0.323939,  0.310173,  0.296406, ..., -0.209222, -0.283406,...
2025-05-15 02:03:26.725914 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[-0.380068, -0.319624, -0.25918 , ..., -0.004162,  0.075826,
           0.155814],
         [ 0.26745 ,  0.16468 ,  0.06191 , ..., -0.106465, -0.119697,...
 y: array([[[[-0.415406, -0.415406, -0.415406, ...,  0.196574,  0.240995,
           0.240995],
         [ 0.455833,  0.455833,  0.455833, ..., -0.256147, -0.269001,...
2025-05-15 02:03:26.900440 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 6, 54), (2, 2, 6, 53) mismatch)
 x: array([[[[ 0.062064,  0.099878,  0.137692, ..., -0.017015,  0.009062,
           0.035139],
         [-0.064574, -0.10786 , -0.151147, ..., -0.08099 ,  0.022289,...
 y: array([[[[ 0.062064,  0.100605,  0.139146, ..., -0.018018,  0.00856 ,
           0.035139],
         [-0.064574, -0.108693, -0.152811, ..., -0.084962,  0.020303,...
2025-05-15 02:03:27.069658 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 378 / 432 (87.5%)
Max absolute difference: 0.3432062
Max relative difference: 151.74760112
 x: array([[[[-0.086167,  0.042404, -0.360535,  0.379469, -0.105625,
          -0.256269],
         [ 0.113975, -0.176667, -0.193962,  0.2785  , -0.021289,...
 y: array([[[[-1.972418e-01,  7.714580e-02, -3.283015e-01,  3.306823e-01,
          -4.293285e-02, -3.911774e-01],
         [ 1.047490e-01, -1.970705e-01, -9.891648e-02,  2.049499e-01,...
2025-05-15 02:03:27.253635 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 376 / 432 (87%)
Max absolute difference: 0.34957713
Max relative difference: 87.45300005
 x: array([[[[ 0.136784,  0.295218,  0.179344, -0.323784,  0.069913,
           0.043301],
         [-0.127787,  0.060768,  0.166156, -0.348453, -0.281774,...
 y: array([[[[-0.056345,  0.434841,  0.243003, -0.349916,  0.037857,
           0.219969],
         [-0.173801,  0.220968,  0.240697, -0.371193, -0.179425,...
2025-05-15 02:03:27.456237 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 381 / 432 (88.2%)
Max absolute difference: 0.47270095
Max relative difference: 896.6905433
 x: array([[[[ 0.029184,  0.167777,  0.23307 ,  0.237347,  0.193035,
          -0.318231],
         [ 0.067289, -0.129349,  0.016177, -0.059546, -0.05847 ,...
 y: array([[[[ 2.918364e-02,  1.839456e-01,  3.134781e-01,  1.624835e-01,
           1.329724e-01, -1.687434e-01],
         [ 6.549546e-02, -1.289203e-01,  1.167942e-01,  6.883849e-03,...
2025-05-15 02:03:27.617774 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 360 / 432 (83.3%)
Max absolute difference: 0.27100166
Max relative difference: 81.04613136
 x: array([[[[-0.24826 ,  0.082943, -0.222304, -0.268237,  0.312394,
          -0.256776],
         [ 0.052562, -0.103361, -0.037631, -0.205697,  0.164905,...
 y: array([[[[-0.129645,  0.076783, -0.196894, -0.29646 ,  0.373835,
          -0.148975],
         [ 0.029777, -0.094709, -0.071077, -0.264587,  0.288766,...
2025-05-15 02:03:27.814555 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1086 / 1296 (83.8%)
Max absolute difference: 0.26919173
Max relative difference: 1187.60665479
 x: array([[[[ 4.902289e-01,  1.933138e-01, -2.282602e-01, ...,
          -1.056334e-01, -2.114617e-01, -2.707934e-01],
         [ 6.819417e-02, -1.286870e-01, -3.782235e-01, ...,...
 y: array([[[[ 3.364226e-01, -1.729024e-02, -3.258093e-01, ...,
          -5.231210e-03, -1.290444e-01, -2.018245e-01],
         [-1.928602e-01, -3.964817e-01, -4.222034e-01, ...,...
2025-05-15 02:03:27.969773 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1067 / 1296 (82.3%)
Max absolute difference: 0.25601614
Max relative difference: 318.62702983
 x: array([[[[ 0.477643,  0.378283,  0.237398, ..., -0.260354, -0.09129 ,
           0.052995],
         [ 0.481102,  0.218625,  0.004175, ..., -0.224596, -0.196627,...
 y: array([[[[ 0.49595 ,  0.437784,  0.336801, ..., -0.204382, -0.002536,
           0.1314  ],
         [ 0.516419,  0.363828,  0.146405, ..., -0.209527, -0.12738 ,...
2025-05-15 02:03:28.109336 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1122 / 1296 (86.6%)
Max absolute difference: 0.42464933
Max relative difference: 484.85738633
 x: array([[[[ 0.421371,  0.389284,  0.301403, ...,  0.311308,  0.07918 ,
           0.032755],
         [ 0.290196,  0.357402,  0.357421, ...,  0.255385,  0.261507,...
 y: array([[[[ 0.421371,  0.390794,  0.330679, ...,  0.438731,  0.253959,
           0.032755],
         [ 0.296369,  0.355959,  0.380264, ...,  0.255586,  0.256759,...
2025-05-15 02:03:28.249062 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 974 / 1296 (75.2%)
Max absolute difference: 0.17036235
Max relative difference: 825.46285829
 x: array([[[[ 0.249019,  0.219104,  0.15297 , ...,  0.002708,  0.000518,
          -0.03416 ],
         [-0.109021,  0.100374,  0.260134, ..., -0.141654, -0.076132,...
 y: array([[[[ 0.249019,  0.230184,  0.198792, ...,  0.024064, -0.012326,
          -0.03416 ],
         [ 0.023586,  0.099622,  0.226347, ..., -0.061262, -0.040369,...
2025-05-15 02:03:28.386333 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[-0.202777, -0.202777, -0.207897, ..., -0.071938, -0.149598,
          -0.149598],
         [-0.220949, -0.220949, -0.211515, ..., -0.068215, -0.189012,...
 y: array([[[[-0.202777, -0.202777, -0.207897, ...,  0.005723, -0.071938,
          -0.149598],
         [-0.220949, -0.220949, -0.211515, ...,  0.052581, -0.068215,...
2025-05-15 02:03:28.524103 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[-0.312984, -0.14155 ,  0.029884, ...,  0.210372,  0.210372,
           0.210372],
         [ 0.03805 ,  0.131524,  0.224998, ..., -0.084632, -0.084632,...
 y: array([[[[-0.312984, -0.147673,  0.017638, ...,  0.322565,  0.266469,
           0.210372],
         [ 0.02153 ,  0.115204,  0.208877, ...,  0.238172,  0.083711,...
2025-05-15 02:03:28.712888 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[ 0.052868,  0.06473 ,  0.076591, ...,  0.065223, -0.023483,
          -0.112189],
         [-0.185182, -0.064625,  0.055933, ...,  0.107331,  0.146701,...
 y: array([[[[ 0.052868,  0.052868,  0.065608, ...,  0.078365, -0.016912,
          -0.112189],
         [-0.097015, -0.097015, -0.010768, ...,  0.09293 ,  0.084267,...
2025-05-15 02:03:28.863752 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 30), (2, 2, 18, 29) mismatch)
 x: array([[[[-0.220105, -0.206345, -0.192585, ..., -0.003437, -0.154922,
          -0.306406],
         [ 0.129393, -0.005827, -0.141047, ..., -0.059059, -0.016601,...
 y: array([[[[-0.220105, -0.205854, -0.191602, ...,  0.007383, -0.149512,
          -0.306406],
         [ 0.129393, -0.010656, -0.150706, ..., -0.062092, -0.018118,...
2025-05-15 02:03:29.001905 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[-0.290441, -0.290441, -0.242493, ...,  0.043653,  0.062356,
           0.062356],
         [-0.091868, -0.091868, -0.073697, ...,  0.12523 ,  0.150132,...
 y: array([[[[-0.290441, -0.290441, -0.242493, ..., -0.003104,  0.043653,
           0.062356],
         [-0.091868, -0.091868, -0.073697, ...,  0.062974,  0.12523 ,...
2025-05-15 02:03:29.186627 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[ 0.237869,  0.122531,  0.007193, ...,  0.23443 ,  0.23443 ,
           0.23443 ],
         [ 0.218433,  0.144423,  0.070413, ...,  0.345823,  0.345823,...
 y: array([[[[ 2.378688e-01,  1.288743e-01,  1.987977e-02, ...,
           7.747991e-02,  1.559552e-01,  2.344304e-01],
         [ 2.193480e-01,  1.475707e-01,  7.579333e-02, ...,...
2025-05-15 02:03:29.336998 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[-0.349541, -0.242152, -0.134762, ...,  0.289179,  0.216027,
           0.142875],
         [-0.043859, -0.033988, -0.024118, ...,  0.137539,  0.201323,...
 y: array([[[[-0.349541, -0.349541, -0.302949, ...,  0.253958,  0.174613,
           0.142875],
         [-0.157075, -0.157075, -0.137122, ...,  0.199993,  0.214167,...
2025-05-15 02:03:29.514158 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 42), (2, 2, 18, 41) mismatch)
 x: array([[[[ 0.0101  , -0.085939, -0.181978, ...,  0.175165,  0.319038,
           0.462911],
         [ 0.035021, -0.0174  , -0.069821, ...,  0.16694 ,  0.192055,...
 y: array([[[[ 0.0101  , -0.08834 , -0.18678 , ...,  0.167971,  0.315441,
           0.462911],
         [ 0.035021, -0.01871 , -0.072442, ...,  0.165684,  0.191427,...
2025-05-15 02:03:29.694412 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[ 0.156521,  0.156521,  0.156521, ..., -0.42839 , -0.42839 ,
          -0.42839 ],
         [ 0.144783,  0.144783,  0.144783, ..., -0.291593, -0.291593,...
 y: array([[[[ 0.156521,  0.156521,  0.156521, ..., -0.414441, -0.42839 ,
          -0.42839 ],
         [ 0.144783,  0.144783,  0.144783, ..., -0.300074, -0.291593,...
2025-05-15 02:03:29.874152 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[ 2.341799e-01,  1.378847e-01,  4.158936e-02, ...,
          -3.590178e-01, -3.590178e-01, -3.590178e-01],
         [-5.115867e-03,  1.719004e-02,  3.949595e-02, ...,...
 y: array([[[[ 2.341799e-01,  1.441809e-01,  5.418182e-02, ...,
          -8.639734e-02, -2.227076e-01, -3.590178e-01],
         [ 6.145123e-03,  2.177626e-02,  3.740740e-02, ...,...
2025-05-15 02:03:30.055407 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[-0.111933, -0.173596, -0.235259, ...,  0.395252,  0.442317,
           0.489382],
         [-0.28675 , -0.273816, -0.260881, ...,  0.13279 ,  0.15354 ,...
 y: array([[[[-0.111933, -0.111933, -0.111933, ...,  0.448321,  0.489382,
           0.489382],
         [-0.222003, -0.222003, -0.222003, ...,  0.264385,  0.290991,...
2025-05-15 02:03:30.226306 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 18, 54), (2, 2, 18, 53) mismatch)
 x: array([[[[-0.355338, -0.255623, -0.155908, ...,  0.106836,  0.081435,
           0.056033],
         [-0.06421 , -0.00804 ,  0.048129, ..., -0.061208, -0.083696,...
 y: array([[[[-0.355338, -0.253706, -0.152073, ...,  0.107813,  0.081923,
           0.056033],
         [-0.06421 , -0.00696 ,  0.05029 , ..., -0.060343, -0.083263,...
2025-05-15 02:03:30.366094 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[ 9.103892e-02,  3.185123e-01,  6.777130e-03,  1.192619e-01,
           4.733024e-01, -1.039059e-01],
         [ 9.103892e-02,  3.185122e-01,  6.777132e-03,  1.192619e-01,...
 y: array([[[[ 9.103893e-02,  3.185123e-01,  6.777104e-03,  1.192618e-01,
           4.733024e-01, -1.039057e-01],
         [ 9.103893e-02,  3.185123e-01,  6.777104e-03,  1.192618e-01,...
2025-05-15 02:03:30.557463 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[ 0.078903,  0.083975,  0.171791, -0.128136,  0.122145,
          -0.267948],
         [-0.0369  ,  0.102753,  0.020704, -0.135119,  0.16522 ,...
 y: array([[[[ 7.890328e-02,  1.600163e-01,  9.938036e-02, -4.168056e-02,
           1.886105e-02,  1.212788e-01],
         [-3.276391e-02,  1.633308e-01, -2.626230e-02, -4.061025e-02,...
2025-05-15 02:03:30.721955 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[-8.468550e-02, -4.198951e-01,  8.462524e-02, -1.194260e-01,
           1.156869e-01,  3.211934e-01],
         [-1.657062e-01, -2.668780e-01,  9.017508e-02, -1.742494e-01,...
 y: array([[[[-1.197166e-01, -4.774242e-01,  5.760148e-02, -9.494730e-02,
           1.694786e-01,  1.809689e-01],
         [-1.197166e-01, -4.774242e-01,  5.760148e-02, -9.494730e-02,...
2025-05-15 02:03:30.921123 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 6), (2, 2, 29, 6) mismatch)
 x: array([[[[ 0.165283,  0.474051,  0.115904,  0.085936,  0.119074,
           0.333047],
         [ 0.005727,  0.277634,  0.053926,  0.102743,  0.121693,...
 y: array([[[[ 1.652832e-01,  4.740512e-01,  1.159044e-01,  8.593574e-02,
           1.190743e-01,  3.330467e-01],
         [ 2.866889e-05,  2.706195e-01,  5.171282e-02,  1.033429e-01,...
2025-05-15 02:03:31.111437 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[-0.396814, -0.253728, -0.015251, ..., -0.399166, -0.216024,
          -0.106139],
         [-0.396814, -0.253728, -0.01525 , ..., -0.399166, -0.216024,...
 y: array([[[[-0.396814, -0.253728, -0.015251, ..., -0.399166, -0.216025,
          -0.106139],
         [-0.396814, -0.253728, -0.015251, ..., -0.399166, -0.216025,...
2025-05-15 02:03:31.285759 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[-0.147083,  0.071571,  0.274585, ..., -0.359313, -0.159793,
          -0.119889],
         [-0.068748, -0.029611,  0.045598, ..., -0.176443, -0.127476,...
 y: array([[[[-1.470831e-01,  6.128129e-02,  2.613657e-01, ...,
          -4.540951e-01, -3.100197e-01, -1.198887e-01],
         [-7.154614e-02, -2.814096e-02,  3.338355e-02, ...,...
2025-05-15 02:03:31.440585 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[ 0.009513,  0.111463,  0.163833, ...,  0.059199, -0.003476,
          -0.044402],
         [ 0.02979 ,  0.11595 ,  0.166327, ..., -0.076712, -0.118769,...
 y: array([[[[ 0.009513,  0.073703,  0.180688, ...,  0.024313, -0.018634,
          -0.044402],
         [ 0.009513,  0.073703,  0.180688, ...,  0.024313, -0.018634,...
2025-05-15 02:03:31.619816 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 18), (2, 2, 29, 18) mismatch)
 x: array([[[[-0.161793,  0.124706,  0.334995, ..., -0.139269, -0.227408,
          -0.333834],
         [-0.088856,  0.067079,  0.184886, ..., -0.163704, -0.252204,...
 y: array([[[[-0.161793,  0.124706,  0.334995, ..., -0.139269, -0.227408,
          -0.333834],
         [-0.086251,  0.06502 ,  0.179525, ..., -0.164576, -0.25309 ,...
2025-05-15 02:03:31.800140 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[-0.377585, -0.377585, -0.379031, ...,  0.081027,  0.170665,
           0.170665],
         [-0.377585, -0.377585, -0.379031, ...,  0.081027,  0.170665,...
 y: array([[[[-0.377585, -0.377585, -0.379031, ..., -0.008612,  0.081027,
           0.170665],
         [-0.377585, -0.377585, -0.379031, ..., -0.008612,  0.081027,...
2025-05-15 02:03:31.975318 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[ 0.265356,  0.087608, -0.090141, ...,  0.382338,  0.382338,
           0.382338],
         [ 0.238972,  0.114308, -0.010355, ...,  0.335989,  0.335989,...
 y: array([[[[ 0.265356,  0.093956, -0.077444, ...,  0.230599,  0.306469,
           0.382338],
         [ 0.239914,  0.117875, -0.004165, ...,  0.085494,  0.211569,...
2025-05-15 02:03:32.144833 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[ 4.476651e-02, -1.014072e-01, -2.475810e-01, ...,
          -7.956605e-02,  7.252741e-02,  2.246204e-01],
         [-5.394611e-03, -1.277976e-01, -2.502005e-01, ...,...
 y: array([[[[ 4.476651e-02,  4.476651e-02, -1.122349e-01, ...,
          -1.020980e-01,  6.126119e-02,  2.246204e-01],
         [ 4.476651e-02,  4.476651e-02, -1.122349e-01, ...,...
2025-05-15 02:03:32.320492 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 30), (2, 2, 29, 29) mismatch)
 x: array([[[[-0.046623, -0.17019 , -0.293756, ..., -0.25918 , -0.093368,
           0.072443],
         [ 0.028361, -0.054652, -0.137666, ..., -0.094537, -0.026151,...
 y: array([[[[-0.046623, -0.174603, -0.302582, ..., -0.271023, -0.09929 ,
           0.072443],
         [ 0.031039, -0.053439, -0.137917, ..., -0.093293, -0.026069,...
2025-05-15 02:03:32.501097 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[ 0.301742,  0.301742,  0.318588, ...,  0.093111,  0.142338,
           0.142338],
         [ 0.301742,  0.301742,  0.318588, ...,  0.093111,  0.142338,...
 y: array([[[[ 0.301742,  0.301742,  0.318588, ..., -0.029956,  0.093111,
           0.142338],
         [ 0.301742,  0.301742,  0.318588, ..., -0.029956,  0.093111,...
2025-05-15 02:03:32.673997 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[ 0.157128,  0.169128,  0.181128, ...,  0.185961,  0.185961,
           0.185961],
         [ 0.038936,  0.086992,  0.135049, ...,  0.163282,  0.163282,...
 y: array([[[[ 1.571276e-01,  1.684679e-01,  1.798083e-01, ...,
           2.610492e-01,  2.235052e-01,  1.859612e-01],
         [ 4.315686e-02,  8.735350e-02,  1.315501e-01, ...,...
2025-05-15 02:03:32.853434 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[-0.200933, -0.197149, -0.193366, ...,  0.31156 ,  0.362844,
           0.414128],
         [-0.163006, -0.148481, -0.133956, ...,  0.248378,  0.262938,...
 y: array([[[[-0.200933, -0.200933, -0.199291, ...,  0.336252,  0.391878,
           0.414128],
         [-0.200933, -0.200933, -0.199291, ...,  0.336252,  0.391878,...
2025-05-15 02:03:33.026368 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 42), (2, 2, 29, 41) mismatch)
 x: array([[[[-0.27851 , -0.315993, -0.353475, ..., -0.008031,  0.106244,
           0.22052 ],
         [-0.105302, -0.131796, -0.158291, ...,  0.051421,  0.129321,...
 y: array([[[[-0.27851 , -0.31693 , -0.35535 , ..., -0.013745,  0.103387,
           0.22052 ],
         [-0.099116, -0.12587 , -0.152625, ...,  0.049714,  0.12823 ,...
2025-05-15 02:03:33.209405 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[ 0.062643,  0.062643,  0.062643, ..., -0.333447, -0.333447,
          -0.333447],
         [ 0.062643,  0.062643,  0.062643, ..., -0.333447, -0.333447,...
 y: array([[[[ 0.062643,  0.062643,  0.062643, ..., -0.317431, -0.333447,
          -0.333447],
         [ 0.062643,  0.062643,  0.062643, ..., -0.317431, -0.333447,...
2025-05-15 02:03:33.443918 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[-0.259078, -0.208793, -0.158508, ..., -0.439534, -0.439534,
          -0.439534],
         [-0.098729, -0.08356 , -0.068392, ..., -0.32059 , -0.32059 ,...
 y: array([[[[-0.259078, -0.212081, -0.165083, ..., -0.164514, -0.302024,
          -0.439534],
         [-0.104455, -0.089107, -0.073758, ..., -0.147193, -0.236016,...
2025-05-15 02:03:33.602927 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[-0.399392, -0.35974 , -0.320087, ...,  0.234928,  0.332964,
           0.431001],
         [-0.334581, -0.296926, -0.259272, ...,  0.154072,  0.232117,...
 y: array([[[[-0.399392, -0.399392, -0.399392, ...,  0.345471,  0.431001,
           0.431001],
         [-0.399392, -0.399392, -0.399392, ...,  0.345471,  0.431001,...
2025-05-15 02:03:33.762821 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2, 2, 30, 54), (2, 2, 29, 53) mismatch)
 x: array([[[[ 0.456867,  0.428521,  0.400174, ..., -0.205339, -0.173558,
          -0.141777],
         [ 0.281769,  0.246231,  0.210692, ..., -0.119649, -0.119813,...
 y: array([[[[ 0.456867,  0.427976,  0.399084, ..., -0.206562, -0.174169,
          -0.141777],
         [ 0.275516,  0.239032,  0.202548, ..., -0.116539, -0.117868,...
2025-05-15 02:03:33.915074 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 484 / 676 (71.6%)
Max absolute difference: 0.12203374
Max relative difference: 30.08162616
 x: array([[[[ 5.869841e-01,  3.380285e-01, -1.240467e-01, -2.463317e-01,
           2.373413e-01, -3.693236e-01, -9.609343e-02,  2.553762e-01,
          -1.838780e-01,  4.957644e-01, -7.465938e-02, -2.433307e-01,...
 y: array([[[[ 0.49393 ,  0.243881, -0.183463, -0.202065,  0.242704,
          -0.345391, -0.074161,  0.270083, -0.171474,  0.408422,
           0.004705, -0.314937,  0.472047],...
2025-05-15 02:03:34.078158 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 466 / 676 (68.9%)
Max absolute difference: 0.11601128
Max relative difference: 36.28186979
 x: array([[[[-3.873608e-01, -5.481362e-02, -2.894482e-02, -1.514437e-01,
          -6.253578e-02,  2.548916e-01,  2.259367e-02, -3.298052e-01,
          -2.271627e-01, -5.000392e-02, -3.174422e-01, -2.982824e-01,...
 y: array([[[[-0.464317, -0.11252 ,  0.001257, -0.131626, -0.047705,
           0.288419,  0.045935, -0.332837, -0.225775, -0.026298,
          -0.357425, -0.209364,  0.490904],...
2025-05-15 02:03:34.251162 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 511 / 676 (75.6%)
Max absolute difference: 0.23061544
Max relative difference: 218.97508044
 x: array([[[[ 0.451185, -0.227238, -0.304393, -0.148073, -0.034256,
           0.023879,  0.269261,  0.084049, -0.340461,  0.187465,
           0.343726,  0.326935,  0.253695],...
 y: array([[[[ 4.511850e-01, -2.102774e-01, -3.134196e-01, -1.570729e-01,
          -4.006902e-02,  1.661185e-02,  2.254321e-01,  2.000075e-01,
          -4.460462e-01,  6.868146e-02,  3.149850e-01,  3.557081e-01,...
2025-05-15 02:03:34.417102 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 416 / 676 (61.5%)
Max absolute difference: 0.0882213
Max relative difference: 71.58084322
 x: array([[[[ 0.431528, -0.179976, -0.4164  , -0.219455,  0.469147,
           0.295575,  0.266919,  0.134394, -0.350784,  0.151498,
           0.349843,  0.231511, -0.216239],...
 y: array([[[[ 4.315283e-01, -1.015782e-01, -4.113862e-01, -2.724242e-01,
           4.338340e-01,  3.000260e-01,  2.669192e-01,  1.219537e-01,
          -3.250258e-01,  1.901350e-01,  3.545997e-01,  1.741073e-01,...
2025-05-15 02:03:34.586628 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 102 / 104 (98.1%)
Max absolute difference: 0.96531794
Max relative difference: 39.31504554
 x: array([[[[-2.000847e-01,  2.407664e-01],
         [-3.331067e-01,  9.595371e-02],
         [-3.990099e-01,  2.194132e-01],...
 y: array([[[[-0.045418, -0.023048],
         [-0.217035,  0.007621],
         [ 0.109493,  0.058149],...
2025-05-15 02:03:34.747557 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 100 / 104 (96.2%)
Max absolute difference: 0.8785879
Max relative difference: 478.78319348
 x: array([[[[ 0.345699, -0.256791],
         [ 0.333819,  0.136331],
         [ 0.115413,  0.005527],...
 y: array([[[[ 0.417508,  0.320704],
         [ 0.180743,  0.30896 ],
         [ 0.11154 ,  0.164991],...
2025-05-15 02:03:34.915562 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 81 / 104 (77.9%)
Max absolute difference: 0.89148571
Max relative difference: 27.58772655
 x: array([[[[-0.004465, -0.239951],
         [-0.23533 , -0.262463],
         [-0.009692, -0.355559],...
 y: array([[[[-0.004465, -0.356774],
         [-0.229558,  0.187757],
         [-0.030756,  0.058012],...
2025-05-15 02:03:35.076124 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 102 / 104 (98.1%)
Max absolute difference: 0.74913736
Max relative difference: 468.10698762
 x: array([[[[-0.431269, -0.249978],
         [-0.158037,  0.076602],
         [ 0.106798, -0.105756],...
 y: array([[[[-0.055574,  0.214386],
         [-0.258594,  0.298874],
         [-0.321603,  0.181447],...
2025-05-15 02:03:35.232478 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1067 / 1248 (85.5%)
Max absolute difference: 0.45365613
Max relative difference: 158.62289925
 x: array([[[[-0.290365, -0.335138, -0.379912, ..., -0.165682, -0.229785,
          -0.229785],
         [-0.412636, -0.313949, -0.215263, ...,  0.170932,  0.11413 ,...
 y: array([[[[-0.290365, -0.332413, -0.374461, ..., -0.029114, -0.129449,
          -0.229785],
         [-0.409579, -0.320268, -0.230956, ...,  0.283918,  0.194725,...
2025-05-15 02:03:35.384605 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 905 / 1248 (72.5%)
Max absolute difference: 0.19778932
Max relative difference: 217.90351653
 x: array([[[[ 0.07392 ,  0.042759,  0.011598, ...,  0.046339, -0.195684,
          -0.437706],
         [-0.176766, -0.029502,  0.117762, ..., -0.304528, -0.382891,...
 y: array([[[[ 0.07392 ,  0.063965,  0.030785, ..., -0.102684, -0.360394,
          -0.437706],
         [-0.144627, -0.104892,  0.02756 , ..., -0.320716, -0.4265  ,...
2025-05-15 02:03:35.552315 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 101 / 104 (97.1%)
Max absolute difference: 0.94888809
Max relative difference: 70.41663226
 x: array([[[[ 0.490665,  0.080697, -0.129155, -0.095941, -0.239233,
          -0.151122, -0.292385, -0.234166,  0.211924,  0.079619,
          -0.096901, -0.111918, -0.003788],...
 y: array([[[[-0.458223,  0.247021,  0.570986,  0.372469,  0.072039,
          -0.167504, -0.250576, -0.261585, -0.315809, -0.284386,
           0.213914,  0.276942, -0.496829],...
2025-05-15 02:03:35.710667 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 101 / 104 (97.1%)
Max absolute difference: 0.80761142
Max relative difference: 65.38857672
 x: array([[[[ 0.267838,  0.119059, -0.045008,  0.10118 ,  0.442733,
          -0.241915, -0.501283, -0.127833,  0.320705,  0.385998,
           0.054964, -0.317155, -0.389351],...
 y: array([[[[-0.374474, -0.520464, -0.2075  ,  0.292428,  0.268236,
          -0.318046, -0.115737,  0.429029,  0.342002, -0.341346,
          -0.041481,  0.076332, -0.455354],...
2025-05-15 02:03:35.872421 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 84 / 104 (80.8%)
Max absolute difference: 0.83371704
Max relative difference: 43.8759296
 x: array([[[[-0.174531, -0.00104 ,  0.070696,  0.20457 ,  0.441383,
           0.177065,  0.26781 ,  0.212175,  0.039085,  0.336752,
           0.274731,  0.262525,  0.295878],...
 y: array([[[[-0.174531, -0.005377,  0.06929 ,  0.182633,  0.467815,
           0.210105,  0.240884,  0.263062, -0.020449,  0.269777,
           0.300228,  0.249422,  0.295878],...
2025-05-15 02:03:36.034064 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 101 / 104 (97.1%)
Max absolute difference: 0.8521935
Max relative difference: 488.19944361
 x: array([[[[-3.485228e-01, -4.264655e-01, -2.411932e-01, -1.024497e-01,
          -3.199788e-01,  1.688465e-01,  1.834548e-01,  4.415043e-02,
           7.123766e-02,  3.669980e-01,  4.783147e-01,  4.475477e-01,...
 y: array([[[[-0.354919,  0.094544,  0.19578 , -0.014213, -0.108467,
           0.034991, -0.118309, -0.33665 , -0.367277, -0.412404,
          -0.030019,  0.004205, -0.476453],...
2025-05-15 02:03:36.205488 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 15 / 16 (93.8%)
Max absolute difference: 0.80386756
Max relative difference: 7.45033214
 x: array([[[[-0.314576,  0.02226 ],
         [-0.19454 ,  0.324481]],
...
 y: array([[[[ 0.267564,  0.060183],
         [-0.049304, -0.479386]],
...
2025-05-15 02:03:36.366643 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 16 / 16 (100%)
Max absolute difference: 0.74997079
Max relative difference: 8.22753106
 x: array([[[[-0.493654, -0.030969],
         [ 0.260947,  0.313704]],
...
 y: array([[[[-0.157501, -0.103647],
         [-0.116294,  0.339315]],
...
2025-05-15 02:03:36.522209 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 12 / 16 (75%)
Max absolute difference: 0.67040176
Max relative difference: 7.99139699
 x: array([[[[ 0.359466,  0.072375],
         [ 0.265024, -0.289072]],
...
 y: array([[[[ 0.359466, -0.261269],
         [-0.070367, -0.03215 ]],
...
2025-05-15 02:03:36.669358 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 15 / 16 (93.8%)
Max absolute difference: 0.75220126
Max relative difference: 16.10397725
 x: array([[[[ 0.463147, -0.054205],
         [-0.023874,  0.460119]],
...
 y: array([[[[-0.157535, -0.094919],
         [-0.211998, -0.030463]],
...
2025-05-15 02:03:36.827409 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 171 / 192 (89.1%)
Max absolute difference: 0.85984019
Max relative difference: 31.55176871
 x: array([[[[ 0.419725,  0.230952,  0.042179,  0.01777 ,  0.102938,
           0.190207,  0.285876,  0.381546,  0.210917, -0.026286,
          -0.18022 , -0.20925 , -0.23828 , -0.212351, -0.186422,...
 y: array([[[[ 0.419725,  0.242442,  0.06516 ,  0.002218,  0.082202,
           0.162186,  0.250936,  0.340782,  0.326425,  0.10366 ,
          -0.119105, -0.189812, -0.217076, -0.232869, -0.208518,...
2025-05-15 02:03:36.984754 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 189 / 192 (98.4%)
Max absolute difference: 0.82289077
Max relative difference: 64.59011834
 x: array([[[[ 0.053224, -0.095287, -0.243797, -0.210497,  0.050064,
           0.310625,  0.318691,  0.295194,  0.297084,  0.349746,
           0.402409,  0.137615, -0.21788 , -0.460127, -0.306005,...
 y: array([[[[-0.336853, -0.325813, -0.289014, -0.252215, -0.261076,
          -0.27501 , -0.167117,  0.062602,  0.261095,  0.178556,
           0.096017,  0.068627,  0.064873,  0.029023, -0.081716,...
2025-05-15 02:03:37.137397 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1060 / 1248 (84.9%)
Max absolute difference: 0.3986411
Max relative difference: 1089.08028235
 x: array([[[[-3.359023e-01, -7.581279e-02, -1.034575e-01, ...,
          -3.816609e-01, -1.419298e-01,  7.806277e-02],
         [-4.015753e-01, -1.183934e-01, -1.128131e-01, ...,...
 y: array([[[[-0.335902, -0.082315, -0.09591 , ..., -0.41364 , -0.228355,
           0.078063],
         [-0.397578, -0.122846, -0.10646 , ..., -0.202023, -0.12434 ,...
2025-05-15 02:03:37.294913 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 902 / 1248 (72.3%)
Max absolute difference: 0.2078615
Max relative difference: 270.43379632
 x: array([[[[ 0.383574,  0.022997,  0.198877, ..., -0.208004, -0.133594,
          -0.339401],
         [ 0.078145,  0.065868,  0.234007, ..., -0.161399, -0.076205,...
 y: array([[[[ 0.383574,  0.069225,  0.153327, ..., -0.186002, -0.15998 ,
          -0.339401],
         [ 0.286007,  0.068655,  0.170635, ..., -0.168795, -0.146122,...
2025-05-15 02:03:37.454150 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 174 / 192 (90.6%)
Max absolute difference: 0.65480974
Max relative difference: 32.86555719
 x: array([[[[ 0.322474,  0.09347 ],
         [ 0.023134,  0.039647],
         [-0.276206, -0.014176],...
 y: array([[[[ 0.322474, -0.032042],
         [ 0.041355, -0.00199 ],
         [-0.239765,  0.028063],...
2025-05-15 02:03:37.610250 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 188 / 192 (97.9%)
Max absolute difference: 0.89307141
Max relative difference: 176.47843112
 x: array([[[[ 0.170041,  0.003571],
         [ 0.29863 , -0.145269],
         [ 0.427219, -0.294109],...
 y: array([[[[-0.143466,  0.396913],
         [-0.177473,  0.384379],
         [-0.290832,  0.342599],...
2025-05-15 02:03:37.774221 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2087 / 2304 (90.6%)
Max absolute difference: 0.42077813
Max relative difference: 1553.58791784
 x: array([[[[-0.019057,  0.063782,  0.146622, ...,  0.070929,  0.038823,
           0.038823],
         [-0.131756, -0.018465,  0.094827, ..., -0.07836 , -0.179068,...
 y: array([[[[-0.019057,  0.05874 ,  0.136537, ...,  0.139329,  0.089076,
           0.038823],
         [-0.124896, -0.020242,  0.084413, ...,  0.136381, -0.014712,...
2025-05-15 02:03:37.928792 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1893 / 2304 (82.2%)
Max absolute difference: 0.22782199
Max relative difference: 387.49898502
 x: array([[[[ 0.234373,  0.074752, -0.084869, ..., -0.00717 ,  0.098863,
           0.204896],
         [-0.012793, -0.070953, -0.129112, ..., -0.020703, -0.013074,...
 y: array([[[[ 0.234373,  0.183383,  0.013416, ...,  0.058119,  0.171024,
           0.204896],
         [ 0.155417,  0.11478 , -0.020674, ...,  0.03444 ,  0.113874,...
2025-05-15 02:03:38.095849 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3283 / 4096 (80.2%)
Max absolute difference: 0.24245764
Max relative difference: 1282.7107
 x: array([[[[ 0.179048, -0.117128, -0.413304, ...,  0.115277, -0.016781,
          -0.14884 ],
         [ 0.185339, -0.053463, -0.292265, ..., -0.145731, -0.208237,...
 y: array([[[[ 0.179048,  0.026024, -0.280025, ...,  0.055851, -0.08061 ,
          -0.14884 ],
         [ 0.182298,  0.04459 , -0.230828, ..., -0.062833, -0.16216 ,...
2025-05-15 02:03:38.271148 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 2, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 356 / 440 (80.9%)
Max absolute difference: 0.28211314
Max relative difference: 255.20250593
 x: array([[[[-0.027151,  0.03433 ,  0.095812,  0.155029,  0.211983,
           0.268936,  0.092679, -0.083578, -0.22025 , -0.317337,
          -0.414423],...
 y: array([[[[-2.715115e-02,  7.949749e-04,  7.066029e-02,  1.394965e-01,
           2.042164e-01,  2.689364e-01,  6.864404e-02, -1.316483e-01,
          -2.599672e-01, -3.702928e-01, -4.144230e-01],...
2025-05-15 02:03:38.434338 test begin: paddle.nn.functional.interpolate(Tensor([2, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 267 / 512 (52.1%)
Max absolute difference: 1.406
Max relative difference: 1.351
 x: array([[[[-17.58  ]],

        [[-14.03  ]],...
 y: array([[[[-17.77  ]],

        [[-14.11  ]],...
2025-05-15 02:03:43.947788 test begin: paddle.nn.functional.interpolate(Tensor([2, 256, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 256, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 4600 / 8192 (56.2%)
Max absolute difference: 0.09971364
Max relative difference: 1221.6287
 x: array([[[[-0.179626,  0.028562,  0.236751,  0.44494 ],
         [-0.172268, -0.013252,  0.145763,  0.304779],
         [-0.16491 , -0.055067,  0.054776,  0.164619],...
 y: array([[[[-0.179626, -0.023485,  0.288798,  0.44494 ],
         [-0.174108, -0.045626,  0.211338,  0.339819],
         [-0.16307 , -0.089908,  0.056416,  0.129579],...
2025-05-15 02:03:44.110756 test begin: paddle.nn.functional.interpolate(Tensor([2, 256, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 256, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 23504 / 32768 (71.7%)
Max absolute difference: 0.20646337
Max relative difference: 10471.069
 x: array([[[[-1.709919e-01,  6.150292e-02,  2.939977e-01, ...,
          -4.839688e-01, -4.499060e-01, -4.158432e-01],
         [-2.166427e-01, -1.006050e-01,  1.543260e-02, ...,...
 y: array([[[[-1.709919e-01, -3.536992e-02,  2.358740e-01, ...,
          -4.754531e-01, -4.357131e-01, -4.158432e-01],
         [-1.976215e-01, -1.016273e-01,  9.036103e-02, ...,...
2025-05-15 02:03:44.289557 test begin: paddle.nn.functional.interpolate(Tensor([2, 256, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 256, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 101266 / 131072 (77.3%)
Max absolute difference: 0.2851213
Max relative difference: 41206.168
 x: array([[[[ 0.406673,  0.010746, -0.385182, ...,  0.258681,  0.197291,
           0.135902],
         [-0.008118, -0.200068, -0.392018, ...,  0.25128 ,  0.189645,...
 y: array([[[[ 4.066735e-01,  1.945695e-01, -2.296386e-01, ...,
           2.345636e-01,  1.687890e-01,  1.359016e-01],
         [ 1.844638e-01,  3.089922e-02, -2.762300e-01, ...,...
2025-05-15 02:03:44.467386 test begin: paddle.nn.functional.interpolate(Tensor([2, 3, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 3, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 4888 / 6144 (79.6%)
Max absolute difference: 0.24394605
Max relative difference: 590.5748
 x: array([[[[-2.545654e-01, -3.917819e-02,  1.762090e-01, ...,
          -3.187793e-02, -1.493106e-01, -2.667434e-01],
         [-2.508207e-01, -1.002320e-01,  5.035667e-02, ...,...
 y: array([[[[-2.545654e-01, -1.432820e-01,  7.928476e-02, ...,
          -8.472267e-02, -2.060698e-01, -2.667434e-01],
         [-2.526306e-01, -1.586448e-01,  2.932671e-02, ...,...
2025-05-15 02:03:44.635513 test begin: paddle.nn.functional.interpolate(Tensor([2, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 44 / 54 (81.5%)
Max absolute difference: 0.4038
Max relative difference: 138.9
 x: array([[[[-0.4387  , -0.1189  ,  0.2842  ],
         [ 0.4858  , -0.443   , -0.0185  ],
         [-0.4182  ,  0.261   , -0.09015 ]],...
 y: array([[[[-0.2089  ,  0.0809  ,  0.0303  ],
         [ 0.3914  , -0.443   , -0.04456 ],
         [-0.02176 ,  0.138   ,  0.05804 ]],...
2025-05-15 02:03:44.792810 test begin: paddle.nn.functional.interpolate(Tensor([2, 3, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 3, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 44 / 54 (81.5%)
Max absolute difference: 0.3770068
Max relative difference: 14.985197
 x: array([[[[-0.359193, -0.470376,  0.176419],
         [ 0.139864, -0.154827, -0.397175],
         [-0.091998, -0.176264, -0.45563 ]],...
 y: array([[[[-0.361735, -0.29094 ,  0.02839 ],
         [ 0.051673, -0.154827, -0.273563],
         [ 0.184862, -0.169669, -0.078623]],...
2025-05-15 02:03:44.948676 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1607 / 1728 (93%)
Max absolute difference: 0.75783086
Max relative difference: 13339.28
 x: array([[[[[ 1.126402e-01,  2.900891e-01, -3.355839e-01, -3.220751e-01,
           -2.149946e-01, -2.214291e-01],
          [ 3.462300e-01, -1.525585e-01, -1.282044e-02, -1.997214e-01,...
 y: array([[[[[ 1.126402e-01,  3.038603e-01, -3.922791e-01, -3.519732e-01,
           -1.796689e-01,  1.397502e-01],
          [ 3.370681e-01, -1.905527e-01,  1.438996e-02, -2.180219e-01,...
2025-05-15 02:03:45.159851 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1582 / 1728 (91.6%)
Max absolute difference: 0.47983015
Max relative difference: 287.4168
 x: array([[[[[ 1.491272e-01,  3.115173e-01,  2.893448e-01, -1.976422e-01,
            2.874036e-01,  3.679524e-01],
          [-8.849449e-02,  2.861270e-02,  1.803568e-01, -6.698047e-02,...
 y: array([[[[[ 1.847696e-01,  3.180024e-01,  1.458237e-01, -1.454486e-01,
            2.649883e-01,  1.079786e-02],
          [-3.324524e-01,  2.423683e-02,  2.532936e-01, -2.793695e-02,...
2025-05-15 02:03:45.345716 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 55 / 64 (85.9%)
Max absolute difference: 0.89665556
Max relative difference: 293.8326
 x: array([[[[[ 0.217949, -0.351241],
          [ 0.357062, -0.171138]],
...
 y: array([[[[[ 0.217949, -0.40703 ],
          [-0.283588,  0.123194]],
...
2025-05-15 02:03:45.523158 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 62 / 64 (96.9%)
Max absolute difference: 0.9629783
Max relative difference: 52.289078
 x: array([[[[[-0.169459,  0.026073],
          [-0.128348,  0.194726]],
...
 y: array([[[[[ 0.46532 ,  0.026704],
          [-0.444034, -0.105175]],
...
2025-05-15 02:03:45.682645 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1615 / 1728 (93.5%)
Max absolute difference: 0.62090839
Max relative difference: 344.22436699
 x: array([[[[[-3.123834e-02, -2.463205e-01,  2.371376e-01, -3.839055e-02,
           -3.026212e-01, -5.285978e-02],
          [-3.796654e-01, -1.938116e-01, -2.311399e-01, -2.960450e-01,...
 y: array([[[[[-0.031238, -0.258184,  0.14047 , -0.007612, -0.428642,
            0.342163],
          [-0.40748 , -0.228482, -0.24    , -0.27324 , -0.167492,...
2025-05-15 02:03:45.874661 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1553 / 1728 (89.9%)
Max absolute difference: 0.48488051
Max relative difference: 520.33179721
 x: array([[[[[ 2.741043e-01,  2.005827e-01, -3.494803e-01,  2.086589e-01,
           -1.959136e-02, -4.703918e-01],
          [-3.144958e-01,  2.253125e-01, -1.708708e-01,  2.804898e-01,...
 y: array([[[[[ 8.341827e-02,  3.220145e-01, -2.330882e-01,  1.024609e-01,
           -1.745415e-01, -6.641624e-02],
          [-2.246832e-01,  2.540728e-01, -1.135575e-01,  1.231761e-01,...
2025-05-15 02:03:46.060658 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 55 / 64 (85.9%)
Max absolute difference: 0.96379837
Max relative difference: 11.15414031
 x: array([[[[[-3.424068e-01, -4.379633e-01],
          [ 1.074902e-01,  2.307376e-01]],
...
 y: array([[[[[-0.342407, -0.076749],
          [ 0.491943, -0.097692]],
...
2025-05-15 02:03:46.211269 test begin: paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 63 / 64 (98.4%)
Max absolute difference: 0.83912383
Max relative difference: 80.72302191
 x: array([[[[[-0.305139, -0.410391],
          [-0.018321, -0.358721]],
...
 y: array([[[[[ 0.236609, -0.144156],
          [ 0.366222, -0.311447]],
...
2025-05-15 02:03:46.359464 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 1, 1],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 128, 1, 1],"float16"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 371 / 512 (72.5%)
Max absolute difference: 4.75
Max relative difference: 19.06
 x: array([[[[  84.3   ]],

        [[ -11.68  ]],...
 y: array([[[[ 8.6000e+01]],

        [[-1.1883e+01]],...
2025-05-15 02:04:39.675883 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 1, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 128, 1, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 50 / 512 (9.77%)
Max absolute difference: 0.1562
Max relative difference: 0.4707
 x: array([[[[ -2.107  ]],

        [[  1.992  ]],...
 y: array([[[[-2.1055e+00]],

        [[ 1.9951e+00]],...
2025-05-15 02:04:40.009203 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 128, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 128, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 27689225 / 33554432 (82.5%)
Max absolute difference: 0.3958
Max relative difference: inf
 x: array([[[[ 0.3242  , -0.02122 , -0.3667  , ..., -0.4578  , -0.06204 ,
           0.3337  ],
         [ 0.2109  , -0.0625  , -0.336   , ..., -0.1354  ,  0.02629 ,...
 y: array([[[[ 0.3242  ,  0.1509  , -0.196   , ..., -0.2622  ,  0.135   ,
           0.3337  ],
         [ 0.2673  ,  0.1121  , -0.1985  , ..., -0.1584  ,  0.12085 ,...
2025-05-15 02:04:46.314989 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 27698822 / 33554432 (82.5%)
Max absolute difference: 0.39218494
Max relative difference: 5670237.5
 x: array([[[[ 4.286268e-01,  8.713333e-02, -2.543601e-01, ...,
           3.318871e-02, -9.546402e-02, -2.241168e-01],
         [ 1.342420e-01,  1.036842e-01,  7.312634e-02, ...,...
 y: array([[[[ 4.286268e-01,  2.572078e-01, -8.563008e-02, ...,
          -3.037791e-02, -1.595372e-01, -2.241168e-01],
         [ 2.808549e-01,  1.877832e-01,  1.639595e-03, ...,...
2025-05-15 02:04:49.416742 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float16"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 7048635 / 8388608 (84%)
Max absolute difference: 0.398
Max relative difference: inf
 x: array([[[[-0.08496 , -0.08093 , -0.07684 , ...,  0.4216  ,  0.4255  ,
           0.4297  ],
         [-0.08417 , -0.08014 , -0.0761  , ...,  0.42    ,  0.424   ,...
 y: array([[[[-0.08496 , -0.08496 , -0.08496 , ...,  0.4297  ,  0.4297  ,
           0.4297  ],
         [-0.08496 , -0.08496 , -0.08496 , ...,  0.4297  ,  0.4297  ,...
2025-05-15 02:05:16.031234 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float16"), list[16,32,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3 / 2048 (0.146%)
Max absolute difference: 0.04688
Max relative difference: 5.887
 x: array([[[[ 2.371  ,  1.642  ],
         [ 2.344  , -0.1459 ]],
...
 y: array([[[[ 2.377  ,  1.639  ],
         [ 2.34   , -0.1514 ]],
...
2025-05-15 02:05:16.246344 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 7097811 / 8388608 (84.6%)
Max absolute difference: 0.39394218
Max relative difference: 1600265.
 x: array([[[[-1.282483e-01, -1.250633e-01, -1.218782e-01, ...,
           2.698782e-01,  2.730632e-01,  2.762482e-01],
         [-1.297597e-01, -1.266081e-01, -1.234566e-01, ...,...
 y: array([[[[-0.128248, -0.128248, -0.128248, ...,  0.276248,  0.276248,
           0.276248],
         [-0.128248, -0.128248, -0.128248, ...,  0.276248,  0.276248,...
2025-05-15 02:05:17.054412 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 3, 3],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 3, 3],"float16"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 7315193 / 8388608 (87.2%)
Max absolute difference: 0.458
Max relative difference: inf
 x: array([[[[-1.1548e-01, -1.1365e-01, -1.1182e-01, ...,  4.0356e-01,
           4.1016e-01,  4.1675e-01],
         [-1.1517e-01, -1.1328e-01, -1.1145e-01, ...,  4.0332e-01,...
 y: array([[[[-0.1155 , -0.1155 , -0.1155 , ...,  0.4167 ,  0.4167 ,
           0.4167 ],
         [-0.1155 , -0.1155 , -0.1155 , ...,  0.4167 ,  0.4167 ,...
2025-05-15 02:05:31.387255 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 7307421 / 8388608 (87.1%)
Max absolute difference: 0.50400734
Max relative difference: 5280836.5
 x: array([[[[-3.636706e-01, -3.566468e-01, -3.496229e-01, ...,
          -1.628129e-01, -1.667991e-01, -1.707854e-01],
         [-3.508803e-01, -3.440302e-01, -3.371801e-01, ...,...
 y: array([[[[-0.363671, -0.363671, -0.363671, ..., -0.170785, -0.170785,
          -0.170785],
         [-0.363671, -0.363671, -0.363671, ..., -0.170785, -0.170785,...
2025-05-15 02:05:32.239516 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 6, 6],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 6, 6],"float16"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 7407152 / 8388608 (88.3%)
Max absolute difference: 0.5747
Max relative difference: inf
 x: array([[[[ 2.1936e-01,  2.1814e-01,  2.1704e-01, ...,  3.4814e-01,
           3.5303e-01,  3.5791e-01],
         [ 2.0703e-01,  2.0544e-01,  2.0374e-01, ...,  3.5107e-01,...
 y: array([[[[ 0.2194  ,  0.2194  ,  0.2194  , ...,  0.358   ,  0.358   ,
           0.358   ],
         [ 0.2194  ,  0.2194  ,  0.2194  , ...,  0.358   ,  0.358   ,...
2025-05-15 02:05:36.818264 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 7423076 / 8388608 (88.5%)
Max absolute difference: 0.5457525
Max relative difference: 3165651.2
 x: array([[[[ 0.244439,  0.217675,  0.190912, ..., -0.348446, -0.359258,
          -0.37007 ],
         [ 0.244613,  0.219169,  0.193724, ..., -0.329136, -0.339129,...
 y: array([[[[ 0.244439,  0.244439,  0.244439, ..., -0.37007 , -0.37007 ,
          -0.37007 ],
         [ 0.244439,  0.244439,  0.244439, ..., -0.37007 , -0.37007 ,...
2025-05-15 02:05:37.603184 test begin: paddle.nn.functional.interpolate(Tensor([4, 150, 64, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 150, 64, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 257 / 2457600 (0.0105%)
Max absolute difference: 0.03906
Max relative difference: 308.
 x: array([[[[ 5.9540e-02, -6.1279e-01,  7.0654e-01, ...,  1.2051e+00,
           9.7217e-01,  1.1973e+00],
         [ 3.2949e+00,  2.6484e+00, -1.9910e-01, ...,  1.2168e+00,...
 y: array([[[[ 5.9570e-02, -6.1377e-01,  7.0703e-01, ...,  1.2031e+00,
           9.7168e-01,  1.1992e+00],
         [ 3.3008e+00,  2.6406e+00, -1.9666e-01, ...,  1.2178e+00,...
2025-05-15 02:06:02.218254 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 128, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 128, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 147 / 1245184 (0.0118%)
Max absolute difference: 0.04688
Max relative difference: 447.8
 x: array([[[[-2.6992e+00,  3.2178e-01,  9.3408e-01, ...,  3.1836e+00,
           2.0918e+00, -1.1680e+00],
         [-5.4535e-02,  3.3913e-03, -1.3105e+00, ...,  1.4514e-01,...
 y: array([[[[-2.6992e+00,  3.1982e-01,  9.3896e-01, ...,  3.1855e+00,
           2.0898e+00, -1.1670e+00],
         [-5.4565e-02,  2.3804e-03, -1.3115e+00, ...,  1.4551e-01,...
2025-05-15 02:06:13.929858 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 16, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 16, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 10635 / 38912 (27.3%)
Max absolute difference: 0.4766
Max relative difference: 185.2
 x: array([[[[ 1.2041e+00,  1.0648e+01, -9.6387e-01, ...,  3.6309e+00,
          -9.6953e+00, -4.0234e+00],
         [ 2.3711e+00, -2.0215e-01,  2.0762e+00, ..., -1.4868e-01,...
 y: array([[[[ 1.1357e+00,  1.0688e+01, -9.7217e-01, ...,  3.6133e+00,
          -9.6406e+00, -4.0352e+00],
         [ 2.3535e+00, -2.1497e-01,  2.0332e+00, ..., -1.3916e-01,...
2025-05-15 02:06:32.743262 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 32, 64],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 32, 64],"float16"), list[512,1024,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 5306 / 155648 (3.41%)
Max absolute difference: 0.1602
Max relative difference: 222.5
 x: array([[[[ 2.3906e+00,  2.2852e+00,  1.1334e-01, ..., -2.5996e+00,
          -6.1797e+00,  1.4160e+00],
         [ 2.2832e+00, -7.7100e-01, -6.0703e+00, ..., -3.0020e+00,...
 y: array([[[[ 2.375e+00,  2.275e+00,  1.078e-01, ..., -2.600e+00,
          -6.176e+00,  1.426e+00],
         [ 2.273e+00, -7.666e-01, -6.039e+00, ..., -3.006e+00,...
2025-05-15 02:06:41.400359 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 64, 128],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 64, 128],"float16"), list[512,1024,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 61 / 622592 (0.0098%)
Max absolute difference: 0.04688
Max relative difference: 847.5
 x: array([[[[-2.9648e+00,  1.2659e-01, -2.5952e-01, ...,  2.4121e+00,
          -2.0742e+00, -4.2285e-01],
         [-1.3379e+00, -2.0156e+00,  3.9990e-01, ..., -7.6953e-01,...
 y: array([[[[-2.9746e+00,  1.2671e-01, -2.6050e-01, ...,  2.4102e+00,
          -2.0723e+00, -4.1626e-01],
         [-1.3398e+00, -2.0234e+00,  4.0332e-01, ..., -7.7686e-01,...
2025-05-15 02:06:47.294915 test begin: paddle.nn.functional.interpolate(Tensor([4, 256, 1, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 256, 1, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 681 / 1024 (66.5%)
Max absolute difference: 4.062
Max relative difference: 20.1
 x: array([[[[-32.94  ]],

        [[-13.92  ]],...
 y: array([[[[-33.47 ]],

        [[-13.58 ]],...
2025-05-15 02:07:21.164248 test begin: paddle.nn.functional.interpolate(Tensor([4, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 533 / 1024 (52.1%)
Max absolute difference: 1.352
Max relative difference: 6.59
 x: array([[[[ 10.55  ]],

        [[-20.56  ]],...
 y: array([[[[ 10.84 ]],

        [[-20.73 ]],...
2025-05-15 02:07:31.623731 test begin: paddle.nn.functional.interpolate(Tensor([4, 256, 32, 32],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 256, 32, 32],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 95 / 1048576 (0.00906%)
Max absolute difference: 0.05078
Max relative difference: 253.5
 x: array([[[[ 1.6865e+00,  2.4824e+00,  5.4414e+00, ...,  1.3281e+00,
           2.0293e+00,  1.4297e+00],
         [-1.5186e+00, -6.4551e-01, -6.6162e-01, ...,  2.9272e-01,...
 y: array([[[[ 1.6836e+00,  2.4766e+00,  5.4414e+00, ...,  1.3271e+00,
           2.0293e+00,  1.4355e+00],
         [-1.5205e+00, -6.4355e-01, -6.6064e-01, ...,  2.9004e-01,...
2025-05-15 02:07:42.612670 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 1, 1],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 32, 1, 1],"float16"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 24 / 128 (18.8%)
Max absolute difference: 0.375
Max relative difference: 0.2761
 x: array([[[[-13.914  ]],

        [[ -0.421  ]],...
 y: array([[[[-14.086 ]],

        [[ -0.37  ]],...
2025-05-15 02:07:42.998187 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 2, 2],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 32, 2, 2],"float16"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 111163 / 131072 (84.8%)
Max absolute difference: 0.3733
Max relative difference: 4904.
 x: array([[[[-3.7695e-01, -3.7915e-01, -3.8135e-01, ..., -4.4214e-01,
          -4.4434e-01, -4.4653e-01],
         [-3.5815e-01, -3.6060e-01, -3.6279e-01, ..., -4.2358e-01,...
 y: array([[[[-0.377  , -0.377  , -0.377  , ..., -0.4465 , -0.4465 ,
          -0.4465 ],
         [-0.377  , -0.377  , -0.377  , ..., -0.4465 , -0.4465 ,...
2025-05-15 02:07:43.256836 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 109464 / 131072 (83.5%)
Max absolute difference: 0.3731582
Max relative difference: 1961.72
 x: array([[[[ 1.842735e-01,  1.664893e-01,  1.487051e-01, ...,
          -3.314691e-01, -3.492534e-01, -3.670376e-01],
         [ 1.688534e-01,  1.519199e-01,  1.349864e-01, ...,...
 y: array([[[[ 0.184274,  0.184274,  0.184274, ..., -0.367038, -0.367038,
          -0.367038],
         [ 0.184274,  0.184274,  0.184274, ..., -0.367038, -0.367038,...
2025-05-15 02:07:43.427640 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 3, 3],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 32, 3, 3],"float16"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 112051 / 131072 (85.5%)
Max absolute difference: 0.463
Max relative difference: 56960.
 x: array([[[[ 0.4182  ,  0.3906  ,  0.363   , ..., -0.2018  , -0.2161  ,
          -0.2302  ],
         [ 0.4062  ,  0.378   ,  0.3496  , ..., -0.1649  , -0.1748  ,...
 y: array([[[[ 0.4182  ,  0.4182  ,  0.4182  , ..., -0.2302  , -0.2302  ,
          -0.2302  ],
         [ 0.4182  ,  0.4182  ,  0.4182  , ..., -0.2302  , -0.2302  ,...
2025-05-15 02:07:43.600780 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 32, 3, 3],"float32"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 112754 / 131072 (86%)
Max absolute difference: 0.4668412
Max relative difference: 3454.8975
 x: array([[[[ 3.159539e-01,  2.856255e-01,  2.552972e-01, ...,
          -1.211305e-01, -1.186857e-01, -1.162409e-01],
         [ 3.232318e-01,  2.928447e-01,  2.624576e-01, ...,...
 y: array([[[[ 3.159539e-01,  3.159539e-01,  3.159539e-01, ...,
          -1.162409e-01, -1.162409e-01, -1.162409e-01],
         [ 3.159539e-01,  3.159539e-01,  3.159539e-01, ...,...
2025-05-15 02:07:43.750206 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 6, 6],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 32, 6, 6],"float16"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 113160 / 131072 (86.3%)
Max absolute difference: 0.4353
Max relative difference: 34400.
 x: array([[[[-0.2935  , -0.2444  , -0.1952  , ..., -0.10406 , -0.1461  ,
          -0.1882  ],
         [-0.241   , -0.2023  , -0.1637  , ..., -0.05106 , -0.06415 ,...
 y: array([[[[-0.2935  , -0.2935  , -0.2935  , ..., -0.1882  , -0.1882  ,
          -0.1882  ],
         [-0.2935  , -0.2935  , -0.2935  , ..., -0.1882  , -0.1882  ,...
2025-05-15 02:07:43.913928 test begin: paddle.nn.functional.interpolate(Tensor([4, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 112675 / 131072 (86%)
Max absolute difference: 0.47205815
Max relative difference: 12539.253
 x: array([[[[-4.739542e-03, -7.181963e-02, -1.388997e-01, ...,
          -1.076971e-01, -7.359355e-02, -3.948988e-02],
         [ 1.713043e-03, -5.166587e-02, -1.050448e-01, ...,...
 y: array([[[[-0.00474 , -0.00474 , -0.00474 , ..., -0.03949 , -0.03949 ,
          -0.03949 ],
         [-0.00474 , -0.00474 , -0.00474 , ..., -0.03949 , -0.03949 ,...
2025-05-15 02:07:44.065181 test begin: paddle.nn.functional.interpolate(Tensor([4, 5, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 5, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1844 / 2000 (92.2%)
Max absolute difference: 0.59343325
Max relative difference: 656.84789023
 x: array([[[[ 0.416469,  0.073233,  0.328868, ...,  0.10377 ,  0.451672,
           0.298361],
         [-0.050017, -0.070597,  0.042805, ..., -0.219827,  0.002669,...
 y: array([[[[ 0.170376, -0.05071 ,  0.228153, ..., -0.021201,  0.253939,
          -0.18588 ],
         [-0.228672, -0.049866,  0.156606, ...,  0.007606,  0.198242,...
2025-05-15 02:07:44.253749 test begin: paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1315 / 2000 (65.8%)
Max absolute difference: 0.1408403
Max relative difference: 163.57233
 x: array([[[[-0.022927, -0.302853, -0.161692, ...,  0.264945,  0.208872,
           0.275538],
         [ 0.150614,  0.044773,  0.088262, ...,  0.182683,  0.008519,...
 y: array([[[[-2.292730e-02, -2.538657e-01, -2.319732e-01, ...,
           2.425931e-01,  2.205381e-01,  2.755376e-01],
         [ 1.020225e-01, -2.550996e-02, -1.875762e-02, ...,...
2025-05-15 02:07:44.416632 test begin: paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2527 / 3220 (78.5%)
Max absolute difference: 0.25470383
Max relative difference: 2214.68557902
 x: array([[[[ 3.235275e-01,  2.750094e-01,  2.264912e-01, ...,
          -3.784536e-02,  8.114149e-02,  2.001281e-01],
         [-1.301447e-01, -1.789314e-01, -2.277181e-01, ...,...
 y: array([[[[ 0.323527,  0.323527,  0.277705, ...,  0.074531,  0.200128,
           0.200128],
         [-0.084777, -0.084777, -0.130828, ..., -0.068067, -0.189671,...
2025-05-15 02:07:44.604104 test begin: paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1344 / 2000 (67.2%)
Max absolute difference: 0.14118476
Max relative difference: 855.82345603
 x: array([[[[-2.432338e-01, -1.932801e-01, -2.356245e-01, ...,
          -7.020886e-02,  7.828268e-02,  4.342568e-01],
         [-2.988113e-01, -8.490769e-02, -1.064787e-01, ...,...
 y: array([[[[-0.243234, -0.202022, -0.218794, ..., -0.077583,  0.140578,
           0.434257],
         [-0.28325 , -0.144652, -0.114793, ..., -0.004068,  0.144816,...
2025-05-15 02:07:44.781892 test begin: paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1985 / 2800 (70.9%)
Max absolute difference: 0.1943265
Max relative difference: 3545.72583658
 x: array([[[[ 0.445051, -0.423609,  0.244495, ..., -0.195644, -0.282474,
           0.439893],
         [ 0.325663, -0.385975,  0.185585, ..., -0.357781, -0.182457,...
 y: array([[[[ 4.450513e-01, -4.236093e-01,  2.444952e-01, ...,
          -1.956441e-01, -2.824737e-01,  4.398926e-01],
         [ 3.590920e-01, -3.965129e-01,  2.020799e-01, ...,...
2025-05-15 02:07:44.992793 test begin: paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([4, 5, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 87631 / 100000 (87.6%)
Max absolute difference: 0.42927622
Max relative difference: 32031.31749462
 x: array([[[[ 1.500522e-01,  9.701179e-02,  4.397143e-02, ...,
          -3.654104e-01, -4.209217e-01, -4.764330e-01],
         [ 1.367260e-01,  8.461220e-02,  3.249840e-02, ...,...
 y: array([[[[ 1.500522e-01,  1.500522e-01,  1.500522e-01, ...,
          -4.764330e-01, -4.764330e-01, -4.764330e-01],
         [ 1.500522e-01,  1.500522e-01,  1.500522e-01, ...,...
2025-05-15 02:07:45.207399 test begin: paddle.nn.functional.interpolate(Tensor([512, 160, 4, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 160, 4, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2722481 / 3932160 (69.2%)
Max absolute difference: 0.2129
Max relative difference: inf
 x: array([[[[ 3.8892e-01,  3.6792e-01,  3.4668e-01,  1.9312e-01,
          -9.2896e-02, -3.7891e-01],
         [ 3.8306e-01,  3.2910e-01,  2.7515e-01,  1.4648e-01,...
 y: array([[[[ 3.8892e-01,  3.7573e-01,  3.4937e-01,  1.5747e-01,
          -2.0020e-01, -3.7891e-01],
         [ 3.8550e-01,  3.6035e-01,  3.1006e-01,  1.3623e-01,...
2025-05-15 02:07:46.079920 test begin: paddle.nn.functional.interpolate(Tensor([512, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2723433 / 3932160 (69.3%)
Max absolute difference: 0.21247809
Max relative difference: 1701754.
 x: array([[[[ 4.646903e-01,  3.549149e-01,  2.451395e-01,  1.046183e-01,
          -6.664856e-02, -2.379154e-01],
         [ 1.457390e-01,  8.234270e-02,  1.894643e-02, -3.897256e-02,...
 y: array([[[[ 4.646903e-01,  3.960806e-01,  2.588614e-01,  8.320998e-02,
          -1.308736e-01, -2.379154e-01],
         [ 2.786354e-01,  2.269348e-01,  1.235337e-01,  8.112960e-03,...
2025-05-15 02:07:46.567357 test begin: paddle.nn.functional.interpolate(Tensor([512, 3, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 3, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2952572 / 3145728 (93.9%)
Max absolute difference: 0.8878324
Max relative difference: 1107091.2
 x: array([[[[ 2.082832e-01,  3.510455e-01, -3.438881e-01, ...,
          -3.192583e-01,  1.458830e-01, -2.242222e-01],
         [-1.147334e-02,  1.189396e-01,  2.733724e-01, ...,...
 y: array([[[[ 2.078351e-01,  6.347412e-02,  9.116241e-02, ...,
           1.719223e-01,  9.162571e-02, -1.152754e-02],
         [-1.445673e-01, -1.040025e-01,  8.277968e-03, ...,...
2025-05-15 02:07:47.550779 test begin: paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 12587792 / 15728640 (80%)
Max absolute difference: 0.3474
Max relative difference: inf
 x: array([[[[ 4.3140e-01,  3.2104e-01,  2.1069e-01, ..., -1.8640e-01,
          -2.0886e-01, -2.3145e-01],
         [ 2.2729e-01,  2.7686e-01,  3.2666e-01, ..., -2.0557e-01,...
 y: array([[[[ 4.3140e-01,  3.7378e-01,  2.5830e-01, ..., -1.9604e-01,
          -2.1973e-01, -2.3145e-01],
         [ 3.2593e-01,  3.1152e-01,  2.8247e-01, ..., -1.8872e-01,...
2025-05-15 02:07:50.510268 test begin: paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 12587372 / 15728640 (80%)
Max absolute difference: 0.3535881
Max relative difference: 3420561.8
 x: array([[[[ 4.420683e-02,  2.944753e-02,  1.468823e-02, ...,
          -2.486784e-01, -3.494478e-01, -4.502172e-01],
         [ 1.967040e-01,  1.661396e-01,  1.355751e-01, ...,...
 y: array([[[[ 4.420683e-02,  3.649174e-02,  2.106157e-02, ...,
          -2.921925e-01, -3.975423e-01, -4.502172e-01],
         [ 1.229970e-01,  1.110134e-01,  8.704602e-02, ...,...
2025-05-15 02:07:51.884177 test begin: paddle.nn.functional.interpolate(Tensor([512, 40, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[Pass] paddle.nn.functional.interpolate(Tensor([512, 40, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
2025-05-15 02:07:54.009274 test begin: paddle.nn.functional.interpolate(Tensor([512, 80, 8, 6],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 80, 8, 6],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 6021289 / 7864320 (76.6%)
Max absolute difference: 0.2761
Max relative difference: inf
 x: array([[[[-4.6582e-01, -1.4600e-01,  1.7395e-01, ..., -1.6736e-01,
          -1.8604e-01, -2.0459e-01],
         [-9.9731e-02, -4.5959e-02,  7.8354e-03, ...,  5.2399e-02,...
 y: array([[[[-4.6582e-01, -2.8979e-01,  6.1981e-02, ..., -1.7395e-01,
          -1.9434e-01, -2.0459e-01],
         [-2.6978e-01, -1.7212e-01,  2.2888e-02, ..., -8.0444e-02,...
2025-05-15 02:07:55.585859 test begin: paddle.nn.functional.interpolate(Tensor([512, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([512, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 6023694 / 7864320 (76.6%)
Max absolute difference: 0.27448192
Max relative difference: 2657169.5
 x: array([[[[-3.974328e-01, -8.648960e-02,  2.244536e-01, ...,
           9.002589e-02, -1.609801e-01, -4.119861e-01],
         [-2.424686e-02,  6.713960e-02,  1.585261e-01, ...,...
 y: array([[[[-3.974328e-01, -2.264140e-01,  1.156234e-01, ...,
           2.173740e-03, -2.739328e-01, -4.119861e-01],
         [-1.975118e-01, -9.118383e-02,  1.214720e-01, ...,...
2025-05-15 02:07:56.360099 test begin: paddle.nn.functional.interpolate(Tensor([56, 2, 16, 16],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([56, 2, 16, 16],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 92248 / 114688 (80.4%)
Max absolute difference: 0.32163566
Max relative difference: 109072.08
 x: array([[[[ 2.616175e-01, -2.414449e-02, -3.099065e-01, ...,
           4.750435e-01,  3.251746e-01,  1.753053e-01],
         [ 2.087148e-02, -1.507594e-01, -3.223902e-01, ...,...
 y: array([[[[ 0.261617,  0.113974, -0.181314, ...,  0.407602,  0.252738,
           0.175305],
         [ 0.137232,  0.020055, -0.214299, ...,  0.258399,  0.134377,...
2025-05-15 02:07:56.548141 test begin: paddle.nn.functional.interpolate(Tensor([56, 2, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([56, 2, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1018 / 1792 (56.8%)
Max absolute difference: 0.09319422
Max relative difference: 2472.1418
 x: array([[[[ 0.28726 ,  0.355471,  0.423681,  0.491892],
         [ 0.305101,  0.296367,  0.287633,  0.278898],
         [ 0.322943,  0.237263,  0.151584,  0.065904],...
 y: array([[[[ 2.872595e-01,  3.384178e-01,  4.407342e-01,  4.918924e-01],
         [ 3.006408e-01,  3.085173e-01,  3.242704e-01,  3.321469e-01],
         [ 3.274032e-01,  2.487164e-01,  9.134278e-02,  1.265598e-02],...
2025-05-15 02:07:56.715662 test begin: paddle.nn.functional.interpolate(Tensor([56, 2, 32, 32],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([56, 2, 32, 32],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 375622 / 458752 (81.9%)
Max absolute difference: 0.3758669
Max relative difference: 1943321.2
 x: array([[[[ 0.384292,  0.223233,  0.062174, ...,  0.343824,  0.329317,
           0.314809],
         [ 0.417549,  0.297892,  0.178235, ...,  0.376101,  0.387947,...
 y: array([[[[ 0.384292,  0.302464,  0.138807, ...,  0.336921,  0.32218 ,
           0.314809],
         [ 0.401189,  0.330047,  0.187765, ...,  0.359691,  0.358554,...
2025-05-15 02:07:56.917669 test begin: paddle.nn.functional.interpolate(Tensor([56, 2, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([56, 2, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 5066 / 7168 (70.7%)
Max absolute difference: 0.21834023
Max relative difference: 985.07654
 x: array([[[[ 4.943883e-01,  3.322571e-01,  1.701259e-01, ...,
          -1.668570e-01,  1.575362e-01,  4.819293e-01],
         [ 4.219179e-01,  2.648191e-01,  1.077204e-01, ...,...
 y: array([[[[ 4.943883e-01,  3.998117e-01,  2.106587e-01, ...,
          -8.575869e-02,  2.927000e-01,  4.819293e-01],
         [ 4.521139e-01,  3.592498e-01,  1.735216e-01, ...,...
2025-05-15 02:07:57.099055 test begin: paddle.nn.functional.interpolate(Tensor([56, 2, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
[accuracy error] paddle.nn.functional.interpolate(Tensor([56, 2, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 22112 / 28672 (77.1%)
Max absolute difference: 0.2555149
Max relative difference: 25700.71
 x: array([[[[ 0.067606,  0.002218, -0.06317 , ...,  0.364084,  0.164804,
          -0.034475],
         [-0.103203, -0.107466, -0.111728, ...,  0.350206,  0.073554,...
 y: array([[[[ 0.067606,  0.032577, -0.037482, ...,  0.285796,  0.072282,
          -0.034475],
         [-0.023899, -0.041386, -0.076359, ...,  0.262077,  0.004154,...
2025-05-15 02:07:57.279798 test begin: paddle.nn.functional.interpolate(Tensor([8, 64, 20, 20],"float16"), size=tuple(160,160,), )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([8, 64, 20, 20],"float16"), size=tuple(160,160,), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 2 / 204800 (0.000977%)
Max absolute difference: 0.03906
Max relative difference: 138.6
 x: array([[[[-1.9834e+00,  1.1631e+00, -4.4531e+00, ..., -1.5186e+00,
          -1.5342e+00, -4.6582e-01],
         [-9.3115e-01, -9.8047e-01, -2.0312e+00, ..., -5.1270e-03,...
 y: array([[[[-1.9863e+00,  1.1650e+00, -4.4570e+00, ..., -1.5215e+00,
          -1.5322e+00, -4.6753e-01],
         [-9.3213e-01, -9.8193e-01, -2.0312e+00, ..., -6.7215e-03,...
2025-05-15 02:07:59.064540 test begin: paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
[accuracy error] backward  paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 70 / 1470 (4.76%)
Max absolute difference: 0.02007969
Max relative difference: 56.44038
 x: array([[[[[-2.793781e-03, -2.190512e-02, -3.019824e-02, ...,
            1.152893e-02,  3.601538e-02,  1.339955e-02],
          [-2.793781e-03, -2.190512e-02, -3.019824e-02, ...,...
 y: array([[[[[-2.793781e-03, -2.190512e-02, -2.650261e-02, ...,
            1.522456e-02,  3.601538e-02,  1.339955e-02],
          [-2.793781e-03, -2.190512e-02, -2.650261e-02, ...,...
2025-05-15 02:07:59.259908 test begin: paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 7],"float32"), mode="area", size=list[2,5,], )
[accuracy error] backward  paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 7],"float32"), mode="area", size=list[2,5,], ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 57 / 294 (19.4%)
Max absolute difference: 0.02150043
Max relative difference: 18.611692
 x: array([[[[-0.032068,  0.019506,  0.052041,  0.000467,  0.019139,
           0.018407, -0.000265],
         [-0.032068,  0.019506,  0.052041,  0.000467,  0.019139,...
 y: array([[[[-0.032068,  0.019506,  0.051885,  0.000311,  0.018983,
           0.018407, -0.000265],
         [-0.032068,  0.019506,  0.051885,  0.000311,  0.018983,...
