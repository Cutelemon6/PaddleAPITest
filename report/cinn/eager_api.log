test begin: paddle.linalg.cholesky(Tensor([2, 2],"float32"), )
[paddle error] paddle.linalg.cholesky(Tensor([2, 2],"float32"), ) 
 

--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_cholesky(_object*, _object*, _object*)
1   cholesky_ad_func(paddle::Tensor const&, bool)
2   paddle::experimental::cholesky(paddle::Tensor const&, bool)
3   void phi::CholeskyKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, bool, phi::DenseTensor*)
4   common::enforce::EnforceNotMet::EnforceNotMet(common::ErrorSummary const&, char const*, int)
5   common::enforce::GetCurrentTraceBackString[abi:cxx11](bool)

----------------------
Error Message Summary:
----------------------
PreconditionNotMetError: For batch [0]: U(2, 2) is zero, singular U.
  [Hint: Expected error_info[i] == 0, but received error_info[i]:2 != 0:0.] (at ../paddle/phi/kernels/gpu/cholesky_kernel.cu:217)

test begin: paddle.logspace(Tensor([],"float32"), Tensor([],"float32"), Tensor([],"int32"), Tensor([],"float32"), )
[paddle error] paddle.logspace(Tensor([],"float32"), Tensor([],"float32"), Tensor([],"int32"), Tensor([],"float32"), ) 
 

--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_logspace(_object*, _object*, _object*)
1   logspace_ad_func(paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, phi::DataType, phi::Place)
2   paddle::experimental::logspace(paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, phi::DataType, phi::Place const&)
3   void phi::LogspaceKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DataType, phi::DenseTensor*)
4   common::enforce::EnforceNotMet::EnforceNotMet(common::ErrorSummary const&, char const*, int)
5   common::enforce::GetCurrentTraceBackString[abi:cxx11](bool)

----------------------
Error Message Summary:
----------------------
InvalidArgumentError: The num of logspace op should be larger than 0, but received num is 0
  [Hint: Expected num > 0, but received num:0 <= 0:0.] (at ../paddle/phi/kernels/gpu/logspace_kernel.cu:94)

test begin: paddle.logspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), Tensor([1],"float32"), dtype="float32", )
[paddle error] paddle.logspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), Tensor([1],"float32"), dtype="float32", ) 
 

--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_logspace(_object*, _object*, _object*)
1   logspace_ad_func(paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, phi::DataType, phi::Place)
2   paddle::experimental::logspace(paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, phi::DataType, phi::Place const&)
3   void phi::LogspaceKernel<float, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DataType, phi::DenseTensor*)
4   common::enforce::EnforceNotMet::EnforceNotMet(common::ErrorSummary const&, char const*, int)
5   common::enforce::GetCurrentTraceBackString[abi:cxx11](bool)

----------------------
Error Message Summary:
----------------------
InvalidArgumentError: The num of logspace op should be larger than 0, but received num is 0
  [Hint: Expected num > 0, but received num:0 <= 0:0.] (at ../paddle/phi/kernels/gpu/logspace_kernel.cu:94)

test begin: paddle.Tensor.__setitem__(Tensor([2, 3],"int64"), Tensor([2, 3],"bool"), Tensor([3],"int64"), )
[paddle error] paddle.Tensor.__setitem__(Tensor([2, 3],"int64"), Tensor([2, 3],"bool"), Tensor([3],"int64"), ) 
 

--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   index_put__ad_func(paddle::Tensor&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, paddle::Tensor const&, bool)
1   paddle::experimental::index_put_(paddle::Tensor&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, paddle::Tensor const&, bool)
2   void phi::IndexPutKernel<long, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, std::vector<phi::DenseTensor const*, std::allocator<phi::DenseTensor const*> > const&, phi::DenseTensor const&, bool, phi::DenseTensor*)
3   void phi::ExpandKernel<long, phi::GPUContext>(phi::GPUContext const&, phi::DenseTensor const&, paddle::experimental::IntArrayBase<phi::DenseTensor> const&, phi::DenseTensor*)
4   common::enforce::EnforceNotMet::EnforceNotMet(common::ErrorSummary const&, char const*, int)
5   common::enforce::GetCurrentTraceBackString[abi:cxx11](bool)

----------------------
Error Message Summary:
----------------------
InvalidArgumentError: The 0-th dimension of input tensor (3) must match or be broadcastable to the corresponding dimension (6) in shape.
  [Hint: Expected vec_in_dims[i] == 1 || vec_in_dims[i] == expand_shape[i] == true, but received vec_in_dims[i] == 1 || vec_in_dims[i] == expand_shape[i]:0 != true:1.] (at ../paddle/phi/kernels/gpu/expand_kernel.cu:71)

