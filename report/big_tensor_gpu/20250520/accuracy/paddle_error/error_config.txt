paddle.Tensor.cumsum(Tensor([228170138, 10],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([22817014, 100],"int64"), axis=1, )
paddle.Tensor.lerp(x=Tensor([4, 268435457, 4],"float16"), y=Tensor([4, 268435457, 4],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([858993460, 5],"float16"), weight=0.5, )
paddle.Tensor.nansum(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.nansum(Tensor([477218589, 3, 3],"float16"), axis=0, keepdim=True, )
paddle.Tensor.repeat_interleave(Tensor([2, 1140850690],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([228170138, 10],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([22817014, 1, 10, 10],"int64"), 2, axis=0, )
paddle.atan2(Tensor([100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.conj(Tensor([2, 20, 2, 53687092],"float32"), )
paddle.conj(Tensor([2, 20, 35791395, 3],"float32"), )
paddle.conj(Tensor([2, 357913942, 2, 3],"float32"), )
paddle.conj(Tensor([35791395, 20, 2, 3],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([3, 1140850690],"float32"), append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.isclose(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), rtol=1e-05, atol=1e-08, )
paddle.isclose(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), rtol=1e-05, atol=1e-08, )
paddle.isclose(x=Tensor([214748365, 4, 5],"float16"), y=Tensor([214748365, 4, 5],"float16"), )
paddle.isclose(x=Tensor([3, 286331154, 5],"float16"), y=Tensor([3, 286331154, 5],"float16"), )
paddle.isclose(x=Tensor([3, 4, 357913942],"float16"), y=Tensor([3, 4, 357913942],"float16"), )
paddle.isclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.lerp(Tensor([1, 3, 3],"float16"), Tensor([477218589, 3, 3],"float16"), Tensor([1, 3, 3],"float16"), )
paddle.lerp(Tensor([1, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), )
paddle.lerp(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, )
paddle.linalg.cond(Tensor([142606337, 4, 4],"float32"), p="fro", )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([3, 20, 71582789],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 71582789, 5],"float64"), list[-1,], False, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 67108864, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 67108864, 32],"float32"), output_size=16, )
paddle.nn.functional.grid_sample(Tensor([61896, 1, 192, 192],"float32"), Tensor([61896, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([67395, 1, 184, 184],"float32"), Tensor([67395, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.normalize(Tensor([10, 429496730],"float16"), )
paddle.nn.functional.normalize(Tensor([1006, 4269352],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 178956971, 6],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=4, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.3, 0.300000009, training=True, )
