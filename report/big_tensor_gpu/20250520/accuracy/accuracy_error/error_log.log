=== [accuracy error] ===
[accuracy error] backward  paddle.Tensor.bmm(Tensor([5203, 146200, 3],"float32"), Tensor([5203, 3, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 173 / 31218 (0.6%)
Greatest absolute difference: 0.045026302337646484 at index (4395, 1, 0) (up to 0.01 allowed)
Greatest relative difference: 1.5456558465957642 at index (448, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5203, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([ -9.9753,  12.9089, -17.0933,  22.1303, -14.1347,  13.8165,   6.5434,
        -26.4732,  74.2668,  25.2114, -40.2192,  43.4605, -60.5004,   5.4895,
        -33.6825, -11.9411,  23.4375, -11.9761,  10.4807,  51.1068,  -4.8271,
         -6.5993, -11.5316, -11.2752, -19.2826,  27.0029,  78.1824, -18.0604,
         48.4714,   7.3720, -12.7092, -27.9889,  25.1749, -43.7164, -29.4600,
        -35.3555, -23.5695,  49.9718,  16.9015, -72.4600, -14.3770, -19.5867,
         -0.5926, -55.7404,  -3.9703,  20.4961,  13.0224, -21.3300,  44.3559,
        -17.4983,  19.4473,  -3.1966,   5.9705,  -0.7727,  39.4118, -25.7036,
         -8.0094,  10.4243, -38.3999, -21.2039, -13.1845, -13.3617, -25.5343,
          2.8552,  10.7807,   2.6550,  -6.5077, -73.1177, -31.0448,  36.1043,
        -56.9297, -59.0543, -29.2985, -44.4792,  22.7808,  17.2410, -33.9526,
         28.1684,  23.9376, -21.2070,   5.7109, -20.0537,   5.2294, -22.7090,
         48.9434,  25.1812,  28.6878, -28.0714,  36.7129, -10.9456,  -6.1156,
         16.8645, -14.5386,  -5.8622, -25.2958, -49.6951, -27.1547,   2.7688,
         -4.2781,   7.2102])
DESIRED: (shape=torch.Size([5203, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([ -9.9725,  12.8948, -17.1182,  22.1720, -14.1450,  13.8134,   6.5505,
        -26.4829,  74.2877,  25.2172, -40.2521,  43.4980, -60.5277,   5.5084,
        -33.6906, -11.9532,  23.4503, -11.9684,  10.4888,  51.1333,  -4.8169,
         -6.5948, -11.5195, -11.2871, -19.2778,  27.0142,  78.2171, -18.0565,
         48.4868,   7.3851, -12.7186, -27.9855,  25.1823, -43.7233, -29.4667,
        -35.3575, -23.5773,  49.9918,  16.9098, -72.4904, -14.3859, -19.5758,
         -0.6057, -55.7745,  -3.9845,  20.5073,  13.0352, -21.3394,  44.3728,
        -17.5072,  19.4500,  -3.2123,   5.9536,  -0.7753,  39.4194, -25.7041,
         -8.0004,  10.4199, -38.4190, -21.2118, -13.1899, -13.3604, -25.5452,
          2.8505,  10.7918,   2.6428,  -6.5261, -73.1472, -31.0670,  36.1203,
        -56.9698, -59.0762, -29.3008, -44.4964,  22.7896,  17.2663, -33.9740,
         28.1728,  23.9490, -21.2269,   5.7156, -20.0623,   5.2376, -22.7147,
         48.9697,  25.1796,  28.6825, -28.0751,  36.7233, -10.9583,  -6.1025,
         16.8785, -14.5354,  -5.8830, -25.3064, -49.7230, -27.1689,   2.7916,
         -4.2670,   7.2425])
[accuracy error] backward  paddle.Tensor.bmm(Tensor([5309, 143264, 3],"float32"), Tensor([5309, 3, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 31854 (0.6%)
Greatest absolute difference: 0.04435133934020996 at index (3130, 1, 0) (up to 0.01 allowed)
Greatest relative difference: 19.13497543334961 at index (4736, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5309, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([-24.7205, -35.6260,  25.8580, -33.3006,   8.6665,  23.9173,  66.0756,
          2.9830, -37.6450, -29.5244, -41.4280,   1.8034, -18.9437, -16.0780,
         27.6598,  -7.2008,  -3.3952, -16.3325,  13.1321,  57.2812,  42.0580,
        -11.3794,   3.8523,  34.9215,  11.0630,  -1.6463, -21.2119,  -0.1278,
        -23.6088,  74.1642, -49.7673,   9.2148, -48.5217,  -1.0935,  31.5373,
          5.1849,  78.2071, -14.9770, -18.1327,  -6.0512, -33.7340,  64.1360,
          8.6849,   7.4656,  50.9151, -24.1440,  24.6332,  64.7196,  78.0140,
          4.7617, -18.4895, -22.2015, -48.7368,  44.9992, -14.5077, -53.4146,
          1.0279, -13.5758,  26.0261, -41.4433,   0.1985, -15.4298,  51.3983,
          8.9495,   7.0866,  62.5392, -10.4484,  35.6761,  22.5122, -25.3111,
        -26.6157,  15.8578,  12.4419,  13.6754,  -7.5848,  73.0119,  32.3285,
         50.1806,  10.9053,  -0.3035,  28.4330,   5.1348, -31.8059, -38.7609,
         73.0063,  -2.9233, -42.7499, -38.9349,  -2.5133,  15.0797,  56.5134,
         27.0449,  74.9384, -11.5560,  -1.7526, -18.6901,  -1.1555, -27.7895,
         26.9498,  40.2787])
DESIRED: (shape=torch.Size([5309, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([-24.7144, -35.6576,  25.8591, -33.3102,   8.6581,  23.9282,  66.1104,
          2.9697, -37.6627, -29.5119, -41.4441,   1.8168, -18.9435, -16.0865,
         27.6518,  -7.2226,  -3.3751, -16.3176,  13.1361,  57.2965,  42.0779,
        -11.3957,   3.8511,  34.9296,  11.0523,  -1.6520, -21.2339,  -0.1194,
        -23.6073,  74.1978, -49.7747,   9.2131, -48.5429,  -1.1003,  31.5389,
          5.1828,  78.2481, -14.9632, -18.1289,  -6.0582, -33.7714,  64.1643,
          8.6922,   7.4728,  50.9440, -24.1557,  24.6191,  64.7381,  78.0461,
          4.7701, -18.5115, -22.2035, -48.7486,  45.0207, -14.5261, -53.4439,
          1.0283, -13.5850,  26.0242, -41.4457,   0.1871, -15.4528,  51.4376,
          8.9403,   7.0956,  62.5726, -10.4614,  35.7043,  22.5177, -25.3291,
        -26.6390,  15.8753,  12.4475,  13.6877,  -7.5717,  73.0345,  32.3396,
         50.2075,  10.9047,  -0.2959,  28.4481,   5.1260, -31.8251, -38.7784,
         73.0396,  -2.9392, -42.7620, -38.9457,  -2.5065,  15.0793,  56.5153,
         27.0496,  74.9579, -11.5520,  -1.7626, -18.7016,  -1.1489, -27.8159,
         26.9646,  40.2787])
[accuracy error] backward  paddle.Tensor.bmm(Tensor([6339, 120000, 3],"float32"), Tensor([6339, 3, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 158 / 38034 (0.4%)
Greatest absolute difference: 0.03842818737030029 at index (535, 0, 1) (up to 0.01 allowed)
Greatest relative difference: 4.430049419403076 at index (5458, 2, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6339, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([-62.4430,  -5.0081,  -3.2709,  -4.0980,  22.1550, -10.6764, -23.1829,
         21.8591,   4.8672,   4.7014, -13.9502,   5.9491,  -1.9797,  -1.2464,
        -22.7838,   2.3084,  18.7624,   9.2951, -50.1240, -19.9382,  19.9103,
         41.4376,  15.3786,  -9.6995,  16.8779,  39.0429,  40.3070, -18.6244,
         14.5031,  -4.3437,  39.0382,  -8.6074,  29.3692,  25.2091,  20.6163,
         18.5470, -17.2278,  -1.8485,   3.1044, -11.4930, -15.7718,   6.3829,
          8.2895,  23.3251, -31.5166,  -0.7957,  21.7400, -34.2453, -28.4285,
         13.2389,  22.7476,  16.4038, -79.4068,  49.9208,  44.0085,   8.1139,
         58.1010,  19.2926,  -0.2033, -25.8223,  53.7810,   5.6709, -38.0931,
        -17.1628, -17.4073,  -5.0733, -52.8129,   1.0992, -14.0364,  -2.9755,
         37.2765, -46.6953,  28.5681,  31.3670,  -6.9622, -89.7113, -31.3961,
        -19.4754,  27.4080, -14.7280,  -9.3961, -56.6588,  -3.5386, -33.0977,
        -37.2807, -11.4457,   0.8384, -29.9843, -15.0169,  56.4706,  15.5929,
         35.8643, -15.3637,  21.0513,   5.5723,  56.0614, -32.4961,  18.0617,
         -8.5162, -21.6236])
DESIRED: (shape=torch.Size([6339, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([-62.4689,  -5.0072,  -3.2719,  -4.1011,  22.1584, -10.6827, -23.1859,
         21.8564,   4.8591,   4.7058, -13.9498,   5.9468,  -1.9734,  -1.2420,
        -22.7898,   2.3093,  18.7837,   9.2946, -50.1345, -19.9343,  19.9134,
         41.4588,  15.3832,  -9.7070,  16.8812,  39.0574,  40.3321, -18.6228,
         14.5170,  -4.3525,  39.0540,  -8.5972,  29.3739,  25.2181,  20.6229,
         18.5625, -17.2508,  -1.8413,   3.1126, -11.4977, -15.7785,   6.3800,
          8.2803,  23.3420, -31.5316,  -0.8034,  21.7559, -34.2540, -28.4364,
         13.2340,  22.7799,  16.4189, -79.4461,  49.9398,  44.0217,   8.1124,
         58.1327,  19.2991,  -0.2210, -25.8329,  53.7954,   5.6769, -38.1070,
        -17.1740, -17.4224,  -5.0634, -52.8170,   1.0946, -14.0392,  -2.9794,
         37.2980, -46.7216,  28.5640,  31.3775,  -6.9662, -89.7526, -31.4117,
        -19.4745,  27.4048, -14.7340,  -9.4127, -56.6869,  -3.5429, -33.1112,
        -37.3004, -11.4528,   0.8410, -29.9934, -14.9993,  56.4775,  15.5913,
         35.8738, -15.3679,  21.0727,   5.5671,  56.0830, -32.5154,  18.0661,
         -8.5252, -21.6451])
[accuracy error] backward  paddle.Tensor.bmm(Tensor([7012, 108472, 3],"float32"), Tensor([7012, 3, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 42072 (0.3%)
Greatest absolute difference: 0.03148365020751953 at index (4587, 2, 0) (up to 0.01 allowed)
Greatest relative difference: 6.022179126739502 at index (336, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([7012, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([ -4.5110, -22.5344,  16.2471,  12.3322,  35.6256, -30.2781, -11.8103,
         11.4514,  -0.3608,  25.9911,  11.9478,  33.3122,  32.4501,  -8.1753,
        -16.3717, -26.1914,   2.6697,  10.7889,  -6.6277, -32.4015,  48.6922,
        -10.4305, -14.2512,  19.4394, -55.5684,  45.4840,  -8.6230, -58.3932,
         21.5117, -13.4552, -29.6085,   4.1460,  43.2216,  -4.7056, -14.2258,
         40.1736,  44.3477, -19.6346, -16.9067,   8.1548, -59.0187, -49.2923,
         -6.8221, -15.3243,   2.8906,  -9.5760,   7.7721,  23.9911, -15.6867,
        -12.8631,  -0.2146,  23.7386, -13.7147,  50.8812,  -1.6400, -22.8542,
        -10.6901, -51.4848, -47.2097,  34.9857,  -3.3741,  10.0375,   6.6141,
          2.2947,   9.0351,   2.0676,  13.7954,  36.7776, -37.2263,  22.2166,
         39.9668,   9.5143,  -2.2149, -19.1130,   2.5528, -30.4844,  49.9367,
        -59.9661, -81.3014,  48.2363,  18.9576,  32.3346,   2.4540, -29.7091,
        -13.2578,  -9.5578,  29.9889,  -4.2968, -35.1389, -29.5418,  41.7287,
          8.2839, -30.2494, -11.8495,  -5.6675,  49.0376, -12.1419,  26.8425,
         -0.1773,  33.9384])
DESIRED: (shape=torch.Size([7012, 3, 2]), dtype=torch.float32)
First 100 elements: tensor([ -4.5190, -22.5334,  16.2620,  12.3283,  35.6196, -30.2843, -11.8042,
         11.4650,  -0.3678,  26.0020,  11.9564,  33.3154,  32.4644,  -8.1717,
        -16.3789, -26.2086,   2.6688,  10.7970,  -6.6394, -32.4097,  48.7086,
        -10.4273, -14.2417,  19.4438, -55.5884,  45.4833,  -8.6277, -58.4111,
         21.5285, -13.4502, -29.6113,   4.1413,  43.2494,  -4.7026, -14.2287,
         40.1847,  44.3596, -19.6387, -16.9191,   8.1540, -59.0335, -49.3125,
         -6.8132, -15.3336,   2.9041,  -9.5861,   7.7757,  23.9963, -15.6820,
        -12.8810,  -0.2094,  23.7373, -13.6960,  50.8983,  -1.6227, -22.8650,
        -10.6909, -51.5101, -47.2329,  34.9814,  -3.3785,  10.0288,   6.6075,
          2.2972,   9.0392,   2.0606,  13.8055,  36.7846, -37.2384,  22.2213,
         39.9821,   9.5131,  -2.2158, -19.1192,   2.5544, -30.5016,  49.9574,
        -59.9770, -81.3173,  48.2428,  18.9587,  32.3392,   2.4561, -29.7148,
        -13.2595,  -9.5571,  29.9799,  -4.2911, -35.1468, -29.5612,  41.7378,
          8.2878, -30.2585, -11.8534,  -5.6658,  49.0545, -12.1452,  26.8417,
         -0.1792,  33.9521])
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([214748365, 5, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), weight=0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4121385168 / 4294967300 (96.0%)
Greatest absolute difference: 0.25 at index (6, 1, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([214748365, 5, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.1506, -0.2380,  0.0720, -0.1118,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([214748365, 5, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.1506, -0.2380,  0.0720, -0.1118, -0.0939,  0.2313, -0.2357, -0.1537,
         0.1958, -0.2498, -0.0324, -0.0970, -0.1985, -0.0212, -0.0724,  0.0325,
        -0.0660,  0.2067,  0.0319, -0.0203,  0.0510,  0.2123,  0.0265,  0.1384,
         0.1140,  0.1586,  0.1129, -0.2017, -0.2275,  0.1262,  0.1255, -0.1541,
        -0.0517,  0.2041,  0.1553,  0.1373,  0.0538, -0.2185,  0.2284, -0.2242,
        -0.2300,  0.2043, -0.2405, -0.0732,  0.1213,  0.2487, -0.2219, -0.1523,
         0.1482, -0.2465, -0.0952, -0.1300, -0.0279, -0.1713, -0.2296,  0.1465,
         0.1631,  0.2102,  0.1125, -0.0987,  0.0343,  0.0797, -0.2185, -0.2095,
        -0.0275,  0.0598,  0.2201,  0.0454, -0.0890,  0.0476,  0.1282, -0.0928,
         0.0507,  0.0740, -0.2271, -0.1936, -0.0462,  0.2108,  0.1859,  0.2103,
         0.2372, -0.0900, -0.1460, -0.0876, -0.0363,  0.0149, -0.0015, -0.0598,
        -0.1580, -0.1395,  0.1530, -0.1608, -0.0639, -0.0217, -0.1733, -0.1270,
        -0.0804, -0.1001, -0.0601, -0.1143], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), weight=0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2189499607 / 2281701379 (96.0%)
Greatest absolute difference: 0.25 at index (12690810,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([-0.1094,  0.1070, -0.1317,  0.0668,  0.2433, -0.1778,  0.2385,  0.1165,
         0.1524,  0.0324, -0.0276,  0.0788, -0.0401,  0.2463,  0.0761,  0.0348,
        -0.1647, -0.2000,  0.0875, -0.1853,  0.0990, -0.0952,  0.0155,  0.1347,
        -0.2281,  0.0953, -0.1459, -0.1330, -0.0714,  0.0574,  0.1831,  0.0318,
        -0.1188,  0.1916, -0.1597, -0.0588, -0.1393, -0.2396, -0.0848,  0.2378,
         0.0922, -0.0190, -0.1189,  0.1537,  0.1601, -0.1788, -0.2375,  0.2247,
         0.2321, -0.1539, -0.1974, -0.2089, -0.0765,  0.0401,  0.2275, -0.2286,
         0.1112, -0.0492,  0.1491,  0.0013,  0.0871, -0.1377, -0.1319, -0.0960,
        -0.1638,  0.1424, -0.0798,  0.0984, -0.1721, -0.0934,  0.0885,  0.0062,
         0.0480, -0.2063, -0.1625, -0.1084,  0.0219,  0.0866, -0.0092,  0.0968,
        -0.0986,  0.1326,  0.1717, -0.1870, -0.1917, -0.1355, -0.1369, -0.0083,
         0.1913,  0.0389, -0.1109,  0.1091,  0.2366, -0.1109, -0.1926,  0.0794,
        -0.1832, -0.1174, -0.1284,  0.0723])
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([1],"float16"), weight=0.2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4186468383 / 4294967300 (97.5%)
Greatest absolute difference: 0.39990234375 at index (0, 884) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 1073741825]), dtype=torch.float16)
First 100 elements: tensor([ 0.1641,  0.0144, -0.0956,  0.1888,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 1073741825]), dtype=torch.float16)
First 100 elements: tensor([ 0.1641,  0.0144, -0.0956,  0.1888,  0.0429, -0.2115,  0.0487, -0.2068,
        -0.0558, -0.3032,  0.1608, -0.2406,  0.1885,  0.2039, -0.0477,  0.0253,
        -0.2028, -0.0813, -0.3870, -0.1500,  0.3953,  0.0187, -0.3992,  0.2405,
        -0.1744, -0.1387,  0.0690,  0.3152,  0.3638, -0.1698,  0.0775, -0.1865,
        -0.1616,  0.3020, -0.1428,  0.3621, -0.3801, -0.3599,  0.0476, -0.2131,
         0.3315,  0.2834, -0.2301,  0.3708, -0.3052, -0.2122, -0.0906, -0.1814,
        -0.2913, -0.2515, -0.0505,  0.0090,  0.1875,  0.1210, -0.1849, -0.2448,
        -0.1667, -0.3472, -0.2817, -0.0945,  0.2041, -0.2964, -0.1000,  0.2600,
         0.3894, -0.2966,  0.1761, -0.3442,  0.0508, -0.2283, -0.0307, -0.2649,
        -0.1664, -0.3945,  0.2415,  0.3484,  0.1915,  0.0352, -0.1555, -0.2698,
        -0.2639, -0.2201, -0.2812,  0.0566,  0.2406,  0.0519, -0.1713,  0.0387,
         0.1278,  0.0249,  0.3315,  0.0750, -0.2207,  0.0027, -0.0155,  0.1760,
         0.0324, -0.0819,  0.3625,  0.1902], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), weight=0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4121350962 / 4294967300 (96.0%)
Greatest absolute difference: 0.25 at index (0, 2796) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 1073741825]), dtype=torch.float16)
First 100 elements: tensor([ 0.2024, -0.0213,  0.0806, -0.0172,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 1073741825]), dtype=torch.float16)
First 100 elements: tensor([ 0.2024, -0.0213,  0.0806, -0.0172,  0.2318,  0.0383, -0.2224, -0.2275,
         0.0897,  0.1781,  0.0526,  0.1215, -0.0701,  0.1294, -0.1514,  0.0327,
        -0.2350, -0.1110, -0.1881,  0.0625, -0.0673, -0.0224,  0.1783,  0.1407,
        -0.0817, -0.1415,  0.1072, -0.0121, -0.1538, -0.1705,  0.1578,  0.1131,
        -0.1379,  0.0110,  0.0741, -0.2061, -0.0387,  0.1750,  0.2463, -0.0589,
         0.0153,  0.1095,  0.0529, -0.1978, -0.2430,  0.2188, -0.0055,  0.1750,
        -0.1639, -0.1703, -0.2230,  0.2180,  0.0225,  0.1844,  0.1184,  0.1063,
         0.0530,  0.0148, -0.1576,  0.2291,  0.2480, -0.0559, -0.0012, -0.2231,
        -0.1902, -0.2170, -0.2263,  0.0670, -0.0240, -0.1107,  0.0327,  0.0993,
        -0.2308, -0.0340, -0.1016, -0.1407, -0.1423, -0.0604, -0.0685, -0.0455,
         0.2343,  0.2467, -0.2422, -0.1564, -0.1288,  0.0614,  0.0850, -0.1947,
        -0.2047,  0.0031,  0.1989, -0.0964, -0.1613,  0.1659,  0.0757,  0.1617,
         0.1840, -0.0610, -0.0208,  0.1530], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 5, 214748365],"float16"), y=Tensor([4, 5, 214748365],"float16"), weight=0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4121373397 / 4294967300 (96.0%)
Greatest absolute difference: 0.25 at index (0, 0, 8851) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 5, 214748365]), dtype=torch.float16)
First 100 elements: tensor([-0.0135,  0.2089,  0.1234, -0.0736,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 5, 214748365]), dtype=torch.float16)
First 100 elements: tensor([-0.0135,  0.2089,  0.1234, -0.0736, -0.1774, -0.1960,  0.0504, -0.0853,
        -0.1846,  0.0896, -0.1006,  0.1332, -0.1449, -0.2385,  0.0083,  0.1685,
        -0.1936,  0.1761, -0.1006, -0.0032, -0.1956, -0.1541,  0.1914,  0.0299,
         0.1777,  0.0648, -0.0431, -0.2290, -0.1493,  0.1511, -0.1678,  0.0827,
         0.2153, -0.2065, -0.1138,  0.1693,  0.1284,  0.1045, -0.2366, -0.1387,
        -0.1098,  0.2365, -0.0776,  0.2372, -0.2117,  0.2139, -0.2281,  0.1256,
        -0.2441,  0.1126, -0.0483, -0.1371, -0.2477, -0.0118, -0.2495,  0.0334,
        -0.2168, -0.1816,  0.0056, -0.1810, -0.1539,  0.1946, -0.0429, -0.1425,
         0.0802, -0.0921,  0.1429,  0.1984,  0.1779,  0.1494, -0.2346,  0.0151,
        -0.0094, -0.2007, -0.0656, -0.2172,  0.2378, -0.0995, -0.0265,  0.2480,
        -0.1412, -0.0129,  0.0671, -0.0541,  0.2065, -0.0643, -0.1338,  0.0430,
        -0.0486,  0.0731,  0.1296, -0.1967, -0.0563, -0.2224,  0.0911,  0.1398,
         0.1196, -0.1508, -0.0634,  0.0695], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208158913 / 4294967360 (98.0%)
Greatest absolute difference: 0.5 at index (0, 0, 0, 1086) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 64) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 5, 4, 53687092]), dtype=torch.float16)
First 100 elements: tensor([-0.4966,  0.0218,  0.3586, -0.0106,  0.0165, -0.0115, -0.1766,  0.0672,
        -0.0445,  0.1243, -0.1682,  0.1588,  0.4707,  0.3188, -0.1696,  0.4805,
         0.4810, -0.4102, -0.0608,  0.3118,  0.1151,  0.0276,  0.1743,  0.0834,
         0.1028,  0.2739, -0.0029, -0.0932,  0.0646,  0.0185,  0.1707, -0.4792,
        -0.1256, -0.1757, -0.3215,  0.2126,  0.1174,  0.4978, -0.3206,  0.1372,
         0.1161,  0.2781, -0.1967,  0.3669,  0.1843,  0.2267,  0.3347, -0.0596,
        -0.2097, -0.1998,  0.1315, -0.2861,  0.4805,  0.1433,  0.4683, -0.0916,
         0.1746,  0.3154,  0.2791, -0.2085, -0.3877,  0.2573,  0.2659,  0.1130,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 5, 4, 53687092]), dtype=torch.float16)
First 100 elements: tensor([-0.4966,  0.0218,  0.3586, -0.0106,  0.0165, -0.0115, -0.1766,  0.0672,
        -0.0445,  0.1243, -0.1682,  0.1588,  0.4707,  0.3188, -0.1696,  0.4805,
         0.4810, -0.4102, -0.0608,  0.3118,  0.1151,  0.0276,  0.1743,  0.0834,
         0.1028,  0.2739, -0.0029, -0.0932,  0.0646,  0.0185,  0.1707, -0.4792,
        -0.1256, -0.1757, -0.3215,  0.2126,  0.1174,  0.4978, -0.3206,  0.1372,
         0.1161,  0.2781, -0.1967,  0.3669,  0.1843,  0.2267,  0.3347, -0.0596,
        -0.2097, -0.1998,  0.1315, -0.2861,  0.4805,  0.1433,  0.4683, -0.0916,
         0.1746,  0.3154,  0.2791, -0.2085, -0.3877,  0.2573,  0.2659,  0.1130,
        -0.3997, -0.0639, -0.0321,  0.4482,  0.0666,  0.0878,  0.3181, -0.1938,
         0.4175,  0.4148,  0.0945, -0.4365, -0.4456, -0.3049,  0.2482, -0.2896,
         0.4753, -0.0536, -0.2343, -0.3779, -0.2998, -0.2961,  0.1749, -0.4187,
        -0.4202,  0.4575,  0.3198,  0.1960, -0.2446,  0.2281, -0.2852, -0.2546,
         0.1315,  0.3879,  0.4705,  0.4937], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208178167 / 4294967340 (98.0%)
Greatest absolute difference: 0.5 at index (0, 0, 2353, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 14, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 5, 71582789, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.4836, -0.3157,  0.2136,  0.3972,  0.4316,  0.3350, -0.1019, -0.3682,
         0.2255, -0.3447, -0.0440,  0.2590,  0.3274, -0.2900, -0.2964, -0.0893,
        -0.0668, -0.3999, -0.0641,  0.1670, -0.4636,  0.0025, -0.1597, -0.3179,
        -0.3835,  0.1758,  0.0096, -0.4041, -0.2478,  0.4731, -0.4749, -0.1149,
         0.2759, -0.2542, -0.1449,  0.2937, -0.4932, -0.2075,  0.1158,  0.1927,
         0.3096,  0.0739,  0.3994,  0.1965,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 5, 71582789, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.4836, -0.3157,  0.2136,  0.3972,  0.4316,  0.3350, -0.1019, -0.3682,
         0.2255, -0.3447, -0.0440,  0.2590,  0.3274, -0.2900, -0.2964, -0.0893,
        -0.0668, -0.3999, -0.0641,  0.1670, -0.4636,  0.0025, -0.1597, -0.3179,
        -0.3835,  0.1758,  0.0096, -0.4041, -0.2478,  0.4731, -0.4749, -0.1149,
         0.2759, -0.2542, -0.1449,  0.2937, -0.4932, -0.2075,  0.1158,  0.1927,
         0.3096,  0.0739,  0.3994,  0.1965, -0.4019, -0.3662, -0.1733,  0.3035,
         0.0427,  0.0892,  0.0609,  0.1137,  0.4297, -0.3096,  0.2732,  0.1571,
         0.0656,  0.3801, -0.3206, -0.0583, -0.3958, -0.1831, -0.2876,  0.2756,
         0.0364, -0.4363, -0.1478,  0.4526, -0.2966, -0.4309, -0.1168, -0.3323,
        -0.2593,  0.4280,  0.2766, -0.1263,  0.0930, -0.1517,  0.2981,  0.1520,
         0.2499, -0.2673,  0.2168, -0.0767,  0.0940, -0.2747, -0.4219,  0.2590,
        -0.4810,  0.4299, -0.4180, -0.0283,  0.1284, -0.4507, -0.0046, -0.0350,
         0.0717, -0.4824, -0.1456, -0.3335], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208165900 / 4294967340 (98.0%)
Greatest absolute difference: 0.5 at index (0, 0, 289, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 14, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 5, 71582789, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.2009,  0.3389,  0.3848, -0.3489, -0.3120, -0.0743, -0.4207,  0.0098,
         0.1299, -0.4167, -0.1554,  0.3794,  0.2649,  0.4023,  0.1117,  0.0856,
        -0.3247, -0.3887, -0.2255,  0.4475,  0.2424,  0.0889, -0.4656, -0.1041,
         0.2966, -0.4551, -0.4187, -0.3313, -0.2639,  0.1609, -0.0743, -0.3677,
        -0.3635,  0.2168,  0.2319, -0.1578,  0.0939, -0.0978, -0.2350, -0.2974,
         0.2883,  0.3464,  0.0133,  0.2883,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 5, 71582789, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.2009,  0.3389,  0.3848, -0.3489, -0.3120, -0.0743, -0.4207,  0.0098,
         0.1299, -0.4167, -0.1554,  0.3794,  0.2649,  0.4023,  0.1117,  0.0856,
        -0.3247, -0.3887, -0.2255,  0.4475,  0.2424,  0.0889, -0.4656, -0.1041,
         0.2966, -0.4551, -0.4187, -0.3313, -0.2639,  0.1609, -0.0743, -0.3677,
        -0.3635,  0.2168,  0.2319, -0.1578,  0.0939, -0.0978, -0.2350, -0.2974,
         0.2883,  0.3464,  0.0133,  0.2883, -0.3093, -0.4360,  0.2827, -0.2898,
         0.2500, -0.0338,  0.2808, -0.0512, -0.4124,  0.3679, -0.1853, -0.1322,
         0.4695,  0.1219,  0.0796, -0.1907,  0.2206,  0.2988,  0.4612, -0.1409,
         0.3860, -0.0775,  0.3181, -0.3010,  0.0950, -0.4429, -0.4727, -0.3003,
        -0.4458, -0.4153, -0.2852,  0.2208, -0.4375,  0.3589,  0.4822,  0.2236,
         0.2556, -0.4468, -0.0578,  0.1583, -0.1907,  0.0768, -0.1943,  0.1206,
         0.4868, -0.4722,  0.1886,  0.0349, -0.1052, -0.3643,  0.4048,  0.3037,
         0.1447,  0.2404,  0.1948, -0.1350], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4121367026 / 4294967328 (96.0%)
Greatest absolute difference: 0.25 at index (0, 78, 3, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 2, 2, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 89478486, 4, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.0180,  0.0506, -0.1522, -0.1948, -0.1796, -0.1592,  0.0953, -0.1143,
         0.2314,  0.0544,  0.2424, -0.2045,  0.2045, -0.0674,  0.0382, -0.1672,
         0.1885,  0.1807,  0.0950,  0.1946,  0.2391,  0.0766, -0.0127, -0.1472,
         0.0115, -0.0821,  0.1130, -0.0571,  0.0803,  0.1092,  0.1593, -0.1864,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 89478486, 4, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.0180,  0.0506, -0.1522, -0.1948, -0.1796, -0.1592,  0.0953, -0.1143,
         0.2314,  0.0544,  0.2424, -0.2045,  0.2045, -0.0674,  0.0382, -0.1672,
         0.1885,  0.1807,  0.0950,  0.1946,  0.2391,  0.0766, -0.0127, -0.1472,
         0.0115, -0.0821,  0.1130, -0.0571,  0.0803,  0.1092,  0.1593, -0.1864,
         0.1830, -0.0613, -0.1804, -0.2457, -0.0363, -0.1357, -0.0088,  0.0895,
         0.1034, -0.0156, -0.2161,  0.2311, -0.1018, -0.0943,  0.0419, -0.2321,
        -0.0616, -0.1934,  0.1024, -0.1591,  0.1240,  0.2488, -0.1191, -0.1940,
        -0.1855,  0.2031, -0.1162, -0.0715,  0.1561, -0.1014,  0.1863,  0.2480,
        -0.1473, -0.1273, -0.0858,  0.0507, -0.1555,  0.0559, -0.0438,  0.0424,
         0.0656,  0.0304, -0.0760,  0.2133,  0.1387, -0.0676, -0.0632,  0.0227,
        -0.1973, -0.1252, -0.2410,  0.1001,  0.2159,  0.1475, -0.1726,  0.2065,
        -0.1417,  0.1061,  0.1741,  0.0722,  0.0804,  0.1803, -0.0054, -0.1353,
         0.0454,  0.0184, -0.1927,  0.1707], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208189852 / 4294967340 (98.0%)
Greatest absolute difference: 0.5 at index (108, 1, 3, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 3, 2, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([71582789, 5, 4, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.3269,  0.2834, -0.3008, -0.0563,  0.0430,  0.1711,  0.1107, -0.4441,
         0.4172,  0.2856, -0.1980,  0.0098,  0.0076, -0.3831, -0.1204,  0.2581,
         0.4727, -0.1039, -0.4436, -0.2155,  0.3235,  0.4995, -0.0843, -0.1533,
        -0.0719, -0.4792, -0.3835,  0.3506, -0.0768, -0.2883,  0.2007,  0.2859,
         0.3997,  0.2927, -0.2910, -0.3623, -0.3970, -0.1760, -0.4741,  0.3047,
         0.1238,  0.3831, -0.1276,  0.1267,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([71582789, 5, 4, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.3269,  0.2834, -0.3008, -0.0563,  0.0430,  0.1711,  0.1107, -0.4441,
         0.4172,  0.2856, -0.1980,  0.0098,  0.0076, -0.3831, -0.1204,  0.2581,
         0.4727, -0.1039, -0.4436, -0.2155,  0.3235,  0.4995, -0.0843, -0.1533,
        -0.0719, -0.4792, -0.3835,  0.3506, -0.0768, -0.2883,  0.2007,  0.2859,
         0.3997,  0.2927, -0.2910, -0.3623, -0.3970, -0.1760, -0.4741,  0.3047,
         0.1238,  0.3831, -0.1276,  0.1267,  0.4529,  0.2317,  0.1240, -0.1770,
         0.1659, -0.1910, -0.4536,  0.3621,  0.0534,  0.1105,  0.4849,  0.4668,
         0.2456, -0.1273, -0.3677,  0.3218,  0.2317,  0.1871,  0.1680, -0.0730,
        -0.4702,  0.1611, -0.1178, -0.0363, -0.3401, -0.2161,  0.0807, -0.0789,
        -0.0168, -0.1312,  0.0882,  0.3313, -0.3582,  0.4248, -0.3181, -0.3147,
        -0.4031,  0.4438,  0.4900,  0.3967, -0.0251, -0.3167, -0.4495, -0.4041,
        -0.3567, -0.0378,  0.3096, -0.0108,  0.3801, -0.4539, -0.0178, -0.1022,
        -0.0166,  0.3677, -0.1262,  0.3818], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4121375383 / 4294967340 (96.0%)
Greatest absolute difference: 0.25 at index (56, 1, 3, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 3, 2, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([71582789, 5, 4, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.0759,  0.1236,  0.0013,  0.0230, -0.0292, -0.0695, -0.0419, -0.1016,
        -0.0547, -0.1652,  0.1031,  0.1467, -0.1323, -0.2178, -0.2010,  0.0734,
         0.1179, -0.0231, -0.2013,  0.0451, -0.2456,  0.2002, -0.1720,  0.0025,
        -0.2323, -0.2428, -0.1331,  0.2142,  0.0700,  0.0382, -0.0845,  0.2164,
         0.0119, -0.0153, -0.0231,  0.1228, -0.0122,  0.0849,  0.0511,  0.2002,
         0.0184, -0.0059,  0.2463,  0.1371,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([71582789, 5, 4, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.0759,  0.1236,  0.0013,  0.0230, -0.0292, -0.0695, -0.0419, -0.1016,
        -0.0547, -0.1652,  0.1031,  0.1467, -0.1323, -0.2178, -0.2010,  0.0734,
         0.1179, -0.0231, -0.2013,  0.0451, -0.2456,  0.2002, -0.1720,  0.0025,
        -0.2323, -0.2428, -0.1331,  0.2142,  0.0700,  0.0382, -0.0845,  0.2164,
         0.0119, -0.0153, -0.0231,  0.1228, -0.0122,  0.0849,  0.0511,  0.2002,
         0.0184, -0.0059,  0.2463,  0.1371,  0.2391,  0.0959,  0.2336,  0.0809,
        -0.1338,  0.1958,  0.2406, -0.0962,  0.0342, -0.1863,  0.2123,  0.0728,
        -0.1903,  0.2467,  0.2479, -0.0801,  0.1078, -0.2347, -0.2291, -0.2169,
         0.0346,  0.1608,  0.1519, -0.2100, -0.2417,  0.2126, -0.1969, -0.0208,
        -0.1643, -0.1128, -0.0504, -0.1209, -0.0409, -0.1323, -0.0491,  0.2109,
         0.2029, -0.2089, -0.2343, -0.0722, -0.1499,  0.0507,  0.2188,  0.2117,
         0.1909, -0.1371, -0.0554,  0.1086,  0.0810, -0.0470, -0.0432, -0.2147,
        -0.0286,  0.0145, -0.2251, -0.1110], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([1],"float16"), weight=0.2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4186473966 / 4294967300 (97.5%)
Greatest absolute difference: 0.39990234375 at index (177, 4) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([858993460, 5]), dtype=torch.float16)
First 100 elements: tensor([-0.1532, -0.2352, -0.3967,  0.0638,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([858993460, 5]), dtype=torch.float16)
First 100 elements: tensor([-0.1532, -0.2351, -0.3967,  0.0638, -0.3279,  0.3267, -0.2484,  0.0501,
         0.0266, -0.0267, -0.0190,  0.0139,  0.0751,  0.0237,  0.0895, -0.3396,
        -0.2035,  0.2678,  0.2172,  0.1091,  0.2351,  0.1321,  0.3042, -0.2493,
         0.2377,  0.0634,  0.2668,  0.2527, -0.2148,  0.1865,  0.1394,  0.3083,
         0.3667,  0.0587, -0.1123,  0.1565,  0.1610,  0.2942,  0.3699,  0.0779,
        -0.0571,  0.0822,  0.1140, -0.1982, -0.2207, -0.2727,  0.2817,  0.2195,
        -0.3320,  0.2764, -0.3264,  0.3755, -0.0571, -0.2043,  0.1328, -0.1653,
        -0.0402, -0.3408,  0.1746, -0.3745, -0.0191,  0.2360,  0.3518, -0.0609,
        -0.3208,  0.0743,  0.0314, -0.0282, -0.3345, -0.3157,  0.3274,  0.2166,
         0.1128,  0.0670, -0.0853,  0.3320,  0.1172,  0.1976,  0.3123, -0.3330,
         0.0390,  0.2969, -0.1388,  0.2260,  0.0244, -0.0709,  0.3188, -0.0051,
        -0.1560,  0.1777, -0.3430, -0.3281, -0.2389,  0.1187, -0.3958, -0.0243,
        -0.3459, -0.2905,  0.3503, -0.0894], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([143165577, 3, 2, 5],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147517588 / 4294967310 (50.0%)
Greatest absolute difference: nan at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([143165577, 3, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000e+00,  1.1987e-01,  1.1758e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  3.8965e+00,  2.6147e-01,  0.0000e+00,  0.0000e+00,
        -2.3965e+00,  0.0000e+00,  0.0000e+00,  1.4043e+00,  1.6035e+00,
         0.0000e+00,  1.2422e+00, -1.9062e+00, -2.1504e+00,  0.0000e+00,
         0.0000e+00,  2.0430e+00,  9.5410e-01,  0.0000e+00, -1.4980e+00,
         1.5264e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -1.7002e+00,  0.0000e+00, -1.6602e+00, -7.8369e-01,  0.0000e+00,
        -4.8398e+00,  8.6377e-01, -2.2832e+00,  2.9199e+00,  1.7383e+00,
        -1.9590e+00,  3.6602e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         2.3750e+00,  0.0000e+00,  0.0000e+00, -6.0500e+01, -1.7822e+00,
         9.5276e-02,  0.0000e+00, -1.5205e+00,  0.0000e+00,  0.0000e+00,
        -9.7461e-01,  3.7129e+00,  2.2217e-01,  1.6924e+00, -9.7363e-01,
         0.0000e+00, -1.7617e+00, -1.8652e+00, -1.9834e+00, -1.8906e+00,
         1.5195e+00, -4.0703e+00,  4.0430e+00,  1.7852e+00,  1.8838e+00,
         0.0000e+00, -4.7070e+00, -1.1123e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -4.5664e+00, -3.9922e+00, -6.6600e+03,
         2.5171e-01, -6.0889e-01,  0.0000e+00, -3.7559e+00,  0.0000e+00,
        -2.9453e+00,  0.0000e+00, -1.4707e+00,  0.0000e+00, -2.1504e+00,
        -2.9224e-01,  0.0000e+00, -2.0251e-01,  0.0000e+00,  0.0000e+00,
        -1.3447e+00,  0.0000e+00,  0.0000e+00,  1.9812e+01, -5.2295e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([143165577, 3, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([        nan,  1.1987e-01,  1.1758e+00,         nan,         nan,
                nan,  3.8965e+00,  2.6147e-01,         nan,         nan,
        -2.3965e+00,         nan,         nan,  1.4043e+00,  1.6035e+00,
                nan,  1.2422e+00, -1.9062e+00, -2.1504e+00,         nan,
                nan,  2.0430e+00,  9.5410e-01,         nan, -1.4980e+00,
         1.5264e+00,         nan,         nan,         nan,         nan,
        -1.7002e+00,         nan, -1.6602e+00, -7.8369e-01,         nan,
        -4.8398e+00,  8.6377e-01, -2.2832e+00,  2.9199e+00,  1.7383e+00,
        -1.9590e+00,  3.6602e+00,         nan,         nan,         nan,
         2.3750e+00,         nan,         nan, -6.0500e+01, -1.7822e+00,
         9.5276e-02,         nan, -1.5205e+00,         nan,         nan,
        -9.7461e-01,  3.7129e+00,  2.2217e-01,  1.6924e+00, -9.7363e-01,
                nan, -1.7617e+00, -1.8652e+00, -1.9834e+00, -1.8906e+00,
         1.5195e+00, -4.0703e+00,  4.0430e+00,  1.7852e+00,  1.8838e+00,
                nan, -4.7070e+00, -1.1123e+00,         nan,         nan,
                nan,         nan, -4.5664e+00, -3.9922e+00, -6.6600e+03,
         2.5171e-01, -6.0889e-01,         nan, -3.7559e+00,         nan,
        -2.9453e+00,         nan, -1.4707e+00,         nan, -2.1504e+00,
        -2.9224e-01,         nan, -2.0251e-01,         nan,         nan,
        -1.3447e+00,         nan,         nan,  1.9812e+01, -5.2295e-01],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([2147483649, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147554707 / 4294967298 (50.0%)
Greatest absolute difference: nan at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2147483649, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000e+00,  1.2295e+00, -1.8115e+00,  0.0000e+00, -4.7539e+00,
        -1.1377e-01,  1.4307e+00, -5.9258e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.7227e+00,  0.0000e+00,  0.0000e+00, -2.3887e+00,
         1.6455e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -2.1602e+00,  0.0000e+00,  0.0000e+00,  4.2920e-01,  0.0000e+00,
         1.9297e+00,  3.8789e+00,  5.9619e-01,  0.0000e+00,  4.1367e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  6.3633e+00,  0.0000e+00, -6.8672e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -1.5986e+00,  6.5186e-01,
         8.3691e-01, -1.7126e-01,  0.0000e+00,  0.0000e+00, -3.2938e+01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  2.6328e+00, -6.1328e-01,
         1.0488e+02, -9.0332e-01,  0.0000e+00, -3.2148e+00,  0.0000e+00,
         2.2930e+00,  0.0000e+00,  0.0000e+00,  3.3789e-01, -5.4382e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -1.7744e+00,  0.0000e+00,
         2.0742e+00,  2.0684e+00, -4.8999e-01,  0.0000e+00, -8.4570e-01,
        -1.7402e+00,  8.1885e-01,  0.0000e+00, -5.7930e+00, -8.3838e-01,
        -1.2539e+00,  1.6565e-01,  8.0615e-01, -1.0752e+00,  1.0850e+00,
         0.0000e+00,  1.8818e+00,  4.0352e+00,  0.0000e+00,  0.0000e+00,
         1.9756e+00, -2.1797e+00, -2.7756e-02,  0.0000e+00,  0.0000e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2147483649, 2]), dtype=torch.float16)
First 100 elements: tensor([        nan,  1.2295e+00, -1.8115e+00,         nan, -4.7539e+00,
        -1.1377e-01,  1.4307e+00, -5.9258e+00,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,  1.7227e+00,         nan,         nan, -2.3887e+00,
         1.6455e+00,         nan,         nan,         nan,         nan,
        -2.1602e+00,         nan,         nan,  4.2920e-01,         nan,
         1.9297e+00,  3.8789e+00,  5.9619e-01,         nan,  4.1367e+00,
                nan,         nan,         nan,         nan,         nan,
                nan,         nan,  6.3633e+00,         nan, -6.8672e+00,
                nan,         nan,         nan, -1.5986e+00,  6.5186e-01,
         8.3691e-01, -1.7126e-01,         nan,         nan, -3.2938e+01,
                nan,         nan,         nan,  2.6328e+00, -6.1328e-01,
         1.0488e+02, -9.0332e-01,         nan, -3.2148e+00,         nan,
         2.2930e+00,         nan,         nan,  3.3789e-01, -5.4382e-02,
                nan,         nan,         nan, -1.7744e+00,         nan,
         2.0742e+00,  2.0684e+00, -4.8999e-01,         nan, -8.4570e-01,
        -1.7402e+00,  8.1885e-01,         nan, -5.7930e+00, -8.3838e-01,
        -1.2539e+00,  1.6565e-01,  8.0615e-01, -1.0752e+00,  1.0850e+00,
                nan,  1.8818e+00,  4.0352e+00,         nan,         nan,
         1.9756e+00, -2.1797e+00, -2.7756e-02,         nan,         nan],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1140853098 / 2281701379 (50.0%)
Greatest absolute difference: nan at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([  0.0000,  -1.8161,   0.0000,   0.0000,  -3.5616,   0.0000,   0.0000,
          0.8268,   0.0000,   0.0000,   0.0000,  -1.0920,  -0.0428,  -0.4915,
          0.0000,  -0.6506,   3.0884,   0.0000,   1.6024,   0.0000,   0.5614,
         -0.1469,   0.0000,   0.0000,   0.0000,   0.0000,   1.2610,   0.0000,
          0.0000,   0.1660,   0.0000,   0.3503,   0.0000,   0.0000,   1.0668,
         -3.0241,  -3.8919,  -1.4258,  -1.1774,  -0.5967,  -0.6414,  -0.9486,
          0.0000,   0.0000,   0.5765,   0.0000,   2.2547,   0.2762,   0.0000,
          3.7724,   2.6895,  -1.9217,   0.0000,  -2.9373,   4.5107,   0.0000,
          0.0000,   1.5489,   2.5197,   0.0000,  -2.0408,   0.0000,   3.9382,
         -0.5371,   0.0000,   0.0000,  -2.6603,   0.9206,   0.0000,  -1.2282,
          0.0000,   0.0000,   0.0000,   0.0000,  -2.2496,  -0.6769,   0.5618,
          0.0000,   0.9615,   2.5296,   0.0000,   0.0000, -12.7008,  -2.4964,
          0.0000,   0.0000,   0.0000,   0.0000,   0.0000,  -1.6849,   0.0000,
          0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
          0.0000,  -2.1791])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([     nan,  -1.8161,      nan,      nan,  -3.5616,      nan,      nan,
          0.8268,      nan,      nan,      nan,  -1.0920,  -0.0428,  -0.4915,
             nan,  -0.6506,   3.0884,      nan,   1.6024,      nan,   0.5614,
         -0.1469,      nan,      nan,      nan,      nan,   1.2610,      nan,
             nan,   0.1660,      nan,   0.3503,      nan,      nan,   1.0668,
         -3.0241,  -3.8919,  -1.4258,  -1.1774,  -0.5967,  -0.6414,  -0.9486,
             nan,      nan,   0.5765,      nan,   2.2547,   0.2762,      nan,
          3.7724,   2.6895,  -1.9217,      nan,  -2.9373,   4.5107,      nan,
             nan,   1.5489,   2.5197,      nan,  -2.0408,      nan,   3.9382,
         -0.5371,      nan,      nan,  -2.6603,   0.9206,      nan,  -1.2282,
             nan,      nan,      nan,      nan,  -2.2496,  -0.6769,   0.5618,
             nan,   0.9615,   2.5296,      nan,      nan, -12.7008,  -2.4964,
             nan,      nan,      nan,      nan,      nan,  -1.6849,      nan,
             nan,      nan,      nan,      nan,      nan,      nan,      nan,
             nan,  -2.1791])
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 1073741825],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147454244 / 4294967300 (50.0%)
Greatest absolute difference: nan at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 1073741825]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000, -4.2969, -1.9160,  0.0000,  0.0000,  0.0000,  0.0000, 38.8125,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
        -0.4976,  0.0000,  0.0000,  0.7729,  0.0000,  0.0000, -1.4375,  0.0000,
         1.9668,  6.0352, -1.7031,  0.0000,  0.0000, -0.5122,  2.0195,  2.8242,
         0.0000,  2.9746,  0.0000,  0.2915, -1.2715, -1.1113,  0.0000,  0.0000,
         0.0000,  2.1914, -3.4492, -0.6445,  2.7246,  1.3818,  0.1195,  0.0000,
        10.3906, -4.8477,  6.8555, -0.5972, -1.5176,  0.0000,  0.0000, -0.0554,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  3.6445,
        -7.0312,  2.2773,  0.0000,  0.0000,  4.1953,  1.8770,  0.0000,  0.4832,
         0.0000, -0.4263, -3.2832,  0.0000,  0.0000, -0.3638, -3.3867,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000, -3.1211,  0.0000, -4.1602, 18.5625,
         0.6572,  2.3965,  0.0000,  0.0000, -3.3359, -2.2441, -0.4380, -0.1317,
         0.0000, -0.8027,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 1073741825]), dtype=torch.float16)
First 100 elements: tensor([    nan, -4.2969, -1.9160,     nan,     nan,     nan,     nan, 38.8125,
            nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,
        -0.4976,     nan,     nan,  0.7729,     nan,     nan, -1.4375,     nan,
         1.9668,  6.0352, -1.7031,     nan,     nan, -0.5122,  2.0195,  2.8242,
            nan,  2.9746,     nan,  0.2915, -1.2715, -1.1113,     nan,     nan,
            nan,  2.1914, -3.4492, -0.6445,  2.7246,  1.3818,  0.1195,     nan,
        10.3906, -4.8477,  6.8555, -0.5972, -1.5176,     nan,     nan, -0.0554,
            nan,     nan,     nan,     nan,     nan,     nan,     nan,  3.6445,
        -7.0312,  2.2773,     nan,     nan,  4.1953,  1.8770,     nan,  0.4832,
            nan, -0.4263, -3.2832,     nan,     nan, -0.3638, -3.3867,     nan,
            nan,     nan,     nan,     nan, -3.1211,     nan, -4.1602, 18.5625,
         0.6572,  2.3965,     nan,     nan, -3.3359, -2.2441, -0.4380, -0.1317,
            nan, -0.8027,     nan,     nan], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 107374183, 2, 5],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147502359 / 4294967320 (50.0%)
Greatest absolute difference: nan at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 107374183, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([  0.0000,   2.3203,   0.0000,   0.0000,   1.5332,   2.0410,   0.0000,
         -1.5039,   1.9863,   0.7085,   0.0000,  -2.1328,   0.0000,   0.0000,
         -5.1367,  65.6875,   0.0000,   0.0000,   0.0000,   0.1838,  -0.2001,
          0.5435,   0.0000,   0.0000,   0.0000,   0.0000,   1.1631,  -1.5527,
          1.4658,   0.0000,   0.0000,   0.0000,   0.0000,   1.2695,   0.0000,
         -0.6592,   1.5703,   6.0430,   0.8442,   1.1260,   0.0000,   1.3252,
          0.0000,   0.0000,   0.0000,   0.9854,  -1.5410,  -5.0625,   0.0000,
          1.9365,   0.7178,   0.0000,   0.8477,   0.0000,   1.7334,  -0.6313,
          3.3574,  -0.4758,  -0.4185,   2.1660,   0.0000,   0.0000,   0.0000,
          0.0000,   0.0000,   0.0000,  -2.0059,   0.5908,   0.0000,   0.0000,
         -1.1582,   0.9268,  -4.1562, -10.6484,   0.0000,   0.0000,   8.8438,
          0.0000,  -1.4062,   0.0000,  -0.7959,  -8.3828,   0.0000,  -1.8047,
          1.9355,   1.7334,   0.0000,   0.0000,   0.0000,   0.0000,  -1.1006,
          1.0059,   0.1132,  -3.7109,   0.9790,  25.1094,   0.0000,   1.1797,
         72.9375,   0.4697], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 107374183, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([     nan,   2.3203,      nan,      nan,   1.5332,   2.0410,      nan,
         -1.5039,   1.9863,   0.7085,      nan,  -2.1328,      nan,      nan,
         -5.1367,  65.6875,      nan,      nan,      nan,   0.1838,  -0.2001,
          0.5435,      nan,      nan,      nan,      nan,   1.1631,  -1.5527,
          1.4658,      nan,      nan,      nan,      nan,   1.2695,      nan,
         -0.6592,   1.5703,   6.0430,   0.8442,   1.1260,      nan,   1.3252,
             nan,      nan,      nan,   0.9854,  -1.5410,  -5.0625,      nan,
          1.9365,   0.7178,      nan,   0.8477,      nan,   1.7334,  -0.6313,
          3.3574,  -0.4758,  -0.4185,   2.1660,      nan,      nan,      nan,
             nan,      nan,      nan,  -2.0059,   0.5908,      nan,      nan,
         -1.1582,   0.9268,  -4.1562, -10.6484,      nan,      nan,   8.8438,
             nan,  -1.4062,      nan,  -0.7959,  -8.3828,      nan,  -1.8047,
          1.9355,   1.7334,      nan,      nan,      nan,      nan,  -1.1006,
          1.0059,   0.1132,  -3.7109,   0.9790,  25.1094,      nan,   1.1797,
         72.9375,   0.4697], dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 3, 2, 178956971],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147446604 / 4294967304 (50.0%)
Greatest absolute difference: nan at index (0, 0, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 3, 2, 178956971]), dtype=torch.float16)
First 100 elements: tensor([-1.5645e+00,  0.0000e+00,  2.3657e-01,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  2.1973e+00,  0.0000e+00, -5.4053e-01,
        -4.3531e+01,  2.7402e+00, -1.6914e+00, -2.0781e+00, -4.1870e-01,
        -1.1953e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.5244e+00,  0.0000e+00,  0.0000e+00,  5.8789e-01,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  1.9502e+00,  0.0000e+00,
         1.6006e+00,  0.0000e+00,  2.0215e+00, -2.6270e-01,  0.0000e+00,
         1.0488e+00,  1.3234e+01,  1.7080e+00,  0.0000e+00,  0.0000e+00,
        -8.6719e-01,  2.5938e+00,  0.0000e+00,  0.0000e+00, -2.3496e+00,
         1.6045e+00,  4.0234e+00,  1.2471e+00,  4.1656e+01, -1.7529e+00,
         2.3105e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -1.6211e+00,
         0.0000e+00,  0.0000e+00, -5.6836e+00,  2.2930e+00,  0.0000e+00,
         0.0000e+00,  1.0699e-01,  8.6523e-01,  0.0000e+00,  0.0000e+00,
         1.6035e+00,  1.6729e+00, -9.2822e-01, -1.2734e+00,  4.3125e+00,
         0.0000e+00,  0.0000e+00,  6.4844e+00,  6.7969e-01, -1.6492e-01,
        -1.7578e+00,  0.0000e+00,  0.0000e+00, -4.0527e-01,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  2.7285e+00,  0.0000e+00,
         8.9233e-02,  7.3096e-01, -1.0566e+00,  3.8516e+00,  0.0000e+00,
         0.0000e+00, -3.1769e-02,  1.1162e+00,  0.0000e+00,  1.9092e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 3, 2, 178956971]), dtype=torch.float16)
First 100 elements: tensor([-1.5645e+00,         nan,  2.3657e-01,         nan,         nan,
                nan,         nan,  2.1973e+00,         nan, -5.4053e-01,
        -4.3531e+01,  2.7402e+00, -1.6914e+00, -2.0781e+00, -4.1870e-01,
        -1.1953e+00,         nan,         nan,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
         1.5244e+00,         nan,         nan,  5.8789e-01,         nan,
                nan,         nan,         nan,  1.9502e+00,         nan,
         1.6006e+00,         nan,  2.0215e+00, -2.6270e-01,         nan,
         1.0488e+00,  1.3234e+01,  1.7080e+00,         nan,         nan,
        -8.6719e-01,  2.5938e+00,         nan,         nan, -2.3496e+00,
         1.6045e+00,  4.0234e+00,  1.2471e+00,  4.1656e+01, -1.7529e+00,
         2.3105e+00,         nan,         nan,         nan, -1.6211e+00,
                nan,         nan, -5.6836e+00,  2.2930e+00,         nan,
                nan,  1.0699e-01,  8.6523e-01,         nan,         nan,
         1.6035e+00,  1.6729e+00, -9.2822e-01, -1.2734e+00,  4.3125e+00,
                nan,         nan,  6.4844e+00,  6.7969e-01, -1.6492e-01,
        -1.7578e+00,         nan,         nan, -4.0527e-01,         nan,
                nan,         nan,         nan,  2.7285e+00,         nan,
         8.9233e-02,  7.3096e-01, -1.0566e+00,  3.8516e+00,         nan,
                nan, -3.1769e-02,  1.1162e+00,         nan,  1.9092e+00],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 3, 357913942],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147523054 / 4294967304 (50.0%)
Greatest absolute difference: nan at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 3, 357913942]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -8.7656e+00,
         0.0000e+00,  4.2090e-01,  0.0000e+00,  0.0000e+00,  1.4727e+00,
        -9.7510e-01,  2.3965e+00, -1.8350e+00,  4.3812e+01,  0.0000e+00,
        -2.1719e+00,  1.2314e+00, -2.6855e+00,  0.0000e+00, -7.2617e+00,
         0.0000e+00,  0.0000e+00,  1.5693e+00,  0.0000e+00,  0.0000e+00,
         3.9575e-01,  0.0000e+00, -2.6343e-01,  0.0000e+00,  5.1155e-03,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -1.5957e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  1.6016e+00, -1.4914e+01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -7.4463e-01,
         4.7192e-01,  0.0000e+00,  0.0000e+00, -4.0781e+00,  0.0000e+00,
        -2.1016e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  3.4062e+00,
         0.0000e+00,  1.6494e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  1.4898e+01,  8.2031e-02, -1.9160e+00,
        -1.4053e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.9344e+01,  3.7939e-01,  1.1847e-01,  0.0000e+00, -7.5469e+00,
         4.2539e+00, -1.7568e+00,  0.0000e+00,  2.5332e+00,  0.0000e+00,
        -1.2959e+00,  1.6445e+00,  0.0000e+00,  1.4758e+01, -2.1113e+00,
         2.9590e+00,  2.9746e+00,  1.4600e+00,  0.0000e+00,  2.9570e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -8.7891e-01,
         0.0000e+00,  0.0000e+00,  2.0781e+00,  1.6787e+00, -1.5264e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 3, 357913942]), dtype=torch.float16)
First 100 elements: tensor([        nan,         nan,         nan,         nan, -8.7656e+00,
                nan,  4.2090e-01,         nan,         nan,  1.4727e+00,
        -9.7510e-01,  2.3965e+00, -1.8350e+00,  4.3812e+01,         nan,
        -2.1719e+00,  1.2314e+00, -2.6855e+00,         nan, -7.2617e+00,
                nan,         nan,  1.5693e+00,         nan,         nan,
         3.9575e-01,         nan, -2.6343e-01,         nan,  5.1155e-03,
                nan,         nan,         nan,         nan, -1.5957e+00,
                nan,         nan,         nan,  1.6016e+00, -1.4914e+01,
                nan,         nan,         nan,         nan, -7.4463e-01,
         4.7192e-01,         nan,         nan, -4.0781e+00,         nan,
        -2.1016e+00,         nan,         nan,         nan,  3.4062e+00,
                nan,  1.6494e+00,         nan,         nan,         nan,
                nan,         nan,  1.4898e+01,  8.2031e-02, -1.9160e+00,
        -1.4053e+00,         nan,         nan,         nan,         nan,
         1.9344e+01,  3.7939e-01,  1.1847e-01,         nan, -7.5469e+00,
         4.2539e+00, -1.7568e+00,         nan,  2.5332e+00,         nan,
        -1.2959e+00,  1.6445e+00,         nan,  1.4758e+01, -2.1113e+00,
         2.9590e+00,  2.9746e+00,  1.4600e+00,         nan,  2.9570e+00,
                nan,         nan,         nan,         nan, -8.7891e-01,
                nan,         nan,  2.0781e+00,  1.6787e+00, -1.5264e+00],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 3, 71582789, 5],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147424580 / 4294967340 (50.0%)
Greatest absolute difference: nan at index (0, 0, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 3, 71582789, 5]), dtype=torch.float16)
First 100 elements: tensor([-1.3271e+00,  0.0000e+00, -1.6855e+00,  1.3398e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -5.5742e+00,  0.0000e+00, -1.9648e+00,
         1.9395e+00,  0.0000e+00, -2.2083e-01,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -1.5625e+00,  3.8525e-01,  1.4883e+00,  1.1621e+00,
         0.0000e+00,  0.0000e+00, -2.1359e+01,  9.8584e-01, -3.1494e-01,
        -2.9716e-03,  0.0000e+00,  0.0000e+00,  2.0625e+00, -1.4619e+00,
         0.0000e+00, -1.7156e+01,  1.2314e+00,  0.0000e+00,  0.0000e+00,
         1.7402e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -2.7598e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         1.1566e-01, -8.0225e-01,  0.0000e+00,  0.0000e+00,  2.7656e+00,
         0.0000e+00,  0.0000e+00, -8.9209e-01,  0.0000e+00,  0.0000e+00,
         8.9014e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00, -2.7393e-01,
        -5.4395e-01,  0.0000e+00,  0.0000e+00,  4.5581e-01,  0.0000e+00,
         1.1670e+00,  0.0000e+00,  0.0000e+00, -7.7490e-01,  0.0000e+00,
         0.0000e+00,  1.1953e+00,  1.3662e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -2.7207e+00, -1.7227e+00,
         0.0000e+00,  0.0000e+00, -2.9629e+00,  0.0000e+00,  0.0000e+00,
         2.0293e+00,  0.0000e+00,  0.0000e+00,  7.1875e+00,  0.0000e+00,
         0.0000e+00,  7.7979e-01,  0.0000e+00,  0.0000e+00,  2.4023e+00,
         1.3936e+00,  3.7012e-01,  2.9062e+00, -1.8281e+00, -5.2246e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 3, 71582789, 5]), dtype=torch.float16)
First 100 elements: tensor([-1.3271e+00,         nan, -1.6855e+00,  1.3398e+00,         nan,
                nan,         nan, -5.5742e+00,         nan, -1.9648e+00,
         1.9395e+00,         nan, -2.2083e-01,         nan,         nan,
                nan, -1.5625e+00,  3.8525e-01,  1.4883e+00,  1.1621e+00,
                nan,         nan, -2.1359e+01,  9.8584e-01, -3.1494e-01,
        -2.9716e-03,         nan,         nan,  2.0625e+00, -1.4619e+00,
                nan, -1.7156e+01,  1.2314e+00,         nan,         nan,
         1.7402e+00,         nan,         nan,         nan, -2.7598e+00,
                nan,         nan,         nan,         nan,         nan,
         1.1566e-01, -8.0225e-01,         nan,         nan,  2.7656e+00,
                nan,         nan, -8.9209e-01,         nan,         nan,
         8.9014e-01,         nan,         nan,         nan, -2.7393e-01,
        -5.4395e-01,         nan,         nan,  4.5581e-01,         nan,
         1.1670e+00,         nan,         nan, -7.7490e-01,         nan,
                nan,  1.1953e+00,  1.3662e+00,         nan,         nan,
                nan,         nan,         nan, -2.7207e+00, -1.7227e+00,
                nan,         nan, -2.9629e+00,         nan,         nan,
         2.0293e+00,         nan,         nan,  7.1875e+00,         nan,
                nan,  7.7979e-01,         nan,         nan,  2.4023e+00,
         1.3936e+00,  3.7012e-01,  2.9062e+00, -1.8281e+00, -5.2246e-01],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 536870913, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147426430 / 4294967304 (50.0%)
Greatest absolute difference: nan at index (0, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 536870913, 2]), dtype=torch.float16)
First 100 elements: tensor([-2.4133e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00, -1.7061e+00,
         2.9248e-01, -8.1152e-01,  0.0000e+00, -7.9023e+00, -4.1172e+00,
         8.7012e-01,  0.0000e+00,  1.1543e+00,  1.7598e+00,  0.0000e+00,
         1.9971e+00,  0.0000e+00, -9.1992e-01,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.9470e-01, -1.4844e+00,  0.0000e+00,  4.3042e-01,
        -6.6650e-01,  2.0195e+00,  3.7500e+00,  0.0000e+00,  0.0000e+00,
        -1.4001e-01, -4.6602e+00, -2.2305e+00, -2.7344e-01,  1.6670e+00,
         0.0000e+00,  0.0000e+00,  6.0822e-02,  9.7559e-01,  8.8770e-01,
         3.2469e+01,  1.6982e+00,  2.1641e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -2.8003e-01,  0.0000e+00, -2.9121e+00,
         0.0000e+00,  1.6943e+00,  0.0000e+00,  1.1609e-01, -2.8984e+01,
         5.8438e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.0088e+00,
         2.4844e+00,  0.0000e+00,  1.8086e+00,  0.0000e+00,  0.0000e+00,
        -1.0596e+00, -1.3770e+00,  8.4033e-01, -1.3867e+00,  5.5811e-01,
        -1.0840e+00,  0.0000e+00, -9.6826e-01,  0.0000e+00,  1.6348e+00,
         0.0000e+00,  0.0000e+00,  6.7188e+01, -1.2656e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         6.8311e-01,  0.0000e+00, -9.4873e-01, -1.0137e+00, -1.2031e+00,
        -3.2745e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -2.1367e+00, -4.8462e-01,  0.0000e+00, -2.3418e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 536870913, 2]), dtype=torch.float16)
First 100 elements: tensor([-2.4133e-01,         nan,         nan,         nan, -1.7061e+00,
         2.9248e-01, -8.1152e-01,         nan, -7.9023e+00, -4.1172e+00,
         8.7012e-01,         nan,  1.1543e+00,  1.7598e+00,         nan,
         1.9971e+00,         nan, -9.1992e-01,         nan,         nan,
                nan,  1.9470e-01, -1.4844e+00,         nan,  4.3042e-01,
        -6.6650e-01,  2.0195e+00,  3.7500e+00,         nan,         nan,
        -1.4001e-01, -4.6602e+00, -2.2305e+00, -2.7344e-01,  1.6670e+00,
                nan,         nan,  6.0822e-02,  9.7559e-01,  8.8770e-01,
         3.2469e+01,  1.6982e+00,  2.1641e+00,         nan,         nan,
                nan,         nan, -2.8003e-01,         nan, -2.9121e+00,
                nan,  1.6943e+00,         nan,  1.1609e-01, -2.8984e+01,
         5.8438e+00,         nan,         nan,         nan,  1.0088e+00,
         2.4844e+00,         nan,  1.8086e+00,         nan,         nan,
        -1.0596e+00, -1.3770e+00,  8.4033e-01, -1.3867e+00,  5.5811e-01,
        -1.0840e+00,         nan, -9.6826e-01,         nan,  1.6348e+00,
                nan,         nan,  6.7188e+01, -1.2656e+00,         nan,
                nan,         nan,         nan,         nan,         nan,
         6.8311e-01,         nan, -9.4873e-01, -1.0137e+00, -1.2031e+00,
        -3.2745e-02,         nan,         nan,         nan,         nan,
                nan, -2.1367e+00, -4.8462e-01,         nan, -2.3418e+00],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147546895 / 4294967297 (50.0%)
Greatest absolute difference: nan at index (2,) (up to 0.01 allowed)
Greatest relative difference: nan at index (2,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([-2.0129e-01, -9.1748e-01,  0.0000e+00,  0.0000e+00, -1.7646e+00,
         0.0000e+00,  2.3574e+00,  7.9125e+01,  2.9727e+00,  8.3069e-02,
        -3.1438e+01,  0.0000e+00,  0.0000e+00,  0.0000e+00, -1.3238e+02,
        -3.8025e-02, -4.6484e-01, -1.5293e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -5.4736e-01,  0.0000e+00,  0.0000e+00,  5.2881e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -3.3862e-01,
         8.9783e-02,  5.1904e-01,  0.0000e+00,  9.9854e-01, -2.4004e+00,
         0.0000e+00,  0.0000e+00,  4.9292e-01,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.6611e+00, -1.9775e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  4.5156e+00,  0.0000e+00, -3.9429e-01,  8.1055e-01,
        -2.4670e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00, -2.9043e+00,
        -2.8859e+01,  9.8438e-01,  0.0000e+00,  1.5312e+01,  1.1807e+00,
         1.7969e+00,  2.9834e-01,  0.0000e+00,  7.0703e+00, -1.8320e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  7.3672e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.6729e+00,
         1.8350e+00, -5.9473e-01, -1.5332e+00,  9.2383e-01, -2.3711e+00,
        -1.7627e+00,  6.7139e-01,  0.0000e+00,  0.0000e+00,  4.8676e-02,
         3.0898e+00,  0.0000e+00,  0.0000e+00, -3.5391e+00, -5.7312e+01,
         0.0000e+00, -4.3594e+00,  0.0000e+00,  0.0000e+00,  2.8781e+01,
        -8.6914e-01,  0.0000e+00,  0.0000e+00, -1.9707e+00,  2.0410e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([-2.0129e-01, -9.1748e-01,         nan,         nan, -1.7646e+00,
                nan,  2.3574e+00,  7.9125e+01,  2.9727e+00,  8.3069e-02,
        -3.1438e+01,         nan,         nan,         nan, -1.3238e+02,
        -3.8025e-02, -4.6484e-01, -1.5293e+00,         nan,         nan,
                nan, -5.4736e-01,         nan,         nan,  5.2881e-01,
                nan,         nan,         nan,         nan, -3.3862e-01,
         8.9783e-02,  5.1904e-01,         nan,  9.9854e-01, -2.4004e+00,
                nan,         nan,  4.9292e-01,         nan,         nan,
                nan,  1.6611e+00, -1.9775e+00,         nan,         nan,
                nan,  4.5156e+00,         nan, -3.9429e-01,  8.1055e-01,
        -2.4670e-01,         nan,         nan,         nan, -2.9043e+00,
        -2.8859e+01,  9.8438e-01,         nan,  1.5312e+01,  1.1807e+00,
         1.7969e+00,  2.9834e-01,         nan,  7.0703e+00, -1.8320e+00,
                nan,         nan,         nan,         nan,  7.3672e+00,
                nan,         nan,         nan,         nan,  1.6729e+00,
         1.8350e+00, -5.9473e-01, -1.5332e+00,  9.2383e-01, -2.3711e+00,
        -1.7627e+00,  6.7139e-01,         nan,         nan,  4.8676e-02,
         3.0898e+00,         nan,         nan, -3.5391e+00, -5.7312e+01,
                nan, -4.3594e+00,         nan,         nan,  2.8781e+01,
        -8.6914e-01,         nan,         nan, -1.9707e+00,  2.0410e+00],
       dtype=torch.float16)
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([715827883, 3, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147476634 / 4294967298 (50.0%)
Greatest absolute difference: nan at index (1, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (1, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883, 3, 2]), dtype=torch.float16)
First 100 elements: tensor([  5.0312,   0.8838,   1.1719,   0.5542, -18.4375,   0.4705,   0.7227,
          0.0000,  -1.9072,  -1.9229,   0.0000,   0.0000,   0.0000,  -0.2152,
          0.0000,  -3.6504,   0.0000,   2.4395,  -2.7402,   0.0000,   0.0000,
          0.0000,   0.0000,  -0.0661,   1.2217,   0.0000,   0.0000,   0.0000,
          0.0000,   0.7642,   0.0000,  27.9375,   1.7197,   0.0000,   1.6748,
         -2.1309,   0.0000,  -1.4541,  -0.9741,   0.0000, -29.6562,  -0.8442,
         -1.3477,  -4.1953,  -2.0566,  -1.7783,  -0.6104,   0.0000,  -1.6680,
          0.0000,  -0.2864,   0.0000,   1.1104,   1.2744,   0.4619,   0.0000,
          0.0000,   0.0000,   0.0000,   0.1370,   0.0000,   1.0791,   0.0000,
         -0.2847,   0.0000,   1.4414,   0.8447,  -1.1123,  17.3438,   0.0000,
         -1.2070,  -5.5781,   2.0098,   0.0000,   0.0000,   1.7539,   2.2578,
          0.0000,   2.1699,  -6.8555,  -1.9385,   0.0000,   0.0000,   0.0000,
          0.0000,  -0.4102,  -1.5557,  -2.1094,   0.0000,   1.2295,   0.0000,
         -2.4941,   0.0000,   2.4922,   0.0000,   0.0000,  -8.1719,  -1.7598,
          2.7812,   0.1523], dtype=torch.float16)
DESIRED: (shape=torch.Size([715827883, 3, 2]), dtype=torch.float16)
First 100 elements: tensor([  5.0312,   0.8838,   1.1719,   0.5542, -18.4375,   0.4705,   0.7227,
             nan,  -1.9072,  -1.9229,      nan,      nan,      nan,  -0.2152,
             nan,  -3.6504,      nan,   2.4395,  -2.7402,      nan,      nan,
             nan,      nan,  -0.0661,   1.2217,      nan,      nan,      nan,
             nan,   0.7642,      nan,  27.9375,   1.7197,      nan,   1.6748,
         -2.1309,      nan,  -1.4541,  -0.9741,      nan, -29.6562,  -0.8442,
         -1.3477,  -4.1953,  -2.0566,  -1.7783,  -0.6104,      nan,  -1.6680,
             nan,  -0.2864,      nan,   1.1104,   1.2744,   0.4619,      nan,
             nan,      nan,      nan,   0.1370,      nan,   1.0791,      nan,
         -0.2847,      nan,   1.4414,   0.8447,  -1.1123,  17.3438,      nan,
         -1.2070,  -5.5781,   2.0098,      nan,      nan,   1.7539,   2.2578,
             nan,   2.1699,  -6.8555,  -1.9385,      nan,      nan,      nan,
             nan,  -0.4102,  -1.5557,  -2.1094,      nan,   1.2295,      nan,
         -2.4941,      nan,   2.4922,      nan,      nan,  -8.1719,  -1.7598,
          2.7812,   0.1523], dtype=torch.float16)
[accuracy error] backward  paddle.atan2(Tensor([58099, 222, 333],"float16"), Tensor([222, 333],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 46418 / 4295026674 (0.0%)
Greatest absolute difference: nan at index (800, 1, 262) (up to 0.01 allowed)
Greatest relative difference: nan at index (2, 9, 219) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([58099, 222, 333]), dtype=torch.float16)
First 100 elements: tensor([-0.1034, -0.1711,  0.0952,  0.4487, -0.2654, -0.0093,  0.0496,  0.4712,
         0.1934,  0.2656,  0.0625,  0.0063,  0.0645, -0.0402, -0.0883,  1.1055,
         0.0823,  0.1292, -0.2023,  0.0552, -0.8867,  0.0067,  0.0242, -0.1497,
        -0.4888, -0.1523, -0.3472,  0.0060, -0.4614, -0.0237,  0.2292, -0.0800,
         0.4312,  0.2098,  0.0265,  0.0745,  0.0948,  2.1348,  0.4011,  0.3794,
        -0.9194, -0.0718, -0.1750, -0.2036, -0.1072, -0.0217,  0.2277,  0.0533,
        -0.2063,  0.0641,  0.2301, -0.2595, -0.1206,  0.0054, -0.1390, -0.3062,
        -0.3501,  0.1534,  0.0144,  0.0079,  0.0219, -0.2654,  0.2480, -0.1935,
        -0.0327, -0.0758,  0.1133, -0.0781,  0.0089,  0.4111, -0.2358, -0.5264,
         0.0085, -0.1827,  0.2676, -0.3882,  0.0457, -0.7119,  0.2505,  0.0590,
         0.2737, -0.1786,  0.4041,  0.1359,  0.2651, -0.1832, -2.1270,  0.0684,
         0.2639, -0.2791,  0.0057,  0.3040, -0.4822, -0.0616,  0.1567, -0.2944,
         0.1180,  0.0063,  0.1458, -0.3806], dtype=torch.float16)
DESIRED: (shape=torch.Size([58099, 222, 333]), dtype=torch.float16)
First 100 elements: tensor([-0.1033, -0.1711,  0.0952,  0.4487, -0.2651, -0.0093,  0.0496,  0.4712,
         0.1934,  0.2654,  0.0625,  0.0063,  0.0646, -0.0402, -0.0882,  1.1055,
         0.0823,  0.1292, -0.2024,  0.0551, -0.8867,  0.0067,  0.0242, -0.1498,
        -0.4888, -0.1523, -0.3469,  0.0060, -0.4612, -0.0236,  0.2291, -0.0800,
         0.4316,  0.2098,  0.0265,  0.0745,  0.0949,  2.1348,  0.4011,  0.3792,
        -0.9194, -0.0717, -0.1749, -0.2037, -0.1073, -0.0217,  0.2275,  0.0533,
        -0.2062,  0.0641,  0.2301, -0.2595, -0.1207,  0.0054, -0.1389, -0.3062,
        -0.3503,  0.1534,  0.0144,  0.0079,  0.0219, -0.2651,  0.2480, -0.1934,
        -0.0327, -0.0757,  0.1133, -0.0781,  0.0089,  0.4114, -0.2360, -0.5259,
         0.0085, -0.1827,  0.2673, -0.3882,  0.0457, -0.7119,  0.2505,  0.0590,
         0.2739, -0.1787,  0.4043,  0.1359,  0.2649, -0.1832, -2.1270,  0.0684,
         0.2639, -0.2788,  0.0057,  0.3042, -0.4824, -0.0616,  0.1567, -0.2944,
         0.1181,  0.0063,  0.1458, -0.3806], dtype=torch.float16)
[accuracy error] backward  paddle.bmm(x=Tensor([2, 380283564, 3],"float32"), y=Tensor([2, 3, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100.0%)
Greatest absolute difference: 2774.951171875 at index (0, 2, 1) (up to 0.01 allowed)
Greatest relative difference: 3.727942705154419 at index (1, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 2]), dtype=torch.float32)
All elements: tensor([ 1429.6693,   244.8710,  -305.6489, -1245.9331,   -19.1661,   213.4412,
         -201.0231,   -84.3864,  -446.7502,    95.3611,  1325.1509,  -135.6558])
DESIRED: (shape=torch.Size([2, 3, 2]), dtype=torch.float32)
All elements: tensor([ 1941.4514,   233.9415,  -223.0468, -3103.2227,  -220.2868, -2561.5100,
           78.3602,  -114.6443,   -94.4915,   900.3713,  3077.4919, -2496.7202])
[accuracy error] backward  paddle.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 173975 / 2281701379 (0.0%)
Greatest absolute difference: 0.0218048095703125 at index (0, 1597192618) (up to 0.01 allowed)
Greatest relative difference: 7578.150390625 at index (0, 1543786029) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([-10154.7119, -10154.3916, -10154.3369, -10153.9463, -10153.5674,
        -10153.9668, -10154.0156, -10153.6533, -10153.8105, -10153.9561,
        -10153.5557, -10154.0381, -10154.0879, -10153.6084, -10153.8555,
        -10153.4502, -10153.8467, -10153.8867, -10153.6895, -10153.1895,
        -10152.7188, -10153.0625, -10152.6279, -10152.4551, -10152.3486,
        -10151.9346, -10151.9336, -10152.3174, -10152.6016, -10152.6973,
        -10152.7812, -10152.7324, -10152.8184, -10153.0713, -10153.4307,
        -10153.3936, -10152.9404, -10153.4053, -10153.6426, -10153.9180,
        -10154.0088, -10153.7295, -10154.2080, -10154.6689, -10154.2354,
        -10154.6611, -10154.1621, -10153.9551, -10153.7607, -10153.9512,
        -10154.2051, -10153.8652, -10154.0742, -10153.9160, -10154.3936,
        -10154.2715, -10154.6025, -10154.4102, -10154.1758, -10154.5762,
        -10154.7100, -10154.2373, -10154.1963, -10154.0625, -10153.7852,
        -10153.4980, -10153.5635, -10153.4795, -10153.7324, -10153.5303,
        -10153.4746, -10153.8438, -10153.9453, -10153.5635, -10153.6777,
        -10154.0850, -10153.9014, -10154.0547, -10153.8359, -10153.8271,
        -10153.7188, -10153.7676, -10153.4941, -10153.8096, -10153.6504,
        -10154.0400, -10153.5566, -10153.8760, -10153.5615, -10153.7383,
        -10153.3975, -10153.1768, -10152.7188, -10152.6260, -10152.3447,
        -10151.8564, -10151.5684, -10151.3223, -10150.9346, -10150.5742])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([-10154.7178, -10154.3975, -10154.3428, -10153.9521, -10153.5703,
        -10153.9697, -10154.0186, -10153.6562, -10153.8135, -10153.9590,
        -10153.5586, -10154.0420, -10154.0918, -10153.6123, -10153.8594,
        -10153.4541, -10153.8506, -10153.8906, -10153.6934, -10153.1934,
        -10152.7227, -10153.0664, -10152.6318, -10152.4590, -10152.3525,
        -10151.9385, -10151.9375, -10152.3213, -10152.6055, -10152.7012,
        -10152.7852, -10152.7363, -10152.8223, -10153.0752, -10153.4365,
        -10153.3994, -10152.9463, -10153.4111, -10153.6484, -10153.9238,
        -10154.0146, -10153.7354, -10154.2139, -10154.6748, -10154.2412,
        -10154.6670, -10154.1680, -10153.9609, -10153.7666, -10153.9561,
        -10154.2100, -10153.8701, -10154.0791, -10153.9209, -10154.3984,
        -10154.2764, -10154.6074, -10154.4150, -10154.1807, -10154.5811,
        -10154.7148, -10154.2422, -10154.2012, -10154.0674, -10153.7910,
        -10153.5039, -10153.5693, -10153.4854, -10153.7383, -10153.5361,
        -10153.4805, -10153.8486, -10153.9502, -10153.5684, -10153.6826,
        -10154.0898, -10153.9062, -10154.0596, -10153.8408, -10153.8320,
        -10153.7236, -10153.7725, -10153.4990, -10153.8145, -10153.6553,
        -10154.0449, -10153.5625, -10153.8818, -10153.5674, -10153.7441,
        -10153.4033, -10153.1826, -10152.7246, -10152.6318, -10152.3496,
        -10151.8613, -10151.5732, -10151.3271, -10150.9395, -10150.5791])
[accuracy error] backward  paddle.cumsum(Tensor([2281701379],"float32"), axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 2281701379 (0.0%)
Greatest absolute difference: 0.010147184133529663 at index (26162499,) (up to 0.01 allowed)
Greatest relative difference: 25.072425842285156 at index (26467891,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([-2853.1494, -2852.6738, -2852.7920, -2853.2231, -2852.9055, -2852.5059,
        -2852.3506, -2851.9006, -2852.0020, -2852.0764, -2851.9407, -2852.1262,
        -2851.7959, -2852.0049, -2852.1602, -2851.8586, -2852.3357, -2852.4897,
        -2852.7358, -2853.1008, -2852.9958, -2852.7056, -2853.1504, -2853.1584,
        -2853.4207, -2853.4072, -2853.2537, -2853.5369, -2853.9648, -2853.8823,
        -2853.9036, -2853.6838, -2853.8438, -2854.3062, -2854.6858, -2854.4045,
        -2854.6660, -2854.3625, -2854.5713, -2854.6833, -2854.4573, -2854.5461,
        -2854.8699, -2854.6389, -2854.4556, -2854.3723, -2854.7183, -2854.4377,
        -2854.5359, -2854.9717, -2855.2290, -2854.8167, -2855.0454, -2855.1384,
        -2854.7493, -2855.0981, -2854.8894, -2855.3650, -2855.0615, -2854.7229,
        -2854.4148, -2854.2861, -2854.2966, -2854.1172, -2853.9778, -2854.4751,
        -2854.1985, -2854.6702, -2854.9639, -2855.2290, -2855.5864, -2855.5083,
        -2855.6912, -2855.8418, -2855.4365, -2855.3870, -2855.7368, -2856.0510,
        -2856.4663, -2856.1013, -2855.8137, -2856.1665, -2856.1858, -2856.3291,
        -2856.8220, -2856.5815, -2857.0728, -2857.3772, -2857.6331, -2858.1238,
        -2857.8152, -2857.9216, -2858.3030, -2858.4739, -2858.3108, -2858.4751,
        -2858.0588, -2858.3821, -2858.2747, -2857.9380])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([-2853.1587, -2852.6831, -2852.8013, -2853.2324, -2852.9146, -2852.5149,
        -2852.3596, -2851.9097, -2852.0110, -2852.0854, -2851.9497, -2852.1353,
        -2851.8049, -2852.0139, -2852.1692, -2851.8677, -2852.3447, -2852.4988,
        -2852.7449, -2853.1101, -2853.0051, -2852.7148, -2853.1597, -2853.1677,
        -2853.4299, -2853.4165, -2853.2629, -2853.5461, -2853.9741, -2853.8916,
        -2853.9128, -2853.6931, -2853.8530, -2854.3154, -2854.6951, -2854.4138,
        -2854.6753, -2854.3718, -2854.5806, -2854.6926, -2854.4666, -2854.5559,
        -2854.8796, -2854.6487, -2854.4653, -2854.3821, -2854.7280, -2854.4475,
        -2854.5457, -2854.9810, -2855.2383, -2854.8259, -2855.0547, -2855.1477,
        -2854.7585, -2855.1074, -2854.8987, -2855.3743, -2855.0708, -2854.7322,
        -2854.4241, -2854.2954, -2854.3059, -2854.1265, -2853.9866, -2854.4839,
        -2854.2073, -2854.6790, -2854.9727, -2855.2378, -2855.5952, -2855.5176,
        -2855.7004, -2855.8511, -2855.4458, -2855.3962, -2855.7461, -2856.0603,
        -2856.4756, -2856.1106, -2855.8230, -2856.1758, -2856.1951, -2856.3384,
        -2856.8313, -2856.5908, -2857.0820, -2857.3865, -2857.6423, -2858.1331,
        -2857.8245, -2857.9309, -2858.3123, -2858.4832, -2858.3203, -2858.4846,
        -2858.0684, -2858.3916, -2858.2842, -2857.9475])
[accuracy error] backward  paddle.inner(Tensor([42949673, 10, 10],"float16"), Tensor([2, 10],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20 (5.0%)
Greatest absolute difference: 1.0625 at index (0, 3) (up to 0.01 allowed)
Greatest relative difference: 0.022796630859375 at index (0, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 10]), dtype=torch.float16)
All elements: tensor([  810.0000,  2780.0000,  1432.0000,   -45.5312, -1933.0000, -1819.0000,
        -1420.0000, -1394.0000,  -180.7500, -1283.0000,  1044.0000,  2098.0000,
        -1184.0000,  -722.0000, -2514.0000,  -619.0000, -1860.0000,  1550.0000,
         2011.0000,  -735.5000], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 10]), dtype=torch.float16)
All elements: tensor([  808.0000,  2784.0000,  1430.0000,   -46.5938, -1930.0000, -1819.0000,
        -1412.0000, -1396.0000,  -181.2500, -1282.0000,  1045.0000,  2096.0000,
        -1179.0000,  -723.0000, -2510.0000,  -614.5000, -1864.0000,  1547.0000,
         2017.0000,  -735.5000], dtype=torch.float16)
[accuracy error] backward  paddle.inner(Tensor([5, 85899346, 10],"float16"), Tensor([2, 10],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20 (5.0%)
Greatest absolute difference: 2.9375 at index (1, 4) (up to 0.01 allowed)
Greatest relative difference: 0.0265045166015625 at index (1, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 10]), dtype=torch.float16)
All elements: tensor([ 1317.0000,  1518.0000,  -752.0000,  -874.5000, -1874.0000, -4284.0000,
         1410.0000,  3240.0000,    89.0625, -3216.0000, -1949.0000,  -846.5000,
          543.5000,  -422.0000,  -113.7500,  2108.0000, -2260.0000, -1798.0000,
         -137.0000,  -309.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 10]), dtype=torch.float16)
All elements: tensor([ 1307.0000,  1515.0000,  -748.0000,  -872.5000, -1874.0000, -4284.0000,
         1409.0000,  3244.0000,    89.8125, -3210.0000, -1946.0000,  -843.5000,
          540.5000,  -421.5000,  -110.8125,  2102.0000, -2262.0000, -1797.0000,
         -136.7500,  -307.0000], dtype=torch.float16)
[accuracy error] backward  paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 27163112, 28],"float32"), 0.36, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 4862.9921875 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([-4862.9922])
[accuracy error] backward  paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 27163112],"float32"), 0.36, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 2056.361328125 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([-2056.3613])
[accuracy error] backward  paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 95070891],"float32"), 0.3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 581.850341796875 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([-581.8503])
[accuracy error] backward  paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 95070891, 8],"float32"), 0.3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 11108.1083984375 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([11108.1084])
[accuracy error] backward  paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([35651585, 8, 8],"float32"), 0.3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 927.516357421875 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1, 1]), dtype=torch.float32)
All elements: tensor([927.5164])
[accuracy error] backward  paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235605828 / 2281701856 (98.0%)
Greatest absolute difference: 0.5 at index (29052, 17, 23) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2910334, 28, 28]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2910334, 28, 28]), dtype=torch.float32)
First 100 elements: tensor([-0.1112,  0.1278, -0.4817, -0.2852,  0.0813, -0.2905,  0.4091,  0.3738,
         0.3609, -0.4873, -0.3622, -0.1365, -0.3696,  0.0464, -0.0536, -0.3426,
        -0.0044,  0.2242, -0.0683,  0.4432,  0.4535, -0.3358,  0.2873, -0.1107,
        -0.4878,  0.0950,  0.1694, -0.2107, -0.0562,  0.2656,  0.0614,  0.4265,
        -0.3300,  0.0818, -0.4247, -0.2975,  0.4445,  0.1035, -0.3564, -0.1073,
        -0.2971, -0.1830,  0.0059, -0.2776, -0.3257,  0.3476, -0.3966,  0.3044,
        -0.2888,  0.1194,  0.1821, -0.1801, -0.1405,  0.3876,  0.0199,  0.2276,
         0.2541,  0.0216, -0.2145, -0.2250,  0.3938, -0.3653, -0.3171,  0.1130,
         0.2928, -0.4312, -0.2803,  0.4601,  0.1795,  0.2680,  0.1976,  0.1150,
         0.1176,  0.3446, -0.1033, -0.4898,  0.2217, -0.3412, -0.3963, -0.2522,
         0.2530, -0.0689,  0.0789, -0.3889,  0.3613,  0.1154,  0.4373, -0.4354,
        -0.2287, -0.0410, -0.1443, -0.2843,  0.3148, -0.0484,  0.1575,  0.3085,
        -0.4368, -0.0348, -0.2195,  0.1220])
[accuracy error] backward  paddle.lerp(Tensor([1, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100.0%)
Greatest absolute difference: 17888.0 at index (0, 2, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 3, 4]), dtype=torch.float16)
All elements: tensor([-0.0068,  0.2180,  0.2871,  0.4124, -0.4480,  0.1965,  0.0695,  0.4966,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 3, 4]), dtype=torch.float16)
All elements: tensor([13320., -1925., -2041.,  3978., -1467., -4800.,   590., -6268.,   376.,
        17888.,  8288.,  5280.], dtype=torch.float16)
[accuracy error] backward  paddle.lerp(Tensor([1, 3],"float16"), Tensor([1431655766, 3],"float16"), Tensor([1, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: 13824.0 at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 3]), dtype=torch.float16)
All elements: tensor([-0.2166, -0.2325,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 3]), dtype=torch.float16)
All elements: tensor([  -173.3750, -11368.0000, -13824.0000], dtype=torch.float16)
[accuracy error] backward  paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 1.1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100.0%)
Greatest absolute difference: 448.58203125 at index (0, 7, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 8]), dtype=torch.float32)
All elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 8, 8]), dtype=torch.float32)
All elements: tensor([ 123.4994, -113.4450, -117.4012, -142.9608,  -22.7394,  181.7496,
        -112.0158,  113.0837,  336.6393,   89.0008,  283.5097, -179.8261,
          70.7660, -157.6405,  -73.8303,  -52.1830, -195.9645, -109.7702,
          97.6804,  -42.2335,  -84.6916,  -71.8116,  -11.0822, -130.5360,
         307.5835,  168.1454,  156.0811,  -39.2980,   85.2837, -167.4352,
        -201.0632,  155.1969,  -80.3555,    5.0565,   70.1201,   22.0133,
         -75.1242, -150.1213,  117.9600,  178.8768,  163.2451,   71.0641,
         -40.1986,   30.4062,  152.7918,  354.6472,  189.0674, -366.1846,
         -76.4845, -164.9875,   79.0332,  -93.5746,  140.5620,   28.6551,
        -135.2537,  123.2115,  116.5926, -448.5820,   45.2370, -293.0286,
         -39.3332, -104.0716,  -37.6431,  -58.3922])
[accuracy error] backward  paddle.lerp(Tensor([1],"float32"), Tensor([2281701379],"float32"), Tensor([1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 21634.70703125 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1]), dtype=torch.float32)
All elements: tensor([21634.7070])
[accuracy error] backward  paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 0.3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 2 (100.0%)
Greatest absolute difference: 6256.076171875 at index (1, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 1, 1]), dtype=torch.float32)
All elements: tensor([0., 0.])
DESIRED: (shape=torch.Size([2, 1, 1, 1]), dtype=torch.float32)
All elements: tensor([  940.5010, -6256.0762])
[accuracy error] backward  paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 47535446, 8],"float32"), 0.3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 2 (100.0%)
Greatest absolute difference: 6783.32763671875 at index (1, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 1, 1]), dtype=torch.float32)
All elements: tensor([0., 0.])
DESIRED: (shape=torch.Size([2, 1, 1, 1]), dtype=torch.float32)
All elements: tensor([-1763.4565,  6783.3276])
[accuracy error] backward  paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 47535446],"float32"), 0.3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 2 (100.0%)
Greatest absolute difference: 10633.2890625 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 1, 1]), dtype=torch.float32)
All elements: tensor([0., 0.])
DESIRED: (shape=torch.Size([2, 1, 1, 1]), dtype=torch.float32)
All elements: tensor([-10633.2891,  -4931.3838])
[accuracy error] backward  paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100.0%)
Greatest absolute difference: 303.2147216796875 at index (0, 0, 5, 7) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 8, 8]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1, 8, 8]), dtype=torch.float32)
First 100 elements: tensor([ 113.5780,  -28.3946,   44.5270,  -34.7161,  -60.6473,  112.3333,
         -28.5322,   64.5997,   96.5383,   41.6368,   74.3612, -209.2982,
          37.3427,   35.3855,  -15.3096,   54.7569,   27.1612,   10.4143,
          45.9306,  -74.7544,   30.0426,   89.0121,   35.1012, -159.2659,
         216.8717,   92.7764,   25.0051, -143.0365,  -21.7628, -152.7307,
         -53.8961,   94.6471,   -9.4877,   49.6401,  108.2957,   -5.3378,
        -104.8132, -204.6779,   64.3842,  214.9139,    1.5501,   31.2321,
         -53.7368,   92.8010,   58.4426,  223.2097,  157.5519, -303.2147,
         121.2112,  -28.1243, -203.2528,  -13.7382,  105.6892,  122.9871,
          78.1518,  100.4191,   -2.0002, -280.9908,  198.0551,  -49.3859,
          14.1671, -111.9028,   42.7761,  -79.3265,    9.8905,  -85.0936,
        -161.9444, -108.2167,   37.8965,   69.4406,  -83.5230,   48.4688,
         240.1240,   47.3735,  209.1846,   29.4902,   33.3980, -192.9784,
         -58.5010, -106.9668, -223.1148, -120.1980,   51.7952,   32.5603,
        -114.6878, -160.7899,  -46.1662,   28.7237,   90.7035,   75.3950,
         131.1181,  103.7325,  107.0371,  -14.7172, -147.1965,   60.5805,
         -70.8263,  -44.5346,  -38.1647,   27.3112])
[accuracy error] backward  paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 2.1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2239800203 / 2281701504 (98.2%)
Greatest absolute difference: 0.550000011920929 at index (0, 355889, 2, 3) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 17825793, 8, 8]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 17825793, 8, 8]), dtype=torch.float32)
First 100 elements: tensor([ 0.0710, -0.0155, -0.4387, -0.1762,  0.2549,  0.5086, -0.2580, -0.3783,
         0.5237,  0.2691,  0.4219,  0.5225, -0.0347,  0.0812,  0.0146, -0.4615,
        -0.0586, -0.1343, -0.3628,  0.0143, -0.2310,  0.0770,  0.0145,  0.0454,
         0.3227,  0.4689,  0.4824, -0.1288,  0.4541, -0.1673,  0.4097, -0.1194,
        -0.1290,  0.4060, -0.1160,  0.3256,  0.0765,  0.3797,  0.2371,  0.2574,
         0.4699, -0.2124, -0.4103,  0.4008, -0.3317,  0.2248,  0.4703,  0.1412,
        -0.4926,  0.3757,  0.0665, -0.4999, -0.1395, -0.4967, -0.0232, -0.0574,
         0.2614,  0.0085, -0.2095, -0.1941, -0.4710, -0.0463, -0.3243, -0.1985,
        -0.2873, -0.4274,  0.3752,  0.1359, -0.2490,  0.3545,  0.1897,  0.2185,
         0.0600,  0.3317, -0.3042,  0.2542,  0.4796, -0.1976, -0.5493, -0.1426,
        -0.3338,  0.3953,  0.2492,  0.4858,  0.1975, -0.3075, -0.1480,  0.1385,
        -0.1312, -0.5137,  0.0823, -0.4600, -0.1915, -0.3764,  0.1558, -0.0136,
        -0.1248,  0.2499, -0.0653, -0.2071])
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 16 (43.8%)
Greatest absolute difference: 5942862.0 at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.float32)
All elements: tensor([ -232179.0000,        0.0000,        0.0000,        0.0000,
          126178.0000,  2034336.6250,        0.0000,        0.0000,
         -127393.5000, -1922441.3750, -3364812.0000,        0.0000,
           72808.6250,   994990.4375,  1694481.0000,    45832.1250])
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.float32)
All elements: tensor([ -233844.9375, -3437696.5000, -5942862.0000,  -184596.0000,
          125597.1875,  2033756.5000,  3579187.5000,   145457.9375,
         -128665.0312, -1923425.0000, -3364127.0000,  -111958.3125,
           72429.5938,   994845.8750,  1694375.2500,    46492.2812])
[accuracy error] backward  paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=math.inf, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70 / 2281701400 (0.0%)
Greatest absolute difference: 0.3259865641593933 at index (8, 7, 8974679) (up to 0.01 allowed)
Greatest relative difference: 3.0 at index (4, 3, 10346381) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10, 22817014]), dtype=torch.float32)
First 100 elements: tensor([-0., 0., -0., 0., 0., 0., 0., -0., 0., -0., -0., 0., -0., 0., -0., -0., 0., -0., -0., 0., -0., 0., -0., 0.,
        -0., -0., 0., 0., 0., -0., 0., 0., -0., 0., 0., -0., 0., -0., -0., 0., -0., -0., -0., -0., -0., -0., -0., 0.,
        0., -0., -0., 0., -0., 0., -0., 0., -0., 0., -0., 0., 0., -0., -0., -0., 0., -0., 0., -0., 0., 0., 0., -0.,
        -0., -0., -0., 0., -0., 0., 0., 0., 0., -0., -0., 0., -0., 0., 0., 0., 0., -0., -0., 0., 0., -0., 0., 0.,
        -0., -0., -0., -0.])
DESIRED: (shape=torch.Size([10, 10, 22817014]), dtype=torch.float32)
First 100 elements: tensor([-0., 0., -0., 0., 0., 0., 0., -0., 0., -0., -0., 0., -0., 0., -0., -0., 0., -0., -0., 0., -0., 0., -0., 0.,
        -0., -0., 0., 0., 0., -0., 0., 0., -0., 0., 0., -0., 0., -0., -0., 0., -0., -0., -0., -0., -0., -0., -0., 0.,
        0., -0., -0., 0., -0., 0., -0., 0., -0., 0., -0., 0., 0., -0., -0., -0., 0., -0., 0., -0., 0., 0., 0., -0.,
        -0., -0., -0., 0., -0., 0., 0., 0., 0., -0., -0., 0., -0., 0., 0., 0., 0., -0., -0., 0., 0., -0., 0., 0.,
        -0., -0., -0., -0.])
[accuracy error] backward  paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=math.inf, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 2281701400 (0.0%)
Greatest absolute difference: 0.24335108697414398 at index (3, 1011063, 4) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 30764, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 11408507, 20]), dtype=torch.float32)
First 100 elements: tensor([ 0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0488, -0.0000,  0.0000,  0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000, -0.0000,
         0.0000, -0.0000, -0.0000,  0.0000, -0.1390,  0.0000,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.4857,  0.0000,  0.0000,  0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000, -0.0000,  0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000,
        -0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
         0.0000,  0.0809,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000, -0.0000,  0.0000, -0.0000, -0.3647,
         0.0000,  0.0000,  0.0000,  0.0000])
DESIRED: (shape=torch.Size([10, 11408507, 20]), dtype=torch.float32)
First 100 elements: tensor([ 0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0488, -0.0000,  0.0000,  0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000, -0.0000,
         0.0000, -0.0000, -0.0000,  0.0000, -0.1390,  0.0000,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.4857,  0.0000,  0.0000,  0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000, -0.0000,  0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000,
        -0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
         0.0000,  0.0809,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000, -0.0000,  0.0000, -0.0000, -0.3647,
         0.0000,  0.0000,  0.0000,  0.0000])
[accuracy error] backward  paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=math.inf, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 142 / 2281701400 (0.0%)
Greatest absolute difference: 0.249146968126297 at index (3789154, 2, 4) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (225706, 6, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([11408507, 10, 20]), dtype=torch.float32)
First 100 elements: tensor([-0.0000,  0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0000,
         0.0000, -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000, -0.0000, -0.4879, -0.0000,  0.0000,  0.0000,  0.0000,
         0.0000, -0.0000,  0.0270, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,
        -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,
         0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
         0.0000, -0.0000, -0.0000, -0.0192,  0.0000, -0.0000, -0.0000,  0.0000,
        -0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
         0.0000, -0.0000, -0.1833, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.0000,  0.0000,
        -0.0000, -0.0000,  0.0000,  0.2813, -0.0000, -0.0000,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.0000])
DESIRED: (shape=torch.Size([11408507, 10, 20]), dtype=torch.float32)
First 100 elements: tensor([-0.0000,  0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0000,
         0.0000, -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000, -0.0000, -0.4879, -0.0000,  0.0000,  0.0000,  0.0000,
         0.0000, -0.0000,  0.0270, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,
        -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,
         0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
         0.0000, -0.0000, -0.0000, -0.0192,  0.0000, -0.0000, -0.0000,  0.0000,
        -0.0000,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
         0.0000, -0.0000, -0.1833, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.0000,  0.0000,
        -0.0000, -0.0000,  0.0000,  0.2813, -0.0000, -0.0000,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.0000])
[accuracy error] backward  paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), math.inf, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 2281701420 (0.0%)
Greatest absolute difference: 0.3332519233226776 at index (0, 16, 1116442) (up to 0.01 allowed)
Greatest relative difference: 4.0 at index (0, 8, 17399198) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 20, 38028357]), dtype=torch.float32)
First 100 elements: tensor([0., -0., 0., 0., -0., -0., -0., 0., -0., 0., -0., -0., 0., -0., 0., 0., 0., -0., 0., 0., 0., -0., -0., -0.,
        -0., 0., -0., 0., 0., 0., -0., -0., 0., 0., -0., -0., -0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -0., -0.,
        -0., 0., 0., -0., -0., 0., 0., 0., -0., 0., 0., 0., -0., 0., 0., -0., 0., -0., 0., -0., 0., 0., 0., -0.,
        -0., 0., 0., 0., -0., 0., -0., 0., -0., 0., 0., 0., -0., -0., 0., -0., 0., 0., -0., -0., 0., 0., -0., 0.,
        -0., -0., -0., -0.])
DESIRED: (shape=torch.Size([3, 20, 38028357]), dtype=torch.float32)
First 100 elements: tensor([0., -0., 0., 0., -0., -0., -0., 0., -0., 0., -0., -0., 0., -0., 0., 0., 0., -0., 0., 0., 0., -0., -0., -0.,
        -0., 0., -0., 0., 0., 0., -0., -0., 0., 0., -0., -0., -0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -0., -0.,
        -0., 0., 0., -0., -0., 0., 0., 0., -0., 0., 0., 0., -0., 0., 0., -0., 0., -0., 0., -0., 0., 0., 0., -0.,
        -0., 0., 0., 0., -0., 0., -0., 0., -0., 0., 0., 0., -0., -0., 0., -0., 0., 0., -0., -0., 0., 0., -0., 0.,
        -0., -0., -0., -0.])
[accuracy error] backward  paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), -math.inf, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70 / 2281701384 (0.0%)
Greatest absolute difference: 0.23804202675819397 at index (0, 249851049, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 20345070, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 253522376, 3]), dtype=torch.float32)
First 100 elements: tensor([ 0.3996, -0.0000, -0.0000,  0.0000,  0.1891, -0.0000, -0.0000,  0.0000,
         0.4300,  0.0000,  0.1386,  0.0000,  0.0000, -0.0000, -0.0551,  0.0000,
        -0.4028,  0.0000,  0.0000, -0.4862, -0.0000,  0.0000,  0.0580, -0.0000,
         0.3739, -0.0000, -0.0000,  0.0000, -0.0000, -0.4240,  0.0000, -0.0000,
         0.1910, -0.0000, -0.0000,  0.3193, -0.0000, -0.3713,  0.0000, -0.0000,
         0.2120,  0.0000,  0.0789,  0.0000,  0.0000,  0.2901, -0.0000, -0.0000,
         0.2811, -0.0000,  0.0000,  0.0000,  0.0000,  0.1705, -0.0000, -0.0000,
         0.3479,  0.1056,  0.0000, -0.0000, -0.2397, -0.0000,  0.0000, -0.0000,
        -0.3753,  0.0000,  0.0000,  0.4528, -0.0000,  0.4572,  0.0000,  0.0000,
        -0.0000,  0.0000,  0.2696,  0.0000, -0.0000, -0.1455,  0.0000, -0.0000,
        -0.4606,  0.0000,  0.0000,  0.0825,  0.0675,  0.0000, -0.0000, -0.0000,
         0.0000, -0.4718, -0.0000, -0.0000,  0.1282,  0.0000, -0.2920, -0.0000,
        -0.0000,  0.4112, -0.0000,  0.0000])
DESIRED: (shape=torch.Size([3, 253522376, 3]), dtype=torch.float32)
First 100 elements: tensor([ 0.3996, -0.0000, -0.0000,  0.0000,  0.1891, -0.0000, -0.0000,  0.0000,
         0.4300,  0.0000,  0.1386,  0.0000,  0.0000, -0.0000, -0.0551,  0.0000,
        -0.4028,  0.0000,  0.0000, -0.4862, -0.0000,  0.0000,  0.0580, -0.0000,
         0.3739, -0.0000, -0.0000,  0.0000, -0.0000, -0.4240,  0.0000, -0.0000,
         0.1910, -0.0000, -0.0000,  0.3193, -0.0000, -0.3713,  0.0000, -0.0000,
         0.2120,  0.0000,  0.0789,  0.0000,  0.0000,  0.2901, -0.0000, -0.0000,
         0.2811, -0.0000,  0.0000,  0.0000,  0.0000,  0.1705, -0.0000, -0.0000,
         0.3479,  0.1056,  0.0000, -0.0000, -0.2397, -0.0000,  0.0000, -0.0000,
        -0.3753,  0.0000,  0.0000,  0.4528, -0.0000,  0.4572,  0.0000,  0.0000,
        -0.0000,  0.0000,  0.2696,  0.0000, -0.0000, -0.1455,  0.0000, -0.0000,
        -0.4606,  0.0000,  0.0000,  0.0825,  0.0675,  0.0000, -0.0000, -0.0000,
         0.0000, -0.4718, -0.0000, -0.0000,  0.1282,  0.0000, -0.2920, -0.0000,
        -0.0000,  0.4112, -0.0000,  0.0000])
[accuracy error] backward  paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), math.inf, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 102 / 2281701384 (0.0%)
Greatest absolute difference: 0.2484598159790039 at index (0, 47783960, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 1581721, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 253522376, 3]), dtype=torch.float32)
First 100 elements: tensor([-0.0000, -0.2835,  0.0000,  0.0000, -0.1275,  0.0000, -0.3601, -0.0000,
        -0.0000,  0.3648, -0.0000,  0.0000, -0.0000, -0.0000, -0.2702, -0.0000,
         0.0000,  0.1208,  0.1469,  0.0000, -0.0000,  0.2923,  0.0000,  0.0000,
         0.4601,  0.0000, -0.0000,  0.0000, -0.1472, -0.0000,  0.0698,  0.0000,
        -0.0000,  0.0000, -0.4197, -0.0000,  0.0000, -0.0000, -0.1878,  0.0000,
         0.0000,  0.2813, -0.0000,  0.2747,  0.0000, -0.0000, -0.0000,  0.0458,
         0.2830, -0.0000, -0.0000,  0.0000, -0.0000, -0.0173,  0.0000,  0.4412,
         0.0000, -0.2979, -0.0000,  0.0000, -0.0203, -0.0000, -0.0000,  0.0000,
        -0.0000, -0.2326,  0.0000, -0.0892, -0.0000, -0.0000,  0.0043,  0.0000,
        -0.0000,  0.0000,  0.1817, -0.2601,  0.0000, -0.0000, -0.0000,  0.1114,
        -0.0000, -0.3225,  0.0000, -0.0000,  0.3492,  0.0000, -0.0000, -0.0000,
        -0.1295,  0.0000, -0.4616, -0.0000,  0.0000,  0.0000, -0.0000, -0.4017,
         0.4677, -0.0000,  0.0000,  0.4739])
DESIRED: (shape=torch.Size([3, 253522376, 3]), dtype=torch.float32)
First 100 elements: tensor([-0.0000, -0.2835,  0.0000,  0.0000, -0.1275,  0.0000, -0.3601, -0.0000,
        -0.0000,  0.3648, -0.0000,  0.0000, -0.0000, -0.0000, -0.2702, -0.0000,
         0.0000,  0.1208,  0.1469,  0.0000, -0.0000,  0.2923,  0.0000,  0.0000,
         0.4601,  0.0000, -0.0000,  0.0000, -0.1472, -0.0000,  0.0698,  0.0000,
        -0.0000,  0.0000, -0.4197, -0.0000,  0.0000, -0.0000, -0.1878,  0.0000,
         0.0000,  0.2813, -0.0000,  0.2747,  0.0000, -0.0000, -0.0000,  0.0458,
         0.2830, -0.0000, -0.0000,  0.0000, -0.0000, -0.0173,  0.0000,  0.4412,
         0.0000, -0.2979, -0.0000,  0.0000, -0.0203, -0.0000, -0.0000,  0.0000,
        -0.0000, -0.2326,  0.0000, -0.0892, -0.0000, -0.0000,  0.0043,  0.0000,
        -0.0000,  0.0000,  0.1817, -0.2601,  0.0000, -0.0000, -0.0000,  0.1114,
        -0.0000, -0.3225,  0.0000, -0.0000,  0.3492,  0.0000, -0.0000, -0.0000,
        -0.1295,  0.0000, -0.4616, -0.0000,  0.0000,  0.0000, -0.0000, -0.4017,
         0.4677, -0.0000,  0.0000,  0.4739])
[accuracy error] backward  paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), -math.inf, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 62 / 2281701420 (0.0%)
Greatest absolute difference: 0.24715684354305267 at index (3273804, 3, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (1595749, 4, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([38028357, 20, 3]), dtype=torch.float32)
First 100 elements: tensor([ 0.0000, -0.2403,  0.0000,  0.2782,  0.0000,  0.0000,  0.0000, -0.0000,
         0.0597,  0.0000,  0.0000, -0.0847,  0.0000, -0.0000,  0.1341, -0.0000,
         0.2442, -0.0000,  0.2772, -0.0000,  0.0000, -0.1602,  0.0000, -0.0000,
         0.0000,  0.4322, -0.0000, -0.0000, -0.0000,  0.3806,  0.0677,  0.0000,
        -0.0000, -0.0000, -0.4387,  0.0000, -0.0000,  0.0000,  0.1842, -0.0000,
         0.4974,  0.0000, -0.0000, -0.0000, -0.0938, -0.0000, -0.3447,  0.0000,
        -0.0000,  0.0290,  0.0000, -0.0000,  0.0000, -0.1863, -0.0000,  0.0000,
        -0.2494,  0.4471, -0.0000,  0.0000, -0.3013,  0.0000,  0.0000, -0.0000,
         0.0000, -0.1911, -0.4017,  0.0000, -0.0000, -0.0000, -0.0000,  0.2927,
         0.0000,  0.0000,  0.4292, -0.0000,  0.0000, -0.2727, -0.0000, -0.0000,
        -0.3328, -0.0000, -0.0000,  0.0419, -0.2973,  0.0000,  0.0000,  0.0000,
         0.0729, -0.0000,  0.0000, -0.1993, -0.0000, -0.0000,  0.4269,  0.0000,
         0.1860,  0.0000,  0.0000,  0.0000])
DESIRED: (shape=torch.Size([38028357, 20, 3]), dtype=torch.float32)
First 100 elements: tensor([ 0.0000, -0.2403,  0.0000,  0.2782,  0.0000,  0.0000,  0.0000, -0.0000,
         0.0597,  0.0000,  0.0000, -0.0847,  0.0000, -0.0000,  0.1341, -0.0000,
         0.2442, -0.0000,  0.2772, -0.0000,  0.0000, -0.1602,  0.0000, -0.0000,
         0.0000,  0.4322, -0.0000, -0.0000, -0.0000,  0.3806,  0.0677,  0.0000,
        -0.0000, -0.0000, -0.4387,  0.0000, -0.0000,  0.0000,  0.1842, -0.0000,
         0.4974,  0.0000, -0.0000, -0.0000, -0.0938, -0.0000, -0.3447,  0.0000,
        -0.0000,  0.0290,  0.0000, -0.0000,  0.0000, -0.1863, -0.0000,  0.0000,
        -0.2494,  0.4471, -0.0000,  0.0000, -0.3013,  0.0000,  0.0000, -0.0000,
         0.0000, -0.1911, -0.4017,  0.0000, -0.0000, -0.0000, -0.0000,  0.2927,
         0.0000,  0.0000,  0.4292, -0.0000,  0.0000, -0.2727, -0.0000, -0.0000,
        -0.3328, -0.0000, -0.0000,  0.0419, -0.2973,  0.0000,  0.0000,  0.0000,
         0.0729, -0.0000,  0.0000, -0.1993, -0.0000, -0.0000,  0.4269,  0.0000,
         0.1860,  0.0000,  0.0000,  0.0000])
[accuracy error] backward  paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70 / 2281701384 (0.0%)
Greatest absolute difference: 0.3682909905910492 at index (20798896, 0, 1) (up to 0.01 allowed)
Greatest relative difference: 7.0 at index (3485819, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([190141782, 3, 4]), dtype=torch.float32)
First 100 elements: tensor([-0., -0., 0., -0., 0., 0., 0., -0., -0., -0., -0., 0., -0., -0., 0., -0., -0., 0., -0., -0., 0., 0., -0., 0.,
        0., 0., -0., -0., -0., -0., 0., 0., 0., -0., -0., 0., 0., 0., 0., -0., -0., -0., -0., -0., 0., -0., -0., 0.,
        0., 0., 0., 0., 0., -0., -0., -0., -0., -0., 0., -0., 0., 0., 0., 0., -0., 0., -0., 0., 0., -0., 0., 0.,
        0., 0., 0., -0., 0., -0., 0., -0., -0., -0., 0., -0., 0., -0., 0., 0., -0., -0., 0., 0., 0., -0., -0., -0.,
        0., -0., -0., 0.])
DESIRED: (shape=torch.Size([190141782, 3, 4]), dtype=torch.float32)
First 100 elements: tensor([-0., -0., 0., -0., 0., 0., 0., -0., -0., -0., -0., 0., -0., -0., 0., -0., -0., 0., -0., -0., 0., 0., -0., 0.,
        0., 0., -0., -0., -0., -0., 0., 0., 0., -0., -0., 0., 0., 0., 0., -0., -0., -0., -0., -0., 0., -0., -0., 0.,
        0., 0., 0., 0., 0., -0., -0., -0., -0., -0., 0., -0., 0., 0., 0., 0., -0., 0., -0., 0., 0., -0., 0., 0.,
        0., 0., 0., -0., 0., -0., 0., -0., -0., -0., 0., -0., 0., -0., 0., 0., -0., -0., 0., 0., 0., -0., -0., -0.,
        0., -0., -0., 0.])
[accuracy error] backward  paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 66 / 2281701384 (0.0%)
Greatest absolute difference: 0.35346075892448425 at index (31995168, 2, 3) (up to 0.01 allowed)
Greatest relative difference: 7.000000476837158 at index (54630051, 1, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([190141782, 3, 4]), dtype=torch.float32)
First 100 elements: tensor([-0., 0., 0., 0., -0., -0., 0., 0., -0., -0., -0., -0., 0., -0., -0., -0., -0., -0., -0., -0., 0., 0., 0., -0.,
        -0., 0., 0., 0., 0., -0., -0., -0., -0., -0., -0., 0., 0., 0., -0., 0., 0., -0., 0., -0., 0., -0., 0., 0.,
        -0., 0., -0., 0., -0., 0., 0., -0., -0., -0., -0., 0., 0., 0., -0., -0., 0., 0., -0., 0., 0., 0., 0., 0.,
        -0., 0., 0., 0., 0., -0., -0., -0., 0., -0., -0., -0., 0., 0., -0., -0., -0., -0., 0., -0., -0., -0., 0., 0.,
        0., -0., 0., 0.])
DESIRED: (shape=torch.Size([190141782, 3, 4]), dtype=torch.float32)
First 100 elements: tensor([-0., 0., 0., 0., -0., -0., 0., 0., -0., -0., -0., -0., 0., -0., -0., -0., -0., -0., -0., -0., 0., 0., 0., -0.,
        -0., 0., 0., 0., 0., -0., -0., -0., -0., -0., -0., 0., 0., 0., -0., 0., 0., -0., 0., -0., 0., -0., 0., 0.,
        -0., 0., -0., 0., -0., 0., 0., -0., -0., -0., -0., 0., 0., 0., -0., -0., 0., 0., -0., 0., 0., 0., 0., 0.,
        -0., 0., 0., 0., 0., -0., -0., -0., 0., -0., -0., -0., 0., 0., -0., -0., -0., -0., 0., -0., -0., -0., 0., 0.,
        0., -0., 0., 0.])
[accuracy error] backward  paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 94 / 2281701384 (0.0%)
Greatest absolute difference: 0.24389199912548065 at index (0, 248874545, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 11331278, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 285212673, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.0385, -0.2040, -0.0000, -0.0435, -0.0000, -0.2143,  0.0000,  0.1465,
        -0.0000,  0.3294,  0.2808,  0.0000,  0.1276,  0.0000,  0.1694, -0.2309,
        -0.4765,  0.4262,  0.0754, -0.2321,  0.2809, -0.3409,  0.4931,  0.0000,
         0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0126,  0.0000,  0.0000,
        -0.2378,  0.1258,  0.0000,  0.0215, -0.0000, -0.2538, -0.3111,  0.0000,
        -0.2710, -0.0000,  0.0946, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000,
         0.0202, -0.0000, -0.0655,  0.0000, -0.0000,  0.0000, -0.4649, -0.0992,
        -0.0000, -0.1433, -0.0275, -0.0000,  0.0422, -0.1513,  0.0000,  0.0000,
         0.1933,  0.0000, -0.0000, -0.0758, -0.0000, -0.0000,  0.3278,  0.0000,
        -0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.2224,  0.4884,  0.0000,
         0.0000, -0.0000,  0.5000,  0.4625, -0.4702, -0.0000,  0.0000, -0.3842,
         0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000,  0.0000,  0.3776,
         0.0000, -0.0000,  0.0000,  0.0000])
DESIRED: (shape=torch.Size([2, 285212673, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.0385, -0.2040, -0.0000, -0.0435, -0.0000, -0.2143,  0.0000,  0.1465,
        -0.0000,  0.3294,  0.2808,  0.0000,  0.1276,  0.0000,  0.1694, -0.2309,
        -0.4765,  0.4262,  0.0754, -0.2321,  0.2809, -0.3409,  0.4931,  0.0000,
         0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0126,  0.0000,  0.0000,
        -0.2378,  0.1258,  0.0000,  0.0215, -0.0000, -0.2538, -0.3111,  0.0000,
        -0.2710, -0.0000,  0.0946, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000,
         0.0202, -0.0000, -0.0655,  0.0000, -0.0000,  0.0000, -0.4649, -0.0992,
        -0.0000, -0.1433, -0.0275, -0.0000,  0.0422, -0.1513,  0.0000,  0.0000,
         0.1933,  0.0000, -0.0000, -0.0758, -0.0000, -0.0000,  0.3278,  0.0000,
        -0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.2224,  0.4884,  0.0000,
         0.0000, -0.0000,  0.5000,  0.4625, -0.4702, -0.0000,  0.0000, -0.3842,
         0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000,  0.0000,  0.3776,
         0.0000, -0.0000,  0.0000,  0.0000])
[accuracy error] backward  paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 114 / 2281701384 (0.0%)
Greatest absolute difference: 0.23844653367996216 at index (0, 0, 171792641) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 37306081) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 380283564]), dtype=torch.float32)
First 100 elements: tensor([-0.0000, -0.4465, -0.2700, -0.4949,  0.0000, -0.0000, -0.0000,  0.0338,
         0.0000, -0.0000,  0.0247, -0.4911,  0.0000,  0.3302, -0.3742,  0.4435,
        -0.0000,  0.0000,  0.1399, -0.1154,  0.2691, -0.2985,  0.2121,  0.0000,
         0.0000, -0.0000,  0.1736,  0.2139,  0.0000,  0.4793, -0.1571,  0.0000,
        -0.3276, -0.3075,  0.2040, -0.0631, -0.0000, -0.0000,  0.1027, -0.4638,
         0.2988,  0.1047, -0.1052,  0.0000,  0.3211,  0.4773,  0.0000,  0.3080,
         0.4938,  0.4917, -0.0059, -0.0000,  0.2077,  0.0000, -0.0000,  0.2756,
        -0.3076,  0.0000, -0.0747,  0.2465,  0.0000,  0.2594,  0.0000, -0.2140,
         0.0000,  0.1661, -0.2234,  0.4498, -0.0000, -0.1861,  0.3279,  0.0000,
        -0.3907, -0.3449,  0.1867,  0.2104,  0.3844,  0.0000,  0.0000,  0.1848,
         0.0332,  0.0000,  0.0000,  0.4692, -0.0000,  0.3855, -0.0973,  0.1766,
        -0.0000, -0.2928, -0.2530,  0.0000, -0.0000, -0.0000,  0.0725,  0.2449,
         0.0000,  0.0000,  0.4847, -0.2039])
DESIRED: (shape=torch.Size([2, 3, 380283564]), dtype=torch.float32)
First 100 elements: tensor([-0.0000, -0.4465, -0.2700, -0.4949,  0.0000, -0.0000, -0.0000,  0.0338,
         0.0000, -0.0000,  0.0247, -0.4911,  0.0000,  0.3302, -0.3742,  0.4435,
        -0.0000,  0.0000,  0.1399, -0.1154,  0.2691, -0.2985,  0.2121,  0.0000,
         0.0000, -0.0000,  0.1736,  0.2139,  0.0000,  0.4793, -0.1571,  0.0000,
        -0.3276, -0.3075,  0.2040, -0.0631, -0.0000, -0.0000,  0.1027, -0.4638,
         0.2988,  0.1047, -0.1052,  0.0000,  0.3211,  0.4773,  0.0000,  0.3080,
         0.4938,  0.4917, -0.0059, -0.0000,  0.2077,  0.0000, -0.0000,  0.2756,
        -0.3076,  0.0000, -0.0747,  0.2465,  0.0000,  0.2594,  0.0000, -0.2140,
         0.0000,  0.1661, -0.2234,  0.4498, -0.0000, -0.1861,  0.3279,  0.0000,
        -0.3907, -0.3449,  0.1867,  0.2104,  0.3844,  0.0000,  0.0000,  0.1848,
         0.0332,  0.0000,  0.0000,  0.4692, -0.0000,  0.3855, -0.0973,  0.1766,
        -0.0000, -0.2928, -0.2530,  0.0000, -0.0000, -0.0000,  0.0725,  0.2449,
         0.0000,  0.0000,  0.4847, -0.2039])
[accuracy error] backward  paddle.nn.functional.layer_norm(Tensor([570425345, 4],"float32"), list[4,], None, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30 / 2281701380 (0.0%)
Greatest absolute difference: 0.0459291934967041 at index (454664267, 2) (up to 0.01 allowed)
Greatest relative difference: 0.29699674248695374 at index (124666162, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([ 3.6029e-01, -1.4704e+00,  7.4149e-01,  3.6862e-01, -1.5118e+00,
         1.0897e+00,  9.2852e-01, -5.0644e-01,  6.3692e-01,  1.1258e+00,
        -9.8300e-01, -7.7974e-01, -2.6168e-01,  6.3505e-01, -3.8833e-03,
        -3.6948e-01,  8.2411e-01, -1.3578e+00,  1.7477e+00, -1.2140e+00,
         3.2692e-01, -4.7411e-01,  1.1665e+00, -1.0193e+00, -4.4844e-01,
        -2.7313e-01,  9.0403e-01, -1.8246e-01, -3.9089e+00, -1.1907e-01,
         3.1343e+00,  8.9372e-01,  1.5204e-01,  3.2953e+00,  1.7415e+00,
        -5.1888e+00,  1.3312e+00,  1.3655e-01, -9.4115e-01, -5.2654e-01,
        -3.6665e-01,  3.5070e-01, -2.0057e-01,  2.1652e-01,  1.7574e+00,
        -1.1092e+00,  4.0400e-01, -1.0522e+00,  3.4351e-01,  6.3438e-01,
        -1.2033e+00,  2.2536e-01,  8.8012e-01, -4.3746e-01,  8.5290e-01,
        -1.2956e+00, -5.7312e-01, -9.0138e-01,  1.6090e+00, -1.3452e-01,
         1.1232e-01, -7.0398e-01,  7.7948e-01, -1.8783e-01,  2.2051e-01,
         6.0693e-01, -6.2718e-01, -2.0026e-01,  1.1564e+00,  5.2733e-01,
        -9.2967e-01, -7.5406e-01, -1.9990e+00,  1.0117e+00, -1.1320e+00,
         2.1194e+00, -4.7730e-01, -7.5338e-01,  1.0233e+00,  2.0740e-01,
         6.2817e-01, -2.0366e+00,  7.0735e-02,  1.3377e+00,  3.4029e-01,
         7.8417e-01, -4.0002e-01, -7.2444e-01,  8.3565e-02, -5.5300e-01,
         1.5194e-01,  3.1749e-01, -2.7762e-01,  3.1805e-01, -1.9968e-01,
         1.5925e-01, -5.2924e-01,  5.7315e-01, -5.2407e-01,  4.8016e-01])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([ 3.6029e-01, -1.4704e+00,  7.4149e-01,  3.6862e-01, -1.5118e+00,
         1.0897e+00,  9.2852e-01, -5.0644e-01,  6.3692e-01,  1.1258e+00,
        -9.8300e-01, -7.7974e-01, -2.6168e-01,  6.3505e-01, -3.8829e-03,
        -3.6948e-01,  8.2411e-01, -1.3578e+00,  1.7477e+00, -1.2140e+00,
         3.2692e-01, -4.7411e-01,  1.1665e+00, -1.0193e+00, -4.4844e-01,
        -2.7313e-01,  9.0403e-01, -1.8246e-01, -3.9089e+00, -1.1907e-01,
         3.1343e+00,  8.9372e-01,  1.5204e-01,  3.2953e+00,  1.7415e+00,
        -5.1888e+00,  1.3312e+00,  1.3655e-01, -9.4115e-01, -5.2654e-01,
        -3.6665e-01,  3.5070e-01, -2.0057e-01,  2.1652e-01,  1.7574e+00,
        -1.1092e+00,  4.0400e-01, -1.0522e+00,  3.4351e-01,  6.3438e-01,
        -1.2033e+00,  2.2536e-01,  8.8012e-01, -4.3746e-01,  8.5290e-01,
        -1.2956e+00, -5.7312e-01, -9.0138e-01,  1.6090e+00, -1.3452e-01,
         1.1232e-01, -7.0398e-01,  7.7948e-01, -1.8783e-01,  2.2051e-01,
         6.0693e-01, -6.2718e-01, -2.0026e-01,  1.1564e+00,  5.2733e-01,
        -9.2967e-01, -7.5406e-01, -1.9990e+00,  1.0117e+00, -1.1320e+00,
         2.1193e+00, -4.7730e-01, -7.5338e-01,  1.0233e+00,  2.0740e-01,
         6.2817e-01, -2.0366e+00,  7.0735e-02,  1.3377e+00,  3.4029e-01,
         7.8417e-01, -4.0002e-01, -7.2444e-01,  8.3565e-02, -5.5300e-01,
         1.5194e-01,  3.1749e-01, -2.7762e-01,  3.1805e-01, -1.9968e-01,
         1.5925e-01, -5.2924e-01,  5.7315e-01, -5.2407e-01,  4.8016e-01])
[accuracy error] backward  paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 4294967298 (0.0%)
Greatest absolute difference: 0.0145263671875 at index (348060764, 1, 0) (up to 0.01 allowed)
Greatest relative difference: 0.411865234375 at index (108731945, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883, 2, 3]), dtype=torch.float16)
First 100 elements: tensor([-1.0029e+00,  1.6553e+00, -7.6660e-01, -2.6953e-01,  1.0488e+00,
        -6.6406e-01,  3.3008e-01, -4.8291e-01,  2.6094e+00, -4.9805e-01,
        -1.1094e+00, -8.5059e-01, -1.6865e+00,  6.1328e-01, -9.6875e-01,
        -5.9766e-01, -1.1436e+00,  3.7812e+00, -7.9834e-01,  1.7168e+00,
         2.2754e-01, -3.9600e-01,  1.1115e-01, -8.6133e-01,  9.7070e-01,
        -3.7305e-01, -7.2559e-01,  5.4639e-01, -1.0254e-02, -4.0820e-01,
        -9.9219e-01,  4.0576e-01,  1.9619e+00, -8.8672e-01, -2.8320e-01,
        -2.0667e-01, -5.9863e-01,  2.1387e+00, -7.9004e-01,  4.2944e-01,
        -6.7334e-01, -5.0586e-01, -3.2520e-01,  1.4844e+00,  1.4453e-01,
         2.6660e-01,  6.0852e-02, -1.6309e+00,  1.6289e+00,  8.1104e-01,
        -1.3809e+00, -1.6904e+00, -1.4043e+00,  2.0371e+00, -3.7891e-01,
         4.3994e-01, -1.1104e+00, -9.7656e-04,  2.2520e+00, -1.2021e+00,
         1.9873e-01,  3.3008e-01,  3.0322e-01, -5.6592e-01, -3.3301e-01,
         6.7261e-02,  4.3945e-01, -1.7061e+00,  3.6816e-01,  8.4180e-01,
        -1.6980e-01,  2.2620e-01,  6.3086e-01, -1.0215e+00, -3.9966e-01,
         1.5146e+00, -1.4551e+00,  7.3047e-01, -2.8979e-01,  2.5244e-01,
        -3.1738e-01,  9.0137e-01, -7.0166e-01,  1.5552e-01, -1.0820e+00,
         4.5996e-01,  2.7188e+00, -1.4268e+00, -5.0000e-01, -1.7188e-01,
         8.5840e-01, -8.2422e-01,  1.8252e+00, -1.1670e+00,  2.2302e-01,
        -9.1553e-01, -7.1973e-01,  1.6855e+00,  8.8428e-01, -1.6133e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([715827883, 2, 3]), dtype=torch.float16)
First 100 elements: tensor([-1.0029e+00,  1.6553e+00, -7.6660e-01, -2.6953e-01,  1.0488e+00,
        -6.6455e-01,  3.3032e-01, -4.8267e-01,  2.6094e+00, -4.9829e-01,
        -1.1094e+00, -8.5010e-01, -1.6865e+00,  6.1475e-01, -9.6875e-01,
        -5.9766e-01, -1.1436e+00,  3.7832e+00, -7.9834e-01,  1.7178e+00,
         2.2729e-01, -3.9624e-01,  1.1108e-01, -8.6133e-01,  9.7119e-01,
        -3.7329e-01, -7.2510e-01,  5.4639e-01, -1.0666e-02, -4.0820e-01,
        -9.9170e-01,  4.0576e-01,  1.9619e+00, -8.8672e-01, -2.8320e-01,
        -2.0667e-01, -5.9863e-01,  2.1406e+00, -7.9053e-01,  4.2944e-01,
        -6.7383e-01, -5.0635e-01, -3.2520e-01,  1.4844e+00,  1.4441e-01,
         2.6660e-01,  6.0822e-02, -1.6309e+00,  1.6279e+00,  8.1152e-01,
        -1.3809e+00, -1.6904e+00, -1.4043e+00,  2.0371e+00, -3.7915e-01,
         4.4019e-01, -1.1104e+00, -9.9182e-04,  2.2520e+00, -1.2021e+00,
         1.9885e-01,  3.2983e-01,  3.0322e-01, -5.6592e-01, -3.3325e-01,
         6.7261e-02,  4.3945e-01, -1.7051e+00,  3.6816e-01,  8.4131e-01,
        -1.6980e-01,  2.2607e-01,  6.3086e-01, -1.0215e+00, -3.9966e-01,
         1.5146e+00, -1.4551e+00,  7.3096e-01, -2.9004e-01,  2.5244e-01,
        -3.1738e-01,  9.0137e-01, -7.0215e-01,  1.5576e-01, -1.0820e+00,
         4.6021e-01,  2.7207e+00, -1.4268e+00, -5.0000e-01, -1.7139e-01,
         8.5889e-01, -8.2471e-01,  1.8252e+00, -1.1670e+00,  2.2290e-01,
        -9.1553e-01, -7.1973e-01,  1.6855e+00,  8.8477e-01, -1.6133e+00],
       dtype=torch.float16)
[accuracy error] backward  paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), epsilon=1e-05, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10 / 4294967298 (0.0%)
Greatest absolute difference: 0.01806640625 at index (268803934, 0, 2) (up to 0.01 allowed)
Greatest relative difference: 0.42236328125 at index (239661431, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883, 2, 3]), dtype=torch.float16)
First 100 elements: tensor([-1.3647e-01, -1.7664e-01, -4.0942e-01,  1.8223e+00, -3.3081e-01,
        -7.6953e-01,  6.3330e-01, -4.0796e-01, -2.2705e-01,  4.7095e-01,
         3.9062e-03, -4.7290e-01, -1.0410e+00,  1.6614e-01, -3.0029e-01,
        -6.9531e-01,  1.3586e-01,  1.7363e+00, -2.3047e-01,  2.1533e-01,
         9.0820e-01, -1.5654e+00,  2.2705e-01,  4.4629e-01,  1.7363e+00,
         1.2871e+00, -7.0898e-01, -1.4551e+00,  1.5479e-01, -1.0146e+00,
         1.8701e+00,  2.0254e+00, -4.0898e+00,  2.8867e+00, -2.9238e+00,
         2.3096e-01,  1.0889e+00, -5.9375e-01,  7.9834e-02, -4.1821e-01,
        -9.8535e-01,  8.2910e-01,  7.0605e-01, -2.1436e-01, -4.5459e-01,
        -3.4399e-01, -1.3408e+00,  1.6484e+00, -2.4121e-01, -7.2998e-02,
        -6.6650e-01,  2.9199e-01,  8.3789e-01, -1.4844e-01, -3.4229e-01,
         2.3145e-01, -2.5610e-01,  3.8745e-01, -7.2559e-01,  7.0508e-01,
         4.1016e-02, -1.8145e+00,  3.0762e-02, -2.7832e+00,  3.1973e+00,
         1.3271e+00, -7.5635e-01,  9.9951e-01, -1.2744e+00,  1.1484e+00,
         1.6035e+00, -1.7217e+00,  7.9004e-01,  1.0742e+00, -1.6465e+00,
        -1.7542e-01, -5.1465e-01,  4.7217e-01, -3.2959e-02,  5.8691e-01,
         6.6528e-02, -8.1543e-01, -1.0146e+00,  1.2100e+00, -8.9355e-01,
        -1.0654e+00,  1.1172e+00, -4.0991e-01, -1.5674e-01,  1.4102e+00,
         9.6631e-01, -7.7295e-01,  5.0195e-01,  6.7773e-01, -6.0889e-01,
        -7.6367e-01, -5.8887e-01,  6.4307e-01, -4.0210e-01,  2.4414e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([715827883, 2, 3]), dtype=torch.float16)
First 100 elements: tensor([-1.3623e-01, -1.7676e-01, -4.0942e-01,  1.8232e+00, -3.3081e-01,
        -7.6953e-01,  6.3330e-01, -4.0796e-01, -2.2705e-01,  4.7095e-01,
         3.8567e-03, -4.7290e-01, -1.0410e+00,  1.6614e-01, -3.0005e-01,
        -6.9580e-01,  1.3586e-01,  1.7354e+00, -2.3047e-01,  2.1509e-01,
         9.0820e-01, -1.5654e+00,  2.2705e-01,  4.4580e-01,  1.7363e+00,
         1.2871e+00, -7.0850e-01, -1.4551e+00,  1.5466e-01, -1.0146e+00,
         1.8701e+00,  2.0254e+00, -4.0898e+00,  2.8867e+00, -2.9219e+00,
         2.3059e-01,  1.0879e+00, -5.9326e-01,  7.9590e-02, -4.1797e-01,
        -9.8535e-01,  8.2910e-01,  7.0605e-01, -2.1436e-01, -4.5459e-01,
        -3.4399e-01, -1.3418e+00,  1.6475e+00, -2.4109e-01, -7.3486e-02,
        -6.6699e-01,  2.9199e-01,  8.3789e-01, -1.4868e-01, -3.4204e-01,
         2.3120e-01, -2.5610e-01,  3.8745e-01, -7.2559e-01,  7.0508e-01,
         4.0771e-02, -1.8145e+00,  3.0502e-02, -2.7812e+00,  3.1973e+00,
         1.3281e+00, -7.5586e-01,  9.9951e-01, -1.2744e+00,  1.1494e+00,
         1.6035e+00, -1.7217e+00,  7.9053e-01,  1.0742e+00, -1.6465e+00,
        -1.7529e-01, -5.1465e-01,  4.7217e-01, -3.2990e-02,  5.8643e-01,
         6.6284e-02, -8.1494e-01, -1.0137e+00,  1.2090e+00, -8.9453e-01,
        -1.0654e+00,  1.1162e+00, -4.0967e-01, -1.5662e-01,  1.4102e+00,
         9.6582e-01, -7.7295e-01,  5.0195e-01,  6.7773e-01, -6.0889e-01,
        -7.6367e-01, -5.8887e-01,  6.4307e-01, -4.0210e-01,  2.4475e-01],
       dtype=torch.float16)
[accuracy error] backward  paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 77026 / 4294967298 (0.0%)
Greatest absolute difference: 0.109375 at index (1194891356, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1415788513, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([-3.6108e-01, -1.0146e+00,  1.3750e+00, -1.4424e+00,  1.3076e+00,
         1.3428e-01,  1.2227e+00, -2.6367e-01, -9.5996e-01,  4.5532e-01,
        -3.1738e-01, -1.4014e-01, -4.8877e-01, -7.8125e-03,  4.9805e-01,
        -2.1777e+00,  6.2158e-01,  1.5566e+00, -3.9062e-03, -1.1523e-01,
         1.1914e-01, -1.3647e-01, -5.9814e-03,  1.4233e-01, -3.8184e-01,
        -6.4893e-01,  1.0303e+00, -1.8096e+00,  7.9932e-01,  1.0107e+00,
        -1.1230e+00,  1.0703e+00,  5.2734e-02,  0.0000e+00,  1.8066e-02,
        -1.8311e-02,  1.1240e+00, -3.9087e-01, -7.3340e-01,  5.0928e-01,
        -3.5938e-01, -1.5015e-01, -3.7280e-01, -6.5039e-01,  1.0234e+00,
        -2.3438e-01, -1.2979e+00,  1.5332e+00, -6.9971e-01, -6.3721e-02,
         7.6367e-01, -1.7969e-01, -8.8232e-01,  1.0635e+00, -1.7100e+00,
         3.1406e+00, -1.4287e+00, -6.8359e-02,  2.1973e-01, -1.5039e-01,
         1.4697e+00,  8.2031e-02, -1.5518e+00, -8.9111e-01,  4.3262e-01,
         4.5947e-01,  1.8237e-01, -2.6685e-01,  8.3984e-02,  3.7812e+00,
         1.0596e-01, -3.8965e+00,  1.2637e+00, -8.9844e-01, -3.6523e-01,
         1.0352e-01,  1.6602e-02, -1.1914e-01, -5.3711e-03,  1.7456e-02,
        -1.2207e-02,  9.5215e-01, -6.1377e-01, -3.3887e-01, -4.4727e-01,
         1.2383e+00, -7.9053e-01, -1.5820e-01,  7.9590e-02,  7.8613e-02,
        -3.7793e-01, -1.7480e-01,  5.5176e-01, -4.0508e+00,  5.4453e+00,
        -1.3936e+00,  8.0322e-02,  1.3047e+00, -1.3857e+00,  2.0020e-02],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([-3.6084e-01, -1.0146e+00,  1.3750e+00, -1.4424e+00,  1.3076e+00,
         1.3428e-01,  1.2227e+00, -2.6392e-01, -9.5898e-01,  4.5581e-01,
        -3.1665e-01, -1.3928e-01, -4.8901e-01, -8.5068e-03,  4.9756e-01,
        -2.1777e+00,  6.2207e-01,  1.5566e+00, -3.7994e-03, -1.1542e-01,
         1.1920e-01, -1.3647e-01, -5.9319e-03,  1.4246e-01, -3.8184e-01,
        -6.4844e-01,  1.0303e+00, -1.8096e+00,  7.9883e-01,  1.0107e+00,
        -1.1230e+00,  1.0703e+00,  5.2734e-02,  2.0659e-04,  1.8112e-02,
        -1.8311e-02,  1.1250e+00, -3.9111e-01, -7.3389e-01,  5.0928e-01,
        -3.5913e-01, -1.5027e-01, -3.7305e-01, -6.5039e-01,  1.0234e+00,
        -2.3450e-01, -1.2988e+00,  1.5332e+00, -7.0020e-01, -6.3904e-02,
         7.6416e-01, -1.8018e-01, -8.8232e-01,  1.0625e+00, -1.7100e+00,
         3.1406e+00, -1.4297e+00, -6.8726e-02,  2.1936e-01, -1.5063e-01,
         1.4697e+00,  8.2214e-02, -1.5518e+00, -8.9160e-01,  4.3262e-01,
         4.5874e-01,  1.8274e-01, -2.6685e-01,  8.4045e-02,  3.7852e+00,
         1.0864e-01, -3.8945e+00,  1.2637e+00, -8.9844e-01, -3.6499e-01,
         1.0297e-01,  1.6479e-02, -1.1945e-01, -5.4970e-03,  1.7578e-02,
        -1.2077e-02,  9.5215e-01, -6.1328e-01, -3.3862e-01, -4.4751e-01,
         1.2383e+00, -7.9053e-01, -1.5820e-01,  7.9712e-02,  7.8491e-02,
        -3.7720e-01, -1.7493e-01,  5.5225e-01, -4.0508e+00,  5.4453e+00,
        -1.3926e+00,  8.0078e-02,  1.3047e+00, -1.3848e+00,  1.9699e-02],
       dtype=torch.float16)
[accuracy error] backward  paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), epsilon=1e-05, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76843 / 4294967298 (0.0%)
Greatest absolute difference: 0.11328125 at index (1105033896, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (1295918426, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([ 7.1533e-01,  1.3672e-02, -7.2900e-01,  1.3008e+00,  4.4238e-01,
        -1.7441e+00, -1.6445e+00,  1.2510e+00,  3.9355e-01, -4.7363e-02,
         7.0801e-02, -2.3926e-02, -1.5625e+01,  5.4844e+00,  1.0156e+01,
         2.6172e-01, -2.9453e+00,  2.6836e+00,  5.8105e-02, -3.9062e-03,
        -5.5176e-02, -2.6035e+00,  4.0576e-01,  2.1953e+00, -7.0557e-01,
         7.4609e-01, -4.0527e-02,  1.7480e-01, -2.6660e-01,  9.0820e-02,
         2.0020e-01, -9.7656e-03, -1.9043e-01,  1.6919e-01, -4.4751e-01,
         2.7759e-01,  6.5430e-02, -7.8613e-01,  7.1973e-01, -2.3438e-02,
        -8.0420e-01,  8.2812e-01,  9.0723e-01, -1.6133e+00,  7.0508e-01,
         1.7432e-01, -2.9272e-01,  1.1816e-01,  1.0459e+00, -1.3633e+00,
         3.1812e-01,  3.9990e-01, -2.8101e-01, -1.1938e-01,  2.0430e+00,
        -1.6602e-01, -1.8789e+00, -3.5938e-01, -8.0957e-01,  1.1709e+00,
         2.5391e-01, -3.1689e-01,  6.3477e-02,  4.1113e-01, -2.8320e-02,
        -3.8257e-01,  1.4668e+00, -1.8486e+00,  3.9062e-01, -6.1133e-01,
         1.4160e-01,  4.6924e-01, -4.3945e-02, -1.4160e-01,  1.8506e-01,
         1.8115e-01,  1.1572e-01, -2.9688e-01, -3.4180e-02,  4.7241e-02,
        -1.2207e-02, -2.9297e-03, -1.9385e-01,  1.9580e-01, -2.3193e-02,
         9.7656e-03,  1.3672e-02, -3.5059e-01, -3.4882e-02,  3.8403e-01,
        -1.4453e+00,  1.4619e+00, -1.5625e-02, -2.1094e-01, -3.3203e-01,
         5.3809e-01,  8.8623e-02,  6.9824e-02, -1.5833e-01, -1.4512e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([ 7.1533e-01,  1.3596e-02, -7.2900e-01,  1.3008e+00,  4.4263e-01,
        -1.7441e+00, -1.6455e+00,  1.2520e+00,  3.9331e-01, -4.6997e-02,
         7.0862e-02, -2.3895e-02, -1.5625e+01,  5.4688e+00,  1.0148e+01,
         2.6270e-01, -2.9453e+00,  2.6816e+00,  5.8075e-02, -2.9640e-03,
        -5.5115e-02, -2.6016e+00,  4.0601e-01,  2.1973e+00, -7.0557e-01,
         7.4609e-01, -4.0558e-02,  1.7566e-01, -2.6709e-01,  9.1431e-02,
         1.9995e-01, -9.6741e-03, -1.9019e-01,  1.6943e-01, -4.4727e-01,
         2.7783e-01,  6.5674e-02, -7.8516e-01,  7.1973e-01, -2.3804e-02,
        -8.0469e-01,  8.2861e-01,  9.0771e-01, -1.6123e+00,  7.0459e-01,
         1.7432e-01, -2.9272e-01,  1.1829e-01,  1.0459e+00, -1.3643e+00,
         3.1812e-01,  4.0015e-01, -2.8101e-01, -1.1920e-01,  2.0449e+00,
        -1.6541e-01, -1.8789e+00, -3.5986e-01, -8.1055e-01,  1.1709e+00,
         2.5391e-01, -3.1714e-01,  6.3171e-02,  4.1113e-01, -2.8381e-02,
        -3.8257e-01,  1.4639e+00, -1.8506e+00,  3.8696e-01, -6.1133e-01,
         1.4185e-01,  4.6948e-01, -4.3671e-02, -1.4160e-01,  1.8518e-01,
         1.8103e-01,  1.1566e-01, -2.9663e-01, -3.4515e-02,  4.7028e-02,
        -1.2505e-02, -2.4815e-03, -1.9324e-01,  1.9568e-01, -2.3087e-02,
         9.7198e-03,  1.3374e-02, -3.5034e-01, -3.4424e-02,  3.8477e-01,
        -1.4463e+00,  1.4619e+00, -1.5533e-02, -2.1057e-01, -3.2861e-01,
         5.3906e-01,  8.8623e-02,  6.9641e-02, -1.5833e-01, -1.4521e+00],
       dtype=torch.float16)
[accuracy error] backward  paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2011 / 2281701381 (0.0%)
Greatest absolute difference: 0.10239267349243164 at index (488854492, 2) (up to 0.01 allowed)
Greatest relative difference: 21.8875732421875 at index (666286144, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-9.1157e-02,  1.9462e+00, -1.8551e+00,  8.6895e-01,  2.7616e-01,
        -1.1451e+00, -5.9383e-02,  1.4786e-02,  4.4597e-02,  1.8213e-02,
         3.9977e-01, -4.1798e-01, -6.8329e-01, -1.1339e+00,  1.8172e+00,
        -4.8590e-02, -6.6396e-01,  7.1255e-01, -5.8201e-01,  6.0375e-01,
        -2.1739e-02,  2.9420e-01, -1.1948e+00,  9.0064e-01, -3.7710e+00,
         6.3836e-02,  3.7072e+00,  2.4504e-01,  1.1332e-01, -3.5835e-01,
        -1.4672e+00,  6.3811e-01,  8.2908e-01, -1.7338e-03, -1.3241e-03,
         3.0577e-03,  3.6931e-02, -2.0049e+00,  1.9680e+00,  7.8757e-03,
         1.5405e+00, -1.5484e+00, -9.7098e-01,  1.8247e+00, -8.5372e-01,
         3.6370e-03,  8.2044e-02, -8.5682e-02, -3.1721e-01,  6.4359e-01,
        -3.2638e-01, -6.5221e-02, -3.3235e-01,  3.9757e-01, -8.0684e-02,
         2.5613e-01, -1.7545e-01, -1.7760e-02, -7.9118e-02,  9.6878e-02,
         8.9525e-01,  1.4640e-01, -1.0417e+00, -5.2472e-01,  8.0402e-01,
        -2.7930e-01, -4.4481e-02,  7.6293e-01, -7.1845e-01,  2.0619e-02,
        -3.8317e-02,  1.7698e-02,  1.2066e+00, -7.9716e-01, -4.0940e-01,
        -5.5608e-02, -2.9763e-01,  3.5324e-01, -4.0038e-01, -4.7541e-02,
         4.4792e-01,  5.1857e-01, -2.5334e-01, -2.6523e-01, -4.6936e-01,
        -1.3055e-01,  5.9991e-01,  2.7354e-01,  9.9539e-01, -1.2689e+00,
         2.1990e-01, -7.7102e-01,  5.5112e-01, -1.9743e-02,  8.2229e-01,
        -8.0254e-01,  2.0825e-01, -5.4483e-01,  3.3658e-01, -8.3406e-02])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-9.1157e-02,  1.9462e+00, -1.8551e+00,  8.6895e-01,  2.7616e-01,
        -1.1451e+00, -5.9383e-02,  1.4786e-02,  4.4597e-02,  1.8213e-02,
         3.9977e-01, -4.1798e-01, -6.8329e-01, -1.1339e+00,  1.8172e+00,
        -4.8591e-02, -6.6396e-01,  7.1255e-01, -5.8201e-01,  6.0375e-01,
        -2.1739e-02,  2.9420e-01, -1.1948e+00,  9.0064e-01, -3.7710e+00,
         6.3836e-02,  3.7072e+00,  2.4504e-01,  1.1332e-01, -3.5835e-01,
        -1.4672e+00,  6.3811e-01,  8.2908e-01, -1.7335e-03, -1.3241e-03,
         3.0578e-03,  3.6931e-02, -2.0049e+00,  1.9680e+00,  7.8760e-03,
         1.5405e+00, -1.5484e+00, -9.7098e-01,  1.8247e+00, -8.5372e-01,
         3.6398e-03,  8.2043e-02, -8.5683e-02, -3.1721e-01,  6.4359e-01,
        -3.2638e-01, -6.5221e-02, -3.3235e-01,  3.9757e-01, -8.0684e-02,
         2.5613e-01, -1.7545e-01, -1.7760e-02, -7.9118e-02,  9.6878e-02,
         8.9525e-01,  1.4640e-01, -1.0417e+00, -5.2472e-01,  8.0402e-01,
        -2.7930e-01, -4.4482e-02,  7.6293e-01, -7.1845e-01,  2.0618e-02,
        -3.8317e-02,  1.7698e-02,  1.2066e+00, -7.9716e-01, -4.0940e-01,
        -5.5608e-02, -2.9763e-01,  3.5324e-01, -4.0038e-01, -4.7542e-02,
         4.4792e-01,  5.1857e-01, -2.5334e-01, -2.6523e-01, -4.6936e-01,
        -1.3055e-01,  5.9991e-01,  2.7354e-01,  9.9539e-01, -1.2689e+00,
         2.1990e-01, -7.7102e-01,  5.5112e-01, -1.9744e-02,  8.2229e-01,
        -8.0254e-01,  2.0825e-01, -5.4483e-01,  3.3658e-01, -8.3406e-02])
[accuracy error] backward  paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), epsilon=1e-05, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2081 / 2281701381 (0.0%)
Greatest absolute difference: 0.09823350608348846 at index (361299380, 0) (up to 0.01 allowed)
Greatest relative difference: 57.74833297729492 at index (299297582, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-3.4403e-01,  2.2581e-01,  1.1822e-01, -4.6930e-02, -3.0072e-03,
         4.9938e-02, -1.6641e+00,  3.2994e-01,  1.3341e+00,  2.4262e-05,
        -2.5767e-01,  2.5764e-01, -2.2796e-01, -3.9012e-01,  6.1807e-01,
         5.7603e-01,  1.1937e-01, -6.9541e-01, -1.0981e-01,  6.9274e-02,
         4.0536e-02,  3.0153e-02,  1.7009e-01, -2.0024e-01,  7.7696e-01,
        -2.8142e-01, -4.9554e-01, -1.0050e+00,  5.6088e-01,  4.4412e-01,
         1.7494e-01,  3.1329e-01, -4.8823e-01, -6.4559e-01, -2.7174e-01,
         9.1732e-01,  2.1558e+00, -8.9184e-01, -1.2640e+00,  6.1526e-01,
        -4.7793e-01, -1.3733e-01,  5.6353e-01, -1.2728e-01, -4.3625e-01,
         5.6899e-04,  4.5646e-01, -4.5703e-01,  2.8011e+00, -9.2340e-02,
        -2.7087e+00, -9.2351e-03,  3.5563e-02, -2.6328e-02, -7.8535e-03,
         5.2308e-02, -4.4455e-02,  3.1280e-01, -1.9448e-01, -1.1832e-01,
         3.3677e-01, -6.6231e-01,  3.2554e-01,  5.0829e+00,  3.7384e+00,
        -8.8212e+00,  1.8271e-01,  8.0398e-01, -9.8669e-01, -5.0003e-03,
        -1.8430e-01,  1.8930e-01,  1.0244e-01,  3.3443e-01, -4.3687e-01,
        -2.8148e-01, -1.8231e-01,  4.6379e-01, -1.8574e+00,  2.1977e+00,
        -3.4024e-01, -3.1525e-01, -2.8927e-01,  6.0453e-01, -6.7519e-01,
         2.9204e-02,  6.4599e-01, -3.0153e+00,  3.6306e-01,  2.6523e+00,
         2.5453e-02, -1.0884e-01,  8.3385e-02, -2.6483e-01,  1.9047e-01,
         7.4362e-02,  4.0758e-01, -3.7218e-01, -3.5393e-02, -1.6608e-01])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-3.4403e-01,  2.2581e-01,  1.1822e-01, -4.6930e-02, -3.0073e-03,
         4.9938e-02, -1.6641e+00,  3.2994e-01,  1.3341e+00,  2.4504e-05,
        -2.5767e-01,  2.5764e-01, -2.2796e-01, -3.9012e-01,  6.1807e-01,
         5.7603e-01,  1.1937e-01, -6.9541e-01, -1.0981e-01,  6.9274e-02,
         4.0536e-02,  3.0153e-02,  1.7009e-01, -2.0024e-01,  7.7696e-01,
        -2.8142e-01, -4.9554e-01, -1.0050e+00,  5.6088e-01,  4.4412e-01,
         1.7494e-01,  3.1329e-01, -4.8823e-01, -6.4559e-01, -2.7173e-01,
         9.1732e-01,  2.1558e+00, -8.9184e-01, -1.2640e+00,  6.1526e-01,
        -4.7793e-01, -1.3733e-01,  5.6353e-01, -1.2728e-01, -4.3625e-01,
         5.6927e-04,  4.5646e-01, -4.5703e-01,  2.8011e+00, -9.2340e-02,
        -2.7087e+00, -9.2351e-03,  3.5563e-02, -2.6328e-02, -7.8534e-03,
         5.2309e-02, -4.4455e-02,  3.1280e-01, -1.9448e-01, -1.1832e-01,
         3.3677e-01, -6.6231e-01,  3.2554e-01,  5.0845e+00,  3.7367e+00,
        -8.8212e+00,  1.8271e-01,  8.0398e-01, -9.8669e-01, -5.0002e-03,
        -1.8430e-01,  1.8930e-01,  1.0244e-01,  3.3443e-01, -4.3687e-01,
        -2.8148e-01, -1.8231e-01,  4.6379e-01, -1.8574e+00,  2.1977e+00,
        -3.4024e-01, -3.1525e-01, -2.8927e-01,  6.0453e-01, -6.7519e-01,
         2.9204e-02,  6.4599e-01, -3.0153e+00,  3.6306e-01,  2.6523e+00,
         2.5453e-02, -1.0884e-01,  8.3385e-02, -2.6483e-01,  1.9047e-01,
         7.4362e-02,  4.0758e-01, -3.7218e-01, -3.5393e-02, -1.6608e-01])
[accuracy error] backward  paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.1, 0.3, training=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4034572460 / 4294967340 (93.9%)
Greatest absolute difference: 0.5 at index (60, 1, 1, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 2, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([71582789, 3, 4, 5]), dtype=torch.float16)
First 100 elements: tensor([ 0.0423,  0.0982,  0.0927, -0.1571, -0.0061,  0.4512, -0.0106,  0.4592,
         0.4851, -0.0359, -0.0112,  0.4795, -0.1960, -0.0874,  0.4944,  0.4556,
         0.0930,  0.4556, -0.0187,  0.1603, -0.1802, -0.0377,  0.1783, -0.2629,
        -0.4119,  0.4062, -0.2964,  0.0739,  0.0048, -0.0862,  0.0039,  0.0909,
        -0.0878, -0.4038, -0.3064,  0.0819, -0.3813,  0.2012,  0.0217,  0.0795,
         0.0760,  0.0513, -0.0098,  0.0801,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([71582789, 3, 4, 5]), dtype=torch.float16)
First 100 elements: tensor([ 0.0423,  0.0983,  0.0927, -0.1571, -0.0061,  0.4512, -0.0106,  0.4592,
         0.4851, -0.0359, -0.0112,  0.4795, -0.1960, -0.0874,  0.4944,  0.4556,
         0.0930,  0.4556, -0.0187,  0.1603, -0.1802, -0.0377,  0.1783, -0.2629,
        -0.4119,  0.4062, -0.2964,  0.0739,  0.0048, -0.0862,  0.0039,  0.0909,
        -0.0878, -0.4038, -0.3064,  0.0819, -0.3813,  0.2012,  0.0217,  0.0795,
         0.0760,  0.0513, -0.0098,  0.0801,  0.0384,  0.0422, -0.0999,  0.0010,
         0.0802,  0.2240,  0.0762, -0.0881, -0.2563, -0.0051, -0.1897, -0.0872,
         0.0861, -0.4956,  0.0589, -0.4849,  0.1449,  0.4277, -0.1471,  0.0519,
        -0.0563, -0.0219,  0.0101, -0.1470,  0.3801, -0.0773,  0.0931,  0.0273,
        -0.1113, -0.0847,  0.4150, -0.0518,  0.1887, -0.0165, -0.0282, -0.0073,
         0.3171, -0.1700, -0.0794,  0.1803, -0.0970, -0.2406,  0.0632,  0.3296,
        -0.1175,  0.0388, -0.0973,  0.4595,  0.0162, -0.0535,  0.0506, -0.0322,
         0.0929, -0.0210, -0.0132, -0.3743], dtype=torch.float16)
[accuracy error] backward  paddle.rsqrt(x=Tensor([2, 1073741825, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2011738 / 4294967300 (0.0%)
Greatest absolute difference: inf at index (0, 3800, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 3800, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1073741825, 2]), dtype=torch.float16)
First 100 elements: tensor([-3.2544e-01, -6.8506e-01,         nan,         nan,         nan,
         3.8320e+00, -1.6465e+00,  7.9736e-01,         nan, -7.5000e-01,
                nan,         nan, -1.9717e+00, -7.5635e-01, -2.2595e-01,
         2.5328e+01,  4.3481e-01, -1.4389e-02,         nan,  4.8945e+00,
                nan,  2.4746e+00,  2.1672e+01,         nan,         nan,
                nan, -3.1660e+00,  1.5369e-01, -9.8047e-01, -3.6788e-04,
         4.1733e-03,  1.8057e+00,         nan,         nan, -1.5512e+02,
        -2.8833e-01,         nan,         nan,  3.6309e+00,  1.3398e+00,
                nan, -7.1472e-02, -6.5479e-01,         nan,         nan,
                nan, -1.1289e+00,         nan,  2.0947e-01,         nan,
        -8.6865e-01, -3.1763e-01,         nan,         nan, -5.6305e-02,
         1.6416e+00,  4.3579e-01,  5.6738e-01,  5.6592e-01,         nan,
                nan, -6.0498e-01,         nan,         nan,         nan,
         1.3086e+00,  1.9922e-01, -8.5938e-01, -1.4570e+00,         nan,
                nan,         nan,  1.6973e+00,         nan,  3.7689e-02,
        -6.7432e-01,         nan,  2.9297e+00,         nan,         nan,
                nan,         nan,         nan, -8.3740e-01,         nan,
                nan, -4.6533e-01,  6.2891e-01,         nan, -4.0703e+00,
         1.0713e+00,  4.1284e-01,         nan,         nan,         nan,
                nan, -7.5732e-01, -1.5537e+00, -7.5879e-01, -4.7119e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 1073741825, 2]), dtype=torch.float16)
First 100 elements: tensor([-3.2544e-01, -6.8555e-01,         nan,         nan,         nan,
         3.8320e+00, -1.6475e+00,  7.9688e-01,         nan, -7.5000e-01,
                nan,         nan, -1.9707e+00, -7.5635e-01, -2.2595e-01,
         2.5328e+01,  4.3481e-01, -1.4389e-02,         nan,  4.8945e+00,
                nan,  2.4746e+00,  2.1672e+01,         nan,         nan,
                nan, -3.1680e+00,  1.5369e-01, -9.8047e-01, -3.6788e-04,
         4.1695e-03,  1.8047e+00,         nan,         nan, -1.5512e+02,
        -2.8833e-01,         nan,         nan,  3.6328e+00,  1.3398e+00,
                nan, -7.1472e-02, -6.5479e-01,         nan,         nan,
                nan, -1.1299e+00,         nan,  2.0947e-01,         nan,
        -8.6914e-01, -3.1763e-01,         nan,         nan, -5.6305e-02,
         1.6416e+00,  4.3579e-01,  5.6738e-01,  5.6641e-01,         nan,
                nan, -6.0547e-01,         nan,         nan,         nan,
         1.3086e+00,  1.9922e-01, -8.5938e-01, -1.4570e+00,         nan,
                nan,         nan,  1.6973e+00,         nan,  3.7689e-02,
        -6.7383e-01,         nan,  2.9297e+00,         nan,         nan,
                nan,         nan,         nan, -8.3740e-01,         nan,
                nan, -4.6533e-01,  6.2891e-01,         nan, -4.0703e+00,
         1.0713e+00,  4.1260e-01,         nan,         nan,         nan,
                nan, -7.5732e-01, -1.5537e+00, -7.5928e-01, -4.7119e-01],
       dtype=torch.float16)
[accuracy error] backward  paddle.rsqrt(x=Tensor([2, 3, 715827883],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2011221 / 4294967298 (0.0%)
Greatest absolute difference: inf at index (0, 0, 1570) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 1570) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 715827883]), dtype=torch.float16)
First 100 elements: tensor([-8.7188e+00, -3.2471e-01, -4.1064e-01,         nan,  1.3232e+00,
                nan,  5.2344e-01,         nan, -3.0312e+00,         nan,
                nan,         nan,         nan, -2.1167e-01,         nan,
                nan, -6.5137e-01, -9.1943e-01,         nan, -3.7266e+00,
                nan, -6.5742e+00, -1.0625e+00, -3.3716e-01,         nan,
         7.4414e-01,         nan,         nan,         nan, -6.0977e+00,
         6.7529e-01,         nan,         nan,  1.0266e+01, -4.6797e+00,
                nan, -8.2129e-01,         nan,         nan,         nan,
                nan, -5.1367e+00,         nan,         nan, -2.8945e+00,
                nan,  6.4180e+00, -1.5791e+00, -8.3812e+01,         nan,
                nan,  9.4385e-01,  5.3345e-02,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,  4.5977e+00,         nan,  2.5762e+00,         nan,
                nan,         nan,         nan, -5.0629e-02,  3.5031e+01,
        -9.2334e-01, -7.1924e-01,         nan,  9.9707e-01,         nan,
        -2.3223e+00,  1.6123e+00,  2.4316e+00,  2.0188e+01,  5.5145e-02,
        -2.4004e+00, -1.0437e-01, -3.0249e-01, -3.6713e-02,         nan,
                nan, -9.1797e-01, -1.1367e+01,         nan,         nan,
         2.9224e-01, -2.7094e+01,         nan, -2.2359e+01,  3.8989e-01,
         9.2480e-01,         nan,         nan,  1.1621e+00, -5.4053e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 3, 715827883]), dtype=torch.float16)
First 100 elements: tensor([-8.7188e+00, -3.2471e-01, -4.1089e-01,         nan,  1.3242e+00,
                nan,  5.2344e-01,         nan, -3.0312e+00,         nan,
                nan,         nan,         nan, -2.1167e-01,         nan,
                nan, -6.5137e-01, -9.1943e-01,         nan, -3.7266e+00,
                nan, -6.5781e+00, -1.0625e+00, -3.3716e-01,         nan,
         7.4365e-01,         nan,         nan,         nan, -6.0977e+00,
         6.7529e-01,         nan,         nan,  1.0266e+01, -4.6797e+00,
                nan, -8.2129e-01,         nan,         nan,         nan,
                nan, -5.1328e+00,         nan,         nan, -2.8945e+00,
                nan,  6.4219e+00, -1.5791e+00, -8.3812e+01,         nan,
                nan,  9.4385e-01,  5.3345e-02,         nan,         nan,
                nan,         nan,         nan,         nan,         nan,
                nan,  4.5938e+00,         nan,  2.5762e+00,         nan,
                nan,         nan,         nan, -5.0629e-02,  3.5031e+01,
        -9.2334e-01, -7.1924e-01,         nan,  9.9707e-01,         nan,
        -2.3223e+00,  1.6123e+00,  2.4336e+00,  2.0188e+01,  5.5145e-02,
        -2.4004e+00, -1.0431e-01, -3.0249e-01, -3.6713e-02,         nan,
                nan, -9.1846e-01, -1.1359e+01,         nan,         nan,
         2.9224e-01, -2.7109e+01,         nan, -2.2359e+01,  3.8989e-01,
         9.2480e-01,         nan,         nan,  1.1621e+00, -5.4053e-01],
       dtype=torch.float16)
[accuracy error] backward  paddle.rsqrt(x=Tensor([2, 715827883, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2010476 / 4294967298 (0.0%)
Greatest absolute difference: inf at index (0, 215, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 215, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 715827883, 3]), dtype=torch.float16)
First 100 elements: tensor([ 1.6895e-01,  1.4473e+00,         nan,  2.1399e-01,         nan,
         9.9548e-02,         nan, -5.7324e-01,         nan,         nan,
                nan,         nan,  3.3228e-01,         nan,  8.0029e-01,
         9.3506e-01,         nan,         nan,  1.8516e+00,  6.9971e-01,
         4.0547e+00,  1.7838e-02, -4.7656e+00,         nan, -6.3232e-01,
         9.2627e-01,         nan,  6.7148e+00,         nan,  1.0195e+00,
        -7.9785e-01, -1.0186e+00,         nan,         nan, -9.2529e-01,
                nan,         nan, -1.4941e+00, -4.0771e-01,  5.5820e+00,
                nan,  5.1133e+00,         nan,  8.2178e-01,         nan,
         1.3271e+00,  9.5947e-02,         nan,  3.9429e-01,         nan,
        -1.8445e-01,         nan, -2.7441e-01,         nan, -1.2880e+03,
                nan,  3.3325e-01,         nan,  9.7314e-01, -7.4023e-01,
         3.2471e-01,         nan,  6.7871e-01, -9.5117e-01,  3.1656e+01,
         5.3162e-02, -1.5918e+00,         nan,         nan,  8.4131e-01,
        -3.8940e-01, -8.0322e-01, -6.0234e+00,         nan,         nan,
                nan,         nan, -6.4062e-01,  2.0825e-01,         nan,
         6.5186e-01,  1.0088e+00, -4.7583e-01,         nan,         nan,
                nan, -9.5898e-01,         nan, -1.9739e-01, -7.3242e-01,
                nan, -9.1748e-01, -4.5996e-01,         nan, -1.8096e+00,
                nan,         nan,  6.1914e-01,         nan,         nan],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 715827883, 3]), dtype=torch.float16)
First 100 elements: tensor([ 1.6895e-01,  1.4473e+00,         nan,  2.1399e-01,         nan,
         9.9487e-02,         nan, -5.7324e-01,         nan,         nan,
                nan,         nan,  3.3252e-01,         nan,  8.0078e-01,
         9.3457e-01,         nan,         nan,  1.8516e+00,  6.9971e-01,
         4.0586e+00,  1.7838e-02, -4.7656e+00,         nan, -6.3184e-01,
         9.2578e-01,         nan,  6.7148e+00,         nan,  1.0195e+00,
        -7.9736e-01, -1.0186e+00,         nan,         nan, -9.2529e-01,
                nan,         nan, -1.4941e+00, -4.0771e-01,  5.5781e+00,
                nan,  5.1172e+00,         nan,  8.2178e-01,         nan,
         1.3271e+00,  9.5947e-02,         nan,  3.9429e-01,         nan,
        -1.8457e-01,         nan, -2.7466e-01,         nan, -1.2890e+03,
                nan,  3.3301e-01,         nan,  9.7314e-01, -7.3975e-01,
         3.2495e-01,         nan,  6.7871e-01, -9.5117e-01,  3.1672e+01,
         5.3162e-02, -1.5918e+00,         nan,         nan,  8.4082e-01,
        -3.8965e-01, -8.0322e-01, -6.0234e+00,         nan,         nan,
                nan,         nan, -6.4062e-01,  2.0825e-01,         nan,
         6.5186e-01,  1.0088e+00, -4.7559e-01,         nan,         nan,
                nan, -9.5850e-01,         nan, -1.9739e-01, -7.3242e-01,
                nan, -9.1699e-01, -4.5996e-01,         nan, -1.8096e+00,
                nan,         nan,  6.1914e-01,         nan,         nan],
       dtype=torch.float16)
[accuracy error] backward  paddle.rsqrt(x=Tensor([477218589, 3, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2012715 / 4294967301 (0.0%)
Greatest absolute difference: inf at index (191, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (191, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([477218589, 3, 3]), dtype=torch.float16)
First 100 elements: tensor([-1.5308e-01,         nan,         nan,  1.5930e-01,         nan,
         1.6031e+01, -3.8867e-01,         nan, -1.7256e+00,         nan,
         1.3555e+00, -8.7422e+00,         nan,  1.2061e+00,         nan,
         1.4326e+00,         nan, -6.8262e-01,         nan,         nan,
                nan,         nan,  1.3220e-01,         nan,         nan,
         5.3984e+00,         nan, -1.3586e-01,  3.4512e+00, -6.3406e+01,
        -8.1641e-01,  4.4360e-01,         nan,         nan,         nan,
         1.5942e-01,         nan,         nan,  6.0010e-01,         nan,
                nan,         nan, -2.0642e-01,         nan,  1.3416e-01,
        -2.3027e+00,  6.3135e-01,  4.9243e-01,  2.5488e-01,  3.5059e+00,
         6.0156e-01,         nan,         nan, -3.8354e-01, -6.3086e-01,
        -1.0883e+01,         nan, -5.7520e-01,         nan, -9.1797e-02,
                nan,         nan,  2.6289e+00,         nan, -1.0688e+01,
                nan, -3.9395e+00,  4.3872e-01,         nan,  1.0205e+00,
        -3.6816e+00,  2.3766e+01,         nan,         nan,         nan,
                nan,  2.3633e+00,         nan,  4.6289e-01, -6.7383e-01,
         6.6113e-01,         nan,         nan,         nan,         nan,
                nan,  6.7969e-01,  1.2129e+00, -1.8567e-01,  9.9365e-01,
        -3.5583e-02, -8.0664e-01,         nan,  6.1953e+00, -2.1445e+00,
                nan, -8.5312e+00,         nan,  3.8940e-01,         nan],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([477218589, 3, 3]), dtype=torch.float16)
First 100 elements: tensor([-1.5320e-01,         nan,         nan,  1.5930e-01,         nan,
         1.6031e+01, -3.8867e-01,         nan, -1.7256e+00,         nan,
         1.3564e+00, -8.7422e+00,         nan,  1.2061e+00,         nan,
         1.4326e+00,         nan, -6.8311e-01,         nan,         nan,
                nan,         nan,  1.3220e-01,         nan,         nan,
         5.3945e+00,         nan, -1.3586e-01,  3.4531e+00, -6.3406e+01,
        -8.1641e-01,  4.4360e-01,         nan,         nan,         nan,
         1.5942e-01,         nan,         nan,  6.0010e-01,         nan,
                nan,         nan, -2.0642e-01,         nan,  1.3403e-01,
        -2.3027e+00,  6.3135e-01,  4.9243e-01,  2.5488e-01,  3.5039e+00,
         6.0156e-01,         nan,         nan, -3.8354e-01, -6.3086e-01,
        -1.0891e+01,         nan, -5.7520e-01,         nan, -9.1736e-02,
                nan,         nan,  2.6270e+00,         nan, -1.0688e+01,
                nan, -3.9414e+00,  4.3872e-01,         nan,  1.0205e+00,
        -3.6816e+00,  2.3766e+01,         nan,         nan,         nan,
                nan,  2.3633e+00,         nan,  4.6289e-01, -6.7383e-01,
         6.6113e-01,         nan,         nan,         nan,         nan,
                nan,  6.7969e-01,  1.2129e+00, -1.8567e-01,  9.9365e-01,
        -3.5614e-02, -8.0664e-01,         nan,  6.1914e+00, -2.1445e+00,
                nan, -8.5312e+00,         nan,  3.8916e-01,         nan],
       dtype=torch.float16)
[accuracy error] backward  paddle.rsqrt(x=Tensor([715827883, 3, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2010611 / 4294967298 (0.0%)
Greatest absolute difference: nan at index (237909100, 2, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (556, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883, 3, 2]), dtype=torch.float16)
First 100 elements: tensor([        nan,         nan,         nan, -1.8291e+00,         nan,
        -1.0780e-02,         nan, -6.0547e+00, -1.3789e+00,  2.2012e+00,
                nan,  7.9336e+00,  2.1875e+01,         nan, -7.9932e-01,
         2.7070e+00,         nan,  1.6484e+00, -4.1626e-01, -8.9160e-01,
         1.5928e+00, -5.3344e+01,  1.2930e+00,  1.1346e-01, -2.4365e-01,
         5.2188e+00, -6.5820e+00,         nan,         nan,         nan,
                nan,         nan,         nan,  5.2383e+00, -6.1621e-01,
                nan,  8.4619e-01,  5.4108e-02,         nan,  9.9902e-01,
                nan, -3.2495e-01,  5.9414e+00,         nan,         nan,
                nan,         nan,         nan,         nan, -7.1631e-01,
                nan,         nan, -1.7615e-01,         nan, -4.1797e+00,
                nan,         nan,  8.2471e-01,         nan, -1.2441e+00,
         4.5624e-02,  9.0137e-01, -5.7617e-01,         nan,         nan,
        -5.8203e-01,         nan,  3.5718e-01, -6.4648e-01,         nan,
                nan,         nan,  3.4297e+00,         nan,  1.9885e-01,
                nan, -1.4453e+00,         nan,         nan,         nan,
        -1.7554e-01,  1.6514e+00,         nan,  2.5293e-01,         nan,
         6.0596e-01,  7.0312e-01, -1.2938e+01,  6.6699e-01,         nan,
        -1.0596e+00,  1.1689e+00,         nan,  1.4355e+00,  9.6826e-01,
                nan,         nan,  1.6113e+00,         nan,  4.4971e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([715827883, 3, 2]), dtype=torch.float16)
First 100 elements: tensor([        nan,         nan,         nan, -1.8291e+00,         nan,
        -1.0780e-02,         nan, -6.0547e+00, -1.3779e+00,  2.2031e+00,
                nan,  7.9336e+00,  2.1891e+01,         nan, -7.9883e-01,
         2.7070e+00,         nan,  1.6484e+00, -4.1602e-01, -8.9160e-01,
         1.5928e+00, -5.3344e+01,  1.2930e+00,  1.1346e-01, -2.4365e-01,
         5.2188e+00, -6.5820e+00,         nan,         nan,         nan,
                nan,         nan,         nan,  5.2383e+00, -6.1621e-01,
                nan,  8.4668e-01,  5.4138e-02,         nan,  9.9902e-01,
                nan, -3.2495e-01,  5.9414e+00,         nan,         nan,
                nan,         nan,         nan,         nan, -7.1680e-01,
                nan,         nan, -1.7615e-01,         nan, -4.1836e+00,
                nan,         nan,  8.2471e-01,         nan, -1.2441e+00,
         4.5593e-02,  9.0137e-01, -5.7617e-01,         nan,         nan,
        -5.8203e-01,         nan,  3.5718e-01, -6.4648e-01,         nan,
                nan,         nan,  3.4297e+00,         nan,  1.9885e-01,
                nan, -1.4453e+00,         nan,         nan,         nan,
        -1.7554e-01,  1.6514e+00,         nan,  2.5293e-01,         nan,
         6.0596e-01,  7.0312e-01, -1.2938e+01,  6.6699e-01,         nan,
        -1.0596e+00,  1.1699e+00,         nan,  1.4346e+00,  9.6826e-01,
                nan,         nan,  1.6113e+00,         nan,  4.4971e-01],
       dtype=torch.float16)
[accuracy error] backward  paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4294967300 (0.0%)
Greatest absolute difference: 0.17724609375 at index (0, 4, 858993458, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 4, 858993456, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 5, 858993460, 1]), dtype=torch.float16)
First 100 elements: tensor([-0.0457, -0.0735,  0.1261, -0.1604, -0.0246, -0.0792,  0.0544, -0.0540,
         0.0594,  0.1059, -0.1262, -0.1379, -0.1573, -0.1266,  0.0784,  0.0004,
         0.1837, -0.1580,  0.0304, -0.0701, -0.1803,  0.0908,  0.1372,  0.0242,
        -0.1337,  0.1328, -0.1317, -0.0741, -0.0848, -0.1021,  0.0406, -0.0030,
         0.1686,  0.0466, -0.0681,  0.0602, -0.0744,  0.0231, -0.1532,  0.0167,
        -0.1306, -0.1517,  0.0399, -0.1842, -0.0316,  0.1230,  0.0947,  0.0286,
         0.0951, -0.0740,  0.0029, -0.0522,  0.0981,  0.0395, -0.1554,  0.0904,
         0.0974, -0.1718,  0.1196, -0.1390, -0.0558,  0.0775,  0.0883, -0.1122,
        -0.0585, -0.1550,  0.0156, -0.0356, -0.0077, -0.0858, -0.1615, -0.1573,
         0.0834,  0.1477,  0.0003,  0.0346, -0.1321, -0.0093,  0.1511,  0.1340,
        -0.1775, -0.0572,  0.1818,  0.0392, -0.1036, -0.0007, -0.1338, -0.1792,
        -0.1455, -0.0490,  0.1137,  0.0597,  0.0938,  0.0177,  0.1727, -0.1177,
         0.1587, -0.0216,  0.0267,  0.0232], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 5, 858993460, 1]), dtype=torch.float16)
First 100 elements: tensor([-0.0457, -0.0735,  0.1261, -0.1604, -0.0246, -0.0792,  0.0544, -0.0540,
         0.0594,  0.1059, -0.1262, -0.1379, -0.1573, -0.1266,  0.0784,  0.0004,
         0.1837, -0.1580,  0.0304, -0.0701, -0.1803,  0.0908,  0.1372,  0.0242,
        -0.1337,  0.1328, -0.1317, -0.0741, -0.0848, -0.1021,  0.0406, -0.0030,
         0.1686,  0.0466, -0.0681,  0.0602, -0.0744,  0.0231, -0.1532,  0.0167,
        -0.1306, -0.1517,  0.0399, -0.1842, -0.0316,  0.1230,  0.0947,  0.0286,
         0.0951, -0.0740,  0.0029, -0.0522,  0.0981,  0.0395, -0.1554,  0.0904,
         0.0974, -0.1718,  0.1196, -0.1390, -0.0558,  0.0775,  0.0883, -0.1122,
        -0.0585, -0.1550,  0.0156, -0.0356, -0.0077, -0.0858, -0.1615, -0.1573,
         0.0834,  0.1477,  0.0003,  0.0346, -0.1321, -0.0093,  0.1511,  0.1340,
        -0.1775, -0.0572,  0.1818,  0.0392, -0.1036, -0.0007, -0.1338, -0.1792,
        -0.1455, -0.0490,  0.1137,  0.0597,  0.0938,  0.0177,  0.1727, -0.1177,
         0.1587, -0.0216,  0.0267,  0.0232], dtype=torch.float16)
[accuracy error] backward  paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4294967300 (0.0%)
Greatest absolute difference: 0.1514892578125 at index (0, 4, 858993459, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 4, 858993456, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 5, 858993460, 1]), dtype=torch.float16)
First 100 elements: tensor([-4.5128e-03,  4.3526e-03, -9.4528e-03,  1.0386e-03,  5.0735e-03,
         3.4466e-03, -5.7554e-04,  8.1253e-03,  7.5102e-06, -9.4147e-03,
        -6.9466e-03, -8.4496e-04,  6.8283e-03, -3.0098e-03,  2.9240e-03,
        -1.9255e-03, -7.0724e-03,  7.5035e-03, -3.1433e-03,  9.0637e-03,
         8.0032e-03, -2.4738e-03,  2.5139e-03, -5.2681e-03, -4.7989e-03,
         6.8665e-03, -6.2752e-03,  4.8599e-03,  4.2953e-03, -1.0765e-02,
         8.5068e-03, -2.0638e-03,  2.3580e-04,  6.0987e-04, -2.1191e-03,
         3.1376e-03,  5.8556e-03, -1.0254e-02,  9.7809e-03,  5.2567e-03,
        -4.6043e-03, -7.4806e-03,  1.0056e-02,  1.4486e-03,  7.6065e-03,
         4.7913e-03,  1.0073e-05,  3.2854e-04,  6.5613e-03, -8.4991e-03,
        -1.0719e-02, -3.7041e-03,  1.0666e-02,  9.9487e-03, -1.1816e-03,
         3.2425e-03, -2.2564e-03, -8.9188e-03, -6.2408e-03,  8.6260e-04,
         5.6801e-03,  7.0992e-03,  4.9896e-03,  9.4147e-03,  6.3019e-03,
         1.0262e-03,  7.6180e-03, -6.3591e-03,  7.0286e-04, -3.7327e-03,
         4.8904e-03, -6.5422e-03, -3.3340e-03,  5.0545e-03,  6.0120e-03,
         2.9564e-03,  6.1188e-03, -1.0502e-04, -6.8245e-03,  1.0422e-02,
         1.4620e-03, -2.3804e-03, -8.1940e-03, -9.3994e-03,  6.8207e-03,
        -9.8343e-03,  7.9422e-03,  8.6975e-03, -7.8297e-04,  4.7989e-03,
        -4.3869e-03, -5.2071e-03, -4.7874e-03,  5.2223e-03,  7.9422e-03,
         5.0392e-03, -9.0485e-03, -3.7251e-03,  4.9629e-03,  4.5013e-03],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 5, 858993460, 1]), dtype=torch.float16)
First 100 elements: tensor([-4.5128e-03,  4.3526e-03, -9.4528e-03,  1.0386e-03,  5.0735e-03,
         3.4466e-03, -5.7554e-04,  8.1253e-03,  7.5102e-06, -9.4147e-03,
        -6.9466e-03, -8.4496e-04,  6.8283e-03, -3.0098e-03,  2.9240e-03,
        -1.9255e-03, -7.0724e-03,  7.5035e-03, -3.1433e-03,  9.0637e-03,
         8.0032e-03, -2.4738e-03,  2.5139e-03, -5.2681e-03, -4.7989e-03,
         6.8665e-03, -6.2752e-03,  4.8599e-03,  4.2953e-03, -1.0765e-02,
         8.5068e-03, -2.0638e-03,  2.3580e-04,  6.0987e-04, -2.1191e-03,
         3.1376e-03,  5.8556e-03, -1.0254e-02,  9.7809e-03,  5.2567e-03,
        -4.6043e-03, -7.4806e-03,  1.0056e-02,  1.4486e-03,  7.6065e-03,
         4.7913e-03,  1.0073e-05,  3.2854e-04,  6.5613e-03, -8.4991e-03,
        -1.0719e-02, -3.7041e-03,  1.0666e-02,  9.9487e-03, -1.1816e-03,
         3.2425e-03, -2.2564e-03, -8.9188e-03, -6.2408e-03,  8.6260e-04,
         5.6801e-03,  7.0992e-03,  4.9896e-03,  9.4147e-03,  6.3019e-03,
         1.0262e-03,  7.6180e-03, -6.3591e-03,  7.0286e-04, -3.7327e-03,
         4.8904e-03, -6.5422e-03, -3.3340e-03,  5.0545e-03,  6.0120e-03,
         2.9564e-03,  6.1188e-03, -1.0502e-04, -6.8245e-03,  1.0422e-02,
         1.4620e-03, -2.3804e-03, -8.1940e-03, -9.3994e-03,  6.8207e-03,
        -9.8343e-03,  7.9422e-03,  8.6975e-03, -7.8297e-04,  4.7989e-03,
        -4.3869e-03, -5.2071e-03, -4.7874e-03,  5.2223e-03,  7.9422e-03,
         5.0392e-03, -9.0485e-03, -3.7251e-03,  4.9629e-03,  4.5013e-03],
       dtype=torch.float16)
[accuracy error] backward  paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[0,1,3,],list[0,3,1,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 125 (0.8%)
Greatest absolute difference: 0.109375 at index (2, 1, 2, 0) (up to 0.01 allowed)
Greatest relative difference: 0.01171875 at index (2, 1, 2, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5, 5, 1]), dtype=torch.float16)
First 100 elements: tensor([  -42.9375,   865.5000, -1021.5000,  -251.6250, -1772.0000,   460.7500,
          768.5000, -2090.0000,  -306.5000, -1775.0000, -1209.0000,  -714.0000,
        -1112.0000, -1624.0000,  -127.8750, -1052.0000,  1137.0000,  -295.5000,
         1032.0000, -3452.0000,   562.0000,  1561.0000,   441.2500, -1895.0000,
          274.0000, -1986.0000,   355.0000,   837.5000,   845.5000, -1469.0000,
         -865.5000,   820.5000,   -69.0000, -1098.0000,  -814.5000,  -601.0000,
           43.3438,  3420.0000,  -313.7500, -1322.0000, -1337.0000,   866.0000,
        -1723.0000,   607.5000, -1525.0000,  -354.0000,  1097.0000, -1610.0000,
         -797.5000,  2080.0000,  -361.5000, -1333.0000,   653.5000,  1302.0000,
         -313.7500,  -737.5000,  -823.5000,    -9.2266,  1370.0000,   758.5000,
         -273.0000,   682.5000,  1117.0000, -1208.0000,  -207.6250,  -668.5000,
         -283.2500,   293.0000,   840.0000,  -206.7500,   762.0000,  -342.2500,
          489.2500,  1246.0000,  3182.0000, -1067.0000,  -480.0000,   459.7500,
         -826.0000,  -883.5000, -1970.0000,  -627.0000,  -934.5000,  2114.0000,
         -583.5000, -1125.0000, -1053.0000,   340.5000,  1915.0000,   909.0000,
         2520.0000, -1399.0000, -1763.0000,  1085.0000, -1773.0000, -1605.0000,
          710.0000,  -696.0000,   243.3750,  -376.7500], dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 5, 5, 1]), dtype=torch.float16)
First 100 elements: tensor([  -43.0938,   865.5000, -1021.0000,  -251.6250, -1771.0000,   460.7500,
          768.0000, -2090.0000,  -306.2500, -1775.0000, -1209.0000,  -714.0000,
        -1112.0000, -1624.0000,  -128.0000, -1052.0000,  1137.0000,  -295.2500,
         1032.0000, -3452.0000,   562.0000,  1561.0000,   441.2500, -1894.0000,
          273.7500, -1986.0000,   355.0000,   837.5000,   845.5000, -1469.0000,
         -865.5000,   820.0000,   -69.0625, -1098.0000,  -814.5000,  -601.0000,
           43.5625,  3418.0000,  -314.0000, -1322.0000, -1337.0000,   866.0000,
        -1723.0000,   607.5000, -1525.0000,  -354.0000,  1097.0000, -1609.0000,
         -797.5000,  2080.0000,  -361.5000, -1332.0000,   653.5000,  1302.0000,
         -314.0000,  -737.5000,  -823.5000,    -9.3359,  1369.0000,   758.5000,
         -272.7500,   682.5000,  1117.0000, -1208.0000,  -207.3750,  -668.5000,
         -283.2500,   293.2500,   839.5000,  -206.6250,   762.0000,  -342.2500,
          489.2500,  1246.0000,  3182.0000, -1067.0000,  -480.0000,   459.5000,
         -826.0000,  -883.5000, -1970.0000,  -627.0000,  -934.5000,  2114.0000,
         -583.0000, -1125.0000, -1053.0000,   340.5000,  1914.0000,   909.0000,
         2520.0000, -1399.0000, -1763.0000,  1085.0000, -1773.0000, -1605.0000,
          710.5000,  -696.0000,   243.1250,  -376.7500], dtype=torch.float16)
[accuracy error] backward  paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[1,2,0,],list[1,2,3,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 125 (0.8%)
Greatest absolute difference: 0.103515625 at index (4, 3, 0, 2) (up to 0.01 allowed)
Greatest relative difference: 0.21435546875 at index (4, 3, 0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5, 1, 5]), dtype=torch.float16)
First 100 elements: tensor([-1165.0000,  -671.5000,   623.5000,  -925.0000,  -157.0000, -1926.0000,
          360.5000,   391.2500,   796.5000,  -151.5000,   191.6250, -1626.0000,
         2035.0000,   777.0000,  1082.0000,   176.6250,  -860.5000,  -854.5000,
         -998.5000,   349.2500, -1498.0000,   588.0000, -1925.0000,   153.1250,
        -1348.0000,  -272.7500,  -246.3750,  1283.0000,   197.5000,   385.2500,
        -1410.0000,  1098.0000,  -830.0000,  -743.0000,   410.5000,  1841.0000,
         -943.0000, -1552.0000,   218.7500, -1990.0000,  -176.5000,  -877.0000,
         -495.5000,   432.0000,  -858.0000, -1316.0000, -1278.0000,  1829.0000,
          624.5000,   -98.6250, -2370.0000,   -88.5000,    46.1562,  1059.0000,
         1838.0000,  -185.6250,   921.0000,   452.5000, -1013.0000,   492.7500,
         -123.9375,   424.5000, -1404.0000,  2070.0000, -1416.0000,  -164.8750,
         -143.1250,  -687.0000,   876.5000,  -484.5000,  -103.0625,  1582.0000,
        -2158.0000,  -284.5000,  -606.5000,  -837.0000, -3474.0000,  1877.0000,
         -691.5000,  1071.0000,   874.0000,  -257.7500,  -550.5000,   -73.9375,
         -302.5000,  1119.0000, -1210.0000,  -118.1250,  -661.5000,  -131.5000,
          100.9375,   -58.7188, -1013.5000,   149.5000,   682.5000,   944.0000,
        -1876.0000,  -765.0000,   614.0000,   291.2500], dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 5, 1, 5]), dtype=torch.float16)
First 100 elements: tensor([-1165.0000,  -671.5000,   623.5000,  -925.0000,  -156.8750, -1926.0000,
          360.7500,   391.2500,   796.5000,  -151.3750,   191.7500, -1626.0000,
         2035.0000,   777.0000,  1082.0000,   176.7500,  -860.5000,  -854.0000,
         -998.5000,   349.2500, -1498.0000,   588.0000, -1925.0000,   153.3750,
        -1348.0000,  -272.7500,  -246.3750,  1283.0000,   197.2500,   385.2500,
        -1410.0000,  1098.0000,  -830.0000,  -743.5000,   410.5000,  1841.0000,
         -943.0000, -1552.0000,   218.5000, -1990.0000,  -176.2500,  -877.5000,
         -495.7500,   432.2500,  -858.0000, -1316.0000, -1278.0000,  1829.0000,
          625.0000,   -98.8125, -2370.0000,   -88.5000,    46.0000,  1059.0000,
         1838.0000,  -185.5000,   921.0000,   452.5000, -1013.0000,   492.7500,
         -123.8125,   425.0000, -1404.0000,  2070.0000, -1416.0000,  -164.8750,
         -143.1250,  -687.0000,   876.5000,  -484.7500,  -103.2500,  1582.0000,
        -2158.0000,  -284.7500,  -606.5000,  -837.0000, -3474.0000,  1878.0000,
         -691.5000,  1071.0000,   874.0000,  -258.0000,  -551.0000,   -73.8750,
         -302.7500,  1119.0000, -1210.0000,  -118.3125,  -661.5000,  -131.6250,
          101.1875,   -58.6250, -1013.5000,   149.5000,   682.5000,   944.0000,
        -1876.0000,  -765.0000,   614.5000,   291.2500], dtype=torch.float16)
[accuracy error] backward  paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[1,2,0,],list[1,3,2,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 125 (1.6%)
Greatest absolute difference: 0.125 at index (0, 0, 0, 2) (up to 0.01 allowed)
Greatest relative difference: 0.057647705078125 at index (2, 3, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5, 1, 5]), dtype=torch.float16)
First 100 elements: tensor([ 2.8850e+02, -2.3480e+03, -7.2969e+00, -2.1120e+03,  3.3475e+02,
        -1.0740e+03,  1.8850e+03, -3.8925e+02, -1.4888e+02,  1.9453e+01,
         2.5800e+03, -9.2050e+02,  1.6412e+02,  2.1750e+02, -4.5150e+02,
        -6.9900e+02, -2.4725e+02,  2.1200e+03, -1.1540e+03,  7.2350e+02,
         8.8450e+02, -7.1050e+02,  1.1990e+03, -4.8800e+02,  1.1470e+03,
         9.8875e+01, -1.9930e+03, -1.2630e+03, -2.2320e+03, -5.9750e+02,
        -3.9575e+02, -1.1610e+03,  1.3970e+03,  3.7360e+03, -9.6125e+01,
        -2.1240e+03,  3.8675e+02, -4.4275e+02, -1.1640e+03,  4.7350e+02,
         1.1360e+03,  1.7310e+03, -2.4950e+02,  3.7375e+01, -1.6220e+03,
         1.7310e+03,  1.5660e+03,  1.3400e+02,  2.0938e+02, -1.3270e+03,
         5.1600e+02,  8.3700e+02, -3.3200e+02,  4.1500e+02, -1.0656e+02,
         1.7190e+03, -2.2100e+02, -9.5400e+02, -1.9270e+03,  1.8738e+02,
        -1.2310e+03,  4.0100e+02, -1.2670e+03, -6.4600e+02, -6.9188e+01,
         1.1570e+03, -1.7900e+03,  1.4775e+02, -9.4650e+02, -9.8193e-01,
        -2.8700e+02, -1.0900e+03,  9.3250e+02,  1.3960e+03, -1.3390e+03,
        -8.3312e+01, -1.1760e+03,  1.0250e+03,  3.0266e+01, -7.5050e+02,
        -1.4670e+03,  4.6875e+02,  1.4180e+03,  1.7000e+03,  8.1000e+02,
         2.5016e+01, -2.0180e+03, -1.5260e+03, -9.8300e+02,  4.0900e+02,
        -1.1400e+03, -1.8530e+03, -2.5020e+03,  2.1225e+02,  1.3990e+03,
         7.9562e+01,  9.4200e+02,  1.0610e+03, -4.1050e+02, -1.2640e+03],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 5, 1, 5]), dtype=torch.float16)
First 100 elements: tensor([ 2.8850e+02, -2.3480e+03, -7.1719e+00, -2.1120e+03,  3.3475e+02,
        -1.0740e+03,  1.8850e+03, -3.8950e+02, -1.4875e+02,  1.9547e+01,
         2.5820e+03, -9.2050e+02,  1.6412e+02,  2.1762e+02, -4.5150e+02,
        -6.9900e+02, -2.4725e+02,  2.1200e+03, -1.1540e+03,  7.2350e+02,
         8.8450e+02, -7.1050e+02,  1.1990e+03, -4.8800e+02,  1.1480e+03,
         9.9062e+01, -1.9930e+03, -1.2630e+03, -2.2320e+03, -5.9750e+02,
        -3.9550e+02, -1.1610e+03,  1.3970e+03,  3.7360e+03, -9.6000e+01,
        -2.1240e+03,  3.8675e+02, -4.4275e+02, -1.1640e+03,  4.7350e+02,
         1.1360e+03,  1.7320e+03, -2.4962e+02,  3.7250e+01, -1.6230e+03,
         1.7320e+03,  1.5670e+03,  1.3412e+02,  2.0938e+02, -1.3270e+03,
         5.1600e+02,  8.3750e+02, -3.3200e+02,  4.1500e+02, -1.0650e+02,
         1.7190e+03, -2.2112e+02, -9.5400e+02, -1.9270e+03,  1.8738e+02,
        -1.2310e+03,  4.0125e+02, -1.2670e+03, -6.4600e+02, -6.9250e+01,
         1.1580e+03, -1.7900e+03,  1.4775e+02, -9.4650e+02, -1.0420e+00,
        -2.8700e+02, -1.0900e+03,  9.3250e+02,  1.3960e+03, -1.3400e+03,
        -8.3125e+01, -1.1760e+03,  1.0250e+03,  3.0453e+01, -7.5050e+02,
        -1.4670e+03,  4.6850e+02,  1.4180e+03,  1.7010e+03,  8.1000e+02,
         2.5000e+01, -2.0180e+03, -1.5260e+03, -9.8350e+02,  4.0900e+02,
        -1.1400e+03, -1.8530e+03, -2.5020e+03,  2.1238e+02,  1.3990e+03,
         7.9438e+01,  9.4200e+02,  1.0610e+03, -4.1075e+02, -1.2640e+03],
       dtype=torch.float16)
[accuracy error] backward  paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,2,0,],list[1,2,3,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7891985 / 4294967300 (0.2%)
Greatest absolute difference: 0.2578125 at index (7787537, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (184073673, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([858993460, 5, 1, 1]), dtype=torch.float16)
First 100 elements: tensor([-1047.0000, -1047.0000, -1047.0000, -1047.0000, -1047.0000,  8248.0000,
         8248.0000,  8248.0000,  8248.0000,  8248.0000,  2856.0000,  2856.0000,
         2856.0000,  2856.0000,  2856.0000, -4380.0000, -4380.0000, -4380.0000,
        -4380.0000, -4380.0000,    96.2500,    96.2500,    96.2500,    96.2500,
           96.2500,  8344.0000,  8344.0000,  8344.0000,  8344.0000,  8344.0000,
        -4244.0000, -4244.0000, -4244.0000, -4244.0000, -4244.0000, -1519.0000,
        -1519.0000, -1519.0000, -1519.0000, -1519.0000,  5616.0000,  5616.0000,
         5616.0000,  5616.0000,  5616.0000,  4380.0000,  4380.0000,  4380.0000,
         4380.0000,  4380.0000,  -652.5000,  -652.5000,  -652.5000,  -652.5000,
         -652.5000, -1415.0000, -1415.0000, -1415.0000, -1415.0000, -1415.0000,
        -5152.0000, -5152.0000, -5152.0000, -5152.0000, -5152.0000, -8136.0000,
        -8136.0000, -8136.0000, -8136.0000, -8136.0000,  4516.0000,  4516.0000,
         4516.0000,  4516.0000,  4516.0000,   123.3125,   123.3125,   123.3125,
          123.3125,   123.3125,  5488.0000,  5488.0000,  5488.0000,  5488.0000,
         5488.0000,  1070.0000,  1070.0000,  1070.0000,  1070.0000,  1070.0000,
         2832.0000,  2832.0000,  2832.0000,  2832.0000,  2832.0000,  4852.0000,
         4852.0000,  4852.0000,  4852.0000,  4852.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([858993460, 5, 1, 1]), dtype=torch.float16)
First 100 elements: tensor([-1048.0000, -1048.0000, -1048.0000, -1048.0000, -1048.0000,  8248.0000,
         8248.0000,  8248.0000,  8248.0000,  8248.0000,  2856.0000,  2856.0000,
         2856.0000,  2856.0000,  2856.0000, -4376.0000, -4376.0000, -4376.0000,
        -4376.0000, -4376.0000,    96.4375,    96.4375,    96.4375,    96.4375,
           96.4375,  8344.0000,  8344.0000,  8344.0000,  8344.0000,  8344.0000,
        -4244.0000, -4244.0000, -4244.0000, -4244.0000, -4244.0000, -1519.0000,
        -1519.0000, -1519.0000, -1519.0000, -1519.0000,  5616.0000,  5616.0000,
         5616.0000,  5616.0000,  5616.0000,  4380.0000,  4380.0000,  4380.0000,
         4380.0000,  4380.0000,  -652.5000,  -652.5000,  -652.5000,  -652.5000,
         -652.5000, -1415.0000, -1415.0000, -1415.0000, -1415.0000, -1415.0000,
        -5152.0000, -5152.0000, -5152.0000, -5152.0000, -5152.0000, -8136.0000,
        -8136.0000, -8136.0000, -8136.0000, -8136.0000,  4516.0000,  4516.0000,
         4516.0000,  4516.0000,  4516.0000,   123.1250,   123.1250,   123.1250,
          123.1250,   123.1250,  5488.0000,  5488.0000,  5488.0000,  5488.0000,
         5488.0000,  1070.0000,  1070.0000,  1070.0000,  1070.0000,  1070.0000,
         2832.0000,  2832.0000,  2832.0000,  2832.0000,  2832.0000,  4852.0000,
         4852.0000,  4852.0000,  4852.0000,  4852.0000], dtype=torch.float16)
[accuracy error] paddle.Tensor.cumsum(Tensor([1, 10, 228170138],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1732844 / 2281701380 (0.1%)
Greatest absolute difference: 0.10328388214111328 at index (0, 7, 214387131) (up to 0.01 allowed)
Greatest relative difference: 87746.5 at index (0, 4, 49869374) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 10, 228170138]), dtype=torch.float32)
First 100 elements: tensor([ 0.3963,  0.1182,  0.2890,  0.7716,  1.1162,  0.6598,  0.8141,  1.0447,
         0.5871,  0.9869,  0.5654,  0.2282, -0.1645, -0.4908, -0.6804, -0.2275,
        -0.6028, -0.9256, -0.5425, -0.4524, -0.9341, -0.6956, -1.1527, -1.1923,
        -1.2999, -1.7998, -1.6899, -1.6542, -1.9755, -1.7228, -1.3209, -1.4407,
        -1.2526, -1.3368, -1.5445, -1.1671, -1.2045, -1.0870, -1.3233, -1.0865,
        -1.0001, -1.2090, -0.7943, -0.4044, -0.6509, -0.9361, -1.0124, -1.2252,
        -0.9666, -0.9247, -0.5296, -0.8423, -0.6965, -0.8892, -0.5476, -0.4443,
        -0.7646, -0.8609, -0.6278, -0.2826, -0.3728, -0.5371, -0.1809, -0.4683,
        -0.5992, -0.8589, -1.1284, -1.2915, -1.0354, -1.4097, -1.0871, -0.7664,
        -1.0166, -1.1211, -0.9305, -1.2600, -1.4743, -1.6969, -1.5171, -1.1761,
        -0.8149, -0.7071, -0.7744, -0.8260, -0.9650, -1.0955, -1.4057, -1.8459,
        -2.1216, -1.8069, -1.7444, -2.0177, -2.1260, -1.9366, -1.9749, -1.6111,
        -1.2171, -0.8525, -1.1342, -1.0043])
DESIRED: (shape=torch.Size([1, 10, 228170138]), dtype=torch.float32)
First 100 elements: tensor([ 0.3963,  0.1182,  0.2890,  0.7716,  1.1162,  0.6598,  0.8141,  1.0447,
         0.5871,  0.9869,  0.5654,  0.2282, -0.1645, -0.4908, -0.6804, -0.2275,
        -0.6028, -0.9256, -0.5425, -0.4524, -0.9341, -0.6956, -1.1527, -1.1923,
        -1.2999, -1.7998, -1.6899, -1.6542, -1.9755, -1.7228, -1.3209, -1.4407,
        -1.2526, -1.3368, -1.5445, -1.1671, -1.2045, -1.0870, -1.3233, -1.0865,
        -1.0001, -1.2090, -0.7943, -0.4044, -0.6509, -0.9361, -1.0124, -1.2252,
        -0.9666, -0.9247, -0.5296, -0.8423, -0.6965, -0.8892, -0.5476, -0.4443,
        -0.7646, -0.8609, -0.6278, -0.2826, -0.3728, -0.5371, -0.1809, -0.4683,
        -0.5992, -0.8589, -1.1284, -1.2915, -1.0354, -1.4097, -1.0871, -0.7664,
        -1.0166, -1.1211, -0.9305, -1.2600, -1.4743, -1.6969, -1.5171, -1.1761,
        -0.8149, -0.7071, -0.7744, -0.8260, -0.9650, -1.0955, -1.4057, -1.8459,
        -2.1216, -1.8069, -1.7444, -2.0177, -2.1260, -1.9366, -1.9749, -1.6111,
        -1.2171, -0.8525, -1.1342, -1.0043])
[accuracy error] paddle.Tensor.cumsum(Tensor([1, 12, 190141782],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 158053 / 2281701384 (0.0%)
Greatest absolute difference: 0.036147117614746094 at index (0, 9, 131042653) (up to 0.01 allowed)
Greatest relative difference: 1522.73046875 at index (0, 6, 139910097) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 12, 190141782]), dtype=torch.float32)
First 100 elements: tensor([-0.3589, -0.1089, -0.3091,  0.0070,  0.1939, -0.0813,  0.3888,  0.8676,
         0.4139,  0.1020,  0.1424,  0.1267,  0.5847,  0.9667,  1.3549,  1.6981,
         1.9004,  1.6630,  1.8223,  1.3715,  0.8843,  1.3262,  1.2326,  0.8368,
         1.0838,  1.0712,  0.6938,  0.4071,  0.4370,  0.5358,  0.1419,  0.4526,
         0.1762, -0.2364,  0.0564,  0.5152,  0.7555,  1.2302,  0.9544,  1.2370,
         0.9795,  1.3405,  0.8573,  1.0371,  1.1475,  1.5059,  1.1298,  0.8526,
         0.7038,  1.0507,  1.1182,  1.0074,  1.3880,  1.2820,  1.1701,  1.6538,
         1.5157,  1.2600,  1.3634,  1.6517,  1.9022,  1.5896,  1.4521,  1.9459,
         2.0171,  2.3243,  2.3586,  2.5307,  2.9888,  3.3009,  3.2138,  3.5426,
         3.8272,  3.4003,  3.6306,  4.0369,  4.3833,  4.1768,  3.8002,  3.8361,
         3.6136,  3.5752,  3.9566,  3.5325,  3.1923,  3.2027,  3.2647,  3.4449,
         3.9241,  3.8938,  4.1637,  3.7314,  3.7017,  3.3808,  3.3115,  3.4595,
         3.3807,  3.7704,  3.6242,  3.2996])
DESIRED: (shape=torch.Size([1, 12, 190141782]), dtype=torch.float32)
First 100 elements: tensor([-0.3589, -0.1089, -0.3091,  0.0070,  0.1939, -0.0813,  0.3888,  0.8676,
         0.4139,  0.1020,  0.1424,  0.1267,  0.5847,  0.9667,  1.3549,  1.6981,
         1.9004,  1.6630,  1.8223,  1.3715,  0.8843,  1.3262,  1.2326,  0.8368,
         1.0838,  1.0712,  0.6938,  0.4071,  0.4370,  0.5358,  0.1419,  0.4526,
         0.1762, -0.2364,  0.0564,  0.5152,  0.7555,  1.2302,  0.9544,  1.2370,
         0.9795,  1.3405,  0.8573,  1.0371,  1.1475,  1.5059,  1.1298,  0.8526,
         0.7038,  1.0507,  1.1182,  1.0074,  1.3880,  1.2820,  1.1701,  1.6538,
         1.5157,  1.2600,  1.3634,  1.6517,  1.9022,  1.5896,  1.4521,  1.9459,
         2.0171,  2.3243,  2.3586,  2.5307,  2.9888,  3.3009,  3.2138,  3.5426,
         3.8272,  3.4003,  3.6306,  4.0369,  4.3833,  4.1768,  3.8002,  3.8361,
         3.6136,  3.5752,  3.9566,  3.5325,  3.1923,  3.2027,  3.2647,  3.4449,
         3.9241,  3.8938,  4.1637,  3.7314,  3.7017,  3.3808,  3.3115,  3.4595,
         3.3807,  3.7704,  3.6242,  3.2996])
[accuracy error] paddle.Tensor.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7325 / 2281701379 (0.0%)
Greatest absolute difference: 0.011548995971679688 at index (0, 485068479) (up to 0.01 allowed)
Greatest relative difference: 746.172607421875 at index (0, 316905095) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([0.4524, 0.7827, 0.9748, 0.8185, 1.1534, 1.0634, 1.5561, 1.4324, 1.2839,
        1.2869, 1.4671, 1.5711, 1.2383, 1.2120, 0.9102, 1.3258, 1.5439, 1.2998,
        0.8552, 0.9833, 1.1170, 0.7345, 0.6636, 0.9349, 1.0487, 1.1190, 1.0400,
        1.4755, 1.8863, 1.4317, 0.9339, 1.1554, 1.3067, 0.9598, 1.4217, 1.1465,
        1.5491, 1.3849, 1.3209, 1.1010, 0.9886, 0.6349, 0.5694, 0.9493, 0.6166,
        0.3616, 0.3434, 0.5792, 0.9494, 0.6275, 0.3886, 0.5415, 0.3533, 0.7563,
        0.6037, 0.4559, 0.3057, 0.5960, 0.9444, 0.4482, 0.7716, 0.8066, 0.9562,
        1.0017, 1.3501, 1.2462, 0.7893, 0.5742, 0.7547, 0.5891, 0.8689, 0.6022,
        0.9499, 1.2355, 1.3726, 1.3582, 1.1779, 0.9008, 0.5879, 0.7793, 0.9596,
        0.7717, 0.3201, 0.0090, 0.4937, 0.6655, 0.9768, 0.9816, 0.9750, 0.5500,
        1.0365, 1.2088, 0.8889, 1.0890, 1.3327, 1.5026, 1.3341, 1.0803, 0.5830,
        0.6728])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([0.4524, 0.7827, 0.9748, 0.8185, 1.1534, 1.0634, 1.5561, 1.4324, 1.2839,
        1.2869, 1.4671, 1.5711, 1.2383, 1.2120, 0.9102, 1.3258, 1.5439, 1.2998,
        0.8552, 0.9833, 1.1170, 0.7345, 0.6636, 0.9349, 1.0487, 1.1190, 1.0400,
        1.4755, 1.8863, 1.4317, 0.9339, 1.1554, 1.3067, 0.9598, 1.4217, 1.1465,
        1.5491, 1.3849, 1.3209, 1.1010, 0.9886, 0.6349, 0.5694, 0.9493, 0.6166,
        0.3616, 0.3434, 0.5792, 0.9494, 0.6275, 0.3886, 0.5415, 0.3533, 0.7563,
        0.6037, 0.4559, 0.3057, 0.5960, 0.9444, 0.4482, 0.7716, 0.8066, 0.9562,
        1.0017, 1.3501, 1.2462, 0.7893, 0.5742, 0.7547, 0.5891, 0.8689, 0.6022,
        0.9499, 1.2355, 1.3726, 1.3582, 1.1779, 0.9008, 0.5879, 0.7793, 0.9596,
        0.7717, 0.3201, 0.0090, 0.4937, 0.6655, 0.9768, 0.9816, 0.9750, 0.5500,
        1.0365, 1.2088, 0.8889, 1.0890, 1.3327, 1.5026, 1.3341, 1.0803, 0.5830,
        0.6728])
[accuracy error] paddle.Tensor.cumsum(Tensor([2281701379],"float32"), -1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 161001 / 2281701379 (0.0%)
Greatest absolute difference: 0.024137556552886963 at index (908313186,) (up to 0.01 allowed)
Greatest relative difference: 1116.946044921875 at index (908679148,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([ 0.0715, -0.2630, -0.5488, -0.3659, -0.2056, -0.3684, -0.6065, -0.9105,
        -0.6166, -1.0349, -1.1489, -1.5257, -1.1552, -0.8475, -1.3355, -1.1656,
        -1.1858, -1.1129, -0.7978, -0.7385, -1.0933, -1.3863, -0.9343, -0.9042,
        -0.9255, -1.1517, -1.4888, -1.8382, -1.8365, -1.8218, -1.6130, -1.1483,
        -0.6922, -0.3054,  0.1370,  0.5257,  0.5236,  0.3185,  0.7784,  0.8299,
         1.0737,  1.0845,  0.6597,  0.5183,  0.7017,  0.3518,  0.3258,  0.7056,
         0.5983,  0.5276,  0.3720, -0.0471,  0.3816,  0.7998,  1.1053,  1.2606,
         1.7283,  2.1588,  2.4177,  2.1668,  2.3353,  2.1426,  2.4664,  2.2259,
         1.9733,  1.5244,  1.2777,  0.8130,  0.4714,  0.3147,  0.6366,  0.5888,
         0.1203, -0.3635, -0.1283,  0.0499, -0.3310, -0.4049, -0.3567, -0.3706,
        -0.1848,  0.3082,  0.5548,  0.1932,  0.6049,  0.1293,  0.2286, -0.1319,
        -0.5288, -0.1553, -0.3059, -0.5288, -0.6824, -1.0061, -0.6771, -0.3457,
         0.0601, -0.1671, -0.5713, -0.0824])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([ 0.0715, -0.2630, -0.5488, -0.3659, -0.2056, -0.3684, -0.6065, -0.9105,
        -0.6166, -1.0349, -1.1489, -1.5257, -1.1552, -0.8475, -1.3355, -1.1656,
        -1.1858, -1.1129, -0.7978, -0.7385, -1.0933, -1.3863, -0.9343, -0.9042,
        -0.9255, -1.1517, -1.4888, -1.8382, -1.8365, -1.8218, -1.6130, -1.1483,
        -0.6922, -0.3054,  0.1370,  0.5257,  0.5236,  0.3185,  0.7784,  0.8299,
         1.0737,  1.0845,  0.6597,  0.5183,  0.7017,  0.3518,  0.3258,  0.7056,
         0.5983,  0.5276,  0.3720, -0.0471,  0.3816,  0.7998,  1.1053,  1.2606,
         1.7283,  2.1588,  2.4177,  2.1668,  2.3353,  2.1426,  2.4664,  2.2259,
         1.9733,  1.5244,  1.2777,  0.8130,  0.4714,  0.3147,  0.6366,  0.5888,
         0.1203, -0.3635, -0.1283,  0.0499, -0.3310, -0.4049, -0.3567, -0.3706,
        -0.1848,  0.3082,  0.5548,  0.1932,  0.6049,  0.1293,  0.2286, -0.1319,
        -0.5288, -0.1553, -0.3059, -0.5288, -0.6824, -1.0061, -0.6771, -0.3457,
         0.0601, -0.1671, -0.5713, -0.0824])
[accuracy error] paddle.Tensor.cumsum(Tensor([4294967297],"float16"), -1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294963452 / 4294967297 (100.0%)
Greatest absolute difference: 15928.0 at index (4252244172,) (up to 0.01 allowed)
Greatest relative difference: inf at index (1475178232,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([ 0.1310, -0.1071,  0.1846,  0.2852,  0.4043, -0.2037,  0.2147,  0.2893,
        -0.0344,  0.2100,  0.1649,  0.2267,  0.4153, -0.3240,  0.4717, -0.4971,
        -0.2808, -0.0988,  0.1240,  0.2795, -0.0751, -0.1948,  0.1604,  0.1891,
         0.2976, -0.1792,  0.3047, -0.0544,  0.1164,  0.0579, -0.4531, -0.4604,
         0.3840,  0.0528,  0.0102, -0.1968, -0.0023,  0.2430, -0.2166, -0.1028,
         0.3516,  0.2017, -0.1661, -0.4377, -0.0253,  0.3887,  0.0178, -0.4265,
         0.0858, -0.1650,  0.4265, -0.0404,  0.2107, -0.3008, -0.4634,  0.2783,
         0.0823, -0.0720, -0.3069,  0.2101,  0.2317,  0.1981, -0.4263,  0.4995,
        -0.1209,  0.4463,  0.3279,  0.0919,  0.3953, -0.0637, -0.0978,  0.4934,
        -0.2019, -0.2380, -0.3320, -0.3601,  0.3735,  0.3135, -0.3457,  0.3203,
        -0.4573, -0.0992, -0.3298,  0.0439, -0.1478, -0.4424, -0.0793,  0.0603,
         0.3723, -0.4092, -0.4788, -0.4817,  0.3416,  0.0911,  0.1201, -0.0396,
         0.2053,  0.1460,  0.3079,  0.1447], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([0.1310, 0.0239, 0.2085, 0.4937, 0.8979, 0.6943, 0.9092, 1.1982, 1.1641,
        1.3740, 1.5391, 1.7656, 2.1816, 1.8574, 2.3281, 1.8311, 1.5508, 1.4521,
        1.5762, 1.8555, 1.7803, 1.5859, 1.7461, 1.9355, 2.2324, 2.0527, 2.3574,
        2.3027, 2.4199, 2.4785, 2.0254, 1.5645, 1.9482, 2.0020, 2.0117, 1.8145,
        1.8125, 2.0547, 1.8379, 1.7354, 2.0859, 2.2871, 2.1211, 1.6836, 1.6582,
        2.0469, 2.0645, 1.6377, 1.7236, 1.5586, 1.9854, 1.9453, 2.1562, 1.8555,
        1.3926, 1.6709, 1.7529, 1.6807, 1.3740, 1.5840, 1.8174, 2.0156, 1.5898,
        2.0898, 1.9688, 2.4141, 2.7422, 2.8340, 3.2285, 3.1641, 3.0664, 3.5605,
        3.3594, 3.1211, 2.7891, 2.4297, 2.8027, 3.1172, 2.7715, 3.0918, 2.6348,
        2.5352, 2.2051, 2.2480, 2.0996, 1.6572, 1.5781, 1.6387, 2.0117, 1.6025,
        1.1240, 0.6426, 0.9844, 1.0752, 1.1953, 1.1553, 1.3604, 1.5059, 1.8135,
        1.9580], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235838452 / 2281701378 (98.0%)
Greatest absolute difference: 0.9999743700027466 at index (1012593813,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([-2.9877e-01,  3.3114e-01, -1.2794e-01, -2.1308e-02, -5.4880e-01,
        -5.3899e-02,  2.5054e-01,  3.6196e-01, -5.9889e-01,  5.7871e-01,
         2.2670e-01, -6.1999e-01,  1.9902e-01, -4.6555e-01,  3.7827e-01,
         3.0456e-01, -6.9069e-01,  4.1014e-01,  1.8049e-01, -1.5864e-01,
        -5.3731e-02, -3.0368e-01,  1.2938e-01,  2.4004e-01, -3.7391e-04,
        -4.0302e-01,  1.1262e-01,  5.6501e-02,  2.5865e-01,  5.9937e-02,
        -1.1803e-01, -2.4130e-01,  1.1610e-01,  3.6878e-01,  1.2020e-01,
         1.4915e-02, -2.3323e-01, -9.2920e-02,  4.0658e-01, -3.5290e-02,
        -2.6550e-01,  2.3193e-01, -1.4694e-01, -2.9797e-01,  2.9636e-01,
        -3.6964e-01,  3.1222e-01,  3.5032e-01, -2.5724e-01, -5.5834e-01,
         5.9310e-03,  1.2296e-01,  1.8799e-01, -4.2121e-02,  2.9566e-01,
        -4.2484e-01, -2.7585e-01,  7.0452e-01, -5.1840e-01,  4.5406e-01,
        -5.4802e-01,  3.6028e-01,  3.7593e-01,  2.0366e-02, -4.5190e-01,
        -2.1444e-01,  5.1021e-01, -2.1247e-01, -3.7271e-01, -6.4296e-02,
         2.8991e-02,  1.8787e-01, -2.8104e-01,  9.4500e-01, -8.8827e-01,
         7.1141e-01, -2.4137e-01, -2.7190e-01,  4.7370e-01, -4.3282e-01,
         5.7053e-01,  2.8340e-02, -5.5593e-01,  5.6181e-01, -3.1024e-01,
         1.0569e-01,  6.5831e-02,  1.9109e-01, -1.1941e-01, -4.3010e-01,
        -4.0578e-01,  3.8373e-01,  8.0990e-02, -3.4985e-01,  1.1346e-01,
        -1.1244e-01,  4.3122e-01,  1.4249e-01,  4.6653e-02,  2.4133e-01])
[accuracy error] paddle.Tensor.diff(Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208576255 / 4294967296 (98.0%)
Greatest absolute difference: 1.0 at index (10858625,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967296]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967296]), dtype=torch.float16)
First 100 elements: tensor([ 0.2261, -0.0887, -0.0760, -0.1719,  0.1091,  0.0088,  0.4038, -0.2593,
         0.2295, -0.0357,  0.4375, -0.5898,  0.5576, -0.4023, -0.3027,  0.2896,
        -0.3303,  0.5415, -0.5986,  0.6514, -0.2115,  0.1123,  0.2830, -0.0227,
        -0.0403, -0.2451,  0.1777, -0.0044, -0.7026,  0.8521, -0.1355, -0.3704,
         0.4539, -0.4756,  0.2418, -0.2598,  0.1548,  0.3225, -0.0137, -0.4434,
         0.5254, -0.2944, -0.4766, -0.0544,  0.4780, -0.3352, -0.2465,  0.8496,
        -0.0967, -0.1821, -0.0585, -0.4944,  0.0283,  0.3384, -0.0552,  0.4780,
        -0.6431,  0.3503, -0.0798,  0.1130, -0.4529,  0.7983, -0.3977, -0.4248,
         0.1903,  0.5508, -0.5127,  0.4702, -0.1102, -0.0989,  0.2311, -0.7061,
         0.6372,  0.2186, -0.5151, -0.0625,  0.1731, -0.0189,  0.3696, -0.2771,
         0.1421, -0.3328,  0.0717,  0.0378, -0.1138, -0.3721,  0.4097, -0.1108,
        -0.1545,  0.4414, -0.3379,  0.4736, -0.2397, -0.2390,  0.1788,  0.2089,
        -0.3586,  0.4946, -0.1992, -0.5659], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7154591070 / 7301444410 (98.0%)
Greatest absolute difference: 1.0 at index (0, 3247749) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([17, 429496730]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([17, 429496730]), dtype=torch.float16)
First 100 elements: tensor([ 0.1250,  0.3884,  0.0662,  0.0083,  0.0269, -0.8164, -0.1990,  0.6636,
        -0.1769, -0.5698,  0.4019, -0.5054, -0.3850,  0.0693, -0.2935, -0.4797,
         0.3271, -0.0436,  0.1150,  0.4927,  0.9131, -0.2551,  0.1658, -0.5420,
         0.4912, -0.4133, -0.5586,  0.4746,  0.1135,  0.8208,  0.6719, -0.1597,
         0.0391,  0.7632, -0.0129, -0.9565, -0.0015, -0.0901,  0.0646,  0.5312,
         0.2042,  0.5337,  0.1384, -0.5977,  0.4871,  0.0802, -0.2118, -0.7568,
        -0.4353, -0.2466, -0.7153,  0.4465, -0.0312, -0.2477,  0.3201,  0.4424,
         0.1844, -0.2266,  0.1124, -0.3896, -0.2922, -0.0398,  0.1537, -0.2539,
         0.0532,  0.2336,  0.0999,  0.2517,  0.5142,  0.5845, -0.6729, -0.2729,
        -0.4863, -0.4609, -0.3479, -0.1393,  0.5542,  0.2163, -0.8882, -0.1281,
         0.2979,  0.4861, -0.5762,  0.2458,  0.8320, -0.3855, -0.5679, -0.6392,
         0.1469, -0.2559,  0.6772, -0.9160,  0.5054,  0.1122,  0.3337,  0.4792,
        -0.7920,  0.3948,  0.6670, -0.3118], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208563609 / 4294967352 (98.0%)
Greatest absolute difference: 1.0 at index (1867519, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([-0.6777, -0.1204,  0.4204, -0.2527,  0.3076,  0.3721, -0.5396,  0.1891,
         0.4712, -0.3840,  0.7393,  0.1908, -0.3518, -0.0747, -0.2010,  0.4053,
         0.1095,  0.4717, -0.2092, -0.0608, -0.0184,  0.1548,  0.2864,  0.1021,
         0.0967, -0.0225, -0.2817, -0.9141, -0.6396, -0.7656,  0.0017,  0.1523,
         0.2749,  0.6113,  0.5317,  0.5742,  0.4336,  0.1616, -0.4434, -0.0942,
        -0.2025, -0.2440, -0.2185, -0.1218, -0.1093,  0.2284,  0.1794,  0.2255,
        -0.4272, -0.1377, -0.3801,  0.1880,  0.8447, -0.0973,  0.2754, -0.1636,
        -0.5449, -0.5244,  0.1917, -0.4534, -0.3232, -0.0632,  0.0568, -0.1714,
         0.3652,  0.2010,  0.4148,  0.2859, -0.4304, -0.1244,  0.0430,  0.4114,
         0.4080,  0.7051, -0.6558, -0.6289,  0.3462, -0.3264,  0.2698,  0.4417,
         0.0952, -0.2327, -0.4768, -0.5215, -0.1006,  0.1367,  0.3499,  0.0422,
        -0.7568,  0.0647,  0.3582,  0.4429,  0.1699,  0.2554, -0.0913, -0.0961,
         0.7529, -0.6064, -0.7144, -0.3909], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208563611 / 4294967352 (98.0%)
Greatest absolute difference: 1.0 at index (4852689, 3) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([-0.1267, -0.0183, -0.6797, -0.2676,  0.0172,  0.4419,  0.5024,  0.1539,
         0.0527, -0.7900,  0.0880,  0.3245,  0.1542,  0.4380, -0.3799, -0.1992,
        -0.1160, -0.3975,  0.3716,  0.2253,  0.1394,  0.7104, -0.3574, -0.7520,
         0.0686, -0.0017, -0.1321,  0.2837, -0.4749,  0.0405,  0.1331, -0.2537,
        -0.0948, -0.1486,  0.1194,  0.5889, -0.1085,  0.1088,  0.3362,  0.0845,
         0.3159,  0.0972, -0.7119,  0.0693,  0.1429, -0.7764,  0.7588, -0.0383,
        -0.3752,  0.1260, -0.0808, -0.4438,  0.2988, -0.1392,  0.1304,  0.5898,
         0.1917,  0.1704, -0.8574, -0.6855, -0.8179, -0.0520,  0.3667,  0.1654,
         0.9385,  0.6387,  0.1199,  0.3440, -0.4709, -0.6016,  0.3123, -0.2458,
         0.0952, -0.2039, -0.5117,  0.0237,  0.1697,  0.3379,  0.4668, -0.4609,
        -0.4690,  0.5527, -0.5830,  0.0798, -0.1863, -0.0530, -0.1316,  0.4861,
         0.1967, -0.7256,  0.7207, -0.0049,  0.4277,  0.4365, -0.5605, -0.2937,
        -0.2472,  0.0483,  0.4753, -0.0593], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208570829 / 4294967328 (98.0%)
Greatest absolute difference: 1.0 at index (1208057, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741832, 4]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741832, 4]), dtype=torch.float16)
First 100 elements: tensor([-0.1249, -0.3167,  0.5957, -0.2646,  0.0410,  0.1909, -0.1970,  0.2949,
         0.4346, -0.3433, -0.6035,  0.1597, -0.3594, -0.4985,  0.5454, -0.4929,
        -0.0836,  0.1455,  0.1670,  0.3816,  0.6631, -0.0630, -0.0751,  0.3628,
        -0.4482,  0.5635,  0.2223, -0.6558, -0.0023, -0.5278, -0.5747,  0.3013,
         0.0764,  0.5630, -0.0165,  0.3049, -0.1985, -0.0206,  0.2571, -0.4937,
         0.4001,  0.2351, -0.1127,  0.2688, -0.4829, -0.7666,  0.2505, -0.0009,
        -0.1111,  0.6045, -0.6504,  0.2798,  0.6357, -0.1790,  0.5161, -0.8311,
        -0.6143, -0.1115,  0.3865,  0.0620,  0.1366, -0.3784, -0.2190,  0.2208,
         0.1919,  0.3770, -0.3457,  0.5742, -0.3542,  0.1455,  0.0109, -0.1962,
        -0.0310, -0.1981,  0.3682, -0.6392,  0.1519,  0.5645, -0.4819,  0.7827,
         0.4185, -0.1279,  0.0993, -0.7109, -0.3413, -0.7148, -0.1956,  0.2097,
         0.0153,  0.5962,  0.1396, -0.0936,  0.6572, -0.4707, -0.2898, -0.0231,
         0.0046, -0.0889,  0.0432, -0.2031], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208555185 / 4294967306 (98.0%)
Greatest absolute difference: 1.0 at index (9305722,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967306]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967306]), dtype=torch.float16)
First 100 elements: tensor([-0.2063,  0.2194,  0.5239, -0.0344, -0.2896, -0.2439, -0.0701,  0.3481,
        -0.2483, -0.3057, -0.0159,  0.8530, -0.4832,  0.3298,  0.0337, -0.1940,
         0.2622, -0.4097, -0.3276,  0.3445,  0.2008, -0.1045, -0.4841,  0.6377,
         0.0011, -0.5283, -0.0493,  0.4216,  0.2539, -0.6396,  0.6191, -0.0156,
        -0.0616, -0.5913, -0.1021,  0.6172,  0.2268, -0.2252, -0.6118,  0.0098,
         0.8501, -0.6367,  0.3240, -0.4268,  0.1373,  0.4819,  0.1135, -0.3296,
         0.0908, -0.0881, -0.1725,  0.5156, -0.8076,  0.6592,  0.1941, -0.7280,
        -0.2317,  0.0820,  0.1445,  0.4004, -0.1324,  0.3958, -0.7925,  0.6074,
        -0.0657,  0.2244, -0.0422, -0.4678,  0.2246,  0.0248,  0.1407, -0.4641,
         0.1132, -0.2549,  0.2820,  0.3682, -0.7471,  0.6670, -0.5693,  0.0291,
         0.1959, -0.0571,  0.3291, -0.4219,  0.6025, -0.0803, -0.0936,  0.1906,
        -0.0999, -0.6895,  0.8145, -0.0693, -0.6533,  0.4722, -0.3110, -0.2866,
         0.7412, -0.3179, -0.2316, -0.0339], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208581579 / 4294967310 (98.0%)
Greatest absolute difference: 1.0 at index (9822258,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([ 0.3979, -0.5835,  0.2433,  0.2054, -0.6152,  0.2141, -0.3657,  0.1155,
         0.3767, -0.5190,  0.5020, -0.2242,  0.0421,  0.4392, -0.5903, -0.0317,
         0.6963, -0.2715, -0.1716, -0.3586,  0.8101, -0.6357,  0.3369,  0.3154,
        -0.6748,  0.5200, -0.2325,  0.3699, -0.6162, -0.1960,  0.2273,  0.3491,
        -0.3462,  0.1335,  0.4595, -0.2893,  0.1731, -0.3042,  0.2812, -0.3408,
         0.3416, -0.5488,  0.7588, -0.4688,  0.0380,  0.1954, -0.0896, -0.5205,
         0.2600, -0.3550,  0.8369,  0.1152, -0.5493,  0.5176, -0.7969, -0.0071,
         0.0806, -0.0776,  0.0461, -0.1277,  0.7866, -0.4985,  0.0116, -0.2461,
         0.2449,  0.4309,  0.0654, -0.1514, -0.3232,  0.0730,  0.0431, -0.3530,
         0.4573, -0.4321,  0.5801, -0.3147, -0.1042,  0.5645,  0.0237, -0.6201,
        -0.2986,  0.3831, -0.0318, -0.1847,  0.7070, -0.3103,  0.2598, -0.4255,
        -0.1069,  0.3940,  0.2339, -0.0627, -0.0210, -0.3323, -0.2261,  0.7036,
        -0.3027, -0.4541,  0.4170, -0.0582], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208549809 / 4294967310 (98.0%)
Greatest absolute difference: 1.0 at index (9972684,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([-0.2607, -0.0485, -0.2362,  0.0184, -0.0011,  0.6172, -0.7451, -0.2107,
         0.3716, -0.1132,  0.3804, -0.6338,  0.4556,  0.5063, -0.1423, -0.7148,
         0.8604, -0.1577,  0.1316, -0.2222, -0.3184,  0.4805,  0.0872, -0.9785,
         0.4465, -0.1926,  0.4468, -0.4402,  0.1226, -0.2397,  0.6836, -0.1750,
        -0.5757,  0.0637,  0.4065,  0.3174, -0.1101, -0.5293,  0.7554, -0.9619,
         0.3684, -0.2847,  0.1876, -0.0695, -0.0212, -0.1033,  0.8716, -0.9243,
         0.0408,  0.1335,  0.1536,  0.2881,  0.1212, -0.7695,  0.0076,  0.2981,
        -0.0280, -0.2252,  0.8906, -0.6406,  0.0771,  0.1907, -0.2421, -0.1129,
        -0.1130,  0.5659,  0.1490, -0.7334,  0.7334, -0.1971, -0.5913,  0.0354,
         0.7915, -0.0110, -0.7881,  0.2445,  0.5112, -0.6182,  0.7021, -0.1628,
        -0.1406,  0.2207, -0.0356,  0.1985, -0.4802,  0.1665, -0.1639, -0.3125,
         0.4048, -0.3757,  0.2664, -0.0322,  0.4287, -0.2520, -0.6392,  0.2717,
         0.3984,  0.0814, -0.6191, -0.0935], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235842108 / 2281701378 (98.0%)
Greatest absolute difference: 0.9999695420265198 at index (1538100546,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([ 0.2433, -0.2773, -0.2591,  0.3971, -0.5495,  0.4969, -0.5333,  0.5633,
        -0.6146,  0.0416,  0.0240,  0.2894, -0.0658,  0.2072, -0.2170,  0.5876,
        -0.0758, -0.8337,  0.7662, -0.6758,  0.6273, -0.7641,  0.2477,  0.1328,
         0.4925, -0.4369,  0.3505, -0.0735,  0.0933, -0.7725,  0.4271,  0.5174,
        -0.2370, -0.4192, -0.3060,  0.1246,  0.4529,  0.2239, -0.0748, -0.6621,
         0.3605,  0.2035,  0.0546,  0.2877, -0.1088, -0.2907, -0.1250,  0.2834,
         0.0819, -0.2765,  0.1408, -0.1398, -0.2963,  0.1291,  0.5103, -0.7797,
         0.1852,  0.1736,  0.2987, -0.3878,  0.1528, -0.1671, -0.1968, -0.0218,
         0.7227, -0.4136, -0.2088,  0.0898,  0.4027,  0.1943, -0.0227, -0.8355,
         0.0635,  0.7879, -0.0027, -0.7794,  0.2706, -0.2729,  0.7373,  0.0143,
        -0.5890,  0.0103,  0.1726,  0.3778, -0.7825,  0.3477,  0.5293, -0.3152,
        -0.2597,  0.0531,  0.4824, -0.3441,  0.3076, -0.4158, -0.0839,  0.0780,
         0.1840, -0.3815,  0.2508, -0.1861])
[accuracy error] paddle.Tensor.diff(x=Tensor([2281701379],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281684145 / 2281701378 (100.0%)
Greatest absolute difference: 131069 at index (330424596,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.int32)
First 100 elements: tensor([  53669,  -17814,  -19931,   25393,   -1348,  -35113,   92978,    -114,
         -82754,  104065,  -18221, -108644,   35057,   85873,  -73406,   47632,
         -20819,   44177,  -87514,   13219,   73397,  -28140,   -9974,  -82417,
          78136,   13450,   -4173,   11692,  -92356,  119729,   -8566,  -57127,
         -52706,   95260,  -46541,   58140,   -6139,    8509,  -38299,  -20079,
          -9280,   60016,  -67596,   58084,  -71768,   86500,   -4913,    7529,
        -114830,   73108,   49502,  -71755,   23987,  -32828,   20208,  -57349,
         101669,  -87060,    8234,   -1113,   67752,  -70684,   37238,  -32688,
          79286,  -19631,  -30674,   56413,   -2351,     704, -113603,   73767,
         -51789,   27856,  -44306,   59665,  -43477,   -2014,   54684,   51491,
         -66907,   60357,  -91770,   -6438,   49244,   17494,  -39180,   18737,
         -45247,   36189,  -44847,   70928,  -20617,   35607, -100168,   64682,
          59186,  -82367,    3941,   56147], dtype=torch.int32)
[accuracy error] paddle.Tensor.diff(x=Tensor([2281701379],"int64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281683839 / 2281701378 (100.0%)
Greatest absolute difference: 131068 at index (318771293,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.int64)
First 100 elements: tensor([ 112798,  -83896,   55545,   32822,    2485, -123468,  110712,   -9481,
           5467,   -6346,  -61646,   80582,  -16888,  -93064,   98050,  -36489,
          16056,  -65956,  -11746,   47385,  -36604,   98473,   -7123,   -6933,
          15871,  -87232,  -36952,   56445,  -18569,   27729,   37307,  -53781,
          18835,  -11461,   35045,   -6064,   37853,  -65805,   68483,  -78891,
          10456,   32242,   18446,    7556,  -83005,   85801,  -46893,   18419,
         -41409,  -44998,   88868,   -8157,  -42249,   56757,  -56880,   43998,
           7912,  -53000,   21078,  -60127,   50800,  -35553,   55046,   41811,
         -82727,   85821,    -949,  -67970,  -40852,   60863,   19091,  -47279,
         -31361,  107836, -114102,  108687,   10141,  -93908,   75361,  -86569,
          34216,   37696,  -77707,   68536,  -13720,  -51776,   25902,  -31111,
          -9296,   28386,   -8674,   65355,   10986,    -264,  -64576,   41082,
         -60899,   93387,  -23425,   -6999])
[accuracy error] paddle.Tensor.diff(x=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208557884 / 4294967296 (98.0%)
Greatest absolute difference: 1.0 at index (1328715,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967296]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967296]), dtype=torch.float16)
First 100 elements: tensor([-0.5474, -0.2340,  0.4565,  0.1700, -0.3481,  0.1571, -0.3740,  0.7485,
        -0.8027, -0.0908,  0.8623, -0.6333,  0.0753,  0.2008, -0.0385, -0.4561,
         0.5874,  0.0016,  0.2605, -0.2067, -0.1213, -0.5181,  0.2559, -0.1130,
         0.5059, -0.1121,  0.1929, -0.0677, -0.3635, -0.0171,  0.4165, -0.5029,
         0.3838, -0.4790,  0.3499,  0.1873, -0.6279,  0.2720,  0.2351, -0.3848,
         0.7017, -0.1379, -0.4336,  0.4368, -0.1478,  0.3564, -0.1301, -0.5439,
         0.1967,  0.2141, -0.2012,  0.2006, -0.1301, -0.0075, -0.5596,  0.6914,
        -0.3333,  0.4092, -0.3420, -0.1362,  0.6191, -0.6279,  0.2379, -0.2654,
         0.0127,  0.0349, -0.1277,  0.7744, -0.2283, -0.3672, -0.0782, -0.1533,
         0.5757,  0.0728, -0.5850, -0.0161,  0.5869, -0.0281, -0.3923,  0.5571,
        -0.5938,  0.1544, -0.1912,  0.6909, -0.3779, -0.4761,  0.6528,  0.0957,
        -0.7749,  0.7417,  0.0942,  0.0403, -0.9077,  0.0420,  0.0024,  0.1885,
         0.4849,  0.0510,  0.1218, -0.7910], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8417122967 / 8589934593 (98.0%)
Greatest absolute difference: 1.0 at index (5079813,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8589934593]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([8589934593]), dtype=torch.float16)
First 100 elements: tensor([ 4.2358e-01,  2.4463e-01,  4.4434e-02, -4.9634e-01,  2.6050e-01,
        -6.5186e-01,  7.5195e-02,  5.5615e-01, -1.8518e-01, -4.5532e-02,
        -2.2632e-01, -1.6675e-01,  8.7109e-01, -1.1597e-01, -6.5674e-02,
        -3.7354e-01,  5.1807e-01, -6.2402e-01,  6.8799e-01, -7.2852e-01,
         1.3318e-01,  6.3416e-02,  3.5059e-01, -4.8315e-01,  3.3179e-01,
        -4.4873e-01,  6.6748e-01, -1.4111e-01, -8.6060e-02,  1.9739e-01,
        -6.6846e-01,  7.2314e-01, -5.0244e-01, -2.8027e-01,  3.7744e-01,
        -3.2153e-01,  7.5781e-01, -7.8223e-01,  7.1973e-01,  6.5674e-02,
        -2.0044e-01, -1.9275e-01, -3.2739e-01,  8.9844e-02,  2.1350e-01,
        -4.7437e-01,  9.5996e-01, -8.7500e-01,  4.9634e-01,  1.0590e-01,
        -7.1094e-01,  4.1455e-01, -6.1401e-02,  3.5889e-01, -3.3105e-01,
         6.1798e-02,  1.5686e-01,  6.2256e-03, -1.8250e-02, -5.3467e-01,
         1.9177e-01,  3.7988e-01, -5.8691e-01,  1.6455e-01, -2.2949e-02,
         6.7139e-02,  4.8828e-04, -9.1797e-02, -7.1533e-02,  8.9990e-01,
        -1.9727e-01, -7.5293e-01,  5.8545e-01, -6.1182e-01,  8.3789e-01,
        -3.3691e-02,  8.6426e-02, -3.4497e-01, -1.4771e-02, -4.1846e-01,
         7.2754e-01, -3.7842e-01, -1.8298e-01,  2.6733e-01, -7.6904e-02,
        -3.4644e-01, -2.1729e-02, -3.4180e-02,  3.9014e-01, -1.1908e-01,
         2.7393e-01, -4.1504e-02, -2.4304e-01,  6.2012e-01, -1.0718e-01,
        -4.0674e-01,  4.4189e-01, -3.0518e-02, -5.9424e-01,  5.4395e-01],
       dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208569937 / 4294967300 (98.0%)
Greatest absolute difference: 1.0 at index (282755,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967300]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967300]), dtype=torch.float16)
First 100 elements: tensor([-0.2384,  0.0525,  0.4626, -0.1479,  0.4219, -0.5615, -0.0288,  0.2888,
        -0.2451,  0.4941, -0.0164, -0.2029, -0.4719,  0.4343, -0.1394,  0.4111,
        -0.4536,  0.1744, -0.3943,  0.2998, -0.4744,  0.0527,  0.6836, -0.4253,
         0.1770, -0.3845,  0.1063,  0.2345,  0.1997,  0.0852,  0.1340, -0.5879,
         0.0899, -0.1831,  0.4678, -0.5112,  0.3777, -0.2747, -0.2236,  0.3960,
        -0.1390, -0.0829, -0.2352,  0.2335,  0.0914, -0.0175,  0.3943,  0.1781,
        -0.8711, -0.0049,  0.0833,  0.8379, -0.8203,  0.7363, -0.2358, -0.2103,
        -0.1019,  0.4429,  0.2000, -0.5537,  0.2632, -0.3960,  0.7041, -0.9160,
         0.0012,  0.8916, -0.0461,  0.0320, -0.1641,  0.0715, -0.2461,  0.3601,
        -0.8423,  0.6377, -0.3037,  0.4688, -0.5527,  0.1533,  0.0901,  0.3508,
        -0.9111, -0.0271,  0.6655, -0.3103,  0.4487, -0.7153,  0.8145, -0.4595,
         0.3816, -0.7471,  0.4751, -0.3022,  0.5010, -0.4141,  0.1012,  0.4944,
        -0.0273, -0.0452, -0.6982,  0.1667], dtype=torch.float16)
[accuracy error] paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208557800 / 4294967304 (98.0%)
Greatest absolute difference: 1.0 at index (2880344,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967304]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967304]), dtype=torch.float16)
First 100 elements: tensor([ 0.4158, -0.0556, -0.1455,  0.1458, -0.1912,  0.2106,  0.3540, -0.0315,
        -0.4270, -0.1265, -0.0938,  0.4502, -0.2241, -0.0131,  0.3320, -0.0839,
         0.0135, -0.0473, -0.1439,  0.4468,  0.1467, -0.4819,  0.4661, -0.1504,
         0.0361, -0.6396, -0.1189,  0.2031, -0.2659,  0.3374,  0.3428,  0.2146,
        -0.5908,  0.5205,  0.0659, -0.7812,  0.0146, -0.0986,  0.6440, -0.4731,
         0.3027,  0.1124, -0.4033, -0.0734,  0.5312,  0.0566, -0.5801,  0.1431,
         0.5625, -0.2983,  0.1381, -0.5312,  0.7148, -0.8862,  0.9468, -0.2886,
        -0.5972,  0.2583, -0.2583,  0.4663,  0.0048,  0.3489, -0.2201, -0.0953,
         0.1887, -0.7358,  0.8921, -0.7217,  0.6152,  0.1184, -0.0984, -0.7041,
         0.7217, -0.0688, -0.5933,  0.5386, -0.2299, -0.2461,  0.1024,  0.5464,
        -0.8179,  0.0386,  0.2125,  0.1532,  0.2405, -0.4338,  0.3689, -0.2058,
         0.4861, -0.6475,  0.2495, -0.1541, -0.1552,  0.0134, -0.1753,  0.7231,
        -0.0398, -0.2834,  0.2078,  0.0770], dtype=torch.float16)
[accuracy error] paddle.Tensor.inner(x=Tensor([2, 5, 3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 900 (8.0%)
Greatest absolute difference: 5.5 at index (0, 2, 1, 0, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 4.8203125 at index (0, 1, 2, 1, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 5, 3, 3, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([ -373.0000,   104.6250,    18.5469,  -818.5000,   391.0000,    41.0625,
          675.5000,   -96.7500, -1392.0000,  -340.5000, -1342.0000,   309.7500,
         -496.2500,   -74.0000, -1494.0000,   946.0000, -1482.0000,  1129.0000,
         1499.0000,  -457.7500,    45.7812, -1273.0000,  -232.0000,  1268.0000,
            7.1328,  -186.1250, -1336.0000,  -582.5000,   128.1250,  -945.0000,
          773.0000,  -998.5000,   107.2500,   157.1250, -1794.0000, -1151.0000,
         -565.5000,  -615.5000,   720.0000, -1661.0000,  -670.5000,  -556.5000,
          731.0000,   722.0000,  -853.5000, -1174.0000,   121.4375,   505.2500,
          -74.5625,   709.0000,  -717.0000,  -288.7500,   488.7500,  -145.0000,
        -1576.0000, -2212.0000, -1007.0000,  1296.0000,   132.3750, -1134.0000,
         -761.0000, -1226.0000,   902.5000,  -110.2500, -2444.0000,  1687.0000,
         -908.0000,  -159.3750, -1001.5000,  -543.5000,  -928.5000,   678.0000,
         -731.5000,  1644.0000,   559.0000,  -242.8750, -1501.0000,  -723.0000,
          751.5000, -2420.0000,  -440.0000,   307.7500, -1199.0000,  -871.5000,
         -177.0000,  -281.7500, -1424.0000,  -664.0000,  -766.5000, -1803.0000,
         1907.0000, -1404.0000,  1021.5000,   441.2500,  -897.0000,  -611.0000,
         1095.0000,   183.6250,  -867.0000,   -61.4375], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 5, 3, 3, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([ -372.2500,    99.3125,    19.8281,  -818.5000,   391.0000,    41.3750,
          680.0000,   -96.6250, -1392.0000,  -340.7500, -1341.0000,   309.5000,
         -497.5000,   -77.1250, -1492.0000,   946.0000, -1483.0000,  1128.0000,
         1503.0000,  -460.2500,    47.0938, -1274.0000,  -233.3750,  1268.0000,
            7.3906,  -185.6250, -1334.0000,  -581.0000,   129.8750,  -945.0000,
          775.0000,  -998.0000,   109.5625,   156.7500, -1797.0000, -1149.0000,
         -566.5000,  -615.5000,   718.5000, -1661.0000,  -671.5000,  -557.5000,
          733.0000,   719.0000,  -855.5000, -1175.0000,   118.8125,   505.2500,
          -73.8750,   709.0000,  -719.0000,  -288.5000,   488.2500,  -143.7500,
        -1576.0000, -2214.0000, -1008.5000,  1288.0000,   134.0000, -1130.0000,
         -759.5000, -1227.0000,   901.0000,  -110.3125, -2434.0000,  1687.0000,
         -908.5000,  -158.7500, -1002.0000,  -544.0000,  -927.0000,   677.5000,
         -730.0000,  1643.0000,   559.5000,  -242.3750, -1500.0000,  -722.5000,
          749.5000, -2416.0000,  -441.2500,   312.2500, -1199.0000,  -874.5000,
         -175.6250,  -281.5000, -1424.0000,  -664.0000,  -766.0000, -1804.0000,
         1911.0000, -1401.0000,  1015.5000,   442.5000,  -899.5000,  -610.0000,
         1096.0000,   185.0000,  -868.0000,   -60.8750], dtype=torch.float16)
[accuracy error] paddle.Tensor.kthvalue(Tensor([1140851, 200, 10],"float32"), k=200, axis=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 11408510 (0.0%)
Greatest absolute difference: 94 at index (382578, 6) (up to 0.01 allowed)
Greatest relative difference: 18.5 at index (868545, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140851, 10]), dtype=torch.int64)
First 100 elements: tensor([167, 198,  15,  44, 101,  52, 192,  25,  79,  42,  35, 170, 195,  56,
        157,  10,  34, 114,  69, 137,  14, 172,  56,   0,  22,  63,  28, 149,
         33, 152,  67, 197, 140,  82,   8,  46, 198,  99,  57,  18,  96, 157,
         45, 123,  65, 115,  87,  13, 189, 162,  63,  86,  14, 110,   3,  22,
        173, 137,  56, 151,  91, 197, 100, 108, 129, 142, 151, 166,  62,  72,
        130, 155,  48, 179,  53, 159, 122,  29,  42,  50, 159, 163, 124,  38,
         72,  96,  29, 172,  57, 177, 196,  31, 131,  67,   7, 119,  24, 145,
        136,  72])
DESIRED: (shape=torch.Size([1140851, 10]), dtype=torch.int64)
First 100 elements: tensor([167, 198,  15,  44, 101,  52, 192,  25,  79,  42,  35, 170, 195,  56,
        157,  10,  34, 114,  69, 137,  14, 172,  56,   0,  22,  63,  28, 149,
         33, 152,  67, 197, 140,  82,   8,  46, 198,  99,  57,  18,  96, 157,
         45, 123,  65, 115,  87,  13, 189, 162,  63,  86,  14, 110,   3,  22,
        173, 137,  56, 151,  91, 197, 100, 108, 129, 142, 151, 166,  62,  72,
        130, 155,  48, 179,  53, 159, 122,  29,  42,  50, 159, 163, 124,  38,
         72,  96,  29, 172,  57, 177, 196,  31, 131,  67,   7, 119,  24, 145,
        136,  72])
[accuracy error] paddle.Tensor.kthvalue(Tensor([2, 114085069, 10],"float32"), k=200, axis=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 20 (15.0%)
Greatest absolute difference: 40220586 at index (1, 6) (up to 0.01 allowed)
Greatest relative difference: 1.009580135345459 at index (1, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 10]), dtype=torch.int64)
All elements: tensor([ 80276967, 104092890,  62557194,  46384131,  79265812,  72931567,
         22459394,  18374751,  27311126,  83646944,  30213191,  55105056,
         95681766,  90861006,  91789339,  90783754,  80059507,  59908356,
         68941047,    486699])
DESIRED: (shape=torch.Size([2, 10]), dtype=torch.int64)
All elements: tensor([ 80276967, 104092890,  62557194,  46384131,  79265812,  72931567,
         22459394,  18374751,  27311126,  83646944,  30213191,  55105056,
         95681766,  90861006,  91789339,  90783754,  39838921,  59908356,
         83700041,  21912847])
[accuracy error] paddle.Tensor.kthvalue(Tensor([2, 200, 5704254],"float32"), k=200, axis=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 11408508 (0.0%)
Greatest absolute difference: 163 at index (0, 5635013) (up to 0.01 allowed)
Greatest relative difference: 49.33333206176758 at index (1, 1363316) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 5704254]), dtype=torch.int64)
First 100 elements: tensor([  6, 135,  79,  30, 102, 116,  74, 155, 175,  47, 123, 156, 179,  43,
        124,  31,  76, 133, 118, 170,  80,   8,  13, 110,  83, 168,  58,   8,
        128,  30, 114, 126,  53,  82,  30, 106,  41, 119,  22,  31, 131,  82,
        114, 191,  53,  35, 164,   2,  86, 148, 112, 119,  40,  26,  48, 173,
         11,  53, 198, 100, 176,  90,  90, 159, 131,  77, 153, 162, 179, 136,
         87,  90, 115,  37, 130,  89, 197, 126, 142,  57,  35,  72, 106, 151,
        195,   1, 100,  38,  11,  72,  66, 102, 141, 171, 119, 102,  69,  82,
        183,  60])
DESIRED: (shape=torch.Size([2, 5704254]), dtype=torch.int64)
First 100 elements: tensor([  6, 135,  79,  30, 102, 116,  74, 155, 175,  47, 123, 156, 179,  43,
        124,  31,  76, 133, 118, 170,  80,   8,  13, 110,  83, 168,  58,   8,
        128,  30, 114, 126,  53,  82,  30, 106,  41, 119,  22,  31, 131,  82,
        114, 191,  53,  35, 164,   2,  86, 148, 112, 119,  40,  26,  48, 173,
         11,  53, 198, 100, 176,  90,  90, 159, 131,  77, 153, 162, 179, 136,
         87,  90, 115,  37, 130,  89, 197, 126, 142,  57,  35,  72, 106, 151,
        195,   1, 100,  38,  11,  72,  66, 102, 141, 171, 119, 102,  69,  82,
        183,  60])
[accuracy error] paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 1140850690],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235839833 / 2281701380 (98.0%)
Greatest absolute difference: 0.9999908208847046 at index (1, 535527615) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([-0.5525,  0.5388, -0.0886, -0.1859,  0.5535,  0.1178, -0.3167,  0.4791,
        -0.3917,  0.7232, -0.6898, -0.1369,  0.6319,  0.1585,  0.2603,  0.3832,
         0.1403, -0.7651, -0.5732, -0.1262, -0.5842,  0.9204,  0.4381, -0.4375,
         0.1893, -0.7894,  0.4880,  0.1276,  0.8166,  0.3702,  0.0662, -0.2287,
        -0.2139, -0.0811, -0.1728,  0.1923,  0.4934, -0.2596,  0.3765,  0.7746,
        -0.3758, -0.1956, -0.1189,  0.4531, -0.6576,  0.1874,  0.4779,  0.3777,
        -0.3153,  0.6671, -0.3752, -0.2935,  0.0019,  0.6144,  0.1401, -0.5690,
        -0.8905,  0.7516, -0.9407, -0.1589, -0.4803,  0.3080,  0.4492, -0.4912,
        -0.0928,  0.2943, -0.0793,  0.6901, -0.5517, -0.1660,  0.1148,  0.6077,
        -0.1402, -0.1488, -0.6368,  0.3478, -0.5856, -0.0383,  0.3543,  0.0543,
        -0.0029, -0.3612, -0.5778, -0.3097,  0.4828, -0.2625,  0.1131, -0.6726,
        -0.4851, -0.3652, -0.3717,  0.7789, -0.1180,  0.0537, -0.3554,  0.2497,
         0.0881,  0.1259, -0.6662,  0.1203])
[accuracy error] paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 1140850690],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5589598787 / 5704253450 (98.0%)
Greatest absolute difference: 0.9999749064445496 at index (1, 367385043) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([5, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([ 0.6941,  0.8061,  0.5202, -0.0473,  0.2856, -0.7863,  0.0301,  0.2627,
        -0.0307,  0.2614,  0.1791, -0.3935, -0.3207, -0.2457,  0.1503, -0.0070,
        -0.9084, -0.5451, -0.2955, -0.4346,  0.6030,  0.2587, -0.0585,  0.0329,
         0.2419,  0.6142, -0.4743,  0.0275, -0.1134, -0.7126,  0.0462,  0.0921,
        -0.1937,  0.4199, -0.5634, -0.4399,  0.2902, -0.4336, -0.1383,  0.5017,
        -0.0504,  0.6770,  0.1836, -0.0066, -0.2710,  0.8274,  0.3358, -0.3915,
        -0.1841,  0.9160,  0.2985, -0.5702, -0.6528, -0.0641, -0.2001, -0.0809,
         0.2423,  0.2520,  0.2204, -0.2658, -0.0454,  0.1814,  0.2018, -0.4112,
        -0.5581,  0.6316, -0.5354, -0.6971, -0.2772, -0.4732,  0.3589,  0.1694,
         0.4231,  0.3307, -0.0974,  0.3313,  0.4642,  0.8351,  0.8158,  0.2876,
        -0.2149, -0.1014,  0.0774,  0.4956,  0.0442,  0.1289,  0.0178, -0.6746,
        -0.1327,  0.3942,  0.4737, -0.7551, -0.1689,  0.0109,  0.0220, -0.3902,
        -0.1214, -0.0794,  0.3173, -0.4640])
[accuracy error] paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258658697 / 2281701380 (99.0%)
Greatest absolute difference: 1.998570442199707 at index (0, 239968699) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([ 0.7331, -0.5371, -1.0890, -0.6655,  0.6560,  0.3471,  0.6391, -0.4158,
         0.0263,  0.4377, -0.9564, -0.2567,  0.6606,  0.2272,  0.5034,  0.4353,
        -0.0464,  0.6624,  0.8006,  0.7689,  0.3353, -0.8920,  0.5997,  0.3523,
        -1.0738,  1.1839, -1.3677, -0.4990, -0.0239,  1.0869, -0.0649, -0.5939,
         0.0475, -0.1587, -0.3492, -1.3101,  0.7315, -0.5243,  0.0892, -0.5740,
        -1.1016,  0.6862,  0.8143, -0.7413,  0.3693, -0.2058, -0.5365,  1.2370,
         0.9567,  0.1222, -0.2788, -1.4714,  0.4670,  0.9605,  0.6119,  0.2527,
        -0.6354, -0.0146,  1.3265, -0.4228, -0.8084,  1.8052, -0.3743, -0.0029,
        -0.4235, -0.8794, -1.1487, -0.8775, -0.1670,  0.6892, -0.2684, -0.4363,
         0.7250, -0.4910, -0.2660,  0.5697,  0.5284,  0.1050,  0.3265,  0.1651,
        -1.1715,  0.0890,  0.0691,  0.4037,  0.5813, -0.7151,  0.7073,  1.1057,
         0.4511,  0.6406, -0.0764,  0.2847, -0.5506,  0.0177, -0.5381, -0.9130,
         1.6130,  0.1026,  0.5942,  0.5080])
[accuracy error] paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235842120 / 2281701384 (98.0%)
Greatest absolute difference: 0.9999790191650391 at index (119207086, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425346, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425346, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.3974, -0.5840, -0.3692,  0.0080, -0.6881,  0.2932,  0.0773, -0.4181,
         0.8242, -0.2007, -0.0197, -0.3957, -0.3544,  0.4238,  0.3495, -0.0412,
         0.1248, -0.7675, -0.2295,  0.6916, -0.4784,  0.5731,  0.6888, -0.0398,
         0.4060, -0.1736, -0.8955, -0.5585, -0.0245,  0.4778,  0.1241,  0.8473,
         0.3277, -0.2240,  0.5262, -0.7496, -0.6737,  0.2999, -0.1116,  0.1955,
         0.0553, -0.8960,  0.1610,  0.2199,  0.1833,  0.4115, -0.1853, -0.5861,
         0.1630, -0.2927, -0.1558,  0.0096,  0.2371,  0.3680,  0.5464,  0.0588,
         0.1257, -0.1208, -0.0205,  0.5501, -0.3532, -0.2324, -0.8185, -0.5933,
         0.2762,  0.6280,  0.3152,  0.8694, -0.9034, -0.3743,  0.5825, -0.4466,
         0.7746,  0.1721, -0.0901,  0.2835,  0.0245, -0.0810,  0.0093,  0.1476,
         0.1814,  0.2979, -0.1810, -0.6296, -0.9740, -0.3555, -0.0150,  0.3889,
         0.4324, -0.1709, -0.5450, -0.2791, -0.3263,  0.1120,  0.2099, -0.1615,
        -0.0365, -0.3826,  0.2172,  0.0706])
[accuracy error] paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235836506 / 2281701392 (98.0%)
Greatest absolute difference: 0.9999908804893494 at index (165711541, 3) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425348, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425348, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.6826, -0.0237,  0.8381,  0.4753, -0.1824, -0.9057, -0.0576, -0.2289,
         0.1983,  0.5438,  0.0421, -0.1092, -0.9676,  0.0642, -0.6872,  0.0063,
         0.2726,  0.1814,  0.6174, -0.3702,  0.1701, -0.7135, -0.3891,  0.3058,
         0.1987,  0.6571,  0.5326,  0.2502, -0.0787, -0.1728, -0.7007, -0.1391,
        -0.4017,  0.0996,  0.1987, -0.4397,  0.0739, -0.6276,  0.3966, -0.0105,
         0.0295,  0.7026, -0.0690,  0.2653,  0.2096, -0.0137, -0.7210,  0.5928,
         0.0693, -0.1834,  0.7206, -0.1082,  0.1868, -0.3978, -0.0460, -0.5477,
        -0.1476,  0.3945, -0.1515, -0.1410, -0.0999,  0.3988, -0.1667,  0.8838,
         0.3795, -0.2100, -0.2927, -0.3892, -0.3969,  0.0224,  0.1190, -0.2493,
        -0.4342, -0.5148, -0.1456,  0.3436,  0.6363,  0.5761,  0.2969, -0.5401,
        -0.2838, -0.7005, -0.1629,  0.8365, -0.1013,  0.6102,  0.3160, -0.9339,
         0.2876,  0.1042,  0.0609,  0.4898,  0.0465, -0.5773,  0.0676,  0.3180,
        -0.0411,  0.5119, -0.5449, -0.5643])
[accuracy error] paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235841390 / 2281701384 (98.0%)
Greatest absolute difference: 0.9999845623970032 at index (141665104, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425346, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425346, 4]), dtype=torch.float32)
First 100 elements: tensor([ 1.3825e-02, -5.1965e-01, -2.6021e-01,  3.2765e-01,  4.9005e-01,
         7.9745e-01,  2.2033e-01, -6.2278e-02,  7.9495e-04,  1.4638e-03,
        -7.3419e-01, -6.8805e-01, -5.6961e-01, -1.4150e-02, -5.9575e-02,
         2.4297e-01,  2.8069e-01, -6.4712e-01,  9.0190e-01,  3.7891e-01,
        -5.6266e-01,  4.8222e-01, -2.8424e-01, -5.9290e-01,  1.3479e-01,
        -5.1621e-01, -5.1751e-01,  3.2160e-01,  7.7643e-01,  1.4990e-01,
         1.4267e-01, -7.2517e-02, -6.5787e-01,  1.4116e-01, -9.2095e-02,
         6.2442e-01, -2.2121e-02, -1.9889e-01, -1.7662e-01, -8.8334e-01,
         1.5766e-01,  4.5773e-01,  5.3901e-01,  4.3448e-01,  2.7903e-01,
        -6.7628e-02, -1.3061e-01, -4.4654e-01,  2.6197e-01,  1.7008e-03,
        -1.0818e-01,  1.0887e-01, -9.3522e-01, -4.5365e-01, -1.0692e-01,
         3.2986e-01,  5.5693e-01,  3.0288e-01, -1.5066e-02,  1.5122e-01,
        -2.2162e-01,  1.0753e-01,  8.1580e-02, -1.5483e-01, -1.7724e-01,
        -4.6451e-01,  6.4178e-01, -4.5356e-01, -3.2858e-02,  2.9464e-01,
         1.7891e-02,  6.3019e-01, -7.3042e-02, -2.0224e-01, -1.4856e-01,
        -5.5378e-01,  7.2273e-01,  7.4177e-01,  5.8890e-02,  6.7404e-01,
        -1.2499e-01, -3.7328e-01, -7.6612e-01,  1.7539e-01,  1.6811e-01,
         1.8832e-01,  6.8390e-01, -8.6801e-01, -4.5081e-01,  3.8269e-02,
         1.9265e-01,  7.2617e-01,  1.8121e-01, -4.8533e-01, -9.3801e-01,
        -8.7043e-02,  1.4113e-01,  4.6916e-01,  7.3959e-01, -2.6924e-01])
[accuracy error] paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235834139 / 2281701392 (98.0%)
Greatest absolute difference: 0.9999778270721436 at index (362866450, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425348, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425348, 4]), dtype=torch.float32)
First 100 elements: tensor([ 2.5156e-02,  1.7324e-01,  3.3034e-01, -2.1218e-01, -2.7116e-01,
        -5.8305e-01, -1.6396e-01, -7.1391e-05, -2.2656e-01,  5.4203e-01,
         6.4862e-01, -7.8749e-02,  6.0861e-01, -4.9153e-01, -6.0238e-01,
         2.7742e-01, -8.6191e-01,  7.9801e-01,  1.3472e-02, -6.9389e-01,
         6.1048e-01, -4.5478e-01, -1.0201e-01,  2.1305e-01,  5.6431e-02,
         4.2081e-01, -6.4366e-03,  6.2765e-01, -3.8350e-01, -4.8823e-01,
         6.8757e-01, -2.5038e-01,  1.8123e-01,  3.0447e-01, -5.5137e-01,
         2.7326e-01,  3.5049e-01, -4.3842e-01,  2.3084e-01, -6.9683e-02,
         5.4278e-02,  1.0186e-01,  2.4146e-01, -3.6297e-01, -7.7530e-01,
         6.1461e-01, -7.1722e-01,  2.4814e-01,  7.2475e-01, -5.9382e-02,
         2.9980e-01, -4.1874e-01, -4.5620e-02, -8.3835e-01, -2.6716e-01,
         6.5681e-01, -6.3852e-01, -2.9848e-02,  8.5672e-01, -6.1974e-01,
        -1.6501e-01,  5.3134e-01, -2.6518e-01, -1.3345e-01,  3.9625e-01,
        -2.6855e-01, -4.3407e-01,  5.2824e-01, -3.7308e-01,  7.7379e-03,
        -6.2024e-02, -4.2846e-01,  2.2937e-01, -1.1265e-01, -1.0492e-01,
         1.6323e-01,  1.0884e-01, -1.5298e-01,  2.2906e-01, -4.2539e-01,
         1.4613e-01,  7.1914e-01, -1.3321e-03,  3.6580e-01, -2.9179e-01,
        -6.8483e-01,  9.5702e-02, -2.3812e-01,  3.1036e-01,  2.9308e-01,
        -2.5115e-01,  4.6216e-01, -8.8204e-02,  3.2656e-01,  5.2356e-01,
        -1.9252e-01, -1.5463e-01, -4.7805e-01,  9.8517e-02, -9.8923e-02])
[accuracy error] paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258648960 / 2281701380 (99.0%)
Greatest absolute difference: 1.9990050792694092 at index (548948541, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([ 1.1486e-01, -8.9329e-01,  4.4400e-01,  2.8675e-01, -4.6175e-01,
         6.6320e-03, -7.1308e-01, -1.6978e-01,  4.2807e-01,  9.3226e-01,
        -3.1784e-04, -4.3699e-01, -8.1919e-01, -6.2272e-01, -2.7193e-01,
         5.5377e-01,  6.4766e-01,  3.1216e-02, -3.0886e-02,  1.8024e-02,
         2.4528e-01, -3.1830e-01,  4.0013e-01, -5.8620e-01, -1.0030e-01,
         8.5800e-01,  8.5782e-01, -2.8818e-02, -8.9232e-01, -1.1307e+00,
        -1.5715e+00,  7.3899e-01,  7.5918e-01,  1.1496e+00,  5.3732e-01,
         2.9730e-01,  6.0335e-01, -8.0195e-01,  3.5215e-01, -1.0388e+00,
        -1.5308e+00,  8.2162e-01,  2.8784e-01,  1.4559e-01,  1.1934e+00,
        -8.8014e-01, -5.9912e-01,  9.0145e-01, -4.3049e-01,  4.5349e-01,
        -3.5221e-02, -7.6068e-01,  8.9946e-02, -5.5112e-02,  4.5440e-01,
         6.4449e-02,  5.2067e-01, -2.1713e-01, -9.5739e-01,  4.0074e-01,
        -5.9005e-01,  2.4760e-01,  6.9537e-01, -8.4466e-01, -5.4741e-01,
         3.5772e-01,  5.4685e-01,  2.9428e-01,  4.0348e-01, -1.0241e+00,
        -1.3561e+00,  5.4592e-01,  6.6049e-01,  7.6591e-01,  7.0586e-01,
        -6.6369e-01, -3.7705e-01, -4.7846e-01,  4.9515e-01,  5.4177e-01,
         1.9009e-01,  7.5087e-01, -5.5246e-01, -4.9484e-01, -9.0916e-01,
        -6.8752e-01,  4.1048e-01,  9.6256e-01,  3.7462e-01,  4.0380e-02,
        -3.2894e-01, -5.8230e-01,  7.3792e-01,  8.2151e-01, -3.7494e-01,
        -7.9924e-01, -1.7626e-01, -9.4088e-01,  3.7713e-01,  7.3812e-01])
[accuracy error] paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258653774 / 2281701380 (99.0%)
Greatest absolute difference: 1.9980387687683105 at index (90463514, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.1893, -0.2983,  0.6902, -0.5827,  0.5434, -0.1674, -0.1250,  1.2861,
        -0.9505,  0.1313, -0.1804, -1.0382,  0.6324,  0.9321, -0.6324,  0.4567,
         0.3724, -0.7695,  1.1037, -0.2280, -0.7833,  0.0523, -0.3405,  0.3861,
        -0.2212, -0.4883, -0.2399, -0.2860,  0.6507,  1.1677, -0.8050, -0.5828,
        -0.4918, -0.8626,  0.8216,  0.8957,  0.8730,  0.1773,  0.4201, -0.2752,
        -0.7671, -0.1435, -0.4985,  0.3373, -0.3755,  0.2727,  0.0541, -0.8749,
         1.2480,  0.1105,  0.0207,  0.8230, -0.6341, -0.2168,  0.6140, -0.4658,
        -0.4941,  0.3844, -0.8969,  0.1856,  0.3814, -0.4946, -0.1727, -0.2060,
        -0.1840,  0.2388,  0.6237,  0.9093,  0.5888, -0.4801,  0.3158, -0.5578,
        -0.7414,  0.2056, -0.6549, -0.9746,  1.0846,  0.9206, -0.0906,  1.5715,
        -0.6355, -1.6095,  0.5213, -0.7529, -0.0460,  1.4623, -0.0858, -0.0355,
        -0.6079, -0.6192, -0.9626, -0.8658,  1.3680, -0.4447,  0.8284,  1.3665,
        -0.7582,  0.5050,  0.9327, -0.9240])
[accuracy error] paddle.diff(Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235834426 / 2281701378 (98.0%)
Greatest absolute difference: 0.9999902248382568 at index (1514770520,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([ 5.9833e-02, -3.1231e-01, -3.4134e-01,  6.6559e-01, -4.7552e-02,
         2.9818e-03, -5.3425e-01, -1.9304e-01,  9.9868e-02,  6.3233e-01,
        -3.8030e-01,  2.9676e-01, -3.3316e-01, -2.0075e-01,  6.9190e-01,
        -2.4616e-01,  3.4279e-01, -3.7342e-04, -8.6708e-01,  4.4287e-01,
        -9.5231e-02, -1.7116e-01,  6.6307e-01, -4.3469e-01, -1.9256e-01,
         3.4716e-02, -1.9049e-01,  1.7056e-01, -2.8615e-01,  7.0405e-02,
         5.4866e-01, -5.7324e-01,  2.9445e-01, -1.3966e-01,  3.8804e-01,
         2.4099e-01, -7.8994e-01,  8.3295e-01, -8.6539e-01,  4.6830e-01,
         2.2426e-01,  3.8976e-02, -8.0518e-01,  1.1694e-01,  2.8742e-01,
        -3.9215e-01,  9.0437e-01, -3.9002e-02, -6.8307e-01,  1.6791e-01,
         4.0764e-01, -7.0413e-01,  8.6046e-01,  2.2612e-02, -7.7903e-01,
         4.0965e-01, -2.0712e-02, -5.0627e-01,  2.8374e-01,  3.2089e-01,
         2.5472e-02, -4.2120e-02,  2.2976e-01, -8.1664e-01,  8.0729e-04,
         9.3848e-01, -6.7157e-01,  5.3111e-01, -4.4293e-01,  3.4488e-01,
         1.7412e-01, -2.8358e-01, -2.1088e-01, -3.2093e-01,  4.7119e-01,
        -9.4558e-02,  1.4485e-01, -4.7784e-01,  2.2931e-02,  1.5647e-01,
         5.2773e-01, -4.3457e-01,  3.3197e-01, -2.1342e-01, -9.1316e-02,
        -9.4274e-02,  8.0846e-02, -4.1961e-01, -2.4040e-02,  8.3979e-01,
        -6.0469e-01,  1.3834e-01,  5.3944e-01, -5.2776e-01,  5.1347e-01,
        -5.9011e-01, -1.1817e-01,  4.2921e-01, -4.0294e-02, -4.2564e-01])
[accuracy error] paddle.diff(Tensor([2281701379],"float32"), n=1, axis=-1, prepend=None, append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235824029 / 2281701378 (98.0%)
Greatest absolute difference: 0.9999840259552002 at index (1050906202,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([ 0.3296,  0.2375, -0.1285,  0.0496, -0.0153, -0.0852, -0.0473, -0.1895,
        -0.2046,  0.4343, -0.6357,  0.3995,  0.4243, -0.9127,  0.8229,  0.0299,
        -0.8289,  0.8732, -0.6536,  0.3374, -0.2333, -0.3709,  0.7506, -0.4847,
         0.5492, -0.2319, -0.1769, -0.3048,  0.1395,  0.5630, -0.5142,  0.0465,
        -0.2931,  0.1545,  0.4226, -0.3098, -0.1024,  0.0901,  0.4619, -0.3250,
        -0.2056,  0.6172, -0.6297, -0.1058, -0.0189,  0.4758, -0.2282,  0.3087,
         0.2816, -0.3188,  0.1451, -0.1725, -0.2804,  0.2367,  0.0209,  0.1418,
        -0.2831,  0.1845, -0.0388,  0.3260, -0.4916, -0.2581,  0.2862,  0.0763,
        -0.4109, -0.0771,  0.4397,  0.3053, -0.5368,  0.4476, -0.1245,  0.2755,
         0.1362, -0.5329, -0.0108, -0.3377, -0.0117,  0.6965,  0.0760, -0.5258,
        -0.3276,  0.7766, -0.1691,  0.2533, -0.3399, -0.0798, -0.2999,  0.3587,
        -0.4680,  0.8505, -0.7151,  0.2396, -0.0372, -0.2799,  0.5606, -0.5905,
         0.4828, -0.4846,  0.4395,  0.0754])
[accuracy error] paddle.diff(Tensor([2281701379],"float32"), n=2, axis=0, prepend=None, append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258653020 / 2281701377 (99.0%)
Greatest absolute difference: 1.9990445375442505 at index (2216608606,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701377]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701377]), dtype=torch.float32)
First 100 elements: tensor([ 3.5646e-01, -1.7365e-01, -3.3080e-01,  9.9812e-01, -5.5227e-01,
         2.2066e-01, -8.3565e-01,  6.6041e-01,  1.4883e-01,  1.8310e-02,
        -6.2500e-01,  4.3032e-01, -2.2326e-01, -2.8689e-02,  5.5080e-01,
         8.9249e-02, -1.0003e+00,  6.7016e-01, -3.7882e-01,  1.1805e+00,
        -1.5945e+00,  8.4930e-01, -2.9589e-01,  3.1331e-01, -5.1509e-01,
         1.2063e+00, -8.6227e-01, -4.2843e-01,  8.6767e-01, -1.1685e+00,
         1.0929e+00, -3.3993e-02, -7.9288e-01,  5.5470e-01,  1.0535e-01,
        -8.7256e-01,  1.3845e+00, -6.9823e-01, -6.4788e-01,  9.0432e-01,
        -2.5989e-02, -1.0184e-01, -5.4473e-01,  2.8558e-01,  3.2571e-03,
         5.9439e-01, -7.0318e-01,  3.1056e-01,  9.7139e-03,  4.3791e-01,
        -7.8339e-01,  2.4299e-01,  2.6874e-01, -4.3915e-01, -4.9242e-02,
        -5.0194e-02,  4.1962e-01,  3.7182e-02, -4.3606e-01,  6.7112e-04,
         5.1435e-01,  1.9455e-01, -4.5184e-01, -6.0595e-01,  7.8321e-01,
         1.8314e-01, -6.8807e-01,  2.5927e-01,  4.4993e-01, -8.2188e-02,
        -1.0972e+00,  1.1778e+00, -3.9399e-01, -9.7751e-02, -1.2732e-01,
         4.6063e-01, -4.9974e-01,  8.9552e-01, -1.0620e+00,  9.8998e-01,
        -9.5862e-01,  6.9395e-01,  8.5982e-02, -1.1721e+00,  8.7153e-01,
         9.9269e-02,  1.5263e-01, -2.8244e-01, -3.2971e-01,  7.4800e-01,
        -1.0977e+00,  9.1047e-01, -2.9419e-01,  5.6787e-01, -1.3328e+00,
         8.4636e-01,  1.1041e-02,  4.2742e-01, -5.6011e-01,  3.0738e-01])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235841233 / 2281701376 (98.0%)
Greatest absolute difference: 0.9999802112579346 at index (299922445, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425344, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425344, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.1002, -0.6388,  0.0758,  0.2395, -0.3978,  0.0284, -0.2628, -0.5850,
         0.5823,  0.5200,  0.0232,  0.1542, -0.9632, -0.5965, -0.4401, -0.2107,
         0.5007,  0.7682,  0.7942,  0.4257,  0.0509, -0.2967, -0.0700, -0.5131,
        -0.4659,  0.4604, -0.0690, -0.0482,  0.8049, -0.5002, -0.3934,  0.2955,
        -0.3555,  0.3586, -0.3698, -0.0986,  0.0185, -0.3662,  0.3420,  0.1146,
         0.1682,  0.4607,  0.1980,  0.4193, -0.2250, -0.4527, -0.2508, -0.7763,
         0.1224,  0.0705,  0.1174,  0.3941, -0.5792, -0.0145,  0.3111,  0.1234,
         0.6343,  0.2077, -0.0313, -0.1905, -0.1929,  0.0636,  0.1542, -0.1695,
         0.2412, -0.4463, -0.5032,  0.1777,  0.2360, -0.2322,  0.2013, -0.2852,
         0.0059,  0.1069, -0.3590,  0.5203, -0.0074,  0.0979,  0.2141, -0.4649,
        -0.5207,  0.1328, -0.0201, -0.1221,  0.2455, -0.2099,  0.5968,  0.6662,
        -0.4577, -0.1489, -0.2726, -0.3987,  0.4071, -0.0482,  0.1296,  0.2490,
        -0.2313,  0.0279, -0.5731, -0.5259])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235834168 / 2281701380 (98.0%)
Greatest absolute difference: 0.9999655485153198 at index (481225191, 3) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.4525, -0.7570, -0.4628, -0.2316,  0.1693,  0.6705,  0.3501,  0.7036,
        -0.0373,  0.2819,  0.0314, -0.3260,  0.0859, -0.0080, -0.1019,  0.5130,
         0.0352, -0.1837, -0.3216, -0.0704, -0.1788, -0.0666, -0.2899,  0.0724,
         0.3029,  0.1397,  0.8391, -0.2704,  0.0865, -0.3244, -0.0900,  0.2644,
        -0.2200, -0.1901, -0.3178, -0.0786,  0.5073, -0.2118, -0.2217, -0.2598,
         0.0072,  0.5551,  0.6414, -0.5395, -0.6969, -0.6596, -0.2253,  0.1355,
         0.6965,  0.0073,  0.1357,  0.1747, -0.0832,  0.4529, -0.5101,  0.1334,
         0.0944,  0.2812,  0.3236, -0.0631, -0.7990, -0.7533,  0.2842,  0.4865,
         0.2963,  0.2782, -0.2918, -0.2381, -0.1921,  0.6592, -0.0819, -0.5713,
        -0.1872, -0.1274,  0.0572,  0.8099,  0.1590, -0.7855, -0.3269, -0.7211,
         0.7497,  0.6978,  0.2297,  0.5238, -0.2594, -0.3346, -0.4983, -0.4509,
        -0.5448,  0.3303,  0.7967, -0.2641,  0.2981,  0.0385,  0.0425, -0.0205,
        -0.3538, -0.6876,  0.1404,  0.7745])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4471673381 / 4563402756 (98.0%)
Greatest absolute difference: 0.9999897480010986 at index (468650384, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850689, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1140850689, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.0599,  0.1356, -0.4119, -0.3284,  0.1900,  0.0021,  0.7561,  0.2128,
        -0.0651, -0.2717,  0.1870, -0.0749,  0.1396,  0.7848, -0.4926,  0.2836,
         0.1503, -0.5964, -0.0879, -0.4506, -0.3716,  0.3789,  0.3357,  0.3247,
         0.0662, -0.0477, -0.6165, -0.3991,  0.0632,  0.2684,  0.0946,  0.8955,
         0.2388,  0.0956,  0.1251, -0.8761, -0.6907, -0.4664,  0.1790,  0.5641,
         0.3925, -0.1022, -0.2452,  0.2158,  0.1371,  0.3452,  0.0269, -0.7516,
         0.3560, -0.4267, -0.1385, -0.0275, -0.8058,  0.7036,  0.6216,  0.8005,
         0.1530, -0.6954, -0.6353, -0.1157,  0.4501,  0.3674, -0.1353, -0.1266,
        -0.0334, -0.1841,  0.5645, -0.0492, -0.6941,  0.1298, -0.0059, -0.1259,
         0.6813,  0.4052,  0.2431,  0.4384, -0.5224, -0.6393, -0.6191, -0.7322,
         0.5330, -0.0695,  0.7607,  0.6456,  0.2304,  0.4358, -0.6978, -0.0411,
        -0.7319, -0.0435,  0.6234, -0.3818,  0.6788,  0.2562, -0.4649, -0.1596,
        -0.4751, -0.6171,  0.1127,  0.3461])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235837545 / 2281701392 (98.0%)
Greatest absolute difference: 0.9999741315841675 at index (251299934, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425348, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425348, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.0610, -0.2892,  0.3686, -0.5023, -0.0770, -0.4708,  0.3972,  0.4180,
        -0.1404,  0.7900, -0.6276, -0.2703,  0.4421, -0.8909, -0.0401,  0.6792,
         0.0012,  0.8548,  0.5439, -0.4603, -0.2884, -0.5778, -0.5326,  0.0981,
         0.2544,  0.3672, -0.0900, -0.4745, -0.7363, -0.4042,  0.4923,  0.1538,
         0.0419, -0.2936,  0.2589, -0.1271,  0.6481,  0.8457, -0.8828,  0.3315,
         0.0781, -0.1226,  0.7847,  0.3127, -0.3304, -0.7467, -0.7214, -0.2193,
        -0.2913,  0.5071,  0.3244, -0.0870,  0.2630, -0.3163,  0.4270, -0.2606,
         0.3709, -0.0553, -0.2291, -0.0830,  0.0093,  0.0163, -0.1179, -0.0293,
        -0.6244,  0.1846, -0.4346,  0.4307,  0.5309,  0.1905,  0.2938,  0.3651,
         0.0030, -0.1600, -0.3077, -0.5082, -0.6959, -0.0386, -0.0233,  0.1137,
         0.5820,  0.1086,  0.0637,  0.5578,  0.2262, -0.3136,  0.1983, -0.6905,
        -0.9141, -0.1312,  0.0815, -0.1024,  0.7636,  0.0105, -0.3692, -0.0408,
        -0.0427,  0.4907, -0.0426,  0.3285])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([3, 4],"float32"), append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235841981 / 2281701388 (98.0%)
Greatest absolute difference: 0.9999697208404541 at index (451734520, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425347, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425347, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.1893,  0.0136, -0.1188, -0.9527, -0.0688, -0.6062,  0.0188,  0.9581,
        -0.3114,  0.7007, -0.7848, -0.8691,  0.0595, -0.0392, -0.0749,  0.4558,
         0.1977, -0.2780,  0.2120,  0.1139, -0.0709,  0.0766,  0.2808, -0.4294,
        -0.1072,  0.3867,  0.0068, -0.1816,  0.2799, -0.2123, -0.4535,  0.4030,
        -0.3156,  0.1083,  0.8971, -0.1305,  0.3263, -0.1997, -0.8303,  0.5162,
        -0.0876,  0.3179,  0.7152, -0.2005, -0.1780, -0.0452,  0.0384, -0.0284,
        -0.2577,  0.1176, -0.4111, -0.0923,  0.3965, -0.3435, -0.1600, -0.4959,
        -0.6371, -0.5846,  0.2926,  0.4574,  0.1968,  0.7048,  0.0520,  0.1701,
         0.2786,  0.0493,  0.0722,  0.1442, -0.4472,  0.1163,  0.0247, -0.0959,
         0.6885, -0.4287, -0.0669, -0.5626, -0.1985, -0.3214, -0.2170,  0.2690,
         0.2273,  0.7937, -0.3671,  0.4707,  0.0279,  0.0026,  0.5568, -0.6491,
        -0.7695, -0.3371,  0.0418,  0.7078,  0.3450, -0.1029,  0.0039, -0.8712,
         0.0911,  0.4182, -0.1422,  0.7333])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4471677625 / 4563402756 (98.0%)
Greatest absolute difference: 0.9999920129776001 at index (656470579, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850689, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1140850689, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.0857,  0.5682, -0.5443,  0.2329, -0.1373, -0.3690, -0.3927, -0.4720,
         0.1941, -0.1558,  0.0083,  0.5480,  0.0877, -0.0480,  0.7363,  0.0427,
         0.0367, -0.2997,  0.1053, -0.4267, -0.3910,  0.7476, -0.4755,  0.3252,
        -0.1159, -0.6478,  0.5207, -0.5277, -0.3791,  0.6160, -0.2500,  0.4216,
         0.8676, -0.4691,  0.3005, -0.1874, -0.4663,  0.1562, -0.4972, -0.5257,
         0.2047, -0.0837, -0.1636,  0.1944,  0.0919, -0.3193,  0.1981,  0.4123,
        -0.0418,  0.8303,  0.1319,  0.1075, -0.5001, -0.1282, -0.0255, -0.2980,
         0.7417, -0.2101,  0.1931,  0.2131, -0.2434,  0.2456,  0.0254,  0.2435,
        -0.2486,  0.2179,  0.0211, -0.0766, -0.4228, -0.0351, -0.6515, -0.5406,
         0.8322, -0.6842,  0.4469,  0.2878, -0.3415,  0.6802, -0.0159,  0.1303,
        -0.1278,  0.0455, -0.3992, -0.0241, -0.1057, -0.4539, -0.1923,  0.2291,
        -0.0755, -0.2978,  0.1555, -0.7412,  0.7266,  0.2161,  0.5496,  0.5139,
        -0.3641, -0.1931, -0.1565, -0.4560])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258648195 / 2281701380 (99.0%)
Greatest absolute difference: 1.9986791610717773 at index (168436239, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([-0.3059,  0.7632,  0.5534, -0.6544,  0.7013,  0.1979, -1.3928, -0.0521,
        -0.1261, -0.7810,  1.3549,  1.3589, -0.6450,  0.2601, -0.1569, -1.0907,
         1.1034,  0.1905, -0.7409,  0.3458, -0.9317, -0.0322, -0.0131, -0.3168,
         0.7760, -0.2389,  0.8668,  0.1684, -0.3285,  0.2929, -0.7197, -0.3156,
        -0.8586,  0.4912,  0.0589,  0.5299,  1.0741, -1.4945,  0.1783, -0.9078,
        -0.1925,  1.1667,  0.1992,  1.3137, -0.4557, -0.1320, -0.4780, -1.0640,
         0.6411,  0.2256,  0.9817,  0.6303, -0.2148, -0.5008, -1.3777, -0.1118,
        -0.6164, -0.1708,  1.5699, -0.5801,  0.8044,  0.3751, -1.7108,  0.9527,
        -0.3835,  0.5422,  1.1924, -0.6228, -0.2948, -1.0811, -0.6216,  0.2534,
         1.1785,  1.0050,  0.2694, -0.3657, -1.1455, -0.6470,  0.4591, -0.0056,
         0.2205, -0.3968, -0.7599,  0.2392,  0.4942,  0.6377,  0.8578, -0.0319,
        -0.2649, -0.3363, -1.0145,  0.1276,  0.1384,  0.1595,  0.1379, -0.1044,
        -1.1589,  0.6321,  0.2979, -0.0850])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258652600 / 2281701380 (99.0%)
Greatest absolute difference: 1.9981729984283447 at index (241570891, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.4524, -0.1864, -1.4452,  0.6019,  0.6281, -1.0558,  1.2864, -0.1893,
        -0.9120,  1.0240, -0.9518,  0.1941,  0.9146,  0.0421,  0.8188, -0.0867,
        -0.9425,  0.1352, -0.3846, -0.0108,  0.4965, -1.2189,  0.6784, -0.9532,
         0.3066,  1.2187, -0.4854,  1.6499, -0.5411, -0.7982, -0.7556, -1.5210,
         0.2481,  0.8017,  0.9924,  0.9513, -0.7411, -0.9124, -0.1401, -0.3376,
         1.1789,  0.7837, -0.2829,  0.3079, -0.3970, -0.2703, -0.0183, -0.2935,
        -0.3420,  0.4282,  0.4180,  0.5515,  0.2407, -0.9662, -0.2862, -0.9823,
        -0.0227,  0.3932, -0.7242,  1.1111, -0.1988,  0.4844,  1.0939, -1.5673,
         0.4663, -0.5260, -0.5103,  1.9565, -0.7381,  0.5300, -0.1890, -1.2475,
         0.1306, -1.1588,  0.2088,  0.4388,  0.6017,  0.7972,  0.4322, -0.1015,
        -0.1440,  0.5242, -0.6765, -0.9568, -0.1930, -0.2647,  0.2058,  1.2700,
         0.4821, -1.1730,  1.0019, -0.3114, -0.4376,  1.3068, -1.4302, -0.0576,
        -0.1178,  0.0405,  0.9949, -0.4441])
[accuracy error] paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2258662405 / 2281701388 (99.0%)
Greatest absolute difference: 1.9991207122802734 at index (133765213, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425347, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425347, 4]), dtype=torch.float32)
First 100 elements: tensor([ 0.6582,  0.3119, -0.0990, -0.2642,  0.0681, -0.7086,  0.3158, -0.4669,
        -0.7663,  1.2211, -0.7246, -0.4521,  0.9250, -0.7846,  1.0071,  1.0171,
        -0.3102, -0.0893, -0.8922, -0.2097,  0.2998, -0.1655,  0.5563, -0.7250,
        -1.0506, -0.2251,  0.1945,  1.3664,  0.5024,  0.9555, -0.7174, -1.5702,
         0.2572, -0.7430,  0.8424,  0.7320,  0.7513,  0.1476, -0.8855,  0.6194,
        -1.3846,  0.2834,  0.2584, -0.3759,  0.8429, -0.0160,  0.3028, -0.3531,
        -0.1388, -0.9691,  0.2047,  0.2681, -0.7712,  0.8545, -0.6175, -0.6298,
         1.1079,  0.5835,  0.6111,  0.3168, -0.3451, -0.6544, -0.9553,  0.6056,
        -0.1785, -0.7309,  0.8819, -0.2616, -0.6264,  0.9510, -0.5256, -0.1268,
         1.0335, -0.0322,  0.1161, -0.6536, -0.2004, -0.0115,  0.8660,  1.2688,
        -0.6488,  0.0656, -1.1994, -1.3943,  1.2829, -0.2405,  0.8044,  1.4347,
        -0.7364, -0.7931,  0.0098, -1.3738, -0.8836,  1.7203, -1.1561,  1.1014,
         1.3438, -1.2113,  1.0972,  0.1438])
[accuracy error] paddle.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7154519869 / 7301444410 (98.0%)
Greatest absolute difference: 1.0 at index (0, 79080) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([17, 429496730]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([17, 429496730]), dtype=torch.float16)
First 100 elements: tensor([ 0.3499,  0.3049,  0.7051,  0.1179,  0.0425,  0.8193,  0.1265,  0.1852,
        -0.4612,  0.3762,  0.1748, -0.2786,  0.6187, -0.2373, -0.7471,  0.4214,
        -0.4656,  0.4641, -0.4524,  0.1228,  0.5781, -0.5244, -0.1462,  0.3350,
         0.1750, -0.7969,  0.5669,  0.3677,  0.0817, -0.3711, -0.6074,  0.3491,
         0.2554,  0.1599,  0.1340,  0.7227,  0.0706,  0.3088, -0.8452,  0.2673,
         0.4724,  0.4138, -0.4590,  0.1129,  0.4180,  0.1709, -0.4285, -0.2256,
         0.2964, -0.0037, -0.0630, -0.1277, -0.3308,  0.7793,  0.3159,  0.6143,
         0.2905,  0.0872,  0.8896,  0.3198,  0.7939, -0.2106, -0.5967,  0.0162,
        -0.7617, -0.2191,  0.0013, -0.0930, -0.5576,  0.3623,  0.2576, -0.2842,
        -0.3340, -0.4805,  0.0242, -0.3513, -0.0421, -0.6484, -0.6172,  0.4973,
        -0.1163, -0.3477, -0.6284,  0.1139, -0.3413, -0.2915, -0.3718,  0.2146,
        -0.4204,  0.0164,  0.3018, -0.3274,  0.5029,  0.3091, -0.1406,  0.3462,
         0.8257,  0.3835,  0.6562, -0.1921], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208559268 / 4294967352 (98.0%)
Greatest absolute difference: 1.0 at index (2131365, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.4111, -0.1833, -0.8135,  0.2115, -0.3926,  0.5566,  0.2803, -0.7520,
         0.3894, -0.2834, -0.0139,  0.7676, -0.3054,  0.2556, -0.1908, -0.3130,
         0.4478, -0.0129,  0.6602,  0.4155, -0.6621, -0.1824, -0.1012, -0.0166,
         0.5376,  0.0062,  0.2084, -0.3267, -0.1095, -0.3076, -0.1501, -0.3367,
        -0.0931, -0.0013,  0.0784, -0.1013,  0.4634,  0.4487, -0.4150,  0.0217,
        -0.6611, -0.4089, -0.3342,  0.7139,  0.2952, -0.2764,  0.5161, -0.3347,
         0.1227,  0.1187,  0.2092, -0.3120,  0.1670,  0.5190, -0.6484, -0.1361,
        -0.2776,  0.1022,  0.7349,  0.4546,  0.3252, -0.4897, -0.5200, -0.2041,
         0.0579,  0.5146,  0.1931, -0.3696, -0.5605, -0.8003,  0.0355,  0.0659,
         0.4038,  0.4001, -0.0106,  0.8652, -0.4419,  0.2444, -0.2654, -0.5430,
         0.1483, -0.6611,  0.1877,  0.5649, -0.2534,  0.2620, -0.3423, -0.8564,
        -0.2048, -0.1704,  0.0330,  0.2141,  0.4883, -0.0242,  0.2795, -0.2974,
        -0.3672,  0.6855,  0.3777,  0.1636], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208560392 / 4294967352 (98.0%)
Greatest absolute difference: 1.0 at index (767960, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741838, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.1676, -0.4050, -0.3940, -0.0466, -0.0765,  0.5220,  0.4556,  0.3472,
         0.6626, -0.3572, -0.1494,  0.0522, -0.8384,  0.3740, -0.4888,  0.3459,
         0.6279, -0.4326,  0.1748, -0.2190, -0.1748, -0.1423,  0.1735,  0.3896,
        -0.2769,  0.5215,  0.1748, -0.2871,  0.0668,  0.0184, -0.2830, -0.4658,
         0.6543,  0.0757, -0.4778,  0.0641, -0.3792,  0.2930,  0.3896,  0.4175,
        -0.1091, -0.5947, -0.4072, -0.4810, -0.3223, -0.1978,  0.7510,  0.7534,
        -0.0457,  0.0691, -0.4170, -0.4468,  0.0923,  0.4019,  0.2017,  0.1956,
         0.7764, -0.3171, -0.5405, -0.2646, -0.1965, -0.0375,  0.1584, -0.2042,
        -0.5137,  0.3052,  0.2920,  0.4475,  0.2861,  0.3843,  0.5151,  0.0310,
        -0.4158, -0.2058, -0.7979, -0.5420,  0.2150, -0.1611,  0.4058, -0.1455,
         0.3140, -0.0669, -0.0776,  0.2776,  0.0166, -0.2859,  0.2896,  0.1998,
         0.0112,  0.2695, -0.1868,  0.0569, -0.4546,  0.0282,  0.3027,  0.2295,
         0.7266, -0.1117, -0.3464, -0.4094], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208565377 / 4294967328 (98.0%)
Greatest absolute difference: 1.0 at index (2057123, 3) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741832, 4]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741832, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.2581, -0.1112, -0.3921, -0.3940,  0.4382,  0.1307,  0.2864,  0.0234,
        -0.2822,  0.0719, -0.3552,  0.0347, -0.0910,  0.3193, -0.1207,  0.5249,
         0.4253, -0.0337,  0.5308, -0.1486, -0.2866, -0.1293,  0.0851, -0.0736,
         0.4346, -0.4258, -0.2107, -0.0409, -0.0833,  0.4329, -0.5752,  0.2024,
        -0.4329, -0.0991,  0.9868,  0.3523, -0.2554,  0.1716, -0.4443, -0.8955,
         0.4360,  0.0659, -0.1274, -0.0740,  0.4258, -0.3594,  0.1322,  0.3623,
        -0.6675,  0.3882,  0.2463,  0.4365,  0.5488, -0.4551,  0.1809, -0.5938,
        -0.3154,  0.2744, -0.8086, -0.0605,  0.4390, -0.2822,  0.4644,  0.5303,
        -0.9248, -0.2217,  0.0339, -0.4829,  0.4321,  0.5278, -0.3745,  0.4019,
         0.1350,  0.1641,  0.2527,  0.2681,  0.0942, -0.5059, -0.1753, -0.5244,
        -0.3599, -0.0513,  0.3843,  0.3862,  0.2017, -0.1458,  0.1223,  0.2429,
         0.2393,  0.8955, -0.5190, -0.5537,  0.0596, -0.1559, -0.0876, -0.0656,
        -0.8037, -0.2693,  0.5225,  0.4336], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208570103 / 4294967306 (98.0%)
Greatest absolute difference: 1.0 at index (987736,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967306]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967306]), dtype=torch.float16)
First 100 elements: tensor([-0.7246,  0.4890,  0.0314,  0.2510,  0.0156, -0.8486,  0.6592, -0.6890,
         0.0461, -0.0742,  0.1292,  0.7334, -0.6748,  0.0229, -0.1047,  0.3730,
         0.4297, -0.2710, -0.0839,  0.2413, -0.6226,  0.2654,  0.1936, -0.6323,
         0.9111, -0.8296,  0.6265, -0.4365,  0.2468, -0.0701, -0.3113,  0.7046,
        -0.4248,  0.1162,  0.4182, -0.6821, -0.0526,  0.5312, -0.4819,  0.6343,
        -0.1854, -0.5591, -0.0198,  0.4097, -0.3074,  0.2333,  0.0926, -0.2959,
         0.1980, -0.4099,  0.4026, -0.2622,  0.5859, -0.0442, -0.3345, -0.2625,
         0.5791, -0.1095, -0.5479, -0.0251,  0.6445, -0.2413,  0.3418, -0.0961,
        -0.2314, -0.3174,  0.0632, -0.2119,  0.2559, -0.0560,  0.4104,  0.0480,
         0.0404,  0.1174, -0.1820, -0.2091,  0.0596,  0.3428, -0.6855,  0.4863,
        -0.0059,  0.2563, -0.0176,  0.1106, -0.0811, -0.6084, -0.1807,  0.2029,
        -0.1125,  0.0225,  0.2766, -0.1721,  0.2251,  0.1663,  0.1831, -0.2170,
        -0.2925,  0.1824,  0.2520, -0.5894], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208567893 / 4294967310 (98.0%)
Greatest absolute difference: 1.0 at index (3970358,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([ 0.1458,  0.1853,  0.2295, -0.5420, -0.1724,  0.4966,  0.1372, -0.5918,
         0.3596, -0.1165,  0.3799,  0.1121, -0.5127,  0.1279,  0.4414, -0.4636,
        -0.1899,  0.1176,  0.2842,  0.2932, -0.5464,  0.1654,  0.0812, -0.2498,
         0.1219,  0.1963, -0.2532, -0.4185,  0.4268, -0.1829,  0.6548, -0.2454,
        -0.1506, -0.4204,  0.6660, -0.5400,  0.5024,  0.1829, -0.8350,  0.1870,
         0.2864, -0.4829, -0.1101,  0.5186,  0.0009,  0.1616, -0.5532,  0.3057,
        -0.2761,  0.4268,  0.0266, -0.3706,  0.1616,  0.2471, -0.6621,  0.1641,
         0.1522,  0.4399, -0.0414, -0.3101,  0.1577, -0.1427, -0.1825,  0.1531,
        -0.3933,  0.3599,  0.1125,  0.1327, -0.3481, -0.0171,  0.5566, -0.4458,
        -0.2057, -0.0063,  0.7417, -0.4641,  0.4160, -0.1050, -0.3882, -0.0010,
         0.1065,  0.4697, -0.2008, -0.4116,  0.2915,  0.2479, -0.1569, -0.0740,
        -0.4187,  0.2424,  0.4897, -0.4297,  0.1699, -0.0735, -0.3877,  0.6948,
        -0.0796, -0.3608, -0.2534,  0.2046], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208561361 / 4294967310 (98.0%)
Greatest absolute difference: 1.0 at index (186276,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967310]), dtype=torch.float16)
First 100 elements: tensor([-0.3281,  0.4570,  0.1316, -0.8057,  0.3259, -0.3755,  0.3740, -0.3203,
         0.7080,  0.0544, -0.1597, -0.3337,  0.5327, -0.2144, -0.2415, -0.1359,
         0.5103, -0.6689,  0.7314, -0.0256, -0.0664, -0.6821,  0.3354,  0.1917,
        -0.2727,  0.4397, -0.0085, -0.0579, -0.1875, -0.1523,  0.3062, -0.3682,
         0.3489,  0.2092, -0.3257, -0.1898,  0.5308, -0.9395,  0.4670, -0.4817,
         0.1978,  0.0449, -0.1536,  0.7969, -0.8662,  0.5244,  0.3931, -0.3201,
         0.1123, -0.3354, -0.3984,  0.0398,  0.0249,  0.6367, -0.4917,  0.0870,
        -0.0621,  0.6895, -0.1206, -0.3953, -0.1943,  0.0022,  0.3081, -0.0531,
        -0.2844,  0.7451, -0.6836,  0.5938, -0.1290,  0.2333, -0.9380,  0.0190,
         0.5371, -0.5190,  0.3853, -0.1033, -0.2186,  0.6001, -0.1877, -0.2634,
         0.3743, -0.5835,  0.7598,  0.1042, -0.8633,  0.4487,  0.0543, -0.2729,
         0.4009, -0.1974,  0.4448, -0.0652,  0.1150, -0.0110, -0.9043,  0.0073,
         0.4304, -0.0789,  0.5415, -0.0503], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2235848664 / 2281701378 (98.0%)
Greatest absolute difference: 0.9999587535858154 at index (127738709,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.float32)
First 100 elements: tensor([-0.3359,  0.0629,  0.0384,  0.0390, -0.3825, -0.3034,  0.9126, -0.0118,
        -0.4050,  0.2403,  0.1964, -0.3186, -0.0155,  0.0764,  0.1569,  0.0166,
        -0.3001, -0.1008,  0.1428,  0.1798, -0.6282,  0.3911, -0.5379,  0.9590,
        -0.3008, -0.1897,  0.3527,  0.0721, -0.6780,  0.5014,  0.2279,  0.0449,
        -0.8820,  0.3988,  0.1427, -0.4711,  0.2022, -0.1078,  0.6202, -0.4029,
        -0.3604,  0.2497, -0.0095, -0.1972,  0.0304,  0.4327,  0.0628, -0.4370,
         0.5713, -0.7780, -0.0344,  0.3008,  0.6601, -0.7967,  0.3307, -0.5234,
         0.3151, -0.3023,  0.3212,  0.1310, -0.2584,  0.2391,  0.0117,  0.5165,
        -0.8855,  0.8877, -0.5351,  0.0996,  0.0601,  0.1795,  0.0647, -0.3030,
         0.3855, -0.7531,  0.5254, -0.4873, -0.0371,  0.6189, -0.2809, -0.3618,
         0.5342, -0.5272, -0.0927,  0.9213, -0.2177,  0.0594, -0.3573,  0.1406,
        -0.3272,  0.0733,  0.1976,  0.3433, -0.7956,  0.2538,  0.0338, -0.3242,
         0.4394,  0.3357, -0.1366, -0.6829])
[accuracy error] paddle.diff(x=Tensor([2281701379],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281684191 / 2281701378 (100.0%)
Greatest absolute difference: 131069 at index (1716851174,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.int32)
First 100 elements: tensor([  29473,  -54260,  -35014,  -28399,  116465, -105895,   49894,  -54847,
          69854,  -34431,   -3522,   -7298,   19001,   31920,  -42646,   -9089,
          68334,  -71686,   59739,  -45269,   25986,   19660,   28620, -119601,
           2581,   30701,   75855,   14802,  -69085,   46449,  -76419,  -20846,
          23391,   56497,  -66879,  109855,  -96852,   51526,  -20941,   22541,
         -68503,   99655,  -10933,  -54125,   59594,  -97990,   29761,   36416,
          30008,    6267,  -15630,  -13817,   15354,   -7550,  -75092,   17724,
         -31647,   10192,   41931,  -17521,   20230,   -5332,   35452,  -39505,
          44956,  -78492,   43201,   27041,   32017,  -24240,   12463,  -92258,
          22054,   25812,   42912, -100977,   68367,   -7420,   45661,  -16430,
         -38797,   59580,  -50319,   32179,   10033,  -68426,   49439,  -43977,
          53476,   -3471,  -65001,   40863,    4474,  -66113,   75128,   23807,
         -69368,  -18163,  -17399,   16470], dtype=torch.int32)
[accuracy error] paddle.diff(x=Tensor([2281701379],"int64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281684188 / 2281701378 (100.0%)
Greatest absolute difference: 131069 at index (531526084,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701378]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701378]), dtype=torch.int64)
First 100 elements: tensor([ -47485,   41442,  -88567,    8433,   48169,  -26381,   16058,   13434,
         -83053,   66974,  -62754,   80979,    4891,  -72364,   25863,   37182,
           6884,  -83521,   63296,  -70062,    2351,   63436,   28637,   -4052,
           8057,  -54950,   72753,   -9028,  -36037,  -43539,   46667,   28162,
           6456,  -64210,   -4055,   30781,  -62406,   20481,   83249,  -15161,
          14143,    6601,    6247,   -3631,   -9392,  -66447,   48871,  -85106,
          -6915,   52049,   69047,  -91988,   81406,  -96701,  -16378,   74256,
         -59191,   13088,    4539,   -7483,  -10195,  103340,  -80454,   23449,
          63241,  -88808,   46819,  -43566,   47292,  -47472,   50915,  -83205,
          44963,  -32863,   39287,   -2753,   -8936,  -11869,   22752,  -33410,
          31330,   62929,   -6794, -104536,   95351,  -14736,  -90978,   33641,
           9395,   25399,  -62052,   45828,    -638,   66247,  -33417,  -62106,
          49204,  -37032,   72843,   17722])
[accuracy error] paddle.diff(x=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208564156 / 4294967296 (98.0%)
Greatest absolute difference: 1.0 at index (1437812,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967296]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967296]), dtype=torch.float16)
First 100 elements: tensor([ 0.4888, -0.6265,  0.0698, -0.1284,  0.4551, -0.3059, -0.1008,  0.4141,
        -0.3989,  0.5664, -0.0215, -0.6836, -0.1467,  0.5342,  0.2294, -0.0164,
        -0.6919,  0.4351, -0.3147,  0.6982, -0.6357,  0.4673, -0.0112,  0.2671,
        -0.8091, -0.0454,  0.0088,  0.2279,  0.1598,  0.4412, -0.3345, -0.4531,
         0.7812,  0.0198, -0.1892, -0.6904,  0.6855, -0.3567, -0.1809,  0.5801,
        -0.6919,  0.1770,  0.4775, -0.1229, -0.4219, -0.1465,  0.1401,  0.5781,
         0.0400, -0.3662, -0.4133,  0.6055, -0.2305,  0.4209, -0.1754,  0.2842,
        -0.8760,  0.4121, -0.2395, -0.0211, -0.1500, -0.0471,  0.6470,  0.2271,
        -0.3296,  0.3494, -0.4993,  0.5244, -0.8838, -0.0073,  0.6826, -0.5762,
         0.7729, -0.7197,  0.2510,  0.2939, -0.7275,  0.1057,  0.1884, -0.0046,
        -0.2739,  0.5728, -0.3286,  0.5576, -0.5967,  0.2639, -0.3455,  0.4531,
        -0.0455, -0.5010,  0.7617, -0.7139,  0.0269, -0.0386, -0.0166,  0.5679,
         0.2612, -0.7319, -0.2087,  0.3560], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8417103507 / 8589934593 (98.0%)
Greatest absolute difference: 1.0 at index (10062778,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8589934593]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([8589934593]), dtype=torch.float16)
First 100 elements: tensor([ 0.0939,  0.1289, -0.0078, -0.1360,  0.2053, -0.4692, -0.0220, -0.2427,
         0.3223,  0.3689,  0.0054, -0.4731, -0.2039,  0.6309, -0.0251, -0.5381,
        -0.1484,  0.3735, -0.0633, -0.3840,  0.7588,  0.2119, -0.2389, -0.5918,
         0.0134,  0.7031, -0.3059, -0.1632, -0.2367, -0.0581,  0.4751, -0.3218,
        -0.0833,  0.3262,  0.3557,  0.1274, -0.3257,  0.1267, -0.4126,  0.0811,
        -0.3306,  0.7891,  0.0012, -0.9111,  0.3877,  0.0186,  0.3547, -0.4600,
        -0.0266, -0.1925,  0.9048, -0.5063, -0.2129,  0.1494,  0.0057, -0.4043,
         0.2301,  0.5410, -0.1858, -0.6079,  0.4338, -0.0977, -0.1770,  0.5498,
        -0.3181,  0.2385,  0.1184, -0.7402,  0.0842,  0.2383,  0.5869, -0.7314,
         0.5703,  0.2092, -0.1772,  0.1533, -0.6133, -0.2644,  0.5918,  0.1475,
        -0.6885,  0.7739, -0.5234,  0.2273,  0.1456, -0.5122,  0.5605, -0.2988,
        -0.3708,  0.8374, -0.7808,  0.2822,  0.3484, -0.1600, -0.1630, -0.1313,
         0.4856,  0.0637, -0.8423,  0.8242], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208566360 / 4294967300 (98.0%)
Greatest absolute difference: 1.0 at index (5144508,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967300]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967300]), dtype=torch.float16)
First 100 elements: tensor([-0.3235,  0.2795, -0.3875, -0.4670,  0.8838, -0.3474,  0.2361,  0.1047,
        -0.2810, -0.4055,  0.7051, -0.0061, -0.2266, -0.5820,  0.2374,  0.3635,
         0.2448, -0.5615, -0.1295,  0.2336, -0.0606, -0.2573,  0.2854,  0.3352,
        -0.7275,  0.4299, -0.3723, -0.0173, -0.0586,  0.5073, -0.1437, -0.1146,
         0.6230, -0.6460, -0.0710,  0.1339, -0.0741,  0.2018, -0.3545,  0.8286,
        -0.5762,  0.4175,  0.1619, -0.7773,  0.4636,  0.0300, -0.3350,  0.3728,
        -0.4736, -0.1560,  0.4736, -0.5146,  0.1619, -0.0371,  0.4192,  0.3110,
         0.0586, -0.5693,  0.4922, -0.6279,  0.0085, -0.0151,  0.5576, -0.4963,
         0.3901, -0.0496, -0.0574, -0.1572,  0.4646, -0.0752, -0.7720,  0.0664,
         0.5796,  0.1549, -0.0764, -0.4478,  0.2644,  0.3101, -0.8623,  0.3423,
        -0.1991,  0.5840,  0.1355, -0.4194,  0.1489,  0.0273, -0.1339, -0.0741,
        -0.1281,  0.5806, -0.6006,  0.3638, -0.2532,  0.2349, -0.4980,  0.4878,
        -0.5718,  0.2695,  0.3022, -0.3484], dtype=torch.float16)
[accuracy error] paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4208569137 / 4294967304 (98.0%)
Greatest absolute difference: 1.0 at index (2015428,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967304]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967304]), dtype=torch.float16)
First 100 elements: tensor([-0.2615, -0.1057, -0.1476, -0.0590,  0.3342,  0.1606,  0.0679, -0.1047,
         0.1699, -0.0928, -0.5742,  0.3081, -0.3730,  0.2131,  0.3921, -0.0753,
         0.1947, -0.0977,  0.2048, -0.9922,  0.7222, -0.0048, -0.3521, -0.3384,
         0.9463, -0.1626, -0.0930, -0.0117, -0.1930, -0.0184, -0.2101,  0.0858,
         0.1768, -0.0200,  0.4250, -0.3452,  0.1694, -0.7266,  0.8970, -0.0674,
        -0.7754,  0.2773,  0.3418, -0.6934,  0.3865, -0.1147,  0.5859, -0.1624,
        -0.4006,  0.5049,  0.0164, -0.5303, -0.3062,  0.6738, -0.0822,  0.0713,
        -0.2468,  0.5698, -0.0305, -0.1792, -0.1857,  0.0499, -0.4360, -0.1609,
         0.9033, -0.2998, -0.4709,  0.2239, -0.1423, -0.2456,  0.1399,  0.2023,
        -0.2856,  0.5342, -0.3748,  0.5918, -0.6943,  0.7603, -0.2754, -0.5254,
         0.8350, -0.8564, -0.0132,  0.9180, -0.9385,  0.0603,  0.3955, -0.4263,
         0.4062,  0.2915, -0.0518,  0.2019, -0.0420, -0.3445,  0.3679, -0.5728,
         0.4463, -0.1763,  0.1787, -0.5156], dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([10, 10, 10, 4294968],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 251 / 4294968000 (0.0%)
Greatest absolute difference: nan at index (0, 0, 7, 815481) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 7, 815481) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10, 10, 4294968]), dtype=torch.float16)
First 100 elements: tensor([ 1.8859e+01,  9.0781e+00,  1.1426e+00, -3.8281e+00,  1.8242e+00,
         6.6260e-01, -2.9863e+00, -5.1016e+00, -1.0988e+02,  1.1931e+02,
        -4.4219e+00,  1.5000e+00,  2.2234e+01,  3.7793e-01, -3.3438e+01,
        -7.3594e+00, -2.0332e+00,  1.1533e+00,  4.8218e-01,  6.0312e+00,
         3.8574e+00, -9.9900e+02,  7.2705e-01, -1.5875e+01,  5.3925e-02,
         5.5352e+00, -2.1113e+00, -2.0488e+00, -7.8516e+00, -3.2793e+00,
         2.5898e+00,  1.5215e+00,  1.1328e+00, -3.7969e+00, -7.0820e+00,
         2.7227e+00, -3.0957e+00,  1.0801e+00, -8.3984e+00,  1.2544e+02,
         6.6328e+00, -3.1797e+00, -2.5219e+01, -6.7930e+00, -2.6191e+00,
        -2.3789e+00, -4.8633e+00,  4.8218e-01, -3.8906e+01,  5.9668e-01,
         2.2949e+00,  8.1787e-01, -7.5156e+00, -6.7812e+00, -8.7891e+00,
        -6.2969e+00,  4.3672e+00,  2.0430e+00,  7.6172e-01,  2.2812e+00,
         1.9112e+02,  2.0239e-01,  1.1172e+00,  1.8094e+01, -2.0449e+00,
         1.2549e+00, -7.4141e+00, -1.9980e+00, -2.7188e+00,  1.3076e+00,
        -2.3945e+00,  1.3039e+01, -5.8438e+01,  5.9727e+00, -3.3379e+00,
         4.4434e-01,  1.0557e+00,  4.1836e+00, -5.6914e+00,  1.3984e+00,
         4.3750e+00,  3.7354e-01,  5.3906e+00,  4.4434e-01, -4.7852e+00,
         1.2078e+01, -8.5312e+00,  5.8047e+00, -2.9199e+00,  1.8428e+00,
        -5.3750e+00,  9.1016e-01, -2.4883e+00,  3.3398e-01, -2.8652e+00,
         2.9180e+00,  1.1039e+01,  1.6768e+00,  4.6250e+00, -2.5801e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([10, 10, 10, 4294968]), dtype=torch.float16)
First 100 elements: tensor([ 1.8859e+01,  9.0781e+00,  1.1426e+00, -3.8281e+00,  1.8242e+00,
         6.6260e-01, -2.9863e+00, -5.1016e+00, -1.0988e+02,  1.1931e+02,
        -4.4219e+00,  1.5000e+00,  2.2234e+01,  3.7793e-01, -3.3438e+01,
        -7.3594e+00, -2.0332e+00,  1.1533e+00,  4.8218e-01,  6.0312e+00,
         3.8574e+00, -9.9900e+02,  7.2705e-01, -1.5875e+01,  5.3925e-02,
         5.5352e+00, -2.1113e+00, -2.0488e+00, -7.8516e+00, -3.2793e+00,
         2.5898e+00,  1.5215e+00,  1.1328e+00, -3.7969e+00, -7.0820e+00,
         2.7227e+00, -3.0957e+00,  1.0801e+00, -8.3984e+00,  1.2544e+02,
         6.6328e+00, -3.1797e+00, -2.5219e+01, -6.7930e+00, -2.6191e+00,
        -2.3789e+00, -4.8633e+00,  4.8218e-01, -3.8906e+01,  5.9668e-01,
         2.2949e+00,  8.1787e-01, -7.5156e+00, -6.7812e+00, -8.7891e+00,
        -6.2969e+00,  4.3672e+00,  2.0430e+00,  7.6172e-01,  2.2812e+00,
         1.9112e+02,  2.0239e-01,  1.1172e+00,  1.8094e+01, -2.0449e+00,
         1.2549e+00, -7.4141e+00, -1.9980e+00, -2.7188e+00,  1.3076e+00,
        -2.3945e+00,  1.3039e+01, -5.8438e+01,  5.9727e+00, -3.3379e+00,
         4.4434e-01,  1.0557e+00,  4.1836e+00, -5.6914e+00,  1.3984e+00,
         4.3750e+00,  3.7354e-01,  5.3906e+00,  4.4434e-01, -4.7852e+00,
         1.2078e+01, -8.5312e+00,  5.8047e+00, -2.9199e+00,  1.8428e+00,
        -5.3750e+00,  9.1016e-01, -2.4883e+00,  3.3398e-01, -2.8652e+00,
         2.9180e+00,  1.1039e+01,  1.6768e+00,  4.6250e+00, -2.5801e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([10, 10, 21474837, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 266 / 4294967400 (0.0%)
Greatest absolute difference: nan at index (0, 0, 8817326, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 8817326, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10, 21474837, 2]), dtype=torch.float16)
First 100 elements: tensor([ 1.5828e+01, -1.2359e+01,  9.8750e+00,  9.7812e+00,  1.2453e+01,
         1.5273e+00, -5.3672e+00, -2.1543e+00,  2.0020e-01, -8.6094e+00,
        -1.4703e+01,  9.3281e+00, -2.4453e+01, -2.6660e+00,  6.5576e-01,
        -2.0328e+01,  1.6736e-01,  2.6797e+00,  1.4148e+01,  1.5420e+00,
         1.4277e+00, -2.9516e+01, -6.5938e+00, -1.0789e+01,  8.7891e-01,
        -2.6172e+00, -3.2559e+00, -2.0215e+00, -1.5297e+01, -1.9906e+01,
         2.0059e+00, -5.3633e+00, -3.0352e+00,  1.8369e+00,  4.6812e+01,
        -3.0371e+00,  6.0039e+00,  4.8320e+00,  3.6406e+00, -5.4102e+00,
         1.9570e+00,  1.9092e+00,  2.7051e+00,  3.4781e+01, -3.0840e+00,
        -2.9434e+00,  1.6297e+01,  1.0588e+02, -2.7480e+00, -7.2109e+00,
         2.4473e+00,  6.6875e+00, -2.3555e+00, -1.9688e+00, -2.0547e+00,
         9.9750e+01, -1.0969e+01,  6.8047e+00, -8.8047e+00,  7.7070e+00,
         2.2734e+00, -2.2480e+00, -1.1175e+02, -5.5273e+00, -2.5625e+01,
         4.9561e-01, -3.3672e+00,  5.0244e-01,  2.1426e+00, -2.9160e+00,
        -6.9141e+00, -2.8672e+01, -2.5078e+00, -1.1859e+01, -2.0469e+00,
        -1.1562e+01,  2.2406e+01,  5.9062e+00, -2.2695e+00,  1.9443e+00,
        -1.7100e+02, -2.3809e+00, -2.3828e+01, -3.6055e+00, -3.3672e+00,
        -3.5312e+00, -5.0703e+00,  9.2578e+00, -3.8672e+00,  2.5020e+00,
         3.3613e+00, -3.2402e+00, -6.0117e+00, -2.5879e+00, -9.8750e+00,
        -2.0898e+00,  8.8867e-01,  1.7881e+00,  2.1602e+00,  2.8828e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([10, 10, 21474837, 2]), dtype=torch.float16)
First 100 elements: tensor([ 1.5828e+01, -1.2359e+01,  9.8750e+00,  9.7812e+00,  1.2453e+01,
         1.5273e+00, -5.3672e+00, -2.1543e+00,  2.0020e-01, -8.6094e+00,
        -1.4703e+01,  9.3281e+00, -2.4453e+01, -2.6660e+00,  6.5576e-01,
        -2.0328e+01,  1.6736e-01,  2.6797e+00,  1.4148e+01,  1.5420e+00,
         1.4277e+00, -2.9516e+01, -6.5938e+00, -1.0789e+01,  8.7891e-01,
        -2.6172e+00, -3.2559e+00, -2.0215e+00, -1.5297e+01, -1.9906e+01,
         2.0059e+00, -5.3633e+00, -3.0352e+00,  1.8369e+00,  4.6812e+01,
        -3.0371e+00,  6.0039e+00,  4.8320e+00,  3.6406e+00, -5.4102e+00,
         1.9570e+00,  1.9092e+00,  2.7051e+00,  3.4781e+01, -3.0840e+00,
        -2.9434e+00,  1.6297e+01,  1.0588e+02, -2.7480e+00, -7.2109e+00,
         2.4473e+00,  6.6875e+00, -2.3555e+00, -1.9688e+00, -2.0547e+00,
         9.9750e+01, -1.0969e+01,  6.8047e+00, -8.8047e+00,  7.7070e+00,
         2.2734e+00, -2.2480e+00, -1.1175e+02, -5.5273e+00, -2.5625e+01,
         4.9561e-01, -3.3672e+00,  5.0244e-01,  2.1426e+00, -2.9160e+00,
        -6.9141e+00, -2.8672e+01, -2.5078e+00, -1.1859e+01, -2.0469e+00,
        -1.1562e+01,  2.2406e+01,  5.9062e+00, -2.2695e+00,  1.9443e+00,
        -1.7100e+02, -2.3809e+00, -2.3828e+01, -3.6055e+00, -3.3672e+00,
        -3.5312e+00, -5.0703e+00,  9.2578e+00, -3.8672e+00,  2.5020e+00,
         3.3613e+00, -3.2402e+00, -6.0117e+00, -2.5879e+00, -9.8750e+00,
        -2.0898e+00,  8.8867e-01,  1.7881e+00,  2.1602e+00,  2.8828e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([10, 10, 42949673],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 219 / 4294967300 (0.0%)
Greatest absolute difference: nan at index (0, 0, 2546145) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 2546145) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10, 42949673]), dtype=torch.float16)
First 100 elements: tensor([ 8.2471e-01, -2.5039e+00,  4.8633e+00, -2.2891e+00,  1.3203e+01,
        -2.7227e+00,  1.1430e+01, -1.4398e+01, -3.8184e+00, -3.4863e+00,
         2.0898e+00, -2.4238e+00,  9.5068e-01, -3.4938e+01,  4.7734e+00,
         3.6934e+00, -8.4141e+00,  2.2910e+00, -2.1641e+00, -1.8672e+01,
         1.0381e+00, -6.5391e+00, -2.3086e+00,  6.0586e+00, -3.7930e+00,
         2.3867e+00, -2.2637e+00,  8.0127e-01,  1.1758e+00,  3.3838e-01,
         6.5250e+01,  1.4062e+00,  2.6973e+00, -3.3086e+00,  1.6594e+01,
         1.1074e+00,  1.0766e+01,  3.8926e+00,  1.1484e+01, -2.6230e+00,
        -3.0234e+00, -3.3711e+00, -3.4863e+00, -3.8031e+01, -1.3840e+03,
         2.2246e+00,  1.7881e+00,  6.6523e+00, -3.1406e+00,  5.7656e+00,
        -2.6016e+00, -4.0195e+00,  1.0508e+00, -4.3594e+00, -2.6797e+00,
         2.9443e-01, -8.7109e+00,  1.8984e+01, -4.0039e+00,  2.6133e+00,
         2.0886e-01,  1.5645e+00,  4.6436e-01,  1.1203e+01, -4.2773e+00,
        -2.3145e+00, -2.5293e+00,  3.5596e-01,  1.3570e+01,  3.6426e+00,
         1.4121e+00, -7.5469e+00, -6.3555e+00,  3.6543e+00,  2.7905e-01,
         3.1016e+00,  2.2644e-01, -6.4453e+00, -4.2852e+00,  8.8135e-01,
        -3.4922e+00, -2.8641e+01,  3.8875e+01, -5.9766e+00, -2.3219e+01,
        -2.3672e+00,  2.7852e+00,  1.4990e-01,  1.2891e+00, -5.1328e+00,
        -1.5438e+01, -2.0742e+00, -2.9766e+00,  5.7773e+00,  1.5075e+02,
         1.2109e+00, -2.0664e+00,  3.4785e+00, -5.5000e+00, -1.7781e+01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([10, 10, 42949673]), dtype=torch.float16)
First 100 elements: tensor([ 8.2471e-01, -2.5039e+00,  4.8633e+00, -2.2891e+00,  1.3203e+01,
        -2.7227e+00,  1.1430e+01, -1.4398e+01, -3.8184e+00, -3.4863e+00,
         2.0898e+00, -2.4238e+00,  9.5068e-01, -3.4938e+01,  4.7734e+00,
         3.6934e+00, -8.4141e+00,  2.2910e+00, -2.1641e+00, -1.8672e+01,
         1.0381e+00, -6.5391e+00, -2.3086e+00,  6.0586e+00, -3.7930e+00,
         2.3867e+00, -2.2637e+00,  8.0127e-01,  1.1758e+00,  3.3838e-01,
         6.5250e+01,  1.4062e+00,  2.6973e+00, -3.3086e+00,  1.6594e+01,
         1.1074e+00,  1.0766e+01,  3.8926e+00,  1.1484e+01, -2.6230e+00,
        -3.0234e+00, -3.3711e+00, -3.4863e+00, -3.8031e+01, -1.3840e+03,
         2.2246e+00,  1.7881e+00,  6.6523e+00, -3.1406e+00,  5.7656e+00,
        -2.6016e+00, -4.0195e+00,  1.0508e+00, -4.3594e+00, -2.6797e+00,
         2.9443e-01, -8.7109e+00,  1.8984e+01, -4.0039e+00,  2.6133e+00,
         2.0886e-01,  1.5645e+00,  4.6436e-01,  1.1203e+01, -4.2773e+00,
        -2.3145e+00, -2.5293e+00,  3.5596e-01,  1.3570e+01,  3.6426e+00,
         1.4121e+00, -7.5469e+00, -6.3555e+00,  3.6543e+00,  2.7905e-01,
         3.1016e+00,  2.2644e-01, -6.4453e+00, -4.2852e+00,  8.8135e-01,
        -3.4922e+00, -2.8641e+01,  3.8875e+01, -5.9766e+00, -2.3219e+01,
        -2.3672e+00,  2.7852e+00,  1.4990e-01,  1.2891e+00, -5.1328e+00,
        -1.5438e+01, -2.0742e+00, -2.9766e+00,  5.7773e+00,  1.5075e+02,
         1.2109e+00, -2.0664e+00,  3.4785e+00, -5.5000e+00, -1.7781e+01],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([10, 21474837, 10, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 241 / 4294967400 (0.0%)
Greatest absolute difference: nan at index (0, 191609, 1, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 191609, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 21474837, 10, 2]), dtype=torch.float16)
First 100 elements: tensor([-3.2734e+00,  5.7305e+00, -9.9141e+00,  1.3125e+00, -3.3691e+00,
         2.4500e+01,  5.9229e-01,  1.2969e+00, -6.5352e+00, -2.1367e+00,
        -2.0508e+00, -5.2266e+00,  6.5576e-01,  1.0617e+01,  2.0957e+00,
         3.9111e-01,  1.4609e+00,  8.6670e-02, -3.6055e+00, -2.3105e+00,
         1.4854e+00,  8.8516e+00, -2.8086e+00, -1.0367e+01, -4.3750e+00,
         8.5234e+00,  2.9512e+00, -2.2812e+00,  1.0794e+02,  6.2500e+00,
         2.0195e+00,  4.3555e-01, -4.0195e+00,  1.4771e-01,  4.7219e+01,
         1.2975e+02,  3.7880e+03, -2.0898e+00,  3.1900e+02, -3.6836e+00,
         2.1765e-01,  1.0734e+01,  3.7475e+02, -3.1035e+00, -1.5617e+01,
         8.4688e+00,  3.4023e+00, -1.9893e+00,  1.4746e+00, -8.1016e+00,
        -2.3633e+00, -9.0547e+00, -4.4414e+00,  2.0488e+00,  5.8789e-01,
         1.5166e+00, -1.1773e+01, -2.6953e+00, -2.0820e+00, -6.9766e+00,
        -1.9875e+01, -2.8453e+01,  7.8828e+00, -2.1641e+00, -3.8613e+00,
         2.7227e+00,  3.1543e+00, -4.3516e+00,  9.1699e-01, -2.0953e+01,
        -2.0254e+00,  4.3438e+00,  5.9609e+00, -2.3398e+00, -6.2148e+00,
         8.4453e+00, -1.9984e+01,  3.8232e-01,  2.1719e+00,  6.0508e+00,
        -3.0254e+00, -2.8672e+00,  5.9031e+01,  4.6719e+00, -4.9219e+00,
        -2.6152e+00, -2.7305e+00, -5.8398e+00,  1.7998e+00, -3.8281e+00,
        -3.2734e+00, -2.3086e+00,  1.8340e+00,  3.3094e+01,  6.7148e+00,
         1.1977e+01,  9.2938e+01, -2.6562e+00,  1.1906e+01,  1.5869e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([10, 21474837, 10, 2]), dtype=torch.float16)
First 100 elements: tensor([-3.2734e+00,  5.7305e+00, -9.9141e+00,  1.3125e+00, -3.3691e+00,
         2.4500e+01,  5.9229e-01,  1.2969e+00, -6.5352e+00, -2.1367e+00,
        -2.0508e+00, -5.2266e+00,  6.5576e-01,  1.0617e+01,  2.0957e+00,
         3.9111e-01,  1.4609e+00,  8.6670e-02, -3.6055e+00, -2.3105e+00,
         1.4854e+00,  8.8516e+00, -2.8086e+00, -1.0367e+01, -4.3750e+00,
         8.5234e+00,  2.9512e+00, -2.2812e+00,  1.0794e+02,  6.2500e+00,
         2.0195e+00,  4.3555e-01, -4.0195e+00,  1.4771e-01,  4.7219e+01,
         1.2975e+02,  3.7880e+03, -2.0898e+00,  3.1900e+02, -3.6836e+00,
         2.1765e-01,  1.0734e+01,  3.7475e+02, -3.1035e+00, -1.5617e+01,
         8.4688e+00,  3.4023e+00, -1.9893e+00,  1.4746e+00, -8.1016e+00,
        -2.3633e+00, -9.0547e+00, -4.4414e+00,  2.0488e+00,  5.8789e-01,
         1.5166e+00, -1.1773e+01, -2.6953e+00, -2.0820e+00, -6.9766e+00,
        -1.9875e+01, -2.8453e+01,  7.8828e+00, -2.1641e+00, -3.8613e+00,
         2.7227e+00,  3.1543e+00, -4.3516e+00,  9.1699e-01, -2.0953e+01,
        -2.0254e+00,  4.3438e+00,  5.9609e+00, -2.3398e+00, -6.2148e+00,
         8.4453e+00, -1.9984e+01,  3.8232e-01,  2.1719e+00,  6.0508e+00,
        -3.0254e+00, -2.8672e+00,  5.9031e+01,  4.6719e+00, -4.9219e+00,
        -2.6152e+00, -2.7305e+00, -5.8398e+00,  1.7998e+00, -3.8281e+00,
        -3.2734e+00, -2.3086e+00,  1.8340e+00,  3.3094e+01,  6.7148e+00,
         1.1977e+01,  9.2938e+01, -2.6562e+00,  1.1906e+01,  1.5869e-01],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([10, 42949673, 10],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 252 / 4294967300 (0.0%)
Greatest absolute difference: nan at index (0, 2403013, 7) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 2403013, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 42949673, 10]), dtype=torch.float16)
First 100 elements: tensor([ 1.1807e+00,  1.3389e+00, -2.5879e+00, -2.5891e+01, -2.1738e+00,
         1.5281e+01,  3.0488e+00, -4.3203e+00, -2.7871e+00, -3.2168e+00,
        -3.7773e+00,  1.2939e+00, -2.2871e+00,  1.7480e+00,  8.8806e-02,
        -7.5273e+00, -3.7832e+00,  1.1758e+00, -2.1035e+00, -4.5547e+00,
        -1.0258e+01,  1.7891e+01,  4.0156e+00,  5.6172e+00, -7.5117e+00,
        -7.2578e+00,  1.4062e+00,  2.3848e+00, -5.7109e+00,  2.1844e+01,
        -3.3164e+00,  1.7766e+01, -1.2148e+01, -1.9658e+00,  1.9346e+00,
        -5.0859e+00, -3.1211e+00,  4.7539e+00, -5.6680e+00,  7.1992e+00,
         2.3000e+01, -4.2422e+00, -5.2188e+00,  8.9297e+00,  1.4164e+01,
        -8.4219e+00,  1.9219e+00, -5.0094e+01, -4.4531e+00, -6.3164e+00,
         7.8633e+00,  4.3115e-01,  9.4336e-01, -3.3145e+00, -2.7520e+00,
        -3.6738e+00, -2.3164e+00,  9.5469e+00,  5.5898e+00,  3.6656e+01,
        -3.6211e+00, -1.9275e+02, -4.4492e+00, -6.3828e+00, -2.6172e+00,
         8.5547e-01, -5.8125e+00,  3.4937e-01, -1.4219e+01,  7.5625e+01,
         3.1309e+00, -5.0898e+00,  1.2836e+01,  1.2783e+00, -2.8750e+00,
         4.9121e-01, -1.9172e+01,  3.3750e+00,  1.8965e+00, -2.0898e+00,
         1.4422e+01,  2.3500e+01, -5.9960e+03, -5.3789e+00, -2.2695e+00,
        -2.4629e+00, -2.5801e+00,  2.8652e+00, -4.4609e+00, -3.0684e+00,
         1.0242e+01,  3.5684e+00,  8.3125e+00,  4.2695e+00,  1.9180e+00,
         1.2820e+01,  4.3774e-01,  4.6289e+00,  2.0254e+00, -2.8613e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([10, 42949673, 10]), dtype=torch.float16)
First 100 elements: tensor([ 1.1807e+00,  1.3389e+00, -2.5879e+00, -2.5891e+01, -2.1738e+00,
         1.5281e+01,  3.0488e+00, -4.3203e+00, -2.7871e+00, -3.2168e+00,
        -3.7773e+00,  1.2939e+00, -2.2871e+00,  1.7480e+00,  8.8806e-02,
        -7.5273e+00, -3.7832e+00,  1.1758e+00, -2.1035e+00, -4.5547e+00,
        -1.0258e+01,  1.7891e+01,  4.0156e+00,  5.6172e+00, -7.5117e+00,
        -7.2578e+00,  1.4062e+00,  2.3848e+00, -5.7109e+00,  2.1844e+01,
        -3.3164e+00,  1.7766e+01, -1.2148e+01, -1.9658e+00,  1.9346e+00,
        -5.0859e+00, -3.1211e+00,  4.7539e+00, -5.6680e+00,  7.1992e+00,
         2.3000e+01, -4.2422e+00, -5.2188e+00,  8.9297e+00,  1.4164e+01,
        -8.4219e+00,  1.9219e+00, -5.0094e+01, -4.4531e+00, -6.3164e+00,
         7.8633e+00,  4.3115e-01,  9.4336e-01, -3.3145e+00, -2.7520e+00,
        -3.6738e+00, -2.3164e+00,  9.5469e+00,  5.5898e+00,  3.6656e+01,
        -3.6211e+00, -1.9275e+02, -4.4492e+00, -6.3828e+00, -2.6172e+00,
         8.5547e-01, -5.8125e+00,  3.4937e-01, -1.4219e+01,  7.5625e+01,
         3.1309e+00, -5.0898e+00,  1.2836e+01,  1.2783e+00, -2.8750e+00,
         4.9121e-01, -1.9172e+01,  3.3750e+00,  1.8965e+00, -2.0898e+00,
         1.4422e+01,  2.3500e+01, -5.9960e+03, -5.3789e+00, -2.2695e+00,
        -2.4629e+00, -2.5801e+00,  2.8652e+00, -4.4609e+00, -3.0684e+00,
         1.0242e+01,  3.5684e+00,  8.3125e+00,  4.2695e+00,  1.9180e+00,
         1.2820e+01,  4.3774e-01,  4.6289e+00,  2.0254e+00, -2.8613e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([1398102, 3, 32, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 269 / 4294969344 (0.0%)
Greatest absolute difference: nan at index (2061, 2, 9, 23) (up to 0.01 allowed)
Greatest relative difference: nan at index (2061, 2, 9, 23) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1398102, 3, 32, 32]), dtype=torch.float16)
First 100 elements: tensor([-2.0859e+00,  3.9316e+00,  7.2578e+00,  1.0266e+01,  7.7500e+01,
         8.4100e+02, -7.8594e+00,  1.0088e+00,  4.8672e+00, -3.2637e+00,
         2.9766e+00, -3.7070e+00,  1.1172e+01, -2.6113e+00,  1.8154e+00,
         2.2344e+00, -1.2914e+01, -1.3523e+01, -6.9258e+00,  1.3550e+02,
         5.3984e+00, -2.6797e+01, -6.2070e+00,  3.9277e+00,  5.2490e-01,
         6.3531e+01, -6.2539e+00, -2.7969e+00, -3.5352e+00, -7.7969e+00,
         2.8828e+00,  4.1406e+00,  4.4180e+00, -5.8398e+00,  8.9844e+00,
        -5.4375e+00, -1.2930e+01, -1.5862e+02,  3.1219e+01,  6.1719e-01,
         3.1177e-01, -3.1602e+00, -4.5344e+01,  9.4580e-01, -6.9570e+00,
         5.8656e+01, -1.4914e+01,  1.4273e+01,  4.7998e-01,  3.7688e+01,
         4.8901e-01, -2.2949e+00, -4.7500e+00, -6.5195e+00,  3.6660e+00,
        -1.9805e+00,  1.3369e+00, -3.1836e+00, -2.2578e+00, -4.4648e+00,
         6.0938e+00,  1.2764e+00, -4.9922e+00, -5.0352e+00,  2.3781e+01,
        -6.2891e+00, -2.3078e+01, -7.7070e+00,  5.1123e-01,  4.4653e-01,
         1.6152e+00,  7.1016e+00, -2.0078e+01,  2.8164e+00, -4.4727e+00,
         3.4395e+00, -9.6172e+00, -2.6758e+00,  1.4443e+00,  8.4375e+00,
         3.8359e+00, -3.5059e+00, -2.5098e+00, -3.2852e+00, -4.1719e+00,
        -3.7402e+00, -3.0859e+00,  1.4248e+00,  6.9922e+00, -3.0254e+00,
        -3.2930e+00,  1.5049e+00,  7.6855e-01,  1.6855e+00,  4.6216e-01,
         1.3291e+00, -2.4668e+00,  2.4023e+00,  4.0469e+00,  1.4771e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1398102, 3, 32, 32]), dtype=torch.float16)
First 100 elements: tensor([-2.0859e+00,  3.9316e+00,  7.2578e+00,  1.0266e+01,  7.7500e+01,
         8.4100e+02, -7.8594e+00,  1.0088e+00,  4.8672e+00, -3.2637e+00,
         2.9766e+00, -3.7070e+00,  1.1172e+01, -2.6113e+00,  1.8154e+00,
         2.2344e+00, -1.2914e+01, -1.3523e+01, -6.9258e+00,  1.3550e+02,
         5.3984e+00, -2.6797e+01, -6.2070e+00,  3.9277e+00,  5.2490e-01,
         6.3531e+01, -6.2539e+00, -2.7969e+00, -3.5352e+00, -7.7969e+00,
         2.8828e+00,  4.1406e+00,  4.4180e+00, -5.8398e+00,  8.9844e+00,
        -5.4375e+00, -1.2930e+01, -1.5862e+02,  3.1219e+01,  6.1719e-01,
         3.1177e-01, -3.1602e+00, -4.5344e+01,  9.4580e-01, -6.9570e+00,
         5.8656e+01, -1.4914e+01,  1.4273e+01,  4.7998e-01,  3.7688e+01,
         4.8901e-01, -2.2949e+00, -4.7500e+00, -6.5195e+00,  3.6660e+00,
        -1.9805e+00,  1.3369e+00, -3.1836e+00, -2.2578e+00, -4.4648e+00,
         6.0938e+00,  1.2764e+00, -4.9922e+00, -5.0352e+00,  2.3781e+01,
        -6.2891e+00, -2.3078e+01, -7.7070e+00,  5.1123e-01,  4.4653e-01,
         1.6152e+00,  7.1016e+00, -2.0078e+01,  2.8164e+00, -4.4727e+00,
         3.4395e+00, -9.6172e+00, -2.6758e+00,  1.4443e+00,  8.4375e+00,
         3.8359e+00, -3.5059e+00, -2.5098e+00, -3.2852e+00, -4.1719e+00,
        -3.7402e+00, -3.0859e+00,  1.4248e+00,  6.9922e+00, -3.0254e+00,
        -3.2930e+00,  1.5049e+00,  7.6855e-01,  1.6855e+00,  4.6216e-01,
         1.3291e+00, -2.4668e+00,  2.4023e+00,  4.0469e+00,  1.4771e-01],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([2, 1073741825, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 245 / 4294967300 (0.0%)
Greatest absolute difference: nan at index (0, 21903927, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 21903927, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1073741825, 2]), dtype=torch.float16)
First 100 elements: tensor([-4.4648e+00, -2.2695e+00,  5.0156e+00,  4.6797e+00, -1.7922e+01,
         1.1305e+01, -3.5293e+00,  1.2547e+01,  1.6074e+00,  4.5391e+00,
        -1.9969e+01,  2.2031e+00, -3.2793e+00, -2.6133e+00, -7.1812e+01,
         2.4062e+00,  2.1359e+01, -1.2477e+01, -1.2350e+02, -2.4121e+00,
         5.1531e+01, -2.0723e+00,  1.6547e+01, -2.4766e+00, -3.7422e+00,
        -1.9075e+02, -3.5078e+00, -9.2578e+00, -3.5254e+00, -2.1387e+00,
        -3.0508e+00, -5.4922e+00, -2.2246e+00,  2.5781e+00,  6.0859e+00,
         3.5312e+01,  5.0664e+00, -4.0906e+01,  1.6768e+00,  1.6475e+00,
        -1.3338e+02, -2.2773e+00,  1.2041e+00, -6.7148e+00, -4.7695e+00,
         4.5703e+00,  9.0859e+00,  4.6719e+00,  7.1641e+00, -9.2500e+01,
         6.7625e+01,  6.2070e+00,  1.0850e+00,  5.0977e+00, -4.3219e+01,
         5.0859e+00, -4.4648e+00,  3.8359e+00, -4.8008e+00, -3.8418e+00,
        -2.2129e+00, -5.9492e+00, -5.9414e+00,  2.6348e+00, -4.2031e+00,
         6.5576e-01, -2.0625e+00,  1.1299e+00, -6.5742e+00, -3.2891e+00,
        -5.0820e+00,  1.6312e+02,  4.9591e-02,  3.2500e+00,  1.8340e+00,
        -2.7441e+00, -8.0625e+00, -3.3672e+00,  4.9780e-01, -2.9047e+01,
         1.3922e+01, -5.4805e+00,  3.0737e-01, -3.1953e+00, -2.9727e+00,
        -3.3164e+00,  5.3438e+00, -6.0000e+00,  2.4512e+00, -6.4844e+00,
         3.0957e+00, -3.9043e+00,  4.4727e+00, -3.5664e+00, -2.3027e+00,
        -3.6387e+00, -1.2273e+01, -3.3574e+00, -1.9188e+01,  7.9648e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 1073741825, 2]), dtype=torch.float16)
First 100 elements: tensor([-4.4648e+00, -2.2695e+00,  5.0156e+00,  4.6797e+00, -1.7922e+01,
         1.1305e+01, -3.5293e+00,  1.2547e+01,  1.6074e+00,  4.5391e+00,
        -1.9969e+01,  2.2031e+00, -3.2793e+00, -2.6133e+00, -7.1812e+01,
         2.4062e+00,  2.1359e+01, -1.2477e+01, -1.2350e+02, -2.4121e+00,
         5.1531e+01, -2.0723e+00,  1.6547e+01, -2.4766e+00, -3.7422e+00,
        -1.9075e+02, -3.5078e+00, -9.2578e+00, -3.5254e+00, -2.1387e+00,
        -3.0508e+00, -5.4922e+00, -2.2246e+00,  2.5781e+00,  6.0859e+00,
         3.5312e+01,  5.0664e+00, -4.0906e+01,  1.6768e+00,  1.6475e+00,
        -1.3338e+02, -2.2773e+00,  1.2041e+00, -6.7148e+00, -4.7695e+00,
         4.5703e+00,  9.0859e+00,  4.6719e+00,  7.1641e+00, -9.2500e+01,
         6.7625e+01,  6.2070e+00,  1.0850e+00,  5.0977e+00, -4.3219e+01,
         5.0859e+00, -4.4648e+00,  3.8359e+00, -4.8008e+00, -3.8418e+00,
        -2.2129e+00, -5.9492e+00, -5.9414e+00,  2.6348e+00, -4.2031e+00,
         6.5576e-01, -2.0625e+00,  1.1299e+00, -6.5742e+00, -3.2891e+00,
        -5.0820e+00,  1.6312e+02,  4.9591e-02,  3.2500e+00,  1.8340e+00,
        -2.7441e+00, -8.0625e+00, -3.3672e+00,  4.9780e-01, -2.9047e+01,
         1.3922e+01, -5.4805e+00,  3.0737e-01, -3.1953e+00, -2.9727e+00,
        -3.3164e+00,  5.3438e+00, -6.0000e+00,  2.4512e+00, -6.4844e+00,
         3.0957e+00, -3.9043e+00,  4.4727e+00, -3.5664e+00, -2.3027e+00,
        -3.6387e+00, -1.2273e+01, -3.3574e+00, -1.9188e+01,  7.9648e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([2, 5, 429496730],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 249 / 4294967300 (0.0%)
Greatest absolute difference: nan at index (0, 0, 7570155) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 7570155) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 5, 429496730]), dtype=torch.float16)
First 100 elements: tensor([ 1.1445e+01,  1.0264e+00,  5.7861e-01, -2.1191e+00, -4.0117e+00,
        -4.6602e+00, -9.3906e+00, -2.1836e+00,  2.5703e+00, -4.5195e+00,
         4.7852e+00, -5.7539e+00, -4.3047e+00, -2.5812e+01, -1.3031e+01,
         6.9214e-02,  4.3711e+00, -2.7598e+00,  6.4893e-01,  1.3604e+00,
         2.8906e+00,  3.0430e+00,  1.5332e+00,  8.4141e+00,  6.2070e+00,
         7.4219e+00, -2.0840e+00,  3.3125e+01, -2.4277e+00, -2.0172e+01,
        -2.7305e+00, -2.0078e+00, -1.4219e+01,  1.9121e+00,  4.5337e-01,
         6.3086e-01, -8.5391e+00,  1.8625e+01, -2.8594e+00, -1.4984e+01,
         3.0566e+00, -6.0820e+00,  8.7646e-01, -8.5391e+00, -5.8320e+00,
        -4.2109e+00,  7.9199e-01, -3.9102e+00,  3.4648e+00,  7.9414e+00,
        -5.2617e+00, -2.3438e+00,  1.7406e+01,  7.7539e-01, -3.2656e+00,
        -2.1734e+01,  7.2852e+00, -5.0703e+00,  5.4297e+00, -7.3828e+00,
        -6.5391e+00,  4.0820e+00, -4.2969e+00,  3.5566e+00, -3.3887e+00,
         1.1201e+00,  1.7568e+00,  5.5859e-01, -3.5820e+00, -1.0086e+01,
        -2.0781e+01,  5.3125e-01,  1.6109e+01,  3.7285e+00,  1.7725e+00,
        -2.7754e+00, -2.5664e+00, -3.6094e+00,  2.1094e+00,  9.8938e+01,
         1.9828e+01,  2.2891e+00, -1.0727e+01,  2.6270e+00, -2.4551e+00,
        -6.7500e+00, -2.9238e+00, -4.0586e+00,  6.7617e+00,  1.7695e+00,
        -4.3945e+00, -7.8438e+00, -5.0547e+00,  1.1934e+00,  7.3828e-01,
        -5.0781e+00,  3.6641e+00, -1.3227e+01, -2.9609e+00, -3.2375e+01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 5, 429496730]), dtype=torch.float16)
First 100 elements: tensor([ 1.1445e+01,  1.0264e+00,  5.7861e-01, -2.1191e+00, -4.0117e+00,
        -4.6602e+00, -9.3906e+00, -2.1836e+00,  2.5703e+00, -4.5195e+00,
         4.7852e+00, -5.7539e+00, -4.3047e+00, -2.5812e+01, -1.3031e+01,
         6.9214e-02,  4.3711e+00, -2.7598e+00,  6.4893e-01,  1.3604e+00,
         2.8906e+00,  3.0430e+00,  1.5332e+00,  8.4141e+00,  6.2070e+00,
         7.4219e+00, -2.0840e+00,  3.3125e+01, -2.4277e+00, -2.0172e+01,
        -2.7305e+00, -2.0078e+00, -1.4219e+01,  1.9121e+00,  4.5337e-01,
         6.3086e-01, -8.5391e+00,  1.8625e+01, -2.8594e+00, -1.4984e+01,
         3.0566e+00, -6.0820e+00,  8.7646e-01, -8.5391e+00, -5.8320e+00,
        -4.2109e+00,  7.9199e-01, -3.9102e+00,  3.4648e+00,  7.9414e+00,
        -5.2617e+00, -2.3438e+00,  1.7406e+01,  7.7539e-01, -3.2656e+00,
        -2.1734e+01,  7.2852e+00, -5.0703e+00,  5.4297e+00, -7.3828e+00,
        -6.5391e+00,  4.0820e+00, -4.2969e+00,  3.5566e+00, -3.3887e+00,
         1.1201e+00,  1.7568e+00,  5.5859e-01, -3.5820e+00, -1.0086e+01,
        -2.0781e+01,  5.3125e-01,  1.6109e+01,  3.7285e+00,  1.7725e+00,
        -2.7754e+00, -2.5664e+00, -3.6094e+00,  2.1094e+00,  9.8938e+01,
         1.9828e+01,  2.2891e+00, -1.0727e+01,  2.6270e+00, -2.4551e+00,
        -6.7500e+00, -2.9238e+00, -4.0586e+00,  6.7617e+00,  1.7695e+00,
        -4.3945e+00, -7.8438e+00, -5.0547e+00,  1.1934e+00,  7.3828e-01,
        -5.0781e+00,  3.6641e+00, -1.3227e+01, -2.9609e+00, -3.2375e+01],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([21474837, 10, 10, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 252 / 4294967400 (0.0%)
Greatest absolute difference: nan at index (54661, 6, 3, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (54661, 6, 3, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([21474837, 10, 10, 2]), dtype=torch.float16)
First 100 elements: tensor([ 2.0969e+01,  2.4023e+00, -4.4650e+02,  7.5117e+00,  2.3766e+01,
        -1.9406e+01,  1.6133e+00, -4.4062e+00,  7.2930e+00, -2.9102e+00,
        -3.7871e+00, -1.9961e+00, -7.4727e+00, -2.7402e+00,  2.3438e+00,
         1.2344e+00, -2.1016e+01,  5.9473e-01,  1.1455e+00, -6.6289e+00,
        -3.8320e+00,  6.3086e-01, -1.0023e+01, -2.5312e+00,  1.5752e+00,
        -5.9375e+00,  2.9395e+00,  1.7109e+01,  1.7375e+01,  2.0820e+00,
         1.3926e+00,  7.1533e-01,  1.9795e+00,  1.1025e+00, -3.6504e+00,
        -3.5996e+00, -2.8125e+01,  3.0234e+00, -3.9062e+00, -5.0234e+00,
         1.7334e+00,  2.2656e+00,  3.8047e+00, -3.9844e+00, -2.3438e+00,
         2.2949e+00,  7.0312e+00,  1.4834e+00, -5.7383e+00,  4.6216e-01,
         1.2117e+01,  2.0684e+00, -1.8031e+01,  6.3965e-01,  2.2344e+00,
         1.4717e+00, -3.9668e+00,  1.4124e-01, -7.5430e+00, -2.5859e+00,
        -3.3965e+00, -2.2324e+00, -1.6938e+01,  2.4375e+00,  1.2500e+01,
         2.1816e+00, -2.7832e+00,  7.8467e-01, -5.0078e+00, -2.3086e+00,
         2.8379e+00,  1.0117e+00, -8.4297e+00,  1.0410e+00,  4.6812e+01,
        -4.8516e+00, -3.3340e+00, -2.7383e+00, -1.4188e+01,  8.7500e+00,
         6.7109e+00,  2.7852e+00, -3.2188e+00,  1.9219e+00,  1.0445e+01,
        -2.0109e+01,  1.1855e+00, -2.1895e+00, -2.7598e+00, -3.3672e+00,
        -1.2398e+01,  6.3867e+00,  1.3311e+00,  3.7617e+00,  2.7078e+01,
        -1.0883e+01,  6.7109e+00,  2.4629e+00,  7.4023e+00, -1.9406e+01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([21474837, 10, 10, 2]), dtype=torch.float16)
First 100 elements: tensor([ 2.0969e+01,  2.4023e+00, -4.4650e+02,  7.5117e+00,  2.3766e+01,
        -1.9406e+01,  1.6133e+00, -4.4062e+00,  7.2930e+00, -2.9102e+00,
        -3.7871e+00, -1.9961e+00, -7.4727e+00, -2.7402e+00,  2.3438e+00,
         1.2344e+00, -2.1016e+01,  5.9473e-01,  1.1455e+00, -6.6289e+00,
        -3.8320e+00,  6.3086e-01, -1.0023e+01, -2.5312e+00,  1.5752e+00,
        -5.9375e+00,  2.9395e+00,  1.7109e+01,  1.7375e+01,  2.0820e+00,
         1.3926e+00,  7.1533e-01,  1.9795e+00,  1.1025e+00, -3.6504e+00,
        -3.5996e+00, -2.8125e+01,  3.0234e+00, -3.9062e+00, -5.0234e+00,
         1.7334e+00,  2.2656e+00,  3.8047e+00, -3.9844e+00, -2.3438e+00,
         2.2949e+00,  7.0312e+00,  1.4834e+00, -5.7383e+00,  4.6216e-01,
         1.2117e+01,  2.0684e+00, -1.8031e+01,  6.3965e-01,  2.2344e+00,
         1.4717e+00, -3.9668e+00,  1.4124e-01, -7.5430e+00, -2.5859e+00,
        -3.3965e+00, -2.2324e+00, -1.6938e+01,  2.4375e+00,  1.2500e+01,
         2.1816e+00, -2.7832e+00,  7.8467e-01, -5.0078e+00, -2.3086e+00,
         2.8379e+00,  1.0117e+00, -8.4297e+00,  1.0410e+00,  4.6812e+01,
        -4.8516e+00, -3.3340e+00, -2.7383e+00, -1.4188e+01,  8.7500e+00,
         6.7109e+00,  2.7852e+00, -3.2188e+00,  1.9219e+00,  1.0445e+01,
        -2.0109e+01,  1.1855e+00, -2.1895e+00, -2.7598e+00, -3.3672e+00,
        -1.2398e+01,  6.3867e+00,  1.3311e+00,  3.7617e+00,  2.7078e+01,
        -1.0883e+01,  6.7109e+00,  2.4629e+00,  7.4023e+00, -1.9406e+01],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 231 / 4294967297 (0.0%)
Greatest absolute difference: nan at index (15398392,) (up to 0.01 allowed)
Greatest relative difference: nan at index (15398392,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([ -2.1758,  93.1875,   8.1172,   2.3145, -10.9297, -22.4219,  25.0312,
          1.1172,   2.4668,  -3.4141,   5.9492,   3.1680,   3.2637,   4.6133,
          1.7119,   7.2695,   2.7695, -16.0312,   6.7305,   2.3809,  -2.3652,
        -19.8125,  -3.0391,  15.1719,  -3.3828,   2.3906, -53.5312,  -3.8457,
         -2.4277,  -2.8887,  -9.2656,  10.3438,  -3.2812,   6.5742,  -3.1973,
         -2.4258,  -2.3105,   0.5537,   1.8994, -56.1875,  -3.5840,  -2.3633,
         10.9141,  80.6875,  -4.1289,  -3.1074, -20.7812,  11.7578, -11.0391,
         -4.2734,  -2.2266,  -2.6016,   0.1980,   0.5449,   2.1465, -14.7734,
          0.7944,  -5.9922,   0.8813,  -5.8242,  -2.0742,   0.1521, -10.6719,
          3.5371,  -5.8477,  -2.3066,  -3.1230,  -5.0820,   3.5859,  -3.1133,
          5.4688,  -2.1191,   0.6445,  -5.7617,  -2.6777,  -3.0840,   1.4336,
          0.5518,   0.2002,  -3.0039,   1.2656,  -4.1328, -21.5156,   0.6787,
         -2.6875,   1.6680,  11.4297,  -2.9609, -16.2344,   5.4336,  -8.0234,
          3.6699,  -4.2031,  -3.0898,  -2.9883,  -2.4609,   4.0625,  -6.5703,
          6.4453,   0.8721], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([ -2.1758,  93.1875,   8.1172,   2.3145, -10.9297, -22.4219,  25.0312,
          1.1172,   2.4668,  -3.4141,   5.9492,   3.1680,   3.2637,   4.6133,
          1.7119,   7.2695,   2.7695, -16.0312,   6.7305,   2.3809,  -2.3652,
        -19.8125,  -3.0391,  15.1719,  -3.3828,   2.3906, -53.5312,  -3.8457,
         -2.4277,  -2.8887,  -9.2656,  10.3438,  -3.2812,   6.5742,  -3.1973,
         -2.4258,  -2.3105,   0.5537,   1.8994, -56.1875,  -3.5840,  -2.3633,
         10.9141,  80.6875,  -4.1289,  -3.1074, -20.7812,  11.7578, -11.0391,
         -4.2734,  -2.2266,  -2.6016,   0.1980,   0.5449,   2.1465, -14.7734,
          0.7944,  -5.9922,   0.8813,  -5.8242,  -2.0742,   0.1521, -10.6719,
          3.5371,  -5.8477,  -2.3066,  -3.1230,  -5.0820,   3.5859,  -3.1133,
          5.4688,  -2.1191,   0.6445,  -5.7617,  -2.6777,  -3.0840,   1.4336,
          0.5518,   0.2002,  -3.0039,   1.2656,  -4.1328, -21.5156,   0.6787,
         -2.6875,   1.6680,  11.4297,  -2.9609, -16.2344,   5.4336,  -8.0234,
          3.6699,  -4.2031,  -3.0898,  -2.9883,  -2.4609,   4.0625,  -6.5703,
          6.4453,   0.8721], dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([42949673, 10, 10],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 254 / 4294967300 (0.0%)
Greatest absolute difference: nan at index (253814, 4, 8) (up to 0.01 allowed)
Greatest relative difference: nan at index (253814, 4, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([42949673, 10, 10]), dtype=torch.float16)
First 100 elements: tensor([-3.1289e+00,  3.8711e+00, -1.1273e+01, -1.5641e+01,  1.4771e-01,
         9.5312e+00,  7.5703e+00,  4.1172e+00, -2.0703e+00,  1.0086e+01,
         1.1499e-01,  1.3805e+01, -2.9238e+00,  1.8555e+00,  4.2305e+00,
        -2.7617e+00,  7.7942e-02, -2.0781e+00,  6.1992e+00,  2.0684e+00,
         9.0547e+00,  5.1328e+00,  7.0166e-01, -4.6211e+00,  4.4375e+01,
         1.6000e+01, -2.7422e+00,  1.4277e+00,  1.4211e+01, -3.0410e+00,
        -2.4668e+00,  1.3369e+00, -2.8262e+00,  4.3125e+00,  1.1104e+00,
        -2.6484e+00,  9.6045e-01, -4.8086e+00, -1.7469e+01,  1.2656e+00,
        -1.2117e+01,  7.9639e-01,  1.0430e+00, -2.4707e+00,  4.1281e+01,
        -6.7000e+01, -2.8516e+00, -3.0957e+00,  7.7266e+00,  4.0863e-02,
         3.8262e+00, -3.6125e+01, -4.5547e+00, -3.4062e+00, -8.4688e+01,
        -4.3711e+00, -6.1953e+00, -5.6914e+00,  3.6035e-01,  1.4580e+00,
        -1.1914e+01, -2.1367e+00, -1.9941e+00,  9.0469e+00, -3.7910e+00,
         2.0886e-01, -2.4316e+00,  4.8203e+00, -2.2500e+00,  6.9531e+00,
        -3.5312e+00,  9.7938e+01, -2.1797e+00, -2.6328e+00,  2.0312e+00,
        -2.6914e+00,  7.9883e-01,  3.3688e+01, -2.5723e+00,  1.6045e+00,
        -3.9043e+00,  3.4238e+00, -2.1500e+01, -1.3805e+01,  8.7207e-01,
         6.6438e+01,  4.6899e-01, -2.2461e+00,  2.3145e+00, -4.2812e+00,
        -3.3828e+00, -2.2363e+00, -1.4688e+01, -2.5234e+00,  3.1699e+00,
        -4.4766e+00, -4.6016e+00, -2.0938e+00, -2.7891e+00,  8.0000e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([42949673, 10, 10]), dtype=torch.float16)
First 100 elements: tensor([-3.1289e+00,  3.8711e+00, -1.1273e+01, -1.5641e+01,  1.4771e-01,
         9.5312e+00,  7.5703e+00,  4.1172e+00, -2.0703e+00,  1.0086e+01,
         1.1499e-01,  1.3805e+01, -2.9238e+00,  1.8555e+00,  4.2305e+00,
        -2.7617e+00,  7.7942e-02, -2.0781e+00,  6.1992e+00,  2.0684e+00,
         9.0547e+00,  5.1328e+00,  7.0166e-01, -4.6211e+00,  4.4375e+01,
         1.6000e+01, -2.7422e+00,  1.4277e+00,  1.4211e+01, -3.0410e+00,
        -2.4668e+00,  1.3369e+00, -2.8262e+00,  4.3125e+00,  1.1104e+00,
        -2.6484e+00,  9.6045e-01, -4.8086e+00, -1.7469e+01,  1.2656e+00,
        -1.2117e+01,  7.9639e-01,  1.0430e+00, -2.4707e+00,  4.1281e+01,
        -6.7000e+01, -2.8516e+00, -3.0957e+00,  7.7266e+00,  4.0863e-02,
         3.8262e+00, -3.6125e+01, -4.5547e+00, -3.4062e+00, -8.4688e+01,
        -4.3711e+00, -6.1953e+00, -5.6914e+00,  3.6035e-01,  1.4580e+00,
        -1.1914e+01, -2.1367e+00, -1.9941e+00,  9.0469e+00, -3.7910e+00,
         2.0886e-01, -2.4316e+00,  4.8203e+00, -2.2500e+00,  6.9531e+00,
        -3.5312e+00,  9.7938e+01, -2.1797e+00, -2.6328e+00,  2.0312e+00,
        -2.6914e+00,  7.9883e-01,  3.3688e+01, -2.5723e+00,  1.6045e+00,
        -3.9043e+00,  3.4238e+00, -2.1500e+01, -1.3805e+01,  8.7207e-01,
         6.6438e+01,  4.6899e-01, -2.2461e+00,  2.3145e+00, -4.2812e+00,
        -3.3828e+00, -2.2363e+00, -1.4688e+01, -2.5234e+00,  3.1699e+00,
        -4.4766e+00, -4.6016e+00, -2.0938e+00, -2.7891e+00,  8.0000e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([429496730, 5, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 4294967300 (0.0%)
Greatest absolute difference: nan at index (1185376, 4, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (1185376, 4, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([429496730, 5, 2]), dtype=torch.float16)
First 100 elements: tensor([ 7.1719e+00,  1.7305e+00, -3.7719e+01, -2.6328e+00,  4.3156e+01,
        -3.2051e+00,  2.7227e+00, -4.8984e+00, -3.2520e+00,  4.4766e+00,
        -3.5293e+00,  4.8750e+00, -4.5586e+00, -6.0547e+00, -5.4570e+00,
         2.4102e+00, -3.6387e+00, -1.2484e+01, -4.0547e+00,  7.8271e-01,
        -7.8281e+00,  2.6641e+00, -4.0664e+00, -8.2969e+00, -8.4531e+00,
         1.0703e+00,  1.4092e+00,  8.8672e+00, -2.8516e+00,  3.8550e+02,
         1.7910e+00, -8.6562e+00, -3.5977e+00, -4.0391e+00,  5.6445e+00,
         8.6797e+00, -5.6484e+00,  3.2300e-01,  2.8555e+00,  2.2438e+01,
         3.9004e+00, -2.4434e+00, -6.5117e+00, -5.5859e+00, -2.6270e+00,
         2.2949e+00, -2.5488e+00,  2.3770e+00,  2.8965e+00,  3.2520e-01,
        -2.4922e+01, -2.1152e+00, -2.1191e+00,  1.8369e+00,  3.3496e+00,
        -5.3281e+00, -2.3672e+00, -6.7578e+00,  1.0352e+01,  8.1562e+00,
        -2.4648e+00,  2.3652e+00, -7.8086e+00, -7.5560e+03, -2.7500e+00,
         2.1641e+00, -6.6133e+00, -2.4766e+00, -4.3164e+00, -2.6582e+00,
         6.1992e+00, -3.1035e+00,  2.3652e+00, -2.9707e+00, -3.0156e+00,
         1.3154e+00, -1.3633e+01, -3.4434e+00,  3.0488e+00,  8.8806e-02,
         8.8906e+00,  5.8867e+00, -5.5898e+00,  8.2227e-01, -4.8594e+00,
        -2.4609e+00,  6.8633e+00, -2.5898e+00,  7.7148e+00,  1.5430e-01,
        -1.8469e+01,  2.3457e+00,  1.1285e-01,  1.9248e+00,  6.8625e+01,
         6.0703e+00, -1.9893e+00, -5.4883e+00,  1.4883e+01, -6.0703e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([429496730, 5, 2]), dtype=torch.float16)
First 100 elements: tensor([ 7.1719e+00,  1.7305e+00, -3.7719e+01, -2.6328e+00,  4.3156e+01,
        -3.2051e+00,  2.7227e+00, -4.8984e+00, -3.2520e+00,  4.4766e+00,
        -3.5293e+00,  4.8750e+00, -4.5586e+00, -6.0547e+00, -5.4570e+00,
         2.4102e+00, -3.6387e+00, -1.2484e+01, -4.0547e+00,  7.8271e-01,
        -7.8281e+00,  2.6641e+00, -4.0664e+00, -8.2969e+00, -8.4531e+00,
         1.0703e+00,  1.4092e+00,  8.8672e+00, -2.8516e+00,  3.8550e+02,
         1.7910e+00, -8.6562e+00, -3.5977e+00, -4.0391e+00,  5.6445e+00,
         8.6797e+00, -5.6484e+00,  3.2300e-01,  2.8555e+00,  2.2438e+01,
         3.9004e+00, -2.4434e+00, -6.5117e+00, -5.5859e+00, -2.6270e+00,
         2.2949e+00, -2.5488e+00,  2.3770e+00,  2.8965e+00,  3.2520e-01,
        -2.4922e+01, -2.1152e+00, -2.1191e+00,  1.8369e+00,  3.3496e+00,
        -5.3281e+00, -2.3672e+00, -6.7578e+00,  1.0352e+01,  8.1562e+00,
        -2.4648e+00,  2.3652e+00, -7.8086e+00, -7.5560e+03, -2.7500e+00,
         2.1641e+00, -6.6133e+00, -2.4766e+00, -4.3164e+00, -2.6582e+00,
         6.1992e+00, -3.1035e+00,  2.3652e+00, -2.9707e+00, -3.0156e+00,
         1.3154e+00, -1.3633e+01, -3.4434e+00,  3.0488e+00,  8.8806e-02,
         8.8906e+00,  5.8867e+00, -5.5898e+00,  8.2227e-01, -4.8594e+00,
        -2.4609e+00,  6.8633e+00, -2.5898e+00,  7.7148e+00,  1.5430e-01,
        -1.8469e+01,  2.3457e+00,  1.1285e-01,  1.9248e+00,  6.8625e+01,
         6.0703e+00, -1.9893e+00, -5.4883e+00,  1.4883e+01, -6.0703e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([8, 3, 32, 5592406],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 4294967808 (0.0%)
Greatest absolute difference: nan at index (0, 0, 0, 3790578) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 3790578) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 3, 32, 5592406]), dtype=torch.float16)
First 100 elements: tensor([-35.4688,  22.2656,  -2.9199,   6.0625,   9.6172,   2.4863,  11.7734,
         13.9609,   1.2549,  16.6406,   2.4902,   1.8369, -25.9375,   3.4238,
         -2.4121,   3.0000,   3.4590,  84.6250, -14.1484,  -2.4355, -10.5938,
         -8.4688,  -4.1406,  -2.1484,  -2.1152,   0.1696,  10.8984,   7.5586,
         32.5938, -11.8203,  -3.7402,   1.1104,   3.9766,   6.8125, -23.4219,
          6.8711,   1.3984,  -3.6406,  -2.5684,   6.9297,   0.4355,   7.6680,
         -3.1484,  -2.2832,   3.7422,   4.7461,  -2.7402,   0.9844,  -6.2812,
          3.8047,  10.3906,  10.8281,   1.1934,   0.6626,  -3.1543,  -2.5000,
         -2.7598,   4.0898,  -2.9980, -63.1562,   1.2471,   9.2422,  -8.4375,
         19.3125,   1.7998,  -4.9023,  -2.4238,   0.8599, -22.6875,  -7.5156,
         -6.0664,   3.6426,  -3.7402,  -4.9258,   3.3379,  13.6484, -10.4375,
          4.5547,  -4.3672,   1.0381,  -4.4141,   0.7432,   1.5840,   8.4297,
         23.6094,  -8.9375,  -2.7461,  -2.1426,  13.8828,   2.3398,  -4.7695,
          3.7168,   2.0215, 107.5625,   5.5430,  -7.1211,  79.4375,   0.6104,
          1.4385,   4.0273], dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 3, 32, 5592406]), dtype=torch.float16)
First 100 elements: tensor([-35.4688,  22.2656,  -2.9199,   6.0625,   9.6172,   2.4863,  11.7734,
         13.9609,   1.2549,  16.6406,   2.4902,   1.8369, -25.9375,   3.4238,
         -2.4121,   3.0000,   3.4590,  84.6250, -14.1484,  -2.4355, -10.5938,
         -8.4688,  -4.1406,  -2.1484,  -2.1152,   0.1696,  10.8984,   7.5586,
         32.5938, -11.8203,  -3.7402,   1.1104,   3.9766,   6.8125, -23.4219,
          6.8711,   1.3984,  -3.6406,  -2.5684,   6.9297,   0.4355,   7.6680,
         -3.1484,  -2.2832,   3.7422,   4.7461,  -2.7402,   0.9844,  -6.2812,
          3.8047,  10.3906,  10.8281,   1.1934,   0.6626,  -3.1543,  -2.5000,
         -2.7598,   4.0898,  -2.9980, -63.1562,   1.2471,   9.2422,  -8.4375,
         19.3125,   1.7998,  -4.9023,  -2.4238,   0.8599, -22.6875,  -7.5156,
         -6.0664,   3.6426,  -3.7402,  -4.9258,   3.3379,  13.6484, -10.4375,
          4.5547,  -4.3672,   1.0381,  -4.4141,   0.7432,   1.5840,   8.4297,
         23.6094,  -8.9375,  -2.7461,  -2.1426,  13.8828,   2.3398,  -4.7695,
          3.7168,   2.0215, 107.5625,   5.5430,  -7.1211,  79.4375,   0.6104,
          1.4385,   4.0273], dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([8, 3, 5592406, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 286 / 4294967808 (0.0%)
Greatest absolute difference: nan at index (0, 0, 282878, 23) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 282878, 23) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 3, 5592406, 32]), dtype=torch.float16)
First 100 elements: tensor([-2.8086e+00, -5.6211e+00, -2.4375e+00,  1.4712e+02,  6.2734e+00,
         1.8213e+00,  1.9727e+00,  1.1039e+01, -2.0508e+00,  1.5215e+00,
        -1.9961e+00, -2.0453e+01,  2.9224e-01,  4.9561e-01, -8.1484e+00,
        -3.5410e+00,  7.5488e-01, -5.7383e+00, -3.0094e+01,  2.2949e+00,
        -2.0500e+01, -2.1504e+00, -3.7871e+00, -2.4316e+00, -2.9062e+00,
        -3.0938e+00, -4.1211e+00,  1.0576e+00, -2.3926e+00,  6.0039e+00,
        -3.5254e+00, -3.3000e+02, -4.2109e+00,  4.2578e+00, -5.2094e+01,
         7.0469e+00,  1.5950e+02,  8.4326e-01, -2.8266e+01,  3.9844e+00,
        -3.2969e+00, -3.0801e+00, -7.0039e+00, -2.0703e+00,  7.5469e+00,
        -3.2715e+00, -1.0422e+01,  1.8496e+00,  2.4551e+00, -2.1836e+00,
        -2.3789e+00,  9.6045e-01, -4.7344e+00, -2.4570e+00,  4.3688e+01,
         4.7695e+00,  8.5703e+00,  5.1562e-01, -1.0258e+01, -5.1289e+00,
         4.0375e+01,  1.6914e+00, -1.8547e+01, -4.7422e+00, -4.3516e+00,
        -4.6992e+00, -4.3555e+00, -2.7773e+00,  4.5508e+00,  1.8711e+00,
        -6.5352e+00, -9.1500e+01,  1.0758e+01, -3.9766e+00,  5.3125e-01,
        -3.1250e+00,  2.2383e+00,  1.1475e+00,  3.1777e+00, -2.3164e+00,
        -3.9102e+00, -6.2227e+00, -2.3633e+00, -1.0781e+01,  1.0846e-01,
         1.3574e+00, -1.9814e+00, -3.5352e+00, -2.3848e+00, -8.3516e+00,
         9.6797e+00,  2.6836e+00,  8.5859e+00, -3.5137e+00,  3.6255e-01,
         3.6191e+00, -4.9180e+00, -5.8438e+00,  5.9492e+00, -6.3281e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 3, 5592406, 32]), dtype=torch.float16)
First 100 elements: tensor([-2.8086e+00, -5.6211e+00, -2.4375e+00,  1.4712e+02,  6.2734e+00,
         1.8213e+00,  1.9727e+00,  1.1039e+01, -2.0508e+00,  1.5215e+00,
        -1.9961e+00, -2.0453e+01,  2.9224e-01,  4.9561e-01, -8.1484e+00,
        -3.5410e+00,  7.5488e-01, -5.7383e+00, -3.0094e+01,  2.2949e+00,
        -2.0500e+01, -2.1504e+00, -3.7871e+00, -2.4316e+00, -2.9062e+00,
        -3.0938e+00, -4.1211e+00,  1.0576e+00, -2.3926e+00,  6.0039e+00,
        -3.5254e+00, -3.3000e+02, -4.2109e+00,  4.2578e+00, -5.2094e+01,
         7.0469e+00,  1.5950e+02,  8.4326e-01, -2.8266e+01,  3.9844e+00,
        -3.2969e+00, -3.0801e+00, -7.0039e+00, -2.0703e+00,  7.5469e+00,
        -3.2715e+00, -1.0422e+01,  1.8496e+00,  2.4551e+00, -2.1836e+00,
        -2.3789e+00,  9.6045e-01, -4.7344e+00, -2.4570e+00,  4.3688e+01,
         4.7695e+00,  8.5703e+00,  5.1562e-01, -1.0258e+01, -5.1289e+00,
         4.0375e+01,  1.6914e+00, -1.8547e+01, -4.7422e+00, -4.3516e+00,
        -4.6992e+00, -4.3555e+00, -2.7773e+00,  4.5508e+00,  1.8711e+00,
        -6.5352e+00, -9.1500e+01,  1.0758e+01, -3.9766e+00,  5.3125e-01,
        -3.1250e+00,  2.2383e+00,  1.1475e+00,  3.1777e+00, -2.3164e+00,
        -3.9102e+00, -6.2227e+00, -2.3633e+00, -1.0781e+01,  1.0846e-01,
         1.3574e+00, -1.9814e+00, -3.5352e+00, -2.3848e+00, -8.3516e+00,
         9.6797e+00,  2.6836e+00,  8.5859e+00, -3.5137e+00,  3.6255e-01,
         3.6191e+00, -4.9180e+00, -5.8438e+00,  5.9492e+00, -6.3281e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(Tensor([8, 524289, 32, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 261 / 4294975488 (0.0%)
Greatest absolute difference: nan at index (0, 23144, 7, 21) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 23144, 7, 21) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 524289, 32, 32]), dtype=torch.float16)
First 100 elements: tensor([ -2.9648,  -3.4258,  -8.0234,   0.1477, -15.6406, -22.9844,  -2.3711,
          0.2111,  -8.6641,   5.4961,  -2.0547,   1.7363,   1.3877,   1.2734,
          2.4375, -20.0625,   6.2891, -13.2266,   2.7012,  -8.7812,  -2.3086,
         -8.2734,  32.0312, -23.1094,   4.4258,   4.1445,  -6.2734,   1.6709,
          4.4570,   1.9824,  -2.1113,  59.4688, -26.1406,  -4.2656,  -2.8086,
         -2.7812, -53.2188,  11.8594,  -2.3027, -17.2812, -10.1172, -13.8359,
          4.1836,   2.1016, -14.3594,  32.8125,  -2.5977,  84.6250,  26.8125,
         -2.4219,  -3.4453,  -5.7617,  -2.3438,  -5.4883,  -4.2578,  -6.8711,
         -5.3516,   0.1281,  -3.3359,  -2.2324,   5.3477,  10.4141,   5.5703,
          9.2422,   2.4824, -12.3750,  -2.4531,   7.4062,   1.5420,  -8.7734,
         11.6250,  -2.9453,   3.6074, -32.7188,   8.1172, -61.8125,  -5.6562,
          0.8647,   4.3281,  -2.0352,   0.2395, -28.4531,  -5.7617, -16.4062,
         -3.6094,  -2.2891, -49.9062, -33.1250,  11.6484,  -5.3867,  -6.4258,
          1.9990,   1.1836,   8.1484,   1.1201,   9.8594,  -2.2188,  -3.1953,
          0.5137,   3.3672], dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 524289, 32, 32]), dtype=torch.float16)
First 100 elements: tensor([ -2.9648,  -3.4258,  -8.0234,   0.1477, -15.6406, -22.9844,  -2.3711,
          0.2111,  -8.6641,   5.4961,  -2.0547,   1.7363,   1.3877,   1.2734,
          2.4375, -20.0625,   6.2891, -13.2266,   2.7012,  -8.7812,  -2.3086,
         -8.2734,  32.0312, -23.1094,   4.4258,   4.1445,  -6.2734,   1.6709,
          4.4570,   1.9824,  -2.1113,  59.4688, -26.1406,  -4.2656,  -2.8086,
         -2.7812, -53.2188,  11.8594,  -2.3027, -17.2812, -10.1172, -13.8359,
          4.1836,   2.1016, -14.3594,  32.8125,  -2.5977,  84.6250,  26.8125,
         -2.4219,  -3.4453,  -5.7617,  -2.3438,  -5.4883,  -4.2578,  -6.8711,
         -5.3516,   0.1281,  -3.3359,  -2.2324,   5.3477,  10.4141,   5.5703,
          9.2422,   2.4824, -12.3750,  -2.4531,   7.4062,   1.5420,  -8.7734,
         11.6250,  -2.9453,   3.6074, -32.7188,   8.1172, -61.8125,  -5.6562,
          0.8647,   4.3281,  -2.0352,   0.2395, -28.4531,  -5.7617, -16.4062,
         -3.6094,  -2.2891, -49.9062, -33.1250,  11.6484,  -5.3867,  -6.4258,
          1.9990,   1.1836,   8.1484,   1.1201,   9.8594,  -2.2188,  -3.1953,
          0.5137,   3.3672], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([119304648, 6, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 260 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (362589, 2, 3) (up to 0.01 allowed)
Greatest relative difference: nan at index (362589, 2, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([119304648, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.0117,   0.3164,  55.9375,  -5.4336,  -2.6562,   1.9766,  -3.9844,
         -4.2578,  -2.5723,   0.6421,   0.6060,   1.4277,  -2.6230,   2.8652,
         -8.6328,  -2.2520,  -4.9922,  -2.0293,  -3.3340,   4.5703,   4.6641,
        -56.6562,   1.0215,  -3.0918,   2.7949,  -5.1914,  -6.0352,  -2.3594,
         -7.3359,  -3.9141,   3.1348,   2.7520,  -3.4688,  -6.2734, -10.7109,
         -4.5469,   0.4243,  -3.2344,   0.9868,  -2.3965,  12.2734,  42.0000,
          1.4004,   2.0781,  -6.2578,   3.2520,   0.3604,   0.3713,   0.7085,
         -5.1719, -54.5312,   1.5078,  15.6016,  -2.9785,   3.8926,   7.1562,
         -3.8574,   1.1631,  -5.9883,   9.3359,   4.7148,  -7.2344,   2.7988,
          2.9277,   4.2773,   0.9917,   0.6172,  -2.9102,  -3.9219,   8.3516,
          0.6787,  -2.3438,   5.0547,  -6.1914,   2.0586,  10.2656,   0.2527,
         -6.9258,   1.4883,   8.3438,   3.9766,  -2.3340,   1.7539,   9.4609,
          0.4111, -13.1562, -25.6406,   4.7695,   4.1406,   1.2168,  -3.9180,
         -6.1133,  -7.3711,   5.0469,   0.3979,   8.2188, -12.1172,   1.2168,
         -4.6211,   3.2910], dtype=torch.float16)
DESIRED: (shape=torch.Size([119304648, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.0117,   0.3164,  55.9375,  -5.4336,  -2.6562,   1.9766,  -3.9844,
         -4.2578,  -2.5723,   0.6421,   0.6060,   1.4277,  -2.6230,   2.8652,
         -8.6328,  -2.2520,  -4.9922,  -2.0293,  -3.3340,   4.5703,   4.6641,
        -56.6562,   1.0215,  -3.0918,   2.7949,  -5.1914,  -6.0352,  -2.3594,
         -7.3359,  -3.9141,   3.1348,   2.7520,  -3.4688,  -6.2734, -10.7109,
         -4.5469,   0.4243,  -3.2344,   0.9868,  -2.3965,  12.2734,  42.0000,
          1.4004,   2.0781,  -6.2578,   3.2520,   0.3604,   0.3713,   0.7085,
         -5.1719, -54.5312,   1.5078,  15.6016,  -2.9785,   3.8926,   7.1562,
         -3.8574,   1.1631,  -5.9883,   9.3359,   4.7148,  -7.2344,   2.7988,
          2.9277,   4.2773,   0.9917,   0.6172,  -2.9102,  -3.9219,   8.3516,
          0.6787,  -2.3438,   5.0547,  -6.1914,   2.0586,  10.2656,   0.2527,
         -6.9258,   1.4883,   8.3438,   3.9766,  -2.3340,   1.7539,   9.4609,
          0.4111, -13.1562, -25.6406,   4.7695,   4.1406,   1.2168,  -3.9180,
         -6.1133,  -7.3711,   5.0469,   0.3979,   8.2188, -12.1172,   1.2168,
         -4.6211,   3.2910], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([1431655766, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 277 / 4294967298 (0.0%)
Greatest absolute difference: nan at index (2599704, 2) (up to 0.01 allowed)
Greatest relative difference: nan at index (2599704, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([-3.6348e+00, -8.7109e+00, -2.3887e+00, -3.5352e+00,  3.8184e+00,
         8.3887e-01, -3.5059e+00,  2.8812e+01, -4.8789e+00,  1.5000e+00,
        -8.2656e+00, -3.6484e+00, -1.1414e+01,  2.4551e+00,  9.1016e-01,
         1.2023e+01, -1.3312e+01, -2.2949e+00, -6.5547e+00,  2.2910e+00,
         1.5215e+00, -9.9062e+00, -3.3750e+00, -3.2793e+00,  9.4824e-01,
        -3.3219e+01, -2.3418e+00, -1.5930e+01,  2.1055e+00, -9.1094e+00,
        -8.4688e+00,  3.4043e+00,  2.1777e+00, -2.1094e+00, -5.0586e+00,
         3.0293e+00, -1.6844e+01, -1.9814e+00,  1.4562e+01, -1.9697e+00,
        -2.0703e+01, -3.8457e+00,  2.8555e+00, -3.5996e+00, -1.2797e+01,
        -4.3594e+00, -4.2188e+00, -4.0742e+00,  3.5050e+02, -2.5605e+00,
        -5.5391e+00,  7.1533e-01,  8.6797e+00, -9.6641e+00,  2.5371e+00,
         1.2090e+00,  2.2129e+00, -3.5566e+00, -1.2680e+01, -3.2109e+00,
         6.6699e-01,  5.3711e+00,  1.3883e+01, -3.2168e+00, -3.2285e+00,
        -5.2461e+00,  4.4897e-01, -3.1777e+00,  3.4258e+00,  1.5898e+01,
        -2.5000e+00,  4.1031e+01, -2.6328e+00, -3.2871e+00,  1.2578e+00,
        -3.3359e+00, -2.9629e+00, -1.0398e+01, -3.4199e+00,  4.5996e-01,
        -1.0906e+01,  3.0737e-01,  6.0938e+00, -5.9102e+00,  4.3062e+01,
         4.6211e+00, -3.6450e+02,  5.2930e-01, -2.6766e+01, -2.3359e+00,
         2.8164e+00,  2.7852e+00, -2.0059e+00, -3.2207e+00, -8.6484e+00,
         4.9121e-01,  1.3877e+00, -6.7305e+00, -6.0391e+00, -3.6738e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([-3.6348e+00, -8.7109e+00, -2.3887e+00, -3.5352e+00,  3.8184e+00,
         8.3887e-01, -3.5059e+00,  2.8812e+01, -4.8789e+00,  1.5000e+00,
        -8.2656e+00, -3.6484e+00, -1.1414e+01,  2.4551e+00,  9.1016e-01,
         1.2023e+01, -1.3312e+01, -2.2949e+00, -6.5547e+00,  2.2910e+00,
         1.5215e+00, -9.9062e+00, -3.3750e+00, -3.2793e+00,  9.4824e-01,
        -3.3219e+01, -2.3418e+00, -1.5930e+01,  2.1055e+00, -9.1094e+00,
        -8.4688e+00,  3.4043e+00,  2.1777e+00, -2.1094e+00, -5.0586e+00,
         3.0293e+00, -1.6844e+01, -1.9814e+00,  1.4562e+01, -1.9697e+00,
        -2.0703e+01, -3.8457e+00,  2.8555e+00, -3.5996e+00, -1.2797e+01,
        -4.3594e+00, -4.2188e+00, -4.0742e+00,  3.5050e+02, -2.5605e+00,
        -5.5391e+00,  7.1533e-01,  8.6797e+00, -9.6641e+00,  2.5371e+00,
         1.2090e+00,  2.2129e+00, -3.5566e+00, -1.2680e+01, -3.2109e+00,
         6.6748e-01,  5.3711e+00,  1.3883e+01, -3.2168e+00, -3.2285e+00,
        -5.2461e+00,  4.4897e-01, -3.1777e+00,  3.4258e+00,  1.5898e+01,
        -2.5000e+00,  4.1031e+01, -2.6328e+00, -3.2871e+00,  1.2578e+00,
        -3.3359e+00, -2.9629e+00, -1.0398e+01, -3.4199e+00,  4.5996e-01,
        -1.0906e+01,  3.0737e-01,  6.0938e+00, -5.9102e+00,  4.3062e+01,
         4.6211e+00, -3.6450e+02,  5.2930e-01, -2.6766e+01, -2.3359e+00,
         2.8164e+00,  2.7852e+00, -2.0059e+00, -3.2207e+00, -8.6484e+00,
         4.9121e-01,  1.3877e+00, -6.7305e+00, -6.0391e+00, -3.6738e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([19884108, 6, 6, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 261 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (109720, 5, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (109720, 5, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([19884108, 6, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.9648,  -3.4258,  -8.0234,   0.1477, -15.6406, -22.9844,  -2.3711,
          0.2111,  -8.6641,   5.4961,  -2.0547,   1.7363,   1.3877,   1.2734,
          2.4375, -20.0625,   6.2891, -13.2266,   2.7012,  -8.7812,  -2.3086,
         -8.2734,  32.0312, -23.1094,   4.4258,   4.1445,  -6.2734,   1.6709,
          4.4570,   1.9824,  -2.1113,  59.4688, -26.1406,  -4.2656,  -2.8086,
         -2.7812, -53.2188,  11.8594,  -2.3027, -17.2812, -10.1172, -13.8359,
          4.1836,   2.1016, -14.3594,  32.8125,  -2.5977,  84.6250,  26.8125,
         -2.4219,  -3.4453,  -5.7617,  -2.3438,  -5.4883,  -4.2578,  -6.8711,
         -5.3516,   0.1281,  -3.3359,  -2.2324,   5.3477,  10.4141,   5.5703,
          9.2422,   2.4824, -12.3750,  -2.4531,   7.4062,   1.5420,  -8.7734,
         11.6250,  -2.9453,   3.6074, -32.7188,   8.1172, -61.8125,  -5.6562,
          0.8647,   4.3281,  -2.0352,   0.2395, -28.4531,  -5.7617, -16.4062,
         -3.6094,  -2.2891, -49.9062, -33.1250,  11.6484,  -5.3867,  -6.4258,
          1.9990,   1.1836,   8.1484,   1.1201,   9.8594,  -2.2188,  -3.1953,
          0.5137,   3.3672], dtype=torch.float16)
DESIRED: (shape=torch.Size([19884108, 6, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.9648,  -3.4258,  -8.0234,   0.1477, -15.6406, -22.9844,  -2.3711,
          0.2111,  -8.6641,   5.4961,  -2.0547,   1.7363,   1.3877,   1.2734,
          2.4375, -20.0625,   6.2891, -13.2266,   2.7012,  -8.7812,  -2.3086,
         -8.2734,  32.0312, -23.1094,   4.4258,   4.1445,  -6.2734,   1.6709,
          4.4570,   1.9824,  -2.1113,  59.4688, -26.1406,  -4.2656,  -2.8086,
         -2.7812, -53.2188,  11.8594,  -2.3027, -17.2812, -10.1172, -13.8359,
          4.1836,   2.1016, -14.3594,  32.8125,  -2.5977,  84.6250,  26.8125,
         -2.4219,  -3.4453,  -5.7617,  -2.3438,  -5.4883,  -4.2578,  -6.8711,
         -5.3516,   0.1281,  -3.3359,  -2.2324,   5.3477,  10.4141,   5.5703,
          9.2422,   2.4824, -12.3750,  -2.4531,   7.4062,   1.5420,  -8.7734,
         11.6250,  -2.9453,   3.6074, -32.7188,   8.1172, -61.8125,  -5.6562,
          0.8647,   4.3281,  -2.0352,   0.2395, -28.4531,  -5.7617, -16.4062,
         -3.6094,  -2.2891, -49.9062, -33.1250,  11.6484,  -5.3867,  -6.4258,
          1.9990,   1.1836,   8.1484,   1.1201,   9.8594,  -2.2188,  -3.1953,
          0.5137,   3.3672], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([3, 1431655766],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 277 / 4294967298 (0.0%)
Greatest absolute difference: nan at index (0, 7799114) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 7799114) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-3.6348e+00, -8.7109e+00, -2.3887e+00, -3.5352e+00,  3.8184e+00,
         8.3887e-01, -3.5059e+00,  2.8812e+01, -4.8789e+00,  1.5000e+00,
        -8.2656e+00, -3.6484e+00, -1.1414e+01,  2.4551e+00,  9.1016e-01,
         1.2023e+01, -1.3312e+01, -2.2949e+00, -6.5547e+00,  2.2910e+00,
         1.5215e+00, -9.9062e+00, -3.3750e+00, -3.2793e+00,  9.4824e-01,
        -3.3219e+01, -2.3418e+00, -1.5930e+01,  2.1055e+00, -9.1094e+00,
        -8.4688e+00,  3.4043e+00,  2.1777e+00, -2.1094e+00, -5.0586e+00,
         3.0293e+00, -1.6844e+01, -1.9814e+00,  1.4562e+01, -1.9697e+00,
        -2.0703e+01, -3.8457e+00,  2.8555e+00, -3.5996e+00, -1.2797e+01,
        -4.3594e+00, -4.2188e+00, -4.0742e+00,  3.5050e+02, -2.5605e+00,
        -5.5391e+00,  7.1533e-01,  8.6797e+00, -9.6641e+00,  2.5371e+00,
         1.2090e+00,  2.2129e+00, -3.5566e+00, -1.2680e+01, -3.2109e+00,
         6.6699e-01,  5.3711e+00,  1.3883e+01, -3.2168e+00, -3.2285e+00,
        -5.2461e+00,  4.4897e-01, -3.1777e+00,  3.4258e+00,  1.5898e+01,
        -2.5000e+00,  4.1031e+01, -2.6328e+00, -3.2871e+00,  1.2578e+00,
        -3.3359e+00, -2.9629e+00, -1.0398e+01, -3.4199e+00,  4.5996e-01,
        -1.0906e+01,  3.0737e-01,  6.0938e+00, -5.9102e+00,  4.3062e+01,
         4.6211e+00, -3.6450e+02,  5.2930e-01, -2.6766e+01, -2.3359e+00,
         2.8164e+00,  2.7852e+00, -2.0059e+00, -3.2207e+00, -8.6484e+00,
         4.9121e-01,  1.3877e+00, -6.7305e+00, -6.0391e+00, -3.6738e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-3.6348e+00, -8.7109e+00, -2.3887e+00, -3.5352e+00,  3.8184e+00,
         8.3887e-01, -3.5059e+00,  2.8812e+01, -4.8789e+00,  1.5000e+00,
        -8.2656e+00, -3.6484e+00, -1.1414e+01,  2.4551e+00,  9.1016e-01,
         1.2023e+01, -1.3312e+01, -2.2949e+00, -6.5547e+00,  2.2910e+00,
         1.5215e+00, -9.9062e+00, -3.3750e+00, -3.2793e+00,  9.4824e-01,
        -3.3219e+01, -2.3418e+00, -1.5930e+01,  2.1055e+00, -9.1094e+00,
        -8.4688e+00,  3.4043e+00,  2.1777e+00, -2.1094e+00, -5.0586e+00,
         3.0293e+00, -1.6844e+01, -1.9814e+00,  1.4562e+01, -1.9697e+00,
        -2.0703e+01, -3.8457e+00,  2.8555e+00, -3.5996e+00, -1.2797e+01,
        -4.3594e+00, -4.2188e+00, -4.0742e+00,  3.5050e+02, -2.5605e+00,
        -5.5391e+00,  7.1533e-01,  8.6797e+00, -9.6641e+00,  2.5371e+00,
         1.2090e+00,  2.2129e+00, -3.5566e+00, -1.2680e+01, -3.2109e+00,
         6.6748e-01,  5.3711e+00,  1.3883e+01, -3.2168e+00, -3.2285e+00,
        -5.2461e+00,  4.4897e-01, -3.1777e+00,  3.4258e+00,  1.5898e+01,
        -2.5000e+00,  4.1031e+01, -2.6328e+00, -3.2871e+00,  1.2578e+00,
        -3.3359e+00, -2.9629e+00, -1.0398e+01, -3.4199e+00,  4.5996e-01,
        -1.0906e+01,  3.0737e-01,  6.0938e+00, -5.9102e+00,  4.3062e+01,
         4.6211e+00, -3.6450e+02,  5.2930e-01, -2.6766e+01, -2.3359e+00,
         2.8164e+00,  2.7852e+00, -2.0059e+00, -3.2207e+00, -8.6484e+00,
         4.9121e-01,  1.3877e+00, -6.7305e+00, -6.0391e+00, -3.6738e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([3, 6, 6, 6, 6628036],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 0, 0, 0, 3790578) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 0, 3790578) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 6, 6, 6, 6628036]), dtype=torch.float16)
First 100 elements: tensor([-35.4688,  22.2656,  -2.9199,   6.0625,   9.6172,   2.4863,  11.7734,
         13.9609,   1.2549,  16.6406,   2.4902,   1.8369, -25.9375,   3.4238,
         -2.4121,   3.0000,   3.4590,  84.6250, -14.1484,  -2.4355, -10.5938,
         -8.4688,  -4.1406,  -2.1484,  -2.1152,   0.1696,  10.8984,   7.5586,
         32.5938, -11.8203,  -3.7402,   1.1104,   3.9766,   6.8125, -23.4219,
          6.8711,   1.3984,  -3.6406,  -2.5684,   6.9297,   0.4355,   7.6680,
         -3.1484,  -2.2832,   3.7422,   4.7461,  -2.7402,   0.9844,  -6.2812,
          3.8047,  10.3906,  10.8281,   1.1934,   0.6626,  -3.1543,  -2.5000,
         -2.7598,   4.0898,  -2.9980, -63.1562,   1.2471,   9.2422,  -8.4375,
         19.3125,   1.7998,  -4.9023,  -2.4238,   0.8599, -22.6875,  -7.5156,
         -6.0664,   3.6426,  -3.7402,  -4.9258,   3.3379,  13.6484, -10.4375,
          4.5547,  -4.3672,   1.0381,  -4.4141,   0.7432,   1.5840,   8.4297,
         23.6094,  -8.9375,  -2.7461,  -2.1426,  13.8828,   2.3398,  -4.7695,
          3.7168,   2.0215, 107.5625,   5.5430,  -7.1211,  79.4375,   0.6104,
          1.4385,   4.0273], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 6, 6, 6, 6628036]), dtype=torch.float16)
First 100 elements: tensor([-35.4688,  22.2656,  -2.9199,   6.0625,   9.6172,   2.4863,  11.7734,
         13.9609,   1.2549,  16.6406,   2.4902,   1.8369, -25.9375,   3.4238,
         -2.4121,   3.0000,   3.4590,  84.6250, -14.1484,  -2.4355, -10.5938,
         -8.4688,  -4.1406,  -2.1484,  -2.1152,   0.1696,  10.8984,   7.5586,
         32.5938, -11.8203,  -3.7402,   1.1104,   3.9766,   6.8125, -23.4219,
          6.8711,   1.3984,  -3.6406,  -2.5684,   6.9297,   0.4355,   7.6680,
         -3.1484,  -2.2832,   3.7422,   4.7461,  -2.7402,   0.9844,  -6.2812,
          3.8047,  10.3906,  10.8281,   1.1934,   0.6626,  -3.1543,  -2.5000,
         -2.7598,   4.0898,  -2.9980, -63.1562,   1.2471,   9.2422,  -8.4375,
         19.3125,   1.7998,  -4.9023,  -2.4238,   0.8599, -22.6875,  -7.5156,
         -6.0664,   3.6426,  -3.7402,  -4.9258,   3.3379,  13.6484, -10.4375,
          4.5547,  -4.3672,   1.0381,  -4.4141,   0.7432,   1.5840,   8.4297,
         23.6094,  -8.9375,  -2.7461,  -2.1426,  13.8828,   2.3398,  -4.7695,
          3.7168,   2.0215, 107.5625,   5.5430,  -7.1211,  79.4375,   0.6104,
          1.4385,   4.0273], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([3, 6, 6, 6628036, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 286 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 0, 0, 1508686, 3) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 1508686, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 6, 6, 6628036, 6]), dtype=torch.float16)
First 100 elements: tensor([-2.8086e+00, -5.6211e+00, -2.4375e+00,  1.4712e+02,  6.2734e+00,
         1.8213e+00,  1.9727e+00,  1.1039e+01, -2.0508e+00,  1.5215e+00,
        -1.9961e+00, -2.0453e+01,  2.9224e-01,  4.9561e-01, -8.1484e+00,
        -3.5410e+00,  7.5488e-01, -5.7383e+00, -3.0094e+01,  2.2949e+00,
        -2.0500e+01, -2.1504e+00, -3.7871e+00, -2.4316e+00, -2.9062e+00,
        -3.0938e+00, -4.1211e+00,  1.0576e+00, -2.3926e+00,  6.0039e+00,
        -3.5254e+00, -3.3000e+02, -4.2109e+00,  4.2578e+00, -5.2094e+01,
         7.0469e+00,  1.5950e+02,  8.4326e-01, -2.8266e+01,  3.9844e+00,
        -3.2969e+00, -3.0801e+00, -7.0039e+00, -2.0703e+00,  7.5469e+00,
        -3.2715e+00, -1.0422e+01,  1.8496e+00,  2.4551e+00, -2.1836e+00,
        -2.3789e+00,  9.6045e-01, -4.7344e+00, -2.4570e+00,  4.3688e+01,
         4.7695e+00,  8.5703e+00,  5.1562e-01, -1.0258e+01, -5.1289e+00,
         4.0375e+01,  1.6914e+00, -1.8547e+01, -4.7422e+00, -4.3516e+00,
        -4.6992e+00, -4.3555e+00, -2.7773e+00,  4.5508e+00,  1.8711e+00,
        -6.5352e+00, -9.1500e+01,  1.0758e+01, -3.9766e+00,  5.3125e-01,
        -3.1250e+00,  2.2383e+00,  1.1475e+00,  3.1777e+00, -2.3164e+00,
        -3.9102e+00, -6.2227e+00, -2.3633e+00, -1.0781e+01,  1.0846e-01,
         1.3574e+00, -1.9814e+00, -3.5352e+00, -2.3848e+00, -8.3516e+00,
         9.6797e+00,  2.6836e+00,  8.5859e+00, -3.5137e+00,  3.6255e-01,
         3.6191e+00, -4.9180e+00, -5.8438e+00,  5.9492e+00, -6.3281e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 6, 6, 6628036, 6]), dtype=torch.float16)
First 100 elements: tensor([-2.8086e+00, -5.6211e+00, -2.4375e+00,  1.4712e+02,  6.2734e+00,
         1.8213e+00,  1.9727e+00,  1.1039e+01, -2.0508e+00,  1.5215e+00,
        -1.9961e+00, -2.0453e+01,  2.9224e-01,  4.9561e-01, -8.1484e+00,
        -3.5410e+00,  7.5488e-01, -5.7383e+00, -3.0094e+01,  2.2949e+00,
        -2.0500e+01, -2.1504e+00, -3.7871e+00, -2.4316e+00, -2.9062e+00,
        -3.0938e+00, -4.1211e+00,  1.0576e+00, -2.3926e+00,  6.0039e+00,
        -3.5254e+00, -3.3000e+02, -4.2109e+00,  4.2578e+00, -5.2094e+01,
         7.0469e+00,  1.5950e+02,  8.4326e-01, -2.8266e+01,  3.9844e+00,
        -3.2969e+00, -3.0801e+00, -7.0039e+00, -2.0703e+00,  7.5469e+00,
        -3.2715e+00, -1.0422e+01,  1.8496e+00,  2.4551e+00, -2.1836e+00,
        -2.3789e+00,  9.6045e-01, -4.7344e+00, -2.4570e+00,  4.3688e+01,
         4.7695e+00,  8.5703e+00,  5.1562e-01, -1.0258e+01, -5.1289e+00,
         4.0375e+01,  1.6914e+00, -1.8547e+01, -4.7422e+00, -4.3516e+00,
        -4.6992e+00, -4.3555e+00, -2.7773e+00,  4.5508e+00,  1.8711e+00,
        -6.5352e+00, -9.1500e+01,  1.0758e+01, -3.9766e+00,  5.3125e-01,
        -3.1250e+00,  2.2383e+00,  1.1475e+00,  3.1777e+00, -2.3164e+00,
        -3.9102e+00, -6.2227e+00, -2.3633e+00, -1.0781e+01,  1.0846e-01,
         1.3574e+00, -1.9814e+00, -3.5352e+00, -2.3848e+00, -8.3516e+00,
         9.6797e+00,  2.6836e+00,  8.5859e+00, -3.5137e+00,  3.6255e-01,
         3.6191e+00, -4.9180e+00, -5.8438e+00,  5.9492e+00, -6.3281e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([3, 6, 6628036, 6, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 260 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 0, 362589, 2, 3) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 362589, 2, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 6, 6628036, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.0117,   0.3164,  55.9375,  -5.4336,  -2.6562,   1.9766,  -3.9844,
         -4.2578,  -2.5723,   0.6421,   0.6060,   1.4277,  -2.6230,   2.8652,
         -8.6328,  -2.2520,  -4.9922,  -2.0293,  -3.3340,   4.5703,   4.6641,
        -56.6562,   1.0215,  -3.0918,   2.7949,  -5.1914,  -6.0352,  -2.3594,
         -7.3359,  -3.9141,   3.1348,   2.7520,  -3.4688,  -6.2734, -10.7109,
         -4.5469,   0.4243,  -3.2344,   0.9868,  -2.3965,  12.2734,  42.0000,
          1.4004,   2.0781,  -6.2578,   3.2520,   0.3604,   0.3713,   0.7085,
         -5.1719, -54.5312,   1.5078,  15.6016,  -2.9785,   3.8926,   7.1562,
         -3.8574,   1.1631,  -5.9883,   9.3359,   4.7148,  -7.2344,   2.7988,
          2.9277,   4.2773,   0.9917,   0.6172,  -2.9102,  -3.9219,   8.3516,
          0.6787,  -2.3438,   5.0547,  -6.1914,   2.0586,  10.2656,   0.2527,
         -6.9258,   1.4883,   8.3438,   3.9766,  -2.3340,   1.7539,   9.4609,
          0.4111, -13.1562, -25.6406,   4.7695,   4.1406,   1.2168,  -3.9180,
         -6.1133,  -7.3711,   5.0469,   0.3979,   8.2188, -12.1172,   1.2168,
         -4.6211,   3.2910], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 6, 6628036, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.0117,   0.3164,  55.9375,  -5.4336,  -2.6562,   1.9766,  -3.9844,
         -4.2578,  -2.5723,   0.6421,   0.6060,   1.4277,  -2.6230,   2.8652,
         -8.6328,  -2.2520,  -4.9922,  -2.0293,  -3.3340,   4.5703,   4.6641,
        -56.6562,   1.0215,  -3.0918,   2.7949,  -5.1914,  -6.0352,  -2.3594,
         -7.3359,  -3.9141,   3.1348,   2.7520,  -3.4688,  -6.2734, -10.7109,
         -4.5469,   0.4243,  -3.2344,   0.9868,  -2.3965,  12.2734,  42.0000,
          1.4004,   2.0781,  -6.2578,   3.2520,   0.3604,   0.3713,   0.7085,
         -5.1719, -54.5312,   1.5078,  15.6016,  -2.9785,   3.8926,   7.1562,
         -3.8574,   1.1631,  -5.9883,   9.3359,   4.7148,  -7.2344,   2.7988,
          2.9277,   4.2773,   0.9917,   0.6172,  -2.9102,  -3.9219,   8.3516,
          0.6787,  -2.3438,   5.0547,  -6.1914,   2.0586,  10.2656,   0.2527,
         -6.9258,   1.4883,   8.3438,   3.9766,  -2.3340,   1.7539,   9.4609,
          0.4111, -13.1562, -25.6406,   4.7695,   4.1406,   1.2168,  -3.9180,
         -6.1133,  -7.3711,   5.0469,   0.3979,   8.2188, -12.1172,   1.2168,
         -4.6211,   3.2910], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([3, 6628036, 6, 6, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 54878, 3, 2, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 54878, 3, 2, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 6628036, 6, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ 7.1719e+00,  1.7305e+00, -3.7719e+01, -2.6328e+00,  4.3156e+01,
        -3.2051e+00,  2.7227e+00, -4.8984e+00, -3.2520e+00,  4.4766e+00,
        -3.5293e+00,  4.8750e+00, -4.5586e+00, -6.0547e+00, -5.4570e+00,
         2.4102e+00, -3.6387e+00, -1.2484e+01, -4.0547e+00,  7.8271e-01,
        -7.8281e+00,  2.6641e+00, -4.0664e+00, -8.2969e+00, -8.4531e+00,
         1.0703e+00,  1.4092e+00,  8.8672e+00, -2.8516e+00,  3.8550e+02,
         1.7910e+00, -8.6562e+00, -3.5977e+00, -4.0391e+00,  5.6445e+00,
         8.6797e+00, -5.6484e+00,  3.2300e-01,  2.8555e+00,  2.2438e+01,
         3.9004e+00, -2.4434e+00, -6.5117e+00, -5.5859e+00, -2.6270e+00,
         2.2949e+00, -2.5488e+00,  2.3770e+00,  2.8965e+00,  3.2520e-01,
        -2.4922e+01, -2.1152e+00, -2.1191e+00,  1.8369e+00,  3.3496e+00,
        -5.3281e+00, -2.3672e+00, -6.7578e+00,  1.0352e+01,  8.1562e+00,
        -2.4648e+00,  2.3652e+00, -7.8086e+00, -7.5560e+03, -2.7500e+00,
         2.1641e+00, -6.6133e+00, -2.4766e+00, -4.3164e+00, -2.6582e+00,
         6.1992e+00, -3.1035e+00,  2.3652e+00, -2.9707e+00, -3.0156e+00,
         1.3154e+00, -1.3633e+01, -3.4434e+00,  3.0488e+00,  8.8806e-02,
         8.8906e+00,  5.8867e+00, -5.5898e+00,  8.2227e-01, -4.8594e+00,
        -2.4609e+00,  6.8633e+00, -2.5898e+00,  7.7148e+00,  1.5430e-01,
        -1.8469e+01,  2.3457e+00,  1.1285e-01,  1.9248e+00,  6.8625e+01,
         6.0703e+00, -1.9893e+00, -5.4883e+00,  1.4883e+01, -6.0703e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 6628036, 6, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ 7.1719e+00,  1.7305e+00, -3.7719e+01, -2.6328e+00,  4.3156e+01,
        -3.2051e+00,  2.7227e+00, -4.8984e+00, -3.2520e+00,  4.4766e+00,
        -3.5293e+00,  4.8750e+00, -4.5586e+00, -6.0547e+00, -5.4570e+00,
         2.4102e+00, -3.6387e+00, -1.2484e+01, -4.0547e+00,  7.8271e-01,
        -7.8281e+00,  2.6641e+00, -4.0664e+00, -8.2969e+00, -8.4531e+00,
         1.0703e+00,  1.4092e+00,  8.8672e+00, -2.8516e+00,  3.8550e+02,
         1.7910e+00, -8.6562e+00, -3.5977e+00, -4.0391e+00,  5.6445e+00,
         8.6797e+00, -5.6484e+00,  3.2300e-01,  2.8555e+00,  2.2438e+01,
         3.9004e+00, -2.4434e+00, -6.5117e+00, -5.5859e+00, -2.6270e+00,
         2.2949e+00, -2.5488e+00,  2.3770e+00,  2.8965e+00,  3.2520e-01,
        -2.4922e+01, -2.1152e+00, -2.1191e+00,  1.8369e+00,  3.3496e+00,
        -5.3281e+00, -2.3672e+00, -6.7578e+00,  1.0352e+01,  8.1562e+00,
        -2.4648e+00,  2.3652e+00, -7.8086e+00, -7.5560e+03, -2.7500e+00,
         2.1641e+00, -6.6133e+00, -2.4766e+00, -4.3164e+00, -2.6582e+00,
         6.1992e+00, -3.1035e+00,  2.3652e+00, -2.9707e+00, -3.0156e+00,
         1.3154e+00, -1.3633e+01, -3.4434e+00,  3.0488e+00,  8.8806e-02,
         8.8906e+00,  5.8867e+00, -5.5898e+00,  8.2227e-01, -4.8594e+00,
        -2.4609e+00,  6.8633e+00, -2.5898e+00,  7.7148e+00,  1.5430e-01,
        -1.8469e+01,  2.3457e+00,  1.1285e-01,  1.9248e+00,  6.8625e+01,
         6.0703e+00, -1.9893e+00, -5.4883e+00,  1.4883e+01, -6.0703e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([3314018, 6, 6, 6, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 261 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (18286, 4, 5, 0, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (18286, 4, 5, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3314018, 6, 6, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.9648,  -3.4258,  -8.0234,   0.1477, -15.6406, -22.9844,  -2.3711,
          0.2111,  -8.6641,   5.4961,  -2.0547,   1.7363,   1.3877,   1.2734,
          2.4375, -20.0625,   6.2891, -13.2266,   2.7012,  -8.7812,  -2.3086,
         -8.2734,  32.0312, -23.1094,   4.4258,   4.1445,  -6.2734,   1.6709,
          4.4570,   1.9824,  -2.1113,  59.4688, -26.1406,  -4.2656,  -2.8086,
         -2.7812, -53.2188,  11.8594,  -2.3027, -17.2812, -10.1172, -13.8359,
          4.1836,   2.1016, -14.3594,  32.8125,  -2.5977,  84.6250,  26.8125,
         -2.4219,  -3.4453,  -5.7617,  -2.3438,  -5.4883,  -4.2578,  -6.8711,
         -5.3516,   0.1281,  -3.3359,  -2.2324,   5.3477,  10.4141,   5.5703,
          9.2422,   2.4824, -12.3750,  -2.4531,   7.4062,   1.5420,  -8.7734,
         11.6250,  -2.9453,   3.6074, -32.7188,   8.1172, -61.8125,  -5.6562,
          0.8647,   4.3281,  -2.0352,   0.2395, -28.4531,  -5.7617, -16.4062,
         -3.6094,  -2.2891, -49.9062, -33.1250,  11.6484,  -5.3867,  -6.4258,
          1.9990,   1.1836,   8.1484,   1.1201,   9.8594,  -2.2188,  -3.1953,
          0.5137,   3.3672], dtype=torch.float16)
DESIRED: (shape=torch.Size([3314018, 6, 6, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([ -2.9648,  -3.4258,  -8.0234,   0.1477, -15.6406, -22.9844,  -2.3711,
          0.2111,  -8.6641,   5.4961,  -2.0547,   1.7363,   1.3877,   1.2734,
          2.4375, -20.0625,   6.2891, -13.2266,   2.7012,  -8.7812,  -2.3086,
         -8.2734,  32.0312, -23.1094,   4.4258,   4.1445,  -6.2734,   1.6709,
          4.4570,   1.9824,  -2.1113,  59.4688, -26.1406,  -4.2656,  -2.8086,
         -2.7812, -53.2188,  11.8594,  -2.3027, -17.2812, -10.1172, -13.8359,
          4.1836,   2.1016, -14.3594,  32.8125,  -2.5977,  84.6250,  26.8125,
         -2.4219,  -3.4453,  -5.7617,  -2.3438,  -5.4883,  -4.2578,  -6.8711,
         -5.3516,   0.1281,  -3.3359,  -2.2324,   5.3477,  10.4141,   5.5703,
          9.2422,   2.4824, -12.3750,  -2.4531,   7.4062,   1.5420,  -8.7734,
         11.6250,  -2.9453,   3.6074, -32.7188,   8.1172, -61.8125,  -5.6562,
          0.8647,   4.3281,  -2.0352,   0.2395, -28.4531,  -5.7617, -16.4062,
         -3.6094,  -2.2891, -49.9062, -33.1250,  11.6484,  -5.3867,  -6.4258,
          1.9990,   1.1836,   8.1484,   1.1201,   9.8594,  -2.2188,  -3.1953,
          0.5137,   3.3672], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([6, 119304648, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 277 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 1299852, 2) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 1299852, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 119304648, 6]), dtype=torch.float16)
First 100 elements: tensor([-3.6348e+00, -8.7109e+00, -2.3887e+00, -3.5352e+00,  3.8184e+00,
         8.3887e-01, -3.5059e+00,  2.8812e+01, -4.8789e+00,  1.5000e+00,
        -8.2656e+00, -3.6484e+00, -1.1414e+01,  2.4551e+00,  9.1016e-01,
         1.2023e+01, -1.3312e+01, -2.2949e+00, -6.5547e+00,  2.2910e+00,
         1.5215e+00, -9.9062e+00, -3.3750e+00, -3.2793e+00,  9.4824e-01,
        -3.3219e+01, -2.3418e+00, -1.5930e+01,  2.1055e+00, -9.1094e+00,
        -8.4688e+00,  3.4043e+00,  2.1777e+00, -2.1094e+00, -5.0586e+00,
         3.0293e+00, -1.6844e+01, -1.9814e+00,  1.4562e+01, -1.9697e+00,
        -2.0703e+01, -3.8457e+00,  2.8555e+00, -3.5996e+00, -1.2797e+01,
        -4.3594e+00, -4.2188e+00, -4.0742e+00,  3.5050e+02, -2.5605e+00,
        -5.5391e+00,  7.1533e-01,  8.6797e+00, -9.6641e+00,  2.5371e+00,
         1.2090e+00,  2.2129e+00, -3.5566e+00, -1.2680e+01, -3.2109e+00,
         6.6699e-01,  5.3711e+00,  1.3883e+01, -3.2168e+00, -3.2285e+00,
        -5.2461e+00,  4.4897e-01, -3.1777e+00,  3.4258e+00,  1.5898e+01,
        -2.5000e+00,  4.1031e+01, -2.6328e+00, -3.2871e+00,  1.2578e+00,
        -3.3359e+00, -2.9629e+00, -1.0398e+01, -3.4199e+00,  4.5996e-01,
        -1.0906e+01,  3.0737e-01,  6.0938e+00, -5.9102e+00,  4.3062e+01,
         4.6211e+00, -3.6450e+02,  5.2930e-01, -2.6766e+01, -2.3359e+00,
         2.8164e+00,  2.7852e+00, -2.0059e+00, -3.2207e+00, -8.6484e+00,
         4.9121e-01,  1.3877e+00, -6.7305e+00, -6.0391e+00, -3.6738e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([6, 119304648, 6]), dtype=torch.float16)
First 100 elements: tensor([-3.6348e+00, -8.7109e+00, -2.3887e+00, -3.5352e+00,  3.8184e+00,
         8.3887e-01, -3.5059e+00,  2.8812e+01, -4.8789e+00,  1.5000e+00,
        -8.2656e+00, -3.6484e+00, -1.1414e+01,  2.4551e+00,  9.1016e-01,
         1.2023e+01, -1.3312e+01, -2.2949e+00, -6.5547e+00,  2.2910e+00,
         1.5215e+00, -9.9062e+00, -3.3750e+00, -3.2793e+00,  9.4824e-01,
        -3.3219e+01, -2.3418e+00, -1.5930e+01,  2.1055e+00, -9.1094e+00,
        -8.4688e+00,  3.4043e+00,  2.1777e+00, -2.1094e+00, -5.0586e+00,
         3.0293e+00, -1.6844e+01, -1.9814e+00,  1.4562e+01, -1.9697e+00,
        -2.0703e+01, -3.8457e+00,  2.8555e+00, -3.5996e+00, -1.2797e+01,
        -4.3594e+00, -4.2188e+00, -4.0742e+00,  3.5050e+02, -2.5605e+00,
        -5.5391e+00,  7.1533e-01,  8.6797e+00, -9.6641e+00,  2.5371e+00,
         1.2090e+00,  2.2129e+00, -3.5566e+00, -1.2680e+01, -3.2109e+00,
         6.6748e-01,  5.3711e+00,  1.3883e+01, -3.2168e+00, -3.2285e+00,
        -5.2461e+00,  4.4897e-01, -3.1777e+00,  3.4258e+00,  1.5898e+01,
        -2.5000e+00,  4.1031e+01, -2.6328e+00, -3.2871e+00,  1.2578e+00,
        -3.3359e+00, -2.9629e+00, -1.0398e+01, -3.4199e+00,  4.5996e-01,
        -1.0906e+01,  3.0737e-01,  6.0938e+00, -5.9102e+00,  4.3062e+01,
         4.6211e+00, -3.6450e+02,  5.2930e-01, -2.6766e+01, -2.3359e+00,
         2.8164e+00,  2.7852e+00, -2.0059e+00, -3.2207e+00, -8.6484e+00,
         4.9121e-01,  1.3877e+00, -6.7305e+00, -6.0391e+00, -3.6738e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([6, 19884108, 6, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 105293, 5, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 105293, 5, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 19884108, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([-35.4688,  22.2656,  -2.9199,   6.0625,   9.6172,   2.4863,  11.7734,
         13.9609,   1.2549,  16.6406,   2.4902,   1.8369, -25.9375,   3.4238,
         -2.4121,   3.0000,   3.4590,  84.6250, -14.1484,  -2.4355, -10.5938,
         -8.4688,  -4.1406,  -2.1484,  -2.1152,   0.1696,  10.8984,   7.5586,
         32.5938, -11.8203,  -3.7402,   1.1104,   3.9766,   6.8125, -23.4219,
          6.8711,   1.3984,  -3.6406,  -2.5684,   6.9297,   0.4355,   7.6680,
         -3.1484,  -2.2832,   3.7422,   4.7461,  -2.7402,   0.9844,  -6.2812,
          3.8047,  10.3906,  10.8281,   1.1934,   0.6626,  -3.1543,  -2.5000,
         -2.7598,   4.0898,  -2.9980, -63.1562,   1.2471,   9.2422,  -8.4375,
         19.3125,   1.7998,  -4.9023,  -2.4238,   0.8599, -22.6875,  -7.5156,
         -6.0664,   3.6426,  -3.7402,  -4.9258,   3.3379,  13.6484, -10.4375,
          4.5547,  -4.3672,   1.0381,  -4.4141,   0.7432,   1.5840,   8.4297,
         23.6094,  -8.9375,  -2.7461,  -2.1426,  13.8828,   2.3398,  -4.7695,
          3.7168,   2.0215, 107.5625,   5.5430,  -7.1211,  79.4375,   0.6104,
          1.4385,   4.0273], dtype=torch.float16)
DESIRED: (shape=torch.Size([6, 19884108, 6, 6]), dtype=torch.float16)
First 100 elements: tensor([-35.4688,  22.2656,  -2.9199,   6.0625,   9.6172,   2.4863,  11.7734,
         13.9609,   1.2549,  16.6406,   2.4902,   1.8369, -25.9375,   3.4238,
         -2.4121,   3.0000,   3.4590,  84.6250, -14.1484,  -2.4355, -10.5938,
         -8.4688,  -4.1406,  -2.1484,  -2.1152,   0.1696,  10.8984,   7.5586,
         32.5938, -11.8203,  -3.7402,   1.1104,   3.9766,   6.8125, -23.4219,
          6.8711,   1.3984,  -3.6406,  -2.5684,   6.9297,   0.4355,   7.6680,
         -3.1484,  -2.2832,   3.7422,   4.7461,  -2.7402,   0.9844,  -6.2812,
          3.8047,  10.3906,  10.8281,   1.1934,   0.6626,  -3.1543,  -2.5000,
         -2.7598,   4.0898,  -2.9980, -63.1562,   1.2471,   9.2422,  -8.4375,
         19.3125,   1.7998,  -4.9023,  -2.4238,   0.8599, -22.6875,  -7.5156,
         -6.0664,   3.6426,  -3.7402,  -4.9258,   3.3379,  13.6484, -10.4375,
          4.5547,  -4.3672,   1.0381,  -4.4141,   0.7432,   1.5840,   8.4297,
         23.6094,  -8.9375,  -2.7461,  -2.1426,  13.8828,   2.3398,  -4.7695,
          3.7168,   2.0215, 107.5625,   5.5430,  -7.1211,  79.4375,   0.6104,
          1.4385,   4.0273], dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([6, 6, 119304648],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 286 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 0, 9052119) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 9052119) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 6, 119304648]), dtype=torch.float16)
First 100 elements: tensor([-2.8086e+00, -5.6211e+00, -2.4375e+00,  1.4712e+02,  6.2734e+00,
         1.8213e+00,  1.9727e+00,  1.1039e+01, -2.0508e+00,  1.5215e+00,
        -1.9961e+00, -2.0453e+01,  2.9224e-01,  4.9561e-01, -8.1484e+00,
        -3.5410e+00,  7.5488e-01, -5.7383e+00, -3.0094e+01,  2.2949e+00,
        -2.0500e+01, -2.1504e+00, -3.7871e+00, -2.4316e+00, -2.9062e+00,
        -3.0938e+00, -4.1211e+00,  1.0576e+00, -2.3926e+00,  6.0039e+00,
        -3.5254e+00, -3.3000e+02, -4.2109e+00,  4.2578e+00, -5.2094e+01,
         7.0469e+00,  1.5950e+02,  8.4326e-01, -2.8266e+01,  3.9844e+00,
        -3.2969e+00, -3.0801e+00, -7.0039e+00, -2.0703e+00,  7.5469e+00,
        -3.2715e+00, -1.0422e+01,  1.8496e+00,  2.4551e+00, -2.1836e+00,
        -2.3789e+00,  9.6045e-01, -4.7344e+00, -2.4570e+00,  4.3688e+01,
         4.7695e+00,  8.5703e+00,  5.1562e-01, -1.0258e+01, -5.1289e+00,
         4.0375e+01,  1.6914e+00, -1.8547e+01, -4.7422e+00, -4.3516e+00,
        -4.6992e+00, -4.3555e+00, -2.7773e+00,  4.5508e+00,  1.8711e+00,
        -6.5352e+00, -9.1500e+01,  1.0758e+01, -3.9766e+00,  5.3125e-01,
        -3.1250e+00,  2.2383e+00,  1.1475e+00,  3.1777e+00, -2.3164e+00,
        -3.9102e+00, -6.2227e+00, -2.3633e+00, -1.0781e+01,  1.0846e-01,
         1.3574e+00, -1.9814e+00, -3.5352e+00, -2.3848e+00, -8.3516e+00,
         9.6797e+00,  2.6836e+00,  8.5859e+00, -3.5137e+00,  3.6255e-01,
         3.6191e+00, -4.9180e+00, -5.8438e+00,  5.9492e+00, -6.3281e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([6, 6, 119304648]), dtype=torch.float16)
First 100 elements: tensor([-2.8086e+00, -5.6211e+00, -2.4375e+00,  1.4712e+02,  6.2734e+00,
         1.8213e+00,  1.9727e+00,  1.1039e+01, -2.0508e+00,  1.5215e+00,
        -1.9961e+00, -2.0453e+01,  2.9224e-01,  4.9561e-01, -8.1484e+00,
        -3.5410e+00,  7.5488e-01, -5.7383e+00, -3.0094e+01,  2.2949e+00,
        -2.0500e+01, -2.1504e+00, -3.7871e+00, -2.4316e+00, -2.9062e+00,
        -3.0938e+00, -4.1211e+00,  1.0576e+00, -2.3926e+00,  6.0039e+00,
        -3.5254e+00, -3.3000e+02, -4.2109e+00,  4.2578e+00, -5.2094e+01,
         7.0469e+00,  1.5950e+02,  8.4326e-01, -2.8266e+01,  3.9844e+00,
        -3.2969e+00, -3.0801e+00, -7.0039e+00, -2.0703e+00,  7.5469e+00,
        -3.2715e+00, -1.0422e+01,  1.8496e+00,  2.4551e+00, -2.1836e+00,
        -2.3789e+00,  9.6045e-01, -4.7344e+00, -2.4570e+00,  4.3688e+01,
         4.7695e+00,  8.5703e+00,  5.1562e-01, -1.0258e+01, -5.1289e+00,
         4.0375e+01,  1.6914e+00, -1.8547e+01, -4.7422e+00, -4.3516e+00,
        -4.6992e+00, -4.3555e+00, -2.7773e+00,  4.5508e+00,  1.8711e+00,
        -6.5352e+00, -9.1500e+01,  1.0758e+01, -3.9766e+00,  5.3125e-01,
        -3.1250e+00,  2.2383e+00,  1.1475e+00,  3.1777e+00, -2.3164e+00,
        -3.9102e+00, -6.2227e+00, -2.3633e+00, -1.0781e+01,  1.0846e-01,
         1.3574e+00, -1.9814e+00, -3.5352e+00, -2.3848e+00, -8.3516e+00,
         9.6797e+00,  2.6836e+00,  8.5859e+00, -3.5137e+00,  3.6255e-01,
         3.6191e+00, -4.9180e+00, -5.8438e+00,  5.9492e+00, -6.3281e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([6, 6, 19884108, 6],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 0, 1975628, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 1975628, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 6, 19884108, 6]), dtype=torch.float16)
First 100 elements: tensor([ 7.1719e+00,  1.7305e+00, -3.7719e+01, -2.6328e+00,  4.3156e+01,
        -3.2051e+00,  2.7227e+00, -4.8984e+00, -3.2520e+00,  4.4766e+00,
        -3.5293e+00,  4.8750e+00, -4.5586e+00, -6.0547e+00, -5.4570e+00,
         2.4102e+00, -3.6387e+00, -1.2484e+01, -4.0547e+00,  7.8271e-01,
        -7.8281e+00,  2.6641e+00, -4.0664e+00, -8.2969e+00, -8.4531e+00,
         1.0703e+00,  1.4092e+00,  8.8672e+00, -2.8516e+00,  3.8550e+02,
         1.7910e+00, -8.6562e+00, -3.5977e+00, -4.0391e+00,  5.6445e+00,
         8.6797e+00, -5.6484e+00,  3.2300e-01,  2.8555e+00,  2.2438e+01,
         3.9004e+00, -2.4434e+00, -6.5117e+00, -5.5859e+00, -2.6270e+00,
         2.2949e+00, -2.5488e+00,  2.3770e+00,  2.8965e+00,  3.2520e-01,
        -2.4922e+01, -2.1152e+00, -2.1191e+00,  1.8369e+00,  3.3496e+00,
        -5.3281e+00, -2.3672e+00, -6.7578e+00,  1.0352e+01,  8.1562e+00,
        -2.4648e+00,  2.3652e+00, -7.8086e+00, -7.5560e+03, -2.7500e+00,
         2.1641e+00, -6.6133e+00, -2.4766e+00, -4.3164e+00, -2.6582e+00,
         6.1992e+00, -3.1035e+00,  2.3652e+00, -2.9707e+00, -3.0156e+00,
         1.3154e+00, -1.3633e+01, -3.4434e+00,  3.0488e+00,  8.8806e-02,
         8.8906e+00,  5.8867e+00, -5.5898e+00,  8.2227e-01, -4.8594e+00,
        -2.4609e+00,  6.8633e+00, -2.5898e+00,  7.7148e+00,  1.5430e-01,
        -1.8469e+01,  2.3457e+00,  1.1285e-01,  1.9248e+00,  6.8625e+01,
         6.0703e+00, -1.9893e+00, -5.4883e+00,  1.4883e+01, -6.0703e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([6, 6, 19884108, 6]), dtype=torch.float16)
First 100 elements: tensor([ 7.1719e+00,  1.7305e+00, -3.7719e+01, -2.6328e+00,  4.3156e+01,
        -3.2051e+00,  2.7227e+00, -4.8984e+00, -3.2520e+00,  4.4766e+00,
        -3.5293e+00,  4.8750e+00, -4.5586e+00, -6.0547e+00, -5.4570e+00,
         2.4102e+00, -3.6387e+00, -1.2484e+01, -4.0547e+00,  7.8271e-01,
        -7.8281e+00,  2.6641e+00, -4.0664e+00, -8.2969e+00, -8.4531e+00,
         1.0703e+00,  1.4092e+00,  8.8672e+00, -2.8516e+00,  3.8550e+02,
         1.7910e+00, -8.6562e+00, -3.5977e+00, -4.0391e+00,  5.6445e+00,
         8.6797e+00, -5.6484e+00,  3.2300e-01,  2.8555e+00,  2.2438e+01,
         3.9004e+00, -2.4434e+00, -6.5117e+00, -5.5859e+00, -2.6270e+00,
         2.2949e+00, -2.5488e+00,  2.3770e+00,  2.8965e+00,  3.2520e-01,
        -2.4922e+01, -2.1152e+00, -2.1191e+00,  1.8369e+00,  3.3496e+00,
        -5.3281e+00, -2.3672e+00, -6.7578e+00,  1.0352e+01,  8.1562e+00,
        -2.4648e+00,  2.3652e+00, -7.8086e+00, -7.5560e+03, -2.7500e+00,
         2.1641e+00, -6.6133e+00, -2.4766e+00, -4.3164e+00, -2.6582e+00,
         6.1992e+00, -3.1035e+00,  2.3652e+00, -2.9707e+00, -3.0156e+00,
         1.3154e+00, -1.3633e+01, -3.4434e+00,  3.0488e+00,  8.8806e-02,
         8.8906e+00,  5.8867e+00, -5.5898e+00,  8.2227e-01, -4.8594e+00,
        -2.4609e+00,  6.8633e+00, -2.5898e+00,  7.7148e+00,  1.5430e-01,
        -1.8469e+01,  2.3457e+00,  1.1285e-01,  1.9248e+00,  6.8625e+01,
         6.0703e+00, -1.9893e+00, -5.4883e+00,  1.4883e+01, -6.0703e+00],
       dtype=torch.float16)
[accuracy error] paddle.digamma(x=Tensor([6, 6, 6, 19884108],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 260 / 4294967328 (0.0%)
Greatest absolute difference: nan at index (0, 0, 0, 13053219) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 13053219) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 6, 6, 19884108]), dtype=torch.float16)
First 100 elements: tensor([ -2.0117,   0.3164,  55.9375,  -5.4336,  -2.6562,   1.9766,  -3.9844,
         -4.2578,  -2.5723,   0.6421,   0.6060,   1.4277,  -2.6230,   2.8652,
         -8.6328,  -2.2520,  -4.9922,  -2.0293,  -3.3340,   4.5703,   4.6641,
        -56.6562,   1.0215,  -3.0918,   2.7949,  -5.1914,  -6.0352,  -2.3594,
         -7.3359,  -3.9141,   3.1348,   2.7520,  -3.4688,  -6.2734, -10.7109,
         -4.5469,   0.4243,  -3.2344,   0.9868,  -2.3965,  12.2734,  42.0000,
          1.4004,   2.0781,  -6.2578,   3.2520,   0.3604,   0.3713,   0.7085,
         -5.1719, -54.5312,   1.5078,  15.6016,  -2.9785,   3.8926,   7.1562,
         -3.8574,   1.1631,  -5.9883,   9.3359,   4.7148,  -7.2344,   2.7988,
          2.9277,   4.2773,   0.9917,   0.6172,  -2.9102,  -3.9219,   8.3516,
          0.6787,  -2.3438,   5.0547,  -6.1914,   2.0586,  10.2656,   0.2527,
         -6.9258,   1.4883,   8.3438,   3.9766,  -2.3340,   1.7539,   9.4609,
          0.4111, -13.1562, -25.6406,   4.7695,   4.1406,   1.2168,  -3.9180,
         -6.1133,  -7.3711,   5.0469,   0.3979,   8.2188, -12.1172,   1.2168,
         -4.6211,   3.2910], dtype=torch.float16)
DESIRED: (shape=torch.Size([6, 6, 6, 19884108]), dtype=torch.float16)
First 100 elements: tensor([ -2.0117,   0.3164,  55.9375,  -5.4336,  -2.6562,   1.9766,  -3.9844,
         -4.2578,  -2.5723,   0.6421,   0.6060,   1.4277,  -2.6230,   2.8652,
         -8.6328,  -2.2520,  -4.9922,  -2.0293,  -3.3340,   4.5703,   4.6641,
        -56.6562,   1.0215,  -3.0918,   2.7949,  -5.1914,  -6.0352,  -2.3594,
         -7.3359,  -3.9141,   3.1348,   2.7520,  -3.4688,  -6.2734, -10.7109,
         -4.5469,   0.4243,  -3.2344,   0.9868,  -2.3965,  12.2734,  42.0000,
          1.4004,   2.0781,  -6.2578,   3.2520,   0.3604,   0.3713,   0.7085,
         -5.1719, -54.5312,   1.5078,  15.6016,  -2.9785,   3.8926,   7.1562,
         -3.8574,   1.1631,  -5.9883,   9.3359,   4.7148,  -7.2344,   2.7988,
          2.9277,   4.2773,   0.9917,   0.6172,  -2.9102,  -3.9219,   8.3516,
          0.6787,  -2.3438,   5.0547,  -6.1914,   2.0586,  10.2656,   0.2527,
         -6.9258,   1.4883,   8.3438,   3.9766,  -2.3340,   1.7539,   9.4609,
          0.4111, -13.1562, -25.6406,   4.7695,   4.1406,   1.2168,  -3.9180,
         -6.1133,  -7.3711,   5.0469,   0.3979,   8.2188, -12.1172,   1.2168,
         -4.6211,   3.2910], dtype=torch.float16)
[accuracy error] paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 14957.0859375 but got 0.0.
Absolute difference: 14957.0859375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([14957.0859])
[accuracy error] paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([190141782, 1, 3, 1],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 19500.94140625 but got 0.0.
Absolute difference: 19500.94140625 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([19500.9414])
[accuracy error] paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 17826.068359375 but got 0.0.
Absolute difference: 17826.068359375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([17826.0684])
[accuracy error] paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 190141782, 3, 1],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 19501.18359375 but got 0.0.
Absolute difference: 19501.18359375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([19501.1836])
[accuracy error] paddle.dist(Tensor([2, 2, 285212673, 2],"float32"), Tensor([1, 1, 285212673, 1],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 19500.7421875 but got 0.0.
Absolute difference: 19500.7421875 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([19500.7422])
[accuracy error] paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 190141782],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 16888.634765625 but got 0.0.
Absolute difference: 16888.634765625 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([16888.6348])
[accuracy error] paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 14956.9970703125 but got 0.0.
Absolute difference: 14956.9970703125 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([14956.9971])
[accuracy error] paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 27536.0 but got 0.0.
Absolute difference: 27536.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([27536.], dtype=torch.float16)
[accuracy error] paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), p=4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 129.25 but got 0.0.
Absolute difference: 129.25 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([129.2500], dtype=torch.float16)
[accuracy error] paddle.fft.ifftshift(x=Tensor([4, 67108865, 4, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 125 / 4294967360 (0.0%)
Greatest absolute difference: 0.49755859375 at index (3, 67108862, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (3, 33554429, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 67108865, 4, 4]), dtype=torch.float16)
First 100 elements: tensor([-0.3835,  0.2937,  0.4551, -0.2024,  0.2876, -0.0769,  0.2454, -0.4995,
        -0.1033,  0.0191, -0.2405, -0.0422, -0.4307, -0.2421,  0.4841,  0.0987,
        -0.2717,  0.4912,  0.0489, -0.0407,  0.4834,  0.3313, -0.3801,  0.4509,
         0.0656,  0.0256,  0.3621,  0.4382,  0.1243, -0.3135,  0.1610,  0.3242,
         0.1256, -0.0177,  0.1926, -0.0183,  0.0939, -0.4658,  0.4626,  0.3740,
        -0.3132, -0.0575,  0.2559, -0.0800, -0.2815,  0.2081,  0.2925, -0.4294,
        -0.2620,  0.2061, -0.1536,  0.4263,  0.3010,  0.1720, -0.3850,  0.1296,
        -0.0180, -0.2581, -0.3079, -0.0283,  0.4810, -0.0559,  0.1925,  0.2664,
        -0.0023, -0.4009, -0.3542, -0.0735, -0.2893,  0.4656, -0.4189,  0.0111,
        -0.2961, -0.3171,  0.1554, -0.2030,  0.2416,  0.4607, -0.3044,  0.0754,
         0.4099, -0.1053, -0.2634,  0.1486, -0.3281, -0.1356, -0.2793,  0.4104,
        -0.2959, -0.3213, -0.2954, -0.4497, -0.1470,  0.4150, -0.0214, -0.4434,
         0.3101,  0.2883,  0.0207,  0.4683], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 67108865, 4, 4]), dtype=torch.float16)
First 100 elements: tensor([-0.3835,  0.2937,  0.4551, -0.2024,  0.2876, -0.0769,  0.2454, -0.4995,
        -0.1033,  0.0191, -0.2405, -0.0422, -0.4307, -0.2421,  0.4841,  0.0987,
        -0.2717,  0.4912,  0.0489, -0.0407,  0.4834,  0.3313, -0.3801,  0.4509,
         0.0656,  0.0256,  0.3621,  0.4382,  0.1243, -0.3135,  0.1610,  0.3242,
         0.1256, -0.0177,  0.1926, -0.0183,  0.0939, -0.4658,  0.4626,  0.3740,
        -0.3132, -0.0575,  0.2559, -0.0800, -0.2815,  0.2081,  0.2925, -0.4294,
        -0.2620,  0.2061, -0.1536,  0.4263,  0.3010,  0.1720, -0.3850,  0.1296,
        -0.0180, -0.2581, -0.3079, -0.0283,  0.4810, -0.0559,  0.1925,  0.2664,
        -0.0023, -0.4009, -0.3542, -0.0735, -0.2893,  0.4656, -0.4189,  0.0111,
        -0.2961, -0.3171,  0.1554, -0.2030,  0.2416,  0.4607, -0.3044,  0.0754,
         0.4099, -0.1053, -0.2634,  0.1486, -0.3281, -0.1356, -0.2793,  0.4104,
        -0.2959, -0.3213, -0.2954, -0.4497, -0.1470,  0.4150, -0.0214, -0.4434,
         0.3101,  0.2883,  0.0207,  0.4683], dtype=torch.float16)
[accuracy error] paddle.fft.ifftshift(x=Tensor([4294967297],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4294967297 (0.0%)
Greatest absolute difference: 0.4951171875 at index (4294967296,) (up to 0.01 allowed)
Greatest relative difference: inf at index (4294967296,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([ 0.3953,  0.0371,  0.3508, -0.0673, -0.2472,  0.2183,  0.3145, -0.3604,
        -0.2302,  0.2910,  0.3169, -0.1648,  0.0351,  0.3904, -0.3608, -0.3738,
         0.0784,  0.1884,  0.2159, -0.2607, -0.3013,  0.1317, -0.3079,  0.2559,
         0.2185, -0.0831, -0.0263, -0.2073,  0.2104,  0.4788,  0.3403, -0.0404,
        -0.0834, -0.1304,  0.3171, -0.2971, -0.0358,  0.1752, -0.1683,  0.2026,
         0.4790, -0.3279,  0.0119,  0.3894, -0.2605,  0.0234, -0.2030,  0.1104,
        -0.0608, -0.3025,  0.1324, -0.4519, -0.1874,  0.2576,  0.4614,  0.1393,
         0.4534, -0.4292, -0.4260,  0.1676,  0.1561, -0.1066, -0.4453,  0.2812,
        -0.1860,  0.0604, -0.0304, -0.1555, -0.3167, -0.2837,  0.0788, -0.4065,
         0.2147,  0.1626,  0.2096, -0.4951,  0.0713, -0.2356,  0.4473, -0.4541,
         0.1788, -0.1830, -0.3586, -0.0690,  0.3018,  0.1118,  0.4834, -0.1694,
         0.0350,  0.3818, -0.0660, -0.1918,  0.3530, -0.1312, -0.1235, -0.2218,
        -0.0241, -0.2749,  0.1422,  0.4495], dtype=torch.float16)
DESIRED: (shape=torch.Size([4294967297]), dtype=torch.float16)
First 100 elements: tensor([ 0.3953,  0.0371,  0.3508, -0.0673, -0.2472,  0.2183,  0.3145, -0.3604,
        -0.2302,  0.2910,  0.3169, -0.1648,  0.0351,  0.3904, -0.3608, -0.3738,
         0.0784,  0.1884,  0.2159, -0.2607, -0.3013,  0.1317, -0.3079,  0.2559,
         0.2185, -0.0831, -0.0263, -0.2073,  0.2104,  0.4788,  0.3403, -0.0404,
        -0.0834, -0.1304,  0.3171, -0.2971, -0.0358,  0.1752, -0.1683,  0.2026,
         0.4790, -0.3279,  0.0119,  0.3894, -0.2605,  0.0234, -0.2030,  0.1104,
        -0.0608, -0.3025,  0.1324, -0.4519, -0.1874,  0.2576,  0.4614,  0.1393,
         0.4534, -0.4292, -0.4260,  0.1676,  0.1561, -0.1066, -0.4453,  0.2812,
        -0.1860,  0.0604, -0.0304, -0.1555, -0.3167, -0.2837,  0.0788, -0.4065,
         0.2147,  0.1626,  0.2096, -0.4951,  0.0713, -0.2356,  0.4473, -0.4541,
         0.1788, -0.1830, -0.3586, -0.0690,  0.3018,  0.1118,  0.4834, -0.1694,
         0.0350,  0.3818, -0.0660, -0.1918,  0.3530, -0.1312, -0.1235, -0.2218,
        -0.0241, -0.2749,  0.1422,  0.4495], dtype=torch.float16)
[accuracy error] paddle.fft.ifftshift(x=Tensor([536870913, 4, 2],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 4294967304 (0.0%)
Greatest absolute difference: 0.47607421875 at index (536870912, 1, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([536870913, 4, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.0932,  0.4758, -0.3411, -0.4172,  0.2773,  0.3748, -0.4438,  0.1541,
        -0.0799, -0.2661,  0.1934, -0.2588,  0.0723,  0.0855, -0.1154, -0.3115,
         0.3926, -0.4807,  0.0663,  0.2456, -0.0489,  0.4810,  0.2993, -0.2452,
        -0.4028, -0.2185, -0.0591, -0.2725, -0.1016,  0.4585, -0.1866,  0.0299,
         0.3298, -0.3896,  0.4849, -0.1207,  0.2328, -0.2126,  0.0102,  0.2505,
        -0.4893,  0.0311,  0.1543,  0.3054,  0.1670, -0.0787,  0.3105,  0.4385,
        -0.1029, -0.2135,  0.1128, -0.4827, -0.3086, -0.1221, -0.3291, -0.2108,
         0.0060,  0.3057,  0.0841, -0.4099, -0.3765, -0.0941, -0.1649,  0.2712,
        -0.2029, -0.0389, -0.3096,  0.4321,  0.4021,  0.1742,  0.3853,  0.1550,
        -0.0319, -0.0483, -0.2155, -0.3909,  0.2517,  0.1946,  0.2529,  0.1395,
        -0.1089,  0.3108,  0.2493,  0.3574, -0.1073,  0.0882,  0.3374, -0.3513,
        -0.2705, -0.4675,  0.1146,  0.1959, -0.0660, -0.0060, -0.1630, -0.2336,
         0.0448,  0.1108,  0.3953,  0.0589], dtype=torch.float16)
DESIRED: (shape=torch.Size([536870913, 4, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.0932,  0.4758, -0.3411, -0.4172,  0.2773,  0.3748, -0.4438,  0.1541,
        -0.0799, -0.2661,  0.1934, -0.2588,  0.0723,  0.0855, -0.1154, -0.3115,
         0.3926, -0.4807,  0.0663,  0.2456, -0.0489,  0.4810,  0.2993, -0.2452,
        -0.4028, -0.2185, -0.0591, -0.2725, -0.1016,  0.4585, -0.1866,  0.0299,
         0.3298, -0.3896,  0.4849, -0.1207,  0.2328, -0.2126,  0.0102,  0.2505,
        -0.4893,  0.0311,  0.1543,  0.3054,  0.1670, -0.0787,  0.3105,  0.4385,
        -0.1029, -0.2135,  0.1128, -0.4827, -0.3086, -0.1221, -0.3291, -0.2108,
         0.0060,  0.3057,  0.0841, -0.4099, -0.3765, -0.0941, -0.1649,  0.2712,
        -0.2029, -0.0389, -0.3096,  0.4321,  0.4021,  0.1742,  0.3853,  0.1550,
        -0.0319, -0.0483, -0.2155, -0.3909,  0.2517,  0.1946,  0.2529,  0.1395,
        -0.1089,  0.3108,  0.2493,  0.3574, -0.1073,  0.0882,  0.3374, -0.3513,
        -0.2705, -0.4675,  0.1146,  0.1959, -0.0660, -0.0060, -0.1630, -0.2336,
         0.0448,  0.1108,  0.3953,  0.0589], dtype=torch.float16)
[accuracy error] paddle.fft.ifftshift(x=Tensor([53687092, 5, 4, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 79 / 4294967360 (0.0%)
Greatest absolute difference: 0.498779296875 at index (53687091, 4, 1, 3) (up to 0.01 allowed)
Greatest relative difference: inf at index (53687091, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([53687092, 5, 4, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.3894,  0.1797,  0.4253, -0.4778, -0.0055, -0.3413,  0.0063, -0.4580,
        -0.1399,  0.3472,  0.2957,  0.3210, -0.4346,  0.3840,  0.0949, -0.2646,
        -0.2556, -0.3406, -0.1538, -0.3831,  0.4768, -0.1470,  0.4380,  0.4138,
         0.1487, -0.0127, -0.4338,  0.4272,  0.3015, -0.0094, -0.3926,  0.2318,
         0.0672, -0.2761, -0.1410, -0.0554, -0.1824,  0.2347,  0.3599,  0.0787,
         0.1503, -0.2020,  0.0253, -0.2722, -0.2837,  0.0422, -0.3750, -0.3157,
        -0.1665, -0.0662, -0.1884, -0.0239, -0.3835, -0.1715,  0.4602,  0.4412,
        -0.0864,  0.4373,  0.0757, -0.4565,  0.1443, -0.3872,  0.3406,  0.2369,
         0.1300, -0.0580,  0.0263,  0.3982, -0.1284, -0.0372, -0.4038, -0.1703,
         0.3342,  0.2871, -0.0925, -0.1046,  0.0946,  0.2438, -0.0040, -0.1274,
        -0.4985,  0.1364, -0.2783,  0.3718,  0.4026, -0.4731,  0.4836, -0.1918,
        -0.3501, -0.1490,  0.3242, -0.0044,  0.0735,  0.4202,  0.1143,  0.0389,
         0.1853, -0.2649,  0.2389, -0.1024], dtype=torch.float16)
DESIRED: (shape=torch.Size([53687092, 5, 4, 4]), dtype=torch.float16)
First 100 elements: tensor([ 0.3894,  0.1797,  0.4253, -0.4778, -0.0055, -0.3413,  0.0063, -0.4580,
        -0.1399,  0.3472,  0.2957,  0.3210, -0.4346,  0.3840,  0.0949, -0.2646,
        -0.2556, -0.3406, -0.1538, -0.3831,  0.4768, -0.1470,  0.4380,  0.4138,
         0.1487, -0.0127, -0.4338,  0.4272,  0.3015, -0.0094, -0.3926,  0.2318,
         0.0672, -0.2761, -0.1410, -0.0554, -0.1824,  0.2347,  0.3599,  0.0787,
         0.1503, -0.2020,  0.0253, -0.2722, -0.2837,  0.0422, -0.3750, -0.3157,
        -0.1665, -0.0662, -0.1884, -0.0239, -0.3835, -0.1715,  0.4602,  0.4412,
        -0.0864,  0.4373,  0.0757, -0.4565,  0.1443, -0.3872,  0.3406,  0.2369,
         0.1300, -0.0580,  0.0263,  0.3982, -0.1284, -0.0372, -0.4038, -0.1703,
         0.3342,  0.2871, -0.0925, -0.1046,  0.0946,  0.2438, -0.0040, -0.1274,
        -0.4985,  0.1364, -0.2783,  0.3718,  0.4026, -0.4731,  0.4836, -0.1918,
        -0.3501, -0.1490,  0.3242, -0.0044,  0.0735,  0.4202,  0.1143,  0.0389,
         0.1853, -0.2649,  0.2389, -0.1024], dtype=torch.float16)
[accuracy error] paddle.full_like(Tensor([1, 1, 1, 2281701379],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 1, 1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([1, 1, 2281701379, 1],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 1, 2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([1, 1048576, 4096],"float32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1048576, 4096]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 1048576, 4096]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([1, 2281701379, 1, 1],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 2281701379, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int32"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 10 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int32"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 11 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int32"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 15 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 2 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 4 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), -1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 2 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), 255, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 255 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([1, 2281701379],"int64"), 98, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 98 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int64)
First 100 elements: tensor([98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98])
[accuracy error] paddle.full_like(Tensor([1, 3, 760567127],"float32"), fill_value=2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 3, 760567127]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 3, 760567127]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([1, 300, 7605672],"float32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701600 / 2281701600 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 300, 7605672]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 300, 7605672]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([1, 557057, 4096],"float32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281705472 / 2281705472 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 557057, 4096]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 557057, 4096]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([1, 760567127, 3],"float32"), fill_value=2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([10, 228170138],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 228170138]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([10, 228170138]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([10, 228170138],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 228170138]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([10, 228170138]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([10, 228170138],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 228170138]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([10, 228170138]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([1024, 2228225],"float32"), 0.334840825619673, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702400 / 2281702400 (100.0%)
Greatest absolute difference: 0.3348408341407776 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1024, 2228225]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1024, 2228225]), dtype=torch.float32)
First 100 elements: tensor([0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348])
[accuracy error] paddle.full_like(Tensor([106106, 21504],"int32"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703424 / 2281703424 (100.0%)
Greatest absolute difference: 10 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([106106, 21504]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([106106, 21504]), dtype=torch.int32)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([106106, 21504],"int32"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703424 / 2281703424 (100.0%)
Greatest absolute difference: 15 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([106106, 21504]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([106106, 21504]), dtype=torch.int32)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1073742, 2125],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701750 / 2281701750 (100.0%)
Greatest absolute difference: 4 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073742, 2125]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1073742, 2125]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1086525, 2100],"int32"), 80, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702500 / 2281702500 (100.0%)
Greatest absolute difference: 80 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1086525, 2100]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1086525, 2100]), dtype=torch.int32)
First 100 elements: tensor([80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([114085069, 20],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([114085069, 20]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([114085069, 20]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([114085069, 20],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([114085069, 20]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([114085069, 20]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([1140850690, 2],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([1140850690, 2],"float32"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 0.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000])
[accuracy error] paddle.full_like(Tensor([1140850690, 2],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([1140850690, 2],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1140850690, 2]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([1140850690, 2],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1140850690, 2]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([1140850690, 2]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([11641334, 4, 7, 7],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701464 / 2281701464 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([11641334, 4, 7, 7]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([11641334, 4, 7, 7]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([13, 175515491],"int64"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701383 / 2281701383 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 175515491]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([13, 175515491]), dtype=torch.int64)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
[accuracy error] paddle.full_like(Tensor([13, 3134206, 56],"int64"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701968 / 2281701968 (100.0%)
Greatest absolute difference: 15 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 3134206, 56]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([13, 3134206, 56]), dtype=torch.int64)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15])
[accuracy error] paddle.full_like(Tensor([13, 3134206, 56],"int64"), 31, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701968 / 2281701968 (100.0%)
Greatest absolute difference: 31 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 3134206, 56]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([13, 3134206, 56]), dtype=torch.int64)
First 100 elements: tensor([31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31])
[accuracy error] paddle.full_like(Tensor([13, 3581949, 7, 7],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701513 / 2281701513 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 3581949, 7, 7]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([13, 3581949, 7, 7]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([13, 4, 6268411, 7],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701604 / 2281701604 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 4, 6268411, 7]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([13, 4, 6268411, 7]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([13, 4, 7, 6268411],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701604 / 2281701604 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 4, 7, 6268411]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([13, 4, 7, 6268411]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([13, 56, 3134206],"int64"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701968 / 2281701968 (100.0%)
Greatest absolute difference: 15 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 56, 3134206]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([13, 56, 3134206]), dtype=torch.int64)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15])
[accuracy error] paddle.full_like(Tensor([13, 56, 3134206],"int64"), 31, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701968 / 2281701968 (100.0%)
Greatest absolute difference: 31 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([13, 56, 3134206]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([13, 56, 3134206]), dtype=torch.int64)
First 100 elements: tensor([31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31])
[accuracy error] paddle.full_like(Tensor([134217729, 17],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701393 / 2281701393 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217729, 17]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([134217729, 17]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([148, 5, 3083381],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701940 / 2281701940 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([148, 5, 3083381]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([148, 5, 3083381]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([148, 5, 3083381],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701940 / 2281701940 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([148, 5, 3083381]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([148, 5, 3083381]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([148, 5, 3083381],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701940 / 2281701940 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([148, 5, 3083381]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([148, 5, 3083381]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([148, 5138968, 3],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701792 / 2281701792 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([148, 5138968, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([148, 5138968, 3]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([148, 5138968, 3],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701792 / 2281701792 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([148, 5138968, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([148, 5138968, 3]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([148, 5138968, 3],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701792 / 2281701792 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([148, 5138968, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([148, 5138968, 3]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([152113426, 5, 3],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701390 / 2281701390 (100.0%)
Greatest absolute difference: nan at index (0, 0, 2) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([152113426, 5, 3]), dtype=torch.float32)
First 100 elements: tensor([1.0650e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
               nan,        nan, 8.3866e-41, 0.0000e+00,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan, 6.1701e-41, 0.0000e+00,
        5.3587e-41, 0.0000e+00,        nan,        nan, 5.8480e-41, 0.0000e+00,
        2.6414e-42, 0.0000e+00, 2.2202e-41, 0.0000e+00,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        5.5360e-41, 0.0000e+00, 3.4755e-41, 0.0000e+00,        nan,        nan,
               nan,        nan, 3.7231e-41, 0.0000e+00,        nan,        nan,
        4.1890e-41, 0.0000e+00,        nan,        nan, 5.1317e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 6.4425e-41, 0.0000e+00,
        7.6469e-42, 0.0000e+00,        nan,        nan, 5.9657e-41, 0.0000e+00,
               nan,        nan, 3.7412e-41, 0.0000e+00, 1.2987e-41, 0.0000e+00,
        3.3812e-41, 0.0000e+00, 7.8896e-41, 0.0000e+00, 2.7443e-41, 0.0000e+00,
        8.3896e-41, 0.0000e+00,        nan,        nan])
DESIRED: (shape=torch.Size([152113426, 5, 3]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([152113426, 5, 3],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701390 / 2281701390 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([152113426, 5, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([152113426, 5, 3]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([152113426, 5, 3],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701390 / 2281701390 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([152113426, 5, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([152113426, 5, 3]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([16, 142606337],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701392 / 2281701392 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 142606337]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([16, 142606337]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([16, 142606337],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281692740 / 2281701392 (100.0%)
Greatest absolute difference: 65539 at index (0, 4332) (up to 0.01 allowed)
Greatest relative difference: 16384.75 at index (0, 4332) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 142606337]), dtype=torch.int32)
First 100 elements: tensor([  7600,      0, -59333,     -1, -54661,     -1, -21579,     -1,  -9855,
            -1,   -120,     -1, -41514,     -1, -25859,     -1,   -259,     -1,
         -7493,     -1,  59849,      0, -37213,     -1, -14971,     -1, -52837,
            -1, -63369,     -1, -40138,     -1, -27714,     -1,  44031,      0,
         38241,      0, -60345,     -1,  41733,      0,   1885,      0,  15844,
             0, -44628,     -1, -45244,     -1, -37197,     -1, -62695,     -1,
         39506,      0,  24802,      0, -52990,     -1, -13701,     -1,  26569,
             0,  -4179,     -1,  29894,      0, -32223,     -1,  36621,      0,
        -36420,     -1, -41366,     -1,  45975,      0,   5457,      0, -12875,
            -1,  42573,      0, -11522,     -1,  26698,      0,   9268,      0,
         24129,      0,  56302,      0,  19584,      0,  59870,      0, -15155,
            -1], dtype=torch.int32)
DESIRED: (shape=torch.Size([16, 142606337]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([16, 142606337],"int32"), 80, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701392 / 2281701392 (100.0%)
Greatest absolute difference: 80 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 142606337]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([16, 142606337]), dtype=torch.int32)
First 100 elements: tensor([80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([17, 134217729],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701393 / 2281701393 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([17, 134217729]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([17, 134217729]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([178956971, 3, 4],"float64"), fill_value=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483652 / 2147483652 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([178956971, 3, 4]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([178956971, 3, 4]), dtype=torch.float64)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
[accuracy error] paddle.full_like(Tensor([1857, 300, 4096],"float32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281881600 / 2281881600 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1857, 300, 4096]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1857, 300, 4096]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([188633, 12096],"int32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281704768 / 2281704768 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([188633, 12096]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([188633, 12096]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([188633, 12096],"int32"), 80, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281704768 / 2281704768 (100.0%)
Greatest absolute difference: 80 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([188633, 12096]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([188633, 12096]), dtype=torch.int32)
First 100 elements: tensor([80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([1948, 1171305],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702140 / 2281702140 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1948, 1171305]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1948, 1171305]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([1948, 1171305],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702140 / 2281702140 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1948, 1171305]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1948, 1171305]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([1948, 1171305],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702140 / 2281702140 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1948, 1171305]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1948, 1171305]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([2, 1, 1, 1140850690],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 1, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1, 1, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1, 10, 114085069],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 10, 114085069]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1, 10, 114085069]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1, 114085069, 10],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 114085069, 10]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1, 114085069, 10]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1, 162978670, 7],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 162978670, 7]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1, 162978670, 7]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1, 190141782, 6],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 190141782, 6]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1, 190141782, 6]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1073741825],"float64"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483650 / 2147483650 (100.0%)
Greatest absolute difference: 0.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1073741825]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 1073741825]), dtype=torch.float64)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000], dtype=torch.float64)
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), -10.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 10.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([-10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10.])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 0.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), 100.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 100.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100.])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), 2.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=nan, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: nan at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), -1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), 151643, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 151643 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 2 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), 255, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 255 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([2, 1140850690],"int64"), 98, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 98 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.int64)
First 100 elements: tensor([98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98])
[accuracy error] paddle.full_like(Tensor([2, 11408507, 10, 10],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701400 / 2281701400 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 11408507, 10, 10]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 11408507, 10, 10]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 162978670, 1, 7],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 162978670, 1, 7]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 162978670, 1, 7]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2, 190141782, 1, 6],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 190141782, 1, 6]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2, 190141782, 1, 6]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([20, 114085069],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([20, 114085069]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([20, 114085069]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([20, 114085069],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([20, 114085069]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([20, 114085069]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([205393, 11109],"int32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281710837 / 2281710837 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([205393, 11109]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([205393, 11109]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([205393, 11109],"int32"), 80, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281710837 / 2281710837 (100.0%)
Greatest absolute difference: 80 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([205393, 11109]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([205393, 11109]), dtype=torch.int32)
First 100 elements: tensor([80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([2147483649, 1],"float64"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483649 / 2147483649 (100.0%)
Greatest absolute difference: 0.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2147483649, 1]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([2147483649, 1]), dtype=torch.float64)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000], dtype=torch.float64)
[accuracy error] paddle.full_like(Tensor([2147483649, 1],"float64"), 1.7976931348623157e+308, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483649 / 2147483649 (100.0%)
Greatest absolute difference: 1.7976931348623157e+308 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2147483649, 1]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([2147483649, 1]), dtype=torch.float64)
First 100 elements: tensor([1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308,
        1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308, 1.7977e+308],
       dtype=torch.float64)
[accuracy error] paddle.full_like(Tensor([219, 10418728],"int32"), 1.0, None, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701432 / 2281701432 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([219, 10418728]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([219, 10418728]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([221848, 10285],"int32"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281706680 / 2281706680 (100.0%)
Greatest absolute difference: 11 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([221848, 10285]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([221848, 10285]), dtype=torch.int32)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([2228225, 1024],"float32"), 0.334840825619673, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702400 / 2281702400 (100.0%)
Greatest absolute difference: 0.3348408341407776 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2228225, 1024]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2228225, 1024]), dtype=torch.float32)
First 100 elements: tensor([0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348, 0.3348,
        0.3348])
[accuracy error] paddle.full_like(Tensor([224489, 10164],"int32"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281706196 / 2281706196 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([224489, 10164]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([224489, 10164]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([224489, 10164],"int32"), 80, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281706196 / 2281706196 (100.0%)
Greatest absolute difference: 80 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([224489, 10164]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([224489, 10164]), dtype=torch.int32)
First 100 elements: tensor([80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([2281701379, 1, 1, 1],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379, 1, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"float32"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 0.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"float32"), fill_value=2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"float32"), fill_value=6, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 6.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6.])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), -1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 151643, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 151643 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643, 151643,
        151643])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 2 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 255, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 255 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([2281701379, 1],"int64"), 98, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 98 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.int64)
First 100 elements: tensor([98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 0.5 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=1023, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1023.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.,
        1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023., 1023.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=1183, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1183.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.,
        1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183., 1183.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=16383, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 16383.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383., 16383.,
        16383.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=19, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 19.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,
        19., 19.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 2.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=31, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 31.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,
        31., 31.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=35967, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 35967.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967., 35967.,
        35967.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=36, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 36.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,
        36., 36.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 5.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=511, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 511.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511., 511.,
        511., 511., 511., 511.])
[accuracy error] paddle.full_like(Tensor([2281701379],"float32"), fill_value=7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 7.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,
        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,
        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,
        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,
        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,
        7., 7., 7., 7., 7., 7., 7., 7., 7., 7.])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 10 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 11 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 12, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 12 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 12, 12, 12])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 13, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 13 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 14, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 14 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 15 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 2 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 3 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 4 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 5 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 6, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 6 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
        6, 6, 6, 6])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 7 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 8, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 8 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
        8, 8, 8, 8])
[accuracy error] paddle.full_like(Tensor([2281701379],"int64"), 9, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 9 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int64)
First 100 elements: tensor([9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
        9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
        9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
        9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
        9, 9, 9, 9])
[accuracy error] paddle.full_like(Tensor([228170138, 10],"int64"), 3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([228170138, 10]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([228170138, 10]), dtype=torch.int64)
First 100 elements: tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3])
[accuracy error] paddle.full_like(Tensor([228170138, 10],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([228170138, 10]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([228170138, 10]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([22817014, 1, 10, 10],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701400 / 2281701400 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([22817014, 1, 10, 10]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([22817014, 1, 10, 10]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([253522376, 3, 3],"float32"), fill_value=2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([253522376, 3, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([253522376, 3, 3]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([265933, 8580],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281705140 / 2281705140 (100.0%)
Greatest absolute difference: 4 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([265933, 8580]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([265933, 8580]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([271632, 8400],"int32"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281708800 / 2281708800 (100.0%)
Greatest absolute difference: 2 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([271632, 8400]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([271632, 8400]), dtype=torch.int32)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([285213, 8000],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281704000 / 2281704000 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([285213, 8000]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([285213, 8000]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([3, 760567127],"float32"), -1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 760567127]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([3, 760567127]), dtype=torch.float32)
First 100 elements: tensor([-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1.])
[accuracy error] paddle.full_like(Tensor([3, 760567127],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 760567127]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([3, 760567127]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([3, 760567127],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 760567127]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([3, 760567127]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([325957340, 1, 1, 7],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([325957340, 1, 1, 7]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([325957340, 1, 1, 7]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([325957340, 7],"int64"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 15 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([325957340, 7]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([325957340, 7]), dtype=torch.int64)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15])
[accuracy error] paddle.full_like(Tensor([35651585, 64],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701440 / 2281701440 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([35651585, 64]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([35651585, 64]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([356516, 6400],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702400 / 2281702400 (100.0%)
Greatest absolute difference: 4 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([356516, 6400]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([356516, 6400]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([380283564, 1, 1, 6],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([380283564, 1, 1, 6]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([380283564, 1, 1, 6]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([4, 536870913],"float64"), fill_value=6, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483652 / 2147483652 (100.0%)
Greatest absolute difference: 6.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 536870913]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([4, 536870913]), dtype=torch.float64)
First 100 elements: tensor([6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6.], dtype=torch.float64)
[accuracy error] paddle.full_like(Tensor([4, 570425345],"float32"), fill_value=6, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 6.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 570425345]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([4, 570425345]), dtype=torch.float32)
First 100 elements: tensor([6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6.])
[accuracy error] paddle.full_like(Tensor([4, 7, 76695845],"float64"), fill_value=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483660 / 2147483660 (100.0%)
Greatest absolute difference: 5.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 7, 76695845]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([4, 7, 76695845]), dtype=torch.float64)
First 100 elements: tensor([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,
        5., 5., 5., 5., 5., 5., 5., 5., 5., 5.], dtype=torch.float64)
[accuracy error] paddle.full_like(Tensor([419431, 5440],"int32"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281704640 / 2281704640 (100.0%)
Greatest absolute difference: 11 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([419431, 5440]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([419431, 5440]), dtype=torch.int32)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([456340276, 5],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([456340276, 5]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([456340276, 5]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([476447, 4789],"int32"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281704683 / 2281704683 (100.0%)
Greatest absolute difference: 11 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([476447, 4789]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([476447, 4789]), dtype=torch.int32)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([547828, 4165],"int32"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703620 / 2281703620 (100.0%)
Greatest absolute difference: 11 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([547828, 4165]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([547828, 4165]), dtype=torch.int32)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([570425345, 4],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([570425345, 4],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([570425345, 4],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([570425345, 4]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([57042535, 40],"float32"), -1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701400 / 2281701400 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([57042535, 40]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([57042535, 40]), dtype=torch.float32)
First 100 elements: tensor([-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.,
        -1., -1.])
[accuracy error] paddle.full_like(Tensor([57042535, 40],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701400 / 2281701400 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([57042535, 40]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([57042535, 40]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([59417, 38402],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281731634 / 2281731634 (100.0%)
Greatest absolute difference: 4 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([59417, 38402]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([59417, 38402]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([6, 380283564],"int64"), 2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 2 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 380283564]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([6, 380283564]), dtype=torch.int64)
First 100 elements: tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2])
[accuracy error] paddle.full_like(Tensor([6, 380283564],"int64"), 255, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 255 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 380283564]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([6, 380283564]), dtype=torch.int64)
First 100 elements: tensor([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255])
[accuracy error] paddle.full_like(Tensor([6, 380283564],"int64"), 98, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 98 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([6, 380283564]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([6, 380283564]), dtype=torch.int64)
First 100 elements: tensor([98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
        98, 98, 98, 98, 98, 98, 98, 98, 98, 98])
[accuracy error] paddle.full_like(Tensor([61906, 36858],"int32"), 4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281731348 / 2281731348 (100.0%)
Greatest absolute difference: 4 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([61906, 36858]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([61906, 36858]), dtype=torch.int32)
First 100 elements: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([634159, 3598],"int32"), 11, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281704082 / 2281704082 (100.0%)
Greatest absolute difference: 11 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([634159, 3598]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([634159, 3598]), dtype=torch.int32)
First 100 elements: tensor([11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
        11, 11, 11, 11, 11, 11, 11, 11, 11, 11], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([67908, 33600],"int32"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281708800 / 2281708800 (100.0%)
Greatest absolute difference: 10 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([67908, 33600]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([67908, 33600]), dtype=torch.int32)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([7, 325957340],"int64"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 15 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([7, 325957340]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([7, 325957340]), dtype=torch.int64)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15])
[accuracy error] paddle.full_like(Tensor([727584, 56, 56],"int64"), 15, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703424 / 2281703424 (100.0%)
Greatest absolute difference: 15 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([727584, 56, 56]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([727584, 56, 56]), dtype=torch.int64)
First 100 elements: tensor([15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
        15, 15, 15, 15, 15, 15, 15, 15, 15, 15])
[accuracy error] paddle.full_like(Tensor([727584, 56, 56],"int64"), 31, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703424 / 2281703424 (100.0%)
Greatest absolute difference: 31 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([727584, 56, 56]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([727584, 56, 56]), dtype=torch.int64)
First 100 elements: tensor([31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
        31, 31, 31, 31, 31, 31, 31, 31, 31, 31])
[accuracy error] paddle.full_like(Tensor([75245, 30324],"int32"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281729380 / 2281729380 (100.0%)
Greatest absolute difference: 10 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([75245, 30324]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([75245, 30324]), dtype=torch.int32)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), -10.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 10.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10.,
        -10., -10., -10., -10.])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), -3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: nan at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([3.1152e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan, 7.5111e-41, 0.0000e+00, 7.2736e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 5.5788e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 8.8528e-41, 0.0000e+00,
               nan,        nan,        nan,        nan,        nan,        nan,
               nan,        nan, 6.7593e-41, 0.0000e+00,        nan,        nan,
        7.6828e-41, 0.0000e+00, 3.8893e-41, 0.0000e+00,        nan,        nan,
               nan,        nan, 3.7521e-41, 0.0000e+00, 7.7909e-41, 0.0000e+00,
        6.1783e-42, 0.0000e+00, 8.5635e-41, 0.0000e+00,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        5.7429e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        7.3106e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan, 8.3920e-41, 0.0000e+00,
               nan,        nan, 6.6761e-41, 0.0000e+00,        nan,        nan,
        9.8385e-42, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan, 8.2412e-41, 0.0000e+00])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38,
        -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38, -3.4028e+38])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), -math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([-inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf, -inf,
        -inf, -inf, -inf, -inf])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), 0.5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 0.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), 1.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: nan at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([3.1152e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan, 7.5111e-41, 0.0000e+00, 7.2736e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 5.5788e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 8.8528e-41, 0.0000e+00,
               nan,        nan,        nan,        nan,        nan,        nan,
               nan,        nan, 6.7593e-41, 0.0000e+00,        nan,        nan,
        7.6828e-41, 0.0000e+00, 3.8893e-41, 0.0000e+00,        nan,        nan,
               nan,        nan, 3.7521e-41, 0.0000e+00, 7.7909e-41, 0.0000e+00,
        6.1783e-42, 0.0000e+00, 8.5635e-41, 0.0000e+00,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        5.7429e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        7.3106e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan, 8.3920e-41, 0.0000e+00,
               nan,        nan, 6.6761e-41, 0.0000e+00,        nan,        nan,
        9.8385e-42, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan, 8.2412e-41, 0.0000e+00])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), 100.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 100.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100., 100.,
        100., 100., 100., 100.])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), 2.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 2.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
        2., 2., 2., 2., 2., 2., 2., 2., 2., 2.])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), 3.4028234663852886e+38, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 3.4028234663852886e+38 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38,
        3.4028e+38, 3.4028e+38, 3.4028e+38, 3.4028e+38])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), fill_value=math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: nan at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([3.1152e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan, 7.5111e-41, 0.0000e+00, 7.2736e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 5.5788e-41, 0.0000e+00,
               nan,        nan,        nan,        nan, 8.8528e-41, 0.0000e+00,
               nan,        nan,        nan,        nan,        nan,        nan,
               nan,        nan, 6.7593e-41, 0.0000e+00,        nan,        nan,
        7.6828e-41, 0.0000e+00, 3.8893e-41, 0.0000e+00,        nan,        nan,
               nan,        nan, 3.7521e-41, 0.0000e+00, 7.7909e-41, 0.0000e+00,
        6.1783e-42, 0.0000e+00, 8.5635e-41, 0.0000e+00,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        5.7429e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan,        nan,        nan,
        7.3106e-41, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan,        nan,        nan, 8.3920e-41, 0.0000e+00,
               nan,        nan, 6.6761e-41, 0.0000e+00,        nan,        nan,
        9.8385e-42, 0.0000e+00,        nan,        nan,        nan,        nan,
               nan,        nan, 8.2412e-41, 0.0000e+00])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), fill_value=nan, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: nan at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"float32"), math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.float32)
First 100 elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf])
[accuracy error] paddle.full_like(Tensor([760567127, 3],"int64"), 7, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701381 / 2281701381 (100.0%)
Greatest absolute difference: 7 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.int64)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.int64)
First 100 elements: tensor([7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
        7, 7, 7, 7])
[accuracy error] paddle.full_like(Tensor([83837, 27216],"int32"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281707792 / 2281707792 (100.0%)
Greatest absolute difference: 10 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([83837, 27216]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([83837, 27216]), dtype=torch.int32)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([897955, 2541],"int32"), 80, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703655 / 2281703655 (100.0%)
Greatest absolute difference: 80 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([897955, 2541]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([897955, 2541]), dtype=torch.int32)
First 100 elements: tensor([80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
        80, 80, 80, 80, 80, 80, 80, 80, 80, 80], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([93991, 24276],"int32"), 10, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281725516 / 2281725516 (100.0%)
Greatest absolute difference: 10 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([93991, 24276]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([93991, 24276]), dtype=torch.int32)
First 100 elements: tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
        10, 10, 10, 10, 10, 10, 10, 10, 10, 10], dtype=torch.int32)
[accuracy error] paddle.full_like(Tensor([9834920, 232],"int32"), 1.0, None, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701440 / 2281701440 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([9834920, 232]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([9834920, 232]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.full_like(x=Tensor([2281701379],"bool"), fill_value=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.full_like(x=Tensor([2281701379],"float32"), fill_value=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.full_like(x=Tensor([2281701379],"int32"), fill_value=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.inner(x=Tensor([2, 5, 3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 900 (7.1%)
Greatest absolute difference: 5.25 at index (0, 2, 1, 1, 0, 4) (up to 0.01 allowed)
Greatest relative difference: 0.22265625 at index (0, 0, 2, 0, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 5, 3, 3, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([       inf,   260.2500,   153.3750, -1229.0000,  1439.0000,   -84.5625,
         -463.7500,  -243.6250,   128.6250,  1120.0000,  1036.0000, -1390.0000,
         -749.5000,  -953.5000,   -60.5000,  1027.0000,   497.5000,   428.7500,
          565.5000,  -357.2500,   935.0000,  -109.6875,  1034.0000,  -820.0000,
         1126.0000,   129.8750,  -271.7500,  1149.0000,  -654.5000,   146.0000,
          260.2500,        inf,  1826.0000,    52.4375, -1037.0000,   921.5000,
          626.0000,   830.0000,  1911.0000,  1045.0000, -1005.0000,  -136.1250,
         2404.0000,  -258.2500,  -811.0000,  1670.0000,  -599.0000,  1420.0000,
         -506.5000,   500.5000,   254.2500, -1270.0000,   452.0000,   368.0000,
         -587.0000,   766.5000,   704.5000,   505.2500, -1140.0000, -1513.0000,
          153.3750,  1826.0000,        inf,  -818.5000,  -217.7500, -1209.0000,
            3.0781, -1865.0000,  -806.0000,  -298.5000,  -486.5000, -1175.0000,
         -373.7500, -2540.0000,   394.2500, -1707.0000,  2488.0000,  -114.4375,
          -57.4375,  -606.5000, -1354.0000,    64.4375,  -257.5000,  -176.7500,
         -374.0000,  1322.0000,   613.0000,  -871.0000,   858.5000,   916.5000,
        -1229.0000,    52.4375,  -818.5000,        inf,  1059.0000,   114.0000,
          353.0000,   -77.5000, -1309.0000,   707.5000], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 5, 3, 3, 2, 5]), dtype=torch.float16)
First 100 elements: tensor([        inf,  2.6050e+02,  1.5300e+02, -1.2240e+03,  1.4360e+03,
        -8.4188e+01, -4.6450e+02, -2.4500e+02,  1.2900e+02,  1.1200e+03,
         1.0380e+03, -1.3840e+03, -7.4650e+02, -9.5150e+02, -6.0625e+01,
         1.0280e+03,  4.9950e+02,  4.2850e+02,  5.6600e+02, -3.5750e+02,
         9.3700e+02, -1.0700e+02,  1.0350e+03, -8.2150e+02,  1.1260e+03,
         1.2950e+02, -2.7200e+02,  1.1520e+03, -6.5600e+02,  1.4562e+02,
         2.6050e+02,         inf,  1.8280e+03,  5.1031e+01, -1.0360e+03,
         9.2250e+02,  6.2750e+02,  8.2950e+02,  1.9140e+03,  1.0460e+03,
        -1.0055e+03, -1.3425e+02,  2.4000e+03, -2.5800e+02, -8.1000e+02,
         1.6690e+03, -5.9850e+02,  1.4200e+03, -5.0750e+02,  4.9875e+02,
         2.5350e+02, -1.2700e+03,  4.4950e+02,  3.6900e+02, -5.8850e+02,
         7.6300e+02,  7.0750e+02,  5.0350e+02, -1.1390e+03, -1.5090e+03,
         1.5300e+02,  1.8280e+03,         inf, -8.1700e+02, -2.1712e+02,
        -1.2080e+03,  2.5176e+00, -1.8620e+03, -8.0550e+02, -2.9950e+02,
        -4.8525e+02, -1.1760e+03, -3.7200e+02, -2.5440e+03,  3.9400e+02,
        -1.7120e+03,  2.4940e+03, -1.1444e+02, -5.9031e+01, -6.0700e+02,
        -1.3550e+03,  6.3812e+01, -2.5825e+02, -1.7775e+02, -3.7300e+02,
         1.3250e+03,  6.1200e+02, -8.7150e+02,  8.5700e+02,  9.1600e+02,
        -1.2240e+03,  5.1031e+01, -8.1700e+02,         inf,  1.0600e+03,
         1.1519e+02,  3.5400e+02, -7.8500e+01, -1.3120e+03,  7.0750e+02],
       dtype=torch.float16)
[accuracy error] paddle.isreal(Tensor([134217728, 32],"bfloat16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([134217728, 32],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1082156990 / 4294967296 (25.2%)
Greatest absolute difference: 1 at index (0, 6) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([ True,  True,  True,  True,  True,  True, False, False,  True,  True,
        False, False,  True,  True, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True, False, False,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
DESIRED: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([134217728, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4290752070 / 4294967296 (99.9%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([134217728, 32],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([134217728, 32],"int16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4290183034 / 4294967296 (99.9%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([134217728, 32],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([134217728, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([1431655765, 3],"bfloat16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967295 / 4294967295 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([1431655765, 3],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967295 / 4294967295 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([1431655765, 3],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11186097 / 4294967295 (0.3%)
Greatest absolute difference: 1 at index (110, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (110, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
DESIRED: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([1431655765, 3],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967295 / 4294967295 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([1431655765, 3],"int16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4290183034 / 4294967295 (99.9%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([1431655765, 3],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967295 / 4294967295 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([1431655765, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 1073741825],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483650 / 2147483650 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1073741825]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([2, 1073741825]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 1073741825],"int64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483650 / 2147483650 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1073741825]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([2, 1073741825]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 1140850690],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4472467 / 2281701380 (0.2%)
Greatest absolute difference: 1 at index (0, 78) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 78) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1140850690]), dtype=torch.bool)
First 100 elements: tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
DESIRED: (shape=torch.Size([2, 1140850690]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 2147483648],"bfloat16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 2147483648],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16747220 / 4294967296 (0.4%)
Greatest absolute difference: 1 at index (0, 141) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 141) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
DESIRED: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 2147483648],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1614855083 / 4294967296 (37.6%)
Greatest absolute difference: 1 at index (0, 10) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 10) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
        False, False, False, False, False, False,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
DESIRED: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 2147483648],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([2, 2147483648]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([2, 2147483648],"int16"), ) 
 Comparing

TensorLikePair(
    id=(),
    actual=tensor([[ True,  True,  True,  ...,  True, False,  True],
        [ True,  True,  True,  ...,  True,  True,  True]]),
    expected=tensor([[True, True, True,  ..., True, True, True],
        [True, True, True,  ..., True, True, True]]),
    rtol=0.01,
    atol=0.01,
    equal_nan=True,
    check_device=True,
    check_dtype=True,
    check_layout=True,
    check_stride=False,
)

resulted in the unexpected exception above. If you are a user and see this message during normal operation please file an issue at https://github.com/pytorch/pytorch/issues. If you are a developer and working on the comparison functions, please except the previous error and raise an expressive `ErrorMeta` instead.
[accuracy error] paddle.isreal(Tensor([2, 2147483648],"int32"), ) 
 Comparing

TensorLikePair(
    id=(),
    actual=tensor([[False, False, False,  ..., False, False, False],
        [False, False, False,  ..., False, False, False]]),
    expected=tensor([[True, True, True,  ..., True, True, True],
        [True, True, True,  ..., True, True, True]]),
    rtol=0.01,
    atol=0.01,
    equal_nan=True,
    check_device=True,
    check_dtype=True,
    check_layout=True,
    check_stride=False,
)

resulted in the unexpected exception above. If you are a user and see this message during normal operation please file an issue at https://github.com/pytorch/pytorch/issues. If you are a developer and working on the comparison functions, please except the previous error and raise an expressive `ErrorMeta` instead.
[accuracy error] paddle.isreal(Tensor([64, 33554433],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483712 / 2147483712 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 33554433]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([64, 33554433]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([64, 33554433],"int64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483712 / 2147483712 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 33554433]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([64, 33554433]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([64, 67108864],"bfloat16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([64, 67108864],"bool"), ) 
 Comparing

TensorLikePair(
    id=(),
    actual=tensor([[ True,  True, False,  ...,  True,  True,  True],
        [ True,  True, False,  ..., False, False, False],
        [ True,  True, False,  ...,  True,  True,  True],
        ...,
        [ True,  True,  True,  ...,  True,  True,  True],
        [ True,  True, False,  ...,  True,  True,  True],
        [ True,  True,  True,  ...,  True,  True,  True]]),
    expected=tensor([[True, True, True,  ..., True, True, True],
        [True, True, True,  ..., True, True, True],
        [True, True, True,  ..., True, True, True],
        ...,
        [True, True, True,  ..., True, True, True],
        [True, True, True,  ..., True, True, True],
        [True, True, True,  ..., True, True, True]]),
    rtol=0.01,
    atol=0.01,
    equal_nan=True,
    check_device=True,
    check_dtype=True,
    check_layout=True,
    check_stride=False,
)

resulted in the unexpected exception above. If you are a user and see this message during normal operation please file an issue at https://github.com/pytorch/pytorch/issues. If you are a developer and working on the comparison functions, please except the previous error and raise an expressive `ErrorMeta` instead.
[accuracy error] paddle.isreal(Tensor([64, 67108864],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29432997 / 4294967296 (0.7%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([False,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True, False,  True,  True,  True])
DESIRED: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([64, 67108864],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([64, 67108864],"int16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1614833395 / 4294967296 (37.6%)
Greatest absolute difference: 1 at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([ True,  True, False, False, False, False, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True, False, False, False, False, False, False,
         True,  True, False, False, False, False, False, False,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True, False, False,
        False, False, False, False,  True,  True, False, False, False, False,
        False, False,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False, False, False, False, False, False,  True,  True,
        False, False, False, False, False, False,  True,  True, False, False])
DESIRED: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([64, 67108864],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([64, 67108864]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([67108865, 32],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483680 / 2147483680 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([67108865, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([67108865, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([67108865, 32],"int64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483680 / 2147483680 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([67108865, 32]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([67108865, 32]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([715827883, 3],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483649 / 2147483649 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([715827883, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([715827883, 3],"int64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483649 / 2147483649 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([715827883, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.isreal(Tensor([760567127, 3],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15635210 / 2281701381 (0.7%)
Greatest absolute difference: 1 at index (10, 2) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (10, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([760567127, 3]), dtype=torch.bool)
First 100 elements: tensor([ True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True, False,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True,
         True,  True,  True,  True,  True,  True,  True,  True,  True,  True])
DESIRED: (shape=torch.Size([760567127, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 6039798.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.2647058963775635 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216.])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014.])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=1.5, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 706.513671875 at index (8, 1) (up to 0.01 allowed)
Greatest relative difference: 0.03235740214586258 at index (8, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([21131.2637, 21132.9551, 21135.6035, 21130.9258, 21127.3730, 21130.7148,
        21128.7637, 21134.3379, 21132.7441, 21129.4062, 21135.4766, 21133.1348,
        21131.2227, 21134.4297, 21132.2637, 21132.4043, 21129.5059, 21135.7227,
        21132.2598, 21129.5547, 21129.2969, 21129.9336, 21129.5859, 21133.0977,
        21134.2637, 21131.7344, 21131.9453, 21129.1758, 21132.9902, 21130.1211,
        21133.4844, 21128.9199, 21131.0684, 21126.7441, 21135.6074, 21131.9453,
        21131.3691, 21131.2500, 21132.8438, 21132.8594, 21133.8184, 21135.4062,
        21131.7578, 21131.3789, 21133.3770, 21132.3418, 21128.2852, 21131.6465,
        21133.5820, 21133.0391, 21129.1973, 21131.8477, 21128.1934, 21131.0684,
        21131.5234, 21137.2500, 21136.5879, 21132.9316, 21130.0723, 21134.4648,
        21132.5840, 21128.3125, 21135.4609, 21134.4062, 21129.8789, 21131.3750,
        21130.5527, 21132.7480, 21130.6230, 21126.5410, 21130.5859, 21130.7051,
        21131.9746, 21129.8770, 21131.6719, 21132.9316, 21134.1777, 21129.6836,
        21131.5352, 21132.3359, 21126.5664, 21128.1699, 21132.9062, 21131.7754,
        21132.1211, 21133.5195, 21133.8125, 21132.9395, 21132.4102, 21133.6797,
        21133.3340, 21131.9824, 21136.9473, 21135.4473, 21133.0449, 21132.0508,
        21132.9961, 21134.0176, 21132.5039, 21130.5996])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([21837.0859, 21837.5879, 21839.0391, 21837.3652, 21831.6895, 21835.0703,
        21833.3828, 21838.5430, 21836.5938, 21834.2129, 21839.9961, 21836.6445,
        21833.4609, 21838.5742, 21835.8535, 21837.6934, 21833.9746, 21840.3848,
        21836.2520, 21835.0469, 21833.0977, 21834.1250, 21833.4844, 21837.2520,
        21839.1562, 21835.7695, 21837.2988, 21833.4004, 21837.0137, 21834.8164,
        21838.3750, 21833.6953, 21836.0957, 21832.9941, 21839.9746, 21836.8887,
        21836.6484, 21834.4570, 21837.2910, 21837.3574, 21838.5664, 21840.2168,
        21835.8906, 21833.8516, 21836.8086, 21837.2246, 21832.2988, 21836.7031,
        21838.9395, 21838.3203, 21834.2109, 21836.3828, 21834.1797, 21836.8652,
        21836.9531, 21839.8008, 21840.6133, 21837.0430, 21834.1816, 21837.6172,
        21836.9141, 21833.6816, 21838.8301, 21838.7422, 21835.7500, 21834.8984,
        21835.2109, 21837.9707, 21834.8125, 21831.3828, 21836.0293, 21835.7969,
        21837.0273, 21835.4141, 21835.9902, 21837.3750, 21837.0645, 21834.4121,
        21835.2227, 21837.6484, 21830.9844, 21834.6836, 21836.0078, 21837.6484,
        21836.5410, 21838.4980, 21837.6621, 21839.2324, 21836.7910, 21838.9453,
        21837.5117, 21836.8262, 21840.5566, 21840.7129, 21836.3691, 21836.9043,
        21838.2324, 21837.9336, 21838.1445, 21835.6270])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 19.683837890625 at index (3, 9) (up to 0.01 allowed)
Greatest relative difference: 0.014273187145590782 at index (3, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([1359.6410, 1359.3728, 1359.2831, 1359.2136, 1359.3593, 1359.5120,
        1359.3273, 1359.3248, 1359.3174, 1359.1595, 1359.4697, 1359.5601,
        1359.3866, 1359.2095, 1359.2421, 1359.3662, 1359.4666, 1359.2074,
        1359.1505, 1359.4198, 1359.5415, 1359.2726, 1359.1588, 1359.4796,
        1359.3083, 1359.2308, 1359.4025, 1359.6948, 1359.4852, 1359.2861,
        1359.2998, 1359.3339, 1359.1667, 1359.3956, 1359.0768, 1359.6349,
        1359.3073, 1359.5070, 1359.3074, 1359.3942, 1359.4056, 1359.2931,
        1359.1987, 1359.1885, 1359.3423, 1359.2318, 1359.2701, 1359.5663,
        1359.2795, 1359.4773, 1359.3190, 1359.1245, 1359.3030, 1359.5582,
        1359.4543, 1359.0035, 1359.3599, 1359.2528, 1359.3040, 1359.3589,
        1359.5504, 1359.3411, 1359.5189, 1359.3440, 1359.3483, 1359.1174,
        1359.2972, 1359.4237, 1359.2594, 1359.1987, 1359.3350, 1359.0719,
        1359.4398, 1359.3557, 1359.4473, 1359.0707, 1359.1809, 1359.2756,
        1359.3594, 1359.1166, 1359.6125, 1359.2445, 1359.1168, 1359.2731,
        1359.4462, 1359.2164, 1359.4034, 1359.4540, 1359.4005, 1359.4673,
        1359.2672, 1359.2438, 1359.2273, 1359.3625, 1359.1100, 1359.2679,
        1359.1368, 1359.2830, 1359.4941, 1359.3795])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([1379.1818, 1378.9506, 1378.8544, 1378.7791, 1378.9209, 1379.0964,
        1378.9270, 1378.8453, 1378.8864, 1378.7985, 1379.0706, 1379.1338,
        1378.9452, 1378.8271, 1378.8660, 1378.9231, 1379.0713, 1378.8186,
        1378.7574, 1378.9995, 1379.0909, 1378.8573, 1378.8018, 1379.0698,
        1378.9288, 1378.7701, 1378.9517, 1379.2642, 1379.0302, 1378.9587,
        1378.8953, 1378.9454, 1378.7148, 1378.9905, 1378.7452, 1379.1747,
        1378.9352, 1379.0923, 1378.8406, 1379.0780, 1378.9480, 1378.8438,
        1378.7903, 1378.8292, 1378.8978, 1378.7407, 1378.8973, 1379.1705,
        1378.8982, 1379.0590, 1378.9221, 1378.7399, 1378.8446, 1379.2025,
        1379.0522, 1378.5793, 1378.9268, 1378.8533, 1378.8965, 1378.9886,
        1379.1611, 1378.9482, 1379.0372, 1379.0094, 1378.9121, 1378.6482,
        1378.9302, 1378.9746, 1378.8383, 1378.8099, 1378.8910, 1378.7208,
        1379.0492, 1378.9026, 1379.0649, 1378.6923, 1378.8081, 1378.8230,
        1378.9155, 1378.6603, 1379.1619, 1378.8057, 1378.7649, 1378.8738,
        1379.0153, 1378.8104, 1378.9493, 1378.9535, 1378.9600, 1379.0200,
        1378.8988, 1378.7788, 1378.8208, 1378.9155, 1378.6926, 1378.7947,
        1378.7367, 1378.9172, 1379.0402, 1379.0087])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.5, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 3.950531005859375 at index (1, 5) (up to 0.01 allowed)
Greatest relative difference: 0.014861217699944973 at index (1, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([261.8856, 261.9064, 261.9461, 261.9008, 261.9172, 261.9247, 261.9459,
        261.8931, 261.9231, 261.8899, 261.9532, 261.9186, 261.9129, 261.9105,
        261.8947, 261.8777, 261.9034, 261.8971, 261.9005, 261.9236, 261.8931,
        261.9623, 261.8874, 261.9264, 261.9191, 261.9199, 261.9131, 261.9019,
        261.9374, 261.9181, 261.8975, 261.9163, 261.8818, 261.9405, 261.9099,
        261.9412, 261.8926, 261.9269, 261.8957, 261.9012, 261.9491, 261.8936,
        261.9416, 261.8548, 261.9446, 261.9122, 261.9029, 261.9048, 261.8771,
        261.9080, 261.9115, 261.8974, 261.9341, 261.8886, 261.8935, 261.9001,
        261.9379, 261.9038, 261.8799, 261.9074, 261.9070, 261.9186, 261.9287,
        261.9258, 261.9106, 261.9644, 261.8957, 261.8741, 261.8965, 261.8659,
        261.9373, 261.9481, 261.9164, 261.9141, 261.9080, 261.8957, 261.9060,
        261.9218, 261.9465, 261.9257, 261.9236, 261.9060, 261.9239, 261.8950,
        261.8876, 261.9079, 261.8755, 261.8961, 261.8995, 261.9160, 261.9264,
        261.9026, 261.9339, 261.9043, 261.9199, 261.8920, 261.8864, 261.8933,
        261.9033, 261.9642])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([265.8215, 265.8492, 265.8794, 265.8426, 265.8503, 265.8638, 265.8774,
        265.8231, 265.8719, 265.8388, 265.9003, 265.8634, 265.8449, 265.8526,
        265.8336, 265.8282, 265.8527, 265.8387, 265.8396, 265.8580, 265.8373,
        265.8913, 265.8258, 265.8636, 265.8674, 265.8647, 265.8595, 265.8406,
        265.8766, 265.8545, 265.8318, 265.8482, 265.8174, 265.8804, 265.8511,
        265.8907, 265.8305, 265.8634, 265.8293, 265.8433, 265.8917, 265.8318,
        265.8776, 265.7864, 265.8853, 265.8528, 265.8379, 265.8506, 265.8194,
        265.8402, 265.8596, 265.8425, 265.8688, 265.8214, 265.8250, 265.8434,
        265.8716, 265.8336, 265.8200, 265.8487, 265.8437, 265.8551, 265.8774,
        265.8611, 265.8537, 265.9065, 265.8377, 265.8162, 265.8283, 265.8028,
        265.8747, 265.8960, 265.8584, 265.8537, 265.8488, 265.8388, 265.8510,
        265.8720, 265.8896, 265.8644, 265.8643, 265.8284, 265.8672, 265.8410,
        265.8293, 265.8555, 265.8228, 265.8399, 265.8260, 265.8629, 265.8638,
        265.8434, 265.8832, 265.8290, 265.8591, 265.8196, 265.8303, 265.8387,
        265.8436, 265.8974])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=3.0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 1.0511322021484375 at index (9, 6) (up to 0.01 allowed)
Greatest relative difference: 0.011765139177441597 at index (9, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([88.2974, 88.2989, 88.3003, 88.2954, 88.2761, 88.2868, 88.2795, 88.2959,
        88.2892, 88.2852, 88.3052, 88.2917, 88.2856, 88.3058, 88.2888, 88.2943,
        88.2822, 88.3007, 88.2929, 88.2880, 88.2835, 88.2870, 88.2853, 88.2925,
        88.3021, 88.2914, 88.2985, 88.2821, 88.2931, 88.2899, 88.2999, 88.2805,
        88.2900, 88.2869, 88.3029, 88.2945, 88.2925, 88.2856, 88.2947, 88.2916,
        88.2987, 88.3008, 88.2907, 88.2811, 88.2933, 88.2906, 88.2768, 88.2897,
        88.3029, 88.2995, 88.2838, 88.2870, 88.2874, 88.2971, 88.2924, 88.2992,
        88.3050, 88.2941, 88.2849, 88.2971, 88.2978, 88.2795, 88.2973, 88.2931,
        88.2884, 88.2884, 88.2891, 88.3011, 88.2894, 88.2781, 88.2891, 88.2874,
        88.2917, 88.2906, 88.2887, 88.2965, 88.2962, 88.2854, 88.2908, 88.2997,
        88.2742, 88.2873, 88.2896, 88.2945, 88.2970, 88.2998, 88.2995, 88.3007,
        88.2906, 88.2987, 88.2961, 88.2924, 88.3060, 88.3055, 88.2937, 88.2939,
        88.2918, 88.2953, 88.2999, 88.2911])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([89.3402, 89.3447, 89.3466, 89.3424, 89.3231, 89.3328, 89.3270, 89.3433,
        89.3368, 89.3304, 89.3521, 89.3372, 89.3306, 89.3482, 89.3353, 89.3408,
        89.3300, 89.3481, 89.3373, 89.3330, 89.3291, 89.3321, 89.3303, 89.3374,
        89.3448, 89.3373, 89.3446, 89.3274, 89.3397, 89.3324, 89.3437, 89.3312,
        89.3352, 89.3309, 89.3492, 89.3405, 89.3392, 89.3321, 89.3413, 89.3404,
        89.3449, 89.3472, 89.3365, 89.3274, 89.3398, 89.3395, 89.3225, 89.3370,
        89.3492, 89.3472, 89.3299, 89.3350, 89.3330, 89.3410, 89.3389, 89.3445,
        89.3496, 89.3410, 89.3326, 89.3407, 89.3422, 89.3289, 89.3445, 89.3424,
        89.3338, 89.3319, 89.3355, 89.3431, 89.3333, 89.3231, 89.3366, 89.3337,
        89.3375, 89.3349, 89.3348, 89.3422, 89.3406, 89.3304, 89.3371, 89.3430,
        89.3204, 89.3334, 89.3362, 89.3401, 89.3412, 89.3444, 89.3448, 89.3455,
        89.3388, 89.3456, 89.3426, 89.3402, 89.3517, 89.3522, 89.3388, 89.3401,
        89.3429, 89.3401, 89.3449, 89.3368])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 26172456.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.609375 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216.])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672., 42949672., 42949672.,
        42949672., 42949672., 42949672., 42949672.])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=1.0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 2351548.5 at index (5, 4) (up to 0.01 allowed)
Greatest relative difference: 0.21894919872283936 at index (5, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000,
        8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000, 8388607.5000])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([10737652., 10738746., 10735038., 10737090., 10737216., 10738229.,
        10736790., 10737274., 10737294., 10738266., 10736358., 10736306.,
        10737105., 10737980., 10736622., 10737557., 10736674., 10736099.,
        10738581., 10737052., 10738103., 10738124., 10738011., 10736860.,
        10736481., 10738072., 10737154., 10737083., 10737650., 10738969.,
        10737506., 10738176., 10736297., 10738748., 10736787., 10737468.,
        10735866., 10736960., 10736712., 10737408., 10738208., 10736174.,
        10736297., 10737030., 10736862., 10739222., 10738166., 10737718.,
        10737939., 10739583., 10737368., 10738477., 10737664., 10737060.,
        10740156., 10739980., 10737549., 10736786., 10739200., 10735971.,
        10738531., 10735696., 10738678., 10737024., 10736911., 10737952.,
        10737683., 10737852., 10737096., 10738194., 10737283., 10738100.,
        10737688., 10737244., 10738556., 10737583., 10737626., 10736015.,
        10738935., 10736598., 10738240., 10737418., 10736490., 10737422.,
        10737333., 10738265., 10737704., 10737528., 10738025., 10737950.,
        10737812., 10737924., 10737802., 10735498., 10736482., 10737780.,
        10737707., 10736588., 10737924., 10736373.])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=2.0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 64.197509765625 at index (9, 1) (up to 0.01 allowed)
Greatest relative difference: 0.03393644466996193 at index (9, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([1828.0602, 1827.7546, 1827.9769, 1827.7848, 1827.3622, 1827.8452,
        1827.9124, 1827.9515, 1827.9180, 1827.8577, 1827.7625, 1827.9286,
        1827.7031, 1827.8077, 1827.8252, 1827.7554, 1827.7944, 1827.5227,
        1827.4669, 1827.6448, 1828.0426, 1827.5637, 1827.6664, 1827.7372,
        1827.5568, 1827.7755, 1827.8192, 1827.7909, 1827.8036, 1827.7365,
        1827.6810, 1827.8739, 1827.7343, 1827.6566, 1827.7926, 1827.5356,
        1828.1429, 1827.7367, 1827.9659, 1827.6929, 1827.7063, 1827.8633,
        1827.7594, 1827.6176, 1827.9117, 1827.6105, 1827.7195, 1827.7430,
        1827.8700, 1827.6337, 1828.0153, 1827.9751, 1827.9196, 1827.9071,
        1827.9695, 1828.2737, 1827.7273, 1827.8787, 1827.9412, 1827.9838,
        1827.7053, 1827.9680, 1827.8577, 1827.7084, 1827.6755, 1827.6700,
        1827.7733, 1827.8901, 1827.6483, 1827.6251, 1827.6323, 1827.5642,
        1827.8953, 1827.8455, 1828.1057, 1827.6351, 1827.6426, 1827.9908,
        1827.8024, 1827.5464, 1828.0283, 1827.8350, 1828.1268, 1827.7898,
        1827.7466, 1827.7900, 1828.0027, 1828.0439, 1827.6863, 1827.7885,
        1827.9587, 1827.5006, 1827.9705, 1827.8009, 1827.8016, 1827.9298,
        1827.8320, 1827.9796, 1827.6581, 1827.5878])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([1891.9958, 1891.7837, 1892.0100, 1891.9133, 1891.5311, 1892.0049,
        1891.8479, 1891.9594, 1891.8778, 1892.0101, 1891.7551, 1891.9504,
        1891.7529, 1891.7921, 1891.9695, 1891.8206, 1891.8468, 1891.6664,
        1891.6377, 1891.7882, 1892.0548, 1891.6340, 1891.6890, 1891.8578,
        1891.6595, 1891.8148, 1891.8530, 1891.7982, 1891.9073, 1891.7263,
        1891.7383, 1891.9666, 1891.7134, 1891.6780, 1891.8719, 1891.6240,
        1892.0536, 1891.7383, 1891.9379, 1891.7268, 1891.7194, 1891.8367,
        1891.8260, 1891.6904, 1891.9030, 1891.7472, 1891.8052, 1891.8514,
        1891.8549, 1891.7887, 1891.9900, 1892.0421, 1891.9246, 1891.9562,
        1891.9717, 1892.1232, 1891.8499, 1892.0624, 1891.9888, 1891.8582,
        1891.8595, 1891.9636, 1891.8345, 1891.8257, 1891.7537, 1891.7363,
        1891.8240, 1891.9507, 1891.6987, 1891.7415, 1891.7294, 1891.6494,
        1891.9771, 1891.8483, 1892.1353, 1891.7092, 1891.8104, 1892.0063,
        1891.8385, 1891.7401, 1892.0343, 1891.9498, 1892.0889, 1891.9373,
        1891.8085, 1891.7183, 1891.9850, 1891.9745, 1891.6898, 1891.8757,
        1891.9020, 1891.6981, 1891.9070, 1891.8114, 1891.7196, 1891.8821,
        1891.8267, 1891.9753, 1891.7388, 1891.5706])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=2.5, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 13.213714599609375 at index (0, 3) (up to 0.01 allowed)
Greatest relative difference: 0.038591865450143814 at index (0, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([329.2452, 329.1576, 329.2209, 329.1826, 329.2008, 329.2181, 329.2361,
        329.1893, 329.2226, 329.1739, 329.2473, 329.1734, 329.2383, 329.2029,
        329.2497, 329.2435, 329.2121, 329.1974, 329.2435, 329.2177, 329.2225,
        329.2010, 329.1664, 329.1921, 329.1786, 329.2440, 329.2541, 329.1846,
        329.2585, 329.1811, 329.1984, 329.2263, 329.2417, 329.2386, 329.1769,
        329.2187, 329.1713, 329.2077, 329.2138, 329.2266, 329.1894, 329.2194,
        329.2218, 329.1862, 329.2085, 329.2116, 329.2218, 329.2312, 329.1848,
        329.1808, 329.1849, 329.1838, 329.2268, 329.2157, 329.2263, 329.2073,
        329.1717, 329.2181, 329.2399, 329.2310, 329.2087, 329.2408, 329.1996,
        329.2034, 329.1951, 329.1985, 329.2002, 329.2082, 329.2300, 329.1970,
        329.1900, 329.2431, 329.1993, 329.2571, 329.2322, 329.2277, 329.2012,
        329.2403, 329.2375, 329.1876, 329.2161, 329.2483, 329.2082, 329.1931,
        329.1889, 329.2372, 329.2218, 329.2309, 329.2068, 329.1989, 329.1921,
        329.1662, 329.2278, 329.2299, 329.2241, 329.1660, 329.2076, 329.2552,
        329.2051, 329.2290])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([342.4371, 342.3498, 342.4044, 342.3964, 342.3885, 342.4063, 342.4209,
        342.3738, 342.4089, 342.3518, 342.4305, 342.3705, 342.4162, 342.3837,
        342.4295, 342.4209, 342.3969, 342.3760, 342.4123, 342.4123, 342.4072,
        342.3943, 342.3646, 342.3917, 342.3725, 342.4137, 342.4176, 342.3647,
        342.4342, 342.3690, 342.3819, 342.4131, 342.4176, 342.4107, 342.3599,
        342.3985, 342.3631, 342.3996, 342.3904, 342.4072, 342.3660, 342.3759,
        342.3938, 342.3680, 342.3885, 342.3932, 342.4052, 342.4106, 342.3755,
        342.3647, 342.3618, 342.3711, 342.4099, 342.4027, 342.4102, 342.3906,
        342.3632, 342.4060, 342.4194, 342.4072, 342.3927, 342.4244, 342.3888,
        342.3716, 342.3905, 342.3841, 342.4048, 342.3883, 342.3964, 342.3929,
        342.3832, 342.4321, 342.3801, 342.4429, 342.4119, 342.4161, 342.3819,
        342.4165, 342.4096, 342.3793, 342.3829, 342.4137, 342.3768, 342.3748,
        342.3712, 342.4201, 342.4142, 342.4076, 342.3856, 342.3880, 342.3665,
        342.3471, 342.4140, 342.4018, 342.3835, 342.3605, 342.3870, 342.4356,
        342.3829, 342.4211])
[accuracy error] paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=3.0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 2.7183761596679688 at index (5, 1) (up to 0.01 allowed)
Greatest relative difference: 0.024642765522003174 at index (5, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([107.6030, 107.6089, 107.5788, 107.5862, 107.5905, 107.6043, 107.5989,
        107.5983, 107.5945, 107.5955, 107.5849, 107.5854, 107.5874, 107.6049,
        107.5872, 107.5925, 107.5943, 107.5883, 107.6049, 107.5940, 107.5984,
        107.5990, 107.6027, 107.5888, 107.5839, 107.6100, 107.5947, 107.5898,
        107.5998, 107.6058, 107.6010, 107.6025, 107.5945, 107.5998, 107.5875,
        107.5983, 107.5888, 107.5953, 107.5885, 107.5910, 107.6069, 107.5948,
        107.5853, 107.5961, 107.5916, 107.6108, 107.6043, 107.5972, 107.6052,
        107.6133, 107.5947, 107.5929, 107.6029, 107.5943, 107.6088, 107.6101,
        107.5996, 107.5904, 107.6021, 107.5854, 107.6069, 107.5876, 107.6063,
        107.5967, 107.5938, 107.5972, 107.5971, 107.5963, 107.5912, 107.5936,
        107.5982, 107.5988, 107.5971, 107.5948, 107.5999, 107.5960, 107.6044,
        107.5974, 107.6026, 107.5993, 107.5989, 107.5892, 107.5877, 107.5981,
        107.5951, 107.5995, 107.5925, 107.5859, 107.6032, 107.6014, 107.5989,
        107.5975, 107.5920, 107.5748, 107.5899, 107.6007, 107.5949, 107.5919,
        107.5980, 107.5839])
DESIRED: (shape=torch.Size([10, 10]), dtype=torch.float32)
All elements: tensor([110.3122, 110.3193, 110.2897, 110.3017, 110.3052, 110.3150, 110.3051,
        110.3083, 110.3055, 110.3109, 110.2989, 110.3008, 110.3029, 110.3139,
        110.3021, 110.3068, 110.3041, 110.2989, 110.3182, 110.3051, 110.3116,
        110.3113, 110.3113, 110.3005, 110.2965, 110.3145, 110.3084, 110.3012,
        110.3104, 110.3143, 110.3098, 110.3113, 110.3012, 110.3137, 110.3004,
        110.3077, 110.2986, 110.3036, 110.3000, 110.3045, 110.3123, 110.3034,
        110.2982, 110.3054, 110.3037, 110.3204, 110.3131, 110.3083, 110.3151,
        110.3237, 110.3088, 110.3113, 110.3108, 110.3071, 110.3226, 110.3215,
        110.3102, 110.3029, 110.3169, 110.2980, 110.3146, 110.2989, 110.3161,
        110.3063, 110.3053, 110.3076, 110.3091, 110.3101, 110.3025, 110.3075,
        110.3080, 110.3118, 110.3118, 110.3049, 110.3107, 110.3080, 110.3120,
        110.3052, 110.3167, 110.3082, 110.3101, 110.3030, 110.2998, 110.3084,
        110.3062, 110.3132, 110.3082, 110.3030, 110.3122, 110.3088, 110.3111,
        110.3115, 110.3067, 110.2919, 110.3003, 110.3111, 110.3069, 110.3063,
        110.3122, 110.2988])
[accuracy error] paddle.linalg.norm(Tensor([2, 107374183, 4, 5],"float16"), 2.0, 1, False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100.0%)
Greatest absolute difference: 2970.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.99267578125 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 5]), dtype=torch.float16)
All elements: tensor([22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 5]), dtype=torch.float16)
All elements: tensor([2992., 2992., 2992., 2992., 2992., 2992., 2992., 2990., 2992., 2992.,
        2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992.,
        2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992.,
        2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992., 2992.],
       dtype=torch.float16)
[accuracy error] paddle.linalg.norm(Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13788.958984375 but got 0.0.
Absolute difference: 13788.958984375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13788.9590])
[accuracy error] paddle.linalg.norm(Tensor([2281701379],"float32"), 2.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13788.958984375 but got 0.0.
Absolute difference: 13788.958984375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13788.9590])
[accuracy error] paddle.linalg.norm(Tensor([2281701379],"float32"), p=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 570425088.0 but got 0.0.
Absolute difference: 570425088.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([5.7043e+08])
[accuracy error] paddle.linalg.norm(Tensor([2281701379],"float32"), p=1, axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 570415616.0 but got 0.0.
Absolute difference: 570415616.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([5.7042e+08])
[accuracy error] paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 0.0, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100.0%)
Greatest absolute difference: 21251140.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.5588235259056091 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 20, 1]), dtype=torch.float32)
All elements: tensor([16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.])
DESIRED: (shape=torch.Size([3, 20, 1]), dtype=torch.float32)
All elements: tensor([38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.,
        38028356., 38028356., 38028356., 38028356., 38028356., 38028356.])
[accuracy error] paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, -1, False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100.0%)
Greatest absolute difference: 53.8560791015625 at index (1, 7) (up to 0.01 allowed)
Greatest relative difference: 0.03025454841554165 at index (1, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 20]), dtype=torch.float32)
All elements: tensor([1726.4977, 1726.6207, 1726.2288, 1726.1641, 1726.5353, 1726.3162,
        1726.4893, 1726.5664, 1726.4349, 1726.4032, 1726.5876, 1726.2999,
        1726.3732, 1726.3329, 1726.5768, 1726.5459, 1726.3033, 1726.4166,
        1726.4768, 1726.1705, 1726.6348, 1726.6003, 1726.4344, 1726.4060,
        1726.6344, 1726.5488, 1726.3491, 1726.2426, 1726.4684, 1726.6855,
        1726.2725, 1726.2798, 1726.5223, 1726.7303, 1726.4639, 1726.5081,
        1726.4476, 1726.3877, 1726.5118, 1726.4293, 1726.4663, 1726.1760,
        1726.2957, 1726.4373, 1726.4319, 1726.4395, 1726.4471, 1726.4548,
        1726.2623, 1726.4623, 1726.5160, 1726.5220, 1726.5483, 1726.5869,
        1726.4906, 1726.5695, 1726.6611, 1726.5741, 1726.4661, 1726.4978])
DESIRED: (shape=torch.Size([3, 20]), dtype=torch.float32)
All elements: tensor([1780.2130, 1780.3993, 1779.9707, 1779.9644, 1780.2897, 1780.0432,
        1780.3425, 1780.1981, 1780.1288, 1780.1958, 1780.2920, 1780.0630,
        1780.0731, 1780.0178, 1780.2053, 1780.2012, 1780.0399, 1780.1294,
        1780.2594, 1779.9427, 1780.2927, 1780.2600, 1780.0828, 1780.2123,
        1780.3818, 1780.2612, 1779.9982, 1780.0986, 1780.1212, 1780.3643,
        1780.0797, 1780.0118, 1780.2592, 1780.4163, 1780.1854, 1780.2151,
        1780.1610, 1780.2144, 1780.2091, 1780.1256, 1780.1656, 1779.8967,
        1780.1064, 1780.1046, 1780.1898, 1780.2036, 1780.1653, 1780.1632,
        1779.9257, 1780.2019, 1780.1130, 1780.3508, 1780.3307, 1780.2429,
        1780.2504, 1780.3773, 1780.3588, 1780.3031, 1780.2610, 1780.1707])
[accuracy error] paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100.0%)
Greatest absolute difference: 53.8746337890625 at index (2, 13, 0) (up to 0.01 allowed)
Greatest relative difference: 0.030263906344771385 at index (2, 13, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 20, 1]), dtype=torch.float32)
All elements: tensor([1726.6934, 1726.2493, 1726.6086, 1726.5883, 1726.2434, 1726.3171,
        1726.5088, 1726.4207, 1726.6565, 1726.3516, 1726.6398, 1726.2839,
        1726.5410, 1726.4122, 1726.1954, 1726.4517, 1726.4963, 1726.4368,
        1726.4301, 1726.2745, 1726.0405, 1726.5139, 1726.3911, 1726.3931,
        1726.1213, 1726.3420, 1726.3361, 1726.2487, 1726.4037, 1726.2988,
        1726.3364, 1726.5010, 1726.3032, 1726.3197, 1726.3728, 1726.4734,
        1726.1052, 1726.3658, 1726.2715, 1726.4443, 1726.3246, 1726.4735,
        1726.4468, 1726.5868, 1726.2297, 1726.4163, 1726.3250, 1726.5918,
        1726.3391, 1726.0887, 1726.4672, 1726.2334, 1726.2853, 1726.2866,
        1726.4803, 1726.3159, 1726.4371, 1726.4700, 1726.6144, 1726.5520])
DESIRED: (shape=torch.Size([3, 20, 1]), dtype=torch.float32)
All elements: tensor([1780.3541, 1780.0262, 1780.3087, 1780.3185, 1780.0552, 1779.9946,
        1780.2374, 1780.1589, 1780.3070, 1780.1350, 1780.4034, 1780.0242,
        1780.2509, 1780.2410, 1779.9701, 1780.1881, 1780.2369, 1780.1980,
        1780.0875, 1780.1099, 1779.8268, 1780.1919, 1780.2606, 1780.1990,
        1779.8716, 1780.1206, 1780.1605, 1780.0222, 1780.1112, 1780.0541,
        1780.1415, 1780.2161, 1780.1394, 1780.0979, 1780.0637, 1780.2424,
        1779.9199, 1780.1592, 1780.0414, 1780.1589, 1780.0735, 1780.3136,
        1780.1333, 1780.2661, 1779.9612, 1780.0767, 1780.0254, 1780.2611,
        1780.1251, 1779.9371, 1780.2639, 1780.0990, 1780.0929, 1780.1613,
        1780.2501, 1780.0281, 1780.2343, 1780.2629, 1780.3457, 1780.3022])
[accuracy error] paddle.linalg.norm(Tensor([3, 20, 71582789],"float32"), 0.0, 2, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100.0%)
Greatest absolute difference: 54805576.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.765625 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 20, 1]), dtype=torch.float32)
All elements: tensor([16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.])
DESIRED: (shape=torch.Size([3, 20, 1]), dtype=torch.float32)
All elements: tensor([71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.,
        71582792., 71582792., 71582792., 71582792., 71582792., 71582792.])
[accuracy error] paddle.linalg.norm(Tensor([3, 20, 71582789],"float32"), 2.0, -1, False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100.0%)
Greatest absolute difference: 394.637939453125 at index (1, 3) (up to 0.01 allowed)
Greatest relative difference: 0.16156218945980072 at index (1, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 20]), dtype=torch.float32)
All elements: tensor([2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.])
DESIRED: (shape=torch.Size([3, 20]), dtype=torch.float32)
All elements: tensor([2442.5149, 2442.5176, 2442.5469, 2442.3064, 2442.2292, 2442.3601,
        2442.1821, 2442.3354, 2442.5044, 2442.1873, 2442.3066, 2442.4316,
        2442.5410, 2442.3118, 2442.4670, 2442.1516, 2442.5259, 2442.5015,
        2442.3318, 2442.2407, 2442.3018, 2442.4067, 2442.4907, 2442.6379,
        2442.4761, 2442.3994, 2442.4937, 2442.2476, 2442.4250, 2442.5051,
        2442.5220, 2442.3628, 2442.3745, 2442.3750, 2442.5095, 2442.4597,
        2442.3811, 2442.4065, 2442.3303, 2442.1865, 2442.3750, 2442.2307,
        2442.3025, 2442.3467, 2442.3271, 2442.4792, 2442.4172, 2442.4065,
        2442.2402, 2442.4587, 2442.4536, 2442.4360, 2442.3210, 2442.3374,
        2442.5891, 2442.4617, 2442.1375, 2442.4976, 2442.5571, 2442.3635])
[accuracy error] paddle.linalg.norm(Tensor([380283564, 6],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13789.21484375 but got 0.0.
Absolute difference: 13789.21484375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13789.2148])
[accuracy error] paddle.linalg.norm(Tensor([380283564, 6],"float32"), p=1, axis=list[0,1,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 95074528.0 but got 8388607.5.
Absolute difference: 86685920.5 (up to 0.01 allowed)
Relative difference: 0.9117680868213198 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([8388607.5000])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([95074528.])
[accuracy error] paddle.linalg.norm(Tensor([4, 1073741824],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18918.5 but got 0.0.
Absolute difference: 18918.5 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([18918.5000])
[accuracy error] paddle.linalg.norm(Tensor([4, 1073741824],"float32"), p=-math.inf, axis=list[0,1,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 268432592.0 but got 8388607.5.
Absolute difference: 260043984.5 (up to 0.01 allowed)
Relative difference: 0.968749668445626 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([8388607.5000])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([2.6843e+08])
[accuracy error] paddle.linalg.norm(Tensor([4, 570425345],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13789.1474609375 but got 0.0.
Absolute difference: 13789.1474609375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13789.1475])
[accuracy error] paddle.linalg.norm(Tensor([4, 570425345],"float32"), p=-math.inf, axis=list[0,1,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 142598800.0 but got 8388607.5.
Absolute difference: 134210192.5 (up to 0.01 allowed)
Relative difference: 0.9411733654140148 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([8388607.5000])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([1.4260e+08])
[accuracy error] paddle.linalg.norm(Tensor([4294967295],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18918.634765625 but got 0.0.
Absolute difference: 18918.634765625 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([18918.6348])
[accuracy error] paddle.linalg.norm(Tensor([4294967295],"float32"), 2.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18918.68359375 but got 0.0.
Absolute difference: 18918.68359375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([18918.6836])
[accuracy error] paddle.linalg.norm(Tensor([4294967295],"float32"), p=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 1073745920.0 but got 0.0.
Absolute difference: 1073745920.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([1.0737e+09])
[accuracy error] paddle.linalg.norm(Tensor([4294967295],"float32"), p=1, axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 1073744512.0 but got 0.0.
Absolute difference: 1073744512.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([1.0737e+09])
[accuracy error] paddle.linalg.norm(Tensor([50, 50, 1717987],"float16"), p=2.0, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2500 / 2500 (100.0%)
Greatest absolute difference: 356.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.9404296875 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([50, 50]), dtype=torch.float16)
First 100 elements: tensor([22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250,
        22.6250, 22.6250, 22.6250, 22.6250], dtype=torch.float16)
DESIRED: (shape=torch.Size([50, 50]), dtype=torch.float16)
First 100 elements: tensor([378.5000, 378.7500, 378.5000, 378.2500, 378.2500, 378.2500, 378.5000,
        378.2500, 378.2500, 378.2500, 378.2500, 378.2500, 378.0000, 378.5000,
        378.5000, 378.5000, 378.5000, 378.2500, 378.5000, 378.5000, 378.2500,
        378.2500, 378.5000, 378.2500, 378.5000, 378.2500, 378.5000, 378.5000,
        378.5000, 378.2500, 378.2500, 378.5000, 378.7500, 378.5000, 378.5000,
        378.5000, 378.2500, 378.2500, 378.2500, 378.5000, 378.5000, 378.5000,
        378.5000, 378.0000, 378.5000, 378.2500, 378.5000, 378.2500, 378.2500,
        378.5000, 378.2500, 378.2500, 378.2500, 378.5000, 378.2500, 378.2500,
        378.2500, 378.0000, 378.5000, 378.2500, 378.2500, 378.2500, 378.5000,
        378.2500, 378.5000, 378.5000, 378.2500, 378.5000, 378.2500, 378.5000,
        378.5000, 378.2500, 378.2500, 378.2500, 378.5000, 378.2500, 378.2500,
        378.2500, 378.7500, 378.5000, 378.7500, 378.2500, 378.2500, 378.5000,
        378.2500, 378.5000, 378.7500, 378.2500, 378.5000, 378.5000, 378.5000,
        378.2500, 378.2500, 378.2500, 378.5000, 378.2500, 378.2500, 378.5000,
        378.2500, 378.2500], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(Tensor([715827883, 6],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18918.68359375 but got 0.3526759445667267.
Absolute difference: 18918.330917805433 (up to 0.01 allowed)
Relative difference: 0.9999813583253391 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.3527])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([18918.6836])
[accuracy error] paddle.linalg.norm(Tensor([715827883, 6],"float32"), p=1, axis=list[0,1,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 178960192.0 but got 8388607.5.
Absolute difference: 170571584.5 (up to 0.01 allowed)
Relative difference: 0.9531258465569817 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([8388607.5000])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([1.7896e+08])
[accuracy error] paddle.linalg.norm(x=Tensor([1431655766, 3],"float16"), axis=None, p="fro", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.414794921875.
Absolute difference: 18911.585205078125 (up to 0.01 allowed)
Relative difference: 0.9999780671043847 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.4148], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13789.21484375 but got 0.0.
Absolute difference: 13789.21484375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13789.2148])
[accuracy error] paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13789.21484375 but got 0.0.
Absolute difference: 13789.21484375 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13789.2148])
[accuracy error] paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 13789.0595703125 but got 0.0.
Absolute difference: 13789.0595703125 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([13789.0596])
[accuracy error] paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.5087890625.
Absolute difference: 18911.4912109375 (up to 0.01 allowed)
Relative difference: 0.999973097025037 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.5088], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 715308885 / 715827883 (99.9%)
Greatest absolute difference: nan at index (46,) (up to 0.01 allowed)
Greatest relative difference: nan at index (46,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([715827883]), dtype=torch.float16)
First 100 elements: tensor([-4.9770e-05,  1.6514e+00,  2.3936e+04,  1.7139e+00,  1.9588e+02,
         1.6787e+00,  1.5459e+00,  4.9453e+00,  1.7796e-03,  1.5420e+00,
         9.3200e+02,  4.8075e+02,  2.8820e-03,  1.6777e+00,  5.9040e+04,
         1.7471e+00,  5.1133e+00,  1.2568e+00,  4.8032e+04,  1.7490e+00,
         1.7234e+01,  1.4170e+00, -7.2598e-05,  1.8154e+00, -2.2182e-03,
         1.5811e+00,  1.6836e+00,  6.9800e+02,  2.0352e+00,  4.6094e+00,
         1.7412e+00,  1.4141e+00,  1.2544e+04,  4.9562e+01,  1.5498e+00,
         1.0648e+04,  9.8500e+02,  1.6523e+00, -1.1064e+00,  1.6514e+00,
         1.6800e+02,  3.6020e+03,  6.6950e+02,  1.6750e+02,  6.4240e-03,
         1.7373e+00,         nan, -1.5605e+00,  1.6912e+04,  1.6152e+00,
         2.9325e+02,  1.5479e+00,  1.1456e-01,  1.7188e+00,         nan,
         1.7031e+00,  1.5371e+00,         nan,  2.4281e+01,         nan,
         3.3800e+02,  1.5244e+00,  1.5936e+04,  1.5146e+00, -1.6543e+00,
         1.2236e+00,         nan,  1.7236e+00, -1.0754e-01,  1.4925e+02,
                nan,  1.7266e+00,  1.6416e+00, -1.3350e+00,  1.7451e+00,
         1.7129e+00,  1.1648e+01,  1.6846e+00,         nan,  1.7109e+00,
         7.0947e-01,  9.1920e+03,  2.9206e-05,  1.7393e+00, -1.6865e+00,
         1.7119e+00,         nan,  1.5049e+00,  1.1787e+00,  1.7168e+00,
         1.5854e-02,  8.0125e+01,  2.1260e+03,  1.6582e+00,  1.5400e+00,
         1.1401e-01,  6.7532e-05,  1.6912e+02,  1.5612e+02,  1.7197e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([715827883]), dtype=torch.float16)
First 100 elements: tensor([0.8872, 0.5786, 0.8271, 0.5151, 0.9121, 0.6323, 0.6250, 0.4976, 0.9072,
        0.5732, 0.2717, 0.8438, 0.7993, 0.6680, 0.7227, 0.8857, 0.2544, 0.7295,
        0.6162, 0.5015, 0.6250, 0.4192, 0.5957, 0.5034, 0.7051, 0.4912, 0.7207,
        0.9600, 0.6958, 0.5479, 0.7949, 0.5405, 0.7227, 0.7725, 0.9102, 0.5215,
        0.8877, 0.5723, 0.4033, 0.5293, 0.8027, 0.5586, 0.8076, 0.3667, 0.8193,
        0.8843, 0.6509, 0.7207, 0.6450, 0.5176, 0.7192, 0.7188, 0.8428, 0.6606,
        0.7861, 0.6250, 0.5273, 0.5542, 0.5059, 0.8169, 0.8672, 0.6592, 0.5645,
        0.6553, 0.8086, 0.7734, 0.6436, 0.8428, 0.8193, 0.7148, 0.7402, 0.8926,
        0.8359, 0.6406, 0.5122, 0.8213, 0.8306, 0.8486, 0.8657, 0.7578, 0.3945,
        0.5269, 0.4714, 0.6411, 0.5552, 0.6504, 0.8599, 0.7422, 0.7793, 0.8291,
        0.8579, 0.6797, 0.5234, 0.5830, 0.5015, 0.7959, 0.6504, 0.8750, 0.5186,
        0.6792], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 715308885 / 715827883 (99.9%)
Greatest absolute difference: nan at index (0, 0, 46) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 46) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 715827883]), dtype=torch.float16)
First 100 elements: tensor([-4.9770e-05,  1.6514e+00,  2.3936e+04,  1.7139e+00,  1.9588e+02,
         1.6787e+00,  1.5459e+00,  4.9453e+00,  1.7796e-03,  1.5420e+00,
         9.3200e+02,  4.8075e+02,  2.8820e-03,  1.6777e+00,  5.9040e+04,
         1.7471e+00,  5.1133e+00,  1.2568e+00,  4.8032e+04,  1.7490e+00,
         1.7234e+01,  1.4170e+00, -7.2598e-05,  1.8154e+00, -2.2182e-03,
         1.5811e+00,  1.6836e+00,  6.9800e+02,  2.0352e+00,  4.6094e+00,
         1.7412e+00,  1.4141e+00,  1.2544e+04,  4.9562e+01,  1.5498e+00,
         1.0648e+04,  9.8500e+02,  1.6523e+00, -1.1064e+00,  1.6514e+00,
         1.6800e+02,  3.6020e+03,  6.6950e+02,  1.6750e+02,  6.4240e-03,
         1.7373e+00,         nan, -1.5605e+00,  1.6912e+04,  1.6152e+00,
         2.9325e+02,  1.5479e+00,  1.1456e-01,  1.7188e+00,         nan,
         1.7031e+00,  1.5371e+00,         nan,  2.4281e+01,         nan,
         3.3800e+02,  1.5244e+00,  1.5936e+04,  1.5146e+00, -1.6543e+00,
         1.2236e+00,         nan,  1.7236e+00, -1.0754e-01,  1.4925e+02,
                nan,  1.7266e+00,  1.6416e+00, -1.3350e+00,  1.7451e+00,
         1.7129e+00,  1.1648e+01,  1.6846e+00,         nan,  1.7109e+00,
         7.0947e-01,  9.1920e+03,  2.9206e-05,  1.7393e+00, -1.6865e+00,
         1.7119e+00,         nan,  1.5049e+00,  1.1787e+00,  1.7168e+00,
         1.5854e-02,  8.0125e+01,  2.1260e+03,  1.6582e+00,  1.5400e+00,
         1.1401e-01,  6.7532e-05,  1.6912e+02,  1.5612e+02,  1.7197e+00],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 715827883]), dtype=torch.float16)
First 100 elements: tensor([0.8872, 0.5786, 0.8271, 0.5151, 0.9121, 0.6323, 0.6250, 0.4976, 0.9072,
        0.5732, 0.2717, 0.8438, 0.7993, 0.6680, 0.7227, 0.8857, 0.2544, 0.7295,
        0.6162, 0.5015, 0.6250, 0.4192, 0.5957, 0.5034, 0.7051, 0.4912, 0.7207,
        0.9600, 0.6958, 0.5479, 0.7949, 0.5405, 0.7227, 0.7725, 0.9102, 0.5215,
        0.8877, 0.5723, 0.4033, 0.5293, 0.8027, 0.5586, 0.8076, 0.3667, 0.8193,
        0.8843, 0.6509, 0.7207, 0.6450, 0.5176, 0.7192, 0.7188, 0.8428, 0.6606,
        0.7861, 0.6250, 0.5273, 0.5542, 0.5059, 0.8169, 0.8672, 0.6592, 0.5645,
        0.6553, 0.8086, 0.7734, 0.6436, 0.8428, 0.8193, 0.7148, 0.7402, 0.8926,
        0.8359, 0.6406, 0.5122, 0.8213, 0.8306, 0.8486, 0.8657, 0.7578, 0.3945,
        0.5269, 0.4714, 0.6411, 0.5552, 0.6504, 0.8599, 0.7422, 0.7793, 0.8291,
        0.8579, 0.6797, 0.5234, 0.5830, 0.5015, 0.7959, 0.6504, 0.8750, 0.5186,
        0.6792], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 6 (100.0%)
Greatest absolute difference: 7700.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.9970703125 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float16)
All elements: tensor([22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float16)
All elements: tensor([7724., 7724., 7724., 7724., 7724., 7724.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 6 (100.0%)
Greatest absolute difference: 7700.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.9970703125 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 1]), dtype=torch.float16)
All elements: tensor([22.6250, 22.6250, 22.6250, 22.6250, 22.6250, 22.6250],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 3, 1]), dtype=torch.float16)
All elements: tensor([7724., 7724., 7724., 7724., 7724., 7724.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 1.0537109375.
Absolute difference: 18910.9462890625 (up to 0.01 allowed)
Relative difference: 0.999944283474117 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([1.0537], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), axis=None, p="fro", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.5087890625.
Absolute difference: 18911.4912109375 (up to 0.01 allowed)
Relative difference: 0.999973097025037 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.5088], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([2048., 2048., 2048.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1]), dtype=torch.float16)
All elements: tensor([2048., 2048., 2048.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: 10896.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 0.99755859375 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([22.6250, 22.6250, 22.6250], dtype=torch.float16)
DESIRED: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([10920., 10920., 10920.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: 10896.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.99755859375 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1]), dtype=torch.float16)
All elements: tensor([22.6250, 22.6250, 22.6250], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1]), dtype=torch.float16)
All elements: tensor([10920., 10920., 10920.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.341796875.
Absolute difference: 18911.658203125 (up to 0.01 allowed)
Relative difference: 0.99998192698419 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.3418], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,2,], p=math.inf, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=1, p=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9 / 9 (100.0%)
Greatest absolute difference: inf at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 3]), dtype=torch.float16)
All elements: tensor([2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 3]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.341796875.
Absolute difference: 18911.658203125 (up to 0.01 allowed)
Relative difference: 0.99998192698419 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.3418], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,2,], p=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.86865234375.
Absolute difference: 18911.13134765625 (up to 0.01 allowed)
Relative difference: 0.9999540687212484 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.8687], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: inf at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 4]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18912.0 but got 0.546875.
Absolute difference: 18911.453125 (up to 0.01 allowed)
Relative difference: 0.9999710831747038 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([0.5469], dtype=torch.float16)
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
All elements: tensor([18912.], dtype=torch.float16)
[accuracy error] paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,2,], p=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([1024., 1024., 1024.], dtype=torch.float16)
DESIRED: (shape=torch.Size([3]), dtype=torch.float16)
All elements: tensor([inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.linalg.vector_norm(x=Tensor([1073741824, 4],"float32"), p=2, axis=None, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 18918.634765625 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1]), dtype=torch.float32)
All elements: tensor([18918.6348])
[accuracy error] paddle.linalg.vector_norm(x=Tensor([3, 1431655765],"float32"), p=2, axis=None, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 18918.494140625 but got 0.0.
Absolute difference: 18918.494140625 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
All elements: tensor([18918.4941])
[accuracy error] paddle.linalg.vector_norm(x=Tensor([3, 1431655765],"float32"), p=2, axis=None, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 18918.5 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1]), dtype=torch.float32)
All elements: tensor([0.])
DESIRED: (shape=torch.Size([1, 1]), dtype=torch.float32)
All elements: tensor([18918.5000])
[accuracy error] paddle.linalg.vector_norm(x=Tensor([3, 715827883],"float64"), p=0, axis=None, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 2147483649.0 but got 0.0.
Absolute difference: 2147483649.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float64)
All elements: tensor([0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([]), dtype=torch.float64)
All elements: tensor([2.1475e+09], dtype=torch.float64)
[accuracy error] paddle.linalg.vector_norm(x=Tensor([3, 715827883],"float64"), p=0, axis=None, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 2147483649.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1]), dtype=torch.float64)
All elements: tensor([0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([1, 1]), dtype=torch.float64)
All elements: tensor([2.1475e+09], dtype=torch.float64)
[accuracy error] paddle.linalg.vector_norm(x=Tensor([536870913, 4],"float64"), p=0, axis=None, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Expected 2147483652.0 but got 0.0.
Absolute difference: 2147483652.0 (up to 0.01 allowed)
Relative difference: 1.0 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float64)
All elements: tensor([0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([]), dtype=torch.float64)
All elements: tensor([2.1475e+09], dtype=torch.float64)
[accuracy error] paddle.linalg.vector_norm(x=Tensor([536870913, 4],"float64"), p=0, axis=None, keepdim=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 2147483652.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1]), dtype=torch.float64)
All elements: tensor([0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([1, 1]), dtype=torch.float64)
All elements: tensor([2.1475e+09], dtype=torch.float64)
[accuracy error] paddle.nn.functional.hardshrink(Tensor([2281701379],"float32"), 0.5, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 61 / 2281701379 (0.0%)
Greatest absolute difference: 0.5 at index (38935030,) (up to 0.01 allowed)
Greatest relative difference: inf at index (38935030,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
[accuracy error] paddle.nn.functional.hardshrink(x=Tensor([2281701379],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 85 / 2281701379 (0.0%)
Greatest absolute difference: 0.5 at index (91555761,) (up to 0.01 allowed)
Greatest relative difference: inf at index (91555761,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
[accuracy error] paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 334 / 4294967460 (0.0%)
Greatest absolute difference: inf at index (613807, 0, 2, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (613807, 0, 2, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([20452226, 5, 6, 7]), dtype=torch.float16)
First 100 elements: tensor([ 0.1226,  0.4836, -0.9497, -0.3616, -0.5435, -0.9966,  0.7573,  0.7920,
         0.6265, -0.0493, -0.6948,  0.5952, -0.9492,  0.5747,  0.1464,  0.1053,
        -0.6826, -0.4290,  0.7412, -0.0304,  0.8701,  0.6382, -0.7808,  0.3677,
        -0.6602, -0.2947,  0.3047, -0.0497,  0.2883,  0.7544,  0.9751,  0.4031,
        -0.6187, -0.4436, -0.5146,  0.3792, -0.7095,  0.2053,  0.6982,  0.7378,
         0.4282,  0.6104, -0.7915,  0.9097, -0.3357,  0.3667,  0.7056,  0.2361,
         0.2832, -0.4431,  0.2651,  0.8555,  0.4861, -0.8008, -0.5654,  0.0255,
        -0.1873,  0.8804, -0.3691, -0.4663, -0.3350, -0.6802,  0.1903, -0.8335,
        -0.7671,  0.7246,  0.6885, -0.7529, -0.2448, -0.0309, -0.9790, -0.6294,
        -0.4983,  0.9355,  0.1173,  0.3572,  0.8457,  0.5664,  0.6885,  0.5884,
         0.7046, -0.7075,  0.1555,  0.7407,  0.7607, -0.5830,  0.0085, -0.2893,
         0.2449,  0.2031, -0.8999,  0.4377, -0.4019, -0.6709,  0.6431,  0.6118,
        -0.2217,  0.1284, -0.1759, -0.6924], dtype=torch.float16)
DESIRED: (shape=torch.Size([20452226, 5, 6, 7]), dtype=torch.float16)
First 100 elements: tensor([ 0.1226,  0.4836, -0.9497, -0.3616, -0.5435, -0.9966,  0.7573,  0.7920,
         0.6265, -0.0493, -0.6948,  0.5952, -0.9487,  0.5747,  0.1464,  0.1053,
        -0.6826, -0.4290,  0.7412, -0.0304,  0.8701,  0.6382, -0.7808,  0.3677,
        -0.6602, -0.2947,  0.3047, -0.0497,  0.2883,  0.7544,  0.9751,  0.4031,
        -0.6187, -0.4436, -0.5146,  0.3792, -0.7095,  0.2053,  0.6982,  0.7378,
         0.4282,  0.6104, -0.7915,  0.9097, -0.3357,  0.3667,  0.7056,  0.2361,
         0.2832, -0.4431,  0.2651,  0.8555,  0.4861, -0.8008, -0.5649,  0.0255,
        -0.1873,  0.8804, -0.3691, -0.4663, -0.3350, -0.6802,  0.1903, -0.8335,
        -0.7671,  0.7246,  0.6885, -0.7529, -0.2448, -0.0309, -0.9790, -0.6294,
        -0.4983,  0.9355,  0.1173,  0.3572,  0.8457,  0.5664,  0.6885,  0.5884,
         0.7046, -0.7075,  0.1555,  0.7407,  0.7607, -0.5830,  0.0085, -0.2893,
         0.2449,  0.2031, -0.8999,  0.4377, -0.4019, -0.6709,  0.6431,  0.6118,
        -0.2216,  0.1284, -0.1759, -0.6924], dtype=torch.float16)
[accuracy error] paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2318910087 / 4294967376 (54.0%)
Greatest absolute difference: 0.021759033203125 at index (0, 28, 1, 6) (up to 0.01 allowed)
Greatest relative difference: 63.59375 at index (0, 2, 3, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 25565282, 6, 7]), dtype=torch.float16)
First 100 elements: tensor([ 0.0163, -0.0100, -0.0082,  0.0148, -0.0171,  0.0022,  0.0184, -0.0087,
         0.0035, -0.0135,  0.0140,  0.0032, -0.0129,  0.0118, -0.0094,  0.0093,
        -0.0077,  0.0199, -0.0137, -0.0178, -0.0176, -0.0160,  0.0103, -0.0132,
        -0.0003,  0.0033, -0.0194,  0.0086,  0.0071,  0.0010,  0.0201,  0.0123,
        -0.0176, -0.0130, -0.0016,  0.0170, -0.0089, -0.0104,  0.0181, -0.0170,
        -0.0066, -0.0114,  0.0175, -0.0139,  0.0184,  0.0062,  0.0195,  0.0098,
         0.0201,  0.0066,  0.0211, -0.0083, -0.0033,  0.0185,  0.0219,  0.0035,
        -0.0197,  0.0210, -0.0161,  0.0103, -0.0001, -0.0161,  0.0091, -0.0049,
         0.0020, -0.0195,  0.0045,  0.0181, -0.0170,  0.0084,  0.0066,  0.0015,
        -0.0206, -0.0067, -0.0057, -0.0069,  0.0093, -0.0048,  0.0184,  0.0061,
         0.0220, -0.0196, -0.0054, -0.0099, -0.0120, -0.0125,  0.0199,  0.0105,
         0.0190,  0.0084,  0.0213,  0.0185, -0.0219,  0.0037,  0.0071, -0.0175,
         0.0029, -0.0105,  0.0219, -0.0113], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 25565282, 6, 7]), dtype=torch.float16)
First 100 elements: tensor([ 2.5344e-04, -1.5545e-04, -1.2696e-04,  2.2912e-04, -2.6512e-04,
         3.4094e-05,  2.8515e-04, -1.3518e-04,  5.4240e-05, -2.1005e-04,
         2.1625e-04,  4.9889e-05, -2.0051e-04,  1.8275e-04, -1.4555e-04,
         1.4400e-04, -1.1873e-04,  3.0899e-04, -2.1231e-04, -2.7585e-04,
        -2.7275e-04, -2.4843e-04,  1.5974e-04, -2.0456e-04, -4.6492e-06,
         5.1022e-05, -3.0041e-04,  1.3256e-04,  1.0967e-04,  1.5438e-05,
         3.1066e-04,  1.9062e-04, -2.7299e-04, -2.0087e-04, -2.5034e-05,
         2.6321e-04, -1.3840e-04, -1.6069e-04,  2.8062e-04, -2.6298e-04,
        -1.0270e-04, -1.7607e-04,  2.7132e-04, -2.1601e-04,  2.8443e-04,
         9.5963e-05,  3.0303e-04,  1.5163e-04,  3.1161e-04,  1.0294e-04,
         3.2663e-04, -1.2863e-04, -5.1320e-05,  2.8682e-04,  3.3927e-04,
         5.3525e-05, -3.0589e-04,  3.2473e-04, -2.4915e-04,  1.5914e-04,
        -1.6689e-06, -2.4939e-04,  1.4174e-04, -7.5817e-05,  3.0994e-05,
        -3.0208e-04,  6.9082e-05,  2.8133e-04, -2.6321e-04,  1.3006e-04,
         1.0210e-04,  2.2531e-05, -3.1924e-04, -1.0419e-04, -8.8453e-05,
        -1.0735e-04,  1.4353e-04, -7.4029e-05,  2.8491e-04,  9.5308e-05,
         3.4189e-04, -3.0422e-04, -8.3685e-05, -1.5295e-04, -1.8573e-04,
        -1.9431e-04,  3.0851e-04,  1.6332e-04,  2.9421e-04,  1.3089e-04,
         3.2973e-04,  2.8634e-04, -3.3879e-04,  5.7220e-05,  1.1027e-04,
        -2.7180e-04,  4.5419e-05, -1.6284e-04,  3.3975e-04, -1.7536e-04],
       dtype=torch.float16)
[accuracy error] paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=4, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 346 / 4294967400 (0.0%)
Greatest absolute difference: inf at index (0, 0, 1, 7011271) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 1, 7011271) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 5, 6, 35791395]), dtype=torch.float16)
First 100 elements: tensor([ 0.9561,  0.4360, -0.8965,  0.7505, -0.6157,  0.4333, -0.3083,  0.6636,
        -0.7021, -0.6577, -0.0719, -0.7017,  0.8232, -0.9976,  0.6289,  0.6724,
        -0.0094, -0.7368,  0.2769,  0.8159,  0.2903,  0.7319,  0.0943, -0.3967,
         0.5986,  0.9766, -0.7773,  0.2159, -0.0317,  0.6113,  0.2888,  0.2979,
        -0.1210, -0.3320,  0.6060, -0.5420, -0.3811,  0.5479,  0.1974,  0.1797,
        -0.6387,  0.1967, -0.7861,  0.5190, -0.3005,  0.7256,  0.9961, -0.7842,
         0.7432, -0.9375,  0.8335, -0.6328,  0.6099, -0.5044,  0.0058, -0.6489,
         0.7476, -0.6006,  0.5776,  0.6362,  0.9136, -0.6143,  0.7900,  0.4414,
         0.0468,  0.8018,  0.5283, -0.8179, -0.4670,  0.3438,  0.8491,  0.7271,
         0.1215, -0.8018, -0.3105, -0.1770, -0.6069,  0.5244,  0.3025, -0.9312,
         0.8755,  0.6660,  0.6377, -0.6836, -0.5093, -0.1072,  0.8267, -0.4641,
         0.4780,  0.4844, -0.8418,  0.4641,  0.2705, -0.0309,  0.5186, -0.7578,
        -0.7573,  0.8218, -0.4287, -0.2920], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 5, 6, 35791395]), dtype=torch.float16)
First 100 elements: tensor([ 0.9561,  0.4360, -0.8965,  0.7505, -0.6157,  0.4333, -0.3083,  0.6636,
        -0.7021, -0.6577, -0.0719, -0.7017,  0.8232, -0.9976,  0.6289,  0.6724,
        -0.0094, -0.7368,  0.2769,  0.8159,  0.2903,  0.7319,  0.0943, -0.3967,
         0.5986,  0.9766, -0.7764,  0.2159, -0.0317,  0.6113,  0.2888,  0.2979,
        -0.1210, -0.3320,  0.6060, -0.5420, -0.3811,  0.5479,  0.1974,  0.1797,
        -0.6387,  0.1967, -0.7861,  0.5190, -0.3005,  0.7256,  0.9961, -0.7842,
         0.7432, -0.9375,  0.8335, -0.6328,  0.6099, -0.5044,  0.0058, -0.6489,
         0.7476, -0.6006,  0.5776,  0.6362,  0.9136, -0.6143,  0.7900,  0.4414,
         0.0468,  0.8018,  0.5278, -0.8179, -0.4670,  0.3438,  0.8491,  0.7271,
         0.1215, -0.8018, -0.3105, -0.1770, -0.6069,  0.5244,  0.3025, -0.9312,
         0.8755,  0.6660,  0.6377, -0.6836, -0.5093, -0.1072,  0.8267, -0.4641,
         0.4780,  0.4844, -0.8418,  0.4641,  0.2705, -0.0309,  0.5186, -0.7578,
        -0.7573,  0.8218, -0.4287, -0.2920], dtype=torch.float16)
[accuracy error] paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=4, axis=3, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3962175530 / 4294967400 (92.3%)
Greatest absolute difference: 0.12939453125 at index (0, 0, 0, 7963) (up to 0.01 allowed)
Greatest relative difference: 6.6953125 at index (0, 0, 0, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 5, 6, 35791395]), dtype=torch.float16)
First 100 elements: tensor([-0.0066, -0.1090,  0.0067,  0.1376, -0.1056, -0.0075, -0.0191,  0.0256,
        -0.0720,  0.0120,  0.1385, -0.0750,  0.0712, -0.0369,  0.1071, -0.0413,
         0.0900, -0.0645, -0.0707, -0.0225,  0.0577,  0.0858, -0.0867, -0.0843,
        -0.0732, -0.1409,  0.1224, -0.1026,  0.0330, -0.0344,  0.0146, -0.0062,
         0.1111, -0.0401,  0.0611,  0.0902, -0.0756, -0.0797, -0.0354, -0.1444,
         0.1193,  0.0924, -0.0627, -0.1201, -0.0437, -0.0763,  0.1454, -0.0364,
        -0.0483,  0.0613,  0.0006,  0.0151,  0.0090, -0.0515,  0.0483,  0.0646,
        -0.1111, -0.1316,  0.0663,  0.0297,  0.1208, -0.0814,  0.0795, -0.1372,
        -0.1436, -0.0914, -0.1171,  0.1185, -0.0392,  0.1315,  0.0822, -0.1447,
        -0.0673, -0.0232, -0.0082,  0.0880, -0.0337,  0.1434, -0.0540,  0.0921,
         0.1339,  0.0020,  0.0064, -0.0132,  0.0253, -0.1196,  0.1458,  0.1349,
         0.0497,  0.1127,  0.1454, -0.0935, -0.1378,  0.0997,  0.0191,  0.1048,
         0.0839,  0.0405,  0.0288, -0.0699], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 5, 6, 35791395]), dtype=torch.float16)
First 100 elements: tensor([-8.5402e-04, -1.4183e-02,  8.7500e-04,  1.7899e-02, -1.3741e-02,
        -9.7609e-04, -2.4872e-03,  3.3226e-03, -9.3536e-03,  1.5564e-03,
         1.8021e-02, -9.7504e-03,  9.2621e-03, -4.8027e-03,  1.3931e-02,
        -5.3711e-03,  1.1703e-02, -8.3771e-03, -9.2010e-03, -2.9297e-03,
         7.5111e-03,  1.1147e-02, -1.1276e-02, -1.0963e-02, -9.5139e-03,
        -1.8311e-02,  1.5930e-02, -1.3344e-02,  4.2953e-03, -4.4785e-03,
         1.8969e-03, -8.1015e-04,  1.4442e-02, -5.2147e-03,  7.9422e-03,
         1.1734e-02, -9.8267e-03, -1.0353e-02, -4.6005e-03, -1.8784e-02,
         1.5518e-02,  1.2016e-02, -8.1558e-03, -1.5617e-02, -5.6839e-03,
        -9.9258e-03,  1.8906e-02, -4.7302e-03, -6.2866e-03,  7.9651e-03,
         7.4148e-05,  1.9608e-03,  1.1644e-03, -6.6986e-03,  6.2828e-03,
         8.4000e-03, -1.4442e-02, -1.7105e-02,  8.6212e-03,  3.8605e-03,
         1.5717e-02, -1.0582e-02,  1.0338e-02, -1.7853e-02, -1.8677e-02,
        -1.1887e-02, -1.5228e-02,  1.5419e-02, -5.0926e-03,  1.7105e-02,
         1.0696e-02, -1.8814e-02, -8.7585e-03, -3.0117e-03, -1.0624e-03,
         1.1444e-02, -4.3793e-03,  1.8661e-02, -7.0190e-03,  1.1978e-02,
         1.7426e-02,  2.5463e-04,  8.3208e-04, -1.7185e-03,  3.2902e-03,
        -1.5549e-02,  1.8951e-02,  1.7548e-02,  6.4621e-03,  1.4656e-02,
         1.8906e-02, -1.2161e-02, -1.7914e-02,  1.2962e-02,  2.4872e-03,
         1.3634e-02,  1.0918e-02,  5.2681e-03,  3.7403e-03, -9.0942e-03],
       dtype=torch.float16)
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 48.571533203125 at index (86,) (up to 0.01 allowed)
Greatest relative difference: 0.026058267802000046 at index (34,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([2285.8865, 1737.8579, 2421.4375, 2296.9795, 1424.7628, 1653.7687,
        1359.1617, 2123.6770, 1979.4354, 1660.8301, 1359.2131, 2324.2651,
        2150.5735, 1494.5408, 1697.5573, 2393.7114, 2071.8389, 2271.7815,
        1468.5352, 1785.4475, 2171.4417, 2044.3320, 1693.9243, 1752.1285,
        1980.6993, 1454.8422, 1369.0037, 1359.5448, 1749.7529, 1830.4529,
        1558.7010, 2309.8716, 1743.0156, 1525.6049, 1774.5304, 2215.3223,
        2014.3831, 1637.6158, 1391.9462, 2202.5122, 2134.2036, 1360.0763,
        2235.5205, 1618.4479, 1360.8258, 2495.9570, 2255.6860, 1622.1177,
        2246.3606, 2545.0742, 1813.3296, 1739.2661, 2393.7808, 2012.5813,
        1359.2559, 2468.6326, 2078.2485, 1828.4927, 1392.7817, 2316.4119,
        2512.5681, 2431.4641, 1739.1753, 2611.3054, 2577.7546, 1921.7147,
        2316.0317, 2605.8232, 1359.5453, 1373.7671, 1360.0673, 2003.8398,
        2353.1096, 1362.4276, 1668.3604, 2415.8523, 2616.5742, 2231.6052,
        1894.1112, 2471.6248, 1966.1880, 2692.4414, 1495.5044, 1674.5002,
        1417.4224, 1586.9697, 2436.2263, 2350.0823, 1368.5728, 2324.9351,
        2015.7328, 1367.9012, 2518.9246, 1398.1012, 1638.2791, 2406.1804,
        1722.3177, 1494.9940, 2277.1821, 1453.2668])
DESIRED: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([2333.2725, 1782.3015, 2469.8081, 2344.6716, 1450.1116, 1694.5692,
        1378.8457, 2161.4944, 2019.4109, 1701.8207, 1378.8972, 2372.1787,
        2190.8496, 1526.9155, 1739.8075, 2441.9314, 2106.9031, 2318.9924,
        1494.6770, 1832.4404, 2214.2964, 2079.2297, 1736.0406, 1797.6267,
        2020.5414, 1478.5001, 1398.4994, 1380.3823, 1795.0408, 1875.9962,
        1599.3633, 2357.7827, 1787.8953, 1564.2750, 1822.0088, 2260.8865,
        2051.4502, 1678.3751, 1422.9071, 2247.6987, 2172.7024, 1382.0902,
        2281.6250, 1659.3420, 1384.2324, 2541.5415, 2302.4219, 1662.9657,
        2292.9236, 2588.1418, 1859.0686, 1783.8138, 2441.9199, 2049.6934,
        1378.9293, 2515.9563, 2113.4641, 1874.0233, 1423.6544, 2364.3855,
        2557.0574, 2479.9773, 1783.6796, 2652.1299, 2619.6477, 1967.4846,
        2364.0366, 2646.7388, 1379.9395, 1406.5883, 1382.4119, 2041.7281,
        2401.1155, 1388.1149, 1709.4803, 2464.1833, 2657.0508, 2277.6338,
        1940.5155, 2518.6538, 2007.4283, 2731.7029, 1528.0963, 1715.8210,
        1443.8799, 1627.7104, 2484.7979, 2398.0518, 1397.5443, 2372.9453,
        2052.5735, 1396.6008, 2563.2417, 1427.8347, 1678.9482, 2454.4551,
        1765.8767, 1527.5626, 2324.4558, 1476.6567])
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 6039798.0 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 0.2647058963775635 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216.])
DESIRED: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014.])
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, True, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 6039798.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.2647058963775635 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100, 1]), dtype=torch.float32)
All elements: tensor([16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216., 16777216., 16777216.,
        16777216., 16777216., 16777216., 16777216.])
DESIRED: (shape=torch.Size([100, 1]), dtype=torch.float32)
All elements: tensor([22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014., 22817014., 22817014.,
        22817014., 22817014., 22817014., 22817014.])
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 4.813709259033203 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 0.21097010374069214 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307])
DESIRED: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170])
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, True, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 4.813709259033203 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.21097010374069214 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100, 1]), dtype=torch.float32)
All elements: tensor([27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307, 27.6307,
        27.6307, 27.6307, 27.6307, 27.6307])
DESIRED: (shape=torch.Size([100, 1]), dtype=torch.float32)
All elements: tensor([22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170, 22.8170,
        22.8170, 22.8170, 22.8170, 22.8170])
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: inf at index (0,) (up to 0.01 allowed)
Greatest relative difference: nan at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100]), dtype=torch.float16)
All elements: tensor([2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.,
        2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048., 2048.],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([100]), dtype=torch.float16)
All elements: tensor([inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf,
        inf, inf, inf, inf], dtype=torch.float16)
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 43.53125 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100]), dtype=torch.float16)
All elements: tensor([0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039, 0.0039,
        0.0039], dtype=torch.float16)
DESIRED: (shape=torch.Size([100]), dtype=torch.float16)
All elements: tensor([43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312, 43.5312,
        43.5312, 43.5312, 43.5312, 43.5312], dtype=torch.float16)
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 2, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 2 (100.0%)
Greatest absolute difference: 0.028252199292182922 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 0.8364461660385132 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2]), dtype=torch.float32)
All elements: tensor([0.0055, 0.0055])
DESIRED: (shape=torch.Size([2]), dtype=torch.float32)
All elements: tensor([0.0338, 0.0338])
[accuracy error] paddle.nn.functional.pairwise_distance(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), 2, 1e-06, False, None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 5 (100.0%)
Greatest absolute difference: 0.029693603515625 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5]), dtype=torch.float16)
All elements: tensor([0., 0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([5]), dtype=torch.float16)
All elements: tensor([0.0297, 0.0297, 0.0297, 0.0297, 0.0297], dtype=torch.float16)
[accuracy error] paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100.0%)
Greatest absolute difference: 48.459716796875 at index (51,) (up to 0.01 allowed)
Greatest relative difference: 0.025675617158412933 at index (56,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([2015.0942, 2688.7078, 2543.0623, 1519.6862, 1362.0714, 1468.8458,
        2323.5874, 2130.3865, 1360.3340, 2134.7917, 1433.5978, 1360.0925,
        2208.7412, 1979.6100, 1498.3639, 2453.5227, 1377.2095, 1366.1068,
        1899.8370, 1360.2255, 2384.8572, 1976.5496, 2391.3994, 2408.1116,
        1980.1311, 2041.6208, 1726.1134, 1797.0070, 1787.6548, 2102.4351,
        2096.7576, 1502.5382, 1493.8320, 1648.1621, 2228.8850, 1359.7346,
        1697.6348, 2277.5530, 1386.9944, 1760.8995, 1439.8478, 2482.8145,
        1478.1881, 1430.4106, 1656.4116, 1589.8677, 1964.5513, 1471.7999,
        2262.9192, 1723.3002, 1982.4758, 2428.1677, 1603.6484, 2705.1201,
        2117.0691, 1359.5852, 1545.9420, 2060.1375, 1380.1345, 1473.2047,
        1359.4475, 1596.2491, 2130.5303, 1696.3711, 1385.5369, 2217.0029,
        1504.4899, 1437.7258, 1741.3442, 1510.4874, 1577.1881, 1833.7681,
        1858.2054, 2337.9946, 2009.2681, 1833.1086, 1372.4708, 1619.5199,
        1409.5583, 1382.1332, 1642.2526, 2665.4580, 1371.8644, 1375.3505,
        2183.4868, 1576.7080, 2164.8928, 2453.3342, 1628.4003, 1446.5304,
        1481.6084, 1361.8407, 1432.7031, 2591.0439, 1359.4083, 1565.1869,
        1385.0254, 1361.8373, 1508.6605, 1470.8945])
DESIRED: (shape=torch.Size([100]), dtype=torch.float32)
All elements: tensor([2052.0593, 2727.8896, 2586.3389, 1557.4558, 1387.7399, 1495.0228,
        2371.6606, 2168.7236, 1382.6798, 2173.4021, 1457.9060, 1382.1876,
        2254.1804, 2019.6624, 1531.7490, 2501.8062, 1410.3839, 1393.6576,
        1946.4023, 1382.6208, 2433.0940, 2016.9017, 2439.7178, 2456.3613,
        2020.0657, 2076.6675, 1769.8947, 1843.4755, 1834.5577, 2138.6951,
        2132.7888, 1536.7991, 1526.0739, 1688.8352, 2274.9360, 1381.3359,
        1739.7874, 2324.7200, 1419.2000, 1806.9957, 1463.5455, 2529.1870,
        1506.4105, 1455.0889, 1697.1985, 1630.5344, 2005.8495, 1498.5911,
        2309.8687, 1767.0044, 2022.2627, 2476.6274, 1644.4835, 2744.1233,
        2154.4270, 1380.9376, 1586.6810, 2095.0325, 1413.4086, 1500.3922,
        1379.9038, 1637.0549, 2169.0034, 1738.5363, 1418.0786, 2262.7112,
        1539.2274, 1461.6447, 1786.0774, 1546.8943, 1617.8367, 1879.1359,
        1903.6626, 2386.0400, 2046.7668, 1878.5336, 1404.2740, 1660.2947,
        1437.3890, 1415.5662, 1682.9780, 2704.8564, 1403.1617, 1408.5190,
        2227.9209, 1617.3387, 2206.8901, 2501.6025, 1669.1896, 1469.6019,
        1510.6388, 1387.4086, 1457.0493, 2632.3994, 1379.2146, 1605.8038,
        1417.6404, 1387.3855, 1544.6049, 1497.5203])
[accuracy error] paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.3, 0.300000009, training=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2182826397 / 2281701384 (95.7%)
Greatest absolute difference: 0.5 at index (0, 0, 0, 11892130) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 4, 95070891]), dtype=torch.float32)
First 100 elements: tensor([-0.0012,  0.1148,  0.4453, -0.1134, -0.1289,  0.0688,  0.1340,  0.4351,
         0.4443,  0.2461, -0.0144,  0.1284, -0.1425,  0.2809, -0.0940,  0.1378,
        -0.1396, -0.1080, -0.0542, -0.0779, -0.0241,  0.1266, -0.0360, -0.0553,
         0.3415,  0.4012,  0.2351, -0.1461, -0.0859, -0.1100,  0.2985, -0.0369,
         0.1197,  0.3717,  0.1283, -0.0764, -0.1070,  0.2848,  0.2853, -0.0389,
        -0.0924, -0.1475, -0.0436,  0.1831, -0.0969, -0.0430,  0.0255,  0.1691,
        -0.0484, -0.0020, -0.0621,  0.3175, -0.0968,  0.0888, -0.0806, -0.0356,
        -0.0017, -0.1201,  0.1978,  0.0299, -0.0014, -0.0857, -0.0295, -0.1243,
         0.4439,  0.4276,  0.1585,  0.0354,  0.3578, -0.1243, -0.0433, -0.0429,
        -0.1468, -0.0790, -0.0017,  0.3000, -0.0423, -0.1374,  0.1783, -0.1227,
        -0.0692, -0.0992,  0.3642, -0.1037, -0.1132, -0.1179,  0.2223, -0.1035,
         0.2221,  0.4904,  0.0665,  0.2143, -0.1155,  0.3202, -0.1459,  0.2969,
         0.4030,  0.2541, -0.0998,  0.3070])
DESIRED: (shape=torch.Size([2, 3, 4, 95070891]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
[accuracy error] paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.3, 0.300000009, training=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2182816627 / 2281701390 (95.7%)
Greatest absolute difference: 0.5 at index (0, 0, 6528011, 4) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 76056713, 5]), dtype=torch.float32)
First 100 elements: tensor([-0.0910,  0.0617,  0.2694,  0.2017, -0.0709, -0.0407, -0.1353, -0.0585,
        -0.0511, -0.0289, -0.0623,  0.0319, -0.1281,  0.1387, -0.0102, -0.1182,
         0.1164,  0.2153,  0.3763, -0.0090, -0.0864,  0.2052,  0.2140,  0.0368,
        -0.0462,  0.1522, -0.1052, -0.1417,  0.4293,  0.1536, -0.0888, -0.0303,
        -0.0199, -0.0065,  0.1841,  0.4400,  0.0421,  0.1117,  0.2180,  0.1065,
        -0.1121,  0.0200,  0.0628, -0.0737,  0.4306,  0.2936, -0.0984, -0.0825,
        -0.0989,  0.2369, -0.1153, -0.0111,  0.4042,  0.2638,  0.0568, -0.0873,
        -0.1417, -0.0288,  0.3122, -0.0652, -0.0365, -0.0313, -0.1278, -0.1331,
        -0.1461,  0.3888,  0.1786, -0.0928, -0.1136, -0.0162,  0.0773,  0.0204,
         0.1160,  0.0071,  0.3072, -0.0165, -0.1174,  0.0467,  0.3624, -0.1428,
         0.4161, -0.0666, -0.1464,  0.2868,  0.0720,  0.0836,  0.0208, -0.0108,
         0.3176, -0.0627, -0.0833,  0.1869,  0.0552,  0.3131,  0.3752,  0.2468,
        -0.0967, -0.0588,  0.3260,  0.2745])
DESIRED: (shape=torch.Size([2, 3, 76056713, 5]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
[accuracy error] paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.3, 0.300000009, training=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2182843486 / 2281701400 (95.7%)
Greatest absolute difference: 0.5 at index (0, 4932974, 1, 3) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 57042535, 4, 5]), dtype=torch.float32)
First 100 elements: tensor([ 0.3181, -0.1478, -0.1374,  0.1518, -0.0099,  0.1210, -0.1212,  0.3504,
         0.0208, -0.1055,  0.0992, -0.0059, -0.1120, -0.0927,  0.1396, -0.1311,
        -0.0186, -0.0127, -0.0863,  0.0211, -0.1259,  0.3081, -0.1264,  0.4256,
        -0.0927, -0.0975,  0.2323,  0.2561, -0.0760, -0.1027, -0.1022,  0.1419,
         0.1369, -0.0612, -0.1136, -0.0052,  0.2221, -0.1176,  0.0702,  0.2444,
        -0.0308, -0.1332, -0.0381, -0.0292, -0.0621,  0.1821,  0.3048,  0.1228,
         0.3880, -0.0694,  0.3096, -0.1292, -0.0563,  0.4968, -0.1040,  0.0160,
        -0.0493, -0.0991, -0.0194,  0.1239,  0.0109, -0.0554,  0.3505, -0.0665,
         0.0690, -0.1127, -0.0429, -0.0305,  0.2376,  0.1468, -0.0531, -0.0802,
        -0.0824,  0.4076,  0.3164, -0.0801, -0.0167, -0.0581, -0.0255,  0.0669,
         0.2020,  0.4871, -0.0163,  0.0600, -0.1099, -0.0531,  0.3607, -0.1311,
         0.1970, -0.0319,  0.1292,  0.0320, -0.0296,  0.4694,  0.0059,  0.1723,
        -0.0207,  0.0320, -0.0437,  0.1223])
DESIRED: (shape=torch.Size([2, 57042535, 4, 5]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
[accuracy error] paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.3, 0.300000009, training=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2182843505 / 2281701420 (95.7%)
Greatest absolute difference: 0.5 at index (1644324, 2, 1, 3) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([38028357, 3, 4, 5]), dtype=torch.float32)
First 100 elements: tensor([ 0.3181, -0.1478, -0.1374,  0.1518, -0.0099,  0.1210, -0.1212,  0.3504,
         0.0208, -0.1055,  0.0992, -0.0059, -0.1120, -0.0927,  0.1396, -0.1311,
        -0.0186, -0.0127, -0.0863,  0.0211, -0.1259,  0.3081, -0.1264,  0.4256,
        -0.0927, -0.0975,  0.2323,  0.2561, -0.0760, -0.1027, -0.1022,  0.1419,
         0.1369, -0.0612, -0.1136, -0.0052,  0.2221, -0.1176,  0.0702,  0.2444,
        -0.0308, -0.1332, -0.0381, -0.0292, -0.0621,  0.1821,  0.3048,  0.1228,
         0.3880, -0.0694,  0.3096, -0.1292, -0.0563,  0.4968, -0.1040,  0.0160,
        -0.0493, -0.0991, -0.0194,  0.1239,  0.0109, -0.0554,  0.3505, -0.0665,
         0.0690, -0.1127, -0.0429, -0.0305,  0.2376,  0.1468, -0.0531, -0.0802,
        -0.0824,  0.4076,  0.3164, -0.0801, -0.0167, -0.0581, -0.0255,  0.0669,
         0.2020,  0.4871, -0.0163,  0.0600, -0.1099, -0.0531,  0.3607, -0.1311,
         0.1970, -0.0319,  0.1292,  0.0320, -0.0296,  0.4694,  0.0059,  0.1723,
        -0.0207,  0.0320, -0.0437,  0.1223])
DESIRED: (shape=torch.Size([38028357, 3, 4, 5]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
[accuracy error] paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.3, 0.300000009, training=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4108784992 / 4294967340 (95.7%)
Greatest absolute difference: 0.5 at index (25, 1, 2, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 2, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([71582789, 3, 4, 5]), dtype=torch.float16)
First 100 elements: tensor([ 0.0415,  0.1411,  0.0674, -0.0119,  0.1997, -0.0909,  0.4846, -0.0454,
         0.1888, -0.0379, -0.1471, -0.1487, -0.0881,  0.3083, -0.1390, -0.1426,
         0.1016,  0.2053, -0.1024,  0.0357, -0.1295,  0.1119,  0.1702,  0.5000,
        -0.1022,  0.3115, -0.1121, -0.0966, -0.1305,  0.0778,  0.3596, -0.0454,
        -0.0033,  0.0663,  0.1079, -0.1116,  0.4050, -0.0049, -0.0063, -0.1189,
        -0.0030,  0.0842, -0.1342, -0.1426,  0.1870, -0.0768,  0.1108,  0.1263,
         0.0184, -0.1207, -0.0706,  0.2068,  0.4819, -0.0475, -0.0936, -0.1333,
        -0.1119, -0.1395, -0.0319, -0.0550, -0.1382,  0.0608, -0.1174,  0.1461,
        -0.0345, -0.1058, -0.0080, -0.1399,  0.4397,  0.0194,  0.3511,  0.3955,
        -0.0516,  0.2791, -0.1462,  0.2189,  0.2871,  0.1744,  0.0341,  0.1649,
         0.2079,  0.3035,  0.4148,  0.4082, -0.0190, -0.0740,  0.3389,  0.0384,
        -0.0731, -0.1017,  0.4822,  0.0389, -0.0259,  0.0393,  0.3933,  0.4014,
        -0.1388, -0.0729,  0.2642,  0.3247], dtype=torch.float16)
DESIRED: (shape=torch.Size([71582789, 3, 4, 5]), dtype=torch.float16)
First 100 elements: tensor([ 0.0415,  0.1411,  0.0674, -0.0119,  0.1997, -0.0909,  0.4846, -0.0454,
         0.1888, -0.0379, -0.1471, -0.1487, -0.0881,  0.3083, -0.1390, -0.1426,
         0.1016,  0.2053, -0.1024,  0.0357, -0.1295,  0.1119,  0.1702,  0.5000,
        -0.1022,  0.3115, -0.1121, -0.0966, -0.1305,  0.0778,  0.3596, -0.0454,
        -0.0033,  0.0663,  0.1079, -0.1116,  0.4050, -0.0049, -0.0063, -0.1189,
        -0.0030,  0.0842, -0.1342, -0.1426,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
[accuracy error] paddle.ones_like(Tensor([1, 10, 114085069, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701380 / 2281701380 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 10, 114085069, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 10, 114085069, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 10, 8, 28521268],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701440 / 2281701440 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 10, 8, 28521268]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 10, 8, 28521268]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 1024, 2228225],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702400 / 2281702400 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1024, 2228225]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 1024, 2228225]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 1048576, 128, 32],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1048576, 128, 32]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 1048576, 128, 32]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 12, 9, 21126865],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701420 / 2281701420 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 12, 9, 21126865]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 12, 9, 21126865]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 12, 95070891, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 12, 95070891, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 12, 95070891, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 126761188, 9, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 126761188, 9, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 126761188, 9, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 128, 1114113, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281703424 / 2281703424 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 128, 1114113, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 128, 1114113, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 128, 17825793],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701504 / 2281701504 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 128, 17825793]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 128, 17825793]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 128, 2097152, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 128, 2097152, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 128, 2097152, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 128, 8, 2228225],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702400 / 2281702400 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 128, 8, 2228225]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 128, 8, 2228225]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 128, 8, 4194304],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 128, 8, 4194304]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 128, 8, 4194304]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 142606337, 8, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701392 / 2281701392 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 142606337, 8, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 142606337, 8, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 144, 200, 79226],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281708800 / 2281708800 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 144, 200, 79226]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 144, 200, 79226]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 144, 7922575, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701600 / 2281701600 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 144, 7922575, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 144, 7922575, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 15, 15, 10140896],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701600 / 2281701600 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 15, 15, 10140896]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 15, 15, 10140896]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 15, 76056713, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701390 / 2281701390 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 15, 76056713, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 15, 76056713, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 16777216, 16, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16777216, 16, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 16777216, 16, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 17825793, 128],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701504 / 2281701504 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 17825793, 128]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 17825793, 128]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 17825793, 8, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701504 / 2281701504 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 17825793, 8, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 17825793, 8, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 2281701379, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 2281701379],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 2281701379]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([1, 262144, 128, 128],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 262144, 128, 128]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 262144, 128, 128]), dtype=torch.float16)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float16)
[accuracy error] paddle.ones_like(Tensor([1, 262144, 128, 128],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 262144, 128, 128]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 262144, 128, 128]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 1048576, 128],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 1048576, 128]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 32, 1048576, 128]), dtype=torch.float16)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float16)
[accuracy error] paddle.ones_like(Tensor([1, 32, 1048576, 128],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 1048576, 128]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 1048576, 128]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 128, 1048576],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 128, 1048576]), dtype=torch.float16)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 32, 128, 1048576]), dtype=torch.float16)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float16)
[accuracy error] paddle.ones_like(Tensor([1, 32, 128, 1048576],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 128, 1048576]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 128, 1048576]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 16, 8388608],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 16, 8388608]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 16, 8388608]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 16777216, 8],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 16777216, 8]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 16777216, 8]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 4194304, 32],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 4194304, 32]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 4194304, 32]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 8, 16777216],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 8, 16777216]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 8, 16777216]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 32, 8388608, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 8388608, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 32, 8388608, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 33554432, 8, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 33554432, 8, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 33554432, 8, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 4096, 557057],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281705472 / 2281705472 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4096, 557057]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 4096, 557057]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 4294967295],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967295 / 4294967295 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4294967295]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 4294967295]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 5704254, 200, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701600 / 2281701600 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 5704254, 200, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 5704254, 200, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 58, 39339679],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701382 / 2281701382 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 58, 39339679]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 58, 39339679]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 64, 67108864],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 64, 67108864]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 64, 67108864]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 67108864, 8, 8],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 67108864, 8, 8]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 67108864, 8, 8]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 76056713, 15, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701390 / 2281701390 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 76056713, 15, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 76056713, 15, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1, 8912897, 256],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701632 / 2281701632 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8912897, 256]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([1, 8912897, 256]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([10, 214748365],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2147483650 / 2147483650 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 214748365]), dtype=torch.float64)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.], dtype=torch.float64)
DESIRED: (shape=torch.Size([10, 214748365]), dtype=torch.float64)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], dtype=torch.float64)
[accuracy error] paddle.ones_like(Tensor([10563433, 12, 9, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701528 / 2281701528 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10563433, 12, 9, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([10563433, 12, 9, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([1073741824, 2, 2],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4294967296 / 4294967296 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741824, 2, 2]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([1073741824, 2, 2]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([139265, 128, 128],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281717760 / 2281717760 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([139265, 128, 128]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([139265, 128, 128]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([139265, 128, 8, 16],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281717760 / 2281717760 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([139265, 128, 8, 16]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([139265, 128, 8, 16]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([14260634, 10, 8, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701440 / 2281701440 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([14260634, 10, 8, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([14260634, 10, 8, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([2228225, 1024, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702400 / 2281702400 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2228225, 1024, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([2228225, 1024, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([2270350, 1005],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701750 / 2281701750 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2270350, 1005]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2270350, 1005]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([2272611, 1004],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701444 / 2281701444 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2272611, 1004]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2272611, 1004]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([2274877, 1003],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701631 / 2281701631 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2274877, 1003]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2274877, 1003]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([2277148, 1002],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281702296 / 2281702296 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2277148, 1002]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2277148, 1002]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([2279422, 1001],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701422 / 2281701422 (100.0%)
Greatest absolute difference: 1 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2279422, 1001]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2279422, 1001]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([2281701379],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701379 / 2281701379 (100.0%)
Greatest absolute difference: 1 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([2281701379]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(Tensor([39339679, 58, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701382 / 2281701382 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([39339679, 58, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([39339679, 58, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([39613, 144, 200, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281708800 / 2281708800 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([39613, 144, 200, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([39613, 144, 200, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([4, 280, 376, 25, 217],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2284576000 / 2284576000 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 280, 376, 25, 217]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([4, 280, 376, 25, 217]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([4, 280, 376, 5419, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2282049280 / 2282049280 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 280, 376, 5419, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([4, 280, 376, 5419, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([4, 280, 81490, 25, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281720000 / 2281720000 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 280, 81490, 25, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([4, 280, 81490, 25, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([4, 60684, 376, 25, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281718400 / 2281718400 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 60684, 376, 25, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([4, 60684, 376, 25, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([5070448, 15, 15, 2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701600 / 2281701600 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5070448, 15, 15, 2]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([5070448, 15, 15, 2]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([557057, 4096, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281705472 / 2281705472 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([557057, 4096, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([557057, 4096, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([69633, 128, 256],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281734144 / 2281734144 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([69633, 128, 256]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([69633, 128, 256]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(Tensor([867, 280, 376, 25, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281944000 / 2281944000 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([867, 280, 376, 25, 1]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([867, 280, 376, 25, 1]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(x=Tensor([253522376, 3, 3],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([253522376, 3, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([253522376, 3, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.ones_like(x=Tensor([253522376, 3, 3],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([253522376, 3, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([253522376, 3, 3]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(x=Tensor([253522376, 3, 3],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([253522376, 3, 3]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([253522376, 3, 3]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(x=Tensor([3, 253522376, 3],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 253522376, 3]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([3, 253522376, 3]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.ones_like(x=Tensor([3, 253522376, 3],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 253522376, 3]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([3, 253522376, 3]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(x=Tensor([3, 253522376, 3],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 253522376, 3]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 253522376, 3]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.ones_like(x=Tensor([3, 3, 253522376],"bool"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 3, 253522376]), dtype=torch.bool)
First 100 elements: tensor([False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False,
        False, False, False, False, False, False, False, False, False, False])
DESIRED: (shape=torch.Size([3, 3, 253522376]), dtype=torch.bool)
First 100 elements: tensor([True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True, True, True, True, True, True, True, True, True,
        True, True, True, True])
[accuracy error] paddle.ones_like(x=Tensor([3, 3, 253522376],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 3, 253522376]), dtype=torch.float32)
First 100 elements: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0.])
DESIRED: (shape=torch.Size([3, 3, 253522376]), dtype=torch.float32)
First 100 elements: tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[accuracy error] paddle.ones_like(x=Tensor([3, 3, 253522376],"int32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2281701384 / 2281701384 (100.0%)
Greatest absolute difference: 1 at index (0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.0 at index (0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 3, 253522376]), dtype=torch.int32)
First 100 elements: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 3, 253522376]), dtype=torch.int32)
First 100 elements: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1], dtype=torch.int32)
[accuracy error] paddle.roll(Tensor([1, 114131, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10289 / 4294977792 (0.0%)
Greatest absolute difference: 0.5 at index (0, 114130, 5, 0, 700) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 114130, 5, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 114131, 7, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.3367,  0.4329,  0.0663, -0.2683,  0.4233,  0.2006,  0.4268, -0.3831,
         0.1248, -0.4834, -0.4031, -0.2277, -0.4460, -0.2642, -0.1390, -0.0097,
        -0.0285,  0.4841,  0.2362, -0.2129,  0.3494,  0.4551, -0.4424, -0.3040,
         0.4551,  0.0702,  0.3562, -0.1864, -0.4456, -0.0589, -0.2091,  0.2666,
        -0.0387, -0.2961, -0.1187, -0.2527,  0.4844, -0.2568, -0.1686,  0.1887,
        -0.3230,  0.0101,  0.0784, -0.1482, -0.0732,  0.0744, -0.0355, -0.3408,
        -0.4885,  0.4941, -0.2646,  0.1429,  0.1334,  0.1211,  0.4146,  0.3252,
         0.2837, -0.2399,  0.3459,  0.4517,  0.0768, -0.4263,  0.4775,  0.2739,
        -0.4285,  0.1799,  0.3267, -0.1516, -0.3923, -0.0302, -0.0117,  0.2491,
        -0.2886, -0.0577, -0.0944,  0.2106, -0.2332, -0.3245,  0.2416, -0.4805,
         0.0867, -0.2322,  0.0556,  0.3618,  0.2581, -0.4919, -0.1193,  0.1498,
         0.3965, -0.1697,  0.1910, -0.4644, -0.2827, -0.1144, -0.1454, -0.0509,
        -0.2954,  0.2632,  0.4539, -0.1628], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 114131, 7, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.3367,  0.4329,  0.0663, -0.2683,  0.4233,  0.2006,  0.4268, -0.3831,
         0.1248, -0.4834, -0.4031, -0.2277, -0.4460, -0.2642, -0.1390, -0.0097,
        -0.0285,  0.4841,  0.2362, -0.2129,  0.3494,  0.4551, -0.4424, -0.3040,
         0.4551,  0.0702,  0.3562, -0.1864, -0.4456, -0.0589, -0.2091,  0.2666,
        -0.0387, -0.2961, -0.1187, -0.2527,  0.4844, -0.2568, -0.1686,  0.1887,
        -0.3230,  0.0101,  0.0784, -0.1482, -0.0732,  0.0744, -0.0355, -0.3408,
        -0.4885,  0.4941, -0.2646,  0.1429,  0.1334,  0.1211,  0.4146,  0.3252,
         0.2837, -0.2399,  0.3459,  0.4517,  0.0768, -0.4263,  0.4775,  0.2739,
        -0.4285,  0.1799,  0.3267, -0.1516, -0.3923, -0.0302, -0.0117,  0.2491,
        -0.2886, -0.0577, -0.0944,  0.2106, -0.2332, -0.3245,  0.2416, -0.4805,
         0.0867, -0.2322,  0.0556,  0.3618,  0.2581, -0.4919, -0.1193,  0.1498,
         0.3965, -0.1697,  0.1910, -0.4644, -0.2827, -0.1144, -0.1454, -0.0509,
        -0.2954,  0.2632,  0.4539, -0.1628], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 114131, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10278 / 4294977792 (0.0%)
Greatest absolute difference: 0.5 at index (0, 114130, 5, 6, 10) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 114130, 5, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 114131, 7, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.1169, -0.4529,  0.3337, -0.3660,  0.4602, -0.4617,  0.1593, -0.1146,
         0.4023, -0.0764,  0.3196,  0.0399,  0.0391, -0.4675,  0.1002, -0.1698,
         0.2068, -0.0678,  0.1497,  0.3086,  0.1692, -0.0185,  0.0103, -0.3743,
        -0.3406, -0.0748,  0.2050, -0.3706, -0.4490,  0.3037, -0.3545,  0.4355,
        -0.2417,  0.0348, -0.1282,  0.2808,  0.3438, -0.2172, -0.3767,  0.2944,
        -0.1937, -0.0280,  0.2161,  0.0948,  0.3557,  0.3469, -0.2390, -0.0229,
        -0.1150, -0.2074,  0.0597, -0.0433,  0.3025, -0.0834,  0.0583, -0.4343,
        -0.3848, -0.1343,  0.1979,  0.4089,  0.0653, -0.0981, -0.4092, -0.4060,
         0.2651,  0.2812, -0.1938, -0.4253, -0.3018,  0.1593, -0.2081,  0.4158,
         0.0443,  0.4927, -0.1104, -0.3335,  0.4026, -0.4968,  0.3723,  0.3706,
         0.3298,  0.2024,  0.4697,  0.1305, -0.4006, -0.2406,  0.4351,  0.0167,
         0.1384, -0.1523, -0.1121,  0.4927,  0.0629,  0.0880,  0.3684, -0.2805,
        -0.2411,  0.4993, -0.0201,  0.4587], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 114131, 7, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.1169, -0.4529,  0.3337, -0.3660,  0.4602, -0.4617,  0.1593, -0.1146,
         0.4023, -0.0764,  0.3196,  0.0399,  0.0391, -0.4675,  0.1002, -0.1698,
         0.2068, -0.0678,  0.1497,  0.3086,  0.1692, -0.0185,  0.0103, -0.3743,
        -0.3406, -0.0748,  0.2050, -0.3706, -0.4490,  0.3037, -0.3545,  0.4355,
        -0.2417,  0.0348, -0.1282,  0.2808,  0.3438, -0.2172, -0.3767,  0.2944,
        -0.1937, -0.0280,  0.2161,  0.0948,  0.3557,  0.3469, -0.2390, -0.0229,
        -0.1150, -0.2074,  0.0597, -0.0433,  0.3025, -0.0834,  0.0583, -0.4343,
        -0.3848, -0.1343,  0.1979,  0.4089,  0.0653, -0.0981, -0.4092, -0.4060,
         0.2651,  0.2812, -0.1938, -0.4253, -0.3018,  0.1593, -0.2081,  0.4158,
         0.0443,  0.4927, -0.1104, -0.3335,  0.4026, -0.4968,  0.3723,  0.3706,
         0.3298,  0.2024,  0.4697,  0.1305, -0.4006, -0.2406,  0.4351,  0.0167,
         0.1384, -0.1523, -0.1121,  0.4927,  0.0629,  0.0880,  0.3684, -0.2805,
        -0.2411,  0.4993, -0.0201,  0.4587], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 14, 1369569],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3189 / 4294968384 (0.0%)
Greatest absolute difference: 0.499755859375 at index (0, 15, 10, 10, 1368616) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 10, 10, 1368481) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 14, 1369569]), dtype=torch.float16)
First 100 elements: tensor([-0.4656,  0.3411, -0.2404,  0.0119, -0.1172, -0.0807, -0.2866,  0.3000,
         0.2386,  0.0584, -0.0093, -0.1289,  0.0994, -0.3035, -0.3652,  0.1160,
         0.4287,  0.4893, -0.4456, -0.3237, -0.3682, -0.1262,  0.2269, -0.0388,
         0.0301, -0.2406,  0.2739, -0.3506,  0.2042, -0.3347,  0.0625,  0.0362,
        -0.4219, -0.0415, -0.2837,  0.3916,  0.1190, -0.0501,  0.0386, -0.4302,
         0.1405, -0.2551, -0.0791,  0.4561, -0.2605, -0.3394,  0.2443, -0.0872,
        -0.4812,  0.4875,  0.3589,  0.0927,  0.1978, -0.2905, -0.4207,  0.1760,
         0.3643, -0.4099,  0.0775,  0.4792, -0.1621, -0.4370, -0.3286, -0.4314,
         0.2766,  0.0685, -0.0253,  0.0238, -0.3511,  0.3782, -0.0028, -0.3235,
         0.3838,  0.3376,  0.2147,  0.1932, -0.2427, -0.4216,  0.1536,  0.2292,
         0.4241,  0.1495,  0.0175, -0.2081,  0.2913, -0.0040,  0.2495,  0.0913,
         0.3083, -0.4529,  0.4177, -0.3440,  0.1119, -0.2844,  0.3464,  0.4807,
         0.3577, -0.0400,  0.2385,  0.3875], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 14, 1369569]), dtype=torch.float16)
First 100 elements: tensor([-0.4656,  0.3411, -0.2404,  0.0119, -0.1172, -0.0807, -0.2866,  0.3000,
         0.2386,  0.0584, -0.0093, -0.1289,  0.0994, -0.3035, -0.3652,  0.1160,
         0.4287,  0.4893, -0.4456, -0.3237, -0.3682, -0.1262,  0.2269, -0.0388,
         0.0301, -0.2406,  0.2739, -0.3506,  0.2042, -0.3347,  0.0625,  0.0362,
        -0.4219, -0.0415, -0.2837,  0.3916,  0.1190, -0.0501,  0.0386, -0.4302,
         0.1405, -0.2551, -0.0791,  0.4561, -0.2605, -0.3394,  0.2443, -0.0872,
        -0.4812,  0.4875,  0.3589,  0.0927,  0.1978, -0.2905, -0.4207,  0.1760,
         0.3643, -0.4099,  0.0775,  0.4792, -0.1621, -0.4370, -0.3286, -0.4314,
         0.2766,  0.0685, -0.0253,  0.0238, -0.3511,  0.3782, -0.0028, -0.3235,
         0.3838,  0.3376,  0.2147,  0.1932, -0.2427, -0.4216,  0.1536,  0.2292,
         0.4241,  0.1495,  0.0175, -0.2081,  0.2913, -0.0040,  0.2495,  0.0913,
         0.3083, -0.4529,  0.4177, -0.3440,  0.1119, -0.2844,  0.3464,  0.4807,
         0.3577, -0.0400,  0.2385,  0.3875], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 14, 1369569],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3201 / 4294968384 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 2, 2, 1369367) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 2, 1368481) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 14, 1369569]), dtype=torch.float16)
First 100 elements: tensor([-0.2979,  0.0039, -0.1758, -0.3008, -0.2252, -0.4121, -0.3440,  0.1976,
        -0.4500,  0.0300, -0.1215,  0.3716, -0.4646,  0.0167, -0.0721,  0.0813,
         0.1155, -0.4209, -0.0352, -0.4045,  0.4915,  0.3772,  0.2411,  0.4175,
        -0.0123,  0.3098, -0.0648,  0.3242,  0.2366, -0.4973, -0.4329, -0.4551,
         0.1901,  0.2910,  0.2363,  0.3069,  0.3174,  0.0454,  0.2554, -0.4673,
         0.0336,  0.0245, -0.0352, -0.2046,  0.4192, -0.4509,  0.3464, -0.1510,
        -0.1812, -0.4800, -0.2881,  0.1718, -0.4583, -0.4258, -0.2340, -0.0009,
         0.0736, -0.1652, -0.4290, -0.2800,  0.1794,  0.0323,  0.4414,  0.0688,
         0.0020,  0.1443, -0.1616,  0.4324,  0.0290,  0.2761, -0.1135,  0.2054,
         0.0208,  0.4543,  0.1700, -0.2401, -0.2881, -0.0846, -0.0936, -0.0130,
        -0.1426, -0.3796, -0.0549,  0.1146, -0.3411, -0.0514, -0.0450,  0.2766,
        -0.1583,  0.0540, -0.4590,  0.0585, -0.4915, -0.4656,  0.4541, -0.1674,
         0.0023,  0.0840, -0.3889,  0.0936], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 14, 1369569]), dtype=torch.float16)
First 100 elements: tensor([-0.2979,  0.0039, -0.1758, -0.3008, -0.2252, -0.4121, -0.3440,  0.1976,
        -0.4500,  0.0300, -0.1215,  0.3716, -0.4646,  0.0167, -0.0721,  0.0813,
         0.1155, -0.4209, -0.0352, -0.4045,  0.4915,  0.3772,  0.2411,  0.4175,
        -0.0123,  0.3098, -0.0648,  0.3242,  0.2366, -0.4973, -0.4329, -0.4551,
         0.1901,  0.2910,  0.2363,  0.3069,  0.3174,  0.0454,  0.2554, -0.4673,
         0.0336,  0.0245, -0.0352, -0.2046,  0.4192, -0.4509,  0.3464, -0.1510,
        -0.1812, -0.4800, -0.2881,  0.1718, -0.4583, -0.4258, -0.2340, -0.0009,
         0.0736, -0.1652, -0.4290, -0.2800,  0.1794,  0.0323,  0.4414,  0.0688,
         0.0020,  0.1443, -0.1616,  0.4324,  0.0290,  0.2761, -0.1135,  0.2054,
         0.0208,  0.4543,  0.1700, -0.2401, -0.2881, -0.0846, -0.0936, -0.0130,
        -0.1426, -0.3796, -0.0549,  0.1146, -0.3411, -0.0514, -0.0450,  0.2766,
        -0.1583,  0.0540, -0.4590,  0.0585, -0.4915, -0.4656,  0.4541, -0.1674,
         0.0023,  0.0840, -0.3889,  0.0936], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 21, 913046],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3205 / 4294968384 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 13, 17, 912640) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 10, 17, 911958) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 21, 913046]), dtype=torch.float16)
First 100 elements: tensor([ 0.3872, -0.2415, -0.4907,  0.3169, -0.3359, -0.1464, -0.0148, -0.2878,
         0.4243, -0.0211, -0.2225, -0.3076,  0.0062, -0.1693, -0.3599, -0.1633,
        -0.3398, -0.3376, -0.3796, -0.1550,  0.1646, -0.0055,  0.1251, -0.2952,
         0.4075, -0.4463,  0.0277, -0.2693,  0.2629,  0.1251, -0.4644, -0.4500,
         0.0633,  0.1126, -0.3809,  0.4934, -0.3396,  0.3755, -0.0281, -0.0406,
        -0.2600,  0.2661, -0.3455,  0.4146,  0.4331,  0.0077, -0.2499,  0.0188,
         0.1833,  0.2537, -0.4707, -0.0438,  0.1042,  0.1412,  0.2477, -0.1175,
        -0.3940, -0.0898, -0.3062,  0.3857, -0.0126,  0.3843,  0.4404,  0.0944,
        -0.4875, -0.1171, -0.0529,  0.2196, -0.4868, -0.3857, -0.3342,  0.1127,
         0.0432, -0.1453, -0.4304,  0.1652,  0.3235,  0.1420,  0.2156, -0.3494,
         0.1150,  0.3689,  0.1858, -0.3865,  0.4690, -0.4062,  0.2605, -0.4072,
        -0.3750,  0.4778, -0.0793, -0.0875,  0.4600,  0.0538,  0.4016,  0.4729,
         0.2297,  0.4558,  0.2827, -0.0487], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 21, 913046]), dtype=torch.float16)
First 100 elements: tensor([ 0.3872, -0.2415, -0.4907,  0.3169, -0.3359, -0.1464, -0.0148, -0.2878,
         0.4243, -0.0211, -0.2225, -0.3076,  0.0062, -0.1693, -0.3599, -0.1633,
        -0.3398, -0.3376, -0.3796, -0.1550,  0.1646, -0.0055,  0.1251, -0.2952,
         0.4075, -0.4463,  0.0277, -0.2693,  0.2629,  0.1251, -0.4644, -0.4500,
         0.0633,  0.1126, -0.3809,  0.4934, -0.3396,  0.3755, -0.0281, -0.0406,
        -0.2600,  0.2661, -0.3455,  0.4146,  0.4331,  0.0077, -0.2499,  0.0188,
         0.1833,  0.2537, -0.4707, -0.0438,  0.1042,  0.1412,  0.2477, -0.1175,
        -0.3940, -0.0898, -0.3062,  0.3857, -0.0126,  0.3843,  0.4404,  0.0944,
        -0.4875, -0.1171, -0.0529,  0.2196, -0.4868, -0.3857, -0.3342,  0.1127,
         0.0432, -0.1453, -0.4304,  0.1652,  0.3235,  0.1420,  0.2156, -0.3494,
         0.1150,  0.3689,  0.1858, -0.3865,  0.4690, -0.4062,  0.2605, -0.4072,
        -0.3750,  0.4778, -0.0793, -0.0875,  0.4600,  0.0538,  0.4016,  0.4729,
         0.2297,  0.4558,  0.2827, -0.0487], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 21, 913046],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3201 / 4294968384 (0.0%)
Greatest absolute difference: 0.499755859375 at index (0, 15, 13, 2, 912520) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 2, 911958) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 21, 913046]), dtype=torch.float16)
First 100 elements: tensor([-1.7517e-01, -4.5239e-01, -1.6821e-01,  3.6670e-01, -1.7212e-01,
         9.2957e-02,  3.6743e-01, -2.1570e-01, -1.8469e-01,  3.6646e-01,
        -4.2529e-01,  1.3647e-01, -1.8286e-01,  3.6523e-01,  3.6938e-01,
         3.3765e-01,  1.4124e-01,  1.1060e-01,  4.3140e-01, -1.8738e-02,
        -3.2544e-01, -3.4082e-01, -3.7158e-01, -3.1982e-01,  4.7949e-01,
        -1.8701e-01,  5.2094e-02,  1.7383e-01, -1.1497e-02,  4.2285e-01,
        -4.2953e-03, -4.3921e-01,  4.7778e-01, -1.2067e-01,  9.7717e-02,
         3.3081e-01,  4.3848e-01,  3.2837e-01, -3.5522e-01,  4.2993e-01,
        -1.6333e-01,  4.7876e-01,  3.0396e-01,  3.1006e-01, -4.9976e-01,
         4.5959e-02, -3.6987e-01,  7.4707e-02,  1.3831e-01,  3.3276e-01,
         1.6431e-01, -2.6196e-01,  1.0004e-01,  2.0947e-01, -4.2139e-01,
        -4.5868e-02,  2.4304e-01, -3.1445e-01, -5.0537e-02, -1.0236e-01,
        -2.8549e-02, -3.5522e-01,  3.3984e-01,  3.2837e-01, -3.6963e-01,
         3.0542e-01,  1.1615e-01,  2.1753e-01,  1.1011e-01,  1.7981e-01,
        -7.7454e-02, -4.9023e-01,  4.1357e-01, -2.1143e-01,  2.5610e-01,
        -1.0773e-01, -9.9335e-03, -3.3960e-01, -4.9067e-04,  4.0601e-01,
        -1.5221e-02, -7.7637e-02, -1.0413e-01, -4.6021e-01,  6.5613e-04,
         8.5306e-04, -1.6028e-01, -3.0380e-02, -6.3843e-02, -1.6272e-01,
         2.1643e-01, -2.9712e-01, -2.4292e-01, -9.5642e-02,  3.2837e-01,
         1.4612e-01, -5.4688e-02,  1.6199e-01, -3.1714e-01, -2.2571e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 21, 913046]), dtype=torch.float16)
First 100 elements: tensor([-1.7517e-01, -4.5239e-01, -1.6821e-01,  3.6670e-01, -1.7212e-01,
         9.2957e-02,  3.6743e-01, -2.1570e-01, -1.8469e-01,  3.6646e-01,
        -4.2529e-01,  1.3647e-01, -1.8286e-01,  3.6523e-01,  3.6938e-01,
         3.3765e-01,  1.4124e-01,  1.1060e-01,  4.3140e-01, -1.8738e-02,
        -3.2544e-01, -3.4082e-01, -3.7158e-01, -3.1982e-01,  4.7949e-01,
        -1.8701e-01,  5.2094e-02,  1.7383e-01, -1.1497e-02,  4.2285e-01,
        -4.2953e-03, -4.3921e-01,  4.7778e-01, -1.2067e-01,  9.7717e-02,
         3.3081e-01,  4.3848e-01,  3.2837e-01, -3.5522e-01,  4.2993e-01,
        -1.6333e-01,  4.7876e-01,  3.0396e-01,  3.1006e-01, -4.9976e-01,
         4.5959e-02, -3.6987e-01,  7.4707e-02,  1.3831e-01,  3.3276e-01,
         1.6431e-01, -2.6196e-01,  1.0004e-01,  2.0947e-01, -4.2139e-01,
        -4.5868e-02,  2.4304e-01, -3.1445e-01, -5.0537e-02, -1.0236e-01,
        -2.8549e-02, -3.5522e-01,  3.3984e-01,  3.2837e-01, -3.6963e-01,
         3.0542e-01,  1.1615e-01,  2.1753e-01,  1.1011e-01,  1.7981e-01,
        -7.7454e-02, -4.9023e-01,  4.1357e-01, -2.1143e-01,  2.5610e-01,
        -1.0773e-01, -9.9335e-03, -3.3960e-01, -4.9067e-04,  4.0601e-01,
        -1.5221e-02, -7.7637e-02, -1.0413e-01, -4.6021e-01,  6.5613e-04,
         8.5306e-04, -1.6028e-01, -3.0380e-02, -6.3843e-02, -1.6272e-01,
         2.1643e-01, -2.9712e-01, -2.4292e-01, -9.5642e-02,  3.2837e-01,
         1.4612e-01, -5.4688e-02,  1.6199e-01, -3.1714e-01, -2.2571e-01],
       dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 24967, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 305141 / 4295122944 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 10, 24772, 634) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 10, 24764, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 24967, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.0155, -0.1367,  0.0746, -0.4519,  0.4937,  0.4749,  0.2377,  0.4739,
        -0.3694, -0.1393,  0.2279,  0.2786, -0.0025, -0.0240, -0.4717,  0.3860,
        -0.4492,  0.3223,  0.0195, -0.1462, -0.3838,  0.1404, -0.0016, -0.1425,
        -0.2197, -0.0886,  0.2338,  0.1973,  0.0244,  0.3044, -0.3586, -0.0888,
        -0.2495, -0.3972,  0.1578,  0.3843,  0.2008, -0.2430,  0.1766, -0.4692,
        -0.1415,  0.2349, -0.1058,  0.1031, -0.4841,  0.4426,  0.2805, -0.4226,
        -0.4060,  0.2325,  0.0680, -0.0213, -0.0717, -0.4077, -0.0245, -0.1868,
         0.3374,  0.2075, -0.3567,  0.2377, -0.0182,  0.0649,  0.2554,  0.4802,
         0.3457,  0.2234,  0.3174,  0.1066, -0.1669, -0.3035, -0.4756,  0.1155,
        -0.0864, -0.3728,  0.2208, -0.0781,  0.4634, -0.2371, -0.4307,  0.0817,
         0.2357, -0.1678, -0.0206, -0.2976, -0.3135, -0.4724,  0.4492, -0.0855,
         0.0413, -0.1938,  0.4846,  0.4915,  0.2539,  0.0908,  0.2120, -0.2815,
         0.4524,  0.4634,  0.1992,  0.3650], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 24967, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.0155, -0.1367,  0.0746, -0.4519,  0.4937,  0.4749,  0.2377,  0.4739,
        -0.3694, -0.1393,  0.2279,  0.2786, -0.0025, -0.0240, -0.4717,  0.3860,
        -0.4492,  0.3223,  0.0195, -0.1462, -0.3838,  0.1404, -0.0016, -0.1425,
        -0.2197, -0.0886,  0.2338,  0.1973,  0.0244,  0.3044, -0.3586, -0.0888,
        -0.2495, -0.3972,  0.1578,  0.3843,  0.2008, -0.2430,  0.1766, -0.4692,
        -0.1415,  0.2349, -0.1058,  0.1031, -0.4841,  0.4426,  0.2805, -0.4226,
        -0.4060,  0.2325,  0.0680, -0.0213, -0.0717, -0.4077, -0.0245, -0.1868,
         0.3374,  0.2075, -0.3567,  0.2377, -0.0182,  0.0649,  0.2554,  0.4802,
         0.3457,  0.2234,  0.3174,  0.1066, -0.1669, -0.3035, -0.4756,  0.1155,
        -0.0864, -0.3728,  0.2208, -0.0781,  0.4634, -0.2371, -0.4307,  0.0817,
         0.2357, -0.1678, -0.0206, -0.2976, -0.3135, -0.4724,  0.4492, -0.0855,
         0.0413, -0.1938,  0.4846,  0.4915,  0.2539,  0.0908,  0.2120, -0.2815,
         0.4524,  0.4634,  0.1992,  0.3650], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 24967, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 305057 / 4295122944 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 2, 24765, 648) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 24764, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 24967, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.2983,  0.2549,  0.0449, -0.2057, -0.4436, -0.0657,  0.2632, -0.3779,
         0.3750,  0.4463, -0.3799, -0.4998, -0.4214,  0.2864,  0.3027,  0.3467,
         0.0503, -0.4192, -0.2786, -0.0950,  0.0593,  0.3298,  0.4126, -0.0767,
        -0.4421,  0.3289,  0.4194,  0.4807,  0.4434, -0.4827,  0.2766,  0.1520,
        -0.2703, -0.3591,  0.2400,  0.2612,  0.1688, -0.0356,  0.2725, -0.0820,
         0.0419, -0.0171, -0.1888, -0.4316, -0.1021, -0.3303,  0.4250,  0.1489,
        -0.2241,  0.4326, -0.0771,  0.1852, -0.0130, -0.1046,  0.0532,  0.3718,
         0.1399, -0.4905, -0.0944,  0.1409, -0.2534, -0.2739,  0.2180, -0.0204,
        -0.3640, -0.1027,  0.1764, -0.1908,  0.0285, -0.3630, -0.1270,  0.0616,
         0.0238, -0.4929, -0.3914, -0.2900,  0.0959, -0.2698,  0.4058, -0.1530,
        -0.0063,  0.2922,  0.2927, -0.0714, -0.0449, -0.4744,  0.0817,  0.0017,
        -0.1951, -0.2205,  0.3257,  0.0532,  0.3579, -0.3337, -0.4448, -0.4043,
        -0.3669, -0.0222,  0.0927,  0.1830], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 24967, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.2983,  0.2549,  0.0449, -0.2057, -0.4436, -0.0657,  0.2632, -0.3779,
         0.3750,  0.4463, -0.3799, -0.4998, -0.4214,  0.2864,  0.3027,  0.3467,
         0.0503, -0.4192, -0.2786, -0.0950,  0.0593,  0.3298,  0.4126, -0.0767,
        -0.4421,  0.3289,  0.4194,  0.4807,  0.4434, -0.4827,  0.2766,  0.1520,
        -0.2703, -0.3591,  0.2400,  0.2612,  0.1688, -0.0356,  0.2725, -0.0820,
         0.0419, -0.0171, -0.1888, -0.4316, -0.1021, -0.3303,  0.4250,  0.1489,
        -0.2241,  0.4326, -0.0771,  0.1852, -0.0130, -0.1046,  0.0532,  0.3718,
         0.1399, -0.4905, -0.0944,  0.1409, -0.2534, -0.2739,  0.2180, -0.0204,
        -0.3640, -0.1027,  0.1764, -0.1908,  0.0285, -0.3630, -0.1270,  0.0616,
         0.0238, -0.4929, -0.3914, -0.2900,  0.0959, -0.2698,  0.4058, -0.1530,
        -0.0063,  0.2922,  0.2927, -0.0714, -0.0449, -0.4744,  0.0817,  0.0017,
        -0.1951, -0.2205,  0.3257,  0.0532,  0.3579, -0.3337, -0.4448, -0.4043,
        -0.3669, -0.0222,  0.0927,  0.1830], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 49933, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 137681 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 10, 49798, 7) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 10, 49748, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 49933, 384]), dtype=torch.float16)
First 100 elements: tensor([-4.2700e-01, -2.7008e-02, -2.4765e-02, -4.6509e-01, -3.4790e-01,
         4.8828e-01,  4.4458e-01,  5.9738e-03,  3.8257e-01, -2.9541e-01,
         3.6890e-01, -6.1005e-02,  4.2554e-01, -2.3145e-01,  3.2544e-01,
        -2.5610e-01,  2.3376e-01,  1.0139e-02, -2.0471e-01, -3.7817e-01,
         4.2163e-01,  3.0981e-01, -4.7241e-01,  1.2311e-01, -3.5229e-01,
        -3.0542e-01, -3.2471e-01,  3.9551e-01, -3.1567e-01,  3.1464e-02,
         3.2324e-01, -1.5906e-01, -2.8540e-01,  2.8711e-01, -2.1790e-01,
         7.2083e-02,  1.3232e-01, -4.9243e-01,  4.4894e-04,  3.0493e-01,
         5.5145e-02, -2.1252e-01, -3.7079e-02, -4.9170e-01, -2.1228e-01,
         3.1445e-01, -7.6233e-02, -2.8564e-01, -3.1079e-01, -4.9023e-01,
         7.6660e-02, -4.2993e-01, -2.3035e-01, -4.4995e-01, -6.3660e-02,
         1.1768e-01, -1.9971e-01, -2.2034e-01, -9.8755e-02, -1.0181e-01,
         4.4165e-01, -3.7036e-01,  3.0518e-01, -2.1179e-01,  2.1411e-01,
         4.5410e-01, -2.3816e-01, -3.5693e-01,  2.8656e-02, -3.4729e-02,
         3.2227e-01, -4.3921e-01,  1.7859e-01,  2.0218e-02, -3.4912e-02,
         3.7500e-01,  9.7900e-02, -3.9722e-01, -2.4500e-01,  1.7810e-01,
        -7.9834e-02, -2.6587e-01, -1.2122e-01, -1.3489e-02, -2.7686e-01,
         2.9272e-01, -2.0825e-01,  4.1113e-01, -3.3960e-01,  3.6938e-01,
         2.5317e-01,  3.0835e-01, -1.5698e-01, -2.0203e-01, -1.4795e-01,
         2.8442e-01, -3.0688e-01, -4.0894e-02,  4.9438e-01,  4.2041e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 49933, 384]), dtype=torch.float16)
First 100 elements: tensor([-4.2700e-01, -2.7008e-02, -2.4765e-02, -4.6509e-01, -3.4790e-01,
         4.8828e-01,  4.4458e-01,  5.9738e-03,  3.8257e-01, -2.9541e-01,
         3.6890e-01, -6.1005e-02,  4.2554e-01, -2.3145e-01,  3.2544e-01,
        -2.5610e-01,  2.3376e-01,  1.0139e-02, -2.0471e-01, -3.7817e-01,
         4.2163e-01,  3.0981e-01, -4.7241e-01,  1.2311e-01, -3.5229e-01,
        -3.0542e-01, -3.2471e-01,  3.9551e-01, -3.1567e-01,  3.1464e-02,
         3.2324e-01, -1.5906e-01, -2.8540e-01,  2.8711e-01, -2.1790e-01,
         7.2083e-02,  1.3232e-01, -4.9243e-01,  4.4894e-04,  3.0493e-01,
         5.5145e-02, -2.1252e-01, -3.7079e-02, -4.9170e-01, -2.1228e-01,
         3.1445e-01, -7.6233e-02, -2.8564e-01, -3.1079e-01, -4.9023e-01,
         7.6660e-02, -4.2993e-01, -2.3035e-01, -4.4995e-01, -6.3660e-02,
         1.1768e-01, -1.9971e-01, -2.2034e-01, -9.8755e-02, -1.0181e-01,
         4.4165e-01, -3.7036e-01,  3.0518e-01, -2.1179e-01,  2.1411e-01,
         4.5410e-01, -2.3816e-01, -3.5693e-01,  2.8656e-02, -3.4729e-02,
         3.2227e-01, -4.3921e-01,  1.7859e-01,  2.0218e-02, -3.4912e-02,
         3.7500e-01,  9.7900e-02, -3.9722e-01, -2.4500e-01,  1.7810e-01,
        -7.9834e-02, -2.6587e-01, -1.2122e-01, -1.3489e-02, -2.7686e-01,
         2.9272e-01, -2.0825e-01,  4.1113e-01, -3.3960e-01,  3.6938e-01,
         2.5317e-01,  3.0835e-01, -1.5698e-01, -2.0203e-01, -1.4795e-01,
         2.8442e-01, -3.0688e-01, -4.0894e-02,  4.9438e-01,  4.2041e-01],
       dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 49933, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 137525 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 2, 49760, 61) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 49933, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.1198, -0.4902,  0.0197,  0.0313,  0.2338, -0.3984, -0.3147,  0.2449,
         0.0285, -0.3911,  0.2627,  0.1729,  0.1228,  0.0960,  0.2205,  0.3760,
         0.3552, -0.4854, -0.4348, -0.4756, -0.2356,  0.0376,  0.4700,  0.1002,
        -0.3433, -0.2686,  0.2710, -0.0218, -0.3264,  0.3276, -0.1234, -0.3547,
         0.4099, -0.4236, -0.2238, -0.4873,  0.1437,  0.4136,  0.4263,  0.0234,
        -0.0897,  0.4170, -0.3215, -0.2365, -0.1420,  0.2368,  0.2417,  0.1531,
         0.2167, -0.4565,  0.1331,  0.0532, -0.0193, -0.4971,  0.0278, -0.3945,
        -0.1896,  0.0847, -0.2991, -0.3992,  0.0706,  0.3794,  0.1853, -0.3408,
        -0.4475,  0.1785, -0.4143,  0.4006, -0.3733,  0.2070, -0.2737,  0.1600,
        -0.1469, -0.2690,  0.1337,  0.3572,  0.3367,  0.0728,  0.0911, -0.0226,
         0.0179, -0.1559, -0.0844, -0.1602,  0.0303,  0.3960, -0.2747, -0.4246,
         0.0316, -0.2251,  0.0568,  0.2245,  0.0646, -0.0345, -0.1138, -0.4353,
        -0.3787,  0.1743,  0.0036, -0.0615], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 49933, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.1198, -0.4902,  0.0197,  0.0313,  0.2338, -0.3984, -0.3147,  0.2449,
         0.0285, -0.3911,  0.2627,  0.1729,  0.1228,  0.0960,  0.2205,  0.3760,
         0.3552, -0.4854, -0.4348, -0.4756, -0.2356,  0.0376,  0.4700,  0.1002,
        -0.3433, -0.2686,  0.2710, -0.0218, -0.3264,  0.3276, -0.1234, -0.3547,
         0.4099, -0.4236, -0.2238, -0.4873,  0.1437,  0.4136,  0.4263,  0.0234,
        -0.0897,  0.4170, -0.3215, -0.2365, -0.1420,  0.2368,  0.2417,  0.1531,
         0.2167, -0.4565,  0.1331,  0.0532, -0.0193, -0.4971,  0.0278, -0.3945,
        -0.1896,  0.0847, -0.2991, -0.3992,  0.0706,  0.3794,  0.1853, -0.3408,
        -0.4475,  0.1785, -0.4143,  0.4006, -0.3733,  0.2070, -0.2737,  0.1600,
        -0.1469, -0.2690,  0.1337,  0.3572,  0.3367,  0.0728,  0.0911, -0.0226,
         0.0179, -0.1559, -0.0844, -0.1602,  0.0303,  0.3960, -0.2747, -0.4246,
         0.0316, -0.2251,  0.0568,  0.2245,  0.0646, -0.0345, -0.1138, -0.4353,
        -0.3787,  0.1743,  0.0036, -0.0615], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 7, 2739138],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2118 / 4294968384 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 10, 6, 2738472) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 10, 6, 2738050) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 7, 2739138]), dtype=torch.float16)
First 100 elements: tensor([-0.3806,  0.1815, -0.0585,  0.1405,  0.1779, -0.4070,  0.3340, -0.2418,
        -0.3928, -0.2981, -0.3845,  0.0086,  0.0597, -0.4641,  0.4465, -0.3186,
        -0.3020,  0.3923,  0.4685, -0.1024, -0.3848, -0.0897,  0.3831,  0.3596,
         0.0221,  0.0651,  0.4988,  0.2036, -0.2964,  0.4895,  0.2913,  0.0346,
        -0.2013,  0.2571,  0.4666,  0.1842, -0.3865, -0.1641, -0.1453,  0.3418,
         0.4849,  0.0054, -0.2734, -0.4067,  0.0636, -0.1215,  0.1450, -0.4004,
        -0.1729, -0.1583, -0.2416, -0.2080,  0.3582,  0.4363, -0.3894,  0.1431,
         0.1085,  0.4543,  0.0552,  0.2522,  0.4121, -0.0395,  0.3118, -0.3699,
         0.0555,  0.4978, -0.1470,  0.2598, -0.2025, -0.4575,  0.3115,  0.2333,
        -0.3228,  0.3884, -0.3362, -0.1036, -0.0011,  0.0981,  0.1116,  0.3230,
         0.1626, -0.1799, -0.3145, -0.0695,  0.2328,  0.3433, -0.0183,  0.0396,
        -0.3035, -0.3137, -0.2360,  0.2505, -0.2073, -0.2146, -0.1985,  0.3921,
         0.1493, -0.0515,  0.1992,  0.1871], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 7, 2739138]), dtype=torch.float16)
First 100 elements: tensor([-0.3806,  0.1815, -0.0585,  0.1405,  0.1779, -0.4070,  0.3340, -0.2418,
        -0.3928, -0.2981, -0.3845,  0.0086,  0.0597, -0.4641,  0.4465, -0.3186,
        -0.3020,  0.3923,  0.4685, -0.1024, -0.3848, -0.0897,  0.3831,  0.3596,
         0.0221,  0.0651,  0.4988,  0.2036, -0.2964,  0.4895,  0.2913,  0.0346,
        -0.2013,  0.2571,  0.4666,  0.1842, -0.3865, -0.1641, -0.1453,  0.3418,
         0.4849,  0.0054, -0.2734, -0.4067,  0.0636, -0.1215,  0.1450, -0.4004,
        -0.1729, -0.1583, -0.2416, -0.2080,  0.3582,  0.4363, -0.3894,  0.1431,
         0.1085,  0.4543,  0.0552,  0.2522,  0.4121, -0.0395,  0.3118, -0.3699,
         0.0555,  0.4978, -0.1470,  0.2598, -0.2025, -0.4575,  0.3115,  0.2333,
        -0.3228,  0.3884, -0.3362, -0.1036, -0.0011,  0.0981,  0.1116,  0.3230,
         0.1626, -0.1799, -0.3145, -0.0695,  0.2328,  0.3433, -0.0183,  0.0396,
        -0.3035, -0.3137, -0.2360,  0.2505, -0.2073, -0.2146, -0.1985,  0.3921,
         0.1493, -0.0515,  0.1992,  0.1871], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 14, 7, 2739138],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2135 / 4294968384 (0.0%)
Greatest absolute difference: 0.499755859375 at index (0, 15, 13, 6, 2738612) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 6, 2738050) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 14, 7, 2739138]), dtype=torch.float16)
First 100 elements: tensor([-0.0986, -0.2761,  0.0195, -0.1362,  0.1384,  0.4375, -0.3738, -0.2122,
         0.1079,  0.2152,  0.2588,  0.0012, -0.2908, -0.2417, -0.0144,  0.1118,
        -0.2275, -0.2544,  0.0728, -0.4954,  0.0193,  0.0179, -0.1738, -0.2988,
         0.3352,  0.0500, -0.3926, -0.2314, -0.4417,  0.4402, -0.2883, -0.0743,
         0.0890,  0.4541, -0.0218,  0.1915, -0.3252, -0.3660,  0.4106, -0.0077,
        -0.4612,  0.2761,  0.1848,  0.3677,  0.1421, -0.0999,  0.4480,  0.3308,
         0.2844,  0.2426,  0.0684,  0.2499,  0.4077,  0.1538, -0.2162, -0.1503,
        -0.2089, -0.0620,  0.2186, -0.2517,  0.3899,  0.4248, -0.2095, -0.4817,
        -0.0427, -0.3145, -0.4900,  0.4360,  0.3184,  0.1265, -0.2554, -0.4011,
         0.4709,  0.4373, -0.1798,  0.0214, -0.4895,  0.2695, -0.3076,  0.0461,
        -0.1097, -0.0679, -0.4836,  0.3962,  0.0207,  0.2166,  0.3152, -0.4924,
        -0.2130,  0.1278,  0.0221, -0.0304,  0.1641,  0.0081,  0.2788,  0.3623,
        -0.2330, -0.2678, -0.3005, -0.4192], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 14, 7, 2739138]), dtype=torch.float16)
First 100 elements: tensor([-0.0986, -0.2761,  0.0195, -0.1362,  0.1384,  0.4375, -0.3738, -0.2122,
         0.1079,  0.2152,  0.2588,  0.0012, -0.2908, -0.2417, -0.0144,  0.1118,
        -0.2275, -0.2544,  0.0728, -0.4954,  0.0193,  0.0179, -0.1738, -0.2988,
         0.3352,  0.0500, -0.3926, -0.2314, -0.4417,  0.4402, -0.2883, -0.0743,
         0.0890,  0.4541, -0.0218,  0.1915, -0.3252, -0.3660,  0.4106, -0.0077,
        -0.4612,  0.2761,  0.1848,  0.3677,  0.1421, -0.0999,  0.4480,  0.3308,
         0.2844,  0.2426,  0.0684,  0.2499,  0.4077,  0.1538, -0.2162, -0.1503,
        -0.2089, -0.0620,  0.2186, -0.2517,  0.3899,  0.4248, -0.2095, -0.4817,
        -0.0427, -0.3145, -0.4900,  0.4360,  0.3184,  0.1265, -0.2554, -0.4011,
         0.4709,  0.4373, -0.1798,  0.0214, -0.4895,  0.2695, -0.3076,  0.0461,
        -0.1097, -0.0679, -0.4836,  0.3962,  0.0207,  0.2166,  0.3152, -0.4924,
        -0.2130,  0.1278,  0.0221, -0.0304,  0.1641,  0.0081,  0.2788,  0.3623,
        -0.2330, -0.2678, -0.3005, -0.4192], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 21, 14, 913046],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3194 / 4294968384 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 20, 10, 912991) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 17, 10, 911958) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 21, 14, 913046]), dtype=torch.float16)
First 100 elements: tensor([ 0.3274, -0.4241, -0.2534,  0.4836,  0.1537,  0.3137,  0.2854, -0.4275,
        -0.1719,  0.3779, -0.2852, -0.1736,  0.1862,  0.2705,  0.1127,  0.2571,
        -0.1650,  0.0210,  0.4961,  0.3408, -0.3428,  0.0323, -0.4465, -0.1282,
        -0.2971,  0.3650,  0.2152,  0.0945,  0.2578,  0.2490, -0.4160, -0.0078,
        -0.3813,  0.1145,  0.2747,  0.1220,  0.3726,  0.0315, -0.2749,  0.3079,
        -0.0156,  0.1589,  0.4731,  0.4065, -0.3391,  0.2488,  0.4353,  0.0765,
         0.2094,  0.2208, -0.2749, -0.3022,  0.0471,  0.4951, -0.1963,  0.3342,
        -0.1710, -0.3945, -0.4041, -0.0715,  0.3503, -0.2673, -0.4189,  0.2881,
         0.0685,  0.2544,  0.3459, -0.2754,  0.3469,  0.0028, -0.3127,  0.3296,
        -0.3125, -0.4900, -0.1997,  0.2812,  0.0470, -0.0664,  0.1874,  0.3950,
        -0.2676,  0.2339,  0.4937,  0.1903,  0.1925, -0.1283,  0.3960, -0.2268,
        -0.0618, -0.3433, -0.0274,  0.0887, -0.1904,  0.4451, -0.3606, -0.3428,
        -0.2375,  0.2585,  0.2722,  0.3511], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 21, 14, 913046]), dtype=torch.float16)
First 100 elements: tensor([ 0.3274, -0.4241, -0.2534,  0.4836,  0.1537,  0.3137,  0.2854, -0.4275,
        -0.1719,  0.3779, -0.2852, -0.1736,  0.1862,  0.2705,  0.1127,  0.2571,
        -0.1650,  0.0210,  0.4961,  0.3408, -0.3428,  0.0323, -0.4465, -0.1282,
        -0.2971,  0.3650,  0.2152,  0.0945,  0.2578,  0.2490, -0.4160, -0.0078,
        -0.3813,  0.1145,  0.2747,  0.1220,  0.3726,  0.0315, -0.2749,  0.3079,
        -0.0156,  0.1589,  0.4731,  0.4065, -0.3391,  0.2488,  0.4353,  0.0765,
         0.2094,  0.2208, -0.2749, -0.3022,  0.0471,  0.4951, -0.1963,  0.3342,
        -0.1710, -0.3945, -0.4041, -0.0715,  0.3503, -0.2673, -0.4189,  0.2881,
         0.0685,  0.2544,  0.3459, -0.2754,  0.3469,  0.0028, -0.3127,  0.3296,
        -0.3125, -0.4900, -0.1997,  0.2812,  0.0470, -0.0664,  0.1874,  0.3950,
        -0.2676,  0.2339,  0.4937,  0.1903,  0.1925, -0.1283,  0.3960, -0.2268,
        -0.0618, -0.3433, -0.0274,  0.0887, -0.1904,  0.4451, -0.3606, -0.3428,
        -0.2375,  0.2585,  0.2722,  0.3511], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 21, 14, 913046],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3205 / 4294968384 (0.0%)
Greatest absolute difference: 0.499755859375 at index (0, 15, 20, 13, 912807) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 2, 911958) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 21, 14, 913046]), dtype=torch.float16)
First 100 elements: tensor([-0.4062, -0.1792, -0.1708,  0.3074,  0.4202, -0.2886, -0.4460, -0.4546,
        -0.0245,  0.2115, -0.2021,  0.4270,  0.4263, -0.1427,  0.1285,  0.4136,
         0.4792, -0.1064,  0.2803, -0.2173,  0.3831,  0.2986, -0.1508, -0.0955,
         0.2507,  0.3630,  0.2070, -0.2201, -0.3022,  0.0286,  0.4771, -0.2467,
        -0.3835,  0.3735, -0.0675,  0.4360,  0.2844,  0.2600, -0.4985,  0.2761,
        -0.0690,  0.0929, -0.0424, -0.2445,  0.1100,  0.1111, -0.0125, -0.3293,
         0.0673, -0.4036,  0.0429,  0.2272, -0.2224, -0.2245, -0.0263, -0.1613,
        -0.4658,  0.3298,  0.4695, -0.0242, -0.4192, -0.4761, -0.3962,  0.4807,
         0.3479,  0.3987,  0.1421, -0.3008,  0.4192, -0.0106, -0.3811, -0.0358,
        -0.4141, -0.0770,  0.4783,  0.2006, -0.2045,  0.2815,  0.3726,  0.0034,
         0.3103,  0.3435, -0.2441,  0.4431,  0.2347, -0.1157,  0.0120, -0.2661,
         0.0696,  0.0312, -0.2991, -0.0138,  0.0435, -0.1189, -0.3213,  0.1678,
        -0.0197, -0.4741, -0.1039, -0.1158], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 21, 14, 913046]), dtype=torch.float16)
First 100 elements: tensor([-0.4062, -0.1792, -0.1708,  0.3074,  0.4202, -0.2886, -0.4460, -0.4546,
        -0.0245,  0.2115, -0.2021,  0.4270,  0.4263, -0.1427,  0.1285,  0.4136,
         0.4792, -0.1064,  0.2803, -0.2173,  0.3831,  0.2986, -0.1508, -0.0955,
         0.2507,  0.3630,  0.2070, -0.2201, -0.3022,  0.0286,  0.4771, -0.2467,
        -0.3835,  0.3735, -0.0675,  0.4360,  0.2844,  0.2600, -0.4985,  0.2761,
        -0.0690,  0.0929, -0.0424, -0.2445,  0.1100,  0.1111, -0.0125, -0.3293,
         0.0673, -0.4036,  0.0429,  0.2272, -0.2224, -0.2245, -0.0263, -0.1613,
        -0.4658,  0.3298,  0.4695, -0.0242, -0.4192, -0.4761, -0.3962,  0.4807,
         0.3479,  0.3987,  0.1421, -0.3008,  0.4192, -0.0106, -0.3811, -0.0358,
        -0.4141, -0.0770,  0.4783,  0.2006, -0.2045,  0.2815,  0.3726,  0.0034,
         0.3103,  0.3435, -0.2441,  0.4431,  0.2347, -0.1157,  0.0120, -0.2661,
         0.0696,  0.0312, -0.2991, -0.0138,  0.0435, -0.1189, -0.3213,  0.1678,
        -0.0197, -0.4741, -0.1039, -0.1158], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 21, 33289, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 221943 / 4295079936 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 17, 33013, 314) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 17, 32992, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 21, 33289, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.3674, -0.3196, -0.0656,  0.0381, -0.3208,  0.0250,  0.1844, -0.4629,
        -0.2336, -0.2384, -0.3884, -0.1094,  0.3967,  0.2170,  0.4270, -0.0219,
        -0.4172, -0.2793,  0.3196,  0.2725, -0.1864, -0.1980,  0.1677,  0.3508,
        -0.2085, -0.0337,  0.0812, -0.4307,  0.2377, -0.2313, -0.4778,  0.2244,
         0.0309, -0.4500, -0.4719,  0.0277,  0.2737,  0.3091, -0.1835,  0.0907,
        -0.2781,  0.2810,  0.4907, -0.3088,  0.0638, -0.2405,  0.1632,  0.4001,
         0.1036, -0.3335,  0.4309, -0.4192,  0.0756, -0.1157,  0.4949,  0.1225,
        -0.2524,  0.4470,  0.3660, -0.4099,  0.0210, -0.1255, -0.3984, -0.4907,
         0.4192, -0.1022,  0.3806,  0.3120, -0.4624, -0.3281, -0.1694, -0.0051,
         0.2861,  0.4268, -0.1567, -0.4631, -0.3269,  0.4236, -0.2476, -0.3481,
         0.4290, -0.2476,  0.1178, -0.3091, -0.2998, -0.0997,  0.3335, -0.0163,
        -0.0473,  0.4456,  0.0977, -0.1592, -0.2036,  0.3972, -0.3130,  0.4814,
        -0.2949,  0.1267, -0.4287, -0.2935], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 21, 33289, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.3674, -0.3196, -0.0656,  0.0381, -0.3208,  0.0250,  0.1844, -0.4629,
        -0.2336, -0.2384, -0.3884, -0.1094,  0.3967,  0.2170,  0.4270, -0.0219,
        -0.4172, -0.2793,  0.3196,  0.2725, -0.1864, -0.1980,  0.1677,  0.3508,
        -0.2085, -0.0337,  0.0812, -0.4307,  0.2377, -0.2313, -0.4778,  0.2244,
         0.0309, -0.4500, -0.4719,  0.0277,  0.2737,  0.3091, -0.1835,  0.0907,
        -0.2781,  0.2810,  0.4907, -0.3088,  0.0638, -0.2405,  0.1632,  0.4001,
         0.1036, -0.3335,  0.4309, -0.4192,  0.0756, -0.1157,  0.4949,  0.1225,
        -0.2524,  0.4470,  0.3660, -0.4099,  0.0210, -0.1255, -0.3984, -0.4907,
         0.4192, -0.1022,  0.3806,  0.3120, -0.4624, -0.3281, -0.1694, -0.0051,
         0.2861,  0.4268, -0.1567, -0.4631, -0.3269,  0.4236, -0.2476, -0.3481,
         0.4290, -0.2476,  0.1178, -0.3091, -0.2998, -0.0997,  0.3335, -0.0163,
        -0.0473,  0.4456,  0.0977, -0.1592, -0.2036,  0.3972, -0.3130,  0.4814,
        -0.2949,  0.1267, -0.4287, -0.2935], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 21, 33289, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 221830 / 4295079936 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 2, 33003, 351) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 21, 33289, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.0542,  0.2620,  0.3186,  0.2019, -0.1191,  0.2869, -0.1523,  0.3721,
         0.3149,  0.1620, -0.0321,  0.4727,  0.4871,  0.0854,  0.3535,  0.4382,
         0.1538, -0.3484, -0.3635, -0.1843,  0.3809,  0.0391, -0.3093,  0.0028,
         0.0801, -0.0173,  0.2917,  0.4670,  0.4360,  0.4348, -0.4656, -0.2795,
        -0.3213, -0.3613,  0.3518, -0.0237, -0.1665, -0.0412,  0.1769,  0.4949,
        -0.0684,  0.0032,  0.1741,  0.1050,  0.0962, -0.0156, -0.1156, -0.0980,
         0.4707,  0.1165,  0.2412, -0.4680,  0.1236, -0.2534,  0.0561, -0.4873,
        -0.1820,  0.1680,  0.4595,  0.4490,  0.2932, -0.1696,  0.2964,  0.0436,
         0.4810, -0.0630, -0.3577, -0.1597, -0.1671,  0.2013,  0.0972, -0.2030,
        -0.1750, -0.2900,  0.1654, -0.3164,  0.2449, -0.3279,  0.0073,  0.3979,
         0.2783,  0.3540,  0.3291, -0.3662,  0.4292, -0.0617,  0.3118,  0.3347,
        -0.2312,  0.3450, -0.0976,  0.2148, -0.4324, -0.0256, -0.4192,  0.0130,
         0.2317, -0.0712, -0.3196, -0.2236], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 21, 33289, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.0542,  0.2620,  0.3186,  0.2019, -0.1191,  0.2869, -0.1523,  0.3721,
         0.3149,  0.1620, -0.0321,  0.4727,  0.4871,  0.0854,  0.3535,  0.4382,
         0.1538, -0.3484, -0.3635, -0.1843,  0.3809,  0.0391, -0.3093,  0.0028,
         0.0801, -0.0173,  0.2917,  0.4670,  0.4360,  0.4348, -0.4656, -0.2795,
        -0.3213, -0.3613,  0.3518, -0.0237, -0.1665, -0.0412,  0.1769,  0.4949,
        -0.0684,  0.0032,  0.1741,  0.1050,  0.0962, -0.0156, -0.1156, -0.0980,
         0.4707,  0.1165,  0.2412, -0.4680,  0.1236, -0.2534,  0.0561, -0.4873,
        -0.1820,  0.1680,  0.4595,  0.4490,  0.2932, -0.1696,  0.2964,  0.0436,
         0.4810, -0.0630, -0.3577, -0.1597, -0.1671,  0.2013,  0.0972, -0.2030,
        -0.1750, -0.2900,  0.1654, -0.3164,  0.2449, -0.3279,  0.0073,  0.3979,
         0.2783,  0.3540,  0.3291, -0.3662,  0.4292, -0.0617,  0.3118,  0.3347,
        -0.2312,  0.3450, -0.0976,  0.2148, -0.4324, -0.0256, -0.4192,  0.0130,
         0.2317, -0.0712, -0.3196, -0.2236], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 24967, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 154759 / 4295122944 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 24953, 4, 139) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 24952, 4, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 24967, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.3547,  0.4868, -0.1191, -0.3218, -0.0743,  0.2406,  0.1121, -0.0507,
         0.2181,  0.2009, -0.2258, -0.4265,  0.3179,  0.4780,  0.1193, -0.2825,
        -0.4158,  0.3328, -0.2825, -0.1627,  0.1256, -0.2988,  0.0909,  0.2106,
         0.3425, -0.3892,  0.3613, -0.4167, -0.4617, -0.2908,  0.4976,  0.1395,
        -0.2189,  0.1053,  0.3296,  0.4624,  0.0177, -0.4373, -0.3997, -0.4802,
        -0.3237, -0.4946, -0.2410, -0.0129, -0.3391,  0.0696, -0.1421, -0.2473,
         0.0494, -0.2239,  0.2048, -0.4839, -0.0881, -0.3872, -0.4966, -0.4951,
         0.3196,  0.2839,  0.2690, -0.0180,  0.0112,  0.4038, -0.1070, -0.3264,
        -0.0532,  0.2242, -0.3381, -0.1881, -0.1115,  0.2201,  0.3135,  0.1239,
         0.4106, -0.2747, -0.0190,  0.1708,  0.1512, -0.3960, -0.2290,  0.4329,
        -0.1426,  0.1985, -0.4695, -0.3938, -0.3833, -0.1033, -0.2749, -0.0891,
        -0.4292, -0.1038,  0.4353, -0.3733,  0.4856,  0.2213, -0.2415,  0.0575,
        -0.3135, -0.2261, -0.1539,  0.0339], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 24967, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.3547,  0.4868, -0.1191, -0.3218, -0.0743,  0.2406,  0.1121, -0.0507,
         0.2181,  0.2009, -0.2258, -0.4265,  0.3179,  0.4780,  0.1193, -0.2825,
        -0.4158,  0.3328, -0.2825, -0.1627,  0.1256, -0.2988,  0.0909,  0.2106,
         0.3425, -0.3892,  0.3613, -0.4167, -0.4617, -0.2908,  0.4976,  0.1395,
        -0.2189,  0.1053,  0.3296,  0.4624,  0.0177, -0.4373, -0.3997, -0.4802,
        -0.3237, -0.4946, -0.2410, -0.0129, -0.3391,  0.0696, -0.1421, -0.2473,
         0.0494, -0.2239,  0.2048, -0.4839, -0.0881, -0.3872, -0.4966, -0.4951,
         0.3196,  0.2839,  0.2690, -0.0180,  0.0112,  0.4038, -0.1070, -0.3264,
        -0.0532,  0.2242, -0.3381, -0.1881, -0.1115,  0.2201,  0.3135,  0.1239,
         0.4106, -0.2747, -0.0190,  0.1708,  0.1512, -0.3960, -0.2290,  0.4329,
        -0.1426,  0.1985, -0.4695, -0.3938, -0.3833, -0.1033, -0.2749, -0.0891,
        -0.4292, -0.1038,  0.4353, -0.3733,  0.4856,  0.2213, -0.2415,  0.0575,
        -0.3135, -0.2261, -0.1539,  0.0339], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 24967, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 154749 / 4295122944 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 24952, 0, 752) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 24952, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 24967, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.1241,  0.1528,  0.1556,  0.0750, -0.3323, -0.0772,  0.1676, -0.2903,
         0.3142, -0.0646, -0.3784,  0.4429, -0.1030, -0.0581, -0.1646, -0.4561,
         0.2678, -0.0356,  0.0251, -0.0752,  0.3628, -0.1178, -0.4495,  0.2827,
         0.3535,  0.4705,  0.0069,  0.2686, -0.0043,  0.3787, -0.3806, -0.1793,
        -0.3665, -0.1019, -0.4973,  0.3608, -0.1298,  0.0617, -0.1720,  0.3845,
        -0.0144,  0.2825, -0.4556, -0.0460, -0.3821,  0.0207, -0.2876, -0.1669,
         0.4771,  0.0598,  0.2598, -0.1643, -0.4163,  0.3137,  0.4075,  0.4163,
         0.0194,  0.0645, -0.1177,  0.3088, -0.4607,  0.4902,  0.3489, -0.1991,
        -0.3035, -0.2297, -0.0443, -0.1255,  0.3484,  0.3215,  0.2815,  0.1703,
         0.3860, -0.4546, -0.1873, -0.1580, -0.2551, -0.1708, -0.4429,  0.2937,
        -0.1307,  0.2417,  0.4375, -0.2423, -0.4932, -0.1884,  0.4851, -0.3728,
        -0.1704, -0.0071,  0.0859,  0.3289, -0.2284, -0.3677,  0.4756, -0.2805,
        -0.2761, -0.0071,  0.4814,  0.3535], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 24967, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.1241,  0.1528,  0.1556,  0.0750, -0.3323, -0.0772,  0.1676, -0.2903,
         0.3142, -0.0646, -0.3784,  0.4429, -0.1030, -0.0581, -0.1646, -0.4561,
         0.2678, -0.0356,  0.0251, -0.0752,  0.3628, -0.1178, -0.4495,  0.2827,
         0.3535,  0.4705,  0.0069,  0.2686, -0.0043,  0.3787, -0.3806, -0.1793,
        -0.3665, -0.1019, -0.4973,  0.3608, -0.1298,  0.0617, -0.1720,  0.3845,
        -0.0144,  0.2825, -0.4556, -0.0460, -0.3821,  0.0207, -0.2876, -0.1669,
         0.4771,  0.0598,  0.2598, -0.1643, -0.4163,  0.3137,  0.4075,  0.4163,
         0.0194,  0.0645, -0.1177,  0.3088, -0.4607,  0.4902,  0.3489, -0.1991,
        -0.3035, -0.2297, -0.0443, -0.1255,  0.3484,  0.3215,  0.2815,  0.1703,
         0.3860, -0.4546, -0.1873, -0.1580, -0.2551, -0.1708, -0.4429,  0.2937,
        -0.1307,  0.2417,  0.4375, -0.2423, -0.4932, -0.1884,  0.4851, -0.3728,
        -0.1704, -0.0071,  0.0859,  0.3289, -0.2284, -0.3677,  0.4756, -0.2805,
        -0.2761, -0.0071,  0.4814,  0.3535], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 33289, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 134075 / 4295079936 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 33273, 3, 193) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 33272, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 33289, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.2939,  0.4697, -0.1771, -0.4514,  0.0124,  0.1544,  0.0408,  0.0605,
         0.2563, -0.4045,  0.4858, -0.2230,  0.4495,  0.0383, -0.3755, -0.4326,
         0.3188,  0.2756, -0.3889,  0.1412, -0.2263,  0.0977, -0.0574, -0.1987,
        -0.0973, -0.0589, -0.4333,  0.0071,  0.0656, -0.4585, -0.2178,  0.4661,
        -0.0070,  0.0727,  0.4111, -0.2710, -0.2847,  0.2979,  0.3550, -0.1427,
         0.0209,  0.4338, -0.4998, -0.1676,  0.4697, -0.2416,  0.1157, -0.1702,
        -0.0374, -0.4824, -0.2803,  0.1249,  0.4536, -0.3804,  0.3479, -0.0145,
        -0.0105,  0.1542, -0.4404,  0.2881,  0.2267, -0.3430,  0.0878,  0.2654,
         0.3301,  0.0244,  0.4673,  0.4827, -0.0923,  0.0909, -0.0588, -0.0696,
         0.2712, -0.0697, -0.3442, -0.3481,  0.3098,  0.1991,  0.0949,  0.0410,
         0.2683, -0.1039,  0.4814, -0.0885,  0.2747,  0.1410,  0.1869, -0.3098,
         0.2712, -0.2903,  0.1324, -0.0919, -0.0837, -0.0379,  0.1342, -0.1201,
         0.0829,  0.0079,  0.1969,  0.2544], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 33289, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.2939,  0.4697, -0.1771, -0.4514,  0.0124,  0.1544,  0.0408,  0.0605,
         0.2563, -0.4045,  0.4858, -0.2230,  0.4495,  0.0383, -0.3755, -0.4326,
         0.3188,  0.2756, -0.3889,  0.1412, -0.2263,  0.0977, -0.0574, -0.1987,
        -0.0973, -0.0589, -0.4333,  0.0071,  0.0656, -0.4585, -0.2178,  0.4661,
        -0.0070,  0.0727,  0.4111, -0.2710, -0.2847,  0.2979,  0.3550, -0.1427,
         0.0209,  0.4338, -0.4998, -0.1676,  0.4697, -0.2416,  0.1157, -0.1702,
        -0.0374, -0.4824, -0.2803,  0.1249,  0.4536, -0.3804,  0.3479, -0.0145,
        -0.0105,  0.1542, -0.4404,  0.2881,  0.2267, -0.3430,  0.0878,  0.2654,
         0.3301,  0.0244,  0.4673,  0.4827, -0.0923,  0.0909, -0.0588, -0.0696,
         0.2712, -0.0697, -0.3442, -0.3481,  0.3098,  0.1991,  0.0949,  0.0410,
         0.2683, -0.1039,  0.4814, -0.0885,  0.2747,  0.1410,  0.1869, -0.3098,
         0.2712, -0.2903,  0.1324, -0.0919, -0.0837, -0.0379,  0.1342, -0.1201,
         0.0829,  0.0079,  0.1969,  0.2544], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 33289, 21, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 134347 / 4295079936 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 0, 12, 215) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 33289, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.1042, -0.2571, -0.4849, -0.3325,  0.0296, -0.3914, -0.4812, -0.1172,
         0.0926,  0.0307,  0.4954, -0.4233,  0.1901,  0.3396,  0.3093, -0.3394,
        -0.1830, -0.1069, -0.0295,  0.1917,  0.1986,  0.4561,  0.4717,  0.0880,
        -0.4165, -0.3237,  0.2290,  0.1244, -0.4258,  0.3745, -0.3801, -0.4922,
        -0.3354, -0.4907,  0.4651,  0.2759,  0.1473, -0.4136, -0.1573, -0.0952,
        -0.1616,  0.4541, -0.3843, -0.4956,  0.0098, -0.1619,  0.2632, -0.2014,
        -0.2961,  0.3696, -0.1144,  0.1113, -0.1372, -0.0510,  0.4363, -0.4375,
        -0.4470,  0.0502, -0.3645,  0.4846, -0.2406,  0.0556,  0.3276, -0.1409,
         0.0652, -0.4568, -0.4229,  0.4146,  0.2839,  0.1508,  0.2219,  0.4966,
        -0.0800,  0.4602, -0.0995,  0.2979,  0.3760, -0.4690,  0.4255,  0.4128,
         0.3806,  0.3755, -0.3799,  0.1000, -0.4229, -0.0257,  0.0880,  0.2668,
         0.1379, -0.2239, -0.2317,  0.4541,  0.3401,  0.4895, -0.0664,  0.2462,
        -0.0414,  0.3149, -0.2651,  0.2008], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 33289, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.1042, -0.2571, -0.4849, -0.3325,  0.0296, -0.3914, -0.4812, -0.1172,
         0.0926,  0.0307,  0.4954, -0.4233,  0.1901,  0.3396,  0.3093, -0.3394,
        -0.1830, -0.1069, -0.0295,  0.1917,  0.1986,  0.4561,  0.4717,  0.0880,
        -0.4165, -0.3237,  0.2290,  0.1244, -0.4258,  0.3745, -0.3801, -0.4922,
        -0.3354, -0.4907,  0.4651,  0.2759,  0.1473, -0.4136, -0.1573, -0.0952,
        -0.1616,  0.4541, -0.3843, -0.4956,  0.0098, -0.1619,  0.2632, -0.2014,
        -0.2961,  0.3696, -0.1144,  0.1113, -0.1372, -0.0510,  0.4363, -0.4375,
        -0.4470,  0.0502, -0.3645,  0.4846, -0.2406,  0.0556,  0.3276, -0.1409,
         0.0652, -0.4568, -0.4229,  0.4146,  0.2839,  0.1508,  0.2219,  0.4966,
        -0.0800,  0.4602, -0.0995,  0.2979,  0.3760, -0.4690,  0.4255,  0.4128,
         0.3806,  0.3755, -0.3799,  0.1000, -0.4229, -0.0257,  0.0880,  0.2668,
         0.1379, -0.2239, -0.2317,  0.4541,  0.3401,  0.4895, -0.0664,  0.2462,
        -0.0414,  0.3149, -0.2651,  0.2008], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 49933, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84103 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 49920, 5, 7) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 49917, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 49933, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.0677,  0.1858, -0.4436, -0.2954, -0.0831, -0.3826,  0.1598, -0.0566,
        -0.0516,  0.1874,  0.3264, -0.2070,  0.2754, -0.2462, -0.0963,  0.3425,
        -0.2937, -0.0927, -0.0856,  0.3796, -0.2769,  0.3398,  0.1564, -0.4189,
         0.4563,  0.0337, -0.3757,  0.2189,  0.0249,  0.2096,  0.4165,  0.3687,
        -0.1691, -0.1476,  0.3301,  0.4495, -0.0208,  0.4426,  0.2896, -0.3899,
         0.3447, -0.0135,  0.3054,  0.1495, -0.2839,  0.2993, -0.0135,  0.1501,
         0.0553, -0.3645,  0.0022,  0.4087, -0.4832,  0.0521,  0.0417, -0.1019,
         0.4426,  0.1479, -0.3879,  0.1512,  0.0823,  0.0594, -0.0754,  0.2330,
        -0.2788, -0.1312, -0.2512,  0.0936, -0.2303, -0.4241,  0.0117,  0.2432,
         0.1792, -0.2812,  0.2576,  0.0061, -0.0352, -0.4661,  0.4382,  0.2622,
        -0.3574,  0.4912,  0.1917, -0.4482,  0.1539, -0.3840, -0.1097, -0.4663,
        -0.4570, -0.2639,  0.0640, -0.0660,  0.3398,  0.4536, -0.2676,  0.2091,
         0.0293, -0.2465, -0.1937,  0.2732], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 49933, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.0677,  0.1858, -0.4436, -0.2954, -0.0831, -0.3826,  0.1598, -0.0566,
        -0.0516,  0.1874,  0.3264, -0.2070,  0.2754, -0.2462, -0.0963,  0.3425,
        -0.2937, -0.0927, -0.0856,  0.3796, -0.2769,  0.3398,  0.1564, -0.4189,
         0.4563,  0.0337, -0.3757,  0.2189,  0.0249,  0.2096,  0.4165,  0.3687,
        -0.1691, -0.1476,  0.3301,  0.4495, -0.0208,  0.4426,  0.2896, -0.3899,
         0.3447, -0.0135,  0.3054,  0.1495, -0.2839,  0.2993, -0.0135,  0.1501,
         0.0553, -0.3645,  0.0022,  0.4087, -0.4832,  0.0521,  0.0417, -0.1019,
         0.4426,  0.1479, -0.3879,  0.1512,  0.0823,  0.0594, -0.0754,  0.2330,
        -0.2788, -0.1312, -0.2512,  0.0936, -0.2303, -0.4241,  0.0117,  0.2432,
         0.1792, -0.2812,  0.2576,  0.0061, -0.0352, -0.4661,  0.4382,  0.2622,
        -0.3574,  0.4912,  0.1917, -0.4482,  0.1539, -0.3840, -0.1097, -0.4663,
        -0.4570, -0.2639,  0.0640, -0.0660,  0.3398,  0.4536, -0.2676,  0.2091,
         0.0293, -0.2465, -0.1937,  0.2732], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 49933, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84310 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 49921, 8, 323) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 49933, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.4275, -0.3911, -0.2712, -0.4844, -0.1231,  0.1747, -0.0445, -0.2793,
         0.3936,  0.3979, -0.0726,  0.4119, -0.2712, -0.3923, -0.2028, -0.1592,
         0.2186,  0.3152, -0.3843,  0.1100, -0.0421,  0.4792,  0.0865,  0.2224,
        -0.4148, -0.1702,  0.1825, -0.3611,  0.3682,  0.2507,  0.4692, -0.2568,
        -0.2050,  0.4321, -0.1324,  0.2517,  0.0100, -0.4875, -0.4509, -0.0378,
         0.4111,  0.1301,  0.2472, -0.1654, -0.2927,  0.3386,  0.1346,  0.3784,
        -0.1343, -0.1687, -0.0382, -0.2910,  0.3896,  0.3494,  0.1493, -0.0820,
        -0.4368, -0.3645, -0.4854, -0.4856, -0.2922,  0.4558, -0.1602,  0.2661,
         0.2441, -0.2776,  0.1731, -0.1688, -0.1765,  0.0477,  0.0750, -0.1904,
         0.1465,  0.4490,  0.2722, -0.3206,  0.3318,  0.3486, -0.1584, -0.2382,
        -0.4514, -0.1137, -0.0341, -0.3638, -0.3411,  0.4504, -0.2961,  0.4058,
        -0.4751,  0.1127,  0.2969,  0.0006, -0.0109, -0.1729, -0.1055, -0.2634,
         0.4446, -0.0765, -0.3547, -0.2125], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 49933, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.4275, -0.3911, -0.2712, -0.4844, -0.1231,  0.1747, -0.0445, -0.2793,
         0.3936,  0.3979, -0.0726,  0.4119, -0.2712, -0.3923, -0.2028, -0.1592,
         0.2186,  0.3152, -0.3843,  0.1100, -0.0421,  0.4792,  0.0865,  0.2224,
        -0.4148, -0.1702,  0.1825, -0.3611,  0.3682,  0.2507,  0.4692, -0.2568,
        -0.2050,  0.4321, -0.1324,  0.2517,  0.0100, -0.4875, -0.4509, -0.0378,
         0.4111,  0.1301,  0.2472, -0.1654, -0.2927,  0.3386,  0.1346,  0.3784,
        -0.1343, -0.1687, -0.0382, -0.2910,  0.3896,  0.3494,  0.1493, -0.0820,
        -0.4368, -0.3645, -0.4854, -0.4856, -0.2922,  0.4558, -0.1602,  0.2661,
         0.2441, -0.2776,  0.1731, -0.1688, -0.1765,  0.0477,  0.0750, -0.1904,
         0.1465,  0.4490,  0.2722, -0.3206,  0.3318,  0.3486, -0.1584, -0.2382,
        -0.4514, -0.1137, -0.0341, -0.3638, -0.3411,  0.4504, -0.2961,  0.4058,
        -0.4751,  0.1127,  0.2969,  0.0006, -0.0109, -0.1729, -0.1055, -0.2634,
         0.4446, -0.0765, -0.3547, -0.2125], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84083 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 49918, 6, 628) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 49917, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-2.0081e-01,  3.1812e-01, -4.7437e-01,  4.5288e-01,  3.5205e-01,
         1.1707e-01,  3.7036e-01,  6.1554e-02,  1.5112e-01,  4.4116e-01,
         1.0742e-01, -2.8833e-01,  3.1836e-01,  3.9307e-01,  1.0657e-01,
         2.6465e-01,  1.0382e-01, -2.1252e-01,  3.9941e-01,  1.5308e-01,
         3.6475e-01, -4.6948e-01, -4.4092e-01, -4.4336e-01, -2.7979e-01,
        -4.6265e-01,  2.0386e-01,  2.4414e-01, -1.9104e-01,  3.9062e-01,
         1.1896e-01,  8.4698e-05,  1.9627e-03, -4.6289e-01,  3.2227e-01,
        -2.8564e-02, -3.2202e-01,  7.6721e-02, -1.2207e-01,  4.3237e-01,
        -4.4507e-01, -2.3071e-01,  2.7905e-01, -4.0497e-02,  1.2494e-01,
         3.4961e-01,  1.8762e-01,  3.6523e-01, -1.4868e-01,  6.1554e-02,
        -3.6682e-02, -4.1479e-01,  3.5938e-01, -3.1525e-02, -1.1475e-02,
        -6.1005e-02, -8.2169e-03, -6.1340e-02,  4.3018e-01,  7.1655e-02,
         9.7107e-02, -1.1603e-01,  1.9983e-01, -2.5684e-01, -4.3994e-01,
         2.7490e-01,  6.1615e-02, -1.3086e-01, -1.6492e-01, -3.6670e-01,
         2.5464e-01, -7.9590e-02, -2.3425e-01, -4.2969e-01,  4.4312e-01,
        -3.6377e-01,  4.6069e-01,  3.1226e-01,  9.1019e-03, -2.6685e-01,
         1.7102e-01,  4.2041e-01,  3.7231e-01,  4.4922e-01, -4.2065e-01,
         2.6367e-01,  3.6719e-01, -3.7305e-01,  3.4497e-01,  1.9543e-01,
         4.4702e-01,  1.1951e-01, -4.1626e-01,  3.0273e-01,  2.6123e-01,
        -4.9756e-01,  4.3994e-01, -2.1338e-01,  4.9854e-01,  9.6802e-02],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-2.0081e-01,  3.1812e-01, -4.7437e-01,  4.5288e-01,  3.5205e-01,
         1.1707e-01,  3.7036e-01,  6.1554e-02,  1.5112e-01,  4.4116e-01,
         1.0742e-01, -2.8833e-01,  3.1836e-01,  3.9307e-01,  1.0657e-01,
         2.6465e-01,  1.0382e-01, -2.1252e-01,  3.9941e-01,  1.5308e-01,
         3.6475e-01, -4.6948e-01, -4.4092e-01, -4.4336e-01, -2.7979e-01,
        -4.6265e-01,  2.0386e-01,  2.4414e-01, -1.9104e-01,  3.9062e-01,
         1.1896e-01,  8.4698e-05,  1.9627e-03, -4.6289e-01,  3.2227e-01,
        -2.8564e-02, -3.2202e-01,  7.6721e-02, -1.2207e-01,  4.3237e-01,
        -4.4507e-01, -2.3071e-01,  2.7905e-01, -4.0497e-02,  1.2494e-01,
         3.4961e-01,  1.8762e-01,  3.6523e-01, -1.4868e-01,  6.1554e-02,
        -3.6682e-02, -4.1479e-01,  3.5938e-01, -3.1525e-02, -1.1475e-02,
        -6.1005e-02, -8.2169e-03, -6.1340e-02,  4.3018e-01,  7.1655e-02,
         9.7107e-02, -1.1603e-01,  1.9983e-01, -2.5684e-01, -4.3994e-01,
         2.7490e-01,  6.1615e-02, -1.3086e-01, -1.6492e-01, -3.6670e-01,
         2.5464e-01, -7.9590e-02, -2.3425e-01, -4.2969e-01,  4.4312e-01,
        -3.6377e-01,  4.6069e-01,  3.1226e-01,  9.1019e-03, -2.6685e-01,
         1.7102e-01,  4.2041e-01,  3.7231e-01,  4.4922e-01, -4.2065e-01,
         2.6367e-01,  3.6719e-01, -3.7305e-01,  3.4497e-01,  1.9543e-01,
         4.4702e-01,  1.1951e-01, -4.1626e-01,  3.0273e-01,  2.6123e-01,
        -4.9756e-01,  4.3994e-01, -2.1338e-01,  4.9854e-01,  9.6802e-02],
       dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68269 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 49921, 4, 551) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 49920, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.4392, -0.0019, -0.2146,  0.1282, -0.0811, -0.3972,  0.4458, -0.4792,
         0.3564, -0.1090, -0.4106,  0.0318,  0.1175,  0.0745, -0.4705,  0.3848,
        -0.3843, -0.4807,  0.1058,  0.2234,  0.0683, -0.1460,  0.2288,  0.0565,
         0.4509, -0.0036, -0.4446,  0.1974, -0.2610, -0.3123,  0.0085,  0.3792,
         0.0621, -0.4482,  0.0460, -0.4583,  0.2087,  0.1581,  0.2188, -0.0817,
         0.0312, -0.1255,  0.4312,  0.0231,  0.1011, -0.3020, -0.4543, -0.3833,
         0.1974, -0.2227, -0.0711,  0.0975,  0.4900,  0.0348,  0.0692, -0.0838,
        -0.0093, -0.1875, -0.4595,  0.3149,  0.2448, -0.2306, -0.3586, -0.2830,
        -0.3225,  0.1813, -0.4062,  0.4924, -0.2671,  0.0143,  0.1595, -0.2085,
        -0.3340,  0.1584,  0.3066,  0.2343, -0.2220,  0.3364, -0.1149,  0.1827,
         0.4280,  0.2737,  0.4746, -0.2803, -0.3643, -0.1514,  0.0752,  0.4004,
        -0.3867, -0.3359,  0.1261, -0.0787,  0.4951, -0.3328,  0.3357, -0.0564,
         0.3718,  0.2668,  0.0279,  0.2710], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.4392, -0.0019, -0.2146,  0.1282, -0.0811, -0.3972,  0.4458, -0.4792,
         0.3564, -0.1090, -0.4106,  0.0318,  0.1175,  0.0745, -0.4705,  0.3848,
        -0.3843, -0.4807,  0.1058,  0.2234,  0.0683, -0.1460,  0.2288,  0.0565,
         0.4509, -0.0036, -0.4446,  0.1974, -0.2610, -0.3123,  0.0085,  0.3792,
         0.0621, -0.4482,  0.0460, -0.4583,  0.2087,  0.1581,  0.2188, -0.0817,
         0.0312, -0.1255,  0.4312,  0.0231,  0.1011, -0.3020, -0.4543, -0.3833,
         0.1974, -0.2227, -0.0711,  0.0975,  0.4900,  0.0348,  0.0692, -0.0838,
        -0.0093, -0.1875, -0.4595,  0.3149,  0.2448, -0.2306, -0.3586, -0.2830,
        -0.3225,  0.1813, -0.4062,  0.4924, -0.2671,  0.0143,  0.1595, -0.2085,
        -0.3340,  0.1584,  0.3066,  0.2343, -0.2220,  0.3364, -0.1149,  0.1827,
         0.4280,  0.2737,  0.4746, -0.2803, -0.3643, -0.1514,  0.0752,  0.4004,
        -0.3867, -0.3359,  0.1261, -0.0787,  0.4951, -0.3328,  0.3357, -0.0564,
         0.3718,  0.2668,  0.0279,  0.2710], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68246 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 49920, 5, 674) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 49920, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2837, -0.0206, -0.0918, -0.4399, -0.1964,  0.0298, -0.3142,  0.4766,
        -0.4939, -0.3665,  0.1937, -0.3813,  0.3076, -0.4619,  0.3142,  0.2112,
         0.4070,  0.3235,  0.3982,  0.3906, -0.0806,  0.0054, -0.4758,  0.4338,
        -0.3826, -0.0740, -0.1306,  0.3374,  0.1132,  0.0902,  0.0562, -0.2961,
        -0.0687,  0.4534, -0.0514, -0.2661, -0.3965,  0.4236,  0.3135,  0.0729,
        -0.3145,  0.3262, -0.1166, -0.0056, -0.3621,  0.0736, -0.0350, -0.1730,
        -0.0721,  0.4968, -0.1672, -0.2666, -0.0739, -0.4407, -0.3794,  0.0502,
        -0.3362, -0.2324,  0.4863,  0.2649, -0.0676, -0.3469,  0.3088, -0.3530,
         0.1678,  0.3743,  0.0041, -0.3672, -0.0951, -0.2444,  0.4836,  0.0645,
        -0.0933,  0.4509, -0.3342, -0.4683, -0.0610,  0.0199,  0.0818, -0.0858,
         0.0223,  0.3271, -0.1774,  0.0869,  0.4617,  0.3794, -0.2869,  0.4094,
         0.2373, -0.3215, -0.4124,  0.2185, -0.2457, -0.2307, -0.3254, -0.2084,
         0.3901,  0.0977,  0.4092,  0.1490], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2837, -0.0206, -0.0918, -0.4399, -0.1964,  0.0298, -0.3142,  0.4766,
        -0.4939, -0.3665,  0.1937, -0.3813,  0.3076, -0.4619,  0.3142,  0.2112,
         0.4070,  0.3235,  0.3982,  0.3906, -0.0806,  0.0054, -0.4758,  0.4338,
        -0.3826, -0.0740, -0.1306,  0.3374,  0.1132,  0.0902,  0.0562, -0.2961,
        -0.0687,  0.4534, -0.0514, -0.2661, -0.3965,  0.4236,  0.3135,  0.0729,
        -0.3145,  0.3262, -0.1166, -0.0056, -0.3621,  0.0736, -0.0350, -0.1730,
        -0.0721,  0.4968, -0.1672, -0.2666, -0.0739, -0.4407, -0.3794,  0.0502,
        -0.3362, -0.2324,  0.4863,  0.2649, -0.0676, -0.3469,  0.3088, -0.3530,
         0.1678,  0.3743,  0.0041, -0.3672, -0.0951, -0.2444,  0.4836,  0.0645,
        -0.0933,  0.4509, -0.3342, -0.4683, -0.0610,  0.0199,  0.0818, -0.0858,
         0.0223,  0.3271, -0.1774,  0.0869,  0.4617,  0.3794, -0.2869,  0.4094,
         0.2373, -0.3215, -0.4124,  0.2185, -0.2457, -0.2307, -0.3254, -0.2084,
         0.3901,  0.0977,  0.4092,  0.1490], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84043 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 0, 5, 512) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.3257, -0.2654, -0.1166,  0.1454,  0.2827, -0.2488,  0.4817, -0.3613,
        -0.4304, -0.1851, -0.2634,  0.1198, -0.4631, -0.4729,  0.2236,  0.3596,
         0.4893,  0.4805,  0.2384, -0.0941, -0.0879, -0.3840,  0.2100,  0.2515,
        -0.1237,  0.0541,  0.3936, -0.2433, -0.0073,  0.4846,  0.1448, -0.1880,
        -0.2544,  0.3816, -0.1335, -0.3982, -0.0826,  0.4170,  0.0981, -0.3022,
         0.1869, -0.0075,  0.4307,  0.3784, -0.4509,  0.1996,  0.0308, -0.4136,
        -0.0801, -0.0696, -0.1194,  0.2800,  0.1611, -0.3218, -0.2598, -0.4243,
         0.4846, -0.2170,  0.1666, -0.2499, -0.3142,  0.4822,  0.2961, -0.4902,
         0.4985, -0.2861,  0.1143, -0.3525, -0.4417,  0.3501, -0.0497,  0.3660,
        -0.4377,  0.0747, -0.4736,  0.1477,  0.0556,  0.1149,  0.1790,  0.0690,
        -0.2559, -0.4622, -0.4077,  0.3271,  0.0986, -0.4756,  0.1061,  0.3579,
        -0.2169, -0.4285, -0.3843,  0.1118,  0.1481, -0.2124, -0.4595, -0.2074,
         0.0769, -0.1105,  0.2233, -0.3599], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 49933, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.3257, -0.2654, -0.1166,  0.1454,  0.2827, -0.2488,  0.4817, -0.3613,
        -0.4304, -0.1851, -0.2634,  0.1198, -0.4631, -0.4729,  0.2236,  0.3596,
         0.4893,  0.4805,  0.2384, -0.0941, -0.0879, -0.3840,  0.2100,  0.2515,
        -0.1237,  0.0541,  0.3936, -0.2433, -0.0073,  0.4846,  0.1448, -0.1880,
        -0.2544,  0.3816, -0.1335, -0.3982, -0.0826,  0.4170,  0.0981, -0.3022,
         0.1869, -0.0075,  0.4307,  0.3784, -0.4509,  0.1996,  0.0308, -0.4136,
        -0.0801, -0.0696, -0.1194,  0.2800,  0.1611, -0.3218, -0.2598, -0.4243,
         0.4846, -0.2170,  0.1666, -0.2499, -0.3142,  0.4822,  0.2961, -0.4902,
         0.4985, -0.2861,  0.1143, -0.3525, -0.4417,  0.3501, -0.0497,  0.3660,
        -0.4377,  0.0747, -0.4736,  0.1477,  0.0556,  0.1149,  0.1790,  0.0690,
        -0.2559, -0.4622, -0.4077,  0.3271,  0.0986, -0.4756,  0.1061,  0.3579,
        -0.2169, -0.4285, -0.3843,  0.1118,  0.1481, -0.2124, -0.4595, -0.2074,
         0.0769, -0.1105,  0.2233, -0.3599], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 14, 2739138],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2134 / 4294968384 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 6, 10, 2738472) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 10, 2738050) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 14, 2739138]), dtype=torch.float16)
First 100 elements: tensor([-0.1809, -0.3193,  0.4636,  0.2458, -0.3718,  0.4902,  0.2908,  0.2174,
        -0.1968, -0.2771,  0.2771,  0.2341,  0.3564,  0.0173,  0.0925,  0.0328,
        -0.2979, -0.2690,  0.2625,  0.4380,  0.1349,  0.0924, -0.1671,  0.0397,
        -0.0690, -0.2047,  0.0034, -0.1908, -0.0191,  0.4705,  0.4185, -0.2345,
         0.2081,  0.2544, -0.4561,  0.3132,  0.2407,  0.2695, -0.1433, -0.2998,
         0.3386, -0.2856, -0.2369, -0.4038, -0.2001, -0.2842, -0.4678,  0.3716,
         0.4438,  0.4092,  0.1960,  0.1127,  0.1865, -0.3123,  0.3320, -0.0917,
         0.2164, -0.1575, -0.4626,  0.4749, -0.1288, -0.2666, -0.1531, -0.4558,
         0.0085, -0.0721, -0.2397, -0.4561,  0.0178,  0.0883, -0.1240, -0.2257,
        -0.1492, -0.1313,  0.3726, -0.1245, -0.0085,  0.0409, -0.2825,  0.2891,
        -0.2394, -0.3936, -0.3691, -0.1838,  0.0042,  0.1287, -0.1173, -0.4929,
         0.2725, -0.1373, -0.1477,  0.3071, -0.3057, -0.2827,  0.4541,  0.4385,
         0.4583,  0.4487,  0.0199,  0.0457], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 14, 2739138]), dtype=torch.float16)
First 100 elements: tensor([-0.1809, -0.3193,  0.4636,  0.2458, -0.3718,  0.4902,  0.2908,  0.2174,
        -0.1968, -0.2771,  0.2771,  0.2341,  0.3564,  0.0173,  0.0925,  0.0328,
        -0.2979, -0.2690,  0.2625,  0.4380,  0.1349,  0.0924, -0.1671,  0.0397,
        -0.0690, -0.2047,  0.0034, -0.1908, -0.0191,  0.4705,  0.4185, -0.2345,
         0.2081,  0.2544, -0.4561,  0.3132,  0.2407,  0.2695, -0.1433, -0.2998,
         0.3386, -0.2856, -0.2369, -0.4038, -0.2001, -0.2842, -0.4678,  0.3716,
         0.4438,  0.4092,  0.1960,  0.1127,  0.1865, -0.3123,  0.3320, -0.0917,
         0.2164, -0.1575, -0.4626,  0.4749, -0.1288, -0.2666, -0.1531, -0.4558,
         0.0085, -0.0721, -0.2397, -0.4561,  0.0178,  0.0883, -0.1240, -0.2257,
        -0.1492, -0.1313,  0.3726, -0.1245, -0.0085,  0.0409, -0.2825,  0.2891,
        -0.2394, -0.3936, -0.3691, -0.1838,  0.0042,  0.1287, -0.1173, -0.4929,
         0.2725, -0.1373, -0.1477,  0.3071, -0.3057, -0.2827,  0.4541,  0.4385,
         0.4583,  0.4487,  0.0199,  0.0457], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 14, 2739138],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2127 / 4294968384 (0.0%)
Greatest absolute difference: 0.499755859375 at index (0, 15, 6, 2, 2738267) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 2, 2738050) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 14, 2739138]), dtype=torch.float16)
First 100 elements: tensor([ 0.1787, -0.3020, -0.3711, -0.0312,  0.4397, -0.2406, -0.2302,  0.2771,
        -0.0818,  0.3420,  0.3313, -0.3657,  0.3984,  0.4656, -0.2433,  0.4463,
         0.4817,  0.0244,  0.1622, -0.3157,  0.1442, -0.1400,  0.0218,  0.4702,
        -0.1556, -0.0241,  0.4944, -0.0641,  0.1332, -0.3718,  0.3916,  0.0737,
        -0.0520,  0.2225, -0.1338, -0.0038,  0.0656,  0.0475,  0.0959, -0.0753,
        -0.2212,  0.1898,  0.3220, -0.3550, -0.1807, -0.3879,  0.4739, -0.2876,
        -0.0304,  0.2048,  0.4404,  0.0873, -0.3464, -0.1235,  0.3979,  0.0962,
         0.3125, -0.1693, -0.4624,  0.4272, -0.0978, -0.4089, -0.4529, -0.2389,
         0.3953,  0.0717, -0.3887, -0.3691, -0.2849,  0.4531, -0.3665,  0.4172,
         0.1682,  0.3669, -0.1945, -0.2460, -0.4919,  0.4019, -0.3801,  0.4609,
        -0.0801,  0.3674,  0.3062, -0.1351,  0.1161, -0.0722,  0.1405, -0.2878,
         0.3059,  0.1024, -0.2683, -0.4934, -0.4998, -0.3379, -0.0509,  0.2642,
         0.4058, -0.1544,  0.4541, -0.3865], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 14, 2739138]), dtype=torch.float16)
First 100 elements: tensor([ 0.1787, -0.3020, -0.3711, -0.0312,  0.4397, -0.2406, -0.2302,  0.2771,
        -0.0818,  0.3420,  0.3313, -0.3657,  0.3984,  0.4656, -0.2433,  0.4463,
         0.4817,  0.0244,  0.1622, -0.3157,  0.1442, -0.1400,  0.0218,  0.4702,
        -0.1556, -0.0241,  0.4944, -0.0641,  0.1332, -0.3718,  0.3916,  0.0737,
        -0.0520,  0.2225, -0.1338, -0.0038,  0.0656,  0.0475,  0.0959, -0.0753,
        -0.2212,  0.1898,  0.3220, -0.3550, -0.1807, -0.3879,  0.4739, -0.2876,
        -0.0304,  0.2048,  0.4404,  0.0873, -0.3464, -0.1235,  0.3979,  0.0962,
         0.3125, -0.1693, -0.4624,  0.4272, -0.0978, -0.4089, -0.4529, -0.2389,
         0.3953,  0.0717, -0.3887, -0.3691, -0.2849,  0.4531, -0.3665,  0.4172,
         0.1682,  0.3669, -0.1945, -0.2460, -0.4919,  0.4019, -0.3801,  0.4609,
        -0.0801,  0.3674,  0.3062, -0.1351,  0.1161, -0.0722,  0.1405, -0.2878,
         0.3059,  0.1024, -0.2683, -0.4934, -0.4998, -0.3379, -0.0509,  0.2642,
         0.4058, -0.1544,  0.4541, -0.3865], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70521 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 6, 49852, 628) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 49839, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([ 2.7905e-01,  4.4405e-05,  1.5576e-01,  3.8037e-01,  3.4424e-01,
        -9.0027e-02,  2.9404e-02,  5.7251e-02, -3.4399e-01, -4.0479e-01,
         2.0874e-01, -2.2742e-01,  3.1787e-01,  2.0789e-01, -1.8418e-04,
         4.1528e-01,  3.9111e-01, -1.9211e-02, -1.5125e-01,  1.9885e-01,
         4.0137e-01, -4.6509e-01,  3.1812e-01,  3.4180e-01,  2.4170e-02,
        -3.1665e-01, -4.2700e-01,  3.6060e-01, -4.1821e-01,  1.5388e-02,
         1.6846e-01,  2.5366e-01, -3.3521e-01, -3.4180e-02, -2.6514e-01,
        -2.7393e-01, -2.6514e-01, -2.3523e-01, -4.5288e-01, -2.9736e-01,
         6.1676e-02, -3.7744e-01,  1.8005e-01, -1.3599e-01, -1.5417e-01,
        -3.3203e-01,  1.3464e-01,  3.1201e-01, -4.2065e-01, -4.7827e-01,
         2.0142e-02,  1.5625e-02, -2.0630e-01,  2.1179e-02,  1.6797e-01,
         6.9214e-02, -2.9102e-01,  4.9634e-01,  4.9658e-01, -2.4072e-01,
        -3.5645e-01,  2.5586e-01,  9.3201e-02, -3.1738e-01,  3.2397e-01,
        -7.9834e-02, -3.8086e-01,  8.3069e-02, -1.9458e-01, -4.7803e-01,
        -1.0156e-01, -3.1714e-01, -1.6614e-01, -1.2836e-03,  9.1370e-02,
         3.6957e-02,  4.8584e-01,  7.6233e-02, -4.9072e-01,  2.5659e-01,
        -4.6680e-01, -4.1040e-01, -2.1899e-01, -8.9478e-02, -1.3245e-02,
        -3.7134e-01,  3.4155e-01,  3.5205e-01, -4.0161e-01,  8.1665e-02,
         2.6855e-01,  2.0825e-01, -3.3008e-01, -1.8298e-01,  3.0786e-01,
        -4.2114e-01, -9.2773e-02, -1.8811e-01, -2.2546e-01,  1.4380e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([ 2.7905e-01,  4.4405e-05,  1.5576e-01,  3.8037e-01,  3.4424e-01,
        -9.0027e-02,  2.9404e-02,  5.7251e-02, -3.4399e-01, -4.0479e-01,
         2.0874e-01, -2.2742e-01,  3.1787e-01,  2.0789e-01, -1.8418e-04,
         4.1528e-01,  3.9111e-01, -1.9211e-02, -1.5125e-01,  1.9885e-01,
         4.0137e-01, -4.6509e-01,  3.1812e-01,  3.4180e-01,  2.4170e-02,
        -3.1665e-01, -4.2700e-01,  3.6060e-01, -4.1821e-01,  1.5388e-02,
         1.6846e-01,  2.5366e-01, -3.3521e-01, -3.4180e-02, -2.6514e-01,
        -2.7393e-01, -2.6514e-01, -2.3523e-01, -4.5288e-01, -2.9736e-01,
         6.1676e-02, -3.7744e-01,  1.8005e-01, -1.3599e-01, -1.5417e-01,
        -3.3203e-01,  1.3464e-01,  3.1201e-01, -4.2065e-01, -4.7827e-01,
         2.0142e-02,  1.5625e-02, -2.0630e-01,  2.1179e-02,  1.6797e-01,
         6.9214e-02, -2.9102e-01,  4.9634e-01,  4.9658e-01, -2.4072e-01,
        -3.5645e-01,  2.5586e-01,  9.3201e-02, -3.1738e-01,  3.2397e-01,
        -7.9834e-02, -3.8086e-01,  8.3069e-02, -1.9458e-01, -4.7803e-01,
        -1.0156e-01, -3.1714e-01, -1.6614e-01, -1.2836e-03,  9.1370e-02,
         3.6957e-02,  4.8584e-01,  7.6233e-02, -4.9072e-01,  2.5659e-01,
        -4.6680e-01, -4.1040e-01, -2.1899e-01, -8.9478e-02, -1.3245e-02,
        -3.7134e-01,  3.4155e-01,  3.5205e-01, -4.0161e-01,  8.1665e-02,
         2.6855e-01,  2.0825e-01, -3.3008e-01, -1.8298e-01,  3.0786e-01,
        -4.2114e-01, -9.2773e-02, -1.8811e-01, -2.2546e-01,  1.4380e-01],
       dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68269 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 6, 49853, 551) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 49842, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.4392, -0.0019, -0.2146,  0.1282, -0.0811, -0.3972,  0.4458, -0.4792,
         0.3564, -0.1090, -0.4106,  0.0318,  0.1175,  0.0745, -0.4705,  0.3848,
        -0.3843, -0.4807,  0.1058,  0.2234,  0.0683, -0.1460,  0.2288,  0.0565,
         0.4509, -0.0036, -0.4446,  0.1974, -0.2610, -0.3123,  0.0085,  0.3792,
         0.0621, -0.4482,  0.0460, -0.4583,  0.2087,  0.1581,  0.2188, -0.0817,
         0.0312, -0.1255,  0.4312,  0.0231,  0.1011, -0.3020, -0.4543, -0.3833,
         0.1974, -0.2227, -0.0711,  0.0975,  0.4900,  0.0348,  0.0692, -0.0838,
        -0.0093, -0.1875, -0.4595,  0.3149,  0.2448, -0.2306, -0.3586, -0.2830,
        -0.3225,  0.1813, -0.4062,  0.4924, -0.2671,  0.0143,  0.1595, -0.2085,
        -0.3340,  0.1584,  0.3066,  0.2343, -0.2220,  0.3364, -0.1149,  0.1827,
         0.4280,  0.2737,  0.4746, -0.2803, -0.3643, -0.1514,  0.0752,  0.4004,
        -0.3867, -0.3359,  0.1261, -0.0787,  0.4951, -0.3328,  0.3357, -0.0564,
         0.3718,  0.2668,  0.0279,  0.2710], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.4392, -0.0019, -0.2146,  0.1282, -0.0811, -0.3972,  0.4458, -0.4792,
         0.3564, -0.1090, -0.4106,  0.0318,  0.1175,  0.0745, -0.4705,  0.3848,
        -0.3843, -0.4807,  0.1058,  0.2234,  0.0683, -0.1460,  0.2288,  0.0565,
         0.4509, -0.0036, -0.4446,  0.1974, -0.2610, -0.3123,  0.0085,  0.3792,
         0.0621, -0.4482,  0.0460, -0.4583,  0.2087,  0.1581,  0.2188, -0.0817,
         0.0312, -0.1255,  0.4312,  0.0231,  0.1011, -0.3020, -0.4543, -0.3833,
         0.1974, -0.2227, -0.0711,  0.0975,  0.4900,  0.0348,  0.0692, -0.0838,
        -0.0093, -0.1875, -0.4595,  0.3149,  0.2448, -0.2306, -0.3586, -0.2830,
        -0.3225,  0.1813, -0.4062,  0.4924, -0.2671,  0.0143,  0.1595, -0.2085,
        -0.3340,  0.1584,  0.3066,  0.2343, -0.2220,  0.3364, -0.1149,  0.1827,
         0.4280,  0.2737,  0.4746, -0.2803, -0.3643, -0.1514,  0.0752,  0.4004,
        -0.3867, -0.3359,  0.1261, -0.0787,  0.4951, -0.3328,  0.3357, -0.0564,
         0.3718,  0.2668,  0.0279,  0.2710], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68243 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 6, 49844, 419) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 49842, 257) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2180,  0.1373, -0.4360, -0.0350,  0.4143,  0.4917, -0.1660, -0.4253,
         0.3145, -0.2693, -0.3342,  0.1761, -0.2764, -0.4094, -0.1993, -0.4436,
        -0.0835, -0.0795, -0.3940,  0.2639,  0.3240, -0.0768, -0.4456, -0.1107,
         0.4360,  0.4993, -0.2549,  0.2457,  0.2852, -0.4150,  0.4502, -0.2251,
        -0.2383, -0.1315, -0.4329,  0.1312,  0.1981, -0.2067,  0.1415, -0.3389,
         0.2827,  0.4521, -0.3337,  0.0647, -0.2073, -0.2054, -0.0874,  0.1222,
        -0.4268,  0.3811,  0.3523,  0.1083,  0.0489, -0.2568,  0.4407, -0.1223,
        -0.3860, -0.0062,  0.3560,  0.1317,  0.2710,  0.0069,  0.3447,  0.2859,
         0.3940, -0.3428,  0.0956,  0.0605,  0.1554, -0.0956,  0.1466, -0.0712,
         0.2035, -0.3479,  0.0450,  0.3894, -0.0645,  0.2294, -0.4663,  0.2295,
         0.3091,  0.4504, -0.3438, -0.1058, -0.1051,  0.2091,  0.4373, -0.4512,
         0.4026, -0.2283, -0.2505,  0.4092,  0.2847, -0.2688, -0.4392, -0.3804,
         0.3450, -0.1355, -0.1418, -0.1499], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2180,  0.1373, -0.4360, -0.0350,  0.4143,  0.4917, -0.1660, -0.4253,
         0.3145, -0.2693, -0.3342,  0.1761, -0.2764, -0.4094, -0.1993, -0.4436,
        -0.0835, -0.0795, -0.3940,  0.2639,  0.3240, -0.0768, -0.4456, -0.1107,
         0.4360,  0.4993, -0.2549,  0.2457,  0.2852, -0.4150,  0.4502, -0.2251,
        -0.2383, -0.1315, -0.4329,  0.1312,  0.1981, -0.2067,  0.1415, -0.3389,
         0.2827,  0.4521, -0.3337,  0.0647, -0.2073, -0.2054, -0.0874,  0.1222,
        -0.4268,  0.3811,  0.3523,  0.1083,  0.0489, -0.2568,  0.4407, -0.1223,
        -0.3860, -0.0062,  0.3560,  0.1317,  0.2710,  0.0069,  0.3447,  0.2859,
         0.3940, -0.3428,  0.0956,  0.0605,  0.1554, -0.0956,  0.1466, -0.0712,
         0.2035, -0.3479,  0.0450,  0.3894, -0.0645,  0.2294, -0.4663,  0.2295,
         0.3091,  0.4504, -0.3438, -0.1058, -0.1051,  0.2091,  0.4373, -0.4512,
         0.4026, -0.2283, -0.2505,  0.4092,  0.2847, -0.2688, -0.4392, -0.3804,
         0.3450, -0.1355, -0.1418, -0.1499], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70500 / 4295036928 (0.0%)
Greatest absolute difference: 0.5 at index (0, 15, 6, 49843, 693) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.4624,  0.0862,  0.0449, -0.3613,  0.1332,  0.2314, -0.3477,  0.2920,
         0.4890, -0.1166,  0.2339,  0.3740,  0.0463,  0.1204,  0.0140,  0.4407,
         0.3237,  0.2081, -0.4585, -0.3120,  0.1266, -0.0369,  0.3589,  0.1865,
         0.4900,  0.0940,  0.1368, -0.3071,  0.4072, -0.2305, -0.2534, -0.4766,
         0.3550,  0.4697,  0.4077, -0.3320,  0.0690, -0.0118, -0.1069,  0.1943,
        -0.3467,  0.1749,  0.2020,  0.2590,  0.1246,  0.1102,  0.4739, -0.2913,
        -0.4194, -0.3596,  0.0198,  0.2413,  0.2227, -0.2646, -0.1045,  0.3989,
        -0.3113,  0.2203, -0.0652, -0.2465, -0.3643, -0.0831,  0.4424, -0.0888,
         0.3992,  0.3245,  0.0511,  0.4622,  0.4150,  0.0034, -0.4285,  0.4792,
        -0.3408, -0.1659, -0.0899,  0.4539, -0.2881,  0.3794,  0.1672, -0.1680,
        -0.1575, -0.0945,  0.2239,  0.4517, -0.4829, -0.1780,  0.4907, -0.4800,
        -0.0726,  0.1580,  0.3140, -0.2153,  0.3799, -0.2029, -0.0171, -0.0861,
        -0.3145,  0.4014,  0.4221, -0.1074], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 49933, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.4624,  0.0862,  0.0449, -0.3613,  0.1332,  0.2314, -0.3477,  0.2920,
         0.4890, -0.1166,  0.2339,  0.3740,  0.0463,  0.1204,  0.0140,  0.4407,
         0.3237,  0.2081, -0.4585, -0.3120,  0.1266, -0.0369,  0.3589,  0.1865,
         0.4900,  0.0940,  0.1368, -0.3071,  0.4072, -0.2305, -0.2534, -0.4766,
         0.3550,  0.4697,  0.4077, -0.3320,  0.0690, -0.0118, -0.1069,  0.1943,
        -0.3467,  0.1749,  0.2020,  0.2590,  0.1246,  0.1102,  0.4739, -0.2913,
        -0.4194, -0.3596,  0.0198,  0.2413,  0.2227, -0.2646, -0.1045,  0.3989,
        -0.3113,  0.2203, -0.0652, -0.2465, -0.3643, -0.0831,  0.4424, -0.0888,
         0.3992,  0.3245,  0.0511,  0.4622,  0.4150,  0.0034, -0.4285,  0.4792,
        -0.3408, -0.1659, -0.0899,  0.4539, -0.2881,  0.3794,  0.1672, -0.1680,
        -0.1575, -0.0945,  0.2239,  0.4517, -0.4829, -0.1780,  0.4907, -0.4800,
        -0.0726,  0.1580,  0.3140, -0.2153,  0.3799, -0.2029, -0.0171, -0.0861,
        -0.3145,  0.4014,  0.4221, -0.1074], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 7, 5478275],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 301 / 4294967600 (0.0%)
Greatest absolute difference: 0.499267578125 at index (0, 15, 6, 6, 5478159) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 6, 5477971) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 7, 5478275]), dtype=torch.float16)
First 100 elements: tensor([ 0.1310, -0.3931,  0.0322, -0.3911, -0.1357,  0.4932,  0.2932,  0.4119,
         0.4348, -0.0060,  0.1897,  0.1038,  0.4673,  0.1840,  0.3127, -0.0638,
         0.2360,  0.1416,  0.4946,  0.3506,  0.3215, -0.1466,  0.1644, -0.1586,
        -0.4385, -0.4363, -0.4685,  0.4290, -0.2219, -0.1466, -0.1234,  0.4983,
        -0.4092,  0.3330,  0.3865, -0.1335,  0.4673,  0.0475,  0.2537, -0.3147,
        -0.4487,  0.3025,  0.2039,  0.3179,  0.0294, -0.3003,  0.3149,  0.1304,
         0.0137, -0.4749, -0.4690,  0.1144,  0.4641, -0.3379, -0.1115, -0.2766,
        -0.0847,  0.1152, -0.2932,  0.4299, -0.3818, -0.2964, -0.0934, -0.2213,
         0.2922, -0.3096,  0.2277, -0.4495, -0.3882, -0.3306,  0.2676, -0.4026,
        -0.1505,  0.1547, -0.0117,  0.3914,  0.1382,  0.3601,  0.0884, -0.1414,
         0.3826,  0.2346, -0.2947,  0.2561,  0.4580, -0.2744, -0.1145, -0.2874,
        -0.1232, -0.4077,  0.2228, -0.0258, -0.1220, -0.2429,  0.3430, -0.4661,
        -0.3767, -0.3806, -0.1609,  0.1663], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 7, 5478275]), dtype=torch.float16)
First 100 elements: tensor([ 0.1310, -0.3931,  0.0322, -0.3911, -0.1357,  0.4932,  0.2932,  0.4119,
         0.4348, -0.0060,  0.1897,  0.1038,  0.4673,  0.1840,  0.3127, -0.0638,
         0.2360,  0.1416,  0.4946,  0.3506,  0.3215, -0.1466,  0.1644, -0.1586,
        -0.4385, -0.4363, -0.4685,  0.4290, -0.2219, -0.1466, -0.1234,  0.4983,
        -0.4092,  0.3330,  0.3865, -0.1335,  0.4673,  0.0475,  0.2537, -0.3147,
        -0.4487,  0.3025,  0.2039,  0.3179,  0.0294, -0.3003,  0.3149,  0.1304,
         0.0137, -0.4749, -0.4690,  0.1144,  0.4641, -0.3379, -0.1115, -0.2766,
        -0.0847,  0.1152, -0.2932,  0.4299, -0.3818, -0.2964, -0.0934, -0.2213,
         0.2922, -0.3096,  0.2277, -0.4495, -0.3882, -0.3306,  0.2676, -0.4026,
        -0.1505,  0.1547, -0.0117,  0.3914,  0.1382,  0.3601,  0.0884, -0.1414,
         0.3826,  0.2346, -0.2947,  0.2561,  0.4580, -0.2744, -0.1145, -0.2874,
        -0.1232, -0.4077,  0.2228, -0.0258, -0.1220, -0.2429,  0.3430, -0.4661,
        -0.3767, -0.3806, -0.1609,  0.1663], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 16, 7, 7, 5478275],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 298 / 4294967600 (0.0%)
Greatest absolute difference: 0.499755859375 at index (0, 15, 6, 6, 5477992) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 15, 6, 6, 5477971) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 16, 7, 7, 5478275]), dtype=torch.float16)
First 100 elements: tensor([-0.1997,  0.1956,  0.3477,  0.4202,  0.2023, -0.3989, -0.1802, -0.4678,
        -0.4729,  0.4431,  0.1826, -0.2056,  0.4578,  0.4048, -0.0581,  0.1372,
         0.0411, -0.3713, -0.2776, -0.0376, -0.1948,  0.3347, -0.4343, -0.1622,
         0.0754, -0.0698,  0.1123,  0.3896,  0.3394,  0.0558, -0.2091,  0.0343,
        -0.2930, -0.4604, -0.3240, -0.1365, -0.3608, -0.2578, -0.3643,  0.3252,
         0.4026, -0.4956,  0.4624, -0.1652, -0.4543, -0.0351,  0.4492, -0.0583,
        -0.3572,  0.2324,  0.0683,  0.3806, -0.1403,  0.0890,  0.0649,  0.3877,
         0.0396,  0.4707, -0.2129,  0.3013,  0.4285,  0.3772, -0.1216,  0.2164,
         0.4087,  0.2910,  0.0967, -0.0064, -0.2915, -0.1097,  0.1685, -0.0682,
         0.1182, -0.3049, -0.0591,  0.4309, -0.4854, -0.0673,  0.0967, -0.4141,
        -0.0202,  0.3577, -0.2532,  0.4417,  0.1340, -0.2588,  0.2039,  0.2096,
        -0.4492,  0.0244, -0.2135, -0.0139,  0.1132, -0.3093, -0.0207, -0.2981,
         0.4646, -0.4636,  0.2292, -0.0020], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 16, 7, 7, 5478275]), dtype=torch.float16)
First 100 elements: tensor([-0.1997,  0.1956,  0.3477,  0.4202,  0.2023, -0.3989, -0.1802, -0.4678,
        -0.4729,  0.4431,  0.1826, -0.2056,  0.4578,  0.4048, -0.0581,  0.1372,
         0.0411, -0.3713, -0.2776, -0.0376, -0.1948,  0.3347, -0.4343, -0.1622,
         0.0754, -0.0698,  0.1123,  0.3896,  0.3394,  0.0558, -0.2091,  0.0343,
        -0.2930, -0.4604, -0.3240, -0.1365, -0.3608, -0.2578, -0.3643,  0.3252,
         0.4026, -0.4956,  0.4624, -0.1652, -0.4543, -0.0351,  0.4492, -0.0583,
        -0.3572,  0.2324,  0.0683,  0.3806, -0.1403,  0.0890,  0.0649,  0.3877,
         0.0396,  0.4707, -0.2129,  0.3013,  0.4285,  0.3772, -0.1216,  0.2164,
         0.4087,  0.2910,  0.0967, -0.0064, -0.2915, -0.1097,  0.1685, -0.0682,
         0.1182, -0.3049, -0.0591,  0.4309, -0.4854, -0.0673,  0.0967, -0.4141,
        -0.0202,  0.3577, -0.2532,  0.4417,  0.1340, -0.2588,  0.2039,  0.2096,
        -0.4492,  0.0244, -0.2135, -0.0139,  0.1132, -0.3093, -0.0207, -0.2981,
         0.4646, -0.4636,  0.2292, -0.0020], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 38044, 14, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70860 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 38043, 7, 15, 360) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 38043, 5, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 38044, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.4475,  0.2510,  0.3293, -0.1149, -0.2334, -0.2095,  0.0997, -0.1166,
         0.2578, -0.2473,  0.2754, -0.0746,  0.1375,  0.2261,  0.3254, -0.2476,
        -0.2500,  0.3787, -0.2478, -0.4812, -0.1559,  0.1628,  0.0575,  0.4690,
         0.0865, -0.3164, -0.3164,  0.2142,  0.1874, -0.2686, -0.2722, -0.1088,
        -0.3162, -0.3445,  0.1747,  0.1085,  0.4966,  0.3513, -0.2489,  0.0645,
         0.0690,  0.3630, -0.4990, -0.0540,  0.3979, -0.0529, -0.1587, -0.2771,
         0.1007, -0.1713,  0.4612,  0.2314, -0.2717,  0.4014,  0.3894, -0.4739,
        -0.4851, -0.2281,  0.4062,  0.1168, -0.3586, -0.3970,  0.1311, -0.3589,
        -0.0762,  0.3901, -0.3025, -0.3877,  0.3933,  0.3096, -0.4592, -0.1971,
        -0.2439,  0.1174,  0.3962,  0.4067,  0.2273,  0.4849,  0.2791, -0.3418,
        -0.0278, -0.1527, -0.1289,  0.4788,  0.0579, -0.0248, -0.4316, -0.1891,
         0.4082,  0.4836, -0.1506,  0.3550,  0.1449,  0.4448,  0.0795,  0.2469,
        -0.1816, -0.0490, -0.3726, -0.0368], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 38044, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.4475,  0.2510,  0.3293, -0.1149, -0.2334, -0.2095,  0.0997, -0.1166,
         0.2578, -0.2473,  0.2754, -0.0746,  0.1375,  0.2261,  0.3254, -0.2476,
        -0.2500,  0.3787, -0.2478, -0.4812, -0.1559,  0.1628,  0.0575,  0.4690,
         0.0865, -0.3164, -0.3164,  0.2142,  0.1874, -0.2686, -0.2722, -0.1088,
        -0.3162, -0.3445,  0.1747,  0.1085,  0.4966,  0.3513, -0.2489,  0.0645,
         0.0690,  0.3630, -0.4990, -0.0540,  0.3979, -0.0529, -0.1587, -0.2771,
         0.1007, -0.1713,  0.4612,  0.2314, -0.2717,  0.4014,  0.3894, -0.4739,
        -0.4851, -0.2281,  0.4062,  0.1168, -0.3586, -0.3970,  0.1311, -0.3589,
        -0.0762,  0.3901, -0.3025, -0.3877,  0.3933,  0.3096, -0.4592, -0.1971,
        -0.2439,  0.1174,  0.3962,  0.4067,  0.2273,  0.4849,  0.2791, -0.3418,
        -0.0278, -0.1527, -0.1289,  0.4788,  0.0579, -0.0248, -0.4316, -0.1891,
         0.4082,  0.4836, -0.1506,  0.3550,  0.1449,  0.4448,  0.0795,  0.2469,
        -0.1816, -0.0490, -0.3726, -0.0368], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 38044, 14, 21, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 71116 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 38043, 0, 0, 138) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 38043, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 38044, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.0958, -0.3896,  0.3357, -0.1530,  0.2883, -0.0835,  0.3254, -0.4070,
        -0.0732,  0.1680, -0.0793,  0.3486, -0.0839,  0.1915, -0.2695, -0.0252,
         0.1650,  0.2222,  0.0873,  0.2279, -0.0145,  0.0831,  0.4250, -0.0735,
        -0.0885,  0.1218,  0.2969, -0.3308, -0.3503, -0.1221, -0.1940, -0.1170,
         0.1609,  0.2494, -0.1046,  0.1525, -0.3420,  0.3120, -0.2488, -0.1639,
        -0.0771,  0.1357, -0.3184,  0.3147,  0.2250,  0.1508,  0.4097, -0.2084,
         0.3777, -0.2126,  0.3130, -0.0861, -0.1495,  0.2874,  0.4106,  0.2349,
         0.1154,  0.3992,  0.0679,  0.4641,  0.0087,  0.0490,  0.0078, -0.3306,
        -0.4197,  0.0036, -0.4297, -0.2837,  0.3071,  0.0212,  0.0643,  0.1907,
         0.2351, -0.1776, -0.1598, -0.3367, -0.3398, -0.2102,  0.3677,  0.1176,
        -0.2128, -0.2673,  0.4397,  0.0662,  0.1357, -0.3257,  0.4712, -0.3655,
        -0.4207, -0.4734, -0.4968, -0.1550, -0.1479, -0.4722,  0.0038, -0.4688,
        -0.3408, -0.2013,  0.4373,  0.1605], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 38044, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.0958, -0.3896,  0.3357, -0.1530,  0.2883, -0.0835,  0.3254, -0.4070,
        -0.0732,  0.1680, -0.0793,  0.3486, -0.0839,  0.1915, -0.2695, -0.0252,
         0.1650,  0.2222,  0.0873,  0.2279, -0.0145,  0.0831,  0.4250, -0.0735,
        -0.0885,  0.1218,  0.2969, -0.3308, -0.3503, -0.1221, -0.1940, -0.1170,
         0.1609,  0.2494, -0.1046,  0.1525, -0.3420,  0.3120, -0.2488, -0.1639,
        -0.0771,  0.1357, -0.3184,  0.3147,  0.2250,  0.1508,  0.4097, -0.2084,
         0.3777, -0.2126,  0.3130, -0.0861, -0.1495,  0.2874,  0.4106,  0.2349,
         0.1154,  0.3992,  0.0679,  0.4641,  0.0087,  0.0490,  0.0078, -0.3306,
        -0.4197,  0.0036, -0.4297, -0.2837,  0.3071,  0.0212,  0.0643,  0.1907,
         0.2351, -0.1776, -0.1598, -0.3367, -0.3398, -0.2102,  0.3677,  0.1176,
        -0.2128, -0.2673,  0.4397,  0.0662,  0.1357, -0.3257,  0.4712, -0.3655,
        -0.4207, -0.4734, -0.4968, -0.1550, -0.1479, -0.4722,  0.0038, -0.4688,
        -0.3408, -0.2013,  0.4373,  0.1605], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 38044, 21, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 62984 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 38043, 10, 4, 195) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 38043, 9, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 38044, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.0133,  0.4109,  0.3533, -0.2839, -0.3418,  0.4243,  0.0381, -0.3521,
         0.4380, -0.1387,  0.3005,  0.1252, -0.3765,  0.2092,  0.3906,  0.4944,
         0.2932,  0.3435, -0.3518, -0.3792, -0.0598,  0.4182, -0.0358, -0.1818,
         0.1849,  0.2324,  0.2285, -0.3621,  0.4067, -0.3923,  0.3735, -0.4150,
        -0.2568,  0.4739,  0.1302,  0.0694,  0.1434, -0.2654, -0.4460,  0.2839,
        -0.0208, -0.3513, -0.3384,  0.3376,  0.0146,  0.0471,  0.0585, -0.2322,
         0.0541, -0.1164,  0.4802, -0.2355,  0.0787,  0.3994, -0.4612, -0.4988,
        -0.3262, -0.1364, -0.1080, -0.3486, -0.3486, -0.3267, -0.2291,  0.0970,
        -0.1497,  0.3394, -0.4065, -0.3943,  0.4070, -0.0698, -0.0919, -0.4226,
        -0.3579,  0.1665, -0.2141, -0.2202,  0.3940, -0.2537, -0.2319, -0.2744,
         0.2047, -0.2988,  0.1290, -0.4045,  0.1930,  0.1165,  0.0817,  0.3638,
         0.1202, -0.2991, -0.4590,  0.4021, -0.1279, -0.4402, -0.1193, -0.1891,
         0.1091, -0.0585,  0.1516, -0.0256], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 38044, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.0133,  0.4109,  0.3533, -0.2839, -0.3418,  0.4243,  0.0381, -0.3521,
         0.4380, -0.1387,  0.3005,  0.1252, -0.3765,  0.2092,  0.3906,  0.4944,
         0.2932,  0.3435, -0.3518, -0.3792, -0.0598,  0.4182, -0.0358, -0.1818,
         0.1849,  0.2324,  0.2285, -0.3621,  0.4067, -0.3923,  0.3735, -0.4150,
        -0.2568,  0.4739,  0.1302,  0.0694,  0.1434, -0.2654, -0.4460,  0.2839,
        -0.0208, -0.3513, -0.3384,  0.3376,  0.0146,  0.0471,  0.0585, -0.2322,
         0.0541, -0.1164,  0.4802, -0.2355,  0.0787,  0.3994, -0.4612, -0.4988,
        -0.3262, -0.1364, -0.1080, -0.3486, -0.3486, -0.3267, -0.2291,  0.0970,
        -0.1497,  0.3394, -0.4065, -0.3943,  0.4070, -0.0698, -0.0919, -0.4226,
        -0.3579,  0.1665, -0.2141, -0.2202,  0.3940, -0.2537, -0.2319, -0.2744,
         0.2047, -0.2988,  0.1290, -0.4045,  0.1930,  0.1165,  0.0817,  0.3638,
         0.1202, -0.2991, -0.4590,  0.4021, -0.1279, -0.4402, -0.1193, -0.1891,
         0.1091, -0.0585,  0.1516, -0.0256], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 38044, 21, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 63249 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 38043, 1, 13, 216) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 38043, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 38044, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.3977,  0.4041,  0.3408,  0.2764, -0.3074,  0.3879,  0.0156,  0.2588,
        -0.2671,  0.0981, -0.2094, -0.2483,  0.0293, -0.4377, -0.0354,  0.3799,
        -0.1456, -0.1802,  0.4456, -0.3662, -0.3618,  0.4600, -0.0248,  0.2218,
        -0.4656,  0.3262,  0.4717,  0.1028,  0.0919,  0.2754,  0.4893, -0.2037,
        -0.4023, -0.0532,  0.4902,  0.0341,  0.2627,  0.3855,  0.2634,  0.1577,
        -0.3442, -0.0175, -0.1539,  0.4395,  0.3613,  0.1970, -0.0780,  0.0144,
        -0.4817,  0.1261, -0.2688, -0.3276, -0.4087, -0.1921, -0.3828, -0.3208,
        -0.0062, -0.2764,  0.3901, -0.2866,  0.1907, -0.2549, -0.0297,  0.1228,
         0.1130,  0.4792, -0.4836,  0.0983,  0.4463, -0.3882,  0.4546, -0.4333,
        -0.0781,  0.1432,  0.4502,  0.1415,  0.3606, -0.3984,  0.2866,  0.1030,
         0.4680,  0.4155,  0.3149,  0.0095,  0.1562,  0.3403, -0.4971, -0.0252,
        -0.0279,  0.1379,  0.2844,  0.0204, -0.3350,  0.2917,  0.2324,  0.4365,
         0.0589,  0.4443, -0.3416, -0.2539], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 38044, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.3977,  0.4041,  0.3408,  0.2764, -0.3074,  0.3879,  0.0156,  0.2588,
        -0.2671,  0.0981, -0.2094, -0.2483,  0.0293, -0.4377, -0.0354,  0.3799,
        -0.1456, -0.1802,  0.4456, -0.3662, -0.3618,  0.4600, -0.0248,  0.2218,
        -0.4656,  0.3262,  0.4717,  0.1028,  0.0919,  0.2754,  0.4893, -0.2037,
        -0.4023, -0.0532,  0.4902,  0.0341,  0.2627,  0.3855,  0.2634,  0.1577,
        -0.3442, -0.0175, -0.1539,  0.4395,  0.3613,  0.1970, -0.0780,  0.0144,
        -0.4817,  0.1261, -0.2688, -0.3276, -0.4087, -0.1921, -0.3828, -0.3208,
        -0.0062, -0.2764,  0.3901, -0.2866,  0.1907, -0.2549, -0.0297,  0.1228,
         0.1130,  0.4792, -0.4836,  0.0983,  0.4463, -0.3882,  0.4546, -0.4333,
        -0.0781,  0.1432,  0.4502,  0.1415,  0.3606, -0.3984,  0.2866,  0.1030,
         0.4680,  0.4155,  0.3149,  0.0095,  0.1562,  0.3403, -0.4971, -0.0252,
        -0.0279,  0.1379,  0.2844,  0.0204, -0.3350,  0.2917,  0.2324,  0.4365,
         0.0589,  0.4443, -0.3416, -0.2539], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 57066, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 62959 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 57065, 2, 8, 42) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 57065, 2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57066, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.0846, -0.2351, -0.4436,  0.2961, -0.3721, -0.4895, -0.3896,  0.0047,
         0.3240,  0.4402, -0.3008,  0.1904,  0.3936, -0.4917,  0.0684,  0.1600,
         0.2578, -0.4719, -0.4399,  0.1978, -0.3228,  0.4651, -0.4951, -0.1787,
         0.1146, -0.1943,  0.1370,  0.0546,  0.3909, -0.4336, -0.1353, -0.0034,
        -0.2141,  0.1201,  0.0893, -0.1667,  0.4143, -0.2284,  0.4604, -0.4695,
        -0.4485, -0.4272, -0.2223, -0.1639, -0.4880, -0.2981,  0.3960, -0.2145,
        -0.1181,  0.0237,  0.2109,  0.3342,  0.0092, -0.1697, -0.0430, -0.1947,
        -0.1469, -0.2507,  0.4275, -0.1812, -0.4814, -0.4055, -0.4954,  0.4583,
         0.0140, -0.2981, -0.3401,  0.3315, -0.3435,  0.4082, -0.4275,  0.1699,
        -0.1252, -0.0860, -0.0837,  0.3267,  0.3608,  0.3967,  0.0931,  0.1238,
        -0.4958, -0.1630,  0.1787,  0.2803, -0.1147,  0.1659,  0.4236,  0.2152,
        -0.1087,  0.2361,  0.2932, -0.1646, -0.2305,  0.0837,  0.3145,  0.1957,
         0.2639, -0.2856, -0.2048,  0.4897], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57066, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.0846, -0.2351, -0.4436,  0.2961, -0.3721, -0.4895, -0.3896,  0.0047,
         0.3240,  0.4402, -0.3008,  0.1904,  0.3936, -0.4917,  0.0684,  0.1600,
         0.2578, -0.4719, -0.4399,  0.1978, -0.3228,  0.4651, -0.4951, -0.1787,
         0.1146, -0.1943,  0.1370,  0.0546,  0.3909, -0.4336, -0.1353, -0.0034,
        -0.2141,  0.1201,  0.0893, -0.1667,  0.4143, -0.2284,  0.4604, -0.4695,
        -0.4485, -0.4272, -0.2223, -0.1639, -0.4880, -0.2981,  0.3960, -0.2145,
        -0.1181,  0.0237,  0.2109,  0.3342,  0.0092, -0.1697, -0.0430, -0.1947,
        -0.1469, -0.2507,  0.4275, -0.1812, -0.4814, -0.4055, -0.4954,  0.4583,
         0.0140, -0.2981, -0.3401,  0.3315, -0.3435,  0.4082, -0.4275,  0.1699,
        -0.1252, -0.0860, -0.0837,  0.3267,  0.3608,  0.3967,  0.0931,  0.1238,
        -0.4958, -0.1630,  0.1787,  0.2803, -0.1147,  0.1659,  0.4236,  0.2152,
        -0.1087,  0.2361,  0.2932, -0.1646, -0.2305,  0.0837,  0.3145,  0.1957,
         0.2639, -0.2856, -0.2048,  0.4897], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 57066, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 63230 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 57065, 0, 0, 156) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 57065, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57066, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 2.7808e-01, -3.8965e-01,  4.0192e-02,  1.1267e-01,  7.6599e-02,
        -3.2300e-01, -1.2323e-01, -3.8330e-01, -3.5840e-01, -2.7637e-01,
         4.3604e-01, -3.7817e-01,  3.3862e-01,  2.3438e-01, -1.3000e-01,
        -4.7632e-01, -1.4551e-01, -2.2925e-01,  8.5999e-02, -1.7029e-01,
         1.5979e-01, -3.2739e-01, -4.1626e-01, -1.1902e-01,  4.7925e-01,
         3.2544e-01,  3.1885e-01,  3.8037e-01, -2.5122e-01,  4.7412e-01,
        -9.2957e-02, -3.0640e-01,  1.4502e-01,  1.6760e-01, -2.6416e-01,
         2.8992e-02,  3.5693e-01,  1.2891e-01, -4.8535e-01,  2.3389e-01,
        -4.1797e-01, -1.4172e-01, -4.9365e-01,  3.1763e-01,  1.2146e-01,
        -4.5630e-01, -2.7295e-01,  4.2603e-01,  2.8174e-01,  3.1201e-01,
         3.1030e-01, -1.0971e-02,  1.0303e-01, -2.0715e-01,  4.1846e-01,
        -9.9945e-03, -3.2642e-01, -2.5903e-01,  1.9116e-01,  3.1592e-01,
         3.1885e-01,  1.3586e-01, -2.6855e-01,  2.0618e-01, -1.0071e-01,
        -3.6035e-01,  1.6956e-01,  1.0895e-01, -2.5220e-01,  4.1473e-02,
        -1.3623e-01, -2.9248e-01,  3.1396e-01,  4.9854e-01,  2.2388e-01,
        -4.9042e-02,  2.9053e-01,  1.4819e-01, -2.6260e-02,  1.5442e-01,
         1.6907e-01,  1.5495e-02, -4.5068e-01,  1.4624e-01, -3.4088e-02,
         3.8574e-01,  1.8982e-01, -8.2642e-02, -4.7632e-01, -1.8469e-01,
        -4.2822e-01, -9.1919e-02,  1.1871e-02,  3.9111e-01,  6.5063e-02,
        -6.7711e-03, -3.7231e-01,  4.2603e-01,  4.9114e-05, -9.8816e-02],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57066, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 2.7808e-01, -3.8965e-01,  4.0192e-02,  1.1267e-01,  7.6599e-02,
        -3.2300e-01, -1.2323e-01, -3.8330e-01, -3.5840e-01, -2.7637e-01,
         4.3604e-01, -3.7817e-01,  3.3862e-01,  2.3438e-01, -1.3000e-01,
        -4.7632e-01, -1.4551e-01, -2.2925e-01,  8.5999e-02, -1.7029e-01,
         1.5979e-01, -3.2739e-01, -4.1626e-01, -1.1902e-01,  4.7925e-01,
         3.2544e-01,  3.1885e-01,  3.8037e-01, -2.5122e-01,  4.7412e-01,
        -9.2957e-02, -3.0640e-01,  1.4502e-01,  1.6760e-01, -2.6416e-01,
         2.8992e-02,  3.5693e-01,  1.2891e-01, -4.8535e-01,  2.3389e-01,
        -4.1797e-01, -1.4172e-01, -4.9365e-01,  3.1763e-01,  1.2146e-01,
        -4.5630e-01, -2.7295e-01,  4.2603e-01,  2.8174e-01,  3.1201e-01,
         3.1030e-01, -1.0971e-02,  1.0303e-01, -2.0715e-01,  4.1846e-01,
        -9.9945e-03, -3.2642e-01, -2.5903e-01,  1.9116e-01,  3.1592e-01,
         3.1885e-01,  1.3586e-01, -2.6855e-01,  2.0618e-01, -1.0071e-01,
        -3.6035e-01,  1.6956e-01,  1.0895e-01, -2.5220e-01,  4.1473e-02,
        -1.3623e-01, -2.9248e-01,  3.1396e-01,  4.9854e-01,  2.2388e-01,
        -4.9042e-02,  2.9053e-01,  1.4819e-01, -2.6260e-02,  1.5442e-01,
         1.6907e-01,  1.5495e-02, -4.5068e-01,  1.4624e-01, -3.4088e-02,
         3.8574e-01,  1.8982e-01, -8.2642e-02, -4.7632e-01, -1.8469e-01,
        -4.2822e-01, -9.1919e-02,  1.1871e-02,  3.9111e-01,  6.5063e-02,
        -6.7711e-03, -3.7231e-01,  4.2603e-01,  4.9114e-05, -9.8816e-02],
       dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 57066, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 62968 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 57065, 2, 5, 331) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 57065, 2, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57066, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.2484, -0.3657,  0.2290,  0.4199,  0.3821, -0.3281,  0.0166, -0.3745,
        -0.2069, -0.1364, -0.3564,  0.1048, -0.2069,  0.2769, -0.2932, -0.2159,
         0.1815,  0.0855,  0.1194,  0.1154,  0.3718, -0.4236, -0.4387,  0.4817,
         0.2644,  0.4268, -0.1316, -0.2708, -0.2776,  0.2273, -0.1868, -0.3708,
        -0.3706, -0.3921,  0.2294, -0.2712,  0.3394, -0.3643, -0.0085, -0.4514,
         0.3276, -0.3489,  0.2930, -0.4802, -0.4351,  0.0424, -0.3442, -0.2290,
        -0.3599, -0.0031,  0.4158, -0.2329,  0.0314,  0.1065,  0.1844,  0.0684,
         0.3562, -0.3528,  0.1613,  0.1157, -0.2922,  0.0229,  0.2561,  0.0607,
         0.0911, -0.4578, -0.4634, -0.0586,  0.1899, -0.0927,  0.3601, -0.3398,
        -0.4487, -0.2354, -0.4817, -0.0441,  0.4409, -0.3125, -0.4272, -0.1051,
         0.0370, -0.3782, -0.1088,  0.0589, -0.3875,  0.2664,  0.2319,  0.4822,
         0.2925,  0.1313, -0.2339, -0.1542,  0.3772,  0.2192,  0.3040,  0.2433,
         0.1677, -0.2935, -0.2773,  0.3777], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57066, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.2484, -0.3657,  0.2290,  0.4199,  0.3821, -0.3281,  0.0166, -0.3745,
        -0.2069, -0.1364, -0.3564,  0.1048, -0.2069,  0.2769, -0.2932, -0.2159,
         0.1815,  0.0855,  0.1194,  0.1154,  0.3718, -0.4236, -0.4387,  0.4817,
         0.2644,  0.4268, -0.1316, -0.2708, -0.2776,  0.2273, -0.1868, -0.3708,
        -0.3706, -0.3921,  0.2294, -0.2712,  0.3394, -0.3643, -0.0085, -0.4514,
         0.3276, -0.3489,  0.2930, -0.4802, -0.4351,  0.0424, -0.3442, -0.2290,
        -0.3599, -0.0031,  0.4158, -0.2329,  0.0314,  0.1065,  0.1844,  0.0684,
         0.3562, -0.3528,  0.1613,  0.1157, -0.2922,  0.0229,  0.2561,  0.0607,
         0.0911, -0.4578, -0.4634, -0.0586,  0.1899, -0.0927,  0.3601, -0.3398,
        -0.4487, -0.2354, -0.4817, -0.0441,  0.4409, -0.3125, -0.4272, -0.1051,
         0.0370, -0.3782, -0.1088,  0.0589, -0.3875,  0.2664,  0.2319,  0.4822,
         0.2925,  0.1313, -0.2339, -0.1542,  0.3772,  0.2192,  0.3040,  0.2433,
         0.1677, -0.2935, -0.2773,  0.3777], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 57066, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 63048 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 57065, 0, 4, 312) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 57065, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57066, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.1062,  0.1472, -0.3853,  0.2527, -0.4849, -0.0526, -0.3953,  0.2549,
        -0.0285, -0.0804, -0.1364, -0.0345, -0.0380,  0.4861,  0.1238, -0.4482,
        -0.1329,  0.2703, -0.4829, -0.2312, -0.2023,  0.3530, -0.2964, -0.2935,
        -0.2230, -0.1559, -0.0821,  0.4004, -0.0901, -0.4265, -0.4424,  0.2391,
         0.3984,  0.3252, -0.2971, -0.2126,  0.2598,  0.3965, -0.3464,  0.2129,
         0.2327, -0.3464,  0.2169, -0.2375, -0.4719,  0.2289, -0.4065, -0.0631,
        -0.4224, -0.3462,  0.2485, -0.3210,  0.2942, -0.3398, -0.2087, -0.0151,
         0.4055,  0.2494,  0.3257, -0.0343,  0.0401, -0.1794, -0.2003,  0.3464,
         0.1609,  0.3042,  0.1859,  0.3811, -0.4231, -0.3289, -0.1990, -0.0128,
         0.0439, -0.1404, -0.2151, -0.3135, -0.0493,  0.2834, -0.1683, -0.3918,
         0.4409,  0.3042,  0.3862, -0.4653, -0.4834,  0.0575, -0.2078,  0.0081,
        -0.1656,  0.1158,  0.3274,  0.0605, -0.4072,  0.2766,  0.4236,  0.2544,
         0.1865,  0.0141, -0.1658, -0.0195], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57066, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.1062,  0.1472, -0.3853,  0.2527, -0.4849, -0.0526, -0.3953,  0.2549,
        -0.0285, -0.0804, -0.1364, -0.0345, -0.0380,  0.4861,  0.1238, -0.4482,
        -0.1329,  0.2703, -0.4829, -0.2312, -0.2023,  0.3530, -0.2964, -0.2935,
        -0.2230, -0.1559, -0.0821,  0.4004, -0.0901, -0.4265, -0.4424,  0.2391,
         0.3984,  0.3252, -0.2971, -0.2126,  0.2598,  0.3965, -0.3464,  0.2129,
         0.2327, -0.3464,  0.2169, -0.2375, -0.4719,  0.2289, -0.4065, -0.0631,
        -0.4224, -0.3462,  0.2485, -0.3210,  0.2942, -0.3398, -0.2087, -0.0151,
         0.4055,  0.2494,  0.3257, -0.0343,  0.0401, -0.1794, -0.2003,  0.3464,
         0.1609,  0.3042,  0.1859,  0.3811, -0.4231, -0.3289, -0.1990, -0.0128,
         0.0439, -0.1404, -0.2151, -0.3135, -0.0493,  0.2834, -0.1683, -0.3918,
         0.4409,  0.3042,  0.3862, -0.4653, -0.4834,  0.0575, -0.2078,  0.0081,
        -0.1656,  0.1158,  0.3274,  0.0605, -0.4072,  0.2766,  0.4236,  0.2544,
         0.1865,  0.0141, -0.1658, -0.0195], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 57066, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 49456 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 57065, 2, 4, 289) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 57065, 2, 4, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57066, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([ 3.6353e-01,  2.0764e-01, -1.1070e-02, -3.7988e-01,  1.2659e-01,
         4.2261e-01, -4.4458e-01, -2.7637e-01, -2.8833e-01, -4.7168e-01,
        -4.8462e-01,  3.7036e-01, -4.5654e-02,  2.9224e-01,  3.1348e-01,
         1.1429e-02, -2.5146e-01, -3.7231e-01, -4.8608e-01,  9.9373e-04,
        -2.7246e-01,  3.8037e-01,  8.9661e-02, -3.9136e-01, -4.8682e-01,
         4.8438e-01, -3.3032e-01,  3.8281e-01,  4.8120e-01,  1.6174e-01,
         4.9219e-01,  3.4448e-01,  2.5659e-01, -3.1079e-01, -2.1289e-01,
         2.3315e-01,  4.3335e-01,  4.8267e-01,  4.5630e-01, -4.5703e-01,
         3.5205e-01,  3.4277e-01, -3.5669e-01, -3.4302e-01, -1.7358e-01,
         2.8760e-01, -1.5503e-01, -3.8916e-01, -4.6356e-02, -9.6375e-02,
         4.5801e-01, -3.6987e-01,  2.8247e-01, -3.3813e-01,  3.4766e-01,
         4.7998e-01, -8.3679e-02,  2.2864e-01, -2.7319e-01, -4.2456e-01,
         1.2201e-01,  2.1069e-01,  1.2415e-01, -2.9248e-01,  2.9278e-04,
         4.1235e-01, -1.9690e-01, -3.8135e-01,  5.5969e-02,  4.9487e-01,
         3.7256e-01, -1.5808e-01,  3.8379e-01,  3.0322e-01, -2.2998e-01,
         4.9121e-01,  3.3911e-01,  1.5869e-01, -2.0782e-02,  2.9199e-01,
        -2.8320e-01,  2.1985e-01, -4.3701e-01, -8.6609e-02, -3.1665e-01,
         3.6377e-01,  4.5459e-01,  8.5876e-02,  9.4177e-02, -9.8267e-02,
         4.6533e-01, -2.7756e-02,  8.9600e-02, -3.4888e-01, -4.4189e-01,
         9.8953e-03,  3.4485e-02,  3.3936e-01,  1.2573e-01, -2.1692e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57066, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([ 3.6353e-01,  2.0764e-01, -1.1070e-02, -3.7988e-01,  1.2659e-01,
         4.2261e-01, -4.4458e-01, -2.7637e-01, -2.8833e-01, -4.7168e-01,
        -4.8462e-01,  3.7036e-01, -4.5654e-02,  2.9224e-01,  3.1348e-01,
         1.1429e-02, -2.5146e-01, -3.7231e-01, -4.8608e-01,  9.9373e-04,
        -2.7246e-01,  3.8037e-01,  8.9661e-02, -3.9136e-01, -4.8682e-01,
         4.8438e-01, -3.3032e-01,  3.8281e-01,  4.8120e-01,  1.6174e-01,
         4.9219e-01,  3.4448e-01,  2.5659e-01, -3.1079e-01, -2.1289e-01,
         2.3315e-01,  4.3335e-01,  4.8267e-01,  4.5630e-01, -4.5703e-01,
         3.5205e-01,  3.4277e-01, -3.5669e-01, -3.4302e-01, -1.7358e-01,
         2.8760e-01, -1.5503e-01, -3.8916e-01, -4.6356e-02, -9.6375e-02,
         4.5801e-01, -3.6987e-01,  2.8247e-01, -3.3813e-01,  3.4766e-01,
         4.7998e-01, -8.3679e-02,  2.2864e-01, -2.7319e-01, -4.2456e-01,
         1.2201e-01,  2.1069e-01,  1.2415e-01, -2.9248e-01,  2.9278e-04,
         4.1235e-01, -1.9690e-01, -3.8135e-01,  5.5969e-02,  4.9487e-01,
         3.7256e-01, -1.5808e-01,  3.8379e-01,  3.0322e-01, -2.2998e-01,
         4.9121e-01,  3.3911e-01,  1.5869e-01, -2.0782e-02,  2.9199e-01,
        -2.8320e-01,  2.1985e-01, -4.3701e-01, -8.6609e-02, -3.1665e-01,
         3.6377e-01,  4.5459e-01,  8.5876e-02,  9.4177e-02, -9.8267e-02,
         4.6533e-01, -2.7756e-02,  8.9600e-02, -3.4888e-01, -4.4189e-01,
         9.8953e-03,  3.4485e-02,  3.3936e-01,  1.2573e-01, -2.1692e-01],
       dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1, 57066, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 49472 / 4295015424 (0.0%)
Greatest absolute difference: 0.5 at index (0, 57065, 2, 1, 579) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 57065, 2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57066, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2869, -0.0952,  0.1539, -0.4829,  0.3691, -0.2468, -0.3423, -0.2122,
        -0.4185, -0.1149,  0.2876,  0.2238,  0.2913,  0.3689,  0.3875,  0.0065,
        -0.1931, -0.1294, -0.2764, -0.2585, -0.2805,  0.4375,  0.1677,  0.2435,
         0.0355, -0.1338,  0.4673,  0.4954, -0.4099,  0.4102,  0.4365,  0.4690,
         0.3184, -0.1554,  0.4319, -0.2400,  0.4395,  0.4402, -0.2620, -0.1821,
        -0.0812,  0.3291,  0.1654,  0.4133,  0.4651, -0.4182,  0.2612, -0.4204,
        -0.1412, -0.2766,  0.3574,  0.1581,  0.2361,  0.2817,  0.1178, -0.0738,
        -0.2238,  0.4680,  0.2607, -0.1738, -0.2450, -0.3633,  0.1509,  0.2688,
         0.4507,  0.4995,  0.2061,  0.1504,  0.3501,  0.2019, -0.4397, -0.1956,
        -0.2744,  0.4954,  0.3359, -0.2078, -0.4580,  0.1057, -0.2822,  0.4792,
        -0.2283, -0.1089,  0.0984,  0.4265,  0.1318,  0.0632,  0.1057, -0.3394,
         0.2114,  0.4604, -0.1489,  0.0704, -0.1743, -0.4250,  0.2198, -0.3428,
         0.3674,  0.4565,  0.0188, -0.0094], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57066, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2869, -0.0952,  0.1539, -0.4829,  0.3691, -0.2468, -0.3423, -0.2122,
        -0.4185, -0.1149,  0.2876,  0.2238,  0.2913,  0.3689,  0.3875,  0.0065,
        -0.1931, -0.1294, -0.2764, -0.2585, -0.2805,  0.4375,  0.1677,  0.2435,
         0.0355, -0.1338,  0.4673,  0.4954, -0.4099,  0.4102,  0.4365,  0.4690,
         0.3184, -0.1554,  0.4319, -0.2400,  0.4395,  0.4402, -0.2620, -0.1821,
        -0.0812,  0.3291,  0.1654,  0.4133,  0.4651, -0.4182,  0.2612, -0.4204,
        -0.1412, -0.2766,  0.3574,  0.1581,  0.2361,  0.2817,  0.1178, -0.0738,
        -0.2238,  0.4680,  0.2607, -0.1738, -0.2450, -0.3633,  0.1509,  0.2688,
         0.4507,  0.4995,  0.2061,  0.1504,  0.3501,  0.2019, -0.4397, -0.1956,
        -0.2744,  0.4954,  0.3359, -0.2078, -0.4580,  0.1057, -0.2822,  0.4792,
        -0.2283, -0.1089,  0.0984,  0.4265,  0.1318,  0.0632,  0.1057, -0.3394,
         0.2114,  0.4604, -0.1489,  0.0704, -0.1743, -0.4250,  0.2198, -0.3428,
         0.3674,  0.4565,  0.0188, -0.0094], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1431655766, 3],"float16"), shifts=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4294967298 (0.0%)
Greatest absolute difference: 0.4228515625 at index (1431655765, 2) (up to 0.01 allowed)
Greatest relative difference: inf at index (1431655765, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.4607,  0.3699, -0.2269, -0.1854,  0.3345, -0.3870,  0.0497,  0.4163,
        -0.1974,  0.0792, -0.3066,  0.3157,  0.0728, -0.2927,  0.2666, -0.2125,
         0.2102, -0.1733,  0.4512, -0.3101, -0.4028, -0.3979, -0.3625,  0.2330,
        -0.2986, -0.0068,  0.0744, -0.4385,  0.1936,  0.1602,  0.0226,  0.4536,
         0.2783, -0.3987, -0.2932, -0.0365,  0.3840, -0.2019, -0.2346,  0.4097,
        -0.3838, -0.1499, -0.2571,  0.3962, -0.3154,  0.4153,  0.1401,  0.4424,
         0.2214,  0.4548,  0.1503,  0.4768, -0.1877, -0.0750,  0.4187,  0.4954,
         0.0781, -0.4465,  0.4741, -0.3638,  0.2323, -0.0024, -0.3643,  0.2068,
        -0.1107,  0.0452, -0.4409,  0.1009,  0.4104, -0.3843,  0.1898,  0.1490,
         0.0329, -0.4661, -0.1521, -0.1292, -0.1567,  0.2096, -0.1080,  0.4155,
         0.1392,  0.4990, -0.4441, -0.1222, -0.2233, -0.2712, -0.2837,  0.4504,
         0.2384,  0.4294,  0.1912,  0.4814,  0.4180, -0.4946,  0.0836,  0.1610,
        -0.3967,  0.0663, -0.2375,  0.4961], dtype=torch.float16)
DESIRED: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([-0.4607,  0.3699, -0.2269, -0.1854,  0.3345, -0.3870,  0.0497,  0.4163,
        -0.1974,  0.0792, -0.3066,  0.3157,  0.0728, -0.2927,  0.2666, -0.2125,
         0.2102, -0.1733,  0.4512, -0.3101, -0.4028, -0.3979, -0.3625,  0.2330,
        -0.2986, -0.0068,  0.0744, -0.4385,  0.1936,  0.1602,  0.0226,  0.4536,
         0.2783, -0.3987, -0.2932, -0.0365,  0.3840, -0.2019, -0.2346,  0.4097,
        -0.3838, -0.1499, -0.2571,  0.3962, -0.3154,  0.4153,  0.1401,  0.4424,
         0.2214,  0.4548,  0.1503,  0.4768, -0.1877, -0.0750,  0.4187,  0.4954,
         0.0781, -0.4465,  0.4741, -0.3638,  0.2323, -0.0024, -0.3643,  0.2068,
        -0.1107,  0.0452, -0.4409,  0.1009,  0.4104, -0.3843,  0.1898,  0.1490,
         0.0329, -0.4661, -0.1521, -0.1292, -0.1567,  0.2096, -0.1080,  0.4155,
         0.1392,  0.4990, -0.4441, -0.1222, -0.2233, -0.2712, -0.2837,  0.4504,
         0.2384,  0.4294,  0.1912,  0.4814,  0.4180, -0.4946,  0.0836,  0.1610,
        -0.3967,  0.0663, -0.2375,  0.4961], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([1431655766, 3],"float16"), shifts=1, axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4294967298 (0.0%)
Greatest absolute difference: 0.283203125 at index (1431655765, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1431655765, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.4270,  0.2009, -0.1508, -0.0221, -0.3667,  0.0226,  0.4629, -0.3552,
        -0.0252, -0.0643,  0.0859, -0.2419,  0.0403,  0.4661, -0.2522,  0.2395,
        -0.1242,  0.3604, -0.1389,  0.3027, -0.2167, -0.2379, -0.0757,  0.1942,
         0.2883, -0.2915, -0.2834, -0.2461, -0.4736,  0.4119, -0.3450,  0.1111,
        -0.1158,  0.0490, -0.0210,  0.3735, -0.1349,  0.2054,  0.3035, -0.2542,
        -0.2678, -0.1190, -0.4856,  0.4014,  0.3108, -0.2108, -0.4038, -0.1470,
        -0.2566,  0.4888, -0.1223, -0.1626,  0.2061,  0.0019,  0.0507,  0.0301,
        -0.1732,  0.1625,  0.2173, -0.3735, -0.4424,  0.2230,  0.0999,  0.4062,
        -0.2737,  0.2673, -0.4617, -0.4829, -0.3074, -0.3938,  0.3987, -0.1317,
         0.4421,  0.2766, -0.4866, -0.2264, -0.0779, -0.0275,  0.2959, -0.1133,
         0.4824, -0.1815,  0.3098,  0.4504,  0.0066,  0.0215, -0.0444,  0.0851,
        -0.4021,  0.4902,  0.4539,  0.1671,  0.3789,  0.4890, -0.3145, -0.4634,
         0.3352,  0.0643,  0.3525,  0.2822], dtype=torch.float16)
DESIRED: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.4270,  0.2009, -0.1508, -0.0221, -0.3667,  0.0226,  0.4629, -0.3552,
        -0.0252, -0.0643,  0.0859, -0.2419,  0.0403,  0.4661, -0.2522,  0.2395,
        -0.1242,  0.3604, -0.1389,  0.3027, -0.2167, -0.2379, -0.0757,  0.1942,
         0.2883, -0.2915, -0.2834, -0.2461, -0.4736,  0.4119, -0.3450,  0.1111,
        -0.1158,  0.0490, -0.0210,  0.3735, -0.1349,  0.2054,  0.3035, -0.2542,
        -0.2678, -0.1190, -0.4856,  0.4014,  0.3108, -0.2108, -0.4038, -0.1470,
        -0.2566,  0.4888, -0.1223, -0.1626,  0.2061,  0.0019,  0.0507,  0.0301,
        -0.1732,  0.1625,  0.2173, -0.3735, -0.4424,  0.2230,  0.0999,  0.4062,
        -0.2737,  0.2673, -0.4617, -0.4829, -0.3074, -0.3938,  0.3987, -0.1317,
         0.4421,  0.2766, -0.4866, -0.2264, -0.0779, -0.0275,  0.2959, -0.1133,
         0.4824, -0.1815,  0.3098,  0.4504,  0.0066,  0.0215, -0.0444,  0.0851,
        -0.4021,  0.4902,  0.4539,  0.1671,  0.3789,  0.4890, -0.3145, -0.4634,
         0.3352,  0.0643,  0.3525,  0.2822], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([2378, 16, 14, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 513268 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (2377, 11, 5, 6, 166) (up to 0.01 allowed)
Greatest relative difference: inf at index (2377, 11, 5, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2378, 16, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.4023, -0.3252,  0.3503,  0.3696,  0.4199, -0.1754,  0.4473, -0.1787,
        -0.1166, -0.2380,  0.1354,  0.2556, -0.1722, -0.4619, -0.3477,  0.3323,
        -0.3340,  0.4570,  0.0188,  0.0521,  0.3018,  0.3425, -0.0492,  0.3030,
        -0.0906, -0.0080, -0.1796, -0.2983,  0.3628, -0.1483,  0.4797,  0.4260,
         0.4475,  0.2766,  0.4287, -0.4775, -0.4890,  0.4746, -0.0735, -0.1421,
         0.4692,  0.0509, -0.2312, -0.0671,  0.1216,  0.2886,  0.1804,  0.2357,
        -0.0299,  0.3167, -0.4253, -0.2942, -0.3025,  0.1357, -0.0809,  0.3733,
        -0.3755,  0.4780,  0.3691,  0.0402,  0.1910, -0.0485, -0.4363, -0.2419,
         0.1440,  0.2856, -0.1428, -0.1350,  0.2568,  0.0333,  0.4048, -0.2515,
         0.4482,  0.3467, -0.3542, -0.0941, -0.0397, -0.4021,  0.2201, -0.1493,
        -0.1841, -0.2759, -0.4517, -0.0712,  0.3484, -0.0252,  0.4475, -0.4475,
        -0.0668, -0.4509, -0.0851,  0.3511, -0.0607, -0.4338, -0.1560,  0.3662,
         0.0094, -0.4407, -0.4590,  0.2991], dtype=torch.float16)
DESIRED: (shape=torch.Size([2378, 16, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.4023, -0.3252,  0.3503,  0.3696,  0.4199, -0.1754,  0.4473, -0.1787,
        -0.1166, -0.2380,  0.1354,  0.2556, -0.1722, -0.4619, -0.3477,  0.3323,
        -0.3340,  0.4570,  0.0188,  0.0521,  0.3018,  0.3425, -0.0492,  0.3030,
        -0.0906, -0.0080, -0.1796, -0.2983,  0.3628, -0.1483,  0.4797,  0.4260,
         0.4475,  0.2766,  0.4287, -0.4775, -0.4890,  0.4746, -0.0735, -0.1421,
         0.4692,  0.0509, -0.2312, -0.0671,  0.1216,  0.2886,  0.1804,  0.2357,
        -0.0299,  0.3167, -0.4253, -0.2942, -0.3025,  0.1357, -0.0809,  0.3733,
        -0.3755,  0.4780,  0.3691,  0.0402,  0.1910, -0.0485, -0.4363, -0.2419,
         0.1440,  0.2856, -0.1428, -0.1350,  0.2568,  0.0333,  0.4048, -0.2515,
         0.4482,  0.3467, -0.3542, -0.0941, -0.0397, -0.4021,  0.2201, -0.1493,
        -0.1841, -0.2759, -0.4517, -0.0712,  0.3484, -0.0252,  0.4475, -0.4475,
        -0.0668, -0.4509, -0.0851,  0.3511, -0.0607, -0.4338, -0.1560,  0.3662,
         0.0094, -0.4407, -0.4590,  0.2991], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([2378, 16, 14, 21, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 513779 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (2377, 11, 0, 0, 138) (up to 0.01 allowed)
Greatest relative difference: inf at index (2377, 11, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2378, 16, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.3828, -0.0635, -0.2925, -0.2717,  0.2573,  0.4875, -0.1598, -0.1049,
         0.0842, -0.0463, -0.2739,  0.1012,  0.0098,  0.2418, -0.3784,  0.3838,
        -0.1863, -0.3042,  0.3372,  0.3616,  0.4197,  0.0435, -0.1029,  0.0901,
        -0.1761, -0.4895, -0.0620,  0.0686,  0.4678, -0.2783, -0.0952, -0.2981,
        -0.0528,  0.0726,  0.4080,  0.1677,  0.3992, -0.1903,  0.3420,  0.1353,
         0.4282,  0.2512, -0.4109, -0.4802,  0.3022, -0.3914, -0.3247, -0.2700,
        -0.2947, -0.3425, -0.1748, -0.4458, -0.2195,  0.3652, -0.3662,  0.0649,
        -0.2185,  0.2004,  0.4370,  0.0500, -0.3511, -0.3416,  0.2063, -0.3887,
        -0.4033,  0.0198,  0.0816,  0.2133,  0.0721, -0.0092, -0.0126,  0.1284,
         0.3665,  0.1100,  0.4626, -0.0707,  0.1150,  0.1699,  0.4031, -0.1152,
        -0.1102, -0.4436, -0.3972, -0.2949, -0.3464,  0.3633, -0.3347,  0.0803,
        -0.3198, -0.3098,  0.1833, -0.4287, -0.0035,  0.0338,  0.1292, -0.2908,
        -0.4773, -0.0051,  0.2118, -0.1170], dtype=torch.float16)
DESIRED: (shape=torch.Size([2378, 16, 14, 21, 384]), dtype=torch.float16)
First 100 elements: tensor([-0.3828, -0.0635, -0.2925, -0.2717,  0.2573,  0.4875, -0.1598, -0.1049,
         0.0842, -0.0463, -0.2739,  0.1012,  0.0098,  0.2418, -0.3784,  0.3838,
        -0.1863, -0.3042,  0.3372,  0.3616,  0.4197,  0.0435, -0.1029,  0.0901,
        -0.1761, -0.4895, -0.0620,  0.0686,  0.4678, -0.2783, -0.0952, -0.2981,
        -0.0528,  0.0726,  0.4080,  0.1677,  0.3992, -0.1903,  0.3420,  0.1353,
         0.4282,  0.2512, -0.4109, -0.4802,  0.3022, -0.3914, -0.3247, -0.2700,
        -0.2947, -0.3425, -0.1748, -0.4458, -0.2195,  0.3652, -0.3662,  0.0649,
        -0.2185,  0.2004,  0.4370,  0.0500, -0.3511, -0.3416,  0.2063, -0.3887,
        -0.4033,  0.0198,  0.0816,  0.2133,  0.0721, -0.0092, -0.0126,  0.1284,
         0.3665,  0.1100,  0.4626, -0.0707,  0.1150,  0.1699,  0.4031, -0.1152,
        -0.1102, -0.4436, -0.3972, -0.2949, -0.3464,  0.3633, -0.3347,  0.0803,
        -0.3198, -0.3098,  0.1833, -0.4287, -0.0035,  0.0338,  0.1292, -0.2908,
        -0.4773, -0.0051,  0.2118, -0.1170], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([2378, 16, 21, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505661 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (2377, 11, 10, 6, 58) (up to 0.01 allowed)
Greatest relative difference: inf at index (2377, 11, 9, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2378, 16, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.0194,  0.4888,  0.4612,  0.0468, -0.1453, -0.1351, -0.1622,  0.4707,
         0.4631, -0.3132,  0.1514,  0.4968, -0.3567,  0.0768,  0.4441,  0.0953,
        -0.4143, -0.1632, -0.1362,  0.1649,  0.4048, -0.2017, -0.1766, -0.0191,
         0.2063,  0.3201, -0.0432,  0.0576, -0.4451, -0.4033,  0.1516, -0.0347,
        -0.4126,  0.2181, -0.4885, -0.1436, -0.3774, -0.1318, -0.1785,  0.0969,
         0.2009,  0.4460,  0.1118, -0.2722, -0.2878,  0.3660,  0.4858, -0.2791,
        -0.4517, -0.0125,  0.4265,  0.1687,  0.1075,  0.1650, -0.4783,  0.2240,
        -0.0883,  0.2028, -0.0319, -0.0414, -0.4097, -0.1037, -0.0429,  0.4221,
         0.4832, -0.3191,  0.1270, -0.3091, -0.1981,  0.4890,  0.4089, -0.2378,
        -0.1648, -0.1758,  0.4700,  0.1576,  0.0112, -0.2583,  0.0023, -0.3186,
        -0.0826, -0.2058, -0.1947,  0.3242, -0.0446,  0.3213, -0.3574,  0.1511,
        -0.2542,  0.4312, -0.0080, -0.4280, -0.3767, -0.3875, -0.2327, -0.1061,
        -0.2791, -0.1109,  0.2181, -0.4785], dtype=torch.float16)
DESIRED: (shape=torch.Size([2378, 16, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.0194,  0.4888,  0.4612,  0.0468, -0.1453, -0.1351, -0.1622,  0.4707,
         0.4631, -0.3132,  0.1514,  0.4968, -0.3567,  0.0768,  0.4441,  0.0953,
        -0.4143, -0.1632, -0.1362,  0.1649,  0.4048, -0.2017, -0.1766, -0.0191,
         0.2063,  0.3201, -0.0432,  0.0576, -0.4451, -0.4033,  0.1516, -0.0347,
        -0.4126,  0.2181, -0.4885, -0.1436, -0.3774, -0.1318, -0.1785,  0.0969,
         0.2009,  0.4460,  0.1118, -0.2722, -0.2878,  0.3660,  0.4858, -0.2791,
        -0.4517, -0.0125,  0.4265,  0.1687,  0.1075,  0.1650, -0.4783,  0.2240,
        -0.0883,  0.2028, -0.0319, -0.0414, -0.4097, -0.1037, -0.0429,  0.4221,
         0.4832, -0.3191,  0.1270, -0.3091, -0.1981,  0.4890,  0.4089, -0.2378,
        -0.1648, -0.1758,  0.4700,  0.1576,  0.0112, -0.2583,  0.0023, -0.3186,
        -0.0826, -0.2058, -0.1947,  0.3242, -0.0446,  0.3213, -0.3574,  0.1511,
        -0.2542,  0.4312, -0.0080, -0.4280, -0.3767, -0.3875, -0.2327, -0.1061,
        -0.2791, -0.1109,  0.2181, -0.4785], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([2378, 16, 21, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505805 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (2377, 11, 1, 13, 216) (up to 0.01 allowed)
Greatest relative difference: inf at index (2377, 11, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2378, 16, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.2681, -0.3933, -0.2559,  0.1909,  0.0172,  0.3540, -0.3699, -0.3809,
         0.2856,  0.1572, -0.4607, -0.4111, -0.4109, -0.2457, -0.3120, -0.2644,
         0.1243,  0.4839,  0.0559, -0.2761, -0.0030, -0.3425, -0.4893,  0.3320,
         0.0535, -0.0943, -0.4739,  0.1340, -0.1630, -0.1443, -0.3240, -0.2112,
        -0.1543, -0.2000, -0.2067, -0.4099, -0.2412,  0.0776,  0.1418,  0.4675,
        -0.1229, -0.4568, -0.1149, -0.2803,  0.3914,  0.1062,  0.3267, -0.4668,
        -0.2423,  0.3853,  0.2247, -0.2150,  0.0208, -0.4915,  0.4565,  0.0330,
         0.3447,  0.1820, -0.4109, -0.2041,  0.1747,  0.2219,  0.4219,  0.2749,
         0.0950,  0.3418,  0.0533,  0.3645,  0.3372, -0.1570, -0.3770,  0.0346,
        -0.1172,  0.1570, -0.0039, -0.2283, -0.0242, -0.2180, -0.2244, -0.3750,
         0.1283, -0.0924, -0.2795, -0.0115,  0.1302, -0.3728, -0.3691, -0.0034,
        -0.4197,  0.2078,  0.1438,  0.2496,  0.1808,  0.0500, -0.0215,  0.4199,
        -0.0992,  0.0343,  0.3870,  0.4260], dtype=torch.float16)
DESIRED: (shape=torch.Size([2378, 16, 21, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.2681, -0.3933, -0.2559,  0.1909,  0.0172,  0.3540, -0.3699, -0.3809,
         0.2856,  0.1572, -0.4607, -0.4111, -0.4109, -0.2457, -0.3120, -0.2644,
         0.1243,  0.4839,  0.0559, -0.2761, -0.0030, -0.3425, -0.4893,  0.3320,
         0.0535, -0.0943, -0.4739,  0.1340, -0.1630, -0.1443, -0.3240, -0.2112,
        -0.1543, -0.2000, -0.2067, -0.4099, -0.2412,  0.0776,  0.1418,  0.4675,
        -0.1229, -0.4568, -0.1149, -0.2803,  0.3914,  0.1062,  0.3267, -0.4668,
        -0.2423,  0.3853,  0.2247, -0.2150,  0.0208, -0.4915,  0.4565,  0.0330,
         0.3447,  0.1820, -0.4109, -0.2041,  0.1747,  0.2219,  0.4219,  0.2749,
         0.0950,  0.3418,  0.0533,  0.3645,  0.3372, -0.1570, -0.3770,  0.0346,
        -0.1172,  0.1570, -0.0039, -0.2283, -0.0242, -0.2180, -0.2244, -0.3750,
         0.1283, -0.0924, -0.2795, -0.0115,  0.1302, -0.3728, -0.3691, -0.0034,
        -0.4197,  0.2078,  0.1438,  0.2496,  0.1808,  0.0500, -0.0215,  0.4199,
        -0.0992,  0.0343,  0.3870,  0.4260], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3, 1431655766],"float16"), shifts=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4294967298 (0.0%)
Greatest absolute difference: 0.4228515625 at index (2, 1431655765) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1431655764) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.4607,  0.3699, -0.2269, -0.1854,  0.3345, -0.3870,  0.0497,  0.4163,
        -0.1974,  0.0792, -0.3066,  0.3157,  0.0728, -0.2927,  0.2666, -0.2125,
         0.2102, -0.1733,  0.4512, -0.3101, -0.4028, -0.3979, -0.3625,  0.2330,
        -0.2986, -0.0068,  0.0744, -0.4385,  0.1936,  0.1602,  0.0226,  0.4536,
         0.2783, -0.3987, -0.2932, -0.0365,  0.3840, -0.2019, -0.2346,  0.4097,
        -0.3838, -0.1499, -0.2571,  0.3962, -0.3154,  0.4153,  0.1401,  0.4424,
         0.2214,  0.4548,  0.1503,  0.4768, -0.1877, -0.0750,  0.4187,  0.4954,
         0.0781, -0.4465,  0.4741, -0.3638,  0.2323, -0.0024, -0.3643,  0.2068,
        -0.1107,  0.0452, -0.4409,  0.1009,  0.4104, -0.3843,  0.1898,  0.1490,
         0.0329, -0.4661, -0.1521, -0.1292, -0.1567,  0.2096, -0.1080,  0.4155,
         0.1392,  0.4990, -0.4441, -0.1222, -0.2233, -0.2712, -0.2837,  0.4504,
         0.2384,  0.4294,  0.1912,  0.4814,  0.4180, -0.4946,  0.0836,  0.1610,
        -0.3967,  0.0663, -0.2375,  0.4961], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.4607,  0.3699, -0.2269, -0.1854,  0.3345, -0.3870,  0.0497,  0.4163,
        -0.1974,  0.0792, -0.3066,  0.3157,  0.0728, -0.2927,  0.2666, -0.2125,
         0.2102, -0.1733,  0.4512, -0.3101, -0.4028, -0.3979, -0.3625,  0.2330,
        -0.2986, -0.0068,  0.0744, -0.4385,  0.1936,  0.1602,  0.0226,  0.4536,
         0.2783, -0.3987, -0.2932, -0.0365,  0.3840, -0.2019, -0.2346,  0.4097,
        -0.3838, -0.1499, -0.2571,  0.3962, -0.3154,  0.4153,  0.1401,  0.4424,
         0.2214,  0.4548,  0.1503,  0.4768, -0.1877, -0.0750,  0.4187,  0.4954,
         0.0781, -0.4465,  0.4741, -0.3638,  0.2323, -0.0024, -0.3643,  0.2068,
        -0.1107,  0.0452, -0.4409,  0.1009,  0.4104, -0.3843,  0.1898,  0.1490,
         0.0329, -0.4661, -0.1521, -0.1292, -0.1567,  0.2096, -0.1080,  0.4155,
         0.1392,  0.4990, -0.4441, -0.1222, -0.2233, -0.2712, -0.2837,  0.4504,
         0.2384,  0.4294,  0.1912,  0.4814,  0.4180, -0.4946,  0.0836,  0.1610,
        -0.3967,  0.0663, -0.2375,  0.4961], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3, 1431655766],"float16"), shifts=1, axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4294967298 (0.0%)
Greatest absolute difference: 0.270751953125 at index (2, 1431655765) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1431655764) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.2299,  0.2778, -0.4250,  0.0612, -0.2498,  0.4282,  0.4028,  0.2896,
        -0.1748,  0.2058, -0.3550,  0.0525, -0.3413, -0.2119, -0.3005,  0.4985,
        -0.0864,  0.3052,  0.4600,  0.2625, -0.4397,  0.1346, -0.1064, -0.2262,
        -0.2329, -0.1378,  0.4797,  0.3062,  0.1096,  0.4458,  0.3215, -0.3718,
         0.4431, -0.0412,  0.2815,  0.4482, -0.4927,  0.1764, -0.2371,  0.0963,
         0.2874,  0.0123, -0.4290,  0.4529,  0.4211,  0.4888, -0.1053, -0.4656,
        -0.2981,  0.2139, -0.3762, -0.3662,  0.2007, -0.0957,  0.2949, -0.1456,
         0.0041,  0.0262, -0.3936, -0.3154, -0.1827,  0.1225, -0.1399, -0.1605,
        -0.3367,  0.3940, -0.0471, -0.1653,  0.1238,  0.0191,  0.2449, -0.4844,
         0.1527,  0.2369,  0.2515, -0.0140,  0.0076,  0.2205,  0.4590, -0.2854,
        -0.1514, -0.2439,  0.0653,  0.2686,  0.3896, -0.2720,  0.0565, -0.1120,
        -0.2832, -0.2610, -0.1423,  0.3918, -0.0950,  0.0967,  0.3396,  0.2172,
        -0.0043, -0.3579, -0.4253, -0.2069], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.2299,  0.2778, -0.4250,  0.0612, -0.2498,  0.4282,  0.4028,  0.2896,
        -0.1748,  0.2058, -0.3550,  0.0525, -0.3413, -0.2119, -0.3005,  0.4985,
        -0.0864,  0.3052,  0.4600,  0.2625, -0.4397,  0.1346, -0.1064, -0.2262,
        -0.2329, -0.1378,  0.4797,  0.3062,  0.1096,  0.4458,  0.3215, -0.3718,
         0.4431, -0.0412,  0.2815,  0.4482, -0.4927,  0.1764, -0.2371,  0.0963,
         0.2874,  0.0123, -0.4290,  0.4529,  0.4211,  0.4888, -0.1053, -0.4656,
        -0.2981,  0.2139, -0.3762, -0.3662,  0.2007, -0.0957,  0.2949, -0.1456,
         0.0041,  0.0262, -0.3936, -0.3154, -0.1827,  0.1225, -0.1399, -0.1605,
        -0.3367,  0.3940, -0.0471, -0.1653,  0.1238,  0.0191,  0.2449, -0.4844,
         0.1527,  0.2369,  0.2515, -0.0140,  0.0076,  0.2205,  0.4590, -0.2854,
        -0.1514, -0.2439,  0.0653,  0.2686,  0.3896, -0.2720,  0.0565, -0.1120,
        -0.2832, -0.2610, -0.1423,  0.3918, -0.0950,  0.0967,  0.3396,  0.2172,
        -0.0043, -0.3579, -0.4253, -0.2069], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3567, 16, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505608 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (3566, 9, 2, 4, 217) (up to 0.01 allowed)
Greatest relative difference: inf at index (3566, 9, 2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3567, 16, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.3894, -0.1166, -0.3079, -0.3140,  0.4585, -0.0929,  0.4199, -0.0063,
        -0.0100,  0.0944,  0.0063, -0.0658, -0.0316, -0.1628, -0.3208, -0.2263,
         0.4775,  0.3582, -0.1752,  0.1659, -0.2267, -0.3220, -0.2424, -0.0895,
         0.4790,  0.2529, -0.3625, -0.2374,  0.0568,  0.1114, -0.4429, -0.2961,
        -0.3418,  0.3191, -0.2065,  0.0419, -0.2039, -0.1116,  0.0136,  0.2996,
         0.0315, -0.2766, -0.1003, -0.1481,  0.2524,  0.3892,  0.0600,  0.3323,
         0.0573, -0.0580,  0.0930,  0.3977, -0.2803, -0.3059, -0.4695,  0.3259,
         0.3862,  0.3464,  0.1558,  0.0869, -0.0359, -0.2651, -0.0548, -0.0558,
         0.2805, -0.4968, -0.4258, -0.2129,  0.3281, -0.3125,  0.0130,  0.3257,
         0.3826, -0.1214, -0.4248,  0.1155,  0.0813, -0.3411, -0.4343, -0.1587,
        -0.3340, -0.0113, -0.1783, -0.3403, -0.0748,  0.4106, -0.4871,  0.0470,
        -0.4329,  0.1069, -0.1372, -0.0622,  0.3708, -0.0092, -0.1272,  0.2866,
        -0.1434, -0.4304, -0.1201, -0.4866], dtype=torch.float16)
DESIRED: (shape=torch.Size([3567, 16, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.3894, -0.1166, -0.3079, -0.3140,  0.4585, -0.0929,  0.4199, -0.0063,
        -0.0100,  0.0944,  0.0063, -0.0658, -0.0316, -0.1628, -0.3208, -0.2263,
         0.4775,  0.3582, -0.1752,  0.1659, -0.2267, -0.3220, -0.2424, -0.0895,
         0.4790,  0.2529, -0.3625, -0.2374,  0.0568,  0.1114, -0.4429, -0.2961,
        -0.3418,  0.3191, -0.2065,  0.0419, -0.2039, -0.1116,  0.0136,  0.2996,
         0.0315, -0.2766, -0.1003, -0.1481,  0.2524,  0.3892,  0.0600,  0.3323,
         0.0573, -0.0580,  0.0930,  0.3977, -0.2803, -0.3059, -0.4695,  0.3259,
         0.3862,  0.3464,  0.1558,  0.0869, -0.0359, -0.2651, -0.0548, -0.0558,
         0.2805, -0.4968, -0.4258, -0.2129,  0.3281, -0.3125,  0.0130,  0.3257,
         0.3826, -0.1214, -0.4248,  0.1155,  0.0813, -0.3411, -0.4343, -0.1587,
        -0.3340, -0.0113, -0.1783, -0.3403, -0.0748,  0.4106, -0.4871,  0.0470,
        -0.4329,  0.1069, -0.1372, -0.0622,  0.3708, -0.0092, -0.1272,  0.2866,
        -0.1434, -0.4304, -0.1201, -0.4866], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3567, 16, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505746 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (3566, 9, 1, 2, 252) (up to 0.01 allowed)
Greatest relative difference: inf at index (3566, 9, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3567, 16, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.2834,  0.3745,  0.4080, -0.3521,  0.4124,  0.0732,  0.3643,  0.1356,
         0.4763,  0.4551, -0.3062, -0.0560, -0.0133, -0.3960,  0.0637, -0.1017,
         0.1079,  0.1995,  0.1615, -0.1567, -0.4392, -0.3477, -0.1262,  0.1406,
        -0.1346, -0.1589,  0.1307, -0.2142, -0.0971, -0.1908,  0.0169, -0.3157,
        -0.2365,  0.4209, -0.1653,  0.4124,  0.0549, -0.2458,  0.0349,  0.3743,
         0.3340, -0.0976, -0.3447,  0.1274,  0.4153, -0.4414, -0.3662, -0.3784,
         0.2455, -0.3740, -0.1946, -0.1141, -0.1500, -0.1703, -0.4917, -0.1051,
        -0.1633, -0.3789,  0.0637,  0.0800,  0.2343,  0.4463,  0.2520,  0.3931,
        -0.2010, -0.4678,  0.4829,  0.4670, -0.4463,  0.2202,  0.4092,  0.3259,
         0.2335, -0.2830,  0.4465, -0.1853, -0.3855,  0.3604,  0.2234, -0.2556,
         0.1543, -0.4587,  0.1442, -0.0014,  0.4956, -0.2496,  0.4133,  0.4314,
         0.4407, -0.0564,  0.4263,  0.4785, -0.4014,  0.2751,  0.4260,  0.4929,
         0.0861,  0.4241,  0.3350,  0.0737], dtype=torch.float16)
DESIRED: (shape=torch.Size([3567, 16, 14, 14, 384]), dtype=torch.float16)
First 100 elements: tensor([ 0.2834,  0.3745,  0.4080, -0.3521,  0.4124,  0.0732,  0.3643,  0.1356,
         0.4763,  0.4551, -0.3062, -0.0560, -0.0133, -0.3960,  0.0637, -0.1017,
         0.1079,  0.1995,  0.1615, -0.1567, -0.4392, -0.3477, -0.1262,  0.1406,
        -0.1346, -0.1589,  0.1307, -0.2142, -0.0971, -0.1908,  0.0169, -0.3157,
        -0.2365,  0.4209, -0.1653,  0.4124,  0.0549, -0.2458,  0.0349,  0.3743,
         0.3340, -0.0976, -0.3447,  0.1274,  0.4153, -0.4414, -0.3662, -0.3784,
         0.2455, -0.3740, -0.1946, -0.1141, -0.1500, -0.1703, -0.4917, -0.1051,
        -0.1633, -0.3789,  0.0637,  0.0800,  0.2343,  0.4463,  0.2520,  0.3931,
        -0.2010, -0.4678,  0.4829,  0.4670, -0.4463,  0.2202,  0.4092,  0.3259,
         0.2335, -0.2830,  0.4465, -0.1853, -0.3855,  0.3604,  0.2234, -0.2556,
         0.1543, -0.4587,  0.1442, -0.0014,  0.4956, -0.2496,  0.4133,  0.4314,
         0.4407, -0.0564,  0.4263,  0.4785, -0.4014,  0.2751,  0.4260,  0.4929,
         0.0861,  0.4241,  0.3350,  0.0737], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3567, 16, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505574 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (3566, 9, 2, 4, 317) (up to 0.01 allowed)
Greatest relative difference: inf at index (3566, 9, 2, 0, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3567, 16, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.0016, -0.4907, -0.0359, -0.2988,  0.2382, -0.4126, -0.1423,  0.1870,
        -0.4414,  0.3638, -0.3472,  0.0762,  0.1794,  0.2350, -0.0229, -0.0853,
        -0.2944,  0.2817, -0.1556, -0.4863, -0.4590,  0.1423,  0.0715, -0.0788,
         0.3464,  0.4688,  0.0013,  0.4893,  0.2913,  0.3579, -0.4939, -0.0064,
        -0.3828,  0.3503, -0.0701,  0.0621,  0.0235, -0.0437, -0.3674, -0.2078,
        -0.4761,  0.2250, -0.1718, -0.4961, -0.2517,  0.0399, -0.1880, -0.2234,
         0.0035,  0.0930, -0.2488,  0.2988, -0.1317, -0.3618, -0.2003, -0.4788,
         0.2734,  0.4629,  0.2947, -0.4141,  0.1178, -0.2096,  0.4534,  0.3604,
         0.0821,  0.1947, -0.4949,  0.4824, -0.2367,  0.3945, -0.4202,  0.0938,
         0.1401,  0.4746, -0.1156,  0.3911,  0.4915, -0.0618,  0.4497,  0.2747,
         0.4468,  0.1884,  0.4236, -0.3335, -0.1813,  0.0515,  0.0370,  0.2937,
         0.4734,  0.0677,  0.4209, -0.1111,  0.1770,  0.3948, -0.1652, -0.0550,
         0.0856,  0.2820,  0.1173,  0.3289], dtype=torch.float16)
DESIRED: (shape=torch.Size([3567, 16, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.0016, -0.4907, -0.0359, -0.2988,  0.2382, -0.4126, -0.1423,  0.1870,
        -0.4414,  0.3638, -0.3472,  0.0762,  0.1794,  0.2350, -0.0229, -0.0853,
        -0.2944,  0.2817, -0.1556, -0.4863, -0.4590,  0.1423,  0.0715, -0.0788,
         0.3464,  0.4688,  0.0013,  0.4893,  0.2913,  0.3579, -0.4939, -0.0064,
        -0.3828,  0.3503, -0.0701,  0.0621,  0.0235, -0.0437, -0.3674, -0.2078,
        -0.4761,  0.2250, -0.1718, -0.4961, -0.2517,  0.0399, -0.1880, -0.2234,
         0.0035,  0.0930, -0.2488,  0.2988, -0.1317, -0.3618, -0.2003, -0.4788,
         0.2734,  0.4629,  0.2947, -0.4141,  0.1178, -0.2096,  0.4534,  0.3604,
         0.0821,  0.1947, -0.4949,  0.4824, -0.2367,  0.3945, -0.4202,  0.0938,
         0.1401,  0.4746, -0.1156,  0.3911,  0.4915, -0.0618,  0.4497,  0.2747,
         0.4468,  0.1884,  0.4236, -0.3335, -0.1813,  0.0515,  0.0370,  0.2937,
         0.4734,  0.0677,  0.4209, -0.1111,  0.1770,  0.3948, -0.1652, -0.0550,
         0.0856,  0.2820,  0.1173,  0.3289], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3567, 16, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505634 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (3566, 9, 0, 4, 312) (up to 0.01 allowed)
Greatest relative difference: inf at index (3566, 9, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3567, 16, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2832, -0.2382,  0.1680,  0.2292,  0.2095,  0.1581,  0.2742, -0.2986,
        -0.4807,  0.3970, -0.4541, -0.2737, -0.2146, -0.4148,  0.0192, -0.0818,
         0.3979, -0.4622,  0.2313, -0.4175, -0.4761,  0.3037, -0.3040,  0.0778,
         0.2268,  0.2659, -0.1663,  0.1786, -0.4614, -0.0439,  0.0710, -0.1207,
         0.0322, -0.4312,  0.4019, -0.3250, -0.4590,  0.3843, -0.3640, -0.3713,
        -0.2242,  0.2389, -0.0309, -0.3950, -0.4019,  0.4104, -0.0206,  0.3164,
         0.1768, -0.0427, -0.1647, -0.1271, -0.3123, -0.2773, -0.2637, -0.1853,
        -0.0129,  0.4207,  0.3999,  0.2365,  0.3389,  0.2197, -0.3320, -0.1914,
         0.3391, -0.1377, -0.4431, -0.1312, -0.1538, -0.0907,  0.0064,  0.0371,
        -0.3169, -0.2029,  0.2028, -0.1608, -0.1451, -0.4397,  0.1927,  0.0079,
         0.2211,  0.4512,  0.2142,  0.3457, -0.3311,  0.3162,  0.2043, -0.3206,
        -0.1207, -0.1464, -0.4495, -0.1985,  0.4343, -0.3701,  0.1333, -0.4563,
        -0.1769,  0.2820,  0.0147,  0.1632], dtype=torch.float16)
DESIRED: (shape=torch.Size([3567, 16, 14, 7, 768]), dtype=torch.float16)
First 100 elements: tensor([ 0.2832, -0.2382,  0.1680,  0.2292,  0.2095,  0.1581,  0.2742, -0.2986,
        -0.4807,  0.3970, -0.4541, -0.2737, -0.2146, -0.4148,  0.0192, -0.0818,
         0.3979, -0.4622,  0.2313, -0.4175, -0.4761,  0.3037, -0.3040,  0.0778,
         0.2268,  0.2659, -0.1663,  0.1786, -0.4614, -0.0439,  0.0710, -0.1207,
         0.0322, -0.4312,  0.4019, -0.3250, -0.4590,  0.3843, -0.3640, -0.3713,
        -0.2242,  0.2389, -0.0309, -0.3950, -0.4019,  0.4104, -0.0206,  0.3164,
         0.1768, -0.0427, -0.1647, -0.1271, -0.3123, -0.2773, -0.2637, -0.1853,
        -0.0129,  0.4207,  0.3999,  0.2365,  0.3389,  0.2197, -0.3320, -0.1914,
         0.3391, -0.1377, -0.4431, -0.1312, -0.1538, -0.0907,  0.0064,  0.0371,
        -0.3169, -0.2029,  0.2028, -0.1608, -0.1451, -0.4397,  0.1927,  0.0079,
         0.2211,  0.4512,  0.2142,  0.3457, -0.3311,  0.3162,  0.2043, -0.3206,
        -0.1207, -0.1464, -0.4495, -0.1985,  0.4343, -0.3701,  0.1333, -0.4563,
        -0.1769,  0.2820,  0.0147,  0.1632], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3567, 16, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 492073 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (3566, 9, 3, 1, 270) (up to 0.01 allowed)
Greatest relative difference: inf at index (3566, 9, 2, 4, 256) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3567, 16, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.0407,  0.0025,  0.4441, -0.0581, -0.0950, -0.1624,  0.4673,  0.0622,
         0.1719,  0.4648,  0.2988,  0.4412, -0.1361,  0.0789, -0.4980, -0.3569,
         0.3323,  0.4663, -0.3772, -0.4460, -0.0179, -0.2842, -0.1771,  0.3281,
         0.3208, -0.1906, -0.3381, -0.2461,  0.4407,  0.0505,  0.2964, -0.0009,
        -0.1489, -0.0131, -0.3596,  0.1183,  0.3196,  0.4475,  0.0970, -0.3530,
         0.4268, -0.0068, -0.4829,  0.4700,  0.0831,  0.4932,  0.2998,  0.1549,
        -0.1342,  0.1835,  0.0124, -0.1610,  0.0935,  0.4036,  0.1334, -0.3228,
        -0.1851, -0.1748, -0.0250,  0.2227,  0.4797, -0.3547,  0.4700,  0.2722,
        -0.0082, -0.4619, -0.2642,  0.2118,  0.0070, -0.2546, -0.4285, -0.1262,
         0.1215,  0.1154,  0.1904,  0.4375,  0.4248,  0.1404, -0.0761, -0.3757,
        -0.2864,  0.4004, -0.2727, -0.0421,  0.2715, -0.0302,  0.4170, -0.3821,
         0.1674, -0.4993, -0.3921,  0.4890, -0.4209, -0.3311, -0.2460,  0.4487,
        -0.0620,  0.1259, -0.0530,  0.1416], dtype=torch.float16)
DESIRED: (shape=torch.Size([3567, 16, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.0407,  0.0025,  0.4441, -0.0581, -0.0950, -0.1624,  0.4673,  0.0622,
         0.1719,  0.4648,  0.2988,  0.4412, -0.1361,  0.0789, -0.4980, -0.3569,
         0.3323,  0.4663, -0.3772, -0.4460, -0.0179, -0.2842, -0.1771,  0.3281,
         0.3208, -0.1906, -0.3381, -0.2461,  0.4407,  0.0505,  0.2964, -0.0009,
        -0.1489, -0.0131, -0.3596,  0.1183,  0.3196,  0.4475,  0.0970, -0.3530,
         0.4268, -0.0068, -0.4829,  0.4700,  0.0831,  0.4932,  0.2998,  0.1549,
        -0.1342,  0.1835,  0.0124, -0.1610,  0.0935,  0.4036,  0.1334, -0.3228,
        -0.1851, -0.1748, -0.0250,  0.2227,  0.4797, -0.3547,  0.4700,  0.2722,
        -0.0082, -0.4619, -0.2642,  0.2118,  0.0070, -0.2546, -0.4285, -0.1262,
         0.1215,  0.1154,  0.1904,  0.4375,  0.4248,  0.1404, -0.0761, -0.3757,
        -0.2864,  0.4004, -0.2727, -0.0421,  0.2715, -0.0302,  0.4170, -0.3821,
         0.1674, -0.4993, -0.3921,  0.4890, -0.4209, -0.3311, -0.2460,  0.4487,
        -0.0620,  0.1259, -0.0530,  0.1416], dtype=torch.float16)
[accuracy error] paddle.roll(Tensor([3567, 16, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 491992 / 4295467008 (0.0%)
Greatest absolute difference: 0.5 at index (3566, 9, 2, 2, 628) (up to 0.01 allowed)
Greatest relative difference: inf at index (3566, 9, 2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3567, 16, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.2020, -0.1631,  0.4534,  0.4475, -0.4683,  0.2769, -0.0207, -0.4021,
         0.3293, -0.2732,  0.3108,  0.1512,  0.2250, -0.4907,  0.0507,  0.0649,
        -0.2075,  0.3901,  0.1395, -0.2612,  0.4333,  0.3181, -0.0915,  0.0271,
         0.4771, -0.1091,  0.2502,  0.1256, -0.1448,  0.3860,  0.3452,  0.1831,
         0.3037, -0.1052,  0.0557,  0.1307,  0.0581, -0.3796, -0.2096,  0.3037,
         0.0563,  0.0853,  0.0964, -0.1891, -0.2266, -0.0150,  0.2874,  0.4604,
        -0.2311, -0.1647, -0.1498, -0.1644, -0.2830, -0.3420, -0.4895,  0.1501,
        -0.3542,  0.3252, -0.3062, -0.1417, -0.2874, -0.1633,  0.1659, -0.3044,
        -0.3450, -0.3010,  0.0564, -0.4036, -0.1069,  0.1323, -0.3191,  0.1548,
         0.4690,  0.4556,  0.2683, -0.3428,  0.0352,  0.3960, -0.1774, -0.1229,
        -0.2196, -0.1260, -0.0292,  0.2668,  0.3677,  0.3813,  0.3235, -0.4614,
        -0.3105, -0.2664, -0.3052, -0.3936, -0.1019,  0.3228,  0.2590, -0.2847,
        -0.0610, -0.0115,  0.0832, -0.1827], dtype=torch.float16)
DESIRED: (shape=torch.Size([3567, 16, 7, 14, 768]), dtype=torch.float16)
First 100 elements: tensor([-0.2020, -0.1631,  0.4534,  0.4475, -0.4683,  0.2769, -0.0207, -0.4021,
         0.3293, -0.2732,  0.3108,  0.1512,  0.2250, -0.4907,  0.0507,  0.0649,
        -0.2075,  0.3901,  0.1395, -0.2612,  0.4333,  0.3181, -0.0915,  0.0271,
         0.4771, -0.1091,  0.2502,  0.1256, -0.1448,  0.3860,  0.3452,  0.1831,
         0.3037, -0.1052,  0.0557,  0.1307,  0.0581, -0.3796, -0.2096,  0.3037,
         0.0563,  0.0853,  0.0964, -0.1891, -0.2266, -0.0150,  0.2874,  0.4604,
        -0.2311, -0.1647, -0.1498, -0.1644, -0.2830, -0.3420, -0.4895,  0.1501,
        -0.3542,  0.3252, -0.3062, -0.1417, -0.2874, -0.1633,  0.1659, -0.3044,
        -0.3450, -0.3010,  0.0564, -0.4036, -0.1069,  0.1323, -0.3191,  0.1548,
         0.4690,  0.4556,  0.2683, -0.3428,  0.0352,  0.3960, -0.1774, -0.1229,
        -0.2196, -0.1260, -0.0292,  0.2668,  0.3677,  0.3813,  0.3235, -0.4614,
        -0.3105, -0.2664, -0.3052, -0.3936, -0.1019,  0.3228,  0.2590, -0.2847,
        -0.0610, -0.0115,  0.0832, -0.1827], dtype=torch.float16)
[accuracy error] paddle.roll(x=Tensor([1431655766, 3],"float16"), shifts=tuple(-1,1,), axis=tuple(0,1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 4294967298 (0.0%)
Greatest absolute difference: 0.269775390625 at index (1431655765, 2) (up to 0.01 allowed)
Greatest relative difference: inf at index (1431655765, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.1598, -0.1345, -0.0062, -0.0434,  0.2211,  0.4031, -0.4148,  0.3699,
        -0.1942,  0.2944,  0.1986,  0.3555,  0.2761,  0.0350,  0.4978, -0.1873,
        -0.4070,  0.0771, -0.3479,  0.2094,  0.0459,  0.0752, -0.1071, -0.0244,
         0.2467,  0.4744,  0.2659, -0.2517,  0.4102,  0.0295,  0.3391, -0.4414,
         0.0136,  0.1213, -0.1934, -0.0868,  0.4043,  0.3250, -0.0581, -0.3320,
         0.1697, -0.0933, -0.1538, -0.4458,  0.3518,  0.1095,  0.3235, -0.1824,
        -0.0753,  0.2416, -0.2404,  0.4055,  0.3228,  0.2502, -0.2490,  0.3672,
         0.3689, -0.2539, -0.1715,  0.4895,  0.2300, -0.4214, -0.1404,  0.1202,
         0.2598,  0.1569, -0.3872, -0.4062, -0.0828,  0.4517,  0.1120, -0.3657,
         0.1206,  0.2627, -0.3494, -0.4016, -0.3582, -0.1970,  0.2866, -0.2308,
        -0.2695,  0.4668, -0.0016, -0.4680,  0.0736,  0.2664, -0.4246, -0.3718,
         0.0929,  0.4319, -0.4253, -0.0545, -0.0501,  0.4497,  0.4272,  0.1716,
         0.0895,  0.3201,  0.0920,  0.1675], dtype=torch.float16)
DESIRED: (shape=torch.Size([1431655766, 3]), dtype=torch.float16)
First 100 elements: tensor([ 0.1598, -0.1345, -0.0062, -0.0434,  0.2211,  0.4031, -0.4148,  0.3699,
        -0.1942,  0.2944,  0.1986,  0.3555,  0.2761,  0.0350,  0.4978, -0.1873,
        -0.4070,  0.0771, -0.3479,  0.2094,  0.0459,  0.0752, -0.1071, -0.0244,
         0.2467,  0.4744,  0.2659, -0.2517,  0.4102,  0.0295,  0.3391, -0.4414,
         0.0136,  0.1213, -0.1934, -0.0868,  0.4043,  0.3250, -0.0581, -0.3320,
         0.1697, -0.0933, -0.1538, -0.4458,  0.3518,  0.1095,  0.3235, -0.1824,
        -0.0753,  0.2416, -0.2404,  0.4055,  0.3228,  0.2502, -0.2490,  0.3672,
         0.3689, -0.2539, -0.1715,  0.4895,  0.2300, -0.4214, -0.1404,  0.1202,
         0.2598,  0.1569, -0.3872, -0.4062, -0.0828,  0.4517,  0.1120, -0.3657,
         0.1206,  0.2627, -0.3494, -0.4016, -0.3582, -0.1970,  0.2866, -0.2308,
        -0.2695,  0.4668, -0.0016, -0.4680,  0.0736,  0.2664, -0.4246, -0.3718,
         0.0929,  0.4319, -0.4253, -0.0545, -0.0501,  0.4497,  0.4272,  0.1716,
         0.0895,  0.3201,  0.0920,  0.1675], dtype=torch.float16)
[accuracy error] paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=-1, axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4294967298 (0.0%)
Greatest absolute difference: 0.08770751953125 at index (2, 1431655764) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1431655764) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.3442,  0.3125,  0.1650, -0.1108,  0.2261, -0.3538, -0.1746,  0.1279,
         0.1909, -0.0190,  0.1429,  0.2214,  0.1115, -0.0306,  0.3562, -0.4263,
         0.3074, -0.1541,  0.4387, -0.0812, -0.3354, -0.3831, -0.3381, -0.2230,
         0.0748,  0.4583,  0.4944,  0.3289, -0.1399,  0.3784,  0.3999, -0.3059,
        -0.3586,  0.1104,  0.0107, -0.4614,  0.1477, -0.0274, -0.4143,  0.0903,
        -0.4587,  0.1594,  0.4700, -0.2412, -0.1151, -0.4277, -0.0159,  0.2006,
        -0.1004, -0.0664, -0.1580, -0.1893, -0.1624, -0.3174,  0.0252, -0.1032,
        -0.0367,  0.3037,  0.0128, -0.3787, -0.0883,  0.4690, -0.2854,  0.3164,
        -0.1770, -0.2666, -0.2808,  0.3616, -0.4421,  0.1180,  0.3616,  0.2397,
         0.4841, -0.4016,  0.3206, -0.1998,  0.3857, -0.0128, -0.1065, -0.3721,
        -0.3469,  0.2319, -0.2262,  0.2152, -0.1986,  0.0946,  0.3274, -0.2434,
         0.2194, -0.0062, -0.1375, -0.1899, -0.2406, -0.3967,  0.1583, -0.3604,
         0.4893, -0.0461,  0.1538, -0.4680], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.3442,  0.3125,  0.1650, -0.1108,  0.2261, -0.3538, -0.1746,  0.1279,
         0.1909, -0.0190,  0.1429,  0.2214,  0.1115, -0.0306,  0.3562, -0.4263,
         0.3074, -0.1541,  0.4387, -0.0812, -0.3354, -0.3831, -0.3381, -0.2230,
         0.0748,  0.4583,  0.4944,  0.3289, -0.1399,  0.3784,  0.3999, -0.3059,
        -0.3586,  0.1104,  0.0107, -0.4614,  0.1477, -0.0274, -0.4143,  0.0903,
        -0.4587,  0.1594,  0.4700, -0.2412, -0.1151, -0.4277, -0.0159,  0.2006,
        -0.1004, -0.0664, -0.1580, -0.1893, -0.1624, -0.3174,  0.0252, -0.1032,
        -0.0367,  0.3037,  0.0128, -0.3787, -0.0883,  0.4690, -0.2854,  0.3164,
        -0.1770, -0.2666, -0.2808,  0.3616, -0.4421,  0.1180,  0.3616,  0.2397,
         0.4841, -0.4016,  0.3206, -0.1998,  0.3857, -0.0128, -0.1065, -0.3721,
        -0.3469,  0.2319, -0.2262,  0.2152, -0.1986,  0.0946,  0.3274, -0.2434,
         0.2194, -0.0062, -0.1375, -0.1899, -0.2406, -0.3967,  0.1583, -0.3604,
         0.4893, -0.0461,  0.1538, -0.4680], dtype=torch.float16)
[accuracy error] paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=0, axis=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4294967298 (0.0%)
Greatest absolute difference: 0.1060791015625 at index (2, 1431655764) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1431655764) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([ 0.4233,  0.1555, -0.4670,  0.3721, -0.2778,  0.2175, -0.1530,  0.3916,
        -0.3953, -0.3120, -0.0309, -0.3108,  0.3767, -0.4050,  0.3157,  0.3945,
        -0.0047, -0.3750,  0.1349,  0.4641,  0.1092,  0.4978,  0.0551, -0.1204,
         0.3540,  0.4170, -0.2273,  0.1079, -0.0155,  0.2856,  0.1536,  0.1654,
        -0.0598, -0.1630,  0.3057, -0.3003, -0.1984,  0.2822,  0.0743,  0.0853,
        -0.3259,  0.1142, -0.4468,  0.2512, -0.1429,  0.2710,  0.4641, -0.3311,
         0.3806, -0.2971,  0.4814, -0.2930,  0.3018, -0.2166,  0.0025, -0.3699,
         0.3557, -0.3474,  0.3362,  0.3284,  0.3479, -0.2142,  0.4954,  0.1918,
         0.0291,  0.4087,  0.2349, -0.4949, -0.2395,  0.1736,  0.3906,  0.3962,
         0.0381, -0.4578, -0.1492, -0.0401, -0.3259,  0.2054,  0.1345, -0.3572,
         0.4951,  0.3538,  0.3582, -0.3730, -0.3145, -0.0608,  0.4004, -0.2189,
         0.2379,  0.1443, -0.4893,  0.2874,  0.1469, -0.0157,  0.2661, -0.3679,
        -0.4111,  0.3684, -0.2128, -0.1384], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([ 0.4233,  0.1555, -0.4670,  0.3721, -0.2778,  0.2175, -0.1530,  0.3916,
        -0.3953, -0.3120, -0.0309, -0.3108,  0.3767, -0.4050,  0.3157,  0.3945,
        -0.0047, -0.3750,  0.1349,  0.4641,  0.1092,  0.4978,  0.0551, -0.1204,
         0.3540,  0.4170, -0.2273,  0.1079, -0.0155,  0.2856,  0.1536,  0.1654,
        -0.0598, -0.1630,  0.3057, -0.3003, -0.1984,  0.2822,  0.0743,  0.0853,
        -0.3259,  0.1142, -0.4468,  0.2512, -0.1429,  0.2710,  0.4641, -0.3311,
         0.3806, -0.2971,  0.4814, -0.2930,  0.3018, -0.2166,  0.0025, -0.3699,
         0.3557, -0.3474,  0.3362,  0.3284,  0.3479, -0.2142,  0.4954,  0.1918,
         0.0291,  0.4087,  0.2349, -0.4949, -0.2395,  0.1736,  0.3906,  0.3962,
         0.0381, -0.4578, -0.1492, -0.0401, -0.3259,  0.2054,  0.1345, -0.3572,
         0.4951,  0.3538,  0.3582, -0.3730, -0.3145, -0.0608,  0.4004, -0.2189,
         0.2379,  0.1443, -0.4893,  0.2874,  0.1469, -0.0157,  0.2661, -0.3679,
        -0.4111,  0.3684, -0.2128, -0.1384], dtype=torch.float16)
[accuracy error] paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=1, axis=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4294967298 (0.0%)
Greatest absolute difference: 0.4228515625 at index (2, 1431655765) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1431655764) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.4607,  0.3699, -0.2269, -0.1854,  0.3345, -0.3870,  0.0497,  0.4163,
        -0.1974,  0.0792, -0.3066,  0.3157,  0.0728, -0.2927,  0.2666, -0.2125,
         0.2102, -0.1733,  0.4512, -0.3101, -0.4028, -0.3979, -0.3625,  0.2330,
        -0.2986, -0.0068,  0.0744, -0.4385,  0.1936,  0.1602,  0.0226,  0.4536,
         0.2783, -0.3987, -0.2932, -0.0365,  0.3840, -0.2019, -0.2346,  0.4097,
        -0.3838, -0.1499, -0.2571,  0.3962, -0.3154,  0.4153,  0.1401,  0.4424,
         0.2214,  0.4548,  0.1503,  0.4768, -0.1877, -0.0750,  0.4187,  0.4954,
         0.0781, -0.4465,  0.4741, -0.3638,  0.2323, -0.0024, -0.3643,  0.2068,
        -0.1107,  0.0452, -0.4409,  0.1009,  0.4104, -0.3843,  0.1898,  0.1490,
         0.0329, -0.4661, -0.1521, -0.1292, -0.1567,  0.2096, -0.1080,  0.4155,
         0.1392,  0.4990, -0.4441, -0.1222, -0.2233, -0.2712, -0.2837,  0.4504,
         0.2384,  0.4294,  0.1912,  0.4814,  0.4180, -0.4946,  0.0836,  0.1610,
        -0.3967,  0.0663, -0.2375,  0.4961], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.4607,  0.3699, -0.2269, -0.1854,  0.3345, -0.3870,  0.0497,  0.4163,
        -0.1974,  0.0792, -0.3066,  0.3157,  0.0728, -0.2927,  0.2666, -0.2125,
         0.2102, -0.1733,  0.4512, -0.3101, -0.4028, -0.3979, -0.3625,  0.2330,
        -0.2986, -0.0068,  0.0744, -0.4385,  0.1936,  0.1602,  0.0226,  0.4536,
         0.2783, -0.3987, -0.2932, -0.0365,  0.3840, -0.2019, -0.2346,  0.4097,
        -0.3838, -0.1499, -0.2571,  0.3962, -0.3154,  0.4153,  0.1401,  0.4424,
         0.2214,  0.4548,  0.1503,  0.4768, -0.1877, -0.0750,  0.4187,  0.4954,
         0.0781, -0.4465,  0.4741, -0.3638,  0.2323, -0.0024, -0.3643,  0.2068,
        -0.1107,  0.0452, -0.4409,  0.1009,  0.4104, -0.3843,  0.1898,  0.1490,
         0.0329, -0.4661, -0.1521, -0.1292, -0.1567,  0.2096, -0.1080,  0.4155,
         0.1392,  0.4990, -0.4441, -0.1222, -0.2233, -0.2712, -0.2837,  0.4504,
         0.2384,  0.4294,  0.1912,  0.4814,  0.4180, -0.4946,  0.0836,  0.1610,
        -0.3967,  0.0663, -0.2375,  0.4961], dtype=torch.float16)
[accuracy error] paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=list[-1,1,], axis=list[0,1,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 4294967298 (0.0%)
Greatest absolute difference: 0.39306640625 at index (2, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([ 2.7075e-01, -1.9214e-01,  4.1650e-01,  3.4375e-01, -3.6523e-01,
         5.5725e-02, -2.9175e-01, -2.0129e-01, -4.5898e-01,  1.4758e-01,
         3.7354e-01,  4.2627e-01,  2.7319e-01,  3.9111e-01, -2.0056e-01,
         1.2280e-01,  1.0260e-01, -1.0643e-02,  9.0088e-02,  1.5881e-01,
         5.3589e-02,  4.3701e-01, -3.3398e-01,  4.0833e-02, -1.5332e-01,
         1.5674e-01,  2.4268e-01, -1.0645e-01, -4.8828e-01, -3.7866e-01,
        -4.7290e-01, -2.4060e-01, -1.7993e-01,  2.2412e-01,  3.7769e-01,
         3.5571e-01,  3.9136e-01, -7.0557e-02, -4.3311e-01,  4.8730e-01,
         8.7891e-02, -4.8340e-01,  1.1718e-04, -7.3120e-02,  2.6172e-01,
        -3.7476e-01,  1.1975e-01, -4.1431e-01, -4.8169e-01,  1.5601e-01,
         4.6704e-01, -3.7061e-01, -9.7717e-02, -4.1333e-01, -3.8770e-01,
        -1.4209e-01, -2.6562e-01, -4.6777e-01,  4.2969e-01, -1.3403e-01,
         2.6764e-02, -3.1665e-01,  3.3691e-01, -4.8291e-01,  2.9102e-01,
        -1.6956e-01, -2.9175e-01,  4.4556e-01, -1.5735e-01, -2.9224e-01,
         8.9478e-02, -1.6125e-01,  1.6382e-01,  5.9967e-02, -2.2131e-01,
         4.5142e-01,  3.2373e-01,  2.1729e-01,  2.3315e-01,  2.1973e-01,
        -1.2070e-02,  5.2094e-02,  2.5732e-01, -1.9580e-01,  1.3512e-02,
        -2.2998e-01, -4.7168e-01,  2.7319e-01,  1.1853e-01,  4.3750e-01,
        -3.7109e-02,  7.4646e-02,  1.2964e-01, -1.9092e-01,  1.1499e-01,
         3.5553e-02,  2.6709e-01,  1.7627e-01,  1.7502e-02,  4.7583e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([ 2.7075e-01, -1.9214e-01,  4.1650e-01,  3.4375e-01, -3.6523e-01,
         5.5725e-02, -2.9175e-01, -2.0129e-01, -4.5898e-01,  1.4758e-01,
         3.7354e-01,  4.2627e-01,  2.7319e-01,  3.9111e-01, -2.0056e-01,
         1.2280e-01,  1.0260e-01, -1.0643e-02,  9.0088e-02,  1.5881e-01,
         5.3589e-02,  4.3701e-01, -3.3398e-01,  4.0833e-02, -1.5332e-01,
         1.5674e-01,  2.4268e-01, -1.0645e-01, -4.8828e-01, -3.7866e-01,
        -4.7290e-01, -2.4060e-01, -1.7993e-01,  2.2412e-01,  3.7769e-01,
         3.5571e-01,  3.9136e-01, -7.0557e-02, -4.3311e-01,  4.8730e-01,
         8.7891e-02, -4.8340e-01,  1.1718e-04, -7.3120e-02,  2.6172e-01,
        -3.7476e-01,  1.1975e-01, -4.1431e-01, -4.8169e-01,  1.5601e-01,
         4.6704e-01, -3.7061e-01, -9.7717e-02, -4.1333e-01, -3.8770e-01,
        -1.4209e-01, -2.6562e-01, -4.6777e-01,  4.2969e-01, -1.3403e-01,
         2.6764e-02, -3.1665e-01,  3.3691e-01, -4.8291e-01,  2.9102e-01,
        -1.6956e-01, -2.9175e-01,  4.4556e-01, -1.5735e-01, -2.9224e-01,
         8.9478e-02, -1.6125e-01,  1.6382e-01,  5.9967e-02, -2.2131e-01,
         4.5142e-01,  3.2373e-01,  2.1729e-01,  2.3315e-01,  2.1973e-01,
        -1.2070e-02,  5.2094e-02,  2.5732e-01, -1.9580e-01,  1.3512e-02,
        -2.2998e-01, -4.7168e-01,  2.7319e-01,  1.1853e-01,  4.3750e-01,
        -3.7109e-02,  7.4646e-02,  1.2964e-01, -1.9092e-01,  1.1499e-01,
         3.5553e-02,  2.6709e-01,  1.7627e-01,  1.7502e-02,  4.7583e-01],
       dtype=torch.float16)
[accuracy error] paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=tuple(-1,1,), axis=tuple(0,1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 4294967298 (0.0%)
Greatest absolute difference: 0.43505859375 at index (2, 1431655765) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.3245,  0.3645,  0.3977, -0.0895,  0.1581,  0.1249, -0.4973, -0.2590,
        -0.4587, -0.3611,  0.0568, -0.2422, -0.3135,  0.2124, -0.2917,  0.1794,
        -0.2114,  0.4431, -0.1949, -0.1653,  0.2366, -0.2365,  0.4233,  0.4260,
         0.1860,  0.3413, -0.2288, -0.3867,  0.4282, -0.4971, -0.0148, -0.3550,
        -0.3333, -0.4895,  0.1583,  0.2150, -0.3030,  0.1853, -0.0057, -0.2754,
        -0.4968, -0.0537,  0.4861,  0.3984,  0.4189, -0.4177, -0.2947, -0.3784,
        -0.4956,  0.2520,  0.3896,  0.0549,  0.0868,  0.3132, -0.1360, -0.3606,
         0.3691,  0.2874, -0.1394,  0.3120, -0.4368,  0.0929, -0.3352,  0.3860,
         0.4915, -0.0323,  0.1193, -0.0818, -0.0399,  0.2478,  0.1013,  0.1896,
        -0.0208,  0.0307,  0.2944, -0.0058, -0.2681, -0.4431, -0.0847, -0.2812,
         0.1576, -0.1118, -0.2032, -0.1605, -0.2478,  0.3706,  0.2042, -0.2732,
         0.3699, -0.2317,  0.3181,  0.3259, -0.4666,  0.4812, -0.1033, -0.2078,
        -0.4546, -0.2642,  0.1914,  0.3977], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 1431655766]), dtype=torch.float16)
First 100 elements: tensor([-0.3245,  0.3645,  0.3977, -0.0895,  0.1581,  0.1249, -0.4973, -0.2590,
        -0.4587, -0.3611,  0.0568, -0.2422, -0.3135,  0.2124, -0.2917,  0.1794,
        -0.2114,  0.4431, -0.1949, -0.1653,  0.2366, -0.2365,  0.4233,  0.4260,
         0.1860,  0.3413, -0.2288, -0.3867,  0.4282, -0.4971, -0.0148, -0.3550,
        -0.3333, -0.4895,  0.1583,  0.2150, -0.3030,  0.1853, -0.0057, -0.2754,
        -0.4968, -0.0537,  0.4861,  0.3984,  0.4189, -0.4177, -0.2947, -0.3784,
        -0.4956,  0.2520,  0.3896,  0.0549,  0.0868,  0.3132, -0.1360, -0.3606,
         0.3691,  0.2874, -0.1394,  0.3120, -0.4368,  0.0929, -0.3352,  0.3860,
         0.4915, -0.0323,  0.1193, -0.0818, -0.0399,  0.2478,  0.1013,  0.1896,
        -0.0208,  0.0307,  0.2944, -0.0058, -0.2681, -0.4431, -0.0847, -0.2812,
         0.1576, -0.1118, -0.2032, -0.1605, -0.2478,  0.3706,  0.2042, -0.2732,
         0.3699, -0.2317,  0.3181,  0.3259, -0.4666,  0.4812, -0.1033, -0.2078,
        -0.4546, -0.2642,  0.1914,  0.3977], dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[2,3,1,],list[1,0,2,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2307545 / 858993460 (0.3%)
Greatest absolute difference: 4.75 at index (3918669, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (32287546, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([171798692, 5]), dtype=torch.float16)
First 100 elements: tensor([-12408.0000,   1617.0000,  10848.0000,  -4884.0000,   8456.0000,
          1949.0000,   1423.0000,   -848.5000,    449.5000,  -4448.0000,
         -4848.0000,  -4244.0000,  13512.0000,   6604.0000,  -4988.0000,
          2050.0000,   2006.0000,   -820.5000,  -3412.0000,   5508.0000,
          8172.0000,   5616.0000,  -6916.0000,   -891.5000,  -2770.0000,
          9576.0000,   5872.0000,   -978.5000,    275.0000,  -2882.0000,
        -14736.0000,   9104.0000,   7952.0000,   -427.7500,   3862.0000,
         -5116.0000,  13656.0000,   8068.0000,  -2734.0000,   3412.0000,
          7696.0000,   1837.0000,    258.2500,   -403.0000,  -2730.0000,
          6536.0000,   4472.0000, -18240.0000,  -3810.0000,   7300.0000,
         -5304.0000,  -6948.0000,  -6180.0000,   1880.0000,   1281.0000,
         -1648.0000,   8896.0000,   3044.0000,  -5772.0000,   6684.0000,
         -1093.0000,   -331.0000,  14728.0000,   4020.0000,  -6052.0000,
          4280.0000,  -4052.0000,  -2566.0000,   -629.5000,   -786.5000,
          2064.0000,  -1173.0000,   6212.0000,  -2480.0000,   4416.0000,
        -12848.0000,   -648.0000,   4078.0000,   3050.0000,     46.9062,
         -4848.0000,   -345.0000,   5036.0000,   -656.5000,    423.2500,
        -21024.0000,    330.0000,   9320.0000,   7168.0000,  -4664.0000,
          7784.0000,   -696.0000,  -3048.0000,   2454.0000,  -3104.0000,
         -1808.0000,  -9968.0000,  -3586.0000,   2028.0000,   -354.0000],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([171798692, 5]), dtype=torch.float16)
First 100 elements: tensor([-12408.0000,   1619.0000,  10848.0000,  -4884.0000,   8456.0000,
          1949.0000,   1423.0000,   -848.5000,    449.5000,  -4448.0000,
         -4848.0000,  -4244.0000,  13512.0000,   6604.0000,  -4988.0000,
          2050.0000,   2006.0000,   -820.5000,  -3412.0000,   5508.0000,
          8172.0000,   5612.0000,  -6916.0000,   -891.5000,  -2770.0000,
          9576.0000,   5868.0000,   -978.5000,    275.0000,  -2882.0000,
        -14736.0000,   9104.0000,   7952.0000,   -427.7500,   3862.0000,
         -5116.0000,  13656.0000,   8068.0000,  -2734.0000,   3412.0000,
          7696.0000,   1838.0000,    258.2500,   -403.0000,  -2730.0000,
          6536.0000,   4468.0000, -18240.0000,  -3810.0000,   7300.0000,
         -5304.0000,  -6948.0000,  -6180.0000,   1880.0000,   1281.0000,
         -1648.0000,   8896.0000,   3044.0000,  -5772.0000,   6684.0000,
         -1093.0000,   -329.7500,  14728.0000,   4020.0000,  -6052.0000,
          4280.0000,  -4052.0000,  -2566.0000,   -629.5000,   -786.5000,
          2064.0000,  -1172.0000,   6212.0000,  -2480.0000,   4416.0000,
        -12848.0000,   -649.0000,   4078.0000,   3050.0000,     46.9062,
         -4848.0000,   -344.0000,   5036.0000,   -656.5000,    423.2500,
        -21024.0000,    328.7500,   9320.0000,   7168.0000,  -4664.0000,
          7784.0000,   -697.0000,  -3048.0000,   2454.0000,  -3104.0000,
         -1808.0000,  -9968.0000,  -3586.0000,   2028.0000,   -354.0000],
       dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[3,1,2,],list[2,3,1,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 858993460 (0.0%)
Greatest absolute difference: 0.1322021484375 at index (3, 171798688) (up to 0.01 allowed)
Greatest relative difference: 1.4462890625 at index (3, 171798688) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 171798692]), dtype=torch.float16)
First 100 elements: tensor([ 1.4941,  0.2842,  0.0216,  0.0752,  0.1930,  0.2413,  0.2554,  0.2151,
         0.0555, -0.0989,  0.5894,  0.1854, -0.3340, -0.2646, -0.1370, -0.6470,
        -0.6987, -0.1969, -0.5615,  0.1696, -0.0601, -0.2343, -0.4626, -0.2581,
        -0.5645,  0.7632,  0.5078, -0.2917,  0.0625, -0.7505, -0.5366, -0.0826,
         0.2959, -0.3518, -0.2216, -0.5596, -0.5723, -0.3923,  0.2101,  0.0041,
         0.2939, -0.0224,  0.5078,  0.0555, -0.3889, -0.4722,  0.0662,  0.3787,
        -0.0104, -0.1692, -0.0814,  0.6719, -0.4211,  0.2981,  0.1135,  0.8633,
        -0.7563, -0.0111, -0.2242, -0.0338,  0.7202,  0.3433,  0.1272, -0.0628,
         0.2969, -0.0575,  1.1758,  0.5605, -0.5811,  0.8384,  0.6729,  0.2502,
        -0.2551,  0.7300,  0.3457, -0.9658, -0.0758, -1.0654, -0.3740,  0.3079,
        -0.0533,  0.3562, -0.4453,  0.9536, -0.2649, -0.7041,  0.5752,  0.0545,
        -0.5439,  0.2361, -0.1987, -0.0033, -0.3135, -0.3496,  0.0531, -0.2969,
         0.6836, -0.0946, -0.6235,  0.1667], dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 171798692]), dtype=torch.float16)
First 100 elements: tensor([ 1.4941,  0.2842,  0.0216,  0.0752,  0.1930,  0.2413,  0.2554,  0.2151,
         0.0555, -0.0989,  0.5894,  0.1854, -0.3340, -0.2646, -0.1370, -0.6470,
        -0.6987, -0.1969, -0.5615,  0.1696, -0.0601, -0.2343, -0.4626, -0.2581,
        -0.5645,  0.7632,  0.5078, -0.2917,  0.0625, -0.7505, -0.5366, -0.0826,
         0.2959, -0.3518, -0.2216, -0.5596, -0.5723, -0.3923,  0.2101,  0.0041,
         0.2939, -0.0224,  0.5078,  0.0555, -0.3889, -0.4722,  0.0662,  0.3787,
        -0.0104, -0.1692, -0.0814,  0.6719, -0.4211,  0.2981,  0.1135,  0.8633,
        -0.7563, -0.0111, -0.2242, -0.0338,  0.7202,  0.3433,  0.1272, -0.0628,
         0.2969, -0.0575,  1.1758,  0.5605, -0.5811,  0.8384,  0.6729,  0.2502,
        -0.2551,  0.7300,  0.3457, -0.9658, -0.0758, -1.0654, -0.3740,  0.3079,
        -0.0533,  0.3562, -0.4453,  0.9536, -0.2649, -0.7041,  0.5752,  0.0545,
        -0.5439,  0.2361, -0.1987, -0.0033, -0.3135, -0.3496,  0.0531, -0.2969,
         0.6836, -0.0946, -0.6235,  0.1667], dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([5, 5, 1, 171798692],"float16"), list[list[3,2,0,],list[2,1,0,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14 / 858993460 (0.0%)
Greatest absolute difference: 0.1474609375 at index (4, 171798691) (up to 0.01 allowed)
Greatest relative difference: 5.0703125 at index (0, 171798690) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 171798692]), dtype=torch.float16)
First 100 elements: tensor([ 2.2412e-01,  4.3035e-04, -6.2646e-01, -2.4133e-01,  3.9282e-01,
        -6.6357e-01, -7.6807e-01,  3.1555e-02, -1.1792e-01,  1.6748e-01,
        -4.0332e-01, -1.1499e-01, -7.2876e-02,  4.4043e-01,  2.9785e-01,
        -2.3169e-01,  2.6758e-01,  3.5645e-02,  1.6809e-01, -6.3843e-02,
        -2.9956e-01,  3.2593e-01, -7.8711e-01, -7.9004e-01, -1.0211e-01,
        -5.9766e-01, -4.5746e-02,  1.1157e-01, -2.4426e-01, -4.2432e-01,
         4.4775e-01,  2.3340e-01,  4.1626e-01, -3.8037e-01, -6.6528e-02,
        -8.3374e-02,  3.5059e-01, -1.0620e-01,  2.3407e-02, -2.2021e-01,
         4.2358e-01,  4.5801e-01, -3.8696e-01, -4.1064e-01, -2.0862e-01,
         2.8174e-01,  3.0005e-01, -2.5330e-02, -2.6172e-01,  5.2100e-01,
         4.9408e-02, -5.8594e-01, -2.2797e-02,  2.5439e-01, -6.3477e-02,
         1.3464e-01,  7.3291e-01, -4.7333e-02,  1.1273e-01, -1.5173e-01,
        -6.6711e-02,  6.2012e-01, -3.2104e-02, -2.9736e-01,  1.9568e-01,
         2.4475e-01,  1.1346e-01,  2.4194e-01, -5.1819e-02,  5.3711e-01,
         4.8438e-01, -7.2021e-01,  7.7438e-03,  4.3530e-01, -9.9792e-02,
        -5.2539e-01, -2.5586e-01, -1.4185e-01,  6.9824e-01,  7.3438e-01,
        -1.5503e-01, -5.9082e-01, -8.3936e-01,  3.6914e-01, -1.0693e-01,
        -4.2822e-01, -4.0112e-01, -2.3474e-01,  2.0667e-01,  6.0303e-01,
         4.0430e-01,  5.8472e-02, -5.7129e-02,  3.4033e-01, -2.5586e-01,
        -1.3025e-01,  3.3057e-01, -3.3618e-01,  9.3066e-01, -3.4277e-01],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 171798692]), dtype=torch.float16)
First 100 elements: tensor([ 2.2412e-01,  4.3035e-04, -6.2646e-01, -2.4133e-01,  3.9282e-01,
        -6.6357e-01, -7.6807e-01,  3.1555e-02, -1.1792e-01,  1.6748e-01,
        -4.0332e-01, -1.1499e-01, -7.2876e-02,  4.4043e-01,  2.9785e-01,
        -2.3169e-01,  2.6758e-01,  3.5645e-02,  1.6809e-01, -6.3843e-02,
        -2.9956e-01,  3.2593e-01, -7.8711e-01, -7.9004e-01, -1.0211e-01,
        -5.9766e-01, -4.5746e-02,  1.1157e-01, -2.4426e-01, -4.2432e-01,
         4.4775e-01,  2.3340e-01,  4.1626e-01, -3.8037e-01, -6.6528e-02,
        -8.3374e-02,  3.5059e-01, -1.0620e-01,  2.3407e-02, -2.2021e-01,
         4.2358e-01,  4.5801e-01, -3.8696e-01, -4.1064e-01, -2.0862e-01,
         2.8174e-01,  3.0005e-01, -2.5330e-02, -2.6172e-01,  5.2100e-01,
         4.9408e-02, -5.8594e-01, -2.2797e-02,  2.5439e-01, -6.3477e-02,
         1.3464e-01,  7.3291e-01, -4.7333e-02,  1.1273e-01, -1.5173e-01,
        -6.6711e-02,  6.2012e-01, -3.2104e-02, -2.9736e-01,  1.9568e-01,
         2.4475e-01,  1.1346e-01,  2.4194e-01, -5.1819e-02,  5.3711e-01,
         4.8438e-01, -7.2021e-01,  7.7438e-03,  4.3530e-01, -9.9792e-02,
        -5.2539e-01, -2.5586e-01, -1.4185e-01,  6.9824e-01,  7.3438e-01,
        -1.5503e-01, -5.9082e-01, -8.3936e-01,  3.6914e-01, -1.0693e-01,
        -4.2822e-01, -4.0112e-01, -2.3474e-01,  2.0667e-01,  6.0303e-01,
         4.0430e-01,  5.8472e-02, -5.7129e-02,  3.4033e-01, -2.5586e-01,
        -1.3025e-01,  3.3057e-01, -3.3618e-01,  9.3066e-01, -3.4277e-01],
       dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[3,0,],list[2,1,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 625 (0.2%)
Greatest absolute difference: 0.453125 at index (0, 4, 0, 3) (up to 0.01 allowed)
Greatest relative difference: 0.0238037109375 at index (0, 4, 0, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5, 5, 5]), dtype=torch.float16)
First 100 elements: tensor([  396.0000,  1867.0000,  2164.0000,   110.5000, -1140.0000,  1488.0000,
          474.0000, -1156.0000,   592.5000,   920.0000,  -807.0000,   582.5000,
        -1195.0000,   488.0000, -1435.0000,  1758.0000,  1431.0000, -1482.0000,
        -1825.0000, -1981.0000, -2764.0000,  2470.0000,   -93.7500, -1673.0000,
        -1346.0000,  -577.5000,  -236.5000,   633.0000,   600.0000,   228.8750,
         -532.5000,   507.5000, -1330.0000,   242.1250,  -685.5000,  1053.0000,
        -1277.0000,  1064.0000,   856.5000, -1468.0000,  -617.5000, -1434.0000,
          222.6250,   440.2500, -2638.0000,  -740.0000,  -689.0000,  1073.0000,
         1007.0000,  1072.0000,  -232.7500,  -410.2500,    16.3750,   -85.9375,
          231.3750,  -945.5000,    86.3750,  -527.0000,   -62.2812,  -857.0000,
         -204.5000, -1299.0000,  -455.7500,   501.0000,  -856.0000,  -180.1250,
         -749.5000,   198.3750,   325.0000,  -832.5000,  -719.5000,  -109.5625,
          652.5000,   625.0000,   508.2500,   298.0000,   269.5000,   703.0000,
         1501.0000,  -545.5000,   577.0000,    90.9375,  -840.5000,  -360.0000,
           33.0625,  1200.0000,   249.8750,  -444.7500,  -112.0000,  -475.5000,
           46.9375,   187.7500, -1257.0000,  -392.5000, -1669.0000, -1249.0000,
          924.0000,  -131.0000,  -420.2500, -1050.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 5, 5, 5]), dtype=torch.float16)
First 100 elements: tensor([  396.0000,  1867.0000,  2164.0000,   109.5000, -1140.0000,  1488.0000,
          474.0000, -1156.0000,   592.5000,   920.0000,  -807.0000,   582.5000,
        -1195.0000,   488.0000, -1435.0000,  1758.0000,  1431.0000, -1482.0000,
        -1825.0000, -1981.0000, -2764.0000,  2470.0000,   -93.7500, -1673.0000,
        -1346.0000,  -577.5000,  -236.5000,   633.0000,   600.0000,   228.8750,
         -532.5000,   507.5000, -1330.0000,   242.1250,  -685.5000,  1053.0000,
        -1277.0000,  1064.0000,   856.5000, -1468.0000,  -617.5000, -1434.0000,
          222.6250,   440.2500, -2638.0000,  -740.0000,  -689.0000,  1073.0000,
         1007.0000,  1072.0000,  -232.7500,  -410.2500,    16.3750,   -85.4375,
          231.3750,  -946.0000,    86.3750,  -527.0000,   -62.2812,  -857.0000,
         -204.5000, -1299.0000,  -455.7500,   501.0000,  -856.0000,  -180.1250,
         -749.5000,   198.3750,   325.0000,  -832.5000,  -719.5000,  -109.5625,
          652.5000,   625.0000,   508.2500,   298.0000,   269.5000,   703.0000,
         1500.0000,  -545.5000,   577.0000,    90.9375,  -840.5000,  -360.0000,
           33.0625,  1200.0000,   249.8750,  -444.7500,  -112.0000,  -475.5000,
           46.9375,   187.7500, -1257.0000,  -392.5000, -1669.0000, -1249.0000,
          924.0000,  -131.0000,  -420.2500, -1050.0000], dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 34359739],"float16"), list[list[3,0,],list[2,1,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 196651 / 4294967375 (0.0%)
Greatest absolute difference: 0.0322265625 at index (2, 1, 0, 2132135) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1, 1, 3049) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5, 5, 34359739]), dtype=torch.float16)
First 100 elements: tensor([-1834.0000,   552.0000,  -552.0000,  1345.0000,   764.0000,  -815.5000,
          -98.3750,   264.0000,  1631.0000,   -21.0156,   -12.9922,   262.5000,
         1312.0000,  -811.0000,   -33.7188,   366.5000,   469.5000,   393.7500,
          543.0000, -1306.0000,  -592.0000,  -575.5000,  1272.0000,    74.2500,
         1701.0000,  1527.0000,   758.0000, -1628.0000,   264.7500,   112.5625,
        -1155.0000,  -189.3750,  -927.0000, -1673.0000,  1291.0000,  -285.0000,
        -1080.0000,  -844.5000,   589.0000,  1522.0000,   230.8750,   916.0000,
         -979.0000,  -517.5000,  -798.0000, -1496.0000, -1107.0000,  2048.0000,
         1448.0000, -1680.0000,  2072.0000, -1189.0000,   440.0000,  1097.0000,
        -2182.0000,  -748.5000,  -344.5000,   281.7500,  -536.5000, -1078.0000,
         -755.5000,   773.5000,  1278.0000,  -506.5000, -1556.0000,  -280.0000,
         -729.0000, -2104.0000,   159.5000,  -537.5000,  -723.5000,   810.0000,
        -2172.0000,  -576.0000,   836.0000,  -560.0000,   249.6250,   624.0000,
          516.5000,   296.2500,   759.5000,   218.0000,   264.0000,  -194.3750,
        -1568.0000,  1243.0000,  1474.0000,   542.0000,  1225.0000,  -573.5000,
          304.7500,  -434.7500,  -228.6250,  1198.0000, -1693.0000,   575.5000,
         1021.5000,  -611.5000,   -72.3125,   302.2500], dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 5, 5, 34359739]), dtype=torch.float16)
First 100 elements: tensor([-1834.0000,   552.0000,  -552.0000,  1345.0000,   764.0000,  -815.5000,
          -98.3750,   264.0000,  1631.0000,   -21.0156,   -12.9922,   262.5000,
         1312.0000,  -811.0000,   -33.7188,   366.5000,   469.5000,   393.7500,
          543.0000, -1306.0000,  -592.0000,  -575.5000,  1272.0000,    74.2500,
         1701.0000,  1527.0000,   758.0000, -1628.0000,   264.7500,   112.5625,
        -1155.0000,  -189.3750,  -927.0000, -1673.0000,  1291.0000,  -285.0000,
        -1080.0000,  -844.5000,   589.0000,  1522.0000,   230.8750,   916.0000,
         -979.0000,  -517.5000,  -798.0000, -1496.0000, -1107.0000,  2048.0000,
         1448.0000, -1680.0000,  2072.0000, -1189.0000,   440.0000,  1097.0000,
        -2182.0000,  -748.5000,  -344.5000,   281.7500,  -536.5000, -1078.0000,
         -755.5000,   773.5000,  1278.0000,  -506.5000, -1556.0000,  -280.0000,
         -729.0000, -2104.0000,   159.5000,  -537.5000,  -723.5000,   810.0000,
        -2172.0000,  -576.0000,   836.0000,  -560.0000,   249.6250,   624.0000,
          516.5000,   296.2500,   759.5000,   218.0000,   264.0000,  -194.3750,
        -1568.0000,  1243.0000,  1474.0000,   542.0000,  1225.0000,  -573.5000,
          304.7500,  -434.7500,  -228.6250,  1198.0000, -1693.0000,   575.5000,
         1021.5000,  -611.5000,   -72.3125,   302.2500], dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 34359739],"float16"), list[list[3,2,0,],list[2,1,0,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28073 / 171798695 (0.0%)
Greatest absolute difference: 0.062744140625 at index (4, 1681348) (up to 0.01 allowed)
Greatest relative difference: inf at index (4, 28328012) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 34359739]), dtype=torch.float16)
First 100 elements: tensor([ 1.9460e+03,  2.7320e+03, -1.8888e+02, -1.2880e+03, -1.4370e+03,
        -1.1820e+03, -1.0215e+03,  6.2550e+02,  1.2610e+03, -6.9040e+03,
        -3.9440e+03, -1.6450e+03, -1.4610e+03,  1.8580e+03, -1.2760e+03,
         8.5500e+02,  6.8750e+02,  9.8950e+02, -2.2500e+03, -3.5860e+03,
        -4.4520e+03,  3.8160e+03, -1.3080e+03,  2.3125e+02, -4.0950e+02,
        -5.7200e+02, -3.2260e+03,  6.2200e+03,  1.3000e+03, -9.0188e+01,
        -2.6780e+03,  1.8430e+03,  1.1790e+03, -1.7980e+03, -2.5420e+03,
         2.6531e+01, -5.7700e+02, -5.5000e+02, -6.7160e+03, -1.9938e+02,
         3.4660e+03,  1.3190e+03, -1.8560e+03, -2.9980e+03, -6.0000e+03,
         1.6590e+03,  7.6720e+03,  4.1640e+03, -1.0900e+03,  1.7962e+02,
         1.2930e+03,  2.0875e+02,  3.2960e+03, -5.4400e+03,  3.0440e+03,
         4.7440e+03, -8.9450e+02, -1.9262e+02,  7.8800e+03,  2.0700e+03,
         2.1500e+03, -4.0820e+00, -1.8712e+02,  5.4000e+03, -4.1280e+03,
         2.0620e+03,  3.3500e+02,  3.0100e+02,  8.4950e+02, -3.1675e+02,
         2.6020e+03,  5.0120e+03, -2.3680e+03, -1.9762e+02, -2.3180e+03,
         9.7500e+02,  1.3520e+03,  4.4200e+03, -2.6600e+03, -4.0320e+03,
        -3.3250e+02,  2.3820e+03, -2.3266e+01,  1.0680e+03,  3.3600e+03,
         3.0020e+03,  3.6740e+03, -4.6800e+02,  4.6600e+03, -4.8080e+03,
         1.3560e+03, -3.7840e+03, -6.8000e+03,  9.6600e+02,  4.0312e+01,
        -6.5250e+02, -3.6560e+03, -2.4480e+03, -1.1590e+03,  2.0140e+03],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 34359739]), dtype=torch.float16)
First 100 elements: tensor([ 1.9460e+03,  2.7320e+03, -1.8888e+02, -1.2880e+03, -1.4370e+03,
        -1.1820e+03, -1.0215e+03,  6.2550e+02,  1.2610e+03, -6.9040e+03,
        -3.9440e+03, -1.6450e+03, -1.4610e+03,  1.8580e+03, -1.2760e+03,
         8.5500e+02,  6.8750e+02,  9.8950e+02, -2.2500e+03, -3.5860e+03,
        -4.4520e+03,  3.8160e+03, -1.3080e+03,  2.3125e+02, -4.0950e+02,
        -5.7200e+02, -3.2260e+03,  6.2200e+03,  1.3000e+03, -9.0188e+01,
        -2.6780e+03,  1.8430e+03,  1.1790e+03, -1.7980e+03, -2.5420e+03,
         2.6547e+01, -5.7700e+02, -5.5000e+02, -6.7160e+03, -1.9938e+02,
         3.4660e+03,  1.3190e+03, -1.8560e+03, -2.9980e+03, -6.0000e+03,
         1.6590e+03,  7.6720e+03,  4.1640e+03, -1.0900e+03,  1.7962e+02,
         1.2930e+03,  2.0875e+02,  3.2960e+03, -5.4400e+03,  3.0440e+03,
         4.7440e+03, -8.9450e+02, -1.9262e+02,  7.8800e+03,  2.0700e+03,
         2.1500e+03, -4.0703e+00, -1.8712e+02,  5.4000e+03, -4.1280e+03,
         2.0620e+03,  3.3500e+02,  3.0100e+02,  8.4950e+02, -3.1675e+02,
         2.6020e+03,  5.0120e+03, -2.3680e+03, -1.9762e+02, -2.3180e+03,
         9.7500e+02,  1.3520e+03,  4.4200e+03, -2.6600e+03, -4.0320e+03,
        -3.3250e+02,  2.3820e+03, -2.3250e+01,  1.0680e+03,  3.3600e+03,
         3.0020e+03,  3.6740e+03, -4.6800e+02,  4.6600e+03, -4.8080e+03,
         1.3560e+03, -3.7840e+03, -6.8000e+03,  9.6600e+02,  4.0281e+01,
        -6.5250e+02, -3.6560e+03, -2.4480e+03, -1.1590e+03,  2.0140e+03],
       dtype=torch.float16)
[accuracy error] paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 34359739],"float16"), list[list[3,2,1,],list[2,0,1,],], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25058 / 171798695 (0.0%)
Greatest absolute difference: 0.064453125 at index (3, 20562360) (up to 0.01 allowed)
Greatest relative difference: 112.375 at index (3, 21432100) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 34359739]), dtype=torch.float16)
First 100 elements: tensor([   18.7031,  -137.8750, -3412.0000, -2196.0000, -4648.0000, -1238.0000,
        -5616.0000,  5764.0000, -1416.0000,   496.7500, -4064.0000, -7892.0000,
         1394.0000, -2214.0000,  3248.0000, -1951.0000, -1226.0000, -2294.0000,
         6988.0000, -1469.0000,  5308.0000,  1285.0000,  3078.0000,  1399.0000,
         -438.2500,    51.3125,  3098.0000,  4288.0000,  2570.0000,  -438.5000,
          452.5000, -2858.0000,  6444.0000,  -241.6250, -1800.0000,   287.0000,
            8.7188,   720.0000,  -971.0000,  3152.0000, -3480.0000,   237.0000,
        -2090.0000,  -364.7500,  2444.0000,    54.7812, -3770.0000,  5264.0000,
         5180.0000, -2460.0000,  1910.0000, -2250.0000, -2032.0000,  2924.0000,
          843.0000,  1999.0000, -3218.0000,  1890.0000,  -995.0000,  -852.5000,
         2266.0000, -2554.0000,   304.0000, -4264.0000, -1149.0000,  -654.0000,
         4320.0000,  2936.0000,   538.5000, -1989.0000, -1241.0000,  -557.5000,
        -2796.0000,  5340.0000,   690.0000,  -130.7500,  -393.5000, -2712.0000,
         2106.0000,  -569.0000,   914.5000,  5924.0000,  2234.0000,  -790.5000,
         1234.0000,  3622.0000,  1504.0000, -1370.0000,   326.0000,  2430.0000,
           46.6250, -4836.0000, -1001.5000, -3182.0000,  4252.0000, -1421.0000,
         3136.0000,  1933.0000,  1683.0000, -5312.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([5, 34359739]), dtype=torch.float16)
First 100 elements: tensor([   18.7031,  -137.8750, -3412.0000, -2196.0000, -4648.0000, -1238.0000,
        -5616.0000,  5764.0000, -1416.0000,   496.7500, -4064.0000, -7892.0000,
         1394.0000, -2214.0000,  3248.0000, -1951.0000, -1226.0000, -2294.0000,
         6988.0000, -1469.0000,  5308.0000,  1285.0000,  3078.0000,  1399.0000,
         -438.2500,    51.3125,  3098.0000,  4288.0000,  2570.0000,  -438.5000,
          452.5000, -2858.0000,  6444.0000,  -241.6250, -1800.0000,   287.0000,
            8.7188,   720.0000,  -971.0000,  3152.0000, -3480.0000,   237.0000,
        -2090.0000,  -364.7500,  2444.0000,    54.7812, -3770.0000,  5264.0000,
         5180.0000, -2460.0000,  1910.0000, -2250.0000, -2032.0000,  2924.0000,
          843.0000,  1999.0000, -3218.0000,  1890.0000,  -995.0000,  -852.5000,
         2266.0000, -2554.0000,   304.0000, -4264.0000, -1149.0000,  -654.0000,
         4320.0000,  2936.0000,   538.5000, -1989.0000, -1241.0000,  -557.5000,
        -2796.0000,  5340.0000,   690.0000,  -130.7500,  -393.5000, -2712.0000,
         2106.0000,  -569.0000,   914.5000,  5924.0000,  2234.0000,  -790.5000,
         1234.0000,  3622.0000,  1504.0000, -1370.0000,   326.0000,  2430.0000,
           46.6250, -4836.0000, -1001.5000, -3182.0000,  4252.0000, -1421.0000,
         3136.0000,  1933.0000,  1683.0000, -5312.0000], dtype=torch.float16)
[accuracy error] paddle.tril(Tensor([1, 1, 2281701379, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131534479 / 2281701379 (5.8%)
Greatest absolute difference: 0.5 at index (0, 0, 2154835681, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 2147483648, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([-0.3496, -0.0688, -0.3468,  0.4636, -0.4442,  0.4501, -0.3234, -0.0336,
         0.0904,  0.3297, -0.0890,  0.4583,  0.4423, -0.3870,  0.1326,  0.0377,
        -0.3782,  0.3372, -0.2334, -0.3933, -0.4498,  0.3371,  0.0596,  0.4362,
        -0.2445, -0.1590, -0.1554,  0.3060,  0.0886,  0.3298, -0.4907,  0.2603,
        -0.3012, -0.1836,  0.4449, -0.4555, -0.2894,  0.1672,  0.2869, -0.0329,
        -0.4487, -0.3781,  0.0891, -0.0379,  0.3699,  0.0354, -0.0105,  0.0212,
         0.2484, -0.2158,  0.1441, -0.1142,  0.4437,  0.3251, -0.1447, -0.4659,
         0.4280,  0.4076,  0.0694,  0.1063,  0.4558,  0.1112, -0.3850, -0.2346,
         0.1967,  0.0070, -0.4203, -0.4308,  0.2456, -0.2740, -0.1086,  0.4893,
         0.1591, -0.1881,  0.4306, -0.4299, -0.0191,  0.4868,  0.3994, -0.0369,
         0.2229, -0.0217,  0.3514,  0.4502, -0.0675, -0.4342, -0.4246, -0.3621,
        -0.3987,  0.2947,  0.1765, -0.0911, -0.4141, -0.3170, -0.3952,  0.3975,
         0.1453,  0.2486, -0.0235, -0.0302])
DESIRED: (shape=torch.Size([1, 1, 2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([-0.3496, -0.0688, -0.3468,  0.4636, -0.4442,  0.4501, -0.3234, -0.0336,
         0.0904,  0.3297, -0.0890,  0.4583,  0.4423, -0.3870,  0.1326,  0.0377,
        -0.3782,  0.3372, -0.2334, -0.3933, -0.4498,  0.3371,  0.0596,  0.4362,
        -0.2445, -0.1590, -0.1554,  0.3060,  0.0886,  0.3298, -0.4907,  0.2603,
        -0.3012, -0.1836,  0.4449, -0.4555, -0.2894,  0.1672,  0.2869, -0.0329,
        -0.4487, -0.3781,  0.0891, -0.0379,  0.3699,  0.0354, -0.0105,  0.0212,
         0.2484, -0.2158,  0.1441, -0.1142,  0.4437,  0.3251, -0.1447, -0.4659,
         0.4280,  0.4076,  0.0694,  0.1063,  0.4558,  0.1112, -0.3850, -0.2346,
         0.1967,  0.0070, -0.4203, -0.4308,  0.2456, -0.2740, -0.1086,  0.4893,
         0.1591, -0.1881,  0.4306, -0.4299, -0.0191,  0.4868,  0.3994, -0.0369,
         0.2229, -0.0217,  0.3514,  0.4502, -0.0675, -0.4342, -0.4246, -0.3621,
        -0.3987,  0.2947,  0.1765, -0.0911, -0.4141, -0.3170, -0.3952,  0.3975,
         0.1453,  0.2486, -0.0235, -0.0302])
[accuracy error] paddle.tril(Tensor([1, 2281701379, 1, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131531538 / 2281701379 (5.8%)
Greatest absolute difference: 0.5 at index (0, 2182134297, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 2147483648, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2281701379, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.2131, -0.4631,  0.3322,  0.4448, -0.4583,  0.0350,  0.0339, -0.2745,
         0.0817, -0.2430,  0.4021,  0.2396, -0.4249,  0.0665, -0.3548,  0.1123,
         0.1847, -0.2654,  0.4807,  0.2102, -0.0103, -0.1091,  0.0256, -0.1815,
        -0.4809,  0.2063, -0.2204, -0.1270,  0.2932,  0.4626, -0.0731,  0.1529,
        -0.2355, -0.4119, -0.1065,  0.0340,  0.4802, -0.1558, -0.0146,  0.2334,
         0.3751, -0.3646,  0.1676,  0.3008, -0.1175, -0.2939, -0.1076, -0.2643,
         0.2756, -0.0490, -0.3151, -0.4799,  0.1774,  0.3508, -0.3869,  0.3971,
         0.0238, -0.2957, -0.0863,  0.1453, -0.3251,  0.1996,  0.2837, -0.2639,
         0.3659, -0.0743,  0.3273,  0.2145, -0.0194, -0.0345,  0.2439, -0.4650,
         0.1135,  0.0229, -0.2710,  0.0632,  0.1155, -0.2568,  0.1764,  0.4018,
         0.1643, -0.0282, -0.2280,  0.0515,  0.2294, -0.1962,  0.1319, -0.3306,
         0.4465, -0.1849,  0.4695,  0.0989, -0.4123, -0.4867,  0.3506, -0.4383,
         0.1277,  0.2263, -0.0280, -0.2316])
DESIRED: (shape=torch.Size([1, 2281701379, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.2131, -0.4631,  0.3322,  0.4448, -0.4583,  0.0350,  0.0339, -0.2745,
         0.0817, -0.2430,  0.4021,  0.2396, -0.4249,  0.0665, -0.3548,  0.1123,
         0.1847, -0.2654,  0.4807,  0.2102, -0.0103, -0.1091,  0.0256, -0.1815,
        -0.4809,  0.2063, -0.2204, -0.1270,  0.2932,  0.4626, -0.0731,  0.1529,
        -0.2355, -0.4119, -0.1065,  0.0340,  0.4802, -0.1558, -0.0146,  0.2334,
         0.3751, -0.3646,  0.1676,  0.3008, -0.1175, -0.2939, -0.1076, -0.2643,
         0.2756, -0.0490, -0.3151, -0.4799,  0.1774,  0.3508, -0.3869,  0.3971,
         0.0238, -0.2957, -0.0863,  0.1453, -0.3251,  0.1996,  0.2837, -0.2639,
         0.3659, -0.0743,  0.3273,  0.2145, -0.0194, -0.0345,  0.2439, -0.4650,
         0.1135,  0.0229, -0.2710,  0.0632,  0.1155, -0.2568,  0.1764,  0.4018,
         0.1643, -0.0282, -0.2280,  0.0515,  0.2294, -0.1962,  0.1319, -0.3306,
         0.4465, -0.1849,  0.4695,  0.0989, -0.4123, -0.4867,  0.3506, -0.4383,
         0.1277,  0.2263, -0.0280, -0.2316])
[accuracy error] paddle.tril(Tensor([10, 228170138, 1],"float32"), 0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131532838 / 2281701380 (5.8%)
Greatest absolute difference: 0.5 at index (9, 134904057, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (9, 93952406, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 228170138, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.3020,  0.3417, -0.4540,  0.4028, -0.1503, -0.4777,  0.2720,  0.2955,
         0.0128, -0.1489,  0.0238,  0.0027, -0.0195, -0.0192,  0.1194, -0.0152,
        -0.1445,  0.2024, -0.3621,  0.1693,  0.0213,  0.1373,  0.2508,  0.4711,
        -0.1068,  0.2333,  0.1065, -0.2487,  0.1802, -0.4276, -0.4267,  0.3193,
         0.0105,  0.1800, -0.3601,  0.3035, -0.3214, -0.3120,  0.1762,  0.1481,
        -0.1073, -0.1029, -0.1624,  0.4613, -0.0595, -0.1327,  0.2212, -0.3085,
        -0.2650, -0.4298, -0.1875,  0.0117,  0.1511,  0.1957, -0.1885,  0.0274,
        -0.1565,  0.3816,  0.2783, -0.2190,  0.0914, -0.1437,  0.0637, -0.1771,
         0.2362,  0.0953, -0.4527,  0.2806,  0.2562,  0.2180,  0.4918, -0.2143,
        -0.2394, -0.0143,  0.3299, -0.0495,  0.0642, -0.1576, -0.2599,  0.3784,
         0.0426,  0.3763,  0.1578, -0.4499, -0.0715, -0.2501,  0.2721, -0.1639,
         0.2704,  0.2147,  0.0717, -0.2736,  0.0177,  0.2086, -0.0240,  0.3966,
         0.1385,  0.4884,  0.3659, -0.1107])
DESIRED: (shape=torch.Size([10, 228170138, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.3020,  0.3417, -0.4540,  0.4028, -0.1503, -0.4777,  0.2720,  0.2955,
         0.0128, -0.1489,  0.0238,  0.0027, -0.0195, -0.0192,  0.1194, -0.0152,
        -0.1445,  0.2024, -0.3621,  0.1693,  0.0213,  0.1373,  0.2508,  0.4711,
        -0.1068,  0.2333,  0.1065, -0.2487,  0.1802, -0.4276, -0.4267,  0.3193,
         0.0105,  0.1800, -0.3601,  0.3035, -0.3214, -0.3120,  0.1762,  0.1481,
        -0.1073, -0.1029, -0.1624,  0.4613, -0.0595, -0.1327,  0.2212, -0.3085,
        -0.2650, -0.4298, -0.1875,  0.0117,  0.1511,  0.1957, -0.1885,  0.0274,
        -0.1565,  0.3816,  0.2783, -0.2190,  0.0914, -0.1437,  0.0637, -0.1771,
         0.2362,  0.0953, -0.4527,  0.2806,  0.2562,  0.2180,  0.4918, -0.2143,
        -0.2394, -0.0143,  0.3299, -0.0495,  0.0642, -0.1576, -0.2599,  0.3784,
         0.0426,  0.3763,  0.1578, -0.4499, -0.0715, -0.2501,  0.2721, -0.1639,
         0.2704,  0.2147,  0.0717, -0.2736,  0.0177,  0.2086, -0.0240,  0.3966,
         0.1385,  0.4884,  0.3659, -0.1107])
[accuracy error] paddle.tril(Tensor([114085069, 20, 1],"float32"), 0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131534480 / 2281701380 (5.8%)
Greatest absolute difference: 0.5 at index (107741784, 1, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (107374182, 8, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([114085069, 20, 1]), dtype=torch.float32)
First 100 elements: tensor([-0.3496, -0.0688, -0.3468,  0.4636, -0.4442,  0.4501, -0.3234, -0.0336,
         0.0904,  0.3297, -0.0890,  0.4583,  0.4423, -0.3870,  0.1326,  0.0377,
        -0.3782,  0.3372, -0.2334, -0.3933, -0.4498,  0.3371,  0.0596,  0.4362,
        -0.2445, -0.1590, -0.1554,  0.3060,  0.0886,  0.3298, -0.4907,  0.2603,
        -0.3012, -0.1836,  0.4449, -0.4555, -0.2894,  0.1672,  0.2869, -0.0329,
        -0.4487, -0.3781,  0.0891, -0.0379,  0.3699,  0.0354, -0.0105,  0.0212,
         0.2484, -0.2158,  0.1441, -0.1142,  0.4437,  0.3251, -0.1447, -0.4659,
         0.4280,  0.4076,  0.0694,  0.1063,  0.4558,  0.1112, -0.3850, -0.2346,
         0.1967,  0.0070, -0.4203, -0.4308,  0.2456, -0.2740, -0.1086,  0.4893,
         0.1591, -0.1881,  0.4306, -0.4299, -0.0191,  0.4868,  0.3994, -0.0369,
         0.2229, -0.0217,  0.3514,  0.4502, -0.0675, -0.4342, -0.4246, -0.3621,
        -0.3987,  0.2947,  0.1765, -0.0911, -0.4141, -0.3170, -0.3952,  0.3975,
         0.1453,  0.2486, -0.0235, -0.0302])
DESIRED: (shape=torch.Size([114085069, 20, 1]), dtype=torch.float32)
First 100 elements: tensor([-0.3496, -0.0688, -0.3468,  0.4636, -0.4442,  0.4501, -0.3234, -0.0336,
         0.0904,  0.3297, -0.0890,  0.4583,  0.4423, -0.3870,  0.1326,  0.0377,
        -0.3782,  0.3372, -0.2334, -0.3933, -0.4498,  0.3371,  0.0596,  0.4362,
        -0.2445, -0.1590, -0.1554,  0.3060,  0.0886,  0.3298, -0.4907,  0.2603,
        -0.3012, -0.1836,  0.4449, -0.4555, -0.2894,  0.1672,  0.2869, -0.0329,
        -0.4487, -0.3781,  0.0891, -0.0379,  0.3699,  0.0354, -0.0105,  0.0212,
         0.2484, -0.2158,  0.1441, -0.1142,  0.4437,  0.3251, -0.1447, -0.4659,
         0.4280,  0.4076,  0.0694,  0.1063,  0.4558,  0.1112, -0.3850, -0.2346,
         0.1967,  0.0070, -0.4203, -0.4308,  0.2456, -0.2740, -0.1086,  0.4893,
         0.1591, -0.1881,  0.4306, -0.4299, -0.0191,  0.4868,  0.3994, -0.0369,
         0.2229, -0.0217,  0.3514,  0.4502, -0.0675, -0.4342, -0.4246, -0.3621,
        -0.3987,  0.2947,  0.1765, -0.0911, -0.4141, -0.3170, -0.3952,  0.3975,
         0.1453,  0.2486, -0.0235, -0.0302])
[accuracy error] paddle.tril(Tensor([2281701379, 1, 1, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131534949 / 2281701379 (5.8%)
Greatest absolute difference: 0.5 at index (2192472339, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (2147483649, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([-0.4259,  0.0179,  0.3129, -0.3824,  0.1203, -0.4887, -0.0252, -0.4072,
        -0.0089,  0.3839, -0.3306,  0.3658, -0.1129,  0.3338, -0.1837, -0.3168,
        -0.3447,  0.2558, -0.2293, -0.0426,  0.3808,  0.1080, -0.3275,  0.4859,
        -0.2281, -0.2182,  0.1562,  0.2448, -0.4139,  0.1964,  0.1841,  0.2679,
         0.2919, -0.3648, -0.4080, -0.4820,  0.1626, -0.4870, -0.4884, -0.1873,
        -0.2249,  0.4734,  0.2401,  0.0821,  0.2590,  0.1225,  0.2088, -0.0673,
        -0.2957, -0.3535,  0.2245,  0.2865, -0.2787,  0.2643, -0.0038,  0.2905,
        -0.4326, -0.1105, -0.3574,  0.2266,  0.0751,  0.4223,  0.1103,  0.2644,
         0.2543, -0.3728, -0.1673, -0.4756,  0.4887, -0.0482, -0.0584, -0.4184,
         0.2965,  0.4134,  0.4098,  0.4131, -0.1589,  0.1756,  0.2018,  0.4360,
        -0.2441, -0.1175, -0.3283,  0.3559, -0.0605,  0.4915, -0.3559, -0.0849,
         0.3966,  0.4934, -0.0933,  0.1274, -0.1859, -0.3502, -0.1655, -0.0430,
        -0.4633, -0.1000, -0.1552, -0.2097])
DESIRED: (shape=torch.Size([2281701379, 1, 1, 1]), dtype=torch.float32)
First 100 elements: tensor([-0.4259,  0.0179,  0.3129, -0.3824,  0.1203, -0.4887, -0.0252, -0.4072,
        -0.0089,  0.3839, -0.3306,  0.3658, -0.1129,  0.3338, -0.1837, -0.3168,
        -0.3447,  0.2558, -0.2293, -0.0426,  0.3808,  0.1080, -0.3275,  0.4859,
        -0.2281, -0.2182,  0.1562,  0.2448, -0.4139,  0.1964,  0.1841,  0.2679,
         0.2919, -0.3648, -0.4080, -0.4820,  0.1626, -0.4870, -0.4884, -0.1873,
        -0.2249,  0.4734,  0.2401,  0.0821,  0.2590,  0.1225,  0.2088, -0.0673,
        -0.2957, -0.3535,  0.2245,  0.2865, -0.2787,  0.2643, -0.0038,  0.2905,
        -0.4326, -0.1105, -0.3574,  0.2266,  0.0751,  0.4223,  0.1103,  0.2644,
         0.2543, -0.3728, -0.1673, -0.4756,  0.4887, -0.0482, -0.0584, -0.4184,
         0.2965,  0.4134,  0.4098,  0.4131, -0.1589,  0.1756,  0.2018,  0.4360,
        -0.2441, -0.1175, -0.3283,  0.3559, -0.0605,  0.4915, -0.3559, -0.0849,
         0.3966,  0.4934, -0.0933,  0.1274, -0.1859, -0.3502, -0.1655, -0.0430,
        -0.4633, -0.1000, -0.1552, -0.2097])
[accuracy error] paddle.tril(Tensor([2281701379, 1],"float32"), diagonal=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131532837 / 2281701379 (5.8%)
Greatest absolute difference: 0.5 at index (2188435299, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (2147483648, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.3020,  0.3417, -0.4540,  0.4028, -0.1503, -0.4777,  0.2720,  0.2955,
         0.0128, -0.1489,  0.0238,  0.0027, -0.0195, -0.0192,  0.1194, -0.0152,
        -0.1445,  0.2024, -0.3621,  0.1693,  0.0213,  0.1373,  0.2508,  0.4711,
        -0.1068,  0.2333,  0.1065, -0.2487,  0.1802, -0.4276, -0.4267,  0.3193,
         0.0105,  0.1800, -0.3601,  0.3035, -0.3214, -0.3120,  0.1762,  0.1481,
        -0.1073, -0.1029, -0.1624,  0.4613, -0.0595, -0.1327,  0.2212, -0.3085,
        -0.2650, -0.4298, -0.1875,  0.0117,  0.1511,  0.1957, -0.1885,  0.0274,
        -0.1565,  0.3816,  0.2783, -0.2190,  0.0914, -0.1437,  0.0637, -0.1771,
         0.2362,  0.0953, -0.4527,  0.2806,  0.2562,  0.2180,  0.4918, -0.2143,
        -0.2394, -0.0143,  0.3299, -0.0495,  0.0642, -0.1576, -0.2599,  0.3784,
         0.0426,  0.3763,  0.1578, -0.4499, -0.0715, -0.2501,  0.2721, -0.1639,
         0.2704,  0.2147,  0.0717, -0.2736,  0.0177,  0.2086, -0.0240,  0.3966,
         0.1385,  0.4884,  0.3659, -0.1107])
DESIRED: (shape=torch.Size([2281701379, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.3020,  0.3417, -0.4540,  0.4028, -0.1503, -0.4777,  0.2720,  0.2955,
         0.0128, -0.1489,  0.0238,  0.0027, -0.0195, -0.0192,  0.1194, -0.0152,
        -0.1445,  0.2024, -0.3621,  0.1693,  0.0213,  0.1373,  0.2508,  0.4711,
        -0.1068,  0.2333,  0.1065, -0.2487,  0.1802, -0.4276, -0.4267,  0.3193,
         0.0105,  0.1800, -0.3601,  0.3035, -0.3214, -0.3120,  0.1762,  0.1481,
        -0.1073, -0.1029, -0.1624,  0.4613, -0.0595, -0.1327,  0.2212, -0.3085,
        -0.2650, -0.4298, -0.1875,  0.0117,  0.1511,  0.1957, -0.1885,  0.0274,
        -0.1565,  0.3816,  0.2783, -0.2190,  0.0914, -0.1437,  0.0637, -0.1771,
         0.2362,  0.0953, -0.4527,  0.2806,  0.2562,  0.2180,  0.4918, -0.2143,
        -0.2394, -0.0143,  0.3299, -0.0495,  0.0642, -0.1576, -0.2599,  0.3784,
         0.0426,  0.3763,  0.1578, -0.4499, -0.0715, -0.2501,  0.2721, -0.1639,
         0.2704,  0.2147,  0.0717, -0.2736,  0.0177,  0.2086, -0.0240,  0.3966,
         0.1385,  0.4884,  0.3659, -0.1107])
[accuracy error] paddle.tril(Tensor([40139882, 107],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 38974197 / 4294967374 (0.9%)
Greatest absolute difference: 0.5 at index (39768278, 103) (up to 0.01 allowed)
Greatest relative difference: inf at index (39768215, 76) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([40139882, 107]), dtype=torch.float16)
First 100 elements: tensor([-0.2903,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([40139882, 107]), dtype=torch.float16)
First 100 elements: tensor([-0.2903,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 526130393 / 4294967300 (12.2%)
Greatest absolute difference: 0.5 at index (536873417, 1, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000, -0.1035,  0.0000,  0.0000,  0.0000,  0.4915,  0.0000,
         0.0000,  0.0000, -0.4539,  0.0000,  0.0000,  0.0000,  0.2817,  0.0000,
         0.0000,  0.0000, -0.1903,  0.0000,  0.0000,  0.0000, -0.1133,  0.0000,
         0.0000,  0.0000,  0.2637,  0.0000,  0.0000,  0.0000, -0.1792,  0.0000,
         0.0000,  0.0000,  0.2103,  0.0000,  0.0000,  0.0000, -0.3789,  0.0000,
         0.0000,  0.0000,  0.2612,  0.0000,  0.0000,  0.0000, -0.2625,  0.0000,
         0.0000,  0.0000, -0.0901,  0.0000,  0.0000,  0.0000, -0.4077,  0.0000,
         0.0000,  0.0000, -0.1653,  0.0000,  0.0000,  0.0000, -0.0551,  0.0000,
         0.0000,  0.0000,  0.1862,  0.0000,  0.0000,  0.0000, -0.3669,  0.0000,
         0.0000,  0.0000, -0.4172,  0.0000,  0.0000,  0.0000,  0.3257,  0.0000,
         0.0000,  0.0000,  0.1364,  0.0000,  0.0000,  0.0000,  0.1593,  0.0000,
         0.0000,  0.0000,  0.1439,  0.0000,  0.0000,  0.0000, -0.1381,  0.0000,
         0.0000,  0.0000, -0.4495,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000, -0.1035,  0.0000,  0.0000,  0.0000,  0.4915,  0.0000,
         0.0000,  0.0000, -0.4539,  0.0000,  0.0000,  0.0000,  0.2817,  0.0000,
         0.0000,  0.0000, -0.1903,  0.0000,  0.0000,  0.0000, -0.1133,  0.0000,
         0.0000,  0.0000,  0.2637,  0.0000,  0.0000,  0.0000, -0.1792,  0.0000,
         0.0000,  0.0000,  0.2103,  0.0000,  0.0000,  0.0000, -0.3789,  0.0000,
         0.0000,  0.0000,  0.2612,  0.0000,  0.0000,  0.0000, -0.2625,  0.0000,
         0.0000,  0.0000, -0.0901,  0.0000,  0.0000,  0.0000, -0.4077,  0.0000,
         0.0000,  0.0000, -0.1653,  0.0000,  0.0000,  0.0000, -0.0551,  0.0000,
         0.0000,  0.0000,  0.1862,  0.0000,  0.0000,  0.0000, -0.3669,  0.0000,
         0.0000,  0.0000, -0.4172,  0.0000,  0.0000,  0.0000,  0.3257,  0.0000,
         0.0000,  0.0000,  0.1364,  0.0000,  0.0000,  0.0000,  0.1593,  0.0000,
         0.0000,  0.0000,  0.1439,  0.0000,  0.0000,  0.0000, -0.1381,  0.0000,
         0.0000,  0.0000, -0.4495,  0.0000], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1578382092 / 4294967300 (36.7%)
Greatest absolute difference: 0.5 at index (536871090, 1, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767,  0.0000, -0.3640,  0.1121, -0.1339,  0.0000,  0.1416, -0.4839,
        -0.0632,  0.0000, -0.4048, -0.3345, -0.2469,  0.0000,  0.2661, -0.2656,
        -0.1099,  0.0000, -0.1364, -0.1432,  0.3774,  0.0000,  0.0820,  0.0813,
        -0.3999,  0.0000, -0.1329,  0.4927,  0.0399,  0.0000,  0.2284,  0.1534,
        -0.2499,  0.0000, -0.3093,  0.3665,  0.3987,  0.0000, -0.1891, -0.1995,
        -0.4219,  0.0000,  0.1494, -0.3684,  0.4568,  0.0000, -0.0494, -0.1582,
        -0.0165,  0.0000, -0.3401, -0.0749, -0.2607,  0.0000,  0.3325,  0.2454,
         0.4048,  0.0000, -0.4753,  0.1224, -0.1229,  0.0000, -0.1259, -0.1699,
         0.1832,  0.0000, -0.1832,  0.3757,  0.2053,  0.0000,  0.3728,  0.1309,
         0.3987,  0.0000,  0.1087, -0.2168,  0.3665,  0.0000,  0.1132,  0.4812,
         0.1586,  0.0000, -0.4602, -0.0882,  0.0036,  0.0000, -0.3066,  0.1199,
        -0.3162,  0.0000,  0.2063,  0.4124, -0.0046,  0.0000,  0.0629, -0.0718,
        -0.2174,  0.0000,  0.4141,  0.1646], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767,  0.0000, -0.3640,  0.1121, -0.1339,  0.0000,  0.1416, -0.4839,
        -0.0632,  0.0000, -0.4048, -0.3345, -0.2469,  0.0000,  0.2661, -0.2656,
        -0.1099,  0.0000, -0.1364, -0.1432,  0.3774,  0.0000,  0.0820,  0.0813,
        -0.3999,  0.0000, -0.1329,  0.4927,  0.0399,  0.0000,  0.2284,  0.1534,
        -0.2499,  0.0000, -0.3093,  0.3665,  0.3987,  0.0000, -0.1891, -0.1995,
        -0.4219,  0.0000,  0.1494, -0.3684,  0.4568,  0.0000, -0.0494, -0.1582,
        -0.0165,  0.0000, -0.3401, -0.0749, -0.2607,  0.0000,  0.3325,  0.2454,
         0.4048,  0.0000, -0.4753,  0.1224, -0.1229,  0.0000, -0.1259, -0.1699,
         0.1832,  0.0000, -0.1832,  0.3757,  0.2053,  0.0000,  0.3728,  0.1309,
         0.3987,  0.0000,  0.1087, -0.2168,  0.3665,  0.0000,  0.1132,  0.4812,
         0.1586,  0.0000, -0.4602, -0.0882,  0.0036,  0.0000, -0.3066,  0.1199,
        -0.3162,  0.0000,  0.2063,  0.4124, -0.0046,  0.0000,  0.0629, -0.0718,
        -0.2174,  0.0000,  0.4141,  0.1646], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104503536 / 4294967300 (49.0%)
Greatest absolute difference: 0.5 at index (536871714, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.4795, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578, -0.4756,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751, -0.0400, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
        -0.4431,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027, -0.4839,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142, -0.1323,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.3445,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
        -0.2396,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809, -0.3486, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.4795, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578, -0.4756,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751, -0.0400, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
        -0.4431,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027, -0.4839,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142, -0.1323,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.3445,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
        -0.2396,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809, -0.3486, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104506564 / 4294967300 (49.0%)
Greatest absolute difference: 0.5 at index (536871496, 0, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104509812 / 4294967298 (49.0%)
Greatest absolute difference: 0.5 at index (1, 357914641, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 357913941, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000, -0.1808,  0.0000,  0.4373, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094, -0.0583, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225, -0.3723,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720, -0.4270, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.2627,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280, -0.0712,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416, -0.2465,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502, -0.4495,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
        -0.4861, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251, -0.4116], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000, -0.1808,  0.0000,  0.4373, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094, -0.0583, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225, -0.3723,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720, -0.4270, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.2627,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280, -0.0712,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416, -0.2465,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502, -0.4495,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
        -0.4861, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251, -0.4116], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104507729 / 4294967298 (49.0%)
Greatest absolute difference: 0.5 at index (1, 357914223, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 357913941, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000, -0.4539,  0.0000, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432, -0.1133,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.3184,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.1904, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077, -0.2201,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.1862,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352, -0.0861,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.1409, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495, -0.1389], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000, -0.4539,  0.0000, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432, -0.1133,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.3184,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.1904, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077, -0.2201,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.1862,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352, -0.0861,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.1409, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495, -0.1389], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104503533 / 4294967298 (49.0%)
Greatest absolute difference: 0.5 at index (1, 357915545, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 357913941, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3000,  0.0000,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.4795, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578, -0.4756,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751, -0.0400, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
        -0.4431,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027, -0.4839,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142, -0.1323,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.3445,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
        -0.2396,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809, -0.3486, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3000,  0.0000,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.4795, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578, -0.4756,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751, -0.0400, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
        -0.4431,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027, -0.4839,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142, -0.1323,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.3445,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
        -0.2396,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809, -0.3486, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104507793 / 4294967298 (49.0%)
Greatest absolute difference: 0.5 at index (1, 357914298, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 357913941, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
[accuracy error] paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104506562 / 4294967298 (49.0%)
Greatest absolute difference: 0.5 at index (1, 357915109, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 357913941, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([1, 1, 2048, 2097153],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7994 / 4294969344 (0.0%)
Greatest absolute difference: 0.5 at index (0, 0, 2047, 2095704) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 2047, 2088964) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 2048, 2097153]), dtype=torch.float16)
First 100 elements: tensor([-0.2903, -0.3984, -0.1808,  0.1515,  0.4373, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094, -0.0583, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225, -0.3723,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720, -0.4270, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.2627,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280, -0.0712,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416, -0.2465,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502, -0.4495,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
        -0.4861, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251, -0.4116], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 2048, 2097153]), dtype=torch.float16)
First 100 elements: tensor([-0.2903, -0.3984, -0.1808,  0.1515,  0.4373, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094, -0.0583, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225, -0.3723,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720, -0.4270, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.2627,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280, -0.0712,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416, -0.2465,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502, -0.4495,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
        -0.4861, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251, -0.4116], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([1, 390451573, 1, 11],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 318866467 / 4294967303 (7.4%)
Greatest absolute difference: 0.5 at index (0, 357914182, 0, 5) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 357913941, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 390451573, 1, 11]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3184, -0.1035,  0.0358, -0.2417,  0.0515,  0.4915,  0.2150,
         0.0307,  0.2976, -0.4539,  0.0000, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432,  0.0000,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.0000,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.0000, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077,  0.0000,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.0000,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352,  0.0000,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.0000, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 390451573, 1, 11]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3184, -0.1035,  0.0358, -0.2417,  0.0515,  0.4915,  0.2150,
         0.0307,  0.2976, -0.4539,  0.0000, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432,  0.0000,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.0000,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.0000, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077,  0.0000,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.0000,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352,  0.0000,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.0000, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495,  0.0000], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([1, 429496730, 1, 10],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 631353098 / 4294967300 (14.7%)
Greatest absolute difference: 0.5 at index (0, 357914735, 0, 5) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 357913941, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 429496730, 1, 10]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.0000, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578,  0.0000,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751,  0.0000, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
         0.0000,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027,  0.0000,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142,  0.0000,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.0000,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
         0.0000,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809,  0.0000, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 429496730, 1, 10]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.0000, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578,  0.0000,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751,  0.0000, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
         0.0000,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027,  0.0000,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142,  0.0000,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.0000,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
         0.0000,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809,  0.0000, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([114085069, 20, 1],"float32"), 0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6576416 / 2281701380 (0.3%)
Greatest absolute difference: 0.5 at index (112602599, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (107374183, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([114085069, 20, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.3020,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0213,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
        -0.1073,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0914,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0426,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000])
DESIRED: (shape=torch.Size([114085069, 20, 1]), dtype=torch.float32)
First 100 elements: tensor([ 0.3020,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0213,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
        -0.1073,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0914,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0426,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000])
[accuracy error] paddle.triu(Tensor([2, 1, 1, 2147483649],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 4294967298 (0.0%)
Greatest absolute difference: 0.2939453125 at index (1, 0, 0, 2147483645) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 0, 0, 2147483644) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 1, 2147483649]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 1, 1, 2147483649]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([2, 21262215, 1, 101],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 121413417 / 4294967430 (2.8%)
Greatest absolute difference: 0.5 at index (1, 20035573, 0, 39) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 20035547, 0, 48) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 21262215, 1, 101]), dtype=torch.float16)
First 100 elements: tensor([ 0.3167,  0.3184, -0.1035,  0.0358, -0.2417,  0.0515,  0.4915,  0.2150,
         0.0307,  0.2976, -0.4539,  0.2391, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432, -0.1133,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.3184,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.1904, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077, -0.2201,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.1862,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352, -0.0861,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.1409, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495, -0.1389], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 21262215, 1, 101]), dtype=torch.float16)
First 100 elements: tensor([ 0.3167,  0.3184, -0.1035,  0.0358, -0.2417,  0.0515,  0.4915,  0.2150,
         0.0307,  0.2976, -0.4539,  0.2391, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432, -0.1133,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.3184,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.1904, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077, -0.2201,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.1862,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352, -0.0861,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.1409, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495, -0.1389], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([390451573, 1, 1, 11],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 318865312 / 4294967303 (7.4%)
Greatest absolute difference: 0.5 at index (357914090, 0, 0, 5) (up to 0.01 allowed)
Greatest relative difference: inf at index (357913941, 0, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([390451573, 1, 1, 11]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000, -0.3984, -0.1808,  0.1515,  0.4373, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094,  0.0000, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225,  0.0000,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720,  0.0000, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.0000,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280,  0.0000,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416,  0.0000,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502,  0.0000,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
         0.0000, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([390451573, 1, 1, 11]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000, -0.3984, -0.1808,  0.1515,  0.4373, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094,  0.0000, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225,  0.0000,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720,  0.0000, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.0000,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280,  0.0000,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416,  0.0000,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502,  0.0000,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
         0.0000, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251,  0.0000], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([42524429, 1, 1, 101],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 121411652 / 4294967329 (2.8%)
Greatest absolute difference: 0.5 at index (41297787, 0, 0, 84) (up to 0.01 allowed)
Greatest relative difference: inf at index (41297762, 0, 0, 48) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([42524429, 1, 1, 101]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
DESIRED: (shape=torch.Size([42524429, 1, 1, 101]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
[accuracy error] paddle.triu(Tensor([429496730, 1, 1, 10],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 631353098 / 4294967300 (14.7%)
Greatest absolute difference: 0.5 at index (357914735, 0, 0, 5) (up to 0.01 allowed)
Greatest relative difference: inf at index (357913941, 0, 0, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([429496730, 1, 1, 10]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.0000, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578,  0.0000,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751,  0.0000, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
         0.0000,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027,  0.0000,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142,  0.0000,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.0000,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
         0.0000,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809,  0.0000, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
DESIRED: (shape=torch.Size([429496730, 1, 1, 10]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.0000, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578,  0.0000,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751,  0.0000, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
         0.0000,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027,  0.0000,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142,  0.0000,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.0000,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
         0.0000,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809,  0.0000, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104507795 / 4294967300 (49.0%)
Greatest absolute difference: 0.5 at index (536871090, 1, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2104506564 / 4294967300 (49.0%)
Greatest absolute difference: 0.5 at index (536871496, 0, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1578382715 / 4294967300 (36.7%)
Greatest absolute difference: 0.5 at index (536871714, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3000,  0.3596,  0.0000, -0.0091,  0.4587,  0.1450,  0.0000, -0.4807,
        -0.3296, -0.2715,  0.0000, -0.0591,  0.2162, -0.0301,  0.0000,  0.1637,
         0.3066, -0.2773,  0.0000,  0.4578, -0.4756,  0.2004,  0.0000, -0.3484,
        -0.0544,  0.4980,  0.0000,  0.0828, -0.1412, -0.4751,  0.0000, -0.2935,
         0.1678,  0.2083,  0.0000, -0.0630, -0.3599,  0.4380,  0.0000, -0.1908,
        -0.4431,  0.0914,  0.0000, -0.1411, -0.1320,  0.0577,  0.0000, -0.4050,
         0.1807,  0.1027,  0.0000,  0.0962,  0.2474, -0.4358,  0.0000, -0.2627,
         0.0346, -0.0311,  0.0000,  0.2142, -0.1323,  0.3357,  0.0000,  0.1804,
         0.0587, -0.2401,  0.0000,  0.0681,  0.1766, -0.1037,  0.0000,  0.0062,
         0.1685, -0.0346,  0.0000, -0.1345,  0.4670,  0.3071,  0.0000, -0.0388,
        -0.2396,  0.4255,  0.0000, -0.2057,  0.2472,  0.0298,  0.0000,  0.2759,
        -0.1151,  0.3809,  0.0000, -0.3152,  0.3613,  0.4951,  0.0000,  0.1167,
         0.0810, -0.3635,  0.0000,  0.1355], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3000,  0.3596,  0.0000, -0.0091,  0.4587,  0.1450,  0.0000, -0.4807,
        -0.3296, -0.2715,  0.0000, -0.0591,  0.2162, -0.0301,  0.0000,  0.1637,
         0.3066, -0.2773,  0.0000,  0.4578, -0.4756,  0.2004,  0.0000, -0.3484,
        -0.0544,  0.4980,  0.0000,  0.0828, -0.1412, -0.4751,  0.0000, -0.2935,
         0.1678,  0.2083,  0.0000, -0.0630, -0.3599,  0.4380,  0.0000, -0.1908,
        -0.4431,  0.0914,  0.0000, -0.1411, -0.1320,  0.0577,  0.0000, -0.4050,
         0.1807,  0.1027,  0.0000,  0.0962,  0.2474, -0.4358,  0.0000, -0.2627,
         0.0346, -0.0311,  0.0000,  0.2142, -0.1323,  0.3357,  0.0000,  0.1804,
         0.0587, -0.2401,  0.0000,  0.0681,  0.1766, -0.1037,  0.0000,  0.0062,
         0.1685, -0.0346,  0.0000, -0.1345,  0.4670,  0.3071,  0.0000, -0.0388,
        -0.2396,  0.4255,  0.0000, -0.2057,  0.2472,  0.0298,  0.0000,  0.2759,
        -0.1151,  0.3809,  0.0000, -0.3152,  0.3613,  0.4951,  0.0000,  0.1167,
         0.0810, -0.3635,  0.0000,  0.1355], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 526124747 / 4294967300 (12.2%)
Greatest absolute difference: 0.5 at index (536871262, 0, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (536870912, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000, -0.3984,  0.0000,  0.0000,  0.0000, -0.3794,  0.0000,  0.0000,
         0.0000,  0.3208,  0.0000,  0.0000,  0.0000, -0.0324,  0.0000,  0.0000,
         0.0000,  0.0081,  0.0000,  0.0000,  0.0000, -0.0225,  0.0000,  0.0000,
         0.0000, -0.4036,  0.0000,  0.0000,  0.0000,  0.4636,  0.0000,  0.0000,
         0.0000, -0.4270,  0.0000,  0.0000,  0.0000,  0.1278,  0.0000,  0.0000,
         0.0000,  0.4299,  0.0000,  0.0000,  0.0000,  0.4504,  0.0000,  0.0000,
         0.0000,  0.0938,  0.0000,  0.0000,  0.0000, -0.0877,  0.0000,  0.0000,
         0.0000,  0.3438,  0.0000,  0.0000,  0.0000,  0.2007,  0.0000,  0.0000,
         0.0000,  0.1416,  0.0000,  0.0000,  0.0000,  0.1322,  0.0000,  0.0000,
         0.0000, -0.2661,  0.0000,  0.0000,  0.0000, -0.4495,  0.0000,  0.0000,
         0.0000,  0.4517,  0.0000,  0.0000,  0.0000,  0.3433,  0.0000,  0.0000,
         0.0000, -0.3164,  0.0000,  0.0000,  0.0000,  0.1893,  0.0000,  0.0000,
         0.0000,  0.3557,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([1073741825, 2, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000, -0.3984,  0.0000,  0.0000,  0.0000, -0.3794,  0.0000,  0.0000,
         0.0000,  0.3208,  0.0000,  0.0000,  0.0000, -0.0324,  0.0000,  0.0000,
         0.0000,  0.0081,  0.0000,  0.0000,  0.0000, -0.0225,  0.0000,  0.0000,
         0.0000, -0.4036,  0.0000,  0.0000,  0.0000,  0.4636,  0.0000,  0.0000,
         0.0000, -0.4270,  0.0000,  0.0000,  0.0000,  0.1278,  0.0000,  0.0000,
         0.0000,  0.4299,  0.0000,  0.0000,  0.0000,  0.4504,  0.0000,  0.0000,
         0.0000,  0.0938,  0.0000,  0.0000,  0.0000, -0.0877,  0.0000,  0.0000,
         0.0000,  0.3438,  0.0000,  0.0000,  0.0000,  0.2007,  0.0000,  0.0000,
         0.0000,  0.1416,  0.0000,  0.0000,  0.0000,  0.1322,  0.0000,  0.0000,
         0.0000, -0.2661,  0.0000,  0.0000,  0.0000, -0.4495,  0.0000,  0.0000,
         0.0000,  0.4517,  0.0000,  0.0000,  0.0000,  0.3433,  0.0000,  0.0000,
         0.0000, -0.3164,  0.0000,  0.0000,  0.0000,  0.1893,  0.0000,  0.0000,
         0.0000,  0.3557,  0.0000,  0.0000], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 4294967298 (0.0%)
Greatest absolute difference: 0.427978515625 at index (2, 1, 715827876) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1, 715827876) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.3167,  0.3184, -0.1035,  0.0358, -0.2417,  0.0515,  0.4915,  0.2150,
         0.0307,  0.2976, -0.4539,  0.2391, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432, -0.1133,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.3184,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.1904, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077, -0.2201,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.1862,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352, -0.0861,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.1409, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495, -0.1389], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.3167,  0.3184, -0.1035,  0.0358, -0.2417,  0.0515,  0.4915,  0.2150,
         0.0307,  0.2976, -0.4539,  0.2391, -0.1921,  0.1271,  0.2817,  0.0760,
        -0.0901,  0.0342, -0.1903, -0.4016,  0.4482, -0.0432, -0.1133,  0.2383,
        -0.4932, -0.3367,  0.2637,  0.0826, -0.1716, -0.3003, -0.1792,  0.3862,
        -0.3381,  0.3184,  0.2103,  0.0761,  0.1884,  0.3650, -0.3789, -0.3530,
        -0.2651, -0.1232,  0.2612,  0.3865,  0.1904, -0.0627, -0.2625, -0.1843,
         0.4143,  0.1510, -0.0901, -0.3323,  0.1750,  0.1814, -0.4077, -0.2201,
         0.3801, -0.4724, -0.1653, -0.1407,  0.4587,  0.4985, -0.0551,  0.3916,
         0.4011,  0.4956,  0.1862,  0.1752, -0.2043,  0.4756, -0.3669,  0.3245,
         0.1041, -0.0047, -0.4172,  0.3235,  0.2352, -0.0861,  0.3257,  0.3054,
         0.4302, -0.4041,  0.1364, -0.0690, -0.3271,  0.0646,  0.1593, -0.3762,
         0.1409, -0.0122,  0.1439, -0.3086, -0.4966,  0.2896, -0.1381,  0.4758,
        -0.1018,  0.3289, -0.4495, -0.1389], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 4294967298 (0.0%)
Greatest absolute difference: 0.441162109375 at index (2, 1, 715827877) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1, 715827876) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345, -0.2469,  0.2085,  0.2661, -0.2656,
        -0.1099,  0.1318, -0.1364, -0.1432,  0.3774, -0.3376,  0.0820,  0.0813,
        -0.3999,  0.0919, -0.1329,  0.4927,  0.0399, -0.4336,  0.2284,  0.1534,
        -0.2499,  0.2092, -0.3093,  0.3665,  0.3987, -0.0079, -0.1891, -0.1995,
        -0.4219,  0.3872,  0.1494, -0.3684,  0.4568,  0.2339, -0.0494, -0.1582,
        -0.0165,  0.4688, -0.3401, -0.0749, -0.2607,  0.0429,  0.3325,  0.2454,
         0.4048, -0.0188, -0.4753,  0.1224, -0.1229, -0.3369, -0.1259, -0.1699,
         0.1832, -0.0772, -0.1832,  0.3757,  0.2053,  0.4585,  0.3728,  0.1309,
         0.3987,  0.3352,  0.1087, -0.2168,  0.3665,  0.0018,  0.1132,  0.4812,
         0.1586, -0.0803, -0.4602, -0.0882,  0.0036, -0.3555, -0.3066,  0.1199,
        -0.3162,  0.0117,  0.2063,  0.4124, -0.0046,  0.3484,  0.0629, -0.0718,
        -0.2174, -0.4917,  0.4141,  0.1646], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 4294967298 (0.0%)
Greatest absolute difference: 0.498046875 at index (2, 1, 715827880) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1, 715827876) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.2284,  0.2252,  0.0267,  0.3411,  0.3545, -0.3999,
         0.1339, -0.3325, -0.4885,  0.0500, -0.1874,  0.0018,  0.3162,  0.2646,
         0.2769,  0.2090, -0.0864,  0.2140,  0.4626, -0.0415, -0.2494, -0.2966,
        -0.2212, -0.4565,  0.2778, -0.0782,  0.4875, -0.3574, -0.2786,  0.4060,
         0.4116, -0.3142,  0.0892, -0.0859, -0.0681, -0.1167, -0.1655,  0.1893,
         0.1059, -0.0648, -0.0642,  0.1221,  0.3030,  0.2563, -0.2656,  0.3027,
         0.3379,  0.0584,  0.0504, -0.1087, -0.2081,  0.2939, -0.4463, -0.3677,
         0.2015, -0.0643,  0.2246, -0.4761, -0.4546,  0.1061,  0.3420,  0.0377,
        -0.4053,  0.4744,  0.0213,  0.0246,  0.0705,  0.4639,  0.1063,  0.3130,
         0.3706, -0.3567,  0.0151, -0.0392, -0.4014, -0.4036, -0.3882, -0.2942,
         0.3308,  0.0193, -0.4907, -0.4050, -0.3032, -0.1007, -0.1157, -0.3989,
        -0.0320, -0.2949,  0.1492,  0.0728,  0.3828, -0.4338, -0.0164,  0.0840,
        -0.4299, -0.3181, -0.4534,  0.1868], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 4294967298 (0.0%)
Greatest absolute difference: 0.438720703125 at index (2, 1, 715827877) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1, 715827876) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.4795, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578, -0.4756,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751, -0.0400, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
        -0.4431,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027, -0.4839,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142, -0.1323,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.3445,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
        -0.2396,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809, -0.3486, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.3596,  0.0116, -0.0091,  0.4587,  0.1450,  0.0537, -0.4807,
        -0.3296, -0.2715,  0.4795, -0.0591,  0.2162, -0.0301, -0.1171,  0.1637,
         0.3066, -0.2773, -0.3254,  0.4578, -0.4756,  0.2004,  0.1329, -0.3484,
        -0.0544,  0.4980,  0.1639,  0.0828, -0.1412, -0.4751, -0.0400, -0.2935,
         0.1678,  0.2083,  0.2800, -0.0630, -0.3599,  0.4380, -0.2964, -0.1908,
        -0.4431,  0.0914, -0.2842, -0.1411, -0.1320,  0.0577, -0.0305, -0.4050,
         0.1807,  0.1027, -0.4839,  0.0962,  0.2474, -0.4358, -0.2273, -0.2627,
         0.0346, -0.0311,  0.1833,  0.2142, -0.1323,  0.3357,  0.4468,  0.1804,
         0.0587, -0.2401,  0.2476,  0.0681,  0.1766, -0.1037,  0.3445,  0.0062,
         0.1685, -0.0346, -0.2106, -0.1345,  0.4670,  0.3071,  0.1626, -0.0388,
        -0.2396,  0.4255, -0.3811, -0.2057,  0.2472,  0.0298, -0.2571,  0.2759,
        -0.1151,  0.3809, -0.3486, -0.3152,  0.3613,  0.4951, -0.3005,  0.1167,
         0.0810, -0.3635,  0.2087,  0.1355], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 4294967298 (0.0%)
Greatest absolute difference: 0.481201171875 at index (2, 1, 715827879) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1, 715827876) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094, -0.0583, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225, -0.3723,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720, -0.4270, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.2627,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280, -0.0712,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416, -0.2465,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502, -0.4495,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
        -0.4861, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251, -0.4116], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 2, 715827883]), dtype=torch.float16)
First 100 elements: tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.3794, -0.3770,  0.3811,
        -0.4421,  0.3208, -0.4094, -0.0583, -0.2742, -0.0324,  0.2407, -0.3340,
        -0.3596,  0.0081,  0.2043,  0.3154,  0.4478, -0.0225, -0.3723,  0.4207,
         0.2561, -0.4036, -0.0212,  0.1565, -0.4753,  0.4636,  0.1033,  0.1194,
        -0.0720, -0.4270, -0.2869,  0.1863, -0.4890,  0.1278, -0.2961,  0.4133,
        -0.4470,  0.4299, -0.3911,  0.0063,  0.2627,  0.4504,  0.3979, -0.4778,
         0.2849,  0.0938, -0.1367, -0.0742,  0.4216, -0.0877, -0.4280, -0.0712,
         0.1475,  0.3438, -0.0983,  0.0543, -0.3560,  0.2007,  0.2571,  0.3396,
         0.1342,  0.1416, -0.2465,  0.2717,  0.2566,  0.1322, -0.0506,  0.4849,
         0.1293, -0.2661, -0.1233,  0.3599,  0.4502, -0.4495,  0.4077,  0.1956,
        -0.3440,  0.4517, -0.1064,  0.2783, -0.0221,  0.3433,  0.2703,  0.2203,
        -0.4861, -0.3164,  0.1188,  0.0019, -0.4424,  0.1893,  0.0056,  0.4062,
         0.1757,  0.3557, -0.1251, -0.4116], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 4294967298 (0.0%)
Greatest absolute difference: 0.359619140625 at index (2, 2, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3167,  0.3184, -0.1035,  0.0358,  0.0000,  0.0515,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3167,  0.3184, -0.1035,  0.0358,  0.0000,  0.0515,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 4294967298 (0.0%)
Greatest absolute difference: 0.494384765625 at index (2, 4, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345,  0.0000,  0.2085,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([ 0.3767, -0.1814, -0.3640,  0.1121, -0.1339,  0.1761,  0.1416, -0.4839,
        -0.0632, -0.2355, -0.4048, -0.3345,  0.0000,  0.2085,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 4294967298 (0.0%)
Greatest absolute difference: 0.47119140625 at index (2, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.0000,  0.2252,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([-0.3525,  0.4700,  0.0000,  0.2252,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000,  0.0000,  0.0000], dtype=torch.float16)
[accuracy error] paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4294967298 (0.0%)
Greatest absolute difference: 0.054412841796875 at index (2, 0, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([0.0000, 0.3596, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 715827883, 2]), dtype=torch.float16)
First 100 elements: tensor([0.0000, 0.3596, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0000], dtype=torch.float16)
