{
      "paddle.distributed.fleet.meta_parallel.ColumnParallelLinear": {
            "torch_api": "fairscale.nn.model_parallel.layers.ColumnParallelLinear",
            "paddle_torch_args_map": {
                  "in_features": "in_features",
                  "out_features": "out_features",
                  "has_bias": "bias",
                  "gather_output": "gather_output"
            },
            "min_input_args": 0,
            "paddle_default_kwargs": {
                  "has_bias": "True"
            }
      },
      "paddle.distributed.fleet.meta_parallel.RowParallelLinear": {
            "torch_api": "fairscale.nn.model_parallel.layers.RowParallelLinear",
            "paddle_torch_args_map": {
                  "in_features": "in_features",
                  "out_features": "out_features",
                  "has_bias": "bias",
                  "input_is_parallel": "input_is_parallel"
            },
            "min_input_args": 0,
            "paddle_default_kwargs": {
                  "has_bias": "True"
            }
      },
      "paddle.amp.GradScaler": {
            "torch_api": "torch.cuda.amp.GradScaler",
            "paddle_torch_args_map": {
                  "init_loss_scaling": "init_scale",
                  "incr_ratio": "growth_factor",
                  "decr_ratio": "backoff_factor",
                  "incr_every_n_steps": "growth_interval",
                  "enable": "enabled"
            },
            "min_input_args": 0,
            "paddle_default_kwargs": {
                  "incr_every_n_steps": 2000,
                  "init_loss_scaling": 65536.0
            }
      },
      "paddle.distribution.Binomial": {
            "torch_api": "torch.distributions.Binomial",
            "paddle_torch_args_map": {
                  "total_count": "total_count",
                  "probs": "probs"
            },
            "min_input_args": 0,
            "paddle_default_kwargs": {
                  "total_count": "1"
            }
      },
      "paddle.distribution.StudentT": {
            "torch_api": "torch.distributions.studentT.StudentT",
            "paddle_torch_args_map": {
                  "df": "df",
                  "loc": "loc",
                  "scale": "scale"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "loc": 0.0,
                  "scale": 1.0
            }
      },
      "paddle.distributed.spawn": {
            "torch_api": "torch.multiprocessing.spawn",
            "paddle_torch_args_map": {
                  "func": "fn",
                  "args": "args",
                  "nprocs": "nprocs",
                  "join": "join",
                  "daemon": "daemon"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "nprocs": "1"
            }
      },
      "paddle.base.framework.EagerParamBase.from_tensor": {
            "torch_api": "torch.nn.Parameter",
            "paddle_torch_args_map": {
                  "tensor": "data",
                  "trainable": "requires_grad"
            },
            "min_input_args": 0,
            "paddle_default_kwargs": {
                  "tensor": "paddle.to_tensor([])"
            }
      },
      "paddle.nn.TransformerDecoderLayer": {
            "torch_api": "torch.nn.TransformerDecoderLayer",
            "paddle_torch_args_map": {
                  "d_model": "d_model",
                  "nhead": "nhead",
                  "dim_feedforward": "dim_feedforward",
                  "dropout": "dropout",
                  "activation": "activation",
                  "layer_norm_eps": "layer_norm_eps",
                  "normalize_before": "norm_first",
                  "bias_attr": "bias"
            },
            "min_input_args": 2,
            "paddle_default_kwargs": {
                  "dim_feedforward": 2048
            }
      },
      "paddle.nn.TransformerEncoderLayer": {
            "torch_api": "torch.nn.TransformerEncoderLayer",
            "paddle_torch_args_map": {
                  "d_model": "d_model",
                  "nhead": "nhead",
                  "dim_feedforward": "dim_feedforward",
                  "dropout": "dropout",
                  "activation": "activation",
                  "layer_norm_eps": "layer_norm_eps",
                  "normalize_before": "norm_first",
                  "bias_attr": "bias"
            },
            "min_input_args": 2,
            "paddle_default_kwargs": {
                  "dim_feedforward": 2048
            }
      },
      "paddle.nn.functional.feature_alpha_dropout": {
            "torch_api": "torch.nn.functional.feature_alpha_dropout",
            "paddle_torch_args_map": {
                  "x": "input",
                  "p": "p",
                  "training": "training"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "training": "False"
            }
      },
      "paddle.optimizer.Adadelta": {
            "torch_api": "torch.optim.Adadelta",
            "paddle_torch_args_map": {
                  "parameters": "params",
                  "learning_rate": "lr",
                  "rho": "rho",
                  "epsilon": "eps",
                  "weight_decay": "weight_decay"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "rho": 0.9,
                  "weight_decay": 0.0,
                  "learning_rate": 1.0
            }
      },
      "paddle.optimizer.Adagrad": {
            "torch_api": "torch.optim.Adagrad",
            "paddle_torch_args_map": {
                  "parameters": "params",
                  "learning_rate": "lr",
                  "weight_decay": "weight_decay",
                  "initial_accumulator_value": "initial_accumulator_value",
                  "epsilon": "eps"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "weight_decay": 0.0,
                  "epsilon": 1e-10,
                  "learning_rate": 0.01
            }
      },
      "paddle.optimizer.RMSProp": {
            "torch_api": "torch.optim.RMSprop",
            "paddle_torch_args_map": {
                  "parameters": "params",
                  "learning_rate": "lr",
                  "rho": "alpha",
                  "epsilon": "eps",
                  "weight_decay": "weight_decay",
                  "momentum": "momentum",
                  "centered": "centered"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "weight_decay": 0.0,
                  "epsilon": 1e-08,
                  "learning_rate": 0.01,
                  "rho": 0.99
            }
      },
      "paddle.optimizer.SGD": {
            "torch_api": "torch.optim.SGD",
            "paddle_torch_args_map": {
                  "parameters": "params",
                  "learning_rate": "lr",
                  "weight_decay": "weight_decay"
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "weight_decay": 0.0
            }
      },
      "paddle.io.DistributedBatchSampler": {
            "torch_api": "torch.utils.data.DistributedSampler",
            "paddle_torch_args_map": {
                  "dataset": "dataset",
                  "num_replicas": "num_replicas",
                  "rank": "rank",
                  "shuffle": "shuffle",
                  "drop_last": "drop_last",
                  "batch_size": ""
            },
            "min_input_args": 1,
            "paddle_default_kwargs": {
                  "shuffle": "True",
                  "batch_size": "1"
            }
      }
}