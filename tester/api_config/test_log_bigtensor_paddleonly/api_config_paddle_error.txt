paddle.Tensor.__add__(Tensor([1, 1, 1],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1073741824, 2, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.__floordiv__(Tensor([1, 2147483649],"int64"), 250054, )
paddle.Tensor.__add__(Tensor([1, 16],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 119304648, 1, 2],"float32"), Tensor([1, 18, 8, 119304648, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 119304648, 1, 2],"float32"), Tensor([1, 18, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([1, 2147483649],"int64"), 32000, )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 1, 2],"float32"), Tensor([1, 13421773, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 1, 2],"float32"), Tensor([1, 18, 8, 3728271, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 24276, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2147483649],"int64"), 7, )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 1, 2],"float32"), Tensor([1, 18, 8, 5, 4, 1491309],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 1, 47721859],"float32"), Tensor([1, 18, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 1, 47721859],"float32"), Tensor([1, 18, 8, 5, 4, 47721859],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 23860930, 2],"float32"), Tensor([1, 18, 8, 5, 23860930, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 1, 5, 23860930, 2],"float32"), Tensor([1, 18, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 23860930, 5, 1, 2],"float32"), Tensor([1, 18, 23860930, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 18, 23860930, 5, 1, 2],"float32"), Tensor([1, 18, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.Tensor.__add__(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 384],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 100, 10],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 100, 32],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 100, 42949673],"float32"), Tensor([10],"float32"), )
paddle.Tensor.__add__(Tensor([1, 100, 42949673],"float32"), Tensor([32],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float16"), Tensor([99],"float16"), )
paddle.Tensor.__add__(Tensor([1431655765, 3],"float32"), Tensor([148, 5, 3],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 102261127, 1, 2],"float32"), Tensor([1, 21, 8, 102261127, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 102261127, 1, 2],"float32"), Tensor([1, 21, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 1, 2],"float32"), Tensor([1, 13421773, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 1, 2],"float32"), Tensor([1, 21, 8, 3195661, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__add__(Tensor([1, 100],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 1, 2],"float32"), Tensor([1, 21, 8, 5, 4, 1278265],"float32"), )
paddle.Tensor.__add__(Tensor([1, 10285],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 384],"float32"), )
paddle.Tensor.__add__(Tensor([1, 10285],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 1, 40904451],"float32"), Tensor([1, 21, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 512],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 1, 40904451],"float32"), Tensor([1, 21, 8, 5, 4, 40904451],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 20452226, 2],"float32"), Tensor([1, 21, 8, 5, 20452226, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([99],"float32"), )
paddle.Tensor.__add__(Tensor([134217728, 16, 2],"float32"), Tensor([56, 16, 16, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 1, 5, 20452226, 2],"float32"), Tensor([1, 21, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 512],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 20452226, 5, 1, 2],"float32"), Tensor([1, 21, 20452226, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 21, 20452226, 5, 1, 2],"float32"), Tensor([1, 21, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 135267, 49],"float32"), Tensor([1, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 99],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__add__(Tensor([1, 1, 99],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 135267],"float32"), Tensor([1, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 49],"float32"), Tensor([1, 108, 1, 49, 811597],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 49],"float32"), Tensor([1, 108, 1, 811597, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 49],"float32"), Tensor([1, 108, 16564, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 108, 6, 49, 49],"float32"), Tensor([1, 1788825, 1, 49, 49],"float32"), )
paddle.Tensor.__add__(Tensor([1, 109, 256],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 109, 39403370],"float32"), Tensor([256],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 1, 2],"float32"), Tensor([1, 13421773, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 1, 2],"float32"), Tensor([1, 22, 8, 3050403, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 1, 2],"float32"), Tensor([1, 22, 8, 5, 4, 1220162],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 1, 2],"float32"), Tensor([610081, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 10],"float16"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__add__(Tensor([1431655765, 3],"float32"), Tensor([10000, 2, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 195225787, 1, 2],"float32"), Tensor([1, 11, 8, 195225787, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 195225787, 1, 2],"float32"), Tensor([1, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 27216, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 30324, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 33600, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1024],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 2],"float32"), Tensor([1, 11, 8, 4, 4, 3050403],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 1, 39045158],"float32"), Tensor([1, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 1, 39045158],"float32"), Tensor([1, 22, 8, 5, 4, 39045158],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1024],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 2],"float32"), Tensor([1, 11, 8, 6100806, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 19522579, 2],"float32"), Tensor([1, 22, 8, 5, 19522579, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 2],"float32"), Tensor([1, 16777216, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 5, 19522579, 2],"float32"), Tensor([1, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 97612894, 1, 2],"float32"), Tensor([1, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 1, 97612894, 1, 2],"float32"), Tensor([1, 22, 8, 97612894, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 19522579, 5, 1, 2],"float32"), Tensor([1, 22, 19522579, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 22, 19522579, 5, 1, 2],"float32"), Tensor([1, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 97612894],"float32"), Tensor([1, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 1, 97612894],"float32"), Tensor([1, 11, 8, 4, 4, 97612894],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 48806447, 2],"float32"), Tensor([1, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 1, 4, 48806447, 2],"float32"), Tensor([1, 11, 8, 4, 48806447, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1280],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 1280],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 128],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 16],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 16],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 48806447, 4, 1, 2],"float32"), Tensor([1, 11, 48806447, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 48806447, 4, 1, 2],"float32"), Tensor([1, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 1952258, 1, 2],"float32"), Tensor([1, 1100, 8, 1952258, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 1952258, 1, 2],"float32"), Tensor([1, 1100, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 1, 2],"float32"), Tensor([1, 1100, 8, 5, 4, 24404],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1],"float32"), Tensor([1, 4294967295, 10285],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1280],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 1, 2],"float32"), Tensor([1, 1100, 8, 61009, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 128],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 16],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 1, 2],"float32"), Tensor([1, 13421773, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 1, 780904],"float32"), Tensor([1, 1100, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 1, 780904],"float32"), Tensor([1, 1100, 8, 5, 4, 780904],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1280],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 390452, 2],"float32"), Tensor([1, 1100, 8, 5, 390452, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 16],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 1, 5, 390452, 2],"float32"), Tensor([1, 1100, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 390452, 5, 1, 2],"float32"), Tensor([1, 1100, 390452, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1100, 390452, 5, 1, 2],"float32"), Tensor([1, 1100, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 1, 1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 1, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295],"float32"), Tensor([1001],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 128, 3, 87382],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 128, 87382, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 3728271, 3, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 3728271, 128, 3, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 429496730, 1, 5, 1, 2],"float32"), Tensor([1, 18, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 429496730, 1, 5, 1, 2],"float32"), Tensor([1, 21, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 429496730, 1, 5, 1, 2],"float32"), Tensor([1, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 429496730, 1, 5, 1, 2],"float32"), Tensor([1, 429496730, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 128, 3, 87382],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4294967295],"int32"), Tensor([6],"int32"), )
paddle.Tensor.__add__(Tensor([1, 128, 128, 87382, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 3728271, 3, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__floordiv__(Tensor([6],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__add__(Tensor([1, 128],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__add__(Tensor([1, 12],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__add__(Tensor([32],"float32"), Tensor([13, 7, 47197443],"float32"), )
paddle.Tensor.__add__(Tensor([16, 134217728, 2],"float32"), Tensor([56, 16, 16, 2],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1],"float32"), Tensor([4294967295, 1, 10285],"float32"), )
paddle.Tensor.__add__(Tensor([124, 11045, 56, 56],"float32"), Tensor([128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 11045, 56, 56],"float32"), Tensor([192, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 56, 56],"float32"), Tensor([128, 1, 33554432],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 56, 56],"float32"), Tensor([128, 33554432, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 56, 56],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 96, 96],"float32"), Tensor([128, 1, 33554432],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 96, 96],"float32"), Tensor([128, 33554432, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 128, 96, 96],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 192, 28, 28],"float32"), Tensor([192, 1, 22369622],"float32"), )
paddle.Tensor.__add__(Tensor([124, 192, 28, 28],"float32"), Tensor([192, 22369622, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 192, 28, 28],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 100],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 1, 160],"float32"), Tensor([13, 1, 330382100],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 101],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 1, 160],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 1, 4294967295],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 102],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 1, 4294967295],"float32"), Tensor([13, 1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float16"), Tensor([1, 12, 1, 392, 913046],"float16"), )
paddle.Tensor.__add__(Tensor([124, 192, 56, 56],"float32"), Tensor([192, 1, 22369622],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float16"), Tensor([1, 12, 1, 913046, 392],"float16"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 268435456],"float32"), Tensor([1, 100],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float16"), Tensor([1, 12, 2330, 392, 392],"float16"), )
paddle.Tensor.__ge__(Tensor([1, 160, 1],"float32"), Tensor([13, 330382100, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float16"), Tensor([1, 27951, 1, 392, 392],"float16"), )
paddle.Tensor.__add__(Tensor([124, 192, 56, 56],"float32"), Tensor([192, 22369622, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 268435456],"float32"), Tensor([1, 101],"float32"), )
paddle.Tensor.__add__(Tensor([124, 192, 56, 56],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 160, 1],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 16, 1, 268435456],"float32"), Tensor([1, 102],"float32"), )
paddle.Tensor.__add__(Tensor([124, 256, 28, 28],"float32"), Tensor([256, 1, 16777216],"float32"), )
paddle.Tensor.__add__(Tensor([124, 256, 28, 28],"float32"), Tensor([256, 16777216, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 256, 28, 28],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 200],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 200],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 3759, 96, 96],"float32"), Tensor([128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 44180, 28, 28],"float32"), Tensor([192, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([124, 44180, 28, 28],"float32"), Tensor([256, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 2, 143165577],"float16"), Tensor([2, 4],"float16"), )
paddle.Tensor.__add__(Tensor([128, 128, 262144],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float32"), Tensor([1, 12, 1, 392, 913046],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 262144],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 30000],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1073741824, 4],"float16"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float32"), Tensor([1, 12, 1, 913046, 392],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([1, 128, 128, 262144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 2, 4],"float16"), Tensor([2, 2147483648],"float16"), )
paddle.Tensor.__ge__(Tensor([1, 30000],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float32"), Tensor([1, 12, 2330, 392, 392],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([1, 128, 16777216, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 392],"float32"), Tensor([1, 27951, 1, 392, 392],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([1, 16777216, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 2, 4],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 286331153],"float16"), Tensor([6],"float16"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 286331153],"float32"), Tensor([6],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 6],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 6],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 71582789, 4],"float16"), Tensor([2, 4],"float16"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 76088],"float16"), Tensor([1, 12, 1, 392, 392],"float16"), )
paddle.Tensor.__add__(Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([4, 128, 128, 65536],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([4, 128, 4194304, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 392, 76088],"float32"), Tensor([1, 12, 1, 392, 392],"float32"), )
paddle.Tensor.__add__(Tensor([128, 128, 2],"float32"), Tensor([4, 4194304, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([128, 16777216, 2],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([128, 16777216, 2],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 76088, 392],"float16"), Tensor([1, 12, 1, 392, 392],"float16"), )
paddle.Tensor.__add__(Tensor([1, 12, 12, 76088, 392],"float32"), Tensor([1, 12, 1, 392, 392],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 32000],"float16"), Tensor([1, 4294967295],"float16"), )
paddle.Tensor.__ge__(Tensor([1, 32000],"float16"), Tensor([4294967295, 1],"float16"), )
paddle.Tensor.__ge__(Tensor([1, 4294967295, 1],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 4294967295, 1],"float32"), Tensor([13, 4294967295, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 4294967295],"float16"), Tensor([1, 1],"float16"), )
paddle.Tensor.__ge__(Tensor([1, 4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 50304],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 50304],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 99],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2147483649],"float64"), Tensor([128],"float64"), )
paddle.Tensor.__ge__(Tensor([1, 99],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2147483649],"float64"), Tensor([12],"float64"), )
paddle.Tensor.__add__(Tensor([1, 12, 24, 103564, 144],"float32"), Tensor([1, 12, 1, 144, 144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 24, 144, 103564],"float32"), Tensor([1, 12, 1, 144, 144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 24, 144, 144],"float32"), Tensor([1, 12, 1, 144, 2485514],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 24, 144, 144],"float32"), Tensor([1, 12, 1, 2485514, 144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 24, 144, 144],"float32"), Tensor([1, 12, 17261, 144, 144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 24, 144, 144],"float32"), Tensor([1, 207127, 1, 144, 144],"float32"), )
paddle.Tensor.__ge__(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 1, 4294967295],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 1, 4294967295],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 25],"bool"), Tensor([1, 1, 1, 4294967295],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 1, 1, 4294967295],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 20],"bool"), Tensor([1, 1, 20, 214748365],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 20],"bool"), Tensor([1, 1, 214748365, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 214748365],"bool"), Tensor([1, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 214748365, 20],"bool"), Tensor([1, 1, 20, 20],"bool"), )
paddle.Tensor.__ge__(Tensor([26843546, 1, 160],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__and__(Tensor([1, 1073741824, 4],"bool"), Tensor([1, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1073741824, 4],"bool"), Tensor([1, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1073741824, 4],"bool"), Tensor([1, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1073741824, 4],"bool"), Tensor([1, 8550, 4],"bool"), )
paddle.Tensor.__ge__(Tensor([26843546, 160, 1],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__and__(Tensor([1, 199729, 21504],"bool"), Tensor([1, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 171798692],"bool"), Tensor([1, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 21504],"bool"), Tensor([1, 199729, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 21504],"bool"), Tensor([1, 25, 171798692],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 116623],"bool"), Tensor([1, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 4],"bool"), Tensor([1, 1073741824, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 4],"bool"), Tensor([1, 36828, 116623],"bool"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__and__(Tensor([1, 38367, 111945],"bool"), Tensor([1, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 4],"bool"), Tensor([1, 1073741824, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 4],"bool"), Tensor([1, 38367, 111945],"bool"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__and__(Tensor([1, 6380, 4],"bool"), Tensor([1, 1073741824, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 6380, 4],"bool"), Tensor([1, 6380, 673193],"bool"), )
paddle.Tensor.__and__(Tensor([1, 6380, 673193],"bool"), Tensor([1, 6380, 4],"bool"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__and__(Tensor([1, 8550, 4],"bool"), Tensor([1, 1073741824, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 8550, 4],"bool"), Tensor([1, 8550, 502336],"bool"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__and__(Tensor([1, 8550, 502336],"bool"), Tensor([1, 8550, 4],"bool"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.__ge__(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__ge__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__ge__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__and__(Tensor([108],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__ge__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__and__(Tensor([117],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__and__(Tensor([11],"bool"), Tensor([4294967295],"bool"), )
paddle.Tensor.__and__(Tensor([1200],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__and__(Tensor([128],"bool"), Tensor([4294967295],"bool"), )
paddle.Tensor.__ge__(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__and__(Tensor([1988411, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 10],"bool"), Tensor([2, 2147483648],"bool"), )
paddle.Tensor.__and__(Tensor([2, 10],"bool"), Tensor([429496730, 10],"bool"), )
paddle.Tensor.__and__(Tensor([2, 16],"bool"), Tensor([2, 2147483648],"bool"), )
paddle.Tensor.__and__(Tensor([2, 16],"bool"), Tensor([268435456, 16],"bool"), )
paddle.Tensor.__and__(Tensor([2, 2147483648],"bool"), Tensor([2, 10],"bool"), )
paddle.Tensor.__and__(Tensor([2, 2147483648],"bool"), Tensor([2, 16],"bool"), )
paddle.Tensor.__and__(Tensor([2, 2147483648],"bool"), Tensor([2, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 2147483648],"bool"), Tensor([2, 5],"bool"), )
paddle.Tensor.__and__(Tensor([2, 2147483648],"bool"), Tensor([2, 8],"bool"), )
paddle.Tensor.__and__(Tensor([2, 214748365, 1, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.Tensor.__ge__(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 2982617, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 2],"bool"), Tensor([2, 2147483648],"bool"), )
paddle.Tensor.__and__(Tensor([2, 2],"bool"), Tensor([2147483648, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 1, 5],"int64"), Tensor([3, 4, 178956971],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 1, 5],"int64"), Tensor([536870913, 4, 1],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 2982617, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__ge__(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__ge__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__ge__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 2982617, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__ge__(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 3976822, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 4971027, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 1988411],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"bool"), )
paddle.Tensor.__add__(Tensor([16, 1, 25, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__gt__(Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 10285],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 10285],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 3598],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 3598],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 3598],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 36858],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 36858],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__gt__(Tensor([1, 1, 36858],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 38402],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__gt__(Tensor([1, 1, 38402],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__gt__(Tensor([1, 1, 38402],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__gt__(Tensor([1, 1, 4165],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 4165],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 4165],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([13, 7, 32],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__gt__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([1988411, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 2982617, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 2982617, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__add__(Tensor([1, 3728271, 128, 3, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 2982617, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 3976822, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 4971027, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 1988411],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__add__(Tensor([5, 3],"float32"), Tensor([148, 5, 5804010],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.__add__(Tensor([5, 3],"float32"), Tensor([148, 9673350, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 27216, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 30324, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 33600, 1],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__add__(Tensor([5, 3],"float64"), Tensor([10000, 5, 42950],"float64"), )
paddle.Tensor.__add__(Tensor([1, 4294967295],"float32"), Tensor([12],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__add__(Tensor([5, 3],"float64"), Tensor([10000, 71583, 3],"float64"), )
paddle.Tensor.__add__(Tensor([1, 4294967295],"float32"), Tensor([16],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__gt__(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__gt__(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.Tensor.__and__(Tensor([2, 3, 71582789, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__gt__(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([5, 429496730],"float64"), Tensor([10000, 5, 3],"float64"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 5],"bool"), Tensor([2, 2147483648],"bool"), )
paddle.Tensor.__and__(Tensor([2, 5],"bool"), Tensor([858993459, 5],"bool"), )
paddle.Tensor.__and__(Tensor([2, 8],"bool"), Tensor([2, 2147483648],"bool"), )
paddle.Tensor.__and__(Tensor([2, 8],"bool"), Tensor([536870912, 8],"bool"), )
paddle.Tensor.__and__(Tensor([2147483648, 2],"bool"), Tensor([2, 2],"bool"), )
paddle.Tensor.__and__(Tensor([268435456, 16],"bool"), Tensor([2, 16],"bool"), )
paddle.Tensor.__and__(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.Tensor.__add__(Tensor([5, 858993459],"float32"), Tensor([148, 5, 3],"float32"), )
paddle.Tensor.__and__(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), )
paddle.Tensor.__gt__(Tensor([10737419, 200],"float64"), Tensor([2, 1],"float64"), )
paddle.Tensor.__and__(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), )
paddle.Tensor.__add__(Tensor([16, 16, 16777216],"float32"), Tensor([56, 16, 16, 2],"float32"), )
paddle.Tensor.__add__(Tensor([16, 16, 2],"float32"), Tensor([56, 16, 16, 299594],"float32"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__add__(Tensor([16, 16, 2],"float32"), Tensor([56, 16, 2396746, 2],"float32"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__add__(Tensor([16, 16, 2],"float32"), Tensor([56, 2396746, 16, 2],"float32"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([4294967295],"bool"), Tensor([11],"bool"), )
paddle.Tensor.__and__(Tensor([4294967295],"bool"), Tensor([128],"bool"), )
paddle.Tensor.__gt__(Tensor([12988, 1],"int32"), Tensor([1, 4294967295],"int32"), )
paddle.Tensor.__gt__(Tensor([12988, 1],"int32"), Tensor([134217728, 32],"int32"), )
paddle.Tensor.__and__(Tensor([4294967295],"int32"), Tensor([108],"int32"), )
paddle.Tensor.__add__(Tensor([1, 12, 4648234, 77],"float32"), Tensor([77, 77],"float32"), )
paddle.Tensor.__gt__(Tensor([12988, 330688],"int32"), Tensor([1, 32],"int32"), )
paddle.Tensor.__and__(Tensor([4294967295],"int32"), Tensor([117],"int32"), )
paddle.Tensor.__add__(Tensor([1, 12, 77, 4648234],"float32"), Tensor([77, 77],"float32"), )
paddle.Tensor.__and__(Tensor([4294967295],"int32"), Tensor([1200],"int32"), )
paddle.Tensor.__add__(Tensor([1, 12, 77, 77],"float32"), Tensor([55778797, 77],"float32"), )
paddle.Tensor.__add__(Tensor([1, 12, 77, 77],"float32"), Tensor([77, 55778797],"float32"), )
paddle.Tensor.__and__(Tensor([429496730, 10],"bool"), Tensor([2, 10],"bool"), )
paddle.Tensor.__and__(Tensor([536870912, 8],"bool"), Tensor([2, 8],"bool"), )
paddle.Tensor.__and__(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.Tensor.__and__(Tensor([858993459, 5],"bool"), Tensor([2, 5],"bool"), )
paddle.Tensor.__gt__(Tensor([170628, 1],"int32"), Tensor([1, 4294967295],"int32"), )
paddle.Tensor.__gt__(Tensor([170628, 1],"int32"), Tensor([214748365, 20],"int32"), )
paddle.Tensor.__gt__(Tensor([170628, 25172],"int32"), Tensor([1, 20],"int32"), )
paddle.Tensor.__gt__(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__gt__(Tensor([2, 1],"float16"), Tensor([2, 2147483648],"float16"), )
paddle.Tensor.__gt__(Tensor([2, 1],"float16"), Tensor([4294967295, 1],"float16"), )
paddle.Tensor.__gt__(Tensor([2, 200],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.Tensor.__gt__(Tensor([2, 200],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.Tensor.__gt__(Tensor([2, 2147483648],"float16"), Tensor([2, 1],"float16"), )
paddle.Tensor.__add__(Tensor([1, 2147483649],"float64"), Tensor([1, 100],"float64"), )
paddle.Tensor.__gt__(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.Tensor.__eq__(Tensor([1, 1, 10, 16],"float32"), Tensor([1, 1, 10, 429496730],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 10, 16],"float32"), Tensor([1, 1, 268435456, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 10, 429496730],"float32"), Tensor([1, 1, 10, 16],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2048, 2048],"float16"), Tensor([1, 1, 2048, 2097152],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2048, 2048],"float16"), Tensor([1, 1, 2097152, 2048],"float16"), )
paddle.Tensor.__gt__(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2048, 2097152],"float16"), Tensor([1, 1, 2048, 2048],"float16"), )
paddle.Tensor.__gt__(Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__eq__(Tensor([1, 1, 2097152, 2048],"float16"), Tensor([1, 1, 2048, 2048],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 1, 268435456, 16],"float32"), Tensor([1, 1, 10, 16],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2147483649],"int64"), Tensor([1, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([1, 1000],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__gt__(Tensor([389, 300, 192, 192],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 1, 1],"float32"), Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2, 2097152],"float32"), Tensor([1, 1024, 2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2, 2],"float32"), Tensor([1, 1024, 2, 2097152],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2, 2],"float32"), Tensor([1, 1024, 2097152, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"float32"), )
paddle.Tensor.__gt__(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1024, 2097152, 2],"float32"), Tensor([1, 1024, 2, 2],"float32"), )
paddle.Tensor.__add__(Tensor([16, 2, 3, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 105840],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 105840],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1024, 2, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 2330, 12, 392, 392],"float16"), Tensor([1, 12, 1, 392, 392],"float16"), )
paddle.Tensor.__add__(Tensor([1, 2330, 12, 392, 392],"float32"), Tensor([1, 12, 1, 392, 392],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 10, 10],"float32"), Tensor([1, 128, 10, 3355444],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 10, 10],"float32"), Tensor([1, 128, 3355444, 10],"float32"), )
paddle.Tensor.__gt__(Tensor([4294967295, 1],"float16"), Tensor([2, 1],"float16"), )
paddle.Tensor.__eq__(Tensor([1, 128, 10, 10],"float32"), Tensor([1, 42949673, 10, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 10, 3355444],"float32"), Tensor([1, 128, 10, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 3355444, 10],"float32"), Tensor([1, 128, 10, 10],"float32"), )
paddle.Tensor.__gt__(Tensor([4294967295, 1],"int32"), Tensor([1, 20],"int32"), )
paddle.Tensor.__gt__(Tensor([4294967295, 1],"int32"), Tensor([1, 32],"int32"), )
paddle.Tensor.__gt__(Tensor([4294967295, 1],"int32"), Tensor([4294967295, 20],"int32"), )
paddle.Tensor.__gt__(Tensor([4294967295, 1],"int32"), Tensor([4294967295, 32],"int32"), )
paddle.Tensor.__eq__(Tensor([1, 138120],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 138120],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 150402],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 150402],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 153450],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 153450],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__gt__(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1024, 1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 4294967295],"float32"), Tensor([1, 1000],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([463, 300, 176, 176],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([1, 42949673, 10, 10],"float32"), Tensor([1, 128, 10, 10],"float32"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__add__(Tensor([1, 298138, 6, 49, 49],"float32"), Tensor([1, 108, 1, 49, 49],"float32"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__eq__(Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__eq__(Tensor([10],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__eq__(Tensor([10],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__eq__(Tensor([12, 7],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__le__(Tensor([1, 1, 1],"int64"), Tensor([1, 1, 2147483649],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 1],"int64"), Tensor([1, 2147483649, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 1],"int64"), Tensor([2147483649, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1, 2147483649],"int64"), Tensor([1, 1, 1],"int64"), )
paddle.Tensor.__eq__(Tensor([13, 165191050, 1],"int64"), Tensor([13, 165191050, 7],"int64"), )
paddle.Tensor.__le__(Tensor([1, 10, 10],"int64"), Tensor([1, 10, 214748365],"int64"), )
paddle.Tensor.__eq__(Tensor([13, 330382100, 1],"int32"), Tensor([13, 330382100, 7],"int32"), )
paddle.Tensor.__le__(Tensor([1, 10, 10],"int64"), Tensor([1, 2147483649, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__eq__(Tensor([13, 7, 1],"int32"), Tensor([13, 47197443, 7],"int32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 1],"int32"), Tensor([613566757, 1, 7],"int32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 1],"int64"), Tensor([13, 23598722, 7],"int64"), )
paddle.Tensor.__le__(Tensor([1, 107374183, 20],"int64"), Tensor([1, 20, 1],"int64"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 1],"int64"), Tensor([306783379, 1, 7],"int64"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__le__(Tensor([1, 199729, 21504],"float32"), Tensor([1, 25, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 23598722],"int64"), Tensor([13, 1, 7],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.Tensor.__le__(Tensor([1, 1],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__eq__(Tensor([13, 7, 47197443],"int32"), Tensor([13, 1, 7],"int32"), )
paddle.Tensor.__lshift__(Tensor([1],"int16"), Tensor([4294967295],"int16"), )
paddle.Tensor.__lshift__(Tensor([1],"int16"), Tensor([4294967295],"int16"), False, )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.__lshift__(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), )
paddle.Tensor.__lshift__(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.__le__(Tensor([1, 20, 20],"int64"), Tensor([1, 20, 107374183],"int64"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 24276, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 27216, 1],"float32"), )
paddle.Tensor.__le__(Tensor([1, 20, 20],"int64"), Tensor([1, 2147483649, 1],"int64"), )
paddle.Tensor.__add__(Tensor([1, 4294967295],"float16"), Tensor([10, 10],"float32"), )
paddle.Tensor.__add__(Tensor([1, 4294967295],"float16"), Tensor([10, 4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 30324, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13422, 10, 32000],"float32"), Tensor([2, 10, 32000],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 33600, 1],"float32"), )
paddle.Tensor.__le__(Tensor([1, 2147483649, 1],"int64"), Tensor([1, 1, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__le__(Tensor([1, 2147483649],"int64"), Tensor([1, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.__le__(Tensor([1, 214748365, 10],"int64"), Tensor([1, 10, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__add__(Tensor([1, 429496730, 1, 5, 1, 2],"float32"), Tensor([1, 1100, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__eq__(Tensor([1499],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__eq__(Tensor([1499],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__le__(Tensor([1, 25, 21504],"float32"), Tensor([1, 25, 171798692],"float32"), )
paddle.Tensor.__le__(Tensor([1, 25, 21504],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1678, 10, 256000],"float32"), Tensor([2, 10, 256000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__le__(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__le__(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__le__(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 256000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__eq__(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 32000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__eq__(Tensor([2, 10, 256000],"float32"), Tensor([1678, 10, 256000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__eq__(Tensor([2, 10, 256000],"float32"), Tensor([2, 10, 214748365],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), )
paddle.Tensor.__eq__(Tensor([2, 10, 256000],"float32"), Tensor([2, 8389, 256000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.Tensor.__eq__(Tensor([2, 10, 32000],"float32"), Tensor([13422, 10, 32000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), )
paddle.Tensor.__eq__(Tensor([2, 10, 32000],"float32"), Tensor([2, 10, 214748365],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.Tensor.__eq__(Tensor([2, 10, 32000],"float32"), Tensor([2, 67109, 32000],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__eq__(Tensor([2, 1073741825, 1],"int64"), Tensor([2, 3, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.Tensor.__add__(Tensor([715827883, 3],"float64"), Tensor([10000, 5, 3],"float64"), )
paddle.Tensor.__le__(Tensor([12, 2, 2],"int64"), Tensor([1, 2, 1073741825],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), )
paddle.Tensor.__le__(Tensor([12, 2, 2],"int64"), Tensor([1, 2147483649, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.__le__(Tensor([12, 2, 2],"int64"), Tensor([1073741825, 2, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__le__(Tensor([12, 89478486, 2],"int64"), Tensor([1, 2, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.Tensor.__eq__(Tensor([2, 3, 1],"int64"), Tensor([2, 1073741825, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"int16"), Tensor([1],"int16"), )
paddle.Tensor.__eq__(Tensor([2, 3, 1],"int64"), Tensor([715827883, 3, 1],"int64"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"int16"), Tensor([1],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__le__(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__lshift__(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__eq__(Tensor([2, 67109, 32000],"float32"), Tensor([2, 10, 32000],"float32"), )
paddle.Tensor.__le__(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 8389, 256000],"float32"), Tensor([2, 10, 256000],"float32"), )
paddle.Tensor.__le__(Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.Tensor.__le__(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__le__(Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__le__(Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 160, 1],"float32"), Tensor([13, 330382100, 1],"float32"), )
paddle.Tensor.__le__(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 160, 1],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__le__(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__le__(Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.Tensor.__le__(Tensor([2147483649, 1, 1],"int64"), Tensor([1, 1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([2147483649, 1],"int64"), Tensor([1, 1],"int64"), )
paddle.Tensor.__le__(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__le__(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__le__(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__le__(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 4294967295, 1],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 4294967295, 1],"float32"), Tensor([13, 4294967295, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float16"), Tensor([64],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float16"), Tensor([768],"float16"), )
paddle.Tensor.__add__(Tensor([1, 536870912, 1, 4, 1, 2],"float32"), Tensor([1, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([1, 536870912, 1, 4, 1, 2],"float32"), Tensor([1, 536870912, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float32"), Tensor([64],"float32"), )
paddle.Tensor.__lt__(Tensor([26843546, 160, 1],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float32"), Tensor([768],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 64],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 1, 64],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 768],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 1, 768],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 100, 21474837],"float64"), Tensor([1, 2],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 100, 21474837],"float64"), Tensor([1, 6],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 100, 2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 100, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 100, 6],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 100, 6],"float64"), Tensor([357913942, 6],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 1000],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 100],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.__eq__(Tensor([2147483649],"int64"), Tensor([10],"int64"), )
paddle.Tensor.__add__(Tensor([1, 8631, 24, 144, 144],"float32"), Tensor([1, 12, 1, 144, 144],"float32"), )
paddle.Tensor.__add__(Tensor([16777216, 128, 2],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.Tensor.__add__(Tensor([16777216, 128, 2],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([306783379, 7, 1],"int64"), Tensor([13, 1, 7],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 10285, 4],"float32"), Tensor([10285, 417596],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 10285, 4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1073741824, 4],"float32"), Tensor([10285, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 134217728],"bfloat16"), Tensor([2, 3],"bfloat16"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 134217728],"float16"), Tensor([2, 3],"float16"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 134217728],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 134217728],"int32"), Tensor([2, 3],"int32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 1],"bfloat16"), Tensor([2, 2147483648],"bfloat16"), )
paddle.Tensor.__mul__(Tensor([1, 10],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 1],"float16"), Tensor([2, 2147483648],"float16"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 1],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 1],"int32"), Tensor([2, 2147483648],"int32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 1, 67108865],"float64"), Tensor([2, 3],"float64"), )
paddle.Tensor.__eq__(Tensor([4, 8, 134217728, 1],"bfloat16"), Tensor([2, 3],"bfloat16"), )
paddle.Tensor.__eq__(Tensor([4, 8, 134217728, 1],"float16"), Tensor([2, 3],"float16"), )
paddle.Tensor.__eq__(Tensor([4, 8, 134217728, 1],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 134217728, 1],"int32"), Tensor([2, 3],"int32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 4, 4, 2],"float32"), Tensor([1, 11, 1, 195225787, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 4, 4, 2],"float32"), Tensor([1, 11, 1, 4, 1, 97612894],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 8, 67108865, 1],"float64"), Tensor([2, 3],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 4, 4, 2],"float32"), Tensor([1, 11, 1, 4, 48806447, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 4, 4, 2],"float32"), Tensor([1, 11, 48806447, 4, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 4, 4, 2],"float32"), Tensor([1, 536870912, 1, 4, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 4, 4, 3050403],"float32"), Tensor([1, 11, 1, 4, 1, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([4294967295],"float16"), Tensor([1499],"float16"), )
paddle.Tensor.__eq__(Tensor([4294967295],"float32"), Tensor([1499],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 8, 6100806, 4, 2],"float32"), Tensor([1, 11, 1, 4, 1, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([4294967295],"int32"), Tensor([10],"int32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 5, 4, 24404],"float32"), Tensor([1, 1100, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 5, 4, 2],"float32"), Tensor([1, 1100, 1, 1952258, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 5, 4, 2],"float32"), Tensor([1, 1100, 1, 5, 1, 780904],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 5, 4, 2],"float32"), Tensor([1, 1100, 1, 5, 390452, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 5, 4, 2],"float32"), Tensor([1, 1100, 390452, 5, 1, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 10],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 5, 4, 2],"float32"), Tensor([1, 429496730, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 11],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 12],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 13],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 81592],"float32"), Tensor([10],"float32"), )
paddle.Tensor.__add__(Tensor([10008],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 81592],"float32"), Tensor([11],"float32"), )
paddle.Tensor.__add__(Tensor([1000],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 81592],"float32"), Tensor([12],"float32"), )
paddle.Tensor.__add__(Tensor([1001],"float32"), Tensor([4294967295],"float16"), )
paddle.Tensor.__eq__(Tensor([52640, 81592],"float32"), Tensor([13],"float32"), )
paddle.Tensor.__add__(Tensor([1002],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__add__(Tensor([100352],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__eq__(Tensor([613566757, 7, 1],"int32"), Tensor([13, 1, 7],"int32"), )
paddle.Tensor.__mul__(Tensor([1, 1100, 8, 61009, 4, 2],"float32"), Tensor([1, 1100, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([715827883, 3, 1],"int64"), Tensor([2, 3, 1],"int64"), )
paddle.Tensor.__add__(Tensor([19522579, 22, 1, 5, 1, 2],"float32"), Tensor([19522579, 22, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([1, 2147483649],"int64"), 250054, )
paddle.Tensor.__floordiv__(Tensor([1, 2147483649],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([1, 2147483649],"int64"), 99, )
paddle.Tensor.__add__(Tensor([10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__floordiv__(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float16"), )
paddle.Tensor.__add__(Tensor([10],"float32"), Tensor([10105, 425034],"float32"), )
paddle.Tensor.__add__(Tensor([10],"float32"), Tensor([10285, 417596],"float32"), )
paddle.Tensor.__add__(Tensor([10],"float32"), Tensor([12240, 350897],"float32"), )
paddle.Tensor.__add__(Tensor([10],"float32"), Tensor([13125, 327236],"float32"), )
paddle.Tensor.__floordiv__(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 123904],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__floordiv__(Tensor([10, 1024],"int64"), Tensor([10, 214748365],"int64"), )
paddle.Tensor.__floordiv__(Tensor([10, 1024],"int64"), Tensor([2097153, 1024],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 1, 128, 1, 33554432],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 1, 128, 33554432, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 1, 1, 33554432],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 1, 33554432, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 128, 3, 87382],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 128, 87382, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 33554432, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 3728271, 3, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 33554432, 128, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 3728271, 128, 3, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 4294967295, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([20452226, 21, 1, 5, 1, 2],"float32"), Tensor([20452226, 21, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([10, 20],"int32"), Tensor([10, 429496730],"int32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([4, 1, 1073741824, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([4, 1, 128, 1, 8388608],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([4, 1, 128, 8388608, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([4, 8388608, 128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([192, 128, 16, 160],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__floordiv__(Tensor([10, 20],"int32"), Tensor([214748365, 20],"int32"), )
paddle.Tensor.__floordiv__(Tensor([10, 214748365],"int64"), Tensor([10, 1024],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 87382],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__floordiv__(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 87382, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__floordiv__(Tensor([10, 429496730],"int32"), Tensor([10, 20],"int32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 3728271, 3, 3],"float32"), Tensor([1, 1, 128, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 3728271, 3, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 3728271, 3, 3],"float32"), Tensor([4, 1, 128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([195, 12, 12, 392, 392],"float16"), Tensor([1, 12, 1, 392, 392],"float16"), )
paddle.Tensor.__add__(Tensor([195, 12, 12, 392, 392],"float16"), Tensor([195, 12, 1, 392, 392],"float16"), )
paddle.Tensor.__add__(Tensor([195, 12, 12, 392, 392],"float32"), Tensor([1, 12, 1, 392, 392],"float32"), )
paddle.Tensor.__add__(Tensor([195, 12, 12, 392, 392],"float32"), Tensor([195, 12, 1, 392, 392],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 13421773, 8, 5, 4, 2],"float32"), Tensor([1, 1100, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 13421773, 8, 5, 4, 2],"float32"), Tensor([1, 18, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 13421773, 8, 5, 4, 2],"float32"), Tensor([1, 21, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__add__(Tensor([23860930, 18, 1, 5, 1, 2],"float32"), Tensor([23860930, 18, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([2, 1073741824, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([1],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__add__(Tensor([2, 1073741825],"float64"), Tensor([10000, 2, 3],"float64"), )
paddle.Tensor.__add__(Tensor([2, 1073741825],"float64"), Tensor([50000, 2, 3],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 16, 256, 1048576],"float32"), Tensor([256, 64],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 16, 256, 64],"float32"), Tensor([256, 16777216],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 16, 256, 64],"float32"), Tensor([67108864, 64],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 16, 4194304, 64],"float32"), Tensor([256, 64],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1],"float32"), Tensor([1001],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 16777216, 8, 4, 4, 2],"float32"), Tensor([1, 11, 1, 4, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 17, 126322568],"float64"), Tensor([1, 2],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 17, 2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 17, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.Tensor.__add__(Tensor([2, 2, 1073741824],"float32"), Tensor([56, 2, 2, 2],"float32"), )
paddle.Tensor.__add__(Tensor([2, 2, 2],"float32"), Tensor([56, 19173962, 2, 2],"float32"), )
paddle.Tensor.__add__(Tensor([2, 2, 2],"float32"), Tensor([56, 2, 19173962, 2],"float32"), )
paddle.Tensor.__add__(Tensor([2, 2, 2],"float32"), Tensor([56, 2, 2, 19173962],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 3728271, 4, 2],"float32"), Tensor([1, 18, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 5, 4, 1491309],"float32"), Tensor([1, 18, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 5, 4, 2],"float32"), Tensor([1, 18, 1, 119304648, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 5, 4, 2],"float32"), Tensor([1, 18, 1, 5, 1, 47721859],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 5, 4, 2],"float32"), Tensor([1, 18, 1, 5, 23860930, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 5, 4, 2],"float32"), Tensor([1, 18, 23860930, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 18, 8, 5, 4, 2],"float32"), Tensor([1, 429496730, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__add__(Tensor([2, 2147483648],"float32"), Tensor([10000, 2, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 1],"float32"), Tensor([2, 1, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 1, 3, 1, 4],"float32"), Tensor([1, 2, 1, 3, 1, 715827883],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 13421773, 16],"float32"), Tensor([1, 2, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 107374183],"float32"), Tensor([1, 2, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 1, 3, 1, 4],"float32"), Tensor([1, 2, 1, 536870912, 1, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 16],"float32"), Tensor([1, 2, 2147483648],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 16],"float32"), Tensor([1, 2, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 16],"float32"), Tensor([1, 268435456, 16],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 16],"float32"), Tensor([1, 268435456, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 16],"float32"), Tensor([134217728, 2, 16],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 16],"float32"), Tensor([134217728, 2, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 1, 3, 1, 4],"float32"), Tensor([1, 357913942, 1, 3, 1, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 1, 3, 1, 715827883],"float32"), Tensor([1, 2, 1, 3, 1, 4],"float32"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 2, 4],"float16"), Tensor([1073741824, 4],"float16"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 2147483648],"float16"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 2, 71582789],"float16"), Tensor([2, 4],"float16"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 2, 71582789],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 35791395, 4],"float16"), Tensor([2, 4],"float16"), )
paddle.Tensor.__add__(Tensor([2, 3, 5, 35791395, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 1, 536870912, 1, 4],"float32"), Tensor([1, 2, 1, 3, 1, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 1073741825],"float64"), Tensor([1, 2],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 3195661, 4, 2],"float32"), Tensor([1, 21, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 5, 4, 1278265],"float32"), Tensor([1, 21, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 5, 4, 2],"float32"), Tensor([1, 21, 1, 102261127, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 5, 4, 2],"float32"), Tensor([1, 21, 1, 5, 1, 40904451],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 5, 4, 2],"float32"), Tensor([1, 21, 1, 5, 20452226, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 5, 4, 2],"float32"), Tensor([1, 21, 20452226, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 21, 8, 5, 4, 2],"float32"), Tensor([1, 429496730, 1, 5, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 2, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 2147483649],"float64"), Tensor([1, 100],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 2147483649],"float64"), Tensor([10],"float64"), )
paddle.Tensor.__add__(Tensor([2, 3],"float32"), Tensor([10000, 143166, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 13421773, 16],"float32"), Tensor([1, 2, 16],"float16"), )
paddle.Tensor.__add__(Tensor([2, 3],"float32"), Tensor([10000, 2, 214749],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 20, 2, 107374183],"float32"), Tensor([1, 2, 16],"float16"), )
paddle.Tensor.__add__(Tensor([2, 3],"float64"), Tensor([10000, 2, 107375],"float64"), )
paddle.Tensor.__add__(Tensor([2, 3],"float64"), Tensor([10000, 71583, 3],"float64"), )
paddle.Tensor.__add__(Tensor([2, 3],"float64"), Tensor([50000, 14317, 3],"float64"), )
paddle.Tensor.__add__(Tensor([2, 3],"float64"), Tensor([50000, 2, 21475],"float64"), )
paddle.Tensor.__add__(Tensor([2, 4, 3, 2, 2],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.Tensor.__add__(Tensor([2, 4, 3, 2, 2],"float64"), Tensor([4, 1, 1, 536870913],"float64"), )
paddle.Tensor.__add__(Tensor([2, 4, 3, 2, 2],"float64"), Tensor([4, 1, 536870913, 1],"float64"), )
paddle.Tensor.__add__(Tensor([2, 4, 3, 2, 2],"float64"), Tensor([4, 536870913, 1, 1],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 2147483649],"float64"), Tensor([3],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 3728271, 128, 3, 3],"float32"), Tensor([1, 128, 1, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 3728271, 128, 3, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float16"), Tensor([1],"float16"), )
paddle.Tensor.__add__(Tensor([390452, 1100, 1, 5, 1, 2],"float32"), Tensor([390452, 1100, 8, 5, 4, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2097153, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([1, 1000],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([1, 123904],"float32"), )
paddle.Tensor.__add__(Tensor([2, 89478486, 3, 2, 2],"float64"), Tensor([4, 1, 1, 1],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([2, 1, 100],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([2, 1, 101],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([2, 1, 102],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([2, 1, 103],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([2, 1, 104],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2147483649],"int64"), 1, )
paddle.Tensor.__floordiv__(Tensor([2147483649],"int64"), 2, )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 24276, 1],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2147483649],"int64"), 4, )
paddle.Tensor.__mul__(Tensor([1, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__floordiv__(Tensor([214748365, 20],"int32"), Tensor([10, 20],"int32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([10008],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([1000],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([1001],"float16"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([1002],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([100352],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([10105, 10],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([10285, 10],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([12240, 10],"float32"), )
paddle.Tensor.__add__(Tensor([4294967295],"float32"), Tensor([13125, 10],"float32"), )
paddle.Tensor.__add__(Tensor([429496730, 10],"float16"), Tensor([10, 10],"float32"), )
paddle.Tensor.__add__(Tensor([48806447, 11, 1, 4, 1, 2],"float32"), Tensor([48806447, 11, 8, 4, 4, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 357913942, 1, 3, 1, 4],"float32"), Tensor([1, 2, 1, 3, 1, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 3],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__getitem__(Tensor([3, 3, 477218589],"float32"), tuple(slice(None,None,-1),slice(None,1,None),slice(None,-1,None),), )
paddle.Tensor.__getitem__(Tensor([3, 3, 477218589],"float32"), tuple(slice(None,None,-1),slice(None,None,-1),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([3, 477218589, 3],"float32"), tuple(slice(None,None,-1),slice(None,None,-1),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([477218589, 3, 3],"float32"), tuple(slice(None,None,-1),slice(None,None,-1),slice(None,None,-1),), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-3),slice(None,None,None),), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 1, 1, 2147483649],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 1, 2147483649, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 2147483649, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([2147483649, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 2147483649],"int64"), Tensor([1, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 10, 1],"int64"), Tensor([1, 1, 1, 2147483649],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 10, 1],"int64"), Tensor([1, 1, 214748365, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 10, 214748365],"int64"), Tensor([1, 1, 1, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 100, 1],"int64"), Tensor([1, 1, 1, 2147483649],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 100, 1],"int64"), Tensor([1, 1, 21474837, 100],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 100, 21474837],"int64"), Tensor([1, 1, 1, 100],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 101, 1],"int64"), Tensor([1, 1, 1, 2147483649],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 101, 1],"int64"), Tensor([1, 1, 21262215, 101],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 101, 21262215],"int64"), Tensor([1, 1, 1, 101],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 102, 1],"int64"), Tensor([1, 1, 1, 2147483649],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 102, 1],"int64"), Tensor([1, 1, 21053762, 102],"int64"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 102, 21053762],"int64"), Tensor([1, 1, 1, 102],"int64"), )
paddle.Tensor.__mul__(Tensor([1, 5592406, 768],"float16"), Tensor([768],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 5592406, 768],"float32"), Tensor([768],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__lt__(Tensor([1, 1, 160],"float32"), Tensor([13, 1, 330382100],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 1, 160],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 1, 100],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 1, 101],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 1, 102],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 1, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 2147483649, 100],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 2147483649, 101],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 2147483649, 102],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 2147483649, 1],"int64"), Tensor([1, 1, 2147483649, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([1, 1, 4294967295],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 1, 4294967295],"float32"), Tensor([13, 1, 4294967295],"float32"), )
paddle.Tensor.__getitem__(Tensor([2147483649],"float64"), slice(-2,None,-1), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 2147483649, 1, 1],"int64"), Tensor([1, 1, 1, 1],"int64"), )
paddle.Tensor.__getitem__(Tensor([2147483649],"int64"), slice(None,None,-1), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 10],"int64"), Tensor([10, 10, 10, 10, 214749],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 10],"int64"), Tensor([10, 10, 10, 214749, 10],"int64"), )
paddle.Tensor.__getitem__(Tensor([3, 3, 477218589],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([3, 3, 477218589],"float32"), tuple(slice(1,-1,None),slice(0,2,None),slice(None,None,-1),), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 10],"int64"), Tensor([10, 10, 214749, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 10],"int64"), Tensor([10, 214749, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 10],"int64"), Tensor([214749, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 214749],"int64"), Tensor([10, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 214749, 10],"int64"), Tensor([10, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 10, 214749, 10, 10],"int64"), Tensor([10, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__lt__(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.Tensor.__lt__(Tensor([10, 20],"int32"), Tensor([10, 429496730],"int32"), )
paddle.Tensor.__lt__(Tensor([10, 20],"int32"), Tensor([214748365, 20],"int32"), )
paddle.Tensor.__getitem__(Tensor([3, 477218589, 3],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([3, 477218589, 3],"float32"), tuple(slice(1,-1,None),slice(0,2,None),slice(None,None,-1),), )
paddle.Tensor.__lt__(Tensor([10, 214749, 10, 10, 10],"int64"), Tensor([10, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__getitem__(Tensor([3, 477218589, 3],"float32"), tuple(slice(None,-1,None),slice(None,None,-1),slice(-1,None,None),), )
paddle.Tensor.__getitem__(Tensor([3, 477218589, 3],"float32"), tuple(slice(None,None,-1),slice(None,1,None),slice(None,-1,None),), )
paddle.Tensor.__lt__(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__lt__(Tensor([10, 429496730],"int32"), Tensor([10, 20],"int32"), )
paddle.Tensor.__lt__(Tensor([1024],"int64"), Tensor([1024, 2097153],"int64"), )
paddle.Tensor.__lt__(Tensor([1024],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([10],"int64"), Tensor([10, 214748365],"int64"), )
paddle.Tensor.__lt__(Tensor([10],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__getitem__(Tensor([477218589, 3, 3],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([477218589, 3, 3],"float32"), tuple(slice(1,-1,None),slice(0,2,None),slice(None,None,-1),), )
paddle.Tensor.__lt__(Tensor([11],"int64"), Tensor([11, 195225787],"int64"), )
paddle.Tensor.__lt__(Tensor([11],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__getitem__(Tensor([477218589, 3, 3],"float32"), tuple(slice(None,None,-1),slice(None,1,None),slice(None,-1,None),), )
paddle.Tensor.__floordiv__(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 35791395],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-2),slice(None,None,None),), )
paddle.Tensor.__lt__(Tensor([13, 7],"int64"), Tensor([13, 165191050],"int64"), )
paddle.Tensor.__mul__(Tensor([10, 1, 1, 1],"float32"), Tensor([2, 1, 2147483648],"float32"), )
paddle.Tensor.__lt__(Tensor([13, 7],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([165],"int64"), Tensor([165, 13015053],"int64"), )
paddle.Tensor.__mul__(Tensor([10, 1, 1, 1],"float32"), Tensor([2147483648, 1, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([165],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__mul__(Tensor([10, 1, 1, 429496730],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([17],"int64"), Tensor([17, 126322568],"int64"), )
paddle.Tensor.__lt__(Tensor([17],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([191740, 22400],"float32"), Tensor([4, 22400],"float32"), )
paddle.Tensor.__lt__(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__lt__(Tensor([1],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__lt__(Tensor([1],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__lt__(Tensor([2, 4, 536870912],"int32"), Tensor([2, 4, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([2, 4, 5],"int32"), Tensor([2, 4, 536870912],"int32"), )
paddle.Tensor.__lt__(Tensor([2, 4, 5],"int32"), Tensor([2, 429496730, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([2, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([2, 429496730, 5],"int32"), Tensor([2, 4, 5],"int32"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 429496730, 1, 1],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-1),slice(None,None,None),), )
paddle.Tensor.__floordiv__(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([2147483649, 1, 1, 1],"int64"), Tensor([1, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2147483649],"int64"), Tensor([10, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2147483649],"int64"), Tensor([1024, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2147483649],"int64"), Tensor([11, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2147483649],"int64"), Tensor([165, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2147483649],"int64"), Tensor([17, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__lt__(Tensor([214748365, 20],"int32"), Tensor([10, 20],"int32"), )
paddle.Tensor.__lt__(Tensor([214748365, 4, 5],"int32"), Tensor([2, 4, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([214749, 10, 10, 10, 10],"int64"), Tensor([10, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([26843546, 1, 160],"float32"), Tensor([13, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([306783379, 7],"int64"), Tensor([13, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([4, 1073741824],"float32"), Tensor([4, 22400],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 1073741824],"int32"), Tensor([4, 5],"int32"), )
paddle.Tensor.__lt__(Tensor([4, 22400],"float32"), Tensor([191740, 22400],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 22400],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__lt__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([4, 5],"int32"), Tensor([4, 1073741824],"int32"), )
paddle.Tensor.__lt__(Tensor([4, 5],"int32"), Tensor([858993459, 5],"int32"), )
paddle.Tensor.__mul__(Tensor([1, 67108864, 64],"float16"), Tensor([64],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 67108864, 64],"float32"), Tensor([64],"float32"), )
paddle.Tensor.__lt__(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__lt__(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__lt__(Tensor([4294967295],"int32"), Tensor([1],"int32"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.Tensor.__lt__(Tensor([4294967295],"int32"), Tensor([6],"int32"), )
paddle.Tensor.__lt__(Tensor([6],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__lt__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float16"), )
paddle.Tensor.__lt__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__lt__(Tensor([858993459, 5],"int32"), Tensor([4, 5],"int32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 1024],"float32"), Tensor([82811, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 1280],"float32"), Tensor([82811, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 134217728, 32],"float32"), Tensor([1, 1, 134217728, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 240],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 240],"float32"), Tensor([1, 1, 67108864, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 240, 270601],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 32, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 32, 270601],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 270601],"float32"), Tensor([1, 1, 64, 270601],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 32],"float32"), Tensor([1, 1, 17895698, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 64],"float32"), Tensor([1, 1, 17895698, 240],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4294967295],"float32"), 2, )
paddle.Tensor.__matmul__(Tensor([1, 1, 16384, 256],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 16384, 262144],"float32"), Tensor([1, 1, 256, 262144],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 16384, 262144],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 16777216, 256],"float32"), Tensor([1, 1, 16777216, 32],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4294967295],"int32"), 2, )
paddle.Tensor.__matmul__(Tensor([1, 1, 17895698, 240],"float32"), Tensor([1, 1, 17895698, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 17895698, 240],"float32"), Tensor([1, 1, 17895698, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 384],"float32"), Tensor([82811, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 4294967295],"float32"), Tensor([1024, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 4294967295],"float32"), Tensor([1280, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 4294967295],"float32"), Tensor([384, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 4294967295],"float32"), Tensor([512, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 4294967295],"float32"), Tensor([768, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 512],"float32"), Tensor([82811, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 67108864, 64],"float32"), Tensor([1, 1, 67108864, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 768],"float32"), Tensor([82811, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 100, 21474837],"float64"), Tensor([1, 2, 21474837],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 100, 21474837],"float64"), Tensor([1, 2, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 100, 21474837],"float64"), Tensor([1, 6, 21474837],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 100, 21474837],"float64"), Tensor([1, 6, 6],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 100, 2],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 100, 6],"float64"), Tensor([1, 357913942, 6],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 1073741825, 2],"float64"), Tensor([1, 1073741825, 100],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 1073741825, 2],"float64"), Tensor([1, 1073741825, 17],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 1073741825, 2],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 17, 126322568],"float64"), Tensor([1, 2, 126322568],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 17, 126322568],"float64"), Tensor([1, 2, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 17, 2],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 1073741825],"float64"), Tensor([1, 2, 100],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 1073741825],"float64"), Tensor([1, 2, 1073741825],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 1073741825],"float64"), Tensor([1, 2, 17],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 2],"float64"), Tensor([1, 126322568, 17],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 2],"float64"), Tensor([1, 21474837, 100],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 107374183],"float32"), Tensor([16, 16],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 107374183],"float32"), Tensor([16, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([268435456, 16],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([268435456, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 357913942, 6],"float64"), Tensor([1, 357913942, 6],"float64"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([1, 4294967295],"float32"), Tensor([768, 1000],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 4294967295],"float32"), Tensor([768, 4294967295],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 4294967295],"float32"), Tensor([768, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 768],"float32"), Tensor([4294968, 1000],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 768],"float32"), Tensor([5592406, 768],"float32"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__matmul__(Tensor([10, 429496730],"float32"), Tensor([4, 429496730],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 429496730],"float32"), Tensor([4, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 429496730],"float32"), Tensor([4, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 429496730],"float32"), Tensor([768, 429496730],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 429496730],"float32"), Tensor([768, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 4],"float32"), Tensor([5592406, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 768],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 768],"float32"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 14],"float32"), Tensor([14, 306783379],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 14],"float32"), Tensor([306783379, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 268435456],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 268435456],"float32"), Tensor([14, 14],"float32"), )
paddle.Tensor.__add__(Tensor([256, 256, 2],"float32"), Tensor([1, 256, 256, 65536],"float32"), )
paddle.Tensor.__add__(Tensor([256, 256, 2],"float32"), Tensor([1, 256, 8388608, 2],"float32"), )
paddle.Tensor.__add__(Tensor([256, 256, 2],"float32"), Tensor([1, 8388608, 256, 2],"float32"), )
paddle.Tensor.__add__(Tensor([256, 256, 65536],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.Tensor.__add__(Tensor([256, 8388608, 2],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 115, 2, 32],"float16"), Tensor([134217728, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 115, 2, 4668443],"float16"), Tensor([32, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([536870913, 2, 2],"float64"), Tensor([536870913, 2, 100],"float64"), )
paddle.Tensor.__matmul__(Tensor([536870913, 2, 2],"float64"), Tensor([536870913, 2, 17],"float64"), )
paddle.Tensor.__matmul__(Tensor([5592406, 768],"float32"), Tensor([5592406, 1000],"float32"), )
paddle.Tensor.__matmul__(Tensor([5592406, 768],"float32"), Tensor([5592406, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([5592406, 768],"float32"), Tensor([5592406, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([5592406, 768],"float32"), Tensor([768, 1000],"float32"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.Tensor.__mod__(Tensor([10, 1024],"int64"), Tensor([10, 214748365],"int64"), )
paddle.Tensor.__mod__(Tensor([10, 1024],"int64"), Tensor([2097153, 1024],"int64"), )
paddle.Tensor.__mod__(Tensor([10, 214748365],"int64"), Tensor([10, 1024],"int64"), )
paddle.Tensor.__add__(Tensor([715827883, 3],"float64"), Tensor([10000, 2, 3],"float64"), )
paddle.Tensor.__add__(Tensor([715827883, 3],"float64"), Tensor([50000, 2, 3],"float64"), )
paddle.Tensor.__add__(Tensor([8388608, 256, 2],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([10000],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1000110],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([10008],"float16"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([10008],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1000],"float16"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1024],"float32"), Tensor([124, 12, 12, 240534],"float32"), )
paddle.Tensor.__mul__(Tensor([1024],"float32"), Tensor([124, 7, 7, 706875],"float32"), )
paddle.Tensor.__mul__(Tensor([1024],"float32"), Tensor([128, 12, 12, 233017],"float32"), )
paddle.Tensor.__mul__(Tensor([1024],"float32"), Tensor([128, 7, 7, 684785],"float32"), )
paddle.Tensor.__mul__(Tensor([1024],"float32"), Tensor([16, 12, 12, 1864136],"float32"), )
paddle.Tensor.__mul__(Tensor([10],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.Tensor.__mod__(Tensor([2097153, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.Tensor.__mod__(Tensor([2147483649],"float64"), Tensor([4],"float64"), )
paddle.Tensor.__mul__(Tensor([128, 1, 1],"float32"), Tensor([124, 11045, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 1],"float32"), Tensor([124, 3759, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 1],"float32"), Tensor([128, 10700, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 1],"float32"), Tensor([128, 3641, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 1],"float32"), Tensor([16, 29128, 96, 96],"float32"), )
paddle.Tensor.__mod__(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.Tensor.__mul__(Tensor([128, 1, 33554432],"float32"), Tensor([124, 128, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 33554432],"float32"), Tensor([124, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 33554432],"float32"), Tensor([128, 128, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 33554432],"float32"), Tensor([128, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 1, 33554432],"float32"), Tensor([16, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 3, 174763, 64],"float32"), Tensor([576, 64],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 3, 576, 19419],"float32"), Tensor([576, 64],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 3, 576, 64],"float32"), Tensor([576, 7456541],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 3, 576, 64],"float32"), Tensor([67108864, 64],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 33554432, 1],"float32"), Tensor([124, 128, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 33554432, 1],"float32"), Tensor([124, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 33554432, 1],"float32"), Tensor([128, 128, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 33554432, 1],"float32"), Tensor([128, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 33554432, 1],"float32"), Tensor([16, 128, 96, 96],"float32"), )
paddle.Tensor.__mod__(Tensor([357913942, 3, 2],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([4, 268435457, 2],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([4, 3, 178956971],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mul__(Tensor([13, 4, 2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 2, 41297763],"float32"), Tensor([2, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 2, 41297763],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 2, 4],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 20648882, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 20648882, 4],"float32"), Tensor([4, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 4, 20648882],"float32"), Tensor([4, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 4, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 4, 4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.Tensor.__mul__(Tensor([13, 4, 41297763, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.__mul__(Tensor([136, 136],"float32"), Tensor([2, 300, 136, 52635],"float32"), )
paddle.Tensor.__mul__(Tensor([136, 136],"float32"), Tensor([2, 300, 52635, 136],"float32"), )
paddle.Tensor.__mul__(Tensor([136, 136],"float32"), Tensor([775, 300, 136, 136],"float32"), )
paddle.Tensor.__mul__(Tensor([136, 31580642],"float32"), Tensor([2, 300, 136, 136],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__mod__(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([4],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.__mod__(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__mod__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 4294967295],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 27356480, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 29620465, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 38008561, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 39403370, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 25414008, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 27356480, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 29620465, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 38008561, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 39403370, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([25414008, 1, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([27356480, 1, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([29620465, 1, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([38008561, 1, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 1],"bool"), Tensor([39403370, 1, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 100],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 100],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 100],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1024],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1024],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 1024],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 10285],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 10285],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 3, 5, 143165577],"float64"), Tensor([1, 2, 3, 1, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 1, 3, 5, 1],"float64"), Tensor([1, 2, 268435457, 1, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 1, 3, 5, 1],"float64"), Tensor([1, 2, 3, 89478486, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 1, 3, 715827883, 1],"float64"), Tensor([1, 2, 3, 715827883, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 1, 32],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 4294967295, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 4294967295, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 4294967295, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 4294967295, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 4294967295, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 4294967295],"float32"), Tensor([32],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 1, 429496730, 5, 1],"float64"), Tensor([1, 2, 3, 1, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 143165577, 3, 5, 1],"float64"), Tensor([1, 2, 3, 1, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 1, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 1, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 1, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 1, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 1, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 4294967295, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 4294967295, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 4294967295, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 4294967295, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 4294967295, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([1],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 1, 2, 1, 1],"float32"), Tensor([2, 1, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 1, 2, 1, 1],"float32"), Tensor([2, 2147483648, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 1, 2, 1, 1],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 1, 2147483648, 1, 1],"float32"), Tensor([2, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 32, 128],"float16"), Tensor([1048576, 32, 128],"float16"), )
paddle.Tensor.__mul__(Tensor([2, 3, 32, 128],"float16"), Tensor([3, 11184811, 128],"float16"), )
paddle.Tensor.__mul__(Tensor([2, 3, 32, 128],"float16"), Tensor([3, 32, 44739243],"float16"), )
paddle.Tensor.__mul__(Tensor([2, 3, 32, 22369622],"float16"), Tensor([3, 32, 128],"float16"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 1242757, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 1242757],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 621379],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 466034, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 310690, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 621379, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 466034, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 310690, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 621379, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 466034, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([310690, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 621379],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 466034, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 2, 932068, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 310690, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 4, 621379, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 3, 621379, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 466034, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 2, 932068, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 310690, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 4, 621379, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 5592406, 128],"float16"), Tensor([3, 32, 128],"float16"), )
paddle.Tensor.__mul__(Tensor([2, 3, 621379, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 3, 8, 8],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 8, 8],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 3, 8, 8],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 33554432, 8, 8],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 4, 8, 8],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 466034, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([2, 524288, 32, 128],"float16"), Tensor([3, 32, 128],"float16"), )
paddle.Tensor.__mul__(Tensor([16],"float32"), Tensor([13, 10, 33038210],"float32"), )
paddle.Tensor.__mul__(Tensor([16],"float32"), Tensor([13, 1007, 328086],"float32"), )
paddle.Tensor.__mul__(Tensor([16],"float32"), Tensor([13, 3, 110127367],"float32"), )
paddle.Tensor.__mul__(Tensor([16],"float32"), Tensor([13, 7, 47197443],"float32"), )
paddle.Tensor.__mul__(Tensor([176, 176],"float32"), Tensor([1, 300, 176, 81345],"float32"), )
paddle.Tensor.__mul__(Tensor([176, 176],"float32"), Tensor([1, 300, 81345, 176],"float32"), )
paddle.Tensor.__mul__(Tensor([176, 176],"float32"), Tensor([463, 300, 176, 176],"float32"), )
paddle.Tensor.__mul__(Tensor([176, 24403224],"float32"), Tensor([1, 300, 176, 176],"float32"), )
paddle.Tensor.__mul__(Tensor([184, 184],"float32"), Tensor([1, 300, 184, 77808],"float32"), )
paddle.Tensor.__mul__(Tensor([184, 184],"float32"), Tensor([1, 300, 77808, 184],"float32"), )
paddle.Tensor.__mul__(Tensor([184, 23342214],"float32"), Tensor([1, 300, 184, 184],"float32"), )
paddle.Tensor.__mul__(Tensor([192, 192],"float32"), Tensor([1, 300, 192, 74566],"float32"), )
paddle.Tensor.__mul__(Tensor([192, 192],"float32"), Tensor([1, 300, 74566, 192],"float32"), )
paddle.Tensor.__mul__(Tensor([192, 192],"float32"), Tensor([389, 300, 192, 192],"float32"), )
paddle.Tensor.__mul__(Tensor([192, 22369622],"float32"), Tensor([1, 300, 192, 192],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 932068, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([2147483648, 1, 2, 1, 1],"float32"), Tensor([2, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2147483648, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__mul__(Tensor([22369622, 192],"float32"), Tensor([1, 300, 192, 192],"float32"), )
paddle.Tensor.__mul__(Tensor([23342214, 184],"float32"), Tensor([1, 300, 184, 184],"float32"), )
paddle.Tensor.__mul__(Tensor([24403224, 176],"float32"), Tensor([1, 300, 176, 176],"float32"), )
paddle.Tensor.__mul__(Tensor([2147483649],"float64"), Tensor([2, 10],"float64"), )
paddle.Tensor.__mul__(Tensor([29128, 128, 128, 3, 3],"float32"), Tensor([4, 1, 128, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float16"), Tensor([1],"float16"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float32"), Tensor([2, 1, 100],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float32"), Tensor([2, 1, 101],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float32"), Tensor([2, 1, 102],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float32"), Tensor([2, 1, 103],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1],"float32"), Tensor([2, 1, 104],"float32"), )
paddle.Tensor.__or__(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.Tensor.__or__(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), )
paddle.Tensor.__or__(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), )
paddle.Tensor.__or__(Tensor([3],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__or__(Tensor([4294967295],"int32"), Tensor([3],"int32"), )
paddle.Tensor.__or__(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.Tensor.__pow__(Tensor([2147483649],"int64"), Tensor([3],"int64"), )
paddle.Tensor.__pow__(Tensor([357913942, 3, 2],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__pow__(Tensor([3],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__pow__(Tensor([4, 268435457, 2],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__pow__(Tensor([4, 3, 178956971],"float64"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.__mul__(Tensor([2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__mul__(Tensor([2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 1, 1431655765, 1, 1],"float32"), Tensor([2, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 1, 2, 1, 1],"float32"), Tensor([2, 1, 2147483648],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 1, 2, 1, 1],"float32"), Tensor([2, 2147483648, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 1, 2, 1, 1],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__pow__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__pow__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__pow__(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__pow__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__pow__(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__mul__(Tensor([310690, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float64"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([13, 10, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([13, 1007, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([13, 3, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([13, 7, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([349526, 3, 32, 128],"float16"), Tensor([3, 32, 128],"float16"), )
paddle.Tensor.__mul__(Tensor([35, 1917397, 64],"float16"), 1.4142135623730951, )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([89478486, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-1),slice(None,None,None),), )
paddle.Tensor.__mul__(Tensor([4, 4, 10, 7],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 4, 10, 9],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__mul__(Tensor([31580642, 136],"float32"), Tensor([2, 300, 136, 136],"float32"), )
paddle.Tensor.__mul__(Tensor([420, 4, 1600, 1600],"float32"), 0.0625, )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([3, 1431655765],"float32"), Tensor([2, 1431655765],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([3, 5],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([3, 5],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([858993459, 5],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([858993459, 5],"float32"), Tensor([858993459, 3],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1],"float32"), Tensor([124, 128, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1],"float32"), Tensor([124, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1],"float32"), Tensor([128, 128, 56, 56],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1],"float32"), Tensor([128, 128, 96, 96],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1],"float32"), Tensor([16, 128, 96, 96],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.__rmod__(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([1, 1024, 24],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([1, 768],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([2, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([784, 10],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float16"), Tensor([10008],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float16"), Tensor([1000],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([10000],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([1000110],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([10008],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([124, 12, 12, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([124, 7, 7, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([128, 12, 12, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([128, 7, 7, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295],"float32"), Tensor([16, 12, 12, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 1, 10],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 1, 10],"float32"), Tensor([429496730, 1, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([10, 1, 429496730],"float32"), Tensor([1, 1, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([1073741824, 4],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__ne__(Tensor([107374183, 20],"float64"), Tensor([20, 20],"float64"), )
paddle.Tensor.__ne__(Tensor([153391690, 28],"float32"), Tensor([28, 28],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 2147483648],"float32"), Tensor([2, 4],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 268435456, 8],"float32"), Tensor([2, 8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 4],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 8, 268435456],"float32"), Tensor([2, 8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 8, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 8, 8],"float32"), Tensor([2, 8, 268435456],"float32"), )
paddle.Tensor.__ne__(Tensor([2, 8, 8],"float32"), Tensor([67108864, 8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([20, 107374183],"float64"), Tensor([20, 20],"float64"), )
paddle.Tensor.__ne__(Tensor([20, 20],"float64"), Tensor([107374183, 20],"float64"), )
paddle.Tensor.__ne__(Tensor([20, 20],"float64"), Tensor([20, 107374183],"float64"), )
paddle.Tensor.__ne__(Tensor([2147483649],"int64"), Tensor([5],"int64"), )
paddle.Tensor.__ne__(Tensor([214748365, 20],"float32"), Tensor([3200, 20],"float32"), )
paddle.Tensor.__ne__(Tensor([28, 153391690],"float32"), Tensor([28, 28],"float32"), )
paddle.Tensor.__ne__(Tensor([28, 28],"float32"), Tensor([153391690, 28],"float32"), )
paddle.Tensor.__ne__(Tensor([28, 28],"float32"), Tensor([28, 153391690],"float32"), )
paddle.Tensor.__ne__(Tensor([3200, 1342178],"float32"), Tensor([3200, 20],"float32"), )
paddle.Tensor.__ne__(Tensor([3200, 20],"float32"), Tensor([214748365, 20],"float32"), )
paddle.Tensor.__ne__(Tensor([3200, 20],"float32"), Tensor([3200, 1342178],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__ne__(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__ne__(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([536870912, 8],"float32"), Tensor([8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([5],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.__ne__(Tensor([67108864, 8, 8],"float32"), Tensor([2, 8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.__ne__(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.__ne__(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([8, 536870912],"float32"), Tensor([8, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([8, 8],"float32"), Tensor([536870912, 8],"float32"), )
paddle.Tensor.__ne__(Tensor([8, 8],"float32"), Tensor([8, 536870912],"float32"), )
paddle.Tensor.__nonzero__(Tensor([1, 1, 2147483649],"int64"), )
paddle.Tensor.__nonzero__(Tensor([1, 2147483649, 1],"int64"), )
paddle.Tensor.__nonzero__(Tensor([1, 4294967295],"bool"), )
paddle.Tensor.__nonzero__(Tensor([2147483649, 1, 1],"int64"), )
paddle.Tensor.__nonzero__(Tensor([2147483649],"int64"), )
paddle.Tensor.__nonzero__(Tensor([4294967295, 1],"bool"), )
paddle.Tensor.__nonzero__(Tensor([4294967295],"bool"), )
paddle.Tensor.__nonzero__(Tensor([4294967295],"int32"), )
paddle.Tensor.__or__(Tensor([1, 1, 24276],"bool"), Tensor([1, 1, 4294967295],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 27216],"bool"), Tensor([1, 1, 4294967295],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 30324],"bool"), Tensor([1, 1, 4294967295],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 33600],"bool"), Tensor([1, 1, 4294967295],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 37044],"bool"), Tensor([1, 1, 4294967295],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 47197443, 7],"bool"), Tensor([13, 1, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 47197443],"bool"), Tensor([13, 1, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 7],"bool"), Tensor([13, 1, 47197443, 7],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 7],"bool"), Tensor([13, 1, 7, 47197443],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 7],"bool"), Tensor([87652394, 1, 7, 7],"bool"), )
paddle.Tensor.__or__(Tensor([1988411, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([1],"bool"), Tensor([4294967295],"bool"), )
paddle.Tensor.__or__(Tensor([2, 214748365, 1, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.Tensor.__or__(Tensor([2, 2982617, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 1, 5],"int64"), Tensor([3, 4, 178956971],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 1, 5],"int64"), Tensor([536870913, 4, 1],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 2982617, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 2982617, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 3976822, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 4971027, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 1988411],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([1988411, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 2982617, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 2982617, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 2982617, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 3976822, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 4971027, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 1988411],"int64"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([2, 3, 71582789, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__or__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([4294967295],"bool"), Tensor([1],"bool"), )
paddle.Tensor.__or__(Tensor([87652394, 1, 7, 7],"bool"), Tensor([13, 1, 7, 7],"bool"), )
paddle.Tensor.__mul__(Tensor([5592406, 1, 768],"float16"), Tensor([768],"float16"), )
paddle.Tensor.__mul__(Tensor([5592406, 1, 768],"float32"), Tensor([768],"float32"), )
paddle.Tensor.__pow__(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.__pow__(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.Tensor.__pow__(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([67108864, 1, 64],"float16"), Tensor([64],"float16"), )
paddle.Tensor.__mul__(Tensor([67108864, 1, 64],"float32"), Tensor([64],"float32"), )
paddle.Tensor.__pow__(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([1, 1, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([1, 1, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([1, 1, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([1, 1, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([1, 1, 1, 169],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([4294967295, 1, 1, 109],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([4294967295, 1, 1, 113],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([4294967295, 1, 1, 145],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([4294967295, 1, 1, 157],"bool"), )
paddle.Tensor.__mul__(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([4294967295, 1, 1, 169],"bool"), )
paddle.Tensor.__getitem__(Tensor([134217729, 4, 4],"int64"), slice(None,None,-2), )
paddle.Tensor.__getitem__(Tensor([3480525, 1234],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 35791395],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([2147483648, 2],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([4294967295, 1],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 107374183, 4],"int64"), slice(None,None,-2), )
paddle.Tensor.__getitem__(Tensor([5, 4, 107374183],"int64"), slice(None,None,-2), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([89478486, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([89478486, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 53687092, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([512, 8388608],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([5, 858993459],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([89478486, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-1),slice(None,None,None),), )
paddle.mm(Tensor([1024, 1747, 49, 49],"float32"), Tensor([1024, 4, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 1747, 49, 49],"float32"), Tensor([1024, 6, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 203, 144, 144],"float32"), Tensor([1024, 203, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 203, 144, 144],"float32"), Tensor([1024, 8, 144, 32],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2147483648],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.mm(Tensor([1024, 2675, 49, 32],"float32"), Tensor([1024, 2675, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 2675, 49, 32],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.Tensor.tile(Tensor([1, 105642, 40656],"bool"), list[1,8,1,], )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([2],"float32"), )
paddle.mm(Tensor([1024, 2675, 49, 32],"float32"), Tensor([1024, 6, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 21400, 49],"float32"), Tensor([1024, 4, 21400, 32],"float32"), )
paddle.mm(Tensor([1024, 4, 32768, 32],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 32768, 32],"float32"), Tensor([1024, 4, 32768, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 21400],"float32"), Tensor([1024, 4, 32, 21400],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 21400],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 21400],"float32"), Tensor([1024, 4, 49, 21400],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 21400],"float32"), Tensor([1024, 4, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 32],"float32"), Tensor([1024, 2675, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 32],"float32"), Tensor([1024, 4, 21400, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 32],"float32"), Tensor([1024, 4, 32, 32768],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 32],"float32"), Tensor([684785, 4, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 49],"float32"), Tensor([1024, 2675, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 49],"float32"), Tensor([1024, 4, 32768, 32],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([4294967295],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 429496730],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 49],"float32"), Tensor([684785, 4, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 6, 14267, 49],"float32"), Tensor([1024, 6, 14267, 32],"float32"), )
paddle.nn.functional.layer_norm(Tensor([14, 209, 1467864],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.mm(Tensor([1024, 6, 21846, 32],"float32"), Tensor([1024, 6, 21846, 49],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 3, 3, 59652324],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([4294967295],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.mm(Tensor([1024, 6, 21846, 32],"float32"), Tensor([1024, 6, 32, 49],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 3, 59652324, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.mm(Tensor([1024, 6, 49, 14267],"float32"), Tensor([1024, 6, 32, 14267],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 59652324, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.mm(Tensor([1024, 6, 49, 14267],"float32"), Tensor([1024, 6, 32, 49],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 39768216, 3, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(bool), )
paddle.mm(Tensor([1024, 6, 49, 14267],"float32"), Tensor([1024, 6, 49, 14267],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(float32), )
paddle.mm(Tensor([1024, 6, 49, 14267],"float32"), Tensor([1024, 6, 49, 32],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(float64), )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([1024, 2675, 32, 49],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(int64), )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([1024, 6, 14267, 49],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2, 3],"int64"), maxlen=Tensor([4294967295],"int32"), dtype=VarType(uint8), )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([1024, 6, 32, 21846],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"float64"), maxlen=20, )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([456523, 6, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 6, 49, 49],"float32"), Tensor([1024, 2675, 49, 32],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"int64"), 10, Dtype(float64), None, )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"int64"), 12, Dtype(float64), None, )
paddle.mm(Tensor([1024, 6, 49, 49],"float32"), Tensor([1024, 6, 21846, 32],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([2147483649],"int64"), 12, VarType(float64), None, )
paddle.Tensor.tile(Tensor([2, 2, 1, 1073741824, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 2, 1, 64, 16777216],"float16"), list[1,1,1,1,2,], )
paddle.nn.functional.sequence_mask(Tensor([39768216, 2, 3, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.Tensor.tile(Tensor([2, 2, 16777216, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.nn.functional.sequence_mask(Tensor([4294967295],"int32"), )
paddle.Tensor.tile(Tensor([2, 2, 38, 28256364, 1],"float16"), list[1,1,1,1,2,], )
paddle.mm(Tensor([1024, 6, 49, 49],"float32"), Tensor([456523, 6, 49, 32],"float32"), )
paddle.nn.functional.sequence_mask(Tensor([4294967295],"int32"), maxlen=4, dtype="float32", )
paddle.Tensor.tile(Tensor([2, 2, 38, 64, 441506],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 2, 39, 27531842, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 2, 39, 64, 430186],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 2, 40, 26843546, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 2, 40, 64, 419431],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 2, 41, 26188825, 1],"float16"), list[1,1,1,1,2,], )
paddle.mm(Tensor([1024, 8, 144, 144],"float32"), Tensor([1024, 8, 16384, 32],"float32"), )
paddle.Tensor.tile(Tensor([2, 2, 41, 64, 409201],"float16"), list[1,1,1,1,2,], )
paddle.mm(Tensor([1024, 8, 144, 144],"float32"), Tensor([1024, 911, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 144],"float32"), Tensor([116509, 8, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 3641],"float32"), Tensor([1024, 8, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 3641],"float32"), Tensor([1024, 8, 144, 3641],"float32"), )
paddle.mm(Tensor([1024, 8, 3641, 144],"float32"), Tensor([1024, 8, 3641, 32],"float32"), )
paddle.argmax(x=Tensor([3, 715827883],"int64"), dtype="int32", )
paddle.Tensor.tile(Tensor([2, 2147483648, 1, 1],"float32"), tuple(4,1,4,4,), )
paddle.Tensor.tile(Tensor([2, 2147483648, 1],"int32"), list[1,1,40,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"float32"), list[1,100,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"float32"), list[1,200,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"float32"), list[1,66,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,100,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,101,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,102,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,103,], )
paddle.mm(Tensor([16777216, 1, 256],"float16"), Tensor([16777216, 256, 96],"float16"), )
paddle.mm(Tensor([16777216, 1, 256],"float16"), Tensor([64, 256, 96],"float16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,105,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,106,], )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([16777216, 256, 512],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,107,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([108, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([16777216, 256, 576],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,108,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([11, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([16777216, 256, 96],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,109,], )
paddle.nn.functional.layer_norm(Tensor([2, 119304648, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 119304648, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,110,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([110484, 4],"float32"), )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([24, 256, 96],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 119304648, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,111,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([117, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.layer_norm(Tensor([2, 21474837, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([32, 256, 576],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,112,], )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([1200, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,113,], )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([4294967295],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([122760, 4],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 71582789],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,114,], )
paddle.mm(Tensor([16777216, 1, 256],"float32"), Tensor([8, 256, 512],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,115,], )
paddle.nn.functional.layer_norm(Tensor([2, 3, 71582789, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.mm(Tensor([24, 1, 178956971],"float32"), Tensor([24, 256, 178956971],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([135036, 4],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,116,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,117,], )
paddle.mm(Tensor([24, 1, 178956971],"float32"), Tensor([24, 256, 96],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1073741824, 4],"float32"), Tensor([1620, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.layer_norm(Tensor([2, 59652324, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,118,], )
paddle.mm(Tensor([24, 1, 256],"float32"), Tensor([174763, 256, 96],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 59652324, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.mm(Tensor([24, 1, 256],"float32"), Tensor([24, 1864136, 96],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,119,], )
paddle.nn.functional.layer_norm(Tensor([2, 59652324, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,120,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 39768216],"float32"), Tensor([108, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.layer_norm(Tensor([2, 6, 119304648, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,122,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,123,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 119304648, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,124,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 119304648, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([108, 4],"float32"), Tensor([108, 39768216],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.mm(Tensor([24, 699051, 256],"float32"), Tensor([24, 699051, 96],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,125,], )
paddle.mm(Tensor([25891, 8, 144, 144],"float32"), Tensor([1024, 8, 144, 32],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 59652324, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,126,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 59652324, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,127,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 59652324, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 390451573],"float32"), Tensor([11, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,129,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 29826162],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.mm(Tensor([298138, 6, 49, 49],"float32"), Tensor([1024, 6, 49, 32],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,130,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 29826162],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,131,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 29826162],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([11, 4],"float32"), Tensor([11, 390451573],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,132,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,133,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([4294967295],"float32"), bias=None, epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,136,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([4294967295],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,138,], )
paddle.mm(Tensor([32, 1, 134217728],"float32"), Tensor([32, 256, 134217728],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([2147483649],"float64"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 38875],"float32"), Tensor([110484, 4],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,139,], )
paddle.mm(Tensor([32, 1, 134217728],"float32"), Tensor([32, 256, 576],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,140,], )
paddle.mm(Tensor([32, 1, 256],"float32"), Tensor([29128, 256, 576],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([2147483649],"float64"), bias=None, epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,141,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([110484, 4],"float32"), Tensor([110484, 38875],"float32"), )
paddle.mm(Tensor([32, 1, 256],"float32"), Tensor([32, 233017, 576],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([2147483649],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,142,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 59652324],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,145,], )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 59652324],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 36709123],"float32"), Tensor([117, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,146,], )
paddle.mm(Tensor([32, 524288, 256],"float32"), Tensor([32, 256, 576],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 59652324],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,147,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([117, 4],"float32"), Tensor([117, 36709123],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.mm(Tensor([32, 524288, 256],"float32"), Tensor([32, 524288, 576],"float32"), )
paddle.nn.functional.layer_norm(Tensor([20, 10, 306784, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.mm(Tensor([4, 1, 1073741824],"float32"), Tensor([4, 256, 1073741824],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,149,], )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,150,], )
paddle.mm(Tensor([4, 1, 1073741824],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([4294967295],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,152,], )
paddle.mm(Tensor([4, 1, 256],"float32"), Tensor([32768, 256, 512],"float32"), )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 357914],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 3579140],"float32"), Tensor([1200, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,153,], )
paddle.mm(Tensor([4, 1, 256],"float32"), Tensor([4, 2097152, 512],"float32"), )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 357914],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,154,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,155,], )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,156,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1200, 4],"float32"), Tensor([1200, 3579140],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.mm(Tensor([4, 4194304, 256],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4294967295],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,157,], )
paddle.nn.functional.layer_norm(Tensor([20, 10, 715828, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,158,], )
paddle.nn.functional.layer_norm(Tensor([20, 119305, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 34987],"float32"), Tensor([122760, 4],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,159,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,160,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([122760, 4],"float32"), Tensor([122760, 34987],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,163,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,168,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,169,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,170,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 31807],"float32"), Tensor([135036, 4],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,176,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([135036, 4],"float32"), Tensor([135036, 31807],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,177,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,179,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,184,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,185,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,189,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 2651215],"float32"), Tensor([1620, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,190,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 4],"float32"), Tensor([1073741824, 4],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,194,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([1620, 4],"float32"), Tensor([1620, 2651215],"float32"), alpha=0.25, gamma=2.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,196,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,197,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,200,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,201,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,204,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,207,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,208,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,209,], )
paddle.argmax(x=Tensor([715827883, 3],"int64"), dtype="int32", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,210,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,218,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,220,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.mm(Tensor([4, 4194304, 256],"float32"), Tensor([4, 4194304, 512],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,222,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,224,], )
paddle.mm(Tensor([447207, 4, 49, 49],"float32"), Tensor([1024, 4, 49, 32],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,227,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,239,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,240,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,249,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.mm(Tensor([456523, 6, 49, 32],"float32"), Tensor([1024, 6, 32, 49],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,255,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,275,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,283,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,284,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,286,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,293,], )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,296,], )
paddle.Tensor.__rshift__(Tensor([1],"int8"), Tensor([4294967295],"int8"), )
paddle.Tensor.__rshift__(Tensor([1],"int8"), Tensor([4294967295],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), )
paddle.Tensor.__rshift__(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,31,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,319,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,324,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,329,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,33,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,333,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,34,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.Tensor.__rshift__(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,35,], )
paddle.Tensor.__rshift__(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.Tensor.__rshift__(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__rshift__(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,36,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,369,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,37,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,38,], )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,39,], )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,400,], )
paddle.mm(Tensor([64, 1, 256],"float16"), Tensor([174763, 256, 96],"float16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,41,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.mm(Tensor([64, 1, 256],"float16"), Tensor([64, 699051, 96],"float16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,42,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.mm(Tensor([64, 1, 67108864],"float16"), Tensor([64, 256, 67108864],"float16"), )
paddle.mm(Tensor([64, 1, 67108864],"float16"), Tensor([64, 256, 96],"float16"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,43,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,44,], )
paddle.mm(Tensor([64, 262144, 256],"float16"), Tensor([64, 262144, 96],"float16"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,45,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.mm(Tensor([684785, 4, 49, 32],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,46,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,461,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.mm(Tensor([684785, 4, 49, 32],"float32"), Tensor([684785, 4, 32, 49],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,47,], )
paddle.mm(Tensor([8, 1, 256],"float32"), Tensor([32768, 256, 512],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,48,], )
paddle.mm(Tensor([8, 1, 256],"float32"), Tensor([8, 1048576, 512],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,49,], )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,50,], )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.mm(Tensor([8, 1, 536870912],"float32"), Tensor([8, 256, 512],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,51,], )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,52,], )
paddle.mm(Tensor([8, 1, 536870912],"float32"), Tensor([8, 256, 536870912],"float32"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.mm(Tensor([8, 2097152, 256],"float32"), Tensor([8, 2097152, 512],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,53,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.mm(Tensor([8, 2097152, 256],"float32"), Tensor([8, 256, 512],"float32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,54,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,55,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 22492],"float32"), Tensor([190960, 80],"float32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,56,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 80],"float32"), Tensor([190960, 22492],"float32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,57,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([190960, 80],"float32"), Tensor([53687092, 80],"float32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,58,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,59,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,60,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,61,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,62,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,63,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,64,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,65,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,66,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,67,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,68,], )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,69,], )
paddle.Tensor.__rshift__(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,70,], )
paddle.Tensor.__rshift__(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.mm(input=Tensor([178956971, 3, 4],"float64"), mat2=Tensor([2, 4, 2],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,71,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,72,], )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,73,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,74,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,75,], )
paddle.mm(input=Tensor([2, 268435457, 4],"float64"), mat2=Tensor([2, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,76,], )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,77,], )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,78,], )
paddle.Tensor.__rshift__(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,79,], )
paddle.Tensor.__rshift__(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,80,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,81,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,82,], )
paddle.mm(input=Tensor([2, 3, 1, 2],"float64"), mat2=Tensor([119304648, 3, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,83,], )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,84,], )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.mm(input=Tensor([2, 3, 1, 2],"float64"), mat2=Tensor([2, 178956971, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,85,], )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,86,], )
paddle.Tensor.__rshift__(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), )
paddle.mm(input=Tensor([2, 3, 1, 2],"float64"), mat2=Tensor([2, 3, 119304648, 3],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.__rshift__(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,87,], )
paddle.Tensor.__rshift__(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.__rshift__(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,88,], )
paddle.Tensor.__rshift__(Tensor([4294967295],"int8"), Tensor([1],"int8"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.Tensor.__rshift__(Tensor([4294967295],"int8"), Tensor([1],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.mm(input=Tensor([2, 3, 1, 357913942],"float64"), mat2=Tensor([2, 3, 2, 357913942],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,89,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.mm(input=Tensor([2, 3, 1, 357913942],"float64"), mat2=Tensor([2, 3, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,90,], )
paddle.Tensor.__rshift__(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.Tensor.__rshift__(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,91,], )
paddle.mm(input=Tensor([2, 3, 178956971, 2],"float64"), mat2=Tensor([2, 3, 178956971, 3],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,92,], )
paddle.Tensor.__rshift__(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__rshift__(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,93,], )
paddle.mm(input=Tensor([2, 3, 357913942],"float64"), mat2=Tensor([2, 4, 2],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,94,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,95,], )
paddle.mm(input=Tensor([2, 3, 357913942],"float64"), mat2=Tensor([2, 4, 357913942],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.mm(input=Tensor([2, 3, 357913942],"float64"), mat2=Tensor([4, 5],"float64"), )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,96,], )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,97,], )
paddle.mm(input=Tensor([2, 3, 357913942],"float64"), mat2=Tensor([4],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,98,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([2, 2147483648],"int32"), list[1,99,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([2, 536870913, 2],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([2147483649],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([268435457, 4, 2],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([429496730, 5],"float64"), )
paddle.mm(input=Tensor([2, 536870913, 1, 2],"float64"), mat2=Tensor([2, 3, 2, 3],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.mm(input=Tensor([2, 536870913, 1, 2],"float64"), mat2=Tensor([2, 536870913, 2, 3],"float64"), )
paddle.nn.functional.layer_norm(Tensor([4, 10, 4, 26843546],"float32"), 4, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.mm(input=Tensor([2147483649],"float64"), mat2=Tensor([2147483649],"float64"), )
paddle.mm(input=Tensor([2147483649],"float64"), mat2=Tensor([7],"float64"), )
paddle.mm(input=Tensor([357913942, 3, 1, 2],"float64"), mat2=Tensor([2, 3, 2, 3],"float64"), )
paddle.mm(input=Tensor([357913942, 3, 1, 2],"float64"), mat2=Tensor([357913942, 3, 2, 3],"float64"), )
paddle.mm(input=Tensor([7],"float64"), mat2=Tensor([2147483649],"float64"), )
paddle.nn.functional.layer_norm(Tensor([64, 524288, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 1048576],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([4294967295],"float32"), Tensor([8192],"float32"), )
paddle.Tensor.tile(Tensor([2, 33554432, 1, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.mod(Tensor([10, 1024],"int64"), Tensor([10, 214748365],"int64"), )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.argmin(x=Tensor([3, 715827883],"int64"), dtype="int32", )
paddle.nn.functional.layer_norm(Tensor([7, 165, 3718587],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 3298747],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.mod(Tensor([10, 1024],"int64"), Tensor([2097153, 1024],"int64"), )
paddle.nn.functional.layer_norm(Tensor([7, 206, 2978480],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.Tensor.tile(Tensor([2, 4, 536870912],"float32"), list[1,1,2,], )
paddle.nn.functional.layer_norm(Tensor([7, 209, 2935727],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 2788940],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.mod(Tensor([10, 20],"int32"), Tensor([10, 429496730],"int32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.mod(Tensor([10, 20],"int32"), Tensor([214748365, 20],"int32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([2, 818401, 41, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 838861, 40, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.mod(Tensor([10, 214748365],"int64"), Tensor([10, 1024],"int64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.Tensor.tile(Tensor([2, 860371, 39, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2, 883012, 38, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 115943, 37044],"bool"), list[1,6,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 127827, 33600],"bool"), list[1,9,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.mod(Tensor([10, 429496730],"int32"), Tensor([10, 20],"int32"), )
paddle.argmin(x=Tensor([715827883, 3],"int64"), dtype="int32", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 2, 2147483648],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 134217728, 2, 1, 16],"float16"), list[1,1,1,4,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 2, 2147483648],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([1073741824, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 2147483648],"float32"), bias=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 2147483648],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2147483648, 2],"float32"), bias=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([2147483648, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([4, 1073741824],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([1, 141636, 30324],"bool"), list[1,9,1,], )
paddle.nn.functional.linear(Tensor([1, 2147483648, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 2147483648, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([33554432, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 157811, 27216],"bool"), list[1,9,1,], )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 512],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.Tensor.tile(Tensor([1, 16777216, 256],"float16"), list[2,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([8388608, 512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.linear(Tensor([10, 429496730],"float32"), Tensor([64, 429496730],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 429496730],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([10, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2147483649],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([1, 176923, 24276],"bool"), list[1,6,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.mod(Tensor([107374183, 2, 4, 5],"int32"), Tensor([6, 2, 4, 5],"int32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 199729, 21504],"bool"), list[1,7,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.linear(Tensor([100, 17],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([100, 17],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([100, 42949673],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1,100,1,], )
paddle.nn.functional.linear(Tensor([100, 42949673],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1021,1,1,], )
paddle.nn.functional.linear(Tensor([100, 42949673],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1041,1,1,], )
paddle.nn.functional.linear(Tensor([100, 8],"float32"), Tensor([4294967295],"float32"), )
paddle.mod(Tensor([1],"int32"), Tensor([4294967295],"int32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.nn.functional.linear(Tensor([1000, 17],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1043,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([1000, 17],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[105,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([1000, 4294968],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[107,1,1,], )
paddle.nn.functional.linear(Tensor([1000, 4294968],"float32"), Tensor([17],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[110,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.nn.functional.linear(Tensor([1073741824, 2, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1119,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[115,1,1,], )
paddle.nn.functional.linear(Tensor([1073741824, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.mod(Tensor([1],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[116,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[121,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[124,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[128,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[130,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[134,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[135,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[137,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.25, gamma=3, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[141,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[142,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1434,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[144,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[145,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[148,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[150,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), None, alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[155,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[158,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[159,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[161,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[164,1,1,], )
paddle.nn.functional.linear(Tensor([14123, 396, 768],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[165,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1662,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.25, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([2, 2147483648],"float32"), Tensor([64, 2147483648],"float32"), None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[167,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="mean", )
paddle.nn.functional.linear(Tensor([2, 2147483648],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([3072, 1398102],"float16"), Tensor([768],"float16"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1685,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="none", )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[172,1,1,], )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 33554432],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=0.0, reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[173,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[176,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="mean", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[182,1,1,], )
paddle.nn.functional.linear(Tensor([2, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="none", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[1892,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([1],"float64"), alpha=0.5, gamma=3, reduction="sum", )
paddle.nn.functional.linear(Tensor([20, 214748365],"float32"), Tensor([64, 214748365],"float32"), None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[195,1,1,], )
paddle.nn.functional.linear(Tensor([20, 214748365],"float32"), Tensor([64, 60],"float32"), None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[197,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[200,1,1,], )
paddle.nn.functional.linear(Tensor([20, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[201,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[2019,1,1,], )
paddle.nn.functional.linear(Tensor([2048, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[206,1,1,], )
paddle.nn.functional.linear(Tensor([2048, 1024, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[208,1,1,], )
paddle.mod(Tensor([2, 4, 536870912],"int32"), Tensor([2, 4, 5],"int32"), )
paddle.nn.functional.linear(Tensor([2147483648, 1, 2],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[210,1,1,], )
paddle.nn.functional.linear(Tensor([2147483648, 2],"float32"), Tensor([2, 4],"float32"), )
paddle.nn.functional.linear(Tensor([2147483648, 2],"float32"), Tensor([2, 4],"float32"), Tensor([4],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[220,1,1,], )
paddle.nn.functional.linear(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[222,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[238,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[241,1,1,], )
paddle.nn.functional.linear(Tensor([28245, 396, 384],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[266,1,1,], )
paddle.nn.functional.linear(Tensor([3, 1, 1431655765],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[270,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[2700,1,1,], )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2, 2147483648],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[274,1,1,], )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.mod(Tensor([2, 4, 5],"int32"), Tensor([2, 4, 536870912],"int32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[280,1,1,], )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[289,1,1,], )
paddle.nn.functional.linear(Tensor([3, 1431655765],"float32"), Tensor([2, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[293,1,1,], )
paddle.nn.functional.linear(Tensor([3, 1431655765],"float32"), Tensor([2, 4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1431655765],"float32"), Tensor([2, 4],"float32"), Tensor([4],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[295,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[298,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[300,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[301,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 2147483648],"float32"), Tensor([4],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[310,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[324,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[330,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[333,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([2, 1073741825],"float64"), Tensor([4],"float64"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[336,1,1,], )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([2, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[345,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.mod(Tensor([2, 4, 5],"int32"), Tensor([2, 429496730, 5],"int32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([536870913, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), normalizer=Tensor([1],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[351,1,1,], )
paddle.nn.functional.linear(Tensor([3, 715827883, 2],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2, 3],"float32"), Tensor([2, 3],"float32"), normalizer=Tensor([4294967295],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[387,1,1,], )
paddle.nn.functional.linear(Tensor([3, 715827883],"float64"), Tensor([2, 4],"float64"), Tensor([4],"float64"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[398,1,1,], )
paddle.nn.functional.linear(Tensor([30, 143165577],"float32"), Tensor([64, 143165577],"float32"), None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[444,1,1,], )
paddle.nn.functional.linear(Tensor([30, 143165577],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 20447],"float32"), Tensor([210056, 80],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[489,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 80],"float32"), Tensor([210056, 20447],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[502,1,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[528,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([210056, 80],"float32"), Tensor([53687092, 80],"float32"), )
paddle.nn.functional.linear(Tensor([30, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([2147483648, 2],"float32"), label=Tensor([5, 2],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 1073741824],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[553,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 2],"float32"), label=Tensor([2147483648, 2],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.mod(Tensor([2, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[556,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 2],"float32"), label=Tensor([5, 2],"float32"), normalizer=Tensor([4294967295],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[569,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 2],"float32"), label=Tensor([5, 858993459],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([2147483648, 1, 1, 2],"float32"), list[1,3,4,1,], )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 512],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[593,1,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([5, 858993459],"float32"), label=Tensor([5, 2],"float32"), normalizer=Tensor([1],"float32"), alpha=0.25, gamma=2.0, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([2147483648, 1, 1, 2],"float32"), list[1,4,4,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[617,1,1,], )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([64, 1073741824],"float32"), None, )
paddle.nn.functional.sigmoid_focal_loss(Tensor([53687092, 80],"float32"), Tensor([190960, 80],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 1, 1, 2],"float32"), list[1,5,4,1,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[648,1,1,], )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([64, 60],"float32"), None, )
paddle.Tensor.tile(Tensor([2147483648, 1, 2],"float32"), repeat_times=list[1,12,1,], )
paddle.nn.functional.sigmoid_focal_loss(Tensor([53687092, 80],"float32"), Tensor([210056, 80],"float32"), )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[660,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2, 1],"float32"), list[1,100,1,], )
paddle.nn.functional.linear(Tensor([4, 1398102, 768],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[680,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"float32"), list[1,100,], )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[752,1,1,], )
paddle.nn.functional.linear(Tensor([4, 2796203, 384],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[760,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[100,1,], )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[827,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1001,1,], )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 384],"float16"), Tensor([384, 11184811],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[873,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1002,1,], )
paddle.nn.functional.linear(Tensor([4, 396, 384],"float16"), Tensor([5592406, 768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[95,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1003,1,], )
paddle.nn.functional.linear(Tensor([4, 396, 5504],"float16"), Tensor([5592406, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([11184811, 384],"float16"), None, name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[97,1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1004,1,], )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([768, 5592406],"float16"), None, name=None, )
paddle.Tensor.tile(Tensor([1, 2, 2147483648],"float32"), list[999,1,1,], )
paddle.mod(Tensor([2, 429496730, 5],"int32"), Tensor([2, 4, 5],"int32"), )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([780336, 5504],"float16"), None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1005,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1009,1,], )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[101,1,], )
paddle.Tensor.tile(Tensor([1, 2147483648, 2],"float32"), list[1,1,1,1,], )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([33554432, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1010,1,], )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 2147483648, 2],"float32"), list[1,1,2,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1011,1,], )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1012,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1013,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1014,1,], )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([128],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1015,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1016,1,], )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1017,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1018,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1019,1,], )
paddle.nn.functional.linear(Tensor([4, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[102,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1020,1,], )
paddle.nn.functional.linear(Tensor([524288, 8192],"float32"), Tensor([524288, 512],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1021,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1022,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 429496730],"float16"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1024,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1025,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1026,1,], )
paddle.Tensor.tile(Tensor([1, 2147483649, 1],"int64"), list[1,1,4,], )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 429496730],"float32"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1027,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float16"), Tensor([10, 429496730],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[1,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1028,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[103,1,], )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[1,300,], )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float32"), Tensor([10, 429496730],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1030,1,], )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[1,9408,], )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[100,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[10307,1,], )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[2,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1031,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[4,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1032,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), list[6,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1034,1,], )
paddle.Tensor.tile(Tensor([1, 2147483649],"int64"), tuple(2,1,), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1036,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="none", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1038,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 42949673],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 21504, 199729],"bool"), list[1,1,5,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[104,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1041,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1042,1,], )
paddle.mod(Tensor([2097153, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1043,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([21474837, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1044,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1045,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float16"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1047,1,], )
paddle.nn.functional.linear(Tensor([67108864, 64],"float32"), Tensor([67108864, 60],"float32"), None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1048,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1049,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([2048],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[105,1,], )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([8192],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1053,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1054,1,], )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2097152, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 22, 195225787],"bool"), list[1,1,16,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1055,1,], )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([524288, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([699051, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1056,1,], )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1057,1,], )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([8192, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([2097152, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1058,1,], )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([8192, 2048],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([8192, 524288],"float16"), Tensor([2048],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[106,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1060,1,], )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1063,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1065,1,], )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1066,1,], )
paddle.nn.functional.linear(Tensor([8, 128, 4194304],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1068,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1069,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[107,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float16"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1070,1,], )
paddle.nn.functional.linear(Tensor([8, 262144, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1071,1,], )
paddle.nn.functional.linear(Tensor([8, 262144, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float32"), Tensor([100, 42949673],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1072,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1073,1,], )
paddle.nn.functional.linear(Tensor([8, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1075,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1076,1,], )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([512, 512],"float32"), )
paddle.mod(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1077,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4235668],"float16"), Tensor([1014, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([512, 536870912],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1078,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4],"float16"), Tensor([1014, 4235668],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([8192, 512],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[108,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4],"float16"), Tensor([1073741824, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1080,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([8192, 536870912],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1083,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float16"), Tensor([1014, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1084,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1085,1,], )
paddle.nn.functional.linear(Tensor([8, 8192],"float32"), Tensor([8388608, 512],"float32"), )
paddle.Tensor.tile(Tensor([429496730, 5, 2],"float32"), list[1,1,2,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float32"), Tensor([10, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1086,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741824, 4],"float32"), Tensor([100, 4],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1087,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1088,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1089,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[109,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1092,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1093,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741825, 2],"float64"), Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1095,1,], )
paddle.nn.functional.linear(Tensor([8388608, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1096,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1099,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float16"), weight=Tensor([67108864, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1073741825, 2],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[110,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1556],"float32"), Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float32"), weight=Tensor([67108864, 64],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1100,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1101,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1102,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1103,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([17530479, 5, 7, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1104,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1105,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1106,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 2243975],"float32"), Tensor([1914, 50],"float32"), reduction="none", )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1108,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 50],"float32"), Tensor([1914, 2243975],"float32"), reduction="none", )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1109,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 50],"float32"), Tensor([85899346, 50],"float32"), reduction="none", )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[111,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1110,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1111,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1048576, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 21474837],"float32"), Tensor([200, 50],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1113,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1398102, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1114,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 50],"float32"), Tensor([200, 21474837],"float32"), reduction="none", )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1115,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 50],"float32"), Tensor([85899346, 50],"float32"), reduction="none", )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1116,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1117,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[112,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1120,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 10],"float64"), weight=Tensor([10, 20],"float64"), bias=Tensor([2147483649],"float64"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([21474837, 200],"float32"), Tensor([100, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1121,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 10],"float64"), weight=Tensor([10, 214748365],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.mod(Tensor([214748365, 20],"int32"), Tensor([10, 20],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1123,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 10],"float64"), weight=Tensor([107374183, 20],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1124,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 11008],"float16"), weight=Tensor([5592406, 768],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1126,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1127,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 11008],"float32"), weight=Tensor([5592406, 768],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1128,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 2147483649],"float64"), weight=Tensor([10, 20],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1129,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float16"), weight=Tensor([11008, 768],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[113,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1131,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1132,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 1024],"float32"), bias=None, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2160],"float32"), Tensor([4294967295],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1133,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1134,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1135,1,], )
paddle.Tensor.tile(Tensor([1, 300, 14316558],"float16"), list[2,1,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 1132640],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1136,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([24, 158, 1132640],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1137,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([24, 22369622, 8],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([11008, 768],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1138,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([3397918, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1139,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 22369622, 8],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1140,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1141,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024, 4194304],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1142,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1144,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1145,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1146,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([2870968, 187, 8],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1147,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([3397918, 158, 8],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1148,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1149,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[115,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 64],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1150,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 768],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1152,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([4294968, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1155,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([5592406, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1156,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([67108864, 64],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1157,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([85899346, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1158,1,], )
paddle.mod(Tensor([214748365, 4, 5],"int32"), Tensor([2, 4, 5],"int32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1159,1,], )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([429496730, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[116,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1162,1,], )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1163,1,], )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([256, 16777216],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1164,1,], )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1165,1,], )
paddle.nn.functional.linear(x=Tensor([1, 11, 390451573],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1166,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1100, 256],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1167,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1169,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[117,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1100, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1170,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1100, 3904516],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1172,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.nn.functional.linear(x=Tensor([1, 1156, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1173,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1156, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1174,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1156, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1175,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1156, 3715370],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1176,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.linear(x=Tensor([1, 120],"float32"), weight=Tensor([120, 35791395],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1177,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1178,1,], )
paddle.nn.functional.linear(x=Tensor([1, 120],"float32"), weight=Tensor([120, 84],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 120],"float32"), weight=Tensor([51130564, 84],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1179,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1296, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[118,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1296, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1180,1,], )
paddle.nn.functional.linear(x=Tensor([1, 1296, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.linear(x=Tensor([1, 1296, 3314018],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1181,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1182,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1183,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1184,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1185,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1186,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1187,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1188,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"bool"), list[1,1,16,], )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"bool"), list[1,1,5,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"bool"), list[1,1,91,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1189,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"float32"), list[1,100,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[119,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"float32"), list[1,14,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1190,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1191,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"int32"), list[1,1,4,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1192,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"int32"), list[1,1,68,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1193,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295, 1],"int32"), list[1,1,88,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([11184811, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1194,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 2796203],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), list[1,100,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1195,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([11184811, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1196,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), list[1,200,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 2796203],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1197,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), list[1,24,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1198,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), list[1,28,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float16"), weight=Tensor([2796203, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1199,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), list[1,40,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float16"), weight=Tensor([384, 11184811],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[120,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), list[100,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1200,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(11,1,), )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float32"), weight=Tensor([2796203, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1201,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([1556],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(18,1,), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1202,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([2160],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(200,1,), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1203,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(21,1,), )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1204,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float16"), weight=Tensor([11184811, 384],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(22,1,), )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float16"), weight=Tensor([768, 5592406],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1206,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(300,1,), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1207,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float32"), weight=Tensor([11184811, 384],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(6380,1,), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1208,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(8550,1,), )
paddle.nn.functional.smooth_l1_loss(Tensor([4294967295],"float32"), Tensor([4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1278265],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1278265],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1209,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(9,1,), )
paddle.nn.functional.smooth_l1_loss(Tensor([4],"float32"), Tensor([4294967295],"float32"), reduction="mean", delta=1.0, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[121,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1278265],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"float32"), tuple(900,1,), )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1536],"float16"), weight=Tensor([11184811, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1210,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1536],"float16"), weight=Tensor([1536, 2796203],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), Tensor([1073741825, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1211,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float16"), weight=Tensor([11184811, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float16"), weight=Tensor([768, 5592406],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1212,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,10,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1213,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 2],"float64"), label=Tensor([5, 429496730],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,100,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float32"), weight=Tensor([11184811, 384],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1214,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 429496730],"float64"), Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,101,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1215,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,102,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1216,1,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 16, 1198373],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,103,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 16, 768],"float16"), weight=Tensor([11184811, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 16, 768],"float16"), weight=Tensor([768, 5592406],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1217,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,105,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 429496730],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1218,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,106,], )
paddle.mod(Tensor([4, 1073741824],"int32"), Tensor([4, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1219,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,107,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[122,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,108,], )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 49933, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1222,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,109,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1225,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,11,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1226,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5113057, 105, 8],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,112,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1227,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,113,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1229,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,116,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[123,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,117,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1230,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,119,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5212339, 103, 8],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1234,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,12,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1235,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,122,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1237,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,123,], )
paddle.nn.functional.smooth_l1_loss(Tensor([5263441, 102, 8],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([1, 16, 49933, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1238,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,124,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1239,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,126,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[124,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,127,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,129,], )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 358871],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1240,1,], )
paddle.mod(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([2870968, 187, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,13,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1241,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([64, 187, 358871],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,131,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1242,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([64, 8388608, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,132,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1243,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 8388608, 8],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,138,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1245,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,139,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1247,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,14,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1248,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,140,], )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 50000],"float32"), Tensor([7, 613566757],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1249,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,142,], )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 50000],"float32"), Tensor([85900, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[125,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,145,], )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 613566757],"float32"), Tensor([7, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1250,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,146,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1252,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,149,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1253,1,], )
paddle.mod(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,15,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1254,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,150,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1256,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,156,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1257,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,16,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1259,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,168,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[126,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1260,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,169,], )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,17,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1261,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1262,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,172,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1263,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,18,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1264,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,19,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1265,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,190,], )
paddle.mod(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1266,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,196,], )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1267,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,2,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1268,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,20,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[127,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,200,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1270,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1271,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,209,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1272,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,21,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1274,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 5263441],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,210,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1275,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([5263441, 102, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,215,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1276,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([8, 102, 5263441],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,218,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1278,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,22,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,225,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1279,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,227,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[128,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,23,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 5212339],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,24,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([5212339, 103, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1281,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,249,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([8, 103, 5212339],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1282,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,25,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1283,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,252,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,255,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1284,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,26,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1285,1,], )
paddle.mod(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,27,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1286,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 5113057],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1289,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,28,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([5113057, 105, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[129,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,29,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1290,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([8, 105, 5113057],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,296,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1291,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([8, 67108864, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1292,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,3,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1293,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,30,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1294,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,303,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 10956550, 7, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1295,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,31,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1296,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,32,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1298,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,329,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,33,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1299,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 15339169, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,333,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[130,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,34,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1300,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,35,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1302,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,36,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 15339169],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1303,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,37,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([17530479, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.mod(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1304,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 10956550, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,38,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1306,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,39,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 5, 15339169, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1307,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,4,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1308,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 5, 7, 15339169],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,40,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1309,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,400,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[131,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,41,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1310,1,], )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 67108864, 8],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,42,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1311,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1312,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,43,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1313,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,44,], )
paddle.nn.functional.smooth_l1_loss(Tensor([85899346, 50],"float32"), Tensor([1914, 50],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1314,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,45,], )
paddle.nn.functional.smooth_l1_loss(Tensor([85899346, 50],"float32"), Tensor([200, 50],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1315,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,46,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1316,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,47,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1317,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,48,], )
paddle.nn.functional.smooth_l1_loss(Tensor([85900, 50000],"float32"), Tensor([7, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1318,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,49,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[132,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,5,], )
paddle.mod(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1320,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,50,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,51,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1321,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,52,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1322,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,53,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1324,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,54,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1326,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,55,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,56,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[133,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,57,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1331,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,58,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1332,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,59,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1333,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,6,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1334,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,60,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1335,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,61,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1336,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,62,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1338,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,63,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1339,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,64,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[134,1,], )
paddle.mod(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,65,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1340,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,66,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1344,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,67,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1345,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,68,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1347,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,69,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1348,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,7,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,70,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1349,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,71,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[135,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,72,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1351,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,73,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1352,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,74,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1353,1,], )
paddle.mod(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,75,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,76,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1355,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,77,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1357,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,78,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1358,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,79,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[136,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,8,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1361,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,80,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,81,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1362,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,83,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1364,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1365,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,84,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,85,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1368,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,86,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1369,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,87,], )
paddle.mod(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[137,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,88,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1370,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,9,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1371,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,91,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1372,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,92,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1373,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,93,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1376,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,96,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1377,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,97,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1378,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1,99,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1379,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[100,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[138,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1000,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1381,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1382,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1001,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1383,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1002,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1003,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1385,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1004,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1387,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1005,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1006,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1388,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1007,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1389,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1008,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"int64"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1009,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[139,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[101,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1390,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1010,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1391,1,], )
paddle.assign(list[Tensor([100, 21474837],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1011,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1012,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1392,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[10121,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1394,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1013,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1395,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1014,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1396,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1015,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1016,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1397,1,], )
paddle.mod(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1017,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1398,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1018,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1399,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1019,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[140,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[102,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1400,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1020,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1401,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1021,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1402,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1022,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1403,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1023,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1405,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1024,1,], )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 477218589],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1406,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1025,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), "mean", None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([4294967295, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1026,1,], )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1408,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1027,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1028,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1409,1,], )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 858993459],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1029,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[141,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[103,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1411,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1030,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1412,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[10307,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1413,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1031,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1032,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1416,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1033,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1417,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1034,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1418,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1035,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1419,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1036,1,], )
paddle.mod(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[142,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1037,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1420,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1038,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1421,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1039,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1422,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[104,1,], )
paddle.assign(list[Tensor([214748365, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1040,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1424,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1041,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1426,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1042,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1427,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float16"), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1429,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1043,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float16"), weight=Tensor([10, 4294967295],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[143,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1044,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1430,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([10, 4294967295],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1045,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1431,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1046,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1432,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1047,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 64],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1434,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1048,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1049,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1436,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[105,1,], )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([120, 84],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1050,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1051,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1438,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1052,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[144,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1053,1,], )
paddle.nn.functional.linear(x=Tensor([1, 57066, 14, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1440,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1441,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1054,1,], )
paddle.mod(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1442,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1055,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1444,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1056,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1445,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1057,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1446,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1058,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1059,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1447,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[106,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1448,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1060,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1449,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1061,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), "mean", None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[145,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1062,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1452,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1063,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1453,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1064,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1454,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1065,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1455,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1066,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1067,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1068,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1458,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1069,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1459,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[107,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[146,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1070,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[10709,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1460,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1071,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1461,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1072,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1464,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1073,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1466,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1074,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1075,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1467,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1076,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1468,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1077,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1469,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1078,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[147,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1079,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1471,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1472,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[108,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1473,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1080,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1475,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1081,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1476,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"int64"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1477,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1082,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1083,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1478,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1084,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1479,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[148,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1085,1,], )
paddle.mod(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1086,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1480,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1087,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1088,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1481,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1089,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1482,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[109,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1483,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1090,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1484,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1091,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1485,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1092,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1093,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1486,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1094,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1487,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1488,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1095,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1489,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1096,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[149,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1097,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1098,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1490,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1099,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1491,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[110,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1492,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1100,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1493,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1101,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1494,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1102,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1103,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1495,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1104,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1105,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1497,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1106,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1498,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1107,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[150,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1108,1,], )
paddle.mod(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1501,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1109,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[111,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1504,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"int32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1110,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1505,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1111,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1507,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1508,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1112,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1509,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1113,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[151,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1114,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1512,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1115,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1116,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1513,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1117,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1514,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1118,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1515,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1119,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1516,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[112,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1517,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1120,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1518,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1121,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1519,1,], )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 178956971],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1122,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"int64"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[152,1,], )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([1073741824, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1123,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1521,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1124,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1522,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1125,1,], )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1524,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1126,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1525,1,], )
paddle.mod(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1127,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1128,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([10, 10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1527,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1129,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[113,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1528,1,], )
paddle.nn.functional.linear(x=Tensor([10, 14336],"float32"), weight=Tensor([67108864, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[153,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1130,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1131,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), reduction="mean", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1531,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1132,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1532,1,], )
paddle.nn.functional.linear(x=Tensor([10, 16],"float32"), weight=Tensor([268435456, 16],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1133,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"int64"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1534,1,], )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1134,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1135,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1536,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1136,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), "none", None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([10, 429496730],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1137,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1538,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), "sum", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1138,1,], )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([14336, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1139,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[154,1,], )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[114,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1540,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"float32"), reduction="sum", )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([16, 16],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1140,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1541,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1141,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), "mean", None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([16, 429496730],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1543,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1142,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), "none", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1544,1,], )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 10],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1143,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1545,1,], )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 1],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1144,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1546,1,], )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 3],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1145,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1547,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 858993459],"int32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1146,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1549,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1147,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), "mean", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[155,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1148,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1550,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1552,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1149,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[115,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1553,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1150,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1554,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"float32"), reduction="sum", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1151,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1555,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), "mean", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1152,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1556,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), "none", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1153,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), "sum", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1557,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1154,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1558,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="mean", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1155,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="none", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1559,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1156,1,], )
paddle.nn.functional.soft_margin_loss(Tensor([5, 5],"float64"), Tensor([858993459, 5],"int32"), reduction="sum", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[156,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1157,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1560,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1561,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1158,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1563,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[11585,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1564,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1159,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1565,1,], )
paddle.Tensor.tile(Tensor([536870912, 4, 2],"float32"), list[1,1,2,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1566,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[116,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1567,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1160,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1568,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1161,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1569,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1162,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[157,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1163,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1570,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1164,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1571,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1165,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1166,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1573,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1167,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1574,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1168,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1169,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1575,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[117,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1576,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1170,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1577,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1171,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1578,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1172,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[158,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1580,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1173,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1582,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1174,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1583,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1584,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1175,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1585,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1176,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1586,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1177,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[159,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1178,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1590,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1179,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[118,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1592,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1180,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1593,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1181,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1594,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1182,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1595,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1183,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1596,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1184,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1597,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1185,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1598,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1186,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1599,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1187,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[160,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1600,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1188,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1601,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1189,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1602,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[119,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1603,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1190,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1605,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1191,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1607,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1192,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1608,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1193,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[161,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1194,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1195,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1613,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1196,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1614,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1197,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1198,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1616,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1199,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1617,1,], )
paddle.mod(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[120,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1618,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1200,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1619,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1201,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[162,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[12011,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1620,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1202,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1621,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1203,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1204,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1624,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1205,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1626,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1206,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1627,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1207,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1628,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1629,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1208,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[163,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1209,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[121,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1631,1,], )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([1431655765, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1632,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1210,1,], )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([4294967295, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1211,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1633,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[16333,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1212,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1634,1,], )
paddle.mod(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1213,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1214,1,], )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1639,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1215,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1216,1,], )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 1024],"float32"), weight=Tensor([1048576, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[164,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1217,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1640,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1218,1,], )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 240534],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1641,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1219,1,], )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 240534],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1642,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[122,1,], )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1643,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1220,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1644,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1221,1,], )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 4096],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1222,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1645,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1223,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1646,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1647,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1224,1,], )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 1536],"float32"), weight=Tensor([11184811, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1648,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1225,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1649,1,], )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1226,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[165,1,], )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 176719],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1227,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1650,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1228,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1651,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1229,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1652,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[123,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1230,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1653,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1231,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1654,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1232,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1655,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1233,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1234,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1656,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1235,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1657,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1236,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1658,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1237,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1238,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[166,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1239,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1660,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[124,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1661,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1240,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1662,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1241,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1664,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1242,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1665,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1243,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1244,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1667,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1245,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1246,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1668,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1247,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1669,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1248,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[167,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1249,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[125,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1250,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1671,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1251,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1672,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1252,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1673,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1253,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1674,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1675,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1254,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1676,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1255,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1256,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1677,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[16779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1257,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1678,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1258,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1679,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([2796203, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[168,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1259,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[126,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1681,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([2796203, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1260,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1682,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1261,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1262,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1683,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 684785],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1263,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 684785],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1684,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 9363, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1264,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1265,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1686,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1266,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 9363, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1267,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1688,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1268,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1, 1338, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1689,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1269,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[169,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[127,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1338, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1691,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1270,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1692,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1338, 2, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1693,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1271,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1694,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1272,1,], )
paddle.nn.functional.linear(x=Tensor([128, 1338, 4, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1695,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1273,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1274,1,], )
paddle.nn.functional.linear(x=Tensor([128, 16],"float32"), weight=Tensor([536870912, 8],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1696,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 1338, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1275,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1698,1,], )
paddle.mod(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1276,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1699,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 4682, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[170,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1277,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1700,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1278,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 4682, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1279,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1701,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[128,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1702,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1280,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 171197],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1703,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 171197],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1281,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1704,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1282,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float16"), weight=Tensor([5592406, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1283,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1707,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1284,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1285,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1709,1,], )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float32"), weight=Tensor([5592406, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 33554432],"float32"), weight=Tensor([16, 33554432],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[171,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1286,1,], )
paddle.nn.functional.linear(x=Tensor([128, 33554432],"float32"), weight=Tensor([16, 8],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1287,1,], )
paddle.nn.functional.linear(x=Tensor([128, 4, 1338, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1710,1,], )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 2341, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1288,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1711,1,], )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 2341, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1289,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1712,1,], )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 128],"float16"), weight=Tensor([11184811, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[129,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1713,1,], )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1714,1,], )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 42800],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1290,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1715,1,], )
paddle.nn.functional.linear(x=Tensor([128],"float32"), weight=Tensor([128, 100],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[12906,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1717,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1291,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1292,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1718,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[172,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1293,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1294,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1721,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1295,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1722,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1296,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1723,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1297,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1724,1,], )
paddle.mod(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1298,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1725,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1299,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1727,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[130,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1728,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1300,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1729,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1301,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[173,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1730,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1302,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1731,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1303,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1732,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1304,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1305,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1733,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1306,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1734,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1735,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1307,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1308,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1736,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1737,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1309,1,], )
paddle.nn.functional.linear(x=Tensor([128],"float32"), weight=Tensor([42949673, 100],"float32"), bias=Tensor([100],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1739,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[131,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[174,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1310,1,], )
paddle.nn.functional.linear(x=Tensor([13, 1474921, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1740,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1311,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1741,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1312,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1742,1,], )
paddle.nn.functional.linear(x=Tensor([13, 2, 5162221, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1313,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1743,1,], )
paddle.mod(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1314,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1744,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1315,1,], )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 23598722],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1745,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1316,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1746,1,], )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 32],"float32"), weight=Tensor([43383509, 99],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1317,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[175,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1318,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1750,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1319,1,], )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 105352],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1751,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[132,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1320,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1752,1,], )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 105352],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1321,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1322,1,], )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 32],"float32"), weight=Tensor([1073741824, 4],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1754,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1323,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1758,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1324,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1759,1,], )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 64],"float32"), weight=Tensor([1073741824, 4],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1325,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[176,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1326,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1327,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1761,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1328,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1762,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[133,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1763,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1330,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1764,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1331,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1765,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1332,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1766,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1333,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1767,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1334,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1769,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1335,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1336,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[177,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1770,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1337,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1771,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1338,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1773,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1339,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1776,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[134,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1340,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1777,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1341,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1342,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[178,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1343,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1344,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1780,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1345,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1346,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1347,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1782,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1348,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1783,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1349,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1784,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[135,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1785,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1350,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1788,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1351,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1789,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1352,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[179,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1353,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1791,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1354,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1793,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1355,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1794,1,], )
paddle.nn.functional.linear(x=Tensor([14336],"float32"), weight=Tensor([67108864, 64],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1795,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1356,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1357,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1796,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1358,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1797,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1359,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1798,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[136,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1360,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1799,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1361,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[180,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1362,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1800,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1363,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1364,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1802,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1805,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1365,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1366,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1807,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1367,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1808,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1368,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1809,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1369,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[181,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1810,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[137,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1811,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1370,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1813,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1371,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1814,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1372,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1815,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1373,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1816,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1374,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1817,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1375,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1818,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1376,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1819,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1377,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[182,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1378,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1820,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1379,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1821,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[138,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1822,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1380,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1823,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1381,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1824,1,], )
paddle.nn.functional.linear(x=Tensor([171197, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1382,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1825,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1383,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1826,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1385,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1829,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[183,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1386,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1830,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1387,1,], )
paddle.nn.functional.linear(x=Tensor([1],"float32"), weight=Tensor([1, 10240],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1831,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1388,1,], )
paddle.nn.functional.linear(x=Tensor([1],"float32"), weight=Tensor([1, 4294967295],"float32"), bias=Tensor([10240],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1833,1,], )
paddle.mod(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1389,1,], )
paddle.nn.functional.linear(x=Tensor([1],"float32"), weight=Tensor([419431, 10240],"float32"), bias=Tensor([10240],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1834,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[139,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1837,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1390,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[184,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1391,1,], )
paddle.nn.functional.linear(x=Tensor([2147483648, 2],"float32"), weight=Tensor([2, 5],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1392,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1840,1,], )
paddle.nn.functional.linear(x=Tensor([2147483648, 2],"float32"), weight=Tensor([2147483648, 5],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1393,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1841,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1394,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1842,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1395,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1843,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1396,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1397,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1845,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1398,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1846,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1847,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1399,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1848,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[140,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1849,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1400,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1401,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[185,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1850,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1402,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1851,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1403,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1853,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1854,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1404,1,], )
paddle.mod(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1405,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1855,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1406,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1856,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1408,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1857,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1409,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1859,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[141,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[186,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1410,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1860,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1411,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1861,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1412,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1863,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1413,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1864,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1414,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1865,1,], )
paddle.autograd.hessian(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 2],"float32"), batch_axis=0, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1415,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1866,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1416,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1868,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1417,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1869,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1418,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[187,1,], )
paddle.autograd.hessian(Tensor([5, 858993459],"float32"), Tensor([5, 2],"float32"), batch_axis=0, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1419,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1870,1,], )
paddle.autograd.hessian(Tensor([5, 858993459],"float32"), Tensor([5, 858993459],"float32"), batch_axis=0, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[142,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1871,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1420,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1872,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1421,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1873,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1422,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1874,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1423,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1875,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1424,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1877,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1425,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1878,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1426,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1879,1,], )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 16],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1427,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[188,1,], )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1880,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1428,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1881,1,], )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1429,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1882,1,], )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[143,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1883,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1430,1,], )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 8],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1884,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1431,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1885,1,], )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([16, 153391690],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1432,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1887,1,], )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([16, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1433,1,], )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([8, 153391690],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1888,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1434,1,], )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([8, 5],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1889,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1435,1,], )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([16, 268435456],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[189,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1436,1,], )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([536870912, 8],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1890,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1437,1,], )
paddle.nn.functional.linear(x=Tensor([28, 8],"float32"), weight=Tensor([8, 536870912],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1438,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1891,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1439,1,], )
paddle.nn.functional.linear(x=Tensor([28, 8],"float32"), weight=Tensor([858993459, 5],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1892,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[144,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1893,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1440,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1894,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1441,1,], )
paddle.nn.functional.linear(x=Tensor([299594, 14336],"float32"), weight=Tensor([299594, 64],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1442,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1895,1,], )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([16, 143165577],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1896,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1443,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1897,1,], )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([16, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1444,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1898,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1445,1,], )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([2, 143165577],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1899,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1446,1,], )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([2, 5],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[190,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1447,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1900,1,], )
paddle.nn.functional.linear(x=Tensor([30, 16],"float32"), weight=Tensor([16, 268435456],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1448,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1901,1,], )
paddle.nn.functional.linear(x=Tensor([30, 16],"float32"), weight=Tensor([2147483648, 2],"float32"), )
paddle.mod(Tensor([4, 5],"int32"), Tensor([4, 1073741824],"int32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1449,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1903,1,], )
paddle.nn.functional.linear(x=Tensor([30, 2],"float32"), weight=Tensor([2, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[145,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1905,1,], )
paddle.nn.functional.linear(x=Tensor([30, 2],"float32"), weight=Tensor([858993459, 5],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1450,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1451,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1906,1,], )
paddle.bitwise_and(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1452,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1907,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1453,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1908,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1454,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1909,1,], )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1455,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[191,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1456,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1911,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1457,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1912,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1458,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1913,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1459,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1914,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[146,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1915,1,], )
paddle.mod(Tensor([4, 5],"int32"), Tensor([858993459, 5],"int32"), )
paddle.Tensor.tile(Tensor([55925, 300, 256],"float16"), list[2,1,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1460,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1917,1,], )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1461,1,], )
paddle.nn.functional.linear(x=Tensor([38, 113025456],"float32"), weight=Tensor([16, 113025456],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1919,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1462,1,], )
paddle.nn.functional.linear(x=Tensor([38, 113025456],"float32"), weight=Tensor([16, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[192,1,], )
paddle.bitwise_and(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1463,1,], )
paddle.nn.functional.linear(x=Tensor([38, 16],"float32"), weight=Tensor([1073741824, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1920,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1464,1,], )
paddle.nn.functional.linear(x=Tensor([38, 16],"float32"), weight=Tensor([16, 268435456],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1921,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1465,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1466,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1922,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1467,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1923,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1468,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1924,1,], )
paddle.nn.functional.linear(x=Tensor([4, 1073741824],"float32"), weight=Tensor([8, 1073741824],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1469,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1925,1,], )
paddle.nn.functional.linear(x=Tensor([4, 1073741824],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[147,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1926,1,], )
paddle.mod(Tensor([4294967295],"int32"), Tensor([1],"int32"), )
paddle.nn.functional.linear(x=Tensor([4, 1073741824],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1470,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1927,1,], )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([1431655765, 3],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1471,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1929,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1472,1,], )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([715827883, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[193,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1473,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1930,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1474,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1475,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1931,1,], )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 536870912],"float32"), bias=Tensor([6],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1476,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1932,1,], )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1477,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1934,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1478,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1935,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1479,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1936,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[148,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1939,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[194,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1480,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1940,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1481,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1941,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1482,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1942,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1483,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1944,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1484,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1945,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1485,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1486,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1947,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1487,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1948,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[14877,1,], )
paddle.Tensor.tile(Tensor([60798, 1, 70644],"bool"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1488,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1949,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1489,1,], )
paddle.Tensor.tile(Tensor([613566757, 7, 1],"bool"), list[1,1,16,], )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[195,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[149,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1950,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1490,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1954,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1491,1,], )
paddle.nn.functional.softmax(Tensor([1024, 203, 144, 144],"float32"), -1, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1955,1,], )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1492,1,], )
paddle.nn.functional.linear(x=Tensor([42800, 4, 4, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1956,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1493,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1957,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1494,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1958,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1495,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1959,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([1, 10240],"float32"), bias=Tensor([10240],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1496,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[196,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([10, 10],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1497,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1960,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([10, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1498,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1962,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([10, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1499,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1963,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([128, 100],"float32"), bias=Tensor([100],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[150,1,], )
paddle.mod(Tensor([4294967295],"int32"), Tensor([6],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1964,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1500,1,], )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([64, 14336],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1501,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1965,1,], )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1503,1,], )
paddle.nn.functional.linear(x=Tensor([429496730, 10],"float16"), weight=Tensor([429496730, 10],"float16"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1966,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1504,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1967,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1505,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[15050,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[197,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1506,1,], )
paddle.nn.functional.linear(x=Tensor([429496730, 10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1970,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1507,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1971,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1508,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1973,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[15083,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1974,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1509,1,], )
paddle.mod(Tensor([6, 2, 4, 5],"int32"), Tensor([107374183, 2, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1975,1,], )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[151,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1976,1,], )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1510,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1977,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1511,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1979,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1512,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[198,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1513,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1980,1,], )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1514,1,], )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1981,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1515,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1516,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1982,1,], )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1517,1,], )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1983,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1518,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1519,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1985,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[152,1,], )
paddle.mod(Tensor([6, 2, 4, 5],"int32"), Tensor([6, 2, 4, 89478486],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1986,1,], )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1520,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1987,1,], )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1521,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1989,1,], )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1522,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[199,1,], )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1991,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1523,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1992,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1524,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1993,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1525,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1994,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1526,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1995,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1527,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1996,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1528,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.mod(Tensor([6, 2, 4, 5],"int32"), Tensor([6, 2, 71582789, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1997,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1529,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1998,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[153,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[1999,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1530,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[200,1,], )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1531,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2000,1,], )
paddle.bitwise_left_shift(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1532,1,], )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([536870912, 3],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2001,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1533,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2003,1,], )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([536870912, 5],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1534,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2004,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2005,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1536,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2006,1,], )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1537,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2007,1,], )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2009,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1538,1,], )
paddle.mod(Tensor([6, 2, 4, 5],"int32"), Tensor([6, 35791395, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[201,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1539,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2010,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[154,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2011,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1540,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2012,1,], )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1541,1,], )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1542,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2013,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1543,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2014,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1544,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2015,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1545,1,], )
paddle.nn.functional.linear(x=Tensor([64],"float32"), weight=Tensor([299594, 14336],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2017,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1546,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2018,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2019,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1547,1,], )
paddle.mod(Tensor([6, 2, 4, 89478486],"int32"), Tensor([6, 2, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[202,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1548,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2020,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1549,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2022,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 286331153, 5],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[155,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1550,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2023,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 286331153, 5],"int32"), True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1551,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2025,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 4, 357913942],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1552,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2026,1,], )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 4, 357913942],"int32"), True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1553,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2029,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1554,1,], )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[203,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1555,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2030,1,], )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1556,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2031,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1557,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1558,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2032,1,], )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1559,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2033,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[156,1,], )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2034,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1560,1,], )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2036,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1561,1,], )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([1],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2037,1,], )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1562,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2038,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1563,1,], )
paddle.bitwise_left_shift(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1564,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2039,1,], )
paddle.bitwise_left_shift(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[204,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1565,1,], )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2040,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1566,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2041,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1567,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2042,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1568,1,], )
paddle.nn.functional.linear(x=Tensor([8, 536870912],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2043,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1569,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2045,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[157,1,], )
paddle.nn.functional.linear(x=Tensor([8, 536870912],"float32"), weight=Tensor([8, 536870912],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2046,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1570,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2047,1,], )
paddle.nn.functional.linear(x=Tensor([8, 8],"float32"), weight=Tensor([1431655765, 3],"float32"), bias=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1571,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2048,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1572,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2049,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1573,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2050,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1574,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1575,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2051,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1576,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2052,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1577,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2053,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1578,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1579,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2054,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[158,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2055,1,], )
paddle.mod(Tensor([6, 2, 71582789, 5],"int32"), Tensor([6, 2, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2057,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1580,1,], )
paddle.bitwise_or(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1581,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2059,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1582,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[206,1,], )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1583,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2060,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1584,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2061,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1585,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2062,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1586,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2063,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1587,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2064,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1588,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1589,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2065,1,], )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[159,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2066,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2067,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1590,1,], )
paddle.bitwise_or(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2068,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1592,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2069,1,], )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1593,1,], )
paddle.nn.functional.linear(x=Tensor([85599, 2, 2, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[207,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1594,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2070,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1595,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1596,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2071,1,], )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1597,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2072,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1598,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2073,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1599,1,], )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2074,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[160,1,], )
paddle.nn.functional.linear(x=Tensor([9586981, 2, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2075,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1600,1,], )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1601,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2076,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1602,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2078,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([1, 10],"float32"),), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1603,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2079,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([1, 4294967295],"float32"),), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1604,1,], )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 4294967295],"float32"),), weight=Tensor([10, 4294967295],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[208,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1605,1,], )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2080,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1606,1,], )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2081,1,], )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1607,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2083,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1608,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2087,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1609,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2088,1,], )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[161,1,], )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2089,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1610,1,], )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1611,1,], )
paddle.mod(Tensor([6, 35791395, 4, 5],"int32"), Tensor([6, 2, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[209,1,], )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1612,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2090,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[16121,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2091,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1613,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2092,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1614,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2093,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1616,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2094,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1617,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2096,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([134217728, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1618,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2097,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2099,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 134217728],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1619,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[162,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[210,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1620,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2100,1,], )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1621,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2101,1,], )
paddle.bitwise_right_shift(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1622,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2102,1,], )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1623,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2103,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([134217728, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1624,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1625,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 134217728],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2104,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1626,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2106,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1627,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2107,1,], )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2108,1,], )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1628,1,], )
paddle.bitwise_right_shift(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1629,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2109,1,], )
paddle.bitwise_right_shift(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[163,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[211,1,], )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([1],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1630,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2110,1,], )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1631,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2112,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1632,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2114,1,], )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1633,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2115,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[16333,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2116,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1634,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2117,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1636,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2118,1,], )
paddle.bitwise_xor(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1637,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2119,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1638,1,], )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1639,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[212,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[164,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2120,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1640,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2121,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1641,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2122,1,], )
paddle.mod(Tensor([6],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1642,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2124,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1643,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2126,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1644,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2127,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1645,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2129,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1646,1,], )
paddle.bitwise_xor(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[213,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1647,1,], )
paddle.nn.functional.linear(x=tuple(Tensor([429496730, 10],"float32"),), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2130,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1648,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2131,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1649,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2132,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[165,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2133,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1650,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1651,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2134,1,], )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 40, 894785],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1652,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1653,1,], )
paddle.nn.functional.local_response_norm(Tensor([3, 894785, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2136,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1654,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2137,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1655,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2138,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"bool"),Tensor([1, 119304648, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1656,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[214,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([2684355, 40, 40],"float32"), size=5, data_format="NCL", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1657,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2140,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 10285, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1658,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([2684355, 40, 40],"float32"), size=5, data_format="NLC", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2141,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 10285, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1659,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2142,1,], )
paddle.mod(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[166,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2143,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2144,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1660,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 24276, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2145,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1661,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.nn.functional.local_response_norm(x=Tensor([3, 298262, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2146,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 27216, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1662,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2147,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1663,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2148,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 30324, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1664,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1665,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2149,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1666,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 33600, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[215,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1667,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2151,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1668,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1669,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2152,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[167,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2153,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1670,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2154,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1671,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2156,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1672,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 40, 298262],"float32"), size=5, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1673,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2157,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1674,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[216,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([3, 35791395, 40],"float32"), size=5, data_format="NCL", )
paddle.Tensor.__sub__(Tensor([1, 1, 144],"float32"), Tensor([1, 144, 29826162],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2160,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1675,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2161,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([3, 35791395, 40],"float32"), size=5, data_format="NLC", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1676,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 144],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2162,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1677,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2163,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[16779,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.mod(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2164,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 35791395],"float32"), size=5, data_format="NCL", )
paddle.Tensor.__sub__(Tensor([1, 1, 1],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1678,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2165,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 1],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 35791395],"float32"), size=5, data_format="NLC", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2166,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1679,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2167,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[168,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40, 894785],"float32"), size=5, data_format="NHWC", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2169,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1680,1,], )
paddle.nn.functional.local_response_norm(x=Tensor([3, 894785, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[217,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1681,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 24276],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1682,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2170,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1683,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2172,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1684,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2174,1,], )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([10, 429496730],"float32"), epsilon=0.0001, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1685,1,], )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([4294967295, 1],"float32"), epsilon=0.0001, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2175,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1686,1,], )
paddle.nn.functional.log_loss(Tensor([10, 429496730],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2176,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 178956971, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1687,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2177,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 27216],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1688,1,], )
paddle.nn.functional.log_loss(Tensor([10, 429496730],"float32"), label=Tensor([10, 429496730],"float32"), epsilon=0.0001, name=None, )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2179,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1689,1,], )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([128, 33554432],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[218,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[169,1,], )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1690,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2180,1,], )
paddle.nn.functional.log_loss(Tensor([128, 33554432],"float32"), Tensor([128, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2181,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1691,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2183,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1692,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 178956971, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1693,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2184,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"bool"),Tensor([1, 357913942, 1, 1, 3],"bool"),Tensor([1, 357913942, 1, 6, 3],"bool"),Tensor([1, 357913942, 1, 6, 3],"bool"),], )
paddle.Tensor.__sub__(Tensor([1, 1, 33554432, 64, 2],"float32"), Tensor([16, 10, 33554432, 1, 2],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.nn.functional.log_loss(Tensor([128, 33554432],"float32"), Tensor([128, 33554432],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2185,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1694,1,], )
paddle.mod(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2186,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1695,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"float32"),Tensor([1, 357913942, 1, 1, 3],"float32"),Tensor([1, 357913942, 1, 6, 3],"float32"),Tensor([1, 357913942, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1696,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2187,1,], )
paddle.nn.functional.log_loss(Tensor([400, 10737419],"float32"), Tensor([400, 10737419],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1697,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2188,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"int32"),Tensor([1, 357913942, 1, 1, 3],"int32"),Tensor([1, 357913942, 1, 6, 3],"int32"),Tensor([1, 357913942, 1, 6, 3],"int32"),], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 10285, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 10737419],"float32"), Tensor([400, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1698,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2189,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([400, 10737419],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1699,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[219,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2190,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[170,1,], )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1700,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2192,1,], )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), Tensor([128, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 59652324, 6, 6, 1],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1701,1,], )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), Tensor([400, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2193,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1702,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2194,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1703,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2195,1,], )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1704,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 59652324, 6, 6, 1],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2196,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1705,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1706,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2197,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 119304648, 1, 3],"bool"),Tensor([1, 1, 119304648, 6, 3],"bool"),Tensor([1, 6, 119304648, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 119304648, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1707,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2198,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1708,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2199,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1709,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[220,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[171,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2200,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"float32"),Tensor([1, 6, 119304648, 1, 3],"float32"),Tensor([1, 1, 119304648, 6, 3],"float32"),Tensor([1, 6, 119304648, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1710,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2201,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"float32"),Tensor([1, 6, 119304648, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1711,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2202,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 144, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1712,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2203,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 144, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1713,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2204,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1714,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2206,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1715,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2207,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"int32"),Tensor([1, 6, 119304648, 1, 3],"int32"),Tensor([1, 1, 119304648, 6, 3],"int32"),Tensor([1, 6, 119304648, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1716,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2208,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"int32"),Tensor([1, 6, 119304648, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1717,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 64, 33554432, 2],"float32"), Tensor([16, 10, 1, 33554432, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2209,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1718,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[221,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 178956971, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2210,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 64, 64, 1048576],"float32"), Tensor([16, 10, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1719,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2211,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[172,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 64, 64, 2],"float32"), Tensor([16, 10, 1, 1, 26843546],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1720,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2212,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 64, 64, 2],"float32"), Tensor([16, 10, 1, 13421773, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1721,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 178956971, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2213,1,], )
paddle.Tensor.__sub__(Tensor([1, 1, 64, 64, 2],"float32"), Tensor([16, 10, 13421773, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1722,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2215,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1723,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2216,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1724,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1725,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2217,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1726,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"bool"),Tensor([1, 6, 1, 357913942, 3],"bool"),Tensor([1, 1, 1, 357913942, 3],"bool"),Tensor([1, 6, 1, 357913942, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2218,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1727,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2219,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.__sub__(Tensor([1, 1001],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1728,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[222,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"float32"),Tensor([1, 6, 1, 357913942, 3],"float32"),Tensor([1, 1, 1, 357913942, 3],"float32"),Tensor([1, 6, 1, 357913942, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1729,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2220,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"int32"),Tensor([1, 6, 1, 357913942, 3],"int32"),Tensor([1, 1, 1, 357913942, 3],"int32"),Tensor([1, 6, 1, 357913942, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2222,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 1431655765, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[173,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 1431655765, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 238609295, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 238609295, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2223,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 119304648],"bool"),], )
paddle.Tensor.__sub__(Tensor([1, 1002],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 39768216, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1730,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([39768216, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2224,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 715827883],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1731,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 238609295, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 238609295, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2225,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1732,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 715827883],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 238609295, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2226,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 238609295, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1733,1,], )
paddle.Tensor.__sub__(Tensor([1, 1004],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2227,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1734,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 1431655765, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2228,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1735,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1736,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[223,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 1431655765, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1737,1,], )
paddle.Tensor.__sub__(Tensor([1, 100],"float32"), Tensor([4294967295],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 238609295, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2230,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1738,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 238609295, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2231,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1739,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 119304648],"float32"),], )
paddle.Tensor.__sub__(Tensor([1, 100],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 39768216, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[174,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2232,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1740,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2233,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1741,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2234,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 715827883],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1742,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1743,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2236,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 238609295, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1744,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2237,1,], )
paddle.Tensor.__sub__(Tensor([1, 10285],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 238609295, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1745,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2239,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1746,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[224,1,], )
paddle.mod(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1747,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 715827883],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2240,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1748,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2241,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 238609295, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1749,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2242,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 238609295, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2243,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[175,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1750,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2244,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 357913942],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2245,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1751,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1752,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 357913942],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2246,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1753,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2247,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 119304648, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1754,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2248,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 119304648, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1755,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2249,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 59652324],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1756,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[225,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 19884108, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1757,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2250,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1758,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 715827883, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2252,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1759,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 119304648, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[176,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2253,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 119304648, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1760,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2254,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1761,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2255,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 119304648, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1762,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2256,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 119304648, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1763,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2257,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 715827883, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[17630,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2258,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2259,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1764,1,], )
paddle.Tensor.__sub__(Tensor([1, 123],"float32"), Tensor([4294967295],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 1431655765, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[226,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1765,1,], )
paddle.mod(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 1431655765, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2261,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1766,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 238609295, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2263,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1767,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 238609295, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2264,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 119304648],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1768,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2268,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 39768216, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1769,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[177,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2269,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1770,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[227,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 715827883],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1771,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2270,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 238609295, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1772,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2272,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 238609295, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1773,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2273,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1775,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2274,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1776,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 715827883],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2275,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1777,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 238609295, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2276,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1778,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 238609295, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1779,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2279,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[178,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1780,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[228,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1781,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2280,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 357913942],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1782,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 357913942],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2281,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 119304648, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1783,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2282,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 119304648, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1784,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1785,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 59652324],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2283,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1786,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 19884108, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2284,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1787,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2288,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1788,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 715827883, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[229,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1789,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2290,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 119304648, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[179,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 119304648, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2291,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1790,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2292,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 119304648, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1791,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2293,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 119304648, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1792,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2294,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 715827883, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1793,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2295,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1794,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2296,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1795,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2297,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1796,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 29826162],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1797,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2298,1,], )
paddle.mod(Tensor([858993459, 5],"int32"), Tensor([4, 5],"int32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1798,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2299,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1799,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[230,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 29826162],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[180,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2301,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1800,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2302,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1801,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2303,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1802,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2305,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1803,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2306,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1804,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2307,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1805,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2309,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1806,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[231,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1807,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2313,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1808,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2314,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1809,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2315,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[181,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2316,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1810,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1811,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2317,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1812,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2318,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"float64"),Tensor([1, 6, 59652324, 1, 3],"float64"),Tensor([1, 1, 59652324, 6, 3],"float64"),Tensor([1, 6, 59652324, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1813,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"float64"),Tensor([1, 6, 59652324, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[232,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1814,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1815,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2321,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1816,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2322,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2323,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1817,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2324,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1818,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"int64"),Tensor([1, 6, 59652324, 1, 3],"int64"),Tensor([1, 1, 59652324, 6, 3],"int64"),Tensor([1, 6, 59652324, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2325,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1819,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"int64"),Tensor([1, 6, 59652324, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"bool"),Tensor([1, 6, 1, 119304648, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2326,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[182,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1820,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[233,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1821,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2331,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1822,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2333,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1823,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2334,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1824,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2335,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1825,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1826,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2336,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2339,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1828,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[234,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 59652324, 1],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1829,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2340,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[183,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2341,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1830,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2342,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1831,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 59652324, 1],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2343,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1832,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2344,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1833,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2345,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1834,1,], )
paddle.Tensor.__sub__(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1835,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2346,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1836,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2347,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1837,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2348,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1838,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2349,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1839,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[235,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[184,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 238609295, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 238609295, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 119304648],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1840,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2350,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 39768216, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2351,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([39768216, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1841,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1842,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2353,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 238609295, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1843,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 6, 1, 238609295, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2355,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1844,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2356,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 6, 39768216, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1845,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2357,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2358,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 119304648, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1846,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[236,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 6, 1, 119304648, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2360,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1847,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2361,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 6, 19884108, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1848,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2362,1,], )
paddle.Tensor.__sub__(Tensor([1, 2147483648, 2],"float32"), Tensor([21504, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1849,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2363,1,], )
paddle.Tensor.__sub__(Tensor([1, 2147483648, 2],"float32"), Tensor([24276, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[185,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 238609295, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2364,1,], )
paddle.Tensor.__sub__(Tensor([1, 2147483648, 2],"float32"), Tensor([27216, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 2147483648, 2],"float32"), Tensor([30324, 2],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 6, 1, 238609295, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1850,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2365,1,], )
paddle.Tensor.__sub__(Tensor([1, 2147483648, 2],"float32"), Tensor([33600, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1851,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2366,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 6, 39768216, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1852,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2367,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1853,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2368,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1854,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2369,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 119304648, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 6, 1, 119304648, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1855,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[237,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2370,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1856,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1857,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2372,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 6, 19884108, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1858,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2373,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1859,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2375,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[186,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2376,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 9942054],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1860,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2378,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1861,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2379,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1862,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[238,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1863,1,], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 9942054],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2380,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1864,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1865,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2381,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1866,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1867,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2382,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1868,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"bool"),Tensor([119304648, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2383,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1869,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[187,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2385,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1870,1,], )
paddle.nn.functional.softmax(Tensor([110, 150, 512, 512],"float32"), axis=1, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1871,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2386,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.Tensor.__sub__(Tensor([1, 2147483649],"float64"), Tensor([1, 100],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2387,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1872,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2388,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1873,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2389,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1874,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[239,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1875,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2390,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1876,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2391,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1877,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2392,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1878,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2393,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1879,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2394,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2395,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[188,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2397,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1880,1,], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"int32"),Tensor([6, 1, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"bool"),Tensor([19884108, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1881,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2398,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1882,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2399,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1883,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[240,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1884,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1885,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2400,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1886,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2401,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1887,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2402,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1888,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2403,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1889,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2404,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[189,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2405,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1890,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2406,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1891,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1892,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2408,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1893,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2409,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1894,1,], )
paddle.Tensor.__sub__(Tensor([1, 21504, 199729],"float32"), Tensor([21504, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[241,1,], )
paddle.Tensor.__sub__(Tensor([1, 21504, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1895,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2410,1,], )
paddle.Tensor.__sub__(Tensor([1, 21504, 2],"float32"), Tensor([21504, 199729],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2411,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1896,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1897,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2412,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1898,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1899,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2413,1,], )
paddle.broadcast_tensors(input=list[Tensor([357913942, 6],"float64"),Tensor([6, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[190,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2414,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1900,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2415,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1901,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2418,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1902,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2419,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[242,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1903,1,], )
paddle.broadcast_tensors(input=list[Tensor([357913942, 6],"int64"),Tensor([6, 1],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2420,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1904,1,], )
paddle.Tensor.__sub__(Tensor([1, 24276, 176923],"float32"), Tensor([24276, 2],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"bool"),Tensor([59652324, 6, 1, 1, 3],"bool"),Tensor([59652324, 1, 1, 6, 3],"bool"),Tensor([59652324, 6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2421,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1905,1,], )
paddle.Tensor.__sub__(Tensor([1, 24276, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2422,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1906,1,], )
paddle.Tensor.__sub__(Tensor([1, 24276, 2],"float32"), Tensor([24276, 176923],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2423,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1907,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2424,1,], )
paddle.Tensor.__sub__(Tensor([1, 256000],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1908,1,], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"float32"),Tensor([59652324, 6, 1, 1, 3],"float32"),Tensor([59652324, 1, 1, 6, 3],"float32"),Tensor([59652324, 6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2425,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1909,1,], )
paddle.Tensor.__sub__(Tensor([1, 27216, 157811],"float32"), Tensor([27216, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[191,1,], )
paddle.Tensor.__sub__(Tensor([1, 27216, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2427,1,], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"int32"),Tensor([59652324, 6, 1, 1, 3],"int32"),Tensor([59652324, 1, 1, 6, 3],"int32"),Tensor([59652324, 6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1910,1,], )
paddle.Tensor.__sub__(Tensor([1, 27216, 2],"float32"), Tensor([27216, 157811],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2428,1,], )
paddle.Tensor.__sub__(Tensor([1, 29826162, 144],"float32"), Tensor([1, 144, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1911,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2429,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1912,1,], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6, 1],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[243,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1913,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2430,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1914,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2432,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1915,1,], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6, 1],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2433,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1916,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2434,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1917,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2435,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1918,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2436,1,], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6],"float64"),Tensor([6, 1, 6],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1919,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2438,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[192,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2439,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1920,1,], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6],"int64"),Tensor([6, 1, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1921,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"bool"),Tensor([6, 119304648, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[244,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1922,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1923,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2440,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1924,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"float32"),Tensor([6, 119304648, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2441,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1925,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1926,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2442,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1927,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2443,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"int32"),Tensor([6, 119304648, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1928,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2445,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1929,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2446,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[193,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2447,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1930,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2448,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1931,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2449,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1932,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[245,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1933,1,], )
paddle.Tensor.__sub__(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1934,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2451,1,], )
paddle.Tensor.__sub__(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1935,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2452,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1936,1,], )
paddle.Tensor.__sub__(Tensor([1, 3, 224, 224],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2453,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1937,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2454,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1938,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2455,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1939,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2456,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[194,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1940,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1941,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2458,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1942,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1943,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2459,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1944,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[246,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1945,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2460,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1947,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2461,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1948,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2462,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1949,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2463,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[195,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2464,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6, 1],"float64"),Tensor([6, 59652324, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1950,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2465,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1951,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2466,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6, 1],"int64"),Tensor([6, 59652324, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1952,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2468,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1953,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2469,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1954,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[247,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1955,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2470,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1956,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2471,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1957,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1958,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2472,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1959,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2473,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[196,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1960,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2474,1,], )
paddle.Tensor.__sub__(Tensor([1, 3, 686, 1024],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2475,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1961,1,], )
paddle.Tensor.__sub__(Tensor([1, 3, 686, 1024],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"bool"),Tensor([6, 1, 119304648, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2476,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1962,1,], )
paddle.Tensor.__sub__(Tensor([1, 3, 686, 1024],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2478,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1963,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2479,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1964,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1965,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[248,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1966,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2480,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1967,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2481,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1968,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2482,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1969,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2483,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[197,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2484,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1970,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1971,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2487,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1972,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2488,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1973,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2489,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1974,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1975,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[249,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"int32"),Tensor([6, 1, 6],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1976,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2491,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1977,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2492,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1978,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2493,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324, 1],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1979,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2494,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[198,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2495,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324, 1],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1980,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2498,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1981,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1982,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[250,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324],"float64"),Tensor([6, 1, 6],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1983,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2500,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1985,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2503,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324],"int64"),Tensor([6, 1, 6],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1986,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2504,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1987,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2505,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1988,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.Tensor.__sub__(Tensor([1, 30324, 141636],"float32"), Tensor([30324, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 30324, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1989,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2506,1,], )
paddle.Tensor.__sub__(Tensor([1, 30324, 2],"float32"), Tensor([30324, 141636],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[199,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2507,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1990,1,], )
paddle.Tensor.__sub__(Tensor([1, 33600, 127827],"float32"), Tensor([33600, 2],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2508,1,], )
paddle.Tensor.__sub__(Tensor([1, 33600, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1991,1,], )
paddle.Tensor.__sub__(Tensor([1, 33600, 2],"float32"), Tensor([33600, 127827],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2509,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1992,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[251,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1993,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2510,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2512,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1994,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([238609295, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 1, 238609295, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 1, 6, 119304648],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1995,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2513,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 39768216, 6, 3],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2514,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1996,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([238609295, 1, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2515,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1997,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([6, 1, 238609295, 3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2516,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2518,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1998,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([6, 39768216, 6, 3],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[1999,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([119304648, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2519,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([6, 1, 119304648, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[200,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[252,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2000,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2520,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([6, 19884108, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2001,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2521,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2002,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([238609295, 1, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2522,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2003,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2523,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([6, 1, 238609295, 3],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2004,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2524,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2005,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([6, 39768216, 6, 3],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2525,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([119304648, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2006,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([6, 1, 119304648, 3],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2527,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2007,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2528,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2008,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([6, 19884108, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2009,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2529,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[201,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 10285, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 9942054],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2010,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2531,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2011,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2532,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2012,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2013,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2534,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 9942054],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2014,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2015,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2536,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 10285, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2016,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2537,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"bool"),Tensor([6, 1, 715827883],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2017,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 24276, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"bool"),Tensor([6, 119304648, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"bool"),Tensor([715827883, 1, 6],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2538,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2018,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 27216, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float32"),Tensor([6, 1, 715827883],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2539,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2019,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 30324, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float32"),Tensor([6, 119304648, 6],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[202,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[254,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 33600, 1],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float32"),Tensor([715827883, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float64"),Tensor([357913942, 1, 6],"float64"),], )
paddle.Tensor.__sub__(Tensor([1, 4294967295, 1],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2020,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float64"),Tensor([6, 1, 357913942],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2543,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2021,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float64"),Tensor([6, 59652324, 6],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2544,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int32"),Tensor([6, 1, 715827883],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2022,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2545,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int32"),Tensor([6, 119304648, 6],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2023,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2546,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int32"),Tensor([715827883, 1, 6],"int32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2024,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int64"),Tensor([357913942, 1, 6],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2548,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int64"),Tensor([6, 1, 357913942],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2549,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2025,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int64"),Tensor([6, 59652324, 6],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[255,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2026,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"bool"),Tensor([4294967295, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"bool"),Tensor([6, 715827883],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2550,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2027,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2551,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2028,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2029,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2552,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float32"),Tensor([6, 715827883],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2553,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[203,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float64"),Tensor([2147483649, 1],"float64"),], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([1, 1001],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float64"),Tensor([6, 357913942],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2555,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2030,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([1, 1002],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int32"),Tensor([4294967295, 1],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2557,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([1, 1004],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2031,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int32"),Tensor([6, 715827883],"int32"),], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([1, 10285],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2558,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2032,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int64"),Tensor([2147483649, 1],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2559,1,], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int64"),Tensor([6, 357913942],"int64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2033,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[256,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2034,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2035,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2560,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2036,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2561,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([100],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2563,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2037,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([123],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2564,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2038,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2566,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([256000],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2039,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2568,1,], )
paddle.Tensor.__sub__(Tensor([1, 4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[204,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2569,1,], )
paddle.Tensor.__sub__(Tensor([1, 524288, 64, 64, 2],"float32"), Tensor([16, 10, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2040,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[257,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2041,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2570,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2042,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2043,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2573,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2574,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2044,1,], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"bool"),Tensor([6, 1],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2575,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2045,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2579,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2046,1,], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"float32"),Tensor([6, 1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[258,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2047,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2580,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2048,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2583,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2049,1,], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"int32"),Tensor([6, 1],"int32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2584,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[205,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2050,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2586,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2051,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2588,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2052,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2053,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[259,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2054,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2055,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2592,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2056,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2593,1,], )
paddle.Tensor.__sub__(Tensor([1, 6115, 686, 1024],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2595,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2057,1,], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2596,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2058,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2597,1,], )
paddle.Tensor.__sub__(Tensor([1, 85599, 224, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.broadcast_tensors(list[Tensor([1, 2147483649],"float64"),Tensor([1, 2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2059,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2598,1,], )
paddle.broadcast_tensors(list[Tensor([1, 2147483649],"float64"),Tensor([1, 4],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[260,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[206,1,], )
paddle.broadcast_tensors(list[Tensor([1, 2],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2060,1,], )
paddle.broadcast_tensors(list[Tensor([1, 2],"float32"),Tensor([2147483648, 2],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2601,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"bool"),Tensor([3, 1],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"bool"),Tensor([3, 4294967295],"bool"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2061,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2603,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([1, 1],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2062,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([1, 2],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2604,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2063,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2605,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2064,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 1],"float32"),Tensor([3, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2607,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2065,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[261,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2066,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 4294967295],"float32"),Tensor([3, 4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2611,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2067,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"bool"),Tensor([3, 1431655765],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"bool"),Tensor([4294967295, 1],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2612,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2068,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1431655765],"float32"),Tensor([3, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2613,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2069,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1431655765],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2614,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1073741824, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[207,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([3, 1431655765],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2616,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2070,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([4294967295, 1],"float32"),Tensor([3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2617,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2071,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2618,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2072,1,], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float64"),Tensor([1, 2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[262,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2073,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2621,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2074,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2622,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2075,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2623,1,], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([10, 10, 21474837],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2076,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2626,1,], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([10, 21474837, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2077,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2628,1,], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([21474837, 10, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2078,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2629,1,], )
paddle.broadcast_tensors(list[Tensor([10, 10, 21474837],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2079,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[263,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2630,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[208,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2631,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2080,1,], )
paddle.broadcast_tensors(list[Tensor([10, 21474837, 10],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2633,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2081,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2634,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2082,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2083,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2636,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2084,1,], )
paddle.broadcast_tensors(list[Tensor([1073741824, 1, 4, 1],"float32"),Tensor([1073741824, 4, 1, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2637,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2085,1,], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"bool"),Tensor([3, 1],"bool"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2638,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2086,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2639,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2087,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[264,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2088,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2640,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2089,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2643,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[209,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2645,1,], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"float32"),Tensor([3, 1],"float32"),Tensor([3, 4],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2090,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2646,1,], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"float32"),Tensor([3, 1],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2091,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2647,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2092,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2649,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2093,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[265,1,], )
paddle.Tensor.__sub__(Tensor([10, 2, 1, 214748365],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2094,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2652,1,], )
paddle.Tensor.__sub__(Tensor([10, 2, 1, 2],"float32"), Tensor([2, 1, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2095,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2653,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2096,1,], )
paddle.Tensor.__sub__(Tensor([10, 2, 1, 2],"float32"), Tensor([2147483648, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2655,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2656,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2097,1,], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float64"),Tensor([12, 1, 178956971, 1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[266,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2098,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2660,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2099,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2661,1,], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float64"),Tensor([214748365, 1, 10, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[210,1,], )
paddle.Tensor.__sub__(Tensor([10, 214748365, 1, 2],"float32"), Tensor([2, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2662,1,], )
paddle.broadcast_tensors(list[Tensor([12, 1, 178956971, 1],"float64"),Tensor([12, 1, 10, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2100,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2101,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2664,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2102,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2103,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2104,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2669,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2105,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[267,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2106,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2107,1,], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2671,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2108,1,], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2672,1,], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2673,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2109,1,], )
paddle.broadcast_tensors(list[Tensor([1],"float64"),Tensor([2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2674,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[211,1,], )
paddle.broadcast_tensors(list[Tensor([2, 1, 2147483648],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2675,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2110,1,], )
paddle.broadcast_tensors(list[Tensor([2, 1, 2],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2676,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2111,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2677,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2112,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2678,1,], )
paddle.broadcast_tensors(list[Tensor([2, 1073741825, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2679,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2113,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[268,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2114,1,], )
paddle.broadcast_tensors(list[Tensor([2, 2147483648],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2115,1,], )
paddle.broadcast_tensors(list[Tensor([2, 2],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2116,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2681,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 17895698],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2117,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2682,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 17895698],"float64"),Tensor([6, 2, 1, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2118,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2119,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2683,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 1073741825, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[212,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2684,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 17895698],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2120,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 35791395, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2686,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2121,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([17895698, 2, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2122,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2123,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 17895698, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2688,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 35791395, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[269,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2124,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2690,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2125,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2691,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2126,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([6, 2, 17895698, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2127,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2692,1,], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([6, 35791395, 1, 10],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2694,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2128,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2696,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2129,1,], )
paddle.broadcast_tensors(list[Tensor([2147483648, 1, 2],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2697,1,], )
paddle.broadcast_tensors(list[Tensor([2147483648, 2],"float32"),Tensor([1, 2],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[213,1,], )
paddle.broadcast_tensors(list[Tensor([2147483648, 2],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2698,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2130,1,], )
paddle.broadcast_tensors(list[Tensor([2147483648, 2],"float32"),Tensor([2147483648, 2],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2699,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2131,1,], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[270,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2132,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2702,1,], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2133,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2703,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2134,1,], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2704,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2135,1,], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2],"float64"),Tensor([2, 2],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2136,1,], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2],"float64"),Tensor([2],"float64"),], )
paddle.broadcast_tensors(list[Tensor([214748365, 1, 10, 1],"float64"),Tensor([12, 1, 10, 1],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2707,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2137,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2138,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2139,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2709,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[214,1,], )
paddle.broadcast_tensors(list[Tensor([21474837, 10, 10],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[271,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2140,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2710,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2141,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2712,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2142,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2713,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2143,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2716,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([2, 2147483648],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2144,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2718,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2145,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([2147483648, 2],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2146,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2722,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2147483649],"float64"),Tensor([2, 2],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2147,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2724,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2148,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2147483649],"float64"),Tensor([2],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2725,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2726,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2149,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2728,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[215,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2],"float64"),Tensor([2, 1073741825],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2150,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2729,1,], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2],"float64"),Tensor([2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[273,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2151,1,], )
paddle.broadcast_tensors(list[Tensor([35791395, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2152,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2731,1,], )
paddle.broadcast_tensors(list[Tensor([35791395, 60, 1],"float64"),Tensor([6, 2, 1, 10],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2153,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2732,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2154,1,], )
paddle.broadcast_tensors(list[Tensor([3],"float32"),Tensor([3],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2733,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2155,1,], )
paddle.broadcast_tensors(list[Tensor([3],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2734,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2156,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2736,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2157,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2737,1,], )
paddle.broadcast_tensors(list[Tensor([4, 1, 1073741824, 1],"float32"),Tensor([1, 4, 1073741824, 4],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2158,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2738,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2159,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2739,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[216,1,], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 1],"float32"),Tensor([1, 4, 268435456, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[274,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2160,1,], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 1],"float32"),Tensor([268435456, 4, 1, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2741,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2161,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2742,1,], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 268435456],"float32"),Tensor([1, 4, 1, 4],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2162,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2744,1,], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1431655765],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.Tensor.__sub__(Tensor([10000],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2163,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2745,1,], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 1073741824, 4],"float32"),], )
paddle.Tensor.__sub__(Tensor([1000109],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2164,1,], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 1431655765],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2746,1,], )
paddle.Tensor.__sub__(Tensor([1000110],"float32"), Tensor([4294967295],"float32"), )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([357913942, 3, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[275,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2165,1,], )
paddle.Tensor.__sub__(Tensor([10008],"float32"), Tensor([4294967295],"float32"), )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([4294967295, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2166,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2752,1,], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 536870912],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.Tensor.__sub__(Tensor([1000],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2167,1,], )
paddle.broadcast_tensors(list[Tensor([4, 2, 134217728, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2754,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2168,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2169,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2756,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[217,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2757,1,], )
paddle.broadcast_tensors(list[Tensor([4, 268435456, 4, 1],"float32"),Tensor([1, 4, 1, 4],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2170,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2758,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([16, 10164, 26411],"float32"), )
paddle.broadcast_tensors(list[Tensor([4294967295, 1],"float32"),Tensor([1, 1],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2171,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2759,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2172,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[276,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295, 1],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([2, 10164, 211284],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2173,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([1, 2],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2760,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2174,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2761,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2175,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2762,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2176,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([2, 2],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2763,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([4, 10164, 105642],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2177,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([2],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2764,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([4, 536870912, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2178,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([3],"float32"),Tensor([1],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2765,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([8, 10164, 52821],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2179,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([3],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2766,1,], )
paddle.Tensor.__sub__(Tensor([10164, 2],"float32"), Tensor([8, 268435456, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[218,1,], )
paddle.Tensor.__sub__(Tensor([10164, 422567],"float32"), Tensor([16, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2767,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2180,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2768,1,], )
paddle.Tensor.__sub__(Tensor([10164, 422567],"float32"), Tensor([2, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2181,1,], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2769,1,], )
paddle.Tensor.__sub__(Tensor([10164, 422567],"float32"), Tensor([4, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2182,1,], )
paddle.Tensor.__sub__(Tensor([10164, 422567],"float32"), Tensor([8, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[277,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2183,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2771,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2184,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2772,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2185,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2773,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2186,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2187,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2776,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2188,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2777,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2189,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[219,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2190,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2191,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[278,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2192,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2781,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1073741825],"float64"),Tensor([2, 3],"float64"),Tensor([2, 3],"float64"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2193,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2783,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2784,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([1431655765, 3],"float32"),Tensor([2, 3],"float32"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2194,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([2, 2147483648],"float32"),Tensor([2, 3],"float32"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2195,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2786,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([2, 3],"float32"),Tensor([1431655765, 3],"float32"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2196,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([2, 3],"float32"),Tensor([2, 2147483648],"float32"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2788,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2197,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2789,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2198,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[279,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 1073741825],"float64"),Tensor([2, 3],"float64"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2199,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2791,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[220,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 1],"float64"),Tensor([2147483649, 1],"float64"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2792,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2200,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 3],"float64"),Tensor([2, 1073741825],"float64"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2793,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 3],"float64"),Tensor([715827883, 3],"float64"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2201,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2794,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2202,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2147483649, 1],"float64"),Tensor([2, 1],"float64"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2795,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([715827883, 3],"float64"),Tensor([2, 3],"float64"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2203,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2796,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2204,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2798,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2205,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483648],"float32"),Tensor([2, 2147483648],"float32"),Tensor([2, 2147483648],"float32"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2800,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2206,1,], )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483648],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2207,1,], )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2, 1],"float64"),Tensor([2, 1],"float64"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2802,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2208,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2805,1,], )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2, 3],"float64"),Tensor([2, 3],"float64"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2806,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2209,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2807,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[221,1,], )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2147483649, 1],"float64"),Tensor([2147483649, 1],"float64"),), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2210,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2808,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2211,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[281,1,], )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2147483649, 3],"float64"),Tensor([2147483649, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([4294967295, 1],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2810,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2212,1,], )
paddle.broadcast_tensors(tuple(Tensor([4294967295, 1],"float32"),Tensor([4294967295, 3],"float32"),Tensor([4294967295, 3],"float32"),), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2811,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2213,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2812,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2214,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2813,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2215,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2815,1,], )
paddle.cartesian_prod(list[Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2216,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2816,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2217,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2817,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2218,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2818,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2219,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[222,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2819,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2220,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[282,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2820,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2221,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2222,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2821,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2223,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2823,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2224,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2825,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2225,1,], )
paddle.cartesian_prod(list[Tensor([2147483649],"int64"),Tensor([2147483649],"int64"),Tensor([2147483649],"int64"),], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2826,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2226,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2227,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2828,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2228,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2829,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2229,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[283,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[223,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2830,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2230,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2833,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2231,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2834,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2232,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2835,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2838,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2233,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2839,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2234,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[284,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2235,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2236,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2840,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2237,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2841,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2238,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2842,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2844,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2239,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[224,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2846,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2240,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2847,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2849,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2241,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2242,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[285,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2243,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2850,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2244,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2245,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2852,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2246,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2853,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2247,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2856,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2248,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2858,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2249,1,], )
paddle.Tensor.__sub__(Tensor([10],"float32"), Tensor([10105, 425034],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2859,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[225,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[286,1,], )
paddle.Tensor.__sub__(Tensor([10],"float32"), Tensor([10285, 417596],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2250,1,], )
paddle.Tensor.__sub__(Tensor([10],"float32"), Tensor([12240, 350897],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2860,1,], )
paddle.Tensor.__sub__(Tensor([10],"float32"), Tensor([13125, 327236],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2251,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2861,1,], )
paddle.Tensor.__sub__(Tensor([10],"float32"), Tensor([1360, 3158065],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2252,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2862,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2863,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2253,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2866,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2254,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2867,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2255,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[287,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2256,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2870,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2257,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2877,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2258,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2878,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2259,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[226,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2879,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2260,1,], )
paddle.Tensor.__sub__(Tensor([11109, 2],"float32"), Tensor([16, 11109, 24164],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[288,1,], )
paddle.Tensor.__sub__(Tensor([11109, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2261,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2880,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2262,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2881,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2263,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2264,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2882,1,], )
paddle.Tensor.__sub__(Tensor([11109, 386621],"float32"), Tensor([16, 11109, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2265,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2885,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2266,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2887,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[289,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2267,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2890,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2268,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2891,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2269,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[227,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2892,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2270,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2271,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2893,1,], )
paddle.Tensor.__sub__(Tensor([11930465, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2894,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2272,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2898,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2273,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2899,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2274,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2275,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[290,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2276,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2900,1,], )
paddle.Tensor.__sub__(Tensor([12, 223697, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2277,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2901,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2903,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2278,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2279,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2904,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[228,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2907,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2281,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2908,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2282,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[291,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2911,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2283,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2912,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2284,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2915,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2285,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2916,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2286,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2917,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2918,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2287,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2919,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2288,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[292,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2289,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2920,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[229,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2921,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2290,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2291,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2922,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2923,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2292,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2293,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2924,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2925,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2294,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2295,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2926,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2296,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2928,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2297,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2929,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2298,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[293,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 11930465, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2299,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2932,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[230,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2933,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2938,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2300,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 11930465, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2939,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3579140, 10, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2301,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[294,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([14316558, 3, 10, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2302,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2940,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2303,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2941,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2304,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2942,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 10, 11930465, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2305,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2943,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2306,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2945,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2307,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2947,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2308,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2309,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2948,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[231,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2949,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 11930465, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2310,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[295,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2311,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2950,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2312,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2951,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2313,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2953,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2314,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2955,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2956,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2315,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2958,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 5965233, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2316,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2959,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 5965233, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[296,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2317,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 894785, 20, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2960,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([3579140, 3, 20, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2318,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2961,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2319,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2962,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[232,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2964,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2320,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2965,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2966,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2321,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2967,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2322,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2323,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2324,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2969,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2325,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[297,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2971,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2326,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2973,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2327,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2975,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2328,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2976,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2329,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2977,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[233,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2978,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2330,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2979,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2331,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[298,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2332,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2333,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2980,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2334,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2982,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2335,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2336,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2986,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2337,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2987,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2338,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2988,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2339,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[299,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[234,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2990,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2340,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2991,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2341,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2993,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 20, 5965233, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2342,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2994,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2343,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2995,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2344,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2997,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2345,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2346,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[2999,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2347,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[300,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2348,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3000,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2349,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3002,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[235,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3003,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2350,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3004,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2351,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3005,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 2982617, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2352,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3006,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2353,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3008,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2355,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3009,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2356,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[301,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2357,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3011,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2358,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3014,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2359,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 2982617, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3015,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[236,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 223697, 40, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2360,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3018,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2361,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 2982617, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[302,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2362,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 2982617, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3021,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2363,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3022,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2364,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2365,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3024,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([894785, 3, 40, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3026,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2366,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3028,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2367,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[303,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2368,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3030,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2369,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3031,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[237,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3032,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2370,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3033,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2371,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2372,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3035,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2373,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2374,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3036,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2375,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3038,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2376,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2377,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3039,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2378,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[304,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2379,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3040,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[238,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3041,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2380,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3042,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2381,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3043,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2382,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3047,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2383,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3048,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2384,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3049,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[305,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2385,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2386,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3051,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2387,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3054,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2388,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3056,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2389,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3059,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[239,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[306,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2390,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3064,1,], )
paddle.Tensor.__sub__(Tensor([12, 3, 5965233, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2391,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3066,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2392,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3067,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2393,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3068,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3069,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2394,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2395,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[307,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2396,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3072,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2397,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3074,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2398,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3078,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2399,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3079,1,], )
paddle.Tensor.__sub__(Tensor([12, 3579140, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[240,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[308,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2400,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3080,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2401,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3085,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3086,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2402,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3087,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2403,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3089,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2404,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[309,1,], )
paddle.Tensor.__sub__(Tensor([12, 894785, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2405,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3090,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2406,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3091,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2407,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3093,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2408,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3094,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2409,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3098,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[241,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2410,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3099,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2411,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[310,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2412,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3100,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2413,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3101,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2414,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3102,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2415,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3103,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3105,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2416,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3106,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2417,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3107,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2418,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3108,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2419,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[311,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3111,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[242,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3113,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2420,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3115,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2421,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2422,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3116,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2423,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3117,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2424,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3119,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2425,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[312,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2426,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3120,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2427,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3121,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2428,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3122,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2429,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3123,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[243,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2430,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3124,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3126,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2431,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3129,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2432,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[313,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2433,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3130,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2434,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2435,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3131,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2436,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3134,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3135,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2437,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3138,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2438,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3141,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2439,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3143,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[244,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3146,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2440,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3149,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2441,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2442,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[315,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2443,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3150,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2444,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3153,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3157,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2445,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[316,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2446,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3160,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2447,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3161,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2448,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2449,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3163,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[245,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3165,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2450,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3166,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2451,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3167,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2452,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3168,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3169,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2453,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[317,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2454,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3170,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2455,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3175,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2456,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3176,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2457,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3178,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2458,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[318,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2459,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3180,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[246,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3183,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2460,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3184,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2461,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3185,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2462,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 1290556, 8],"float32"), Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2463,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3186,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3187,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2464,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3188,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2465,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3189,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2466,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[319,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2467,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3190,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2468,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3192,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2469,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[247,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3194,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2470,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3196,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3197,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2471,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[320,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2472,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3204,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2473,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3205,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2474,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3207,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2475,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[321,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2476,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3211,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2477,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3212,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2478,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3213,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2479,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3214,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3216,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[248,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3217,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2480,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3218,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2481,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[322,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2482,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3220,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2483,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3221,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2484,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3222,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2485,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3226,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2486,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3228,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2487,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[323,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 8],"float32"), Tensor([13, 2, 16, 10324441, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3230,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2488,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 8],"float32"), Tensor([13, 2, 16, 4, 2581111],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3231,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 8],"float32"), Tensor([13, 2, 41297763, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2489,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 8],"float32"), Tensor([13, 5162221, 16, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3233,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 16, 4, 8],"float32"), Tensor([33554432, 2, 16, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[249,1,], )
paddle.Tensor.__sub__(Tensor([13, 2, 5162221, 4, 8],"float32"), Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3234,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2490,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2491,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3235,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2492,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3236,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2493,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3237,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2494,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[324,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2495,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3242,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2497,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3245,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2498,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3246,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2499,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3247,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[250,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[325,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2500,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2501,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3250,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2502,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3253,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2503,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3254,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2504,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3255,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3256,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2505,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3259,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2506,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[326,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2507,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3260,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2508,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3262,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2509,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3264,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[251,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3265,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2510,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3266,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2511,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3269,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2512,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[327,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2513,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3270,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2514,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3272,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2515,1,], )
paddle.Tensor.__sub__(Tensor([13, 3, 224, 224],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3274,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2516,1,], )
paddle.Tensor.__sub__(Tensor([13, 3, 224, 224],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3275,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2517,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3276,1,], )
paddle.Tensor.__sub__(Tensor([13, 3, 224, 224],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2518,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3277,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2519,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3279,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[252,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[328,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2520,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2521,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3281,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2522,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3283,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2523,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3285,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2524,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3287,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2525,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2526,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3291,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2527,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3297,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2528,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3299,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2529,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[330,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[253,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3301,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2531,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3303,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2532,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3304,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2533,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3308,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2534,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3309,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2536,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[331,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2537,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3310,1,], )
paddle.Tensor.tile(Tensor([818401, 2, 41, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2538,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3311,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2539,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3312,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3313,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[254,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2540,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3316,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2541,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3317,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2542,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3318,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3319,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2543,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[332,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2544,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3321,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2545,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3322,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2546,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3323,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2547,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3325,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2548,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3326,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2549,1,], )
paddle.Tensor.__sub__(Tensor([13, 645278, 16, 4, 8],"float32"), Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[255,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[333,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2550,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3331,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2551,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3332,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2552,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3333,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2553,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3334,1,], )
paddle.Tensor.tile(Tensor([8388608, 2, 2, 1, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2554,1,], )
paddle.Tensor.tile(Tensor([838861, 2, 40, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3335,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2555,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3336,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2556,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3337,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2557,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3338,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2558,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3342,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2559,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3344,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[256,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[335,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2560,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3350,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2561,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3353,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2562,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2563,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3357,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3359,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2564,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2565,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[336,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3360,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2566,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3363,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2567,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3364,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2568,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3365,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2569,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3366,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[257,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3367,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2570,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3368,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2571,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2572,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3369,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2573,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[337,1,], )
paddle.Tensor.__sub__(Tensor([13, 6585, 224, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2574,1,], )
paddle.Tensor.__sub__(Tensor([13, 96, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3370,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2575,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3371,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2576,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3372,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2577,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3373,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2578,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3379,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2579,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[338,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[258,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3380,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2580,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3382,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2581,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3383,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2582,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2583,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3389,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2584,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[339,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2585,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3390,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2586,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3391,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2587,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3392,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2588,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3394,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2589,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3395,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[259,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3396,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2590,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3397,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2591,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3398,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2592,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3399,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2593,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[340,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2594,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3402,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2595,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3405,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2596,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2597,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3408,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2598,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2599,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[341,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[260,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3410,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2600,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3411,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2601,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3412,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2602,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3414,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2603,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3415,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2604,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3416,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2605,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3418,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2606,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3419,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2607,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[342,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2608,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3421,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2609,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3423,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[261,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3425,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2610,1,], )
paddle.Tensor.__sub__(Tensor([14316558, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3427,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2611,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[343,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2612,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3430,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2613,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3435,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2614,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3436,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2615,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2616,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3438,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2617,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2618,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[344,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2619,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3442,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[262,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2620,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3444,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2621,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3445,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2622,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3446,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2623,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2624,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3447,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2625,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3449,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2626,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[345,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2627,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3450,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3451,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2628,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2629,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3453,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[263,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3455,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2630,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2631,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3458,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2632,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3459,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2633,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2634,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[346,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2635,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3460,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2636,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3461,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2637,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3463,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2638,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3464,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2639,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3465,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[264,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3467,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2640,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[347,1,], )
paddle.Tensor.__sub__(Tensor([14913081, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2641,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3473,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3475,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2642,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3476,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2643,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3477,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2644,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3478,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2645,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[348,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2646,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3480,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2647,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3482,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2648,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3483,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2649,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3484,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[265,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3485,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2650,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2651,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[349,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2652,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3490,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2653,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3491,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2654,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3495,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2655,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2656,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2657,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[350,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2658,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3500,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2659,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3504,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[266,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3505,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2660,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3507,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2661,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2662,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3509,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[351,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2664,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3512,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2665,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3513,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3514,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2667,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3516,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2668,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2669,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3517,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[267,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3518,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2670,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[352,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2671,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2672,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3522,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2673,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[353,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2674,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3531,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2675,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3532,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2676,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3533,1,], )
paddle.Tensor.__sub__(Tensor([16, 96, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2677,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2678,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3536,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2679,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3537,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[268,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3538,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2681,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3539,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2682,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2683,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3540,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2684,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3541,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2685,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3546,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2686,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[355,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2688,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3550,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2689,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3553,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[269,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3555,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2690,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[356,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2691,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3560,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3561,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2692,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3563,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2693,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3565,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2694,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3568,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2695,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[357,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2696,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3570,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2697,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2698,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3575,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2699,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3576,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3579,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[270,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[358,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2700,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3580,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2701,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3583,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2702,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3585,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2703,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3587,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2704,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3588,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2705,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2706,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2707,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[359,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2708,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3590,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2709,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3592,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[271,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3593,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2710,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3594,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2711,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3595,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2712,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3597,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2713,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[360,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2714,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3601,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2715,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3603,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2716,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3605,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2717,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3606,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2718,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3608,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2719,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[272,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3609,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2720,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[361,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3611,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2721,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2722,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3619,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2723,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[362,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2724,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3622,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3626,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2725,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[363,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2726,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3630,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2727,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2728,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[364,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3643,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2729,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3644,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[273,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[365,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2730,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3650,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2731,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3654,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2732,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3656,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2733,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3658,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2734,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[366,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2735,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3660,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2736,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3662,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2737,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3665,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2738,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3667,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3668,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2739,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[367,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[274,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2740,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3673,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2741,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[368,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2742,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2743,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2744,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2745,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3688,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2746,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[369,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2747,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[370,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2748,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3701,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2749,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3702,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[275,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3704,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2750,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2751,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3706,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2752,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2753,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[371,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3710,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2754,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[372,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2755,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3721,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2756,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3724,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2757,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3727,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[373,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2758,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3732,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2759,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[276,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3734,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2760,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3735,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3737,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2761,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3738,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2762,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3739,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2763,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[374,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2764,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3742,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2765,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3747,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2766,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[375,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2767,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2768,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3752,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2769,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3755,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[277,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3756,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2770,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3759,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2771,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[376,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2772,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3762,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3766,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2773,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3767,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2774,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[377,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2775,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3770,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2776,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2777,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2778,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[378,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2779,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3780,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[278,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3782,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2780,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3784,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2781,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3785,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2782,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[379,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2783,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3790,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2784,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3793,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2785,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3797,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2786,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[380,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2787,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3800,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3803,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2788,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3805,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2789,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3808,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[279,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[381,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2790,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3812,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3813,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2791,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3815,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2792,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3817,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2793,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3819,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2794,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2795,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[382,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2796,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3821,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3822,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2797,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3826,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2798,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2799,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[383,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2800,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3831,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2801,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3836,1,], )
paddle.Tensor.__sub__(Tensor([2, 1, 2, 1],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2802,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2803,1,], )
paddle.Tensor.__sub__(Tensor([2, 1, 2, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2804,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3841,1,], )
paddle.Tensor.__sub__(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2805,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3842,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2806,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3849,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2807,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[385,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2808,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3850,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2809,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3851,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[281,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3857,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2810,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[386,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2811,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3862,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2812,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3864,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2813,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3867,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2814,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3869,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2815,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[387,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2816,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3870,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2817,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3871,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2818,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3874,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2819,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3875,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[282,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[388,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2820,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3882,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2821,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3883,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2822,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3887,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2823,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3888,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2824,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2825,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3890,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2826,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3891,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2827,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3893,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2828,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3894,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2829,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3898,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[283,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3899,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2830,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3902,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2831,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3903,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3905,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2832,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3907,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2833,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[391,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2834,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3912,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2835,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3915,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2836,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3916,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2837,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3917,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2838,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3918,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2839,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[392,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[284,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3920,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3921,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2840,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3927,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2841,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[393,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2842,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3940,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2843,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3941,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2844,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3942,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2845,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2846,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3948,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[395,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2847,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3950,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2848,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2849,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3955,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[285,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3957,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2850,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3959,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2851,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[396,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2852,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3961,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2853,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3963,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2854,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[397,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2855,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3971,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2856,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3972,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2857,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3978,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2858,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[398,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2859,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3980,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[286,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2860,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2861,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3987,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2862,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[399,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2863,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3995,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2864,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3996,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2865,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[3998,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2866,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4000,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2867,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4004,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2868,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4005,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[401,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2869,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[287,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4011,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4012,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2870,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2871,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4013,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2872,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4016,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2873,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4018,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2874,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[402,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2875,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4021,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2876,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4022,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2877,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4025,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2878,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4026,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2879,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4028,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[288,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4029,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2880,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[403,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2881,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4030,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2882,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4031,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2883,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4032,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2884,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4034,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2885,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[404,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4047,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2886,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[405,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2887,1,], )
paddle.Tensor.__sub__(Tensor([2, 2147483648],"float32"), Tensor([13, 4, 2, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4051,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2888,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4052,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2889,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[406,1,], )
paddle.Tensor.__sub__(Tensor([2, 2],"float32"), Tensor([13, 4, 2, 41297763],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[289,1,], )
paddle.Tensor.__sub__(Tensor([2, 2],"float32"), Tensor([13, 4, 41297763, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4062,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2890,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4063,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2891,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4066,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2892,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4067,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2893,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4069,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2894,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2895,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4075,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2896,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4076,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2898,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4077,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2899,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[408,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[290,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4081,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2900,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4085,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2901,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4086,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2902,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[409,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2903,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4092,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2904,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4093,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2905,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[410,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2906,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4100,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2907,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4105,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4108,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2908,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4109,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2909,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4113,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[291,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4114,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2910,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4118,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4119,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2911,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[412,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2912,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4125,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2913,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4127,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2914,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4128,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2915,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[413,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2916,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4131,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2917,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4132,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2918,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4133,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2919,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4134,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[292,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4137,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2920,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4138,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2921,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4139,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2922,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[414,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2923,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4140,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2924,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4142,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2925,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4143,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2926,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4144,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2927,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4147,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2928,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4149,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2929,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[415,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[293,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4150,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2930,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4151,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2931,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4153,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2932,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2933,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4155,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4158,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2934,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4160,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2935,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2936,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4163,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2937,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4166,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2938,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[418,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2939,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4187,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[294,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4189,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2940,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4190,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4191,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2941,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4197,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2942,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[420,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2943,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4205,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2944,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[421,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2945,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4213,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2946,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4217,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2947,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4219,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2948,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[422,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2949,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4224,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4227,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[295,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[423,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2950,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4230,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2951,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4233,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2952,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4234,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4237,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2953,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[424,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2954,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4247,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2955,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2956,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4248,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2957,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4253,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2958,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4259,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2959,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[426,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[296,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4264,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2960,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4268,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4269,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2961,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[428,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2962,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2963,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[429,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2964,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4292,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2965,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4295,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2966,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4302,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2967,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4304,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2968,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4306,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2969,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4308,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[297,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4309,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2970,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[431,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4313,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2971,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4316,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2972,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2973,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[432,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2974,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4324,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2975,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4325,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2976,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4327,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2977,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2978,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2979,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[433,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[298,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4336,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2980,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4337,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2981,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4338,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2982,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[434,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2983,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4345,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4346,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2984,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4349,1,], )
paddle.Tensor.__sub__(Tensor([2, 4, 8, 8],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2985,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[435,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2986,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4352,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2987,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[436,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2988,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4361,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2989,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4362,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[299,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4367,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2990,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4368,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2991,1,], )
paddle.Tensor.__sub__(Tensor([2, 7, 20],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4369,1,], )
paddle.Tensor.__sub__(Tensor([2, 7, 306783379],"float32"), Tensor([20],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2992,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2993,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4372,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2994,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4375,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[438,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2995,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4391,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2996,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4392,1,], )
paddle.Tensor.__sub__(Tensor([2147483648, 1, 2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2997,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4397,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2998,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4399,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[2999,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[440,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[300,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4403,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4405,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3000,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[441,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3001,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4415,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3002,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[442,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4421,1,], )
paddle.Tensor.__sub__(Tensor([2147483648, 2],"float32"), Tensor([13, 4, 2, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3003,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4427,1,], )
paddle.Tensor.__sub__(Tensor([2147483648, 2],"float32"), Tensor([16, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3004,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[443,1,], )
paddle.Tensor.__sub__(Tensor([2147483648, 2],"float32"), Tensor([16, 11109, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2147483648, 2],"float32"), Tensor([2, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[444,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3005,1,], )
paddle.Tensor.__sub__(Tensor([2147483648, 2],"float32"), Tensor([4, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[445,1,], )
paddle.Tensor.__sub__(Tensor([2147483648, 2],"float32"), Tensor([8, 10164, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3006,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4452,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3007,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3008,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4459,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3009,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[446,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[301,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4464,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3010,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[447,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3011,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4476,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3012,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[448,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3013,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3014,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[449,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3015,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4491,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3016,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4497,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3017,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3018,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[45,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[450,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3019,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[302,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4509,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3020,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4519,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3021,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[452,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3022,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4524,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3023,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3024,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4527,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4529,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3025,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[453,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3026,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4547,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3027,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4549,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3028,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3029,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4554,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[303,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4558,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3030,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4559,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3031,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4564,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3032,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4566,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3033,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4569,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3034,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3035,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4583,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3036,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3037,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[459,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3038,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4592,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3039,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[304,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[460,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3040,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4609,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3041,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4614,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3042,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4619,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[462,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3043,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4622,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3044,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4624,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3045,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4627,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3046,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4629,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3047,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[463,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3048,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4631,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4632,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3049,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[305,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4636,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3050,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[464,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3051,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[465,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3052,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3053,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[466,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3054,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4661,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3055,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3056,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3057,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[468,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3058,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4684,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3059,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4689,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[306,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[469,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3060,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4692,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3061,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4694,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4695,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3062,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[470,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3063,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3064,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4714,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3065,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4715,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3066,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3067,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4719,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3068,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[472,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3069,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4723,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[307,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3070,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4725,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[473,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3071,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[474,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3072,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4749,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3073,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3074,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[475,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3075,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4752,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3076,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[476,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3077,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4762,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3078,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[477,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3079,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[308,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4777,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3080,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4778,1,], )
paddle.Tensor.__sub__(Tensor([28, 24, 3],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3081,1,], )
paddle.Tensor.__sub__(Tensor([28, 24, 6391321],"float32"), Tensor([3],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[478,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3082,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4782,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3083,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[4783,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3084,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[48,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3085,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[480,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3086,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[481,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3087,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[482,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3088,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[483,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3089,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[485,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[309,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3090,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[488,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[490,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3091,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[492,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3092,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[493,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3093,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3094,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[497,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3095,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[498,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3096,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3097,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[50,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[500,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3098,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[501,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3099,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[310,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[505,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3100,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[506,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3101,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[507,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3102,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[508,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3103,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[509,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3104,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[510,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3105,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[511,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3106,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[512,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3107,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5122,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3108,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3109,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[513,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[514,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[311,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[515,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3110,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3111,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[516,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3112,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5172,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5186,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3113,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[519,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3114,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[52,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3115,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[520,1,], )
paddle.Tensor.__sub__(Tensor([3, 1, 1431655765, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3116,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[523,1,], )
paddle.Tensor.__sub__(Tensor([3, 1, 2, 1],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3117,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[524,1,], )
paddle.Tensor.__sub__(Tensor([3, 1, 2, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3118,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3119,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[525,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[312,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3120,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[529,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3121,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[531,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3122,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[533,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3123,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[534,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3124,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3125,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[539,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[540,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3126,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[541,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3127,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3128,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[543,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3129,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[544,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[313,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[545,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3130,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5456,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3131,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[546,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3132,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[547,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3133,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[548,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3134,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[550,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[553,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3135,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[554,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3136,1,], )
paddle.Tensor.__sub__(Tensor([3, 11930465, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[555,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3137,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[556,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3138,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3139,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[558,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[314,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[560,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3140,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[561,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3141,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[562,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3142,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[563,1,], )
paddle.Tensor.__sub__(Tensor([3, 23860930, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3143,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[564,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[565,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3144,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5657,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3145,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[566,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3146,1,], )
paddle.Tensor.__sub__(Tensor([3, 29826162, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[567,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3147,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[568,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3148,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[569,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3149,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[570,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[315,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 11930465, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3150,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[573,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3151,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[574,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3152,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[576,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 14913081, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3153,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[577,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3154,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[579,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3155,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[583,1,], )
paddle.cast(Tensor([32, 171, 1024, 768],"float32"), dtype=Dtype(float32), )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 19884108],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[584,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3156,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([11930465, 6, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[587,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3157,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 23860930, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[588,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3159,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 11930465, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[316,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 19884108],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3160,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5893,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3161,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 7953644, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3162,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[592,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3163,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[593,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3164,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[5946,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 1, 7953644, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3165,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[596,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3166,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[598,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3167,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[60,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3168,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3169,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6002,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[317,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[601,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3170,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[602,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3172,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[603,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3173,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[605,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3175,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 19884108, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6054,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3176,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[606,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3177,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[607,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[613,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3178,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[614,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3179,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[318,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[617,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 11930465, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3180,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[619,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 9942054],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3181,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[622,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3182,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[625,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3183,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[626,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 7953644, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3184,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[627,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 5965233, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3185,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[628,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([5965233, 6, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3186,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[629,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 1, 9942054],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3187,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[630,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3188,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[632,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3189,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[633,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[319,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[634,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3190,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3191,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[636,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3192,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[637,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3193,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[638,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3194,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[639,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3195,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([14913081, 6, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3196,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 29826162, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[642,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 14913081, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3197,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[643,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 19884108, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3198,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6433,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[644,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3199,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[645,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[320,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 9942054, 1],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3200,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[646,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3201,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[647,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3203,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[649,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3204,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[652,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3205,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[654,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[655,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3206,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 4, 9942054, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[657,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3207,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[321,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[66,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3210,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3211,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 3, 7953644, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[664,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3212,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[665,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3213,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3214,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[667,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3215,1,], )
paddle.Tensor.__sub__(Tensor([3, 6, 5965233, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3216,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6688,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3217,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[669,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3218,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[67,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3219,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[322,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6709,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3220,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[672,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3221,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3222,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[674,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3223,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[676,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3224,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[677,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3225,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[678,1,], )
paddle.Tensor.__sub__(Tensor([3, 96, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3226,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3228,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[681,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[682,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3229,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[684,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[323,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3230,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[688,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3231,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[689,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3232,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[69,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3233,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[690,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3234,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3235,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6908,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3236,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3237,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[691,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3238,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[692,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3239,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[693,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[324,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[6938,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3240,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[695,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3241,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[697,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3242,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[698,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3243,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[699,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3244,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[701,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3245,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[702,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3246,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3247,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[703,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[704,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3248,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3249,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[706,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[325,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[707,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3250,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3251,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3252,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[709,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3253,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[7094,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3254,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[71,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3255,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[710,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3256,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[712,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3257,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[714,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3258,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[716,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3259,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[717,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[326,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[7173,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3260,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[718,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3261,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[719,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3262,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[720,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3263,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[721,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3264,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[722,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3265,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[724,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[725,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3266,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[728,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3267,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[729,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3268,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[73,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3269,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[733,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[327,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[735,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3270,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[736,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3271,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[737,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3272,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[738,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3273,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[740,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3274,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[742,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3275,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[743,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[745,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3276,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3277,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[747,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[75,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3279,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[750,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[328,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[752,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3280,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3281,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[754,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3282,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[756,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3283,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[757,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[759,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3284,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[76,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3285,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[761,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3286,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[762,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3287,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[764,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3288,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[765,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3289,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[767,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[329,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[768,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3290,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[77,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3291,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[770,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3292,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3293,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[772,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3294,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[773,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3295,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3296,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[777,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3297,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3298,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[779,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[78,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3299,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[330,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3300,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[785,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3301,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[787,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[789,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3302,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[790,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3303,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[791,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3304,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[793,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3305,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[794,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[795,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3306,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3307,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[798,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3308,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[799,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3309,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[80,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[331,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[801,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3310,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[802,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3311,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3312,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[803,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3313,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[806,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3314,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[807,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3315,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[8075,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3316,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[808,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3317,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[809,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3318,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[811,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3319,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[812,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[332,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[813,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3320,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[814,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[815,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3321,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[8165,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3322,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[817,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3323,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[818,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3324,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[819,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3325,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[82,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3326,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[820,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3327,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[821,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3328,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[823,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3329,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[826,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[333,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3330,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[829,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3331,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[831,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3332,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[833,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3333,1,], )
paddle.Tensor.tile(Tensor([860371, 2, 39, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[836,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3334,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[838,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3335,1,], )
paddle.Tensor.tile(Tensor([883012, 2, 38, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[840,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3336,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[841,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3337,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[842,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3338,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[843,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[844,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3339,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[845,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[334,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[848,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3340,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[849,1,], )
paddle.Tensor.__sub__(Tensor([3579140, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3341,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[850,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[852,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3342,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[853,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3343,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[854,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3344,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[855,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3345,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[856,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3346,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[859,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3347,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[86,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3348,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[860,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3349,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[861,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[335,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[863,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3350,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[864,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3351,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[865,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3352,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[866,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3353,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[867,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3354,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[870,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3356,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[871,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3357,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[873,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[874,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3358,1,], )
paddle.Tensor.__sub__(Tensor([4, 131072, 1, 512, 4, 4],"float32"), Tensor([1, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[875,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3359,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[876,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[336,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[878,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3360,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[879,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3361,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[880,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3362,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[881,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3363,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 33554432, 4, 4],"float32"), Tensor([1, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[882,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3364,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[884,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3365,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[886,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3366,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[887,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 262144, 4],"float32"), Tensor([1, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3367,1,], )
paddle.Tensor.tile(Tensor([96656, 1, 44436],"bool"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[889,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3368,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[890,1,], )
paddle.Tensor.tile(Tensor([96656, 1, 44436],"bool"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3369,1,], )
paddle.Tensor.tile(Tensor([96656, 1, 44436],"bool"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[891,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[337,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 262144],"float32"), Tensor([1, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[892,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3370,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 4],"float32"), Tensor([1, 2, 1, 134217728, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[894,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3371,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 4],"float32"), Tensor([1, 2, 1, 512, 1048576, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[895,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3372,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 4],"float32"), Tensor([1, 2, 1, 512, 4, 1048576],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[897,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3373,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[899,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3374,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 4],"float32"), Tensor([1, 524288, 1, 512, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[90,1,], )
paddle.Tensor.__sub__(Tensor([4, 2, 1, 512, 4, 4],"float32"), Tensor([262144, 2, 1, 512, 4, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3375,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[900,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3377,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[901,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[903,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3378,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[905,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3379,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[906,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[338,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[907,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3380,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[908,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3381,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[909,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3382,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[91,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3383,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[911,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3384,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[912,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3385,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[913,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3386,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[914,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3387,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[915,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3388,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[916,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3389,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[9168,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[339,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[917,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3390,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[918,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3391,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[919,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3392,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3393,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[92,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3394,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[920,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3395,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[9203,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3396,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[921,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3397,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3398,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[922,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3399,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[923,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[340,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[924,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[925,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3400,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[926,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3401,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[928,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3402,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[929,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3403,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[931,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3404,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[932,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3405,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[934,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3406,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[936,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3407,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[938,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3408,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[939,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3409,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[341,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[94,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3410,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[940,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3411,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[942,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3412,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[943,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3413,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[9437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3414,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[944,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[945,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3415,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[9451,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3416,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3417,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[947,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3418,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[948,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3419,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[949,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[342,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[95,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[950,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3421,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[952,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3422,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[953,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3423,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[954,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3424,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[955,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3425,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3426,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[956,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3427,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[958,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3428,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3429,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[959,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[343,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[96,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3430,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[960,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[961,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3431,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[962,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3432,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[963,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3433,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3434,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[964,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3435,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[965,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3436,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[966,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[967,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3437,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3438,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[969,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3439,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[970,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[344,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[971,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3440,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[973,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3441,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[974,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3442,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[9749,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3443,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[975,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3444,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[977,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3445,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[978,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3446,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[979,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3447,1,], )
paddle.Tensor.__sub__(Tensor([4194304, 2, 16, 4, 8],"float32"), Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[980,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3448,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[981,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3449,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[982,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[345,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3450,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[985,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3451,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[986,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3452,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[987,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3453,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[988,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3454,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[989,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3455,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3456,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[99,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3457,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[991,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3458,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[992,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3459,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[993,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[346,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[994,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3460,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[995,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3461,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[997,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3462,1,], )
paddle.Tensor.tile(Tensor([2147483648, 2],"int32"), list[998,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3463,1,], )
paddle.Tensor.tile(Tensor([2147483649, 1],"int64"), list[1,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3464,1,], )
paddle.Tensor.tile(Tensor([2147483649, 1],"int64"), list[1,22400,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3465,1,], )
paddle.Tensor.tile(Tensor([2147483649, 1],"int64"), list[1,300,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3466,1,], )
paddle.Tensor.tile(Tensor([2147483649, 1],"int64"), list[1,900,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3467,1,], )
paddle.Tensor.tile(Tensor([2147483649, 1],"int64"), list[1,9408,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3468,1,], )
paddle.Tensor.tile(Tensor([2147483649, 1],"int64"), list[100,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3469,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[100,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[347,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3470,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[12,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3472,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[14,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3473,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[20,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3474,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[33,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3475,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[4,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3476,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[50,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3477,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), list[8,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3478,1,], )
paddle.Tensor.tile(Tensor([2147483649],"int64"), tuple(12,2,), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3479,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[348,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3480,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3481,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3482,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3483,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3484,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3485,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3487,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3488,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3489,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[349,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3490,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3491,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3492,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3493,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3494,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3495,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3497,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3498,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[350,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3500,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3501,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3503,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3504,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3505,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3506,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3507,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3508,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3509,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[351,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3510,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3511,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3512,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3513,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3514,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3515,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3516,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3517,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3518,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[352,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3520,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3521,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3522,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3523,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3524,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3525,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3527,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3528,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3529,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[353,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3531,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3532,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3533,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3534,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3536,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3537,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3538,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3539,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3540,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3541,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3543,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3544,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3545,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3546,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3547,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3548,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3549,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[355,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3550,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3551,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3552,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3553,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3555,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3556,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3557,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 10285, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3558,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3559,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[356,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 30324, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3560,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 33600, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3561,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 10285, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3562,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 24276, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3563,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3564,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 27216, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3565,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 30324, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 33600, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3566,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1, 1],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3567,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3568,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3569,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[357,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3570,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3571,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3573,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3574,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3575,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3576,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1],"float32"), Tensor([1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3577,1,], )
paddle.Tensor.__sub__(Tensor([4294967295, 1],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3578,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3579,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[358,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3580,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3581,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3582,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3583,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3584,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3585,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3586,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3587,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3588,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[359,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3590,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3592,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3593,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3594,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3595,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3596,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3597,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3598,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3599,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[360,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3600,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3601,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3602,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3603,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3605,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3606,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3608,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3609,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([1000109],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[361,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([1000110],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3610,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([10008],"float32"), )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([1000],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3611,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([10105, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3613,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([10285, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3615,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([12240, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3616,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([13125, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3618,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([1360, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3619,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[362,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3620,1,], )
paddle.Tensor.__sub__(Tensor([4294967295],"float32"), Tensor([2, 4, 8, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3621,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3622,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3623,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3624,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3626,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3627,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3628,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[363,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3630,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3631,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3633,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3636,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3637,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3638,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3639,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[364,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3641,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3642,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3643,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3644,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3646,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3647,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3649,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[365,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3650,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3651,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3652,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3653,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3654,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3656,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3657,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3658,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[366,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3660,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3661,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3662,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3664,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3665,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3667,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3668,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3669,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[367,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3672,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3673,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3674,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3675,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3676,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3678,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3679,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[368,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3681,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3682,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3683,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3686,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3688,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[369,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3690,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3691,1,], )
paddle.Tensor.__sub__(Tensor([524288, 1, 64, 64, 2],"float32"), Tensor([16, 10, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3692,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3693,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3696,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3697,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3698,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[370,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3701,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3702,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3703,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3704,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3706,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3709,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[371,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3710,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3712,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3716,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3717,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3718,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[372,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3720,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3721,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3722,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3723,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3724,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3725,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3727,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3728,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3729,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[373,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3730,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3731,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3732,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3733,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3734,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3735,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3736,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3737,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3738,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3739,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[374,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3741,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3742,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3743,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3744,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3745,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3746,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3747,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3748,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3749,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[375,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3750,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3751,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3752,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3755,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3756,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3757,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3759,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[376,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3760,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3761,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3762,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3763,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3764,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3766,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3767,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3769,1,], )
paddle.Tensor.__sub__(Tensor([5965233, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[377,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3770,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3771,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3772,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3773,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3775,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3776,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[378,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3780,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3782,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3783,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3784,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3785,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3786,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3787,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3788,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3789,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[379,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3790,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3791,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3792,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3793,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3794,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3795,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3796,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3797,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3798,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[380,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3800,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3802,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3803,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3805,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3806,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3807,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3808,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[381,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3810,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3811,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3812,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3813,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3815,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3816,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3817,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3818,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3819,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[382,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3821,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3822,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3823,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3824,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3825,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3826,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3828,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3829,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[383,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3830,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3831,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3832,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3833,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3835,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3836,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3837,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3838,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3841,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3842,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3843,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3844,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3845,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3846,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3847,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3848,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3849,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[385,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3850,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3851,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3852,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3853,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3855,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3856,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3857,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3858,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3859,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[386,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3860,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3862,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3863,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3864,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3865,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3866,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3867,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3868,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3869,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[387,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3870,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3871,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3872,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3873,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3874,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3875,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3876,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3878,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[388,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3880,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3881,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3882,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3883,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3885,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3886,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3887,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3888,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3889,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[389,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3890,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3891,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3892,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3893,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3894,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3895,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3896,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3897,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3898,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3899,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[39,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[390,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3900,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3901,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3902,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3903,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3904,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3905,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3907,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3908,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3909,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[391,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3910,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3911,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3912,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3915,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3916,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3917,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3918,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3919,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[392,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3920,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3921,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3922,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3923,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3925,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3926,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3927,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[393,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3930,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3931,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3933,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3934,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3935,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3937,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3938,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3939,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[394,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3940,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3941,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3942,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3943,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3944,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3945,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3947,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3948,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3949,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[395,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3950,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3952,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3953,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3955,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3956,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 357913942],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3957,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3958,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 357913942],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3959,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[396,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3960,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3961,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3962,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3963,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3964,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3965,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3969,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[397,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3971,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3972,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3973,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3974,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3975,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3977,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3978,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3979,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[398,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3980,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3981,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3983,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3986,1,], )
paddle.Tensor.__sub__(Tensor([894785, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3987,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3988,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[399,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3990,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3991,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3992,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3993,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3994,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3995,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3996,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3997,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3998,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[3999,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[400,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4000,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4001,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4003,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4004,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4005,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4006,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4007,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4008,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[401,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4010,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4011,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4012,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4013,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4014,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4015,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4016,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4017,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4018,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4019,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[402,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4020,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4021,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4022,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4025,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4026,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4028,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4029,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[403,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4030,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4031,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4032,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4033,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4034,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4035,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4038,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[404,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4040,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4041,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4043,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4045,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4046,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4047,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 67108864],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4048,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 67108864],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4049,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[405,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4051,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4052,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4053,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4054,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4055,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4056,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4057,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4058,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4059,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[406,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4061,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4062,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4063,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4064,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4065,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4066,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4067,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4068,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4069,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4071,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4072,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4074,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4075,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4076,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4077,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4079,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[408,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4080,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4081,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4082,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4083,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4084,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4085,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4086,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4088,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4089,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[409,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4090,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4091,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4092,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4093,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4094,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4095,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4096,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4097,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4098,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4099,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[410,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4100,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4102,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4104,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4105,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4106,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4108,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4109,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[411,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4110,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4113,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4114,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4115,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4116,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4117,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4118,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4119,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[412,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4120,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4121,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4123,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4125,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4126,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4127,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4128,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4129,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[413,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4130,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4131,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4132,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4133,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4134,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4137,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4138,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4139,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[414,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4140,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4141,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4142,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4143,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4144,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4145,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4146,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4147,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4148,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4149,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[415,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4150,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4151,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4153,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4154,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4155,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4156,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4157,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4158,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4159,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[416,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4160,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4161,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4163,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4164,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4165,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4166,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4167,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[417,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4170,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4171,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4174,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4175,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4176,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4178,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4179,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[418,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4181,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4183,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4184,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4187,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4189,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[419,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4190,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4191,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4195,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4196,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4197,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4198,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4199,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[420,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4201,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4203,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4204,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4205,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4206,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[421,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 24276],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4210,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4211,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4213,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4215,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4216,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4217,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4219,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[422,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 715827883, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4220,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4221,1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 715827883, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4224,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4225,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4227,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4228,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4229,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[423,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4230,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4233,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4234,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4237,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4238,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[424,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4241,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4242,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4243,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4244,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4247,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4248,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4249,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[425,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4250,1,], )
paddle.multiply(Tensor([1, 1, 256],"float32"), Tensor([1, 1, 4294967295],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([1, 1, 24276],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4251,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4253,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4256,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4258,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4259,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[426,1,], )
paddle.multiply(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4261,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4263,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4264,1,], )
paddle.multiply(Tensor([1, 10, 256],"float32"), Tensor([1, 10, 429496730],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4265,1,], )
paddle.multiply(Tensor([1, 10, 256],"float32"), Tensor([1, 16777216, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4266,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4268,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4269,1,], )
paddle.multiply(Tensor([1, 10, 429496730],"float32"), Tensor([1, 10, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[427,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4270,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4272,1,], )
paddle.multiply(Tensor([1, 100, 256],"float32"), Tensor([1, 100, 42949673],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4273,1,], )
paddle.multiply(Tensor([1, 100, 256],"float32"), Tensor([1, 16777216, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4275,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4276,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4277,1,], )
paddle.multiply(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4279,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[428,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4280,1,], )
paddle.multiply(Tensor([1, 101, 256],"float32"), Tensor([1, 101, 42524429],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4281,1,], )
paddle.multiply(Tensor([1, 101, 256],"float32"), Tensor([1, 16777216, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4283,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4284,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4286,1,], )
paddle.multiply(Tensor([1, 101, 42524429],"float32"), Tensor([1, 101, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4287,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4288,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[429,1,], )
paddle.multiply(Tensor([1, 102, 256],"float32"), Tensor([1, 102, 42107523],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4290,1,], )
paddle.multiply(Tensor([1, 102, 256],"float32"), Tensor([1, 16777216, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4291,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4292,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4293,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 24276],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.multiply(Tensor([1, 102, 42107523],"float32"), Tensor([1, 102, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4294,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4295,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4296,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4299,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[430,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4301,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4302,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4304,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4306,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4308,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4309,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[431,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4310,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4311,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4313,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4315,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4316,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 27216],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[432,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4320,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4322,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4324,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4325,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4327,1,], )
paddle.multiply(Tensor([1, 1073741825, 2],"float64"), Tensor([1, 5, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4328,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4329,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[433,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4330,1,], )
paddle.multiply(Tensor([1, 1247, 1722121],"float64"), Tensor([512],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4333,1,], )
paddle.multiply(Tensor([1, 1247, 512],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4336,1,], )
paddle.multiply(Tensor([1, 1251, 1716614],"float64"), Tensor([512],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4337,1,], )
paddle.multiply(Tensor([1, 1251, 512],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4338,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[434,1,], )
paddle.multiply(Tensor([1, 16777216, 256],"float32"), Tensor([1, 10, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4342,1,], )
paddle.multiply(Tensor([1, 16777216, 256],"float32"), Tensor([1, 100, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4345,1,], )
paddle.multiply(Tensor([1, 16777216, 256],"float32"), Tensor([1, 101, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4346,1,], )
paddle.multiply(Tensor([1, 16777216, 256],"float32"), Tensor([1, 102, 256],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4347,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4349,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[435,1,], )
paddle.multiply(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4352,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4354,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4355,1,], )
paddle.multiply(Tensor([1, 2, 268435456, 8],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4358,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[436,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4360,1,], )
paddle.multiply(Tensor([1, 2, 8, 268435456],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4361,1,], )
paddle.multiply(Tensor([1, 2, 8, 8],"float32"), Tensor([1, 1, 536870912, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4362,1,], )
paddle.multiply(Tensor([1, 2, 8, 8],"float32"), Tensor([1, 1, 8, 536870912],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4365,1,], )
paddle.multiply(Tensor([1, 2, 8, 8],"float32"), Tensor([1, 67108864, 8, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4367,1,], )
paddle.multiply(Tensor([1, 2, 8, 8],"float32"), Tensor([67108864, 1, 8, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4368,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 27216],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.multiply(Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4369,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4372,1,], )
paddle.multiply(Tensor([1, 2147483649],"float64"), Tensor([1, 3],"float64"), )
paddle.multiply(Tensor([1, 2147483649],"float64"), Tensor([1, 5],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4374,1,], )
paddle.multiply(Tensor([1, 2],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4375,1,], )
paddle.multiply(Tensor([1, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4378,1,], )
paddle.multiply(Tensor([1, 32],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[438,1,], )
paddle.multiply(Tensor([1, 32],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4383,1,], )
paddle.multiply(Tensor([1, 3],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4384,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4385,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4386,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4388,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[439,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4390,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4391,1,], )
paddle.multiply(Tensor([1, 4, 134217728, 8],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4392,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4395,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4396,1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.multiply(Tensor([1, 4, 8, 134217728],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4397,1,], )
paddle.multiply(Tensor([1, 4, 8, 8],"float32"), Tensor([1, 1, 536870912, 8],"float32"), )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.multiply(Tensor([1, 4, 8, 8],"float32"), Tensor([1, 1, 8, 536870912],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4398,1,], )
paddle.multiply(Tensor([1, 4, 8, 8],"float32"), Tensor([1, 67108864, 8, 8],"float32"), )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4399,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[440,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4401,1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.multiply(Tensor([1, 4294967295],"float32"), Tensor([1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4402,1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4403,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4405,1,], )
paddle.multiply(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4406,1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 32, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.multiply(Tensor([1, 45, 400],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4407,1,], )
paddle.multiply(Tensor([1, 45, 95443718],"float32"), Tensor([400],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4408,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4409,1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 32, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.multiply(Tensor([1, 471, 4559414],"float64"), Tensor([512],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[441,1,], )
paddle.multiply(Tensor([1, 471, 512],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4410,1,], )
paddle.multiply(Tensor([1, 5, 2],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4411,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 27216],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.multiply(Tensor([1, 5, 2],"float64"), Tensor([1, 5, 429496730],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4415,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4419,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[442,1,], )
paddle.multiply(Tensor([1, 5, 429496730],"float64"), Tensor([1, 5, 2],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4420,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4421,1,], )
paddle.multiply(Tensor([1, 5],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4424,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4427,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4429,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[443,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4430,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4432,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4433,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4434,1,], )
paddle.multiply(Tensor([10, 1, 10],"float32"), Tensor([10, 1, 429496730],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4435,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4436,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4438,1,], )
paddle.multiply(Tensor([10, 1, 10],"float32"), Tensor([429496730, 1, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4439,1,], )
paddle.multiply(Tensor([10, 1, 429496730],"float32"), Tensor([10, 1, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[444,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4440,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4442,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4444,1,], )
paddle.multiply(Tensor([10, 12, 10],"float32"), Tensor([10, 1, 429496730],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4445,1,], )
paddle.multiply(Tensor([10, 12, 10],"float32"), Tensor([10, 12, 35791395],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4446,1,], )
paddle.multiply(Tensor([10, 12, 10],"float32"), Tensor([10, 42949673, 10],"float32"), )
paddle.multiply(Tensor([10, 12, 10],"float32"), Tensor([35791395, 12, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4448,1,], )
paddle.multiply(Tensor([10, 12, 10],"float32"), Tensor([429496730, 1, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[445,1,], )
paddle.multiply(Tensor([10, 12, 35791395],"float32"), Tensor([10, 1, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4450,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4452,1,], )
paddle.multiply(Tensor([10, 12, 35791395],"float32"), Tensor([10, 12, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4455,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4456,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4457,1,], )
paddle.multiply(Tensor([10, 15],"float32"), Tensor([10, 429496730],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4459,1,], )
paddle.multiply(Tensor([10, 15],"float32"), Tensor([286331153, 15],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[446,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4462,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4463,1,], )
paddle.multiply(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4464,1,], )
paddle.multiply(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4465,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4467,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4468,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[447,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4471,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4475,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4476,1,], )
paddle.multiply(Tensor([10, 42949673, 10],"float32"), Tensor([10, 12, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4479,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[448,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4480,1,], )
paddle.multiply(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4481,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4482,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4485,1,], )
paddle.multiply(Tensor([10, 429496730],"float32"), Tensor([10, 15],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4487,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4488,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4489,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[449,1,], )
paddle.multiply(Tensor([100, 1, 2, 21474837],"float32"), Tensor([100, 1, 2, 2],"float32"), )
paddle.multiply(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 1, 2, 21474837],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4491,1,], )
paddle.multiply(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 1, 21474837, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4492,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4494,1,], )
paddle.multiply(Tensor([100, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4495,1,], )
paddle.multiply(Tensor([100, 1, 21474837, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4497,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[45,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[450,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4507,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4509,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[451,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4515,1,], )
paddle.multiply(Tensor([100, 14316558, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4516,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4518,1,], )
paddle.multiply(Tensor([100, 2, 21474837, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4519,1,], )
paddle.multiply(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 14316558, 3, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[452,1,], )
paddle.multiply(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 21474837, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4522,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4523,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4524,1,], )
paddle.multiply(Tensor([100, 2, 3, 1],"float32"), Tensor([715827883, 2, 3, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4527,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4528,1,], )
paddle.multiply(Tensor([100],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4529,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[453,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4532,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4533,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4534,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4536,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[454,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4540,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4541,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4544,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4547,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4548,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4549,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[455,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4550,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4551,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4552,1,], )
paddle.multiply(Tensor([1024, 128],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4553,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4554,1,], )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.multiply(Tensor([1024, 256, 128, 128],"float32"), Tensor([2, 256, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([1024, 4194304],"float16"), Tensor([128],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4555,1,], )
paddle.multiply(Tensor([104],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4558,1,], )
paddle.multiply(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4559,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[456,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4560,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4561,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4562,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4564,1,], )
paddle.multiply(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4566,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4568,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4569,1,], )
paddle.multiply(Tensor([107374183, 20],"float64"), Tensor([3, 20],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[457,1,], )
paddle.multiply(Tensor([108],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4570,1,], )
paddle.multiply(Tensor([110484],"float32"), Tensor([4294967295],"float32"), )
paddle.multiply(Tensor([112],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4571,1,], )
paddle.multiply(Tensor([128, 112, 14, 14],"float16"), Tensor([128, 1, 1, 33554432],"float16"), )
paddle.multiply(Tensor([128, 112, 14, 14],"float16"), Tensor([128, 1, 33554432, 1],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4574,1,], )
paddle.multiply(Tensor([128, 112, 14, 14],"float16"), Tensor([128, 33554432, 1, 1],"float16"), )
paddle.multiply(Tensor([128, 112, 14, 14],"float16"), Tensor([4294967295, 1, 1, 1],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4577,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4578,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[458,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4582,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4583,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4584,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[459,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4590,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4592,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4594,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4599,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[460,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4600,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4605,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4606,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4609,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[461,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4613,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4614,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4616,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4617,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4618,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4619,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[462,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4620,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4622,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4624,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4625,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4627,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4628,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4629,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[463,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4631,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4632,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4636,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4637,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4639,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[464,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4640,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4642,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4644,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4645,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4646,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4648,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4649,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[465,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4650,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4651,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4652,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[466,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4661,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4662,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4667,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[467,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4671,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4672,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4674,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4675,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4676,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4677,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4678,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[468,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4682,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4683,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4684,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4689,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[469,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4690,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4691,1,], )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4692,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4693,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4694,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4695,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4696,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4698,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[470,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4701,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4703,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[471,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4710,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4714,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4715,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4717,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4718,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4719,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[472,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4720,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4721,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4722,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4723,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4724,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4725,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4727,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4728,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4729,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[473,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4730,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4731,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4734,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4735,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4736,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4738,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4739,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[474,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4740,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4741,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4742,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4745,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4747,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4748,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4749,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[475,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4752,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4754,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 15, 28633116],"float32"), Tensor([2, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4755,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4756,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4758,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[476,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4761,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4762,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4763,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4765,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4766,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4769,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[477,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4777,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[478,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 15, 2],"float32"), Tensor([2, 1, 1, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4780,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4782,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4783,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4784,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4785,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4786,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4787,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4788,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4789,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[479,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4796,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[48,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[480,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[481,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 15, 2],"float32"), Tensor([2, 1, 1073741824, 2],"float32"), )
paddle.multiply(Tensor([13, 2581111, 4, 32],"float32"), Tensor([13, 8, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[482,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4822,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[483,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[484,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[485,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[486,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[487,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[488,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4882,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[489,1,], )
paddle.multiply(Tensor([13, 8, 4, 32],"float32"), Tensor([13, 330382100, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4897,1,], )
paddle.multiply(Tensor([13, 8, 4, 32],"float32"), Tensor([13, 8, 1, 41297763],"float32"), name=None, )
paddle.multiply(Tensor([13, 8, 4, 32],"float32"), Tensor([13, 8, 41297763, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[490,1,], )
paddle.multiply(Tensor([13, 8, 4, 32],"float32"), Tensor([536870912, 8, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[491,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[492,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4928,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[493,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[494,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 15, 2],"float32"), Tensor([2, 1073741824, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[495,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4959,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[496,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[4968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[497,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[498,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[499,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[50,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[500,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5005,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[501,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5011,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[502,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5022,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5029,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 15, 2],"float32"), Tensor([2147483648, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[503,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[504,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5043,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5045,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[505,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5050,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[506,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[507,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[508,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[509,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[51,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[510,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5105,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[511,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5112,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[512,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5122,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[513,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[514,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[515,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[516,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[517,1,], )
paddle.multiply(Tensor([195653, 112, 14, 14],"float16"), Tensor([128, 1, 1, 1],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5172,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[518,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5186,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[519,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[52,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[520,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5203,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5209,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[521,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[522,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5220,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5221,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[523,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[524,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[525,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[526,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[527,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[528,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5281,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[529,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[53,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[530,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[531,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5311,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5316,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[532,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[533,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[534,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5358,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[536,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[537,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[538,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[539,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 1, 1, 1, 2147483648],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5390,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 1, 1, 2147483648, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[54,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 1, 2147483648, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[540,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 2147483648, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[541,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([4294967295, 1, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5414,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5417,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5422,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[543,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[544,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5447,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[545,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5456,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5458,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[546,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5468,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[547,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[548,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[549,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[550,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5501,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[551,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[552,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[553,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float64"), Tensor([2, 1, 1, 1, 1073741825],"float64"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float64"), Tensor([2, 1, 1, 1073741825, 1],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5535,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[554,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5544,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[555,1,], )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float64"), Tensor([2147483649, 1, 1, 1, 1],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[556,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[557,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5572,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[558,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[559,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[56,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[560,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[561,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[562,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5620,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[563,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5634,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[564,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5646,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[565,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5657,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[566,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[567,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[568,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[569,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5697,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[57,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[570,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[571,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float32"), Tensor([2, 1, 1, 2147483648],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[572,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float32"), Tensor([2, 1, 2147483648, 1],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5725,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[573,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5736,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float64"), Tensor([2, 1, 1, 1073741825],"float64"), name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[574,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float64"), Tensor([2, 1, 1073741825, 1],"float64"), name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[575,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[576,1,], )
paddle.multiply(Tensor([2, 1, 2, 3],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[577,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5772,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5775,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[578,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[579,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5794,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[580,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[581,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5810,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[582,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 2],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[583,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[584,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5847,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[585,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[586,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[587,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5871,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[588,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[589,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5893,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[59,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[590,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[591,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[592,1,], )
paddle.multiply(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[593,1,], )
paddle.multiply(Tensor([2, 1073741825],"float64"), Tensor([500],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[594,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[595,1,], )
paddle.multiply(Tensor([2, 131072, 128, 128],"float32"), Tensor([2, 256, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[596,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 2],"float32"), Tensor([1, 1, 2147483648, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[597,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5970,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[5972,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[598,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[599,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[60,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[600,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6002,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6006,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[601,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[602,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[603,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[604,1,], )
paddle.multiply(Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[605,1,], )
paddle.multiply(Tensor([2, 256, 128, 128],"float32"), Tensor([16777216, 256, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6054,1,], )
paddle.multiply(Tensor([2, 256, 128, 128],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[606,1,], )
paddle.multiply(Tensor([2, 256, 128, 128],"float32"), Tensor([2, 256, 1, 8388608],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6068,1,], )
paddle.multiply(Tensor([2, 256, 128, 128],"float32"), Tensor([2, 256, 8388608, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[607,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6072,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 2],"float32"), Tensor([1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[608,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[609,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[61,1,], )
paddle.multiply(Tensor([2, 256, 16, 16],"float32"), Tensor([2, 1, 1, 2147483648],"float32"), name=None, )
paddle.multiply(Tensor([2, 256, 16, 16],"float32"), Tensor([2, 1, 2147483648, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[610,1,], )
paddle.multiply(Tensor([2, 256, 16, 16],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[611,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[612,1,], )
paddle.multiply(Tensor([2, 256, 16, 16],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[613,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[614,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6145,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[615,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[616,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[617,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6178,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[618,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6189,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 2],"float32"), Tensor([2147483648, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[619,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6198,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[62,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[620,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[621,1,], )
paddle.multiply(Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[622,1,], )
paddle.multiply(Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[623,1,], )
paddle.multiply(Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6235,1,], )
paddle.multiply(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[624,1,], )
paddle.multiply(Tensor([2, 3, 1, 4],"float32"), Tensor([3, 3, 477218589],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[625,1,], )
paddle.multiply(Tensor([2, 3, 1, 4],"float32"), Tensor([3, 357913942, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[626,1,], )
paddle.multiply(Tensor([2, 3, 1, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[627,1,], )
paddle.multiply(Tensor([2, 3, 1, 715827883],"float32"), Tensor([3, 3, 4],"float32"), )
paddle.multiply(Tensor([2, 3, 178956971, 4],"float32"), Tensor([3, 3, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[628,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6288,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[629,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 53687092],"float32"), Tensor([1, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[63,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[630,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[631,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6310,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[632,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[633,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[634,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6340,1,], )
paddle.multiply(Tensor([2, 500],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6346,1,], )
paddle.multiply(Tensor([2, 536870912, 1, 4],"float32"), Tensor([3, 3, 4],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[635,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6359,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[636,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[637,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[638,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[639,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[64,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[640,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6407,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[641,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[642,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6422,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6424,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[643,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6432,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6433,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[644,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[645,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6457,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[646,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[647,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6479,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[648,1,], )
paddle.multiply(Tensor([209716, 1, 512, 1, 40],"float16"), Tensor([64, 26, 1, 1, 40],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6484,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[649,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[65,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10, 8, 53687092],"float32"), Tensor([128],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[650,1,], )
paddle.multiply(Tensor([209716, 1, 512, 1, 40],"float32"), Tensor([64, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[651,1,], )
paddle.multiply(Tensor([209716, 1, 512, 1, 40],"float32"), Tensor([8, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[652,1,], )
paddle.multiply(Tensor([2147483648, 2],"float32"), Tensor([1, 2],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[653,1,], )
paddle.multiply(Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[654,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6542,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[655,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[656,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6569,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[657,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[658,1,], )
paddle.multiply(Tensor([2147483649],"float64"), Tensor([5],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[659,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6593,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[66,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[660,1,], )
paddle.multiply(Tensor([214748365, 10],"float64"), Tensor([5, 10],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[661,1,], )
paddle.multiply(Tensor([214748365, 10],"float64"), Tensor([6, 10],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6617,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[662,1,], )
paddle.multiply(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[663,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[664,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[665,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6666,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[667,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6678,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[668,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6688,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6689,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[669,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[67,1,], )
paddle.multiply(Tensor([286331153, 15],"float32"), Tensor([10, 15],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[670,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6709,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[671,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6712,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[672,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[673,1,], )
paddle.multiply(Tensor([298262, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[674,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1001],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[675,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6759,1,], )
paddle.multiply(Tensor([298262, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[676,1,], )
paddle.multiply(Tensor([3, 20],"float64"), Tensor([107374183, 20],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6760,1,], )
paddle.multiply(Tensor([3, 20],"float64"), Tensor([3, 715827883],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[677,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[678,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[679,1,], )
paddle.multiply(Tensor([3, 298262, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[68,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[680,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[681,1,], )
paddle.multiply(Tensor([3, 298262, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[682,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[683,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[684,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6842,1,], )
paddle.multiply(Tensor([3, 3, 298262, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[685,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6850,1,], )
paddle.multiply(Tensor([3, 3, 3, 3976822, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[686,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11184811, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11184811, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[687,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[688,1,], )
paddle.multiply(Tensor([3, 3, 3, 40, 3976822],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[689,1,], )
paddle.multiply(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([298262, 3, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[69,1,], )
paddle.multiply(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 298262, 3, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[690,1,], )
paddle.multiply(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 298262, 40, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6905,1,], )
paddle.multiply(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 3976822, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6908,1,], )
paddle.multiply(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 3976822],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6909,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[691,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[692,1,], )
paddle.multiply(Tensor([3, 3, 3976822, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[693,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6936,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6938,1,], )
paddle.multiply(Tensor([3, 3, 40, 3976822, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[694,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6942,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[695,1,], )
paddle.multiply(Tensor([3, 3, 40, 40, 298262],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[696,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1002],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.multiply(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([298262, 3, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[6961,1,], )
paddle.multiply(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 298262, 40, 40, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[697,1,], )
paddle.multiply(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 3976822, 40, 3],"float32"), )
paddle.multiply(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 3976822, 3],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[698,1,], )
paddle.multiply(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 298262],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[699,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[70,1,], )
paddle.multiply(Tensor([3, 715827883],"float64"), Tensor([3, 20],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[700,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7007,1,], )
paddle.multiply(Tensor([32, 128],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[701,1,], )
paddle.multiply(Tensor([32, 134217728],"float16"), Tensor([128],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[702,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[703,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7030,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[704,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7046,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[705,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[706,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[707,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7074,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[708,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[709,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7094,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[71,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[710,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[711,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[712,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[713,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[714,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7142,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[715,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[716,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[717,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7173,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1004],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[718,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[719,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[72,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[720,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7206,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7207,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[721,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[722,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[723,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[724,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[725,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[726,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[727,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[728,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[729,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7298,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[73,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[730,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7308,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[731,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[732,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[733,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[734,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7349,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[735,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[736,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[737,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[738,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[739,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[74,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[740,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[741,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[742,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7420,1,], )
paddle.multiply(Tensor([357913942, 1, 1, 2, 3],"float64"), Tensor([2, 1, 1, 1, 1],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[743,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[744,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7441,1,], )
paddle.multiply(Tensor([357913942, 1, 2, 3],"float64"), Tensor([2, 1, 1, 1],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7449,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[745,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7454,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7455,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[746,1,], )
paddle.multiply(Tensor([35791395, 12, 10],"float32"), Tensor([10, 1, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[747,1,], )
paddle.multiply(Tensor([35791395, 12, 10],"float32"), Tensor([10, 12, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[748,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[749,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[75,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[750,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[751,1,], )
paddle.multiply(Tensor([4194304, 8, 4, 32],"float32"), Tensor([13, 8, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[752,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[753,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[754,1,], )
paddle.multiply(Tensor([4294967295, 1],"float32"), Tensor([1],"float32"), )
paddle.multiply(Tensor([4294967295],"float32"), Tensor([100],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[755,1,], )
paddle.multiply(Tensor([4294967295],"float32"), Tensor([104],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[756,1,], )
paddle.multiply(Tensor([4294967295],"float32"), Tensor([108],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[757,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[758,1,], )
paddle.multiply(Tensor([4294967295],"float32"), Tensor([110484],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[759,1,], )
paddle.multiply(Tensor([4294967295],"float32"), Tensor([112],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[76,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[760,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[761,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7610,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[762,1,], )
paddle.multiply(Tensor([4294967295],"float32"), Tensor([5],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[763,1,], )
paddle.multiply(Tensor([429496730, 1, 10],"float32"), Tensor([10, 1, 10],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[764,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[765,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7654,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[766,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7662,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[767,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10285, 4],"float32"), Tensor([10285, 417596],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[768,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[769,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7695,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[77,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[770,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[771,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[772,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[773,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[774,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[775,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[776,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[777,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[778,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[779,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[78,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[780,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10285, 4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[781,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[782,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[783,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[784,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7842,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7846,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[785,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[786,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7865,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[787,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[788,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[789,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[79,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[790,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[791,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[792,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[793,1,], )
paddle.Tensor.__truediv__(Tensor([1, 10285],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[794,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[795,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[796,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[797,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[798,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[799,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[7993,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[80,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[800,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[801,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[802,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[803,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[804,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[805,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[806,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[807,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8075,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[808,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[809,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[81,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[810,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8100,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[811,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[812,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8122,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[813,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[814,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[815,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[816,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8160,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8165,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[817,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[818,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1031],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[819,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[82,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[820,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[821,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[822,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[823,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[824,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[825,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[826,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[827,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[828,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8280,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[829,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8295,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[83,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[830,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[831,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[832,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[833,1,], )
paddle.multiply(Tensor([5, 1, 3],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8333,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[834,1,], )
paddle.multiply(Tensor([5, 1, 3],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[835,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8355,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[836,1,], )
paddle.multiply(Tensor([5, 1, 429496730],"float64"), Tensor([1, 3],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[837,1,], )
paddle.multiply(Tensor([5, 1, 429496730],"float64"), Tensor([2, 3],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[838,1,], )
paddle.multiply(Tensor([5, 10],"float64"), Tensor([214748365, 10],"float64"), name=None, )
paddle.multiply(Tensor([5, 10],"float64"), Tensor([5, 429496730],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8381,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[839,1,], )
paddle.multiply(Tensor([5, 143165577, 3],"float64"), Tensor([2, 3],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[84,1,], )
paddle.multiply(Tensor([5, 2, 3, 4],"float64"), Tensor([178956971, 3, 4],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[840,1,], )
paddle.multiply(Tensor([5, 2, 3, 4],"float64"), Tensor([2, 268435457, 4],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[841,1,], )
paddle.multiply(Tensor([5, 2, 3, 4],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[842,1,], )
paddle.multiply(Tensor([5, 2, 3, 71582789],"float64"), Tensor([2, 3, 4],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[843,1,], )
paddle.multiply(Tensor([5, 2, 53687092, 4],"float64"), Tensor([2, 3, 4],"float64"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[844,1,], )
paddle.multiply(Tensor([5, 35791395, 3, 4],"float64"), Tensor([2, 3, 4],"float64"), )
paddle.multiply(Tensor([5, 429496730],"float64"), Tensor([5, 10],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8442,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[845,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[846,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8460,1,], )
paddle.multiply(Tensor([5],"float32"), Tensor([4294967295],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[847,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8475,1,], )
paddle.multiply(Tensor([5],"float64"), Tensor([2147483649],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[848,1,], )
paddle.multiply(Tensor([6, 10],"float64"), Tensor([214748365, 10],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[849,1,], )
paddle.multiply(Tensor([6, 10],"float64"), Tensor([6, 357913942],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[85,1,], )
paddle.multiply(Tensor([6, 357913942],"float64"), Tensor([6, 10],"float64"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[850,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[851,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[852,1,], )
paddle.multiply(Tensor([64, 1, 1677722, 1, 40],"float16"), Tensor([64, 26, 1677722, 1, 40],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[853,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[854,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[855,1,], )
paddle.multiply(Tensor([64, 1, 1677722, 1, 40],"float32"), Tensor([64, 26, 1677722, 1, 40],"float32"), )
paddle.multiply(Tensor([64, 1, 512, 1, 131072],"float16"), Tensor([64, 26, 1, 1, 40],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[856,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8568,1,], )
paddle.multiply(Tensor([64, 1, 512, 1, 131072],"float32"), Tensor([64, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[857,1,], )
paddle.multiply(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([4129777, 26, 1, 1, 40],"float16"), )
paddle.multiply(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([64, 26, 1, 1, 2581111],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[858,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8589,1,], )
paddle.multiply(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([64, 26, 64528, 1, 40],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[859,1,], )
paddle.multiply(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([4129777, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8597,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[86,1,], )
paddle.multiply(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([64, 26, 1, 1, 2581111],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[860,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[861,1,], )
paddle.multiply(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([64, 26, 64528, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[862,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[863,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[864,1,], )
paddle.multiply(Tensor([64, 3277, 512, 1, 40],"float16"), Tensor([64, 26, 1, 1, 40],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[865,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[866,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[867,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8679,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[868,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[869,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[87,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[870,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[871,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8717,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[872,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[873,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[874,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[875,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8758,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[876,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[877,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8771,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[878,1,], )
paddle.multiply(Tensor([64, 3277, 512, 1, 40],"float32"), Tensor([64, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[879,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[88,1,], )
paddle.multiply(Tensor([65536, 256, 16, 16],"float32"), Tensor([2, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[880,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[881,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11184811],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8816,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[882,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11184811],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[883,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[884,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8846,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[885,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[886,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[887,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[888,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[889,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[89,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[890,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[891,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[8910,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[892,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[893,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[894,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[895,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[896,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[897,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[898,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[899,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[90,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[900,1,], )
paddle.multiply(Tensor([715827883, 1, 1, 2, 3],"float32"), Tensor([2, 1, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[901,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[902,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9021,1,], )
paddle.multiply(Tensor([715827883, 1, 2, 3],"float32"), Tensor([2, 1, 1, 1],"float32"), name=None, )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[903,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[904,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[905,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[906,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[907,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[908,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[909,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[91,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[910,1,], )
paddle.multiply(Tensor([715827883, 2, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[911,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[912,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1073741824, 4],"float32"), Tensor([10285, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[913,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[914,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[915,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[916,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9168,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[917,1,], )
paddle.multiply(Tensor([8, 1, 13421773, 1, 40],"float32"), Tensor([8, 26, 13421773, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[918,1,], )
paddle.multiply(Tensor([8, 1, 512, 1, 1048576],"float32"), Tensor([8, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[919,1,], )
paddle.multiply(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([4129777, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[92,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[920,1,], )
paddle.multiply(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 26, 1, 1, 20648882],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9203,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[921,1,], )
paddle.multiply(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 26, 516223, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[922,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[923,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[924,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1073741824, 4],"float32"), Tensor([21504, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[925,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[926,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9263,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[927,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[928,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[929,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[93,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[930,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[931,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[932,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9322,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[933,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[934,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[935,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1073741824, 4],"float32"), Tensor([24276, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[936,1,], )
paddle.multiply(Tensor([8, 100, 100],"float16"), Tensor([100, 42949673],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[937,1,], )
paddle.multiply(Tensor([8, 100, 100],"float16"), Tensor([100, 42949673],"float32"), )
paddle.multiply(Tensor([8, 100, 100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[938,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[939,1,], )
paddle.multiply(Tensor([8, 100, 100],"float16"), Tensor([42949673, 100],"float32"), )
paddle.multiply(Tensor([8, 100, 100],"float32"), Tensor([100, 42949673],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[94,1,], )
paddle.multiply(Tensor([8, 100, 100],"float32"), Tensor([42949673, 100],"float16"), )
paddle.multiply(Tensor([8, 100, 5368710],"float16"), Tensor([100, 100],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[940,1,], )
paddle.multiply(Tensor([8, 100, 5368710],"float16"), Tensor([100, 100],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[941,1,], )
paddle.multiply(Tensor([8, 100, 5368710],"float32"), Tensor([100, 100],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[942,1,], )
paddle.multiply(Tensor([8, 26215, 512, 1, 40],"float32"), Tensor([8, 26, 1, 1, 40],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[943,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9437,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[944,1,], )
paddle.multiply(Tensor([8, 5368710, 100],"float16"), Tensor([100, 100],"float16"), )
paddle.multiply(Tensor([8, 5368710, 100],"float16"), Tensor([100, 100],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[945,1,], )
paddle.multiply(Tensor([8, 5368710, 100],"float32"), Tensor([100, 100],"float16"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9451,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[946,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[947,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[948,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9485,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[949,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[95,1,], )
paddle.multiply(x=Tensor([1, 1024, 18, 18],"float32"), y=Tensor([1, 1024, 1, 4194304],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[950,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1073741824, 4],"float32"), Tensor([27216, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[951,1,], )
paddle.multiply(x=Tensor([1, 1024, 18, 18],"float32"), y=Tensor([1, 1024, 4194304, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[952,1,], )
paddle.multiply(x=Tensor([1, 1024, 18, 18],"float32"), y=Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[953,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[954,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[955,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[956,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[957,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[958,1,], )
paddle.multiply(x=Tensor([1, 1024, 19, 19],"float32"), y=Tensor([1, 1024, 1, 4194304],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[959,1,], )
paddle.multiply(x=Tensor([1, 1024, 19, 19],"float32"), y=Tensor([1, 1024, 4194304, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[96,1,], )
paddle.multiply(x=Tensor([1, 1024, 19, 19],"float32"), y=Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[960,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[961,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[962,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[963,1,], )
paddle.Tensor.__truediv__(Tensor([1, 1073741824, 4],"float32"), Tensor([30324, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[964,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[965,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[966,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[967,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[968,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[969,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[97,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[970,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[971,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[972,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[973,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[974,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9749,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[975,1,], )
paddle.multiply(x=Tensor([1, 1024, 20, 20],"float32"), y=Tensor([1, 1024, 1, 4194304],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[976,1,], )
paddle.multiply(x=Tensor([1, 1024, 20, 20],"float32"), y=Tensor([1, 1024, 4194304, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[977,1,], )
paddle.multiply(x=Tensor([1, 1024, 20, 20],"float32"), y=Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[978,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[979,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[98,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[980,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[981,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[982,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[983,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[984,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[985,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[986,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[987,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[988,1,], )
paddle.multiply(x=Tensor([1, 1024, 21, 21],"float32"), y=Tensor([1, 1024, 1, 4194304],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[989,1,], )
paddle.multiply(x=Tensor([1, 1024, 21, 21],"float32"), y=Tensor([1, 1024, 4194304, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[99,1,], )
paddle.multiply(x=Tensor([1, 1024, 21, 21],"float32"), y=Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[990,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[991,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9911,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[992,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[993,1,], )
paddle.multiply(x=Tensor([1, 1024, 22, 22],"float32"), y=Tensor([1, 1024, 1, 4194304],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[994,1,], )
paddle.multiply(x=Tensor([1, 1024, 22, 22],"float32"), y=Tensor([1, 1024, 4194304, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[995,1,], )
paddle.multiply(x=Tensor([1, 1024, 22, 22],"float32"), y=Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[996,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[9969,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[997,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[998,1,], )
paddle.Tensor.tile(Tensor([1, 4294967295],"int32"), list[999,1,], )
paddle.Tensor.tile(Tensor([1, 5, 858993459],"float32"), list[1,1,2,], )
paddle.multiply(x=Tensor([1, 10737419, 20, 20],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 11897417, 19, 19],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 13256072, 18, 18],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.multiply(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.multiply(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.multiply(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.multiply(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.multiply(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.multiply(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.multiply(x=Tensor([1, 8873900, 22, 22],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 9739155, 21, 21],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.multiply(x=Tensor([1],"float32"), y=Tensor([4294967295],"float32"), )
paddle.multiply(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.multiply(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.multiply(x=Tensor([4294967295],"float32"), y=Tensor([4],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 11, 4, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 11, 4, 97612894],"float32"), Tensor([128],"float32"), )
paddle.Tensor.tile(Tensor([1, 60798, 70644],"bool"), list[1,8,1,], )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 2097152],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 2097152],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.Tensor.tile(Tensor([1, 96656, 44436],"bool"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1, 96656, 44436],"bool"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1, 96656, 44436],"bool"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([100, 167773, 2, 1, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([100, 2, 167773, 1, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([100, 2, 2, 1, 10737419],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([100, 2, 2, 83887, 128],"float16"), list[1,1,1,2,1,], )
paddle.nn.functional.softmax(Tensor([4, 454, 81, 94, 311],"float32"), axis=2, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 2],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 2],"float32"), Tensor([1, 1, 2147483648, 2],"float32"), )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.Tensor.tile(Tensor([10105, 425034],"float32"), list[1,2,], )
paddle.Tensor.tile(Tensor([10105, 425034],"float32"), list[1,3,], )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 2],"float32"), Tensor([1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 2],"float32"), Tensor([2147483648, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([10285, 417596],"float32"), list[1,2,], )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 39768216],"float32"), Tensor([1, 1, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([10285, 417596],"float32"), list[1,3,], )
paddle.nn.functional.margin_ranking_loss(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([1073741825, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float16"), Tensor([128],"float16"), Tensor([4294967295],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float16"), Tensor([4294967295],"float16"), Tensor([128],"float16"), 0.5, "mean", None, )
paddle.Tensor.__truediv__(Tensor([1, 12, 9, 39768216],"float32"), Tensor([128],"float32"), )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float32"), Tensor([128],"float32"), Tensor([4294967295],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float32"), Tensor([4294967295],"float32"), Tensor([128],"float32"), 0.5, "mean", None, )
paddle.Tensor.tile(Tensor([105642, 1, 40656],"bool"), list[1,8,1,], )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 1073741825],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([1073741825, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 1073741825],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([1073741825, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 1073741825],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.Tensor.__truediv__(Tensor([1, 128, 1048576, 32],"float32"), Tensor([1, 1, 32, 32],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 128, 262144],"float32"), Tensor([1, 1, 1, 2],"float32"), )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float16"), Tensor([128],"float16"), Tensor([128],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.5, "mean", None, )
paddle.Tensor.__truediv__(Tensor([1, 128, 128, 2],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.nn.functional.max_pool1d(Tensor([1, 1, 2147483649],"float64"), 2, 2, 0, True, False, None, )
paddle.Tensor.__truediv__(Tensor([1, 128, 128, 2],"float32"), Tensor([1, 1, 2147483648, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 128, 2],"float32"), Tensor([1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 128, 2],"float32"), Tensor([2147483648, 1, 1, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 32, 1048576],"float32"), Tensor([1, 1, 32, 32],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 715827883],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 715827883],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.Tensor.__truediv__(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 1, 32, 134217728],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 4194304, 32, 32],"float32"), )
paddle.nn.functional.max_pool1d(Tensor([178956971, 3, 8],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([19173962, 32, 7],"float32"), 7, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 268435456, 8],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([91, 32, 1474921],"float32"), 7, )
paddle.nn.functional.max_pool1d(Tensor([91, 6742492, 7],"float32"), 7, )
paddle.nn.functional.max_pool1d(x=Tensor([1, 1, 2147483649],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.Tensor.__truediv__(Tensor([1, 144, 200, 149131],"float32"), Tensor([128],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 144, 200, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.max_pool1d(x=Tensor([178956971, 3, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 268435456, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.Tensor.__truediv__(Tensor([1, 15, 15, 19088744],"float32"), Tensor([2],"float32"), )
paddle.nanquantile(Tensor([1431655765, 3],"float32"), list[0.3,0.7,], 1, )
paddle.nanquantile(Tensor([2, 2147483648],"float32"), list[0.3,0.7,], 1, )
paddle.Tensor.__truediv__(Tensor([1, 15, 15, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.nanquantile(Tensor([4, 7, 76695845],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([4, 7, 76695845],"float64"), q=0.75, axis=list[0,2,], )
paddle.nanquantile(Tensor([4, 89478486, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([4, 89478486, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.nanquantile(Tensor([4294967295],"float32"), list[0.55,0.7,], 0, )
paddle.nanquantile(Tensor([51130564, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([51130564, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 1073741824],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([33554432, 2, 1, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 40, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 838861, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 10, 26843546],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 12, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 22369622, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 26843546, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 1118482, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 1118482, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 1118482, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 1118482],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 1118482],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 1118482],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 220, 976129],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 976129, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 368, 486297],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 384, 466034],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 40, 4473925],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 4473925, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 466034, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 486297, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 25363, 336, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 838861],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 21, 798916],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 508401, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 524288, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 541201, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 559241, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 621379, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 838861, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 262144, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.transpose(Tensor([1024, 129, 1, 129, 1, 253],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 129, 1, 129, 253, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 129, 129, 1, 1, 253],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 129, 129, 1, 253, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 129, 129, 253, 1, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 129, 253, 129, 1, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 144, 114, 8, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([1024, 144, 3, 304, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.nn.functional.max_pool2d(Tensor([1, 268435456, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 2684355, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2684355, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 27061, 320, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 27963, 320, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 29128, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2974355, 38, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2974355, 38, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2974355, 38, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 29826162, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 6391321],"float32"), kernel_size=1, )
paddle.Tensor.transpose(Tensor([1024, 257, 1, 257, 1, 64],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 257, 1, 257, 64, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 6391321],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 6391321],"float32"), kernel_size=3, )
paddle.Tensor.transpose(Tensor([1024, 257, 257, 1, 1, 64],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 257, 257, 1, 64, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 257, 257, 64, 1, 1],"float32"), tuple(0,3,1,4,2,5,), )
paddle.Tensor.transpose(Tensor([1024, 257, 64, 257, 1, 1],"float32"), tuple(0,1,3,5,2,4,), )
paddle.Tensor.transpose(Tensor([1024, 49, 335, 8, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6391321, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6391321, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6391321, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 31069, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 31715, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 32, 364723, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 32, 368, 364723],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3314018, 36, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3314018, 36, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3314018, 36, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 342393, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3715370, 34, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3715370, 34, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3715370, 34, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 37377, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 294338, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 294338, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 294338, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 310690, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 310690, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 310690, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 349526],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 349526],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 349526],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 328966, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 328966, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 328966, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 328966],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 328966],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 328966],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 349526, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 349526, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 349526, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 310690],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 310690],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 310690],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 294338],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 294338],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 294338],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 41944, 320, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 42949673, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 279621, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 288, 310690],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 310690, 288],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 320, 279621],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 51782, 288, 288],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6197645, 21, 33],"float32"), 1, stride=2, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1073741824, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6391321, 21, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 112, 599187],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 128, 524288],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 133153, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 135301, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 139811, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 155345, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 168193, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 3947581],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 199137, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 232211, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 245821, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 248, 270601],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 256, 262144],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 261124, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 262144, 256],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 262144, 256],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 288, 233017],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 320, 209716],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 336, 199729],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 1369569],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 520224, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 524288, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 599187, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 65536, 256, 256],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 67651, 248, 256],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 679476, 49, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 6927367, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 7158279, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 749689, 17, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 7953644, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 85599, 224, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 85599, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 85599, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 874205, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 88739, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 925441, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 983055, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1024, 64, 256, 256],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1058, 64, 248, 256],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10617, 64, 49, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1073741824, 1, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1079, 48, 288, 288],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10923, 384, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10923, 384, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10923, 384, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([11093, 128, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([111849, 24, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([11714, 64, 17, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 40, 69906],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 40, 69906],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 69906, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 69906, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 223697, 40, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 223697, 40, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 20, 69906],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 20, 69906],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 69906, 20],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 69906, 20],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 3579140, 10, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 10, 69906],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 69906, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 894785, 20, 20],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 894785, 20, 20],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([1214, 24, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 330382100, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 4, 82595525],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 7, 47197443],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 184366, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 7, 184366],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 47197443, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 6742492, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 82595525, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1322, 24, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([13660, 64, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([14461, 64, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([15361, 64, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1748, 24, 320, 320],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1864136, 16, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 305041, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 305041],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 203361, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 215093, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 414253],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 414253],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 414253, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 414253, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 52, 215093],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 55, 203361],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.square_error_cost(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([3, 2, 1, 357913942],"float64"), )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 22369622, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([3, 357913942, 1, 2],"float64"), )
paddle.Tensor.transpose(Tensor([128, 16, 49, 335, 4, 32],"float16"), list[3,0,1,4,2,5,], )
paddle.Tensor.transpose(Tensor([128, 16, 49, 335, 4, 32],"float32"), list[3,0,1,4,2,5,], )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float64"), label=Tensor([536870913, 2, 1, 2],"float64"), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 244, 36071],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 357913942],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 4400582, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 13, 645278],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 310690],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 310690, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 645278, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.square_error_cost(Tensor([3, 357913942, 1, 2],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.max_pool2d(Tensor([2, 2945794, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2945794, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.square_error_cost(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.transpose(Tensor([128, 32, 1, 56, 56, 335],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 32, 1, 56, 56, 335],"float32"), list[0,2,4,3,5,1,], )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.transpose(Tensor([128, 32, 335, 56, 56, 1],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 32, 335, 56, 56, 1],"float32"), list[0,2,4,3,5,1,], )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.square_error_cost(Tensor([429497, 100, 100],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.Tensor.transpose(Tensor([128, 32, 56, 1, 335, 56],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 32, 56, 1, 335, 56],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([128, 32, 56, 335, 1, 56],"float32"), list[0,2,4,1,3,5,], )
paddle.Tensor.transpose(Tensor([128, 32, 56, 335, 1, 56],"float32"), list[0,2,4,3,5,1,], )
paddle.nn.functional.square_error_cost(Tensor([429497, 100, 100],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([536870913, 2, 1, 2],"float64"), label=Tensor([3, 2, 1, 2],"float64"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([429497, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([8, 100, 5368710],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([8, 5368710, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([429497, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([8, 100, 5368710],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([8, 5368710, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 5368710],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 5368710],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 5368710, 100],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 5368710, 100],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.square_error_cost(input=Tensor([2, 2147483648],"float32"), label=Tensor([2, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1888],"float64"), Tensor([2147483649],"float64"), )
paddle.nn.functional.square_error_cost(input=Tensor([4294967295, 1],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 224, 3195661],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 3195661, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 22369622, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.Tensor.tile(Tensor([36858, 456, 256],"float32"), tuple(1,1,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 33554432, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([1, 1],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 42800, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 4400582, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 13, 344149],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 344149, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 13, 322639],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 322639, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 13, 312862],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 312862, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 17, 1973791],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 1973791, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 709912, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 7430740, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 794188, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.temporal_shift(Tensor([21400, 256, 28, 28],"float32"), 16, 0.0625, )
paddle.Tensor.tile(Tensor([11050, 388685],"float32"), list[1,2,], )
paddle.Tensor.tile(Tensor([11050, 388685],"float32"), list[1,3,], )
paddle.nn.functional.temporal_shift(Tensor([5350, 256, 56, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([5350, 256, 56, 56],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(x=Tensor([134217729, 4, 2, 2],"float64"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([178956971, 2, 4, 3],"float32"), seg_num=2, )
paddle.Tensor.tile(Tensor([115943, 1, 37044],"bool"), list[1,6,1,], )
paddle.Tensor.__truediv__(Tensor([1, 2147483648, 2],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([12240, 350897],"float32"), list[1,2,], )
paddle.nn.functional.max_pool2d(Tensor([2, 8388608, 8, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([207127, 64, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([1, 2147483649],"float64"), Tensor([1888],"float64"), )
paddle.Tensor.__truediv__(Tensor([1, 2147483649],"float64"), Tensor([46530],"float64"), )
paddle.nn.functional.max_pool2d(Tensor([2097152, 8, 8, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([1, 2147483649],"float64"), Tensor([60160],"float64"), )
paddle.nn.functional.max_pool2d(Tensor([209716, 512, 1, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([209716, 512, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.zeropad2d(Tensor([28533, 3, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 21400, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 1597831, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 1597831],"float32"), list[2,2,2,2,], )
paddle.Tensor.tile(Tensor([127827, 1, 33600],"bool"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([13, 330382100, 1],"bool"), list[1,1,16,], )
paddle.nn.functional.max_pool2d(Tensor([23015, 256, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([232211, 64, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([13, 7, 47197443],"bool"), list[1,1,16,], )
paddle.nn.functional.max_pool2d(Tensor([24210, 256, 21, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([24967, 256, 21, 32],"float32"), 1, stride=2, )
paddle.Tensor.__truediv__(Tensor([1, 21504, 4],"float32"), Tensor([21504, 199729],"float32"), )
paddle.Tensor.tile(Tensor([131072, 1024, 2, 1, 16],"float16"), list[1,1,1,4,1,], )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 128],"float16"), Tensor([288, 14913081],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.functional.max_pool2d(Tensor([256, 112, 112, 1338],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([256, 112, 2341, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 134217728],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 134217728],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.functional.max_pool2d(Tensor([256, 2341, 112, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 134217728],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([128, 33554432],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([256, 16777216],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.Tensor.tile(Tensor([13125, 327236],"float32"), list[1,3,], )
paddle.Tensor.transpose(Tensor([216, 19, 1024, 1024],"float32"), tuple(1,0,2,3,), )
paddle.nn.quant.weight_only_linear(Tensor([1, 33554432, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 67108864, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.Tensor.__truediv__(Tensor([1, 21504, 4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.quant.weight_only_linear(Tensor([1, 67108864, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([100, 320],"float16"), weight=Tensor([13421773, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 320],"float16"), weight=Tensor([512, 8388608],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 42949673],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([1024, 4194304],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([512, 8388608],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([640, 6710887],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 256],"float16"), weight=Tensor([64, 67108864],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 42524429],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 42524429],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 42524429],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([128, 33554432],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 41297763],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([1024, 4194304],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([1048576, 32, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([123, 34918434],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 32786010],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([13421773, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.Tensor.transpose(Tensor([26, 64, 280, 376, 25],"float32"), list[0,1,4,3,2,], )
paddle.nn.quant.weight_only_linear(Tensor([136, 31580642],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 29620465],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 27889399],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([2304, 1864136],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([5592406, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 2147483648],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 2147483648],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([1024, 4194304],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([4294967295],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 33554432, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.functional.max_pool2d(Tensor([2684355, 16, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([27061, 256, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([27963, 256, 20, 30],"float32"), 1, stride=2, )
paddle.nn.quant.weight_only_linear(Tensor([2, 4194304, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=1, )
paddle.nn.quant.weight_only_linear(Tensor([2097152, 32, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([2097152, 32, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([3, 4418691, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 1242757, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 18, 1242757],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30686, 192, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30686, 192, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([31069, 256, 20, 27],"float32"), 1, stride=2, )
paddle.nn.quant.weight_only_linear(Tensor([5592406, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 74051161],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([192, 22369622],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 72796056],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67108864, 1, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67108864, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67108864, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 1, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([8388608, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_quantize(Tensor([11008, 390168],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([14913081, 288],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.Tensor.tile(Tensor([141636, 1, 30324],"bool"), list[1,9,1,], )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([256, 16777216],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([320, 13421773],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([4194304, 1024],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([512, 8388608],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([5592406, 768],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.Tensor.__truediv__(Tensor([1, 24276, 4],"float32"), Tensor([24276, 176923],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([342393, 256, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([36071, 244, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([397, 64, 336, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.quant.weight_quantize(Tensor([67108864, 64],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([8388608, 512],"float16"), algo="weight_only_int8", )
paddle.Tensor.__truediv__(Tensor([1, 24276, 4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.max_pool2d(Tensor([4, 10486, 320, 320],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 24, 139811, 320],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 24, 320, 139811],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 4, 67108864],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 67108864, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 67108864, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4096, 64, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([423, 64, 320, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([437, 64, 320, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4437, 20, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([48133, 528, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([486, 64, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([49637, 512, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([524288, 8, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([52946, 480, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 112, 112, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([55925, 192, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([55925, 192, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([55925, 192, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([585, 64, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([613566757, 1, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.Tensor.transpose(Tensor([4, 64, 280, 376, 160],"float32"), list[0,1,4,3,2,], )
paddle.nn.functional.max_pool2d(Tensor([64, 1677722, 1, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 1677722, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 1, 131072],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 1, 131072],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 3277, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 3277, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([67108864, 4, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7395, 192, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 13421773, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 1, 1048576],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 26215, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8273, 192, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8388608, 8, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([83887, 512, 10, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([874, 48, 320, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([992, 32, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([99274, 256, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([16777216, 4, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 24, 44739243],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 44739243, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 33554432, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3728271, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([3728271, 2, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.Tensor.__truediv__(Tensor([1, 27216, 4],"float32"), Tensor([27216, 157811],"float32"), )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.Tensor.__truediv__(Tensor([1, 27216, 4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.transpose(Tensor([432, 19, 512, 1024],"float32"), tuple(1,0,2,3,), )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 10845878, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.Tensor.tile(Tensor([4294967295, 1, 1, 1],"float32"), tuple(4,1,4,4,), )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,121,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,126,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,131,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,135,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,136,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,142,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,143,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,180,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,188,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,215,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,223,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,238,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,36,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,394,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,405,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,418,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,420,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,53,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,69,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,811,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,83,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,90,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,98,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), list[1,99,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1, 1],"float32"), repeat_times=list[1,12,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,10,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,100,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,11,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,12,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,121,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,126,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,13,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,131,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,135,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,136,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,139,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,14,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,142,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 1431655765],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,143,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,15,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,17,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,18,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,180,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,188,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,19,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,2,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,20,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,200,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,21,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,215,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,22,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,223,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,23,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,238,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,24,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,25,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,26,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,27,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,28,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,29,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,3,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,30,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,31,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,32,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,33,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,34,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,35,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,36,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,37,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,38,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,39,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,394,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,4,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,40,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,405,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,41,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,418,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 2048, 293, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 2048, 7, 293],"float32"), output_size=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,42,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,420,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,43,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,44,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,45,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 224, 224],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,46,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,47,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,48,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,49,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,5,], )
paddle.nn.functional.max_pool3d(Tensor([1, 26512144, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,50,], )
paddle.nn.functional.max_pool3d(Tensor([1, 29826162, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,51,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,52,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,53,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,54,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,55,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,56,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,58,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,59,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,63,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,64,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,65,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,66,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,67,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,69,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,71,], )
paddle.Tensor.transpose(Tensor([512, 256, 228, 4, 36],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([512, 256, 228, 4, 36],"float32"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([512, 256, 3, 304, 36],"float16"), list[0,3,2,1,4,], )
paddle.Tensor.transpose(Tensor([512, 256, 3, 304, 36],"float32"), list[0,3,2,1,4,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,73,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,77,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1048576, 1024, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,78,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,8,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,80,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,81,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,811,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,83,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,88,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,89,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,9,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,90,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,92,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,95,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,97,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,98,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"float32"), list[1,99,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,10,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,100,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,101,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,102,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,103,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,105,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,106,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,107,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,108,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,109,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,11,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,110,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,111,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,112,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,113,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,114,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,115,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,116,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,117,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,118,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,119,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,12,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,120,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,122,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,123,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,124,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,125,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,126,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,127,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,129,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,13,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,130,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,131,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,132,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,133,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,136,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,138,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,139,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,14,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,140,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,141,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,142,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,145,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,146,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,147,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,149,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,15,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,150,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,152,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,153,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,154,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,155,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,156,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,157,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,158,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,159,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,160,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,163,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,168,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,169,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,17,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,170,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 686, 1024],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,172,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,176,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,177,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,179,], )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,18,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,184,], )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,185,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,189,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,19,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,190,], )
paddle.cummax(Tensor([100, 42949673],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,194,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,196,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,197,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,2,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 686, 1024],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,20,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,200,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,201,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,204,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,207,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,208,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,209,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,21,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,210,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,215,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,218,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,22,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,220,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,222,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,224,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,225,], )
paddle.Tensor.__truediv__(Tensor([1, 3, 686, 1024],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,227,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,23,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,239,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,24,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,240,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,249,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,25,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,252,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,255,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,26,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,27,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,275,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,28,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,283,], )
paddle.cummax(Tensor([42949673, 100],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,284,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,286,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,29,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,293,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,296,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,3,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,30,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,303,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,31,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,319,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,32,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,324,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,329,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,33,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,333,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,34,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,35,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,36,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,369,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,37,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,38,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,39,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,4,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,40,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,400,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,41,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,42,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,43,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,44,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,45,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,46,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,461,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,47,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,48,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,49,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,50,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,51,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,52,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,53,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,54,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,55,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,56,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,57,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,58,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,59,], )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 59652324, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,60,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,61,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,62,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,63,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,64,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,65,], )
paddle.Tensor.__truediv__(Tensor([1, 300, 14316558],"float32"), Tensor([4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,66,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,67,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,68,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,69,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,70,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,71,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,72,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,73,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,74,], )
paddle.cummin(Tensor([100, 42949673],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,75,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,76,], )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,77,], )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,78,], )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,79,], )
paddle.Tensor.__truediv__(Tensor([1, 300, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,8,], )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,80,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,81,], )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,82,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,83,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,84,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,85,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,86,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,87,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,88,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,89,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,9,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,90,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,91,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,92,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,93,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,94,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,95,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,96,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,97,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,98,], )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 35791395, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1,99,], )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 47721859, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[100,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1000,1,], )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 8, 17895698],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1001,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1003,1,], )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 39768216, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1004,1,], )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 26512144, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.cummin(Tensor([42949673, 100],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1005,1,], )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 6, 13256072],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1006,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1007,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1008,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1009,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[101,1,], )
paddle.Tensor.__truediv__(Tensor([1, 30324, 4],"float32"), Tensor([30324, 141636],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1010,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1012,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1014,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1015,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1016,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1017,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1018,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1019,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[102,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1020,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1022,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1023,1,], )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1024,1,], )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1025,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1026,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1028,1,], )
paddle.Tensor.__truediv__(Tensor([1, 30324, 4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1029,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[103,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1030,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1031,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1032,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1033,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1034,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1035,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1036,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1037,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1038,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1039,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[104,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1040,1,], )
paddle.nn.functional.max_pool3d(Tensor([11184811, 3, 4, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1041,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1042,1,], )
paddle.nn.functional.max_pool3d(Tensor([13256072, 3, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1043,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1044,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1045,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1046,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1047,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1048,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1049,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[105,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1050,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1051,1,], )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1052,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1053,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1054,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1055,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1056,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1057,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1059,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[106,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1060,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1061,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1062,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1063,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1064,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1065,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1066,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1067,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1068,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1069,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[107,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1070,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1071,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1072,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1074,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1075,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1076,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1077,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1078,1,], )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1079,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[108,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 11362348, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1080,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1081,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1082,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1083,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1084,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1086,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1087,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1088,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[109,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1090,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1091,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1092,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1093,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1094,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1095,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1096,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1097,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1098,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1099,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[110,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 16777217, 4, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1100,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1101,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 19884108, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1102,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1104,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1105,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1107,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1108,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1109,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[111,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1110,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1111,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1112,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1113,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1114,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1115,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 22369622, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1116,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1117,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1118,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1119,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[112,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1120,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1121,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1122,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1123,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1125,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1127,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1128,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[113,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1131,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1132,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1133,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1134,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1135,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1136,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1137,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1138,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1139,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[114,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1140,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1141,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1142,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1143,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1144,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1145,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1146,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1147,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1148,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[115,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1150,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1151,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1152,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1153,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1155,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1156,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1157,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1158,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1159,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[116,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1160,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1161,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1162,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1163,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1164,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1165,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1166,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1167,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1168,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1169,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[117,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 39768216, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1170,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1171,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1172,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1173,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1174,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1175,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1177,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1179,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[118,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1180,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1181,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1182,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1183,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1184,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1185,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1187,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1188,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 22369622, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1189,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[119,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 4, 22369622],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 1823, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1190,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1191,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1192,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1193,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1195,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1197,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1199,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[120,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1200,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1201,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 39768216, 3],"float32"), 3, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[12011,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 6, 19884108],"float32"), 3, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1202,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1204,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1205,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1206,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1207,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1208,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1209,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[121,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1210,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1211,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1213,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1214,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1215,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1217,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1219,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[122,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1220,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1221,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1222,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1223,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1224,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1225,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1227,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1228,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1229,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[123,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1230,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1231,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1232,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1233,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1234,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1235,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1236,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1237,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1238,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[124,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1240,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1241,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1242,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1243,1,], )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1244,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1245,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1246,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1247,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1249,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[125,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1250,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1251,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1253,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1254,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1255,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1257,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1258,1,], )
paddle.cumsum(x=Tensor([1, 2, 1, 3],"float64"), axis=Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1259,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[126,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1260,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1261,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1262,1,], )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 858993459],"float32"), )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1263,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1264,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1266,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1267,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1268,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1269,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[127,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1270,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1271,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1272,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1273,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1275,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1276,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1278,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1279,1,], )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 429496730, 2],"float32"), )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[128,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1280,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1281,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1282,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1283,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1284,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1285,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1286,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1287,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1288,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1289,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[129,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1290,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1291,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1292,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1294,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1296,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1297,1,], )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 2],"float32"), Tensor([1, 1, 429496730, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1298,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[130,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1300,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1301,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1306,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1307,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1309,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[131,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1311,1,], )
paddle.cumulative_trapezoid(y=Tensor([1431655765, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1312,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1314,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1315,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 699051, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1317,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1318,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 699051, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1319,1,], )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 2],"float32"), Tensor([1, 429496730, 1, 5, 1, 2],"float32"), )
paddle.nn.functional.max_pool3d(Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[132,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1320,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1321,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1322,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1323,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1325,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1327,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1328,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1329,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[133,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1330,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1332,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1334,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1335,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1336,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1338,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1339,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[134,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 13256072, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1340,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1341,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 17043522, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1342,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9, 5681174],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1343,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1344,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1345,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1346,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1347,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1348,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1349,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[135,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1351,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1352,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1353,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1354,1,], )
paddle.Tensor.__truediv__(Tensor([1, 36828, 8, 5, 4, 729],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1355,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1356,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1357,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1358,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1359,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[136,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1361,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1362,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1363,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1364,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1366,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1367,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1368,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1369,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[137,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1370,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1371,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1372,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1373,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1374,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1375,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1376,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1379,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[138,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1380,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1381,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1382,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1383,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1384,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1385,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1386,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1387,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1388,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1389,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[139,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1390,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1392,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1393,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1394,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1395,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1397,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1398,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1399,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[140,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1400,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1401,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1402,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1403,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1404,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1406,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1408,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1409,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[141,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1410,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1411,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1412,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1413,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1415,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1416,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1417,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1418,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1419,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[142,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1420,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1421,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1422,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1423,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1424,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1425,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1426,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1428,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1429,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[143,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1430,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1431,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1432,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1433,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1434,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1435,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1437,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1438,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1439,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[144,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1440,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1441,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1442,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1443,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1444,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1445,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1446,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1447,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1448,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1449,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[145,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1450,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1451,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1452,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1453,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1454,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1455,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1457,1,], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 1750, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1458,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1459,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[146,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1460,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1463,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1464,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1465,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1466,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1467,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([171197, 512, 7, 7],"float16"), output_size=7, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1469,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[147,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1470,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1471,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1473,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1474,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1475,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1476,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1477,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1478,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[148,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1480,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1482,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1483,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1484,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1914, 2048, 157, 7],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1914, 2048, 7, 157],"float16"), output_size=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1485,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1486,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1488,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1489,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[149,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1490,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1491,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1492,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1493,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1495,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1496,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1497,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1498,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1499,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[150,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1500,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1501,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1502,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1503,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1505,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[15050,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1506,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1507,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1508,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1509,1,], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[151,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1510,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1513,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1514,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1917, 2048, 157, 7],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1917, 2048, 7, 157],"float16"), output_size=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1515,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1516,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1517,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1518,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1519,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[152,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1520,1,], )
paddle.tensor_split(Tensor([2147483649],"float64"), 3, axis=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1521,1,], )
paddle.tensor_split(Tensor([2147483649],"int64"), 2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1522,1,], )
paddle.tensor_split(Tensor([2147483649],"int64"), 2, axis=0, )
paddle.tensor_split(Tensor([2147483649],"int64"), 3, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1523,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1524,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1525,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1526,1,], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 1, 858993459],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1527,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1528,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1529,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[153,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1530,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1531,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1532,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1534,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1535,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1537,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1538,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1539,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[154,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1540,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1541,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1543,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1544,1,], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 5, 4, 2],"float32"), Tensor([1, 1, 1, 5, 429496730, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1545,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1546,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1548,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1549,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[155,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1550,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1551,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1552,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1555,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1557,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1558,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[156,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 699051, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1560,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1561,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1563,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1564,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1565,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1566,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1567,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1568,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1569,1,], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 5, 4, 2],"float32"), Tensor([1, 1, 429496730, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[157,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1570,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1571,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1572,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1573,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1574,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1575,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1576,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1578,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[158,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1580,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1581,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1582,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1583,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1585,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1586,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1587,1,], )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1589,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[159,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1590,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1591,1,], )
paddle.tensor_split(Tensor([4294967295],"bool"), 3, axis=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1593,1,], )
paddle.tensor_split(Tensor([4294967295],"float16"), 3, axis=0, )
paddle.tensor_split(Tensor([4294967295],"float32"), 3, axis=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1595,1,], )
paddle.tensor_split(Tensor([4294967295],"int32"), 3, axis=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1597,1,], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 5, 4, 2],"float32"), Tensor([1, 429496730, 1, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1598,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1599,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[160,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1600,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1602,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1603,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1604,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1606,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1607,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1609,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[161,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1610,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1612,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1613,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1614,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1615,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1617,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1618,1,], )
paddle.nn.functional.max_pool3d(Tensor([335, 64, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[162,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1620,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1622,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1623,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1624,1,], )
paddle.nn.functional.max_pool3d(Tensor([3787450, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1625,1,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1627,1,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1628,1,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1629,1,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[163,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[0,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1630,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1632,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1633,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1634,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1635,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.Tensor.__truediv__(Tensor([1, 38367, 8, 5, 4, 700],"float32"), Tensor([1, 1, 1, 5, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1636,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1637,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1638,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[164,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1640,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1641,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1642,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1643,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1644,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1645,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1647,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1648,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[165,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1650,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1651,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1653,1,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1654,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.max_pool3d(Tensor([43691, 32, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1655,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.nn.functional.max_pool3d(Tensor([4418691, 6, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1657,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1658,1,], )
paddle.nn.functional.max_pool3d(Tensor([5965233, 5, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[166,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1660,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1661,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1662,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1663,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1664,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1665,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1666,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1667,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1668,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1669,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[167,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1670,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1672,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1673,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1674,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1675,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1676,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1677,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1678,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1679,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[168,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1680,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1681,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[3,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1683,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[3,1,2,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1684,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1685,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1686,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1687,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1688,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[0,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1689,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,0,2,3,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[169,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1690,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1694,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1696,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1697,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1699,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1929, 2048, 156, 7],"float16"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1929, 2048, 7, 156],"float16"), output_size=1, )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[170,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1700,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1702,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,],list[0,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1703,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,],list[1,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1704,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1705,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1706,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1707,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1708,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[171,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1710,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1711,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1712,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1713,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1714,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[2,],list[0,1,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1715,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1716,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1717,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1718,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,1,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1719,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,1,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[172,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1720,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1721,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1722,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,],list[2,1,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1723,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[3,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1724,1,], )
paddle.tensordot(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 5, 1, 2147483649],"float64"), list[list[],list[0,3,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1725,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[3,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1728,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[173,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1730,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1732,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1733,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1734,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1735,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1737,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1738,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1739,1,], )
paddle.nn.functional.max_pool3d(Tensor([8, 2675, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[174,1,], )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 112, 4682],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1740,1,], )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 4682, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1741,1,], )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 669, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1742,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1070, 320, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1743,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1744,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 32, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1745,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 64, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1747,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 8, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1748,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[175,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1750,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1751,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1752,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1753,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1754,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1755,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1757,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1758,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1759,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[176,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1760,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1761,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1762,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1763,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[17630,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1764,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1765,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1766,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1767,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1768,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[177,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1771,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1772,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1773,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1774,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1775,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1776,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1777,1,], )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1778,1,], )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[178,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1780,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1781,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1783,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.not_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1785,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1786,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1787,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1788,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1789,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[179,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1790,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1792,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1793,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1794,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1795,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1796,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1798,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1799,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[180,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1800,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1802,1,], )
paddle.not_equal(Tensor([13, 165191050],"int64"), Tensor([13, 7],"int64"), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1803,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1804,1,], )
paddle.not_equal(Tensor([13, 2, 16, 4, 1290556],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1805,1,], )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 1290556, 16, 1, 8],"int64"), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 10324441, 1, 8],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1806,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1807,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 645278, 8],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([8388609, 2, 16, 1, 8],"int64"), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1809,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.not_equal(Tensor([13, 2, 16, 5162221, 1],"int64"), Tensor([13, 2, 16, 5162221, 8],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[181,1,], )
paddle.not_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1811,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1812,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1813,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1814,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.not_equal(Tensor([13, 2581111, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1815,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1816,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1817,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1818,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1819,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.not_equal(Tensor([13, 7],"int64"), Tensor([13, 165191050],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[182,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1820,1,], )
paddle.not_equal(Tensor([13, 7],"int64"), Tensor([306783379, 7],"int64"), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1822,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1823,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1824,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1825,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1826,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1829,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[183,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1830,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1831,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1833,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1835,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.not_equal(Tensor([14, 306783379],"int32"), Tensor([14, 7],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1836,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.not_equal(Tensor([14, 7],"int32"), Tensor([14, 306783379],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1838,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.not_equal(Tensor([14, 7],"int32"), Tensor([613566757, 7],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1839,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[184,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1840,1,], )
paddle.not_equal(Tensor([16777217, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1841,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1842,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1843,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1844,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1845,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.not_equal(Tensor([20],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1846,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.not_equal(Tensor([2112],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1848,1,], )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([20],"int64"), )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1849,1,], )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([2112],"int64"), )
paddle.nn.functional.max_pool3d(x=Tensor([8, 10700, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[185,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 1338, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1851,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 56, 9363],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([2944],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1852,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 9363, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.not_equal(Tensor([2147483649],"int64"), Tensor([4224],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1853,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 5350, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1854,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 56, 7490],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.not_equal(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1855,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 7490, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1856,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 535, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1859,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 42800, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.not_equal(Tensor([2944],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[186,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 5350, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.not_equal(Tensor([306783379, 7],"int64"), Tensor([13, 7],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1860,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1861,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 112, 18725],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1862,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 18725, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1863,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 669, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 112, 18725],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1864,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1865,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 18725, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1866,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 5350, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1868,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1869,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[187,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1872,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1873,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1875,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1876,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1878,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1879,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[188,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1880,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1882,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1883,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1884,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1885,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1887,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1888,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1889,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[189,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1890,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1891,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1892,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1893,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1894,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1895,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1896,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1898,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[190,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1900,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1905,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1906,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1907,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1908,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.not_equal(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1909,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[191,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1910,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1911,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1912,1,], )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.not_equal(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1913,1,], )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1915,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=None, )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1916,1,], )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1917,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1918,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1919,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[192,1,], )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1920,1,], )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1921,1,], )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1922,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1924,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1925,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=None, )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1926,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1927,1,], )
paddle.not_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1928,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1929,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[193,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1932,1,], )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1934,1,], )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1935,1,], )
paddle.not_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1936,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1937,1,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1938,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.not_equal(Tensor([4224],"int64"), Tensor([2147483649],"int64"), )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1939,1,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[194,1,], )
paddle.not_equal(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.not_equal(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1940,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1942,1,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.not_equal(Tensor([613566757, 7],"int32"), Tensor([14, 7],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1943,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1946,1,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1948,1,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[195,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1950,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1951,1,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1953,1,], )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1954,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1073741825, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1955,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1956,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1073741825, 2],"int64"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1958,1,], )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[196,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1073741825],"int64"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1960,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1073741825],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1961,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1963,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1965,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 1073741825],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1966,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1967,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1968,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1969,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[197,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1970,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1971,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1972,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1973,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1975,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1976,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), y=Tensor([1, 1, 1, 1, 3, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1073741825, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1977,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1073741825],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1978,1,], )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1979,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[198,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1982,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1983,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1984,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1986,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1987,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[199,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1991,1,], )
paddle.not_equal(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1992,1,], )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1993,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 536870913, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1994,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1995,1,], )
paddle.not_equal(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1996,1,], )
paddle.not_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([1, 1, 1, 3, 3],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([536870913, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1997,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1998,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[1999,1,], )
paddle.not_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[200,1,], )
paddle.not_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2000,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2001,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 1073741825, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2002,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2003,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2004,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2005,1,], )
paddle.not_equal(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2006,1,], )
paddle.not_equal(x=Tensor([1, 3],"float64"), y=Tensor([1, 1, 1, 3, 715827883],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2007,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2008,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[201,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2011,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2012,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2013,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2014,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2015,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2017,1,], )
paddle.not_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2018,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2019,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[202,1,], )
paddle.not_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2024,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2025,1,], )
paddle.not_equal(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2026,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2027,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2028,1,], )
paddle.not_equal(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2029,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 536870913, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[203,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2030,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2031,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2032,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2035,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2036,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.not_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2038,1,], )
paddle.not_equal(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[204,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.not_equal(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2040,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2041,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2042,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.not_equal(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([1, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2044,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2045,1,], )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2046,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2047,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2049,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.not_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[205,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2050,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([1, 1, 1, 3, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2052,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2053,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.not_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2056,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2057,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2058,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[206,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2060,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2061,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2064,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2065,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 536870913, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2067,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2068,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 536870913, 2, 2],"int64"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2069,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[207,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2070,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2072,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2073,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2074,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2076,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2077,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[208,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2081,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2082,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2083,1,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([536870913, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2084,1,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2086,1,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2088,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2089,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[209,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2092,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2093,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2094,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2095,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 38347923, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2099,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[210,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2104,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 67108864, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2106,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2108,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2109,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 76695845],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[211,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2110,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([19173962, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2111,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 38347923, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2113,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 67108864, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2114,1,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 76695845],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2115,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2116,1,], )
paddle.nn.functional.max_unpool2d(Tensor([536870913, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2117,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2119,1,], )
paddle.nn.functional.max_unpool2d(Tensor([536870913, 1, 2, 2],"int64"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[212,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2120,1,], )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([19173962, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float16"), Tensor([1],"float16"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2123,1,], )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2124,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2126,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 107374183],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2129,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[213,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 107374183],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2130,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 89478486, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2133,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 71582789, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2134,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2135,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([17895698, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2138,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[214,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2140,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 89478486, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2142,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2143,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2144,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 71582789, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2145,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2146,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2147,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2148,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2149,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[215,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2151,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2152,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2154,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2157,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[216,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2160,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"int64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2161,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), output_size=list[1,1,], data_format="NCHW", name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2162,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2163,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2164,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2165,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2166,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2167,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2168,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2169,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[217,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2170,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2172,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2173,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2176,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2177,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"int64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2178,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[218,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2180,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2181,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2183,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2184,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2185,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2187,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[219,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2190,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2191,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2193,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"int64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2194,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2195,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2198,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[220,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2200,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2202,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2203,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2207,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2208,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2209,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[221,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2210,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"int64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2211,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2212,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2213,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2214,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2216,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 357913942],"float32"), Tensor([1, 3, 2, 2, 178956971],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2218,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 357913942],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2219,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 178956971, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[222,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 119304648, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2220,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 119304648, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2224,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 178956971],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2225,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([59652324, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2226,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[223,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2230,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2231,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2232,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2235,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2236,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2237,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2238,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[224,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2240,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2245,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2247,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2248,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[225,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2250,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2251,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2253,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2256,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2258,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[226,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2260,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2261,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 238609295, 3],"float32"), Tensor([1, 3, 2, 119304648, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2262,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 238609295, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2264,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 238609295, 2, 3],"float32"), Tensor([1, 3, 119304648, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2265,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 238609295, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2266,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2267,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 357913942, 2, 2, 3],"float32"), Tensor([1, 178956971, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2269,1,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 357913942, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[227,1,], )
paddle.nn.functional.max_unpool3d(Tensor([119304648, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2271,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2272,1,], )
paddle.nn.functional.max_unpool3d(Tensor([119304648, 3, 2, 2, 3],"float32"), Tensor([59652324, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2275,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2277,1,], )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2278,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[228,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2282,1,], )
paddle.outer(Tensor([20, 107374183],"float64"), Tensor([50],"float64"), )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2284,1,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2286,1,], )
paddle.outer(Tensor([20, 50],"float64"), Tensor([2147483649],"float64"), )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2287,1,], )
paddle.outer(Tensor([21474837, 10, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2288,1,], )
paddle.outer(Tensor([42949673, 50],"float64"), Tensor([50],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[229,1,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.outer(Tensor([5, 10, 10],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2290,1,], )
paddle.outer(Tensor([5, 10, 10],"float64"), Tensor([214748365, 10],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2291,1,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.outer(Tensor([5, 10, 42949673],"float64"), Tensor([2, 10],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2292,1,], )
paddle.outer(Tensor([5, 42949673, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2293,1,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2295,1,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2296,1,], )
paddle.outer(x=Tensor([1, 2147483649],"float64"), y=Tensor([1, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2297,1,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"int64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.maxout(Tensor([10, 23860930, 3, 3],"float64"), 3, 1, None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2298,1,], )
paddle.outer(x=Tensor([1, 4294967295],"float32"), y=Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2299,1,], )
paddle.outer(x=Tensor([1, 4294967295],"float32"), y=Tensor([1, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[230,1,], )
paddle.outer(x=Tensor([1, 4],"float32"), y=Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2301,1,], )
paddle.outer(x=Tensor([1, 4],"float32"), y=Tensor([1073741824, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2302,1,], )
paddle.outer(x=Tensor([1, 4],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2304,1,], )
paddle.outer(x=Tensor([1, 4],"float64"), y=Tensor([536870913, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2305,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2307,1,], )
paddle.outer(x=Tensor([1073741824, 4],"float32"), y=Tensor([1, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2309,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[231,1,], )
paddle.outer(x=Tensor([1073741824, 4],"float32"), y=Tensor([1073741824, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2310,1,], )
paddle.outer(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2311,1,], )
paddle.outer(x=Tensor([107374183, 2, 5, 2],"float64"), y=Tensor([107374183, 3, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2312,1,], )
paddle.outer(x=Tensor([107374183, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2313,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2314,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2318,1,], )
paddle.outer(x=Tensor([2147483649, 1],"float64"), y=Tensor([4, 1],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2319,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[232,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2321,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2322,1,], )
paddle.outer(x=Tensor([357913942, 2, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2323,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2324,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2326,1,], )
paddle.outer(x=Tensor([4, 178956971, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2328,1,], )
paddle.outer(x=Tensor([4, 1],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[233,1,], )
paddle.outer(x=Tensor([4, 1],"float64"), y=Tensor([4, 536870913],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2331,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2332,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2333,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2334,1,], )
paddle.outer(x=Tensor([4, 2, 134217729, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2335,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2337,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2338,1,], )
paddle.outer(x=Tensor([4, 2, 268435457],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2339,1,], )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[234,1,], )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 178956971, 3],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2340,1,], )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 2, 268435457],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2341,1,], )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 89478486],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 89478486, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2343,1,], )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 67108865, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2344,1,], )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([44739243, 3, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2346,1,], )
paddle.outer(x=Tensor([4, 2, 5, 53687092],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 53687092],"float64"), y=Tensor([2, 3, 4, 53687092],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2347,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[235,1,], )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([178956971, 3, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2351,1,], )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 268435457, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2355,1,], )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 3, 357913942],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2356,1,], )
paddle.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2357,1,], )
paddle.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 1],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[236,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2360,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2366,1,], )
paddle.outer(x=Tensor([4, 53687092, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2367,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2368,1,], )
paddle.outer(x=Tensor([4, 53687092, 5, 2],"float64"), y=Tensor([2, 53687092, 4, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2369,1,], )
paddle.outer(x=Tensor([536870913, 4],"float64"), y=Tensor([1, 4],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[237,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2370,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2371,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2372,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2375,1,], )
paddle.polar(Tensor([2147483649],"float64"), Tensor([2],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2377,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2379,1,], )
paddle.polar(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[238,1,], )
paddle.polar(Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2380,1,], )
paddle.polar(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2382,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2383,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2384,1,], )
paddle.nn.functional.maxout(Tensor([100, 2386093, 3, 3],"float64"), 2, 1, None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2385,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2386,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2388,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2389,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[239,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2390,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2391,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2392,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2393,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2394,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2395,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2396,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[240,1,], )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float32"), Tensor([1, 1001],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2400,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2401,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2403,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2404,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2406,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2408,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2409,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[241,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2410,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2414,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2417,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2418,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[242,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2420,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2423,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2424,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2425,1,], )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float32"), Tensor([1, 1002],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2427,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[243,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2430,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2432,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2433,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2434,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2435,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2436,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[244,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2440,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2441,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2445,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2448,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[245,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2450,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2452,1,], )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float32"), Tensor([1, 1004],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2453,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2454,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2455,1,], )
paddle.quantile(Tensor([1431655765, 3],"float32"), list[0.3,0.7,], 1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2456,1,], )
paddle.quantile(Tensor([178956971, 3, 4],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2457,1,], )
paddle.quantile(Tensor([178956971, 3, 4],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.quantile(Tensor([178956971, 3, 4],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2458,1,], )
paddle.quantile(Tensor([2, 2147483648],"float32"), list[0.3,0.7,], 1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[246,1,], )
paddle.quantile(Tensor([4, 7, 76695845],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([4, 7, 76695845],"float64"), q=0.75, axis=list[0,2,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2460,1,], )
paddle.quantile(Tensor([4, 89478486, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2461,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2463,1,], )
paddle.quantile(Tensor([4, 89478486, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.quantile(Tensor([4294967295],"float32"), list[0.55,0.7,], 0, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2464,1,], )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3579140],"float32"), 2, 1, None, )
paddle.quantile(Tensor([5, 107374183, 4],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2466,1,], )
paddle.quantile(Tensor([5, 107374183, 4],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2469,1,], )
paddle.nn.functional.maxout(Tensor([100, 4, 3579140, 3],"float32"), 2, 1, None, )
paddle.quantile(Tensor([5, 107374183, 4],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[247,1,], )
paddle.quantile(Tensor([5, 3, 143165577],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2471,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2476,1,], )
paddle.quantile(Tensor([5, 3, 143165577],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2478,1,], )
paddle.quantile(Tensor([5, 3, 143165577],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float32"), Tensor([1, 10285],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2479,1,], )
paddle.quantile(Tensor([51130564, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nn.functional.maxout(Tensor([100, 4772186, 3, 3],"float32"), 2, 1, None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[248,1,], )
paddle.quantile(Tensor([51130564, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2483,1,], )
paddle.quantile(x=Tensor([2982617, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.nn.functional.maxout(Tensor([119304648, 4, 3, 3],"float32"), 2, 1, None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2485,1,], )
paddle.quantile(x=Tensor([2982617, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2486,1,], )
paddle.quantile(x=Tensor([3, 5965233, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 5965233, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2487,1,], )
paddle.quantile(x=Tensor([3, 6, 2982617, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[249,1,], )
paddle.quantile(x=Tensor([3, 6, 2982617, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2490,1,], )
paddle.quantile(x=Tensor([3, 6, 3, 3976822, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2492,1,], )
paddle.quantile(x=Tensor([3, 6, 3, 3976822, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 1988411, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2493,1,], )
paddle.quantile(x=Tensor([3, 6, 3, 4, 1988411, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2497,1,], )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 4971027],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2499,1,], )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 4971027],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[250,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2500,1,], )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float32"), Tensor([1, 1031],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2501,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2502,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2503,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2505,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2509,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2510,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2511,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2513,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2516,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2519,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[252,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2522,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2524,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2525,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2527,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2528,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[253,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2531,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2537,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2538,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2539,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[254,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2540,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2541,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2543,1,], )
paddle.reduce_as(Tensor([30, 200, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2546,1,], )
paddle.reduce_as(Tensor([30, 200, 40],"float32"), Tensor([200, 21474837],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2548,1,], )
paddle.reduce_as(Tensor([30, 200, 715828],"float32"), Tensor([200, 40],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2549,1,], )
paddle.reduce_as(Tensor([30, 3579140, 40],"float32"), Tensor([200, 40],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[255,1,], )
paddle.remainder(Tensor([1, 1, 2147483649],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2550,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2551,1,], )
paddle.remainder(Tensor([1, 1, 2147483649],"int64"), Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2552,1,], )
paddle.remainder(Tensor([1, 1, 4294967295],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2553,1,], )
paddle.remainder(Tensor([1, 1, 4294967295],"int32"), Tensor([2, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2555,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2557,1,], )
paddle.remainder(Tensor([1, 1, 5],"float32"), Tensor([2, 3, 4, 178956971],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2558,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[256,1,], )
paddle.remainder(Tensor([1, 1, 5],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2564,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2565,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2566,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2567,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[257,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2570,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2573,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2574,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2575,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2576,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[258,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2581,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2584,1,], )
paddle.Tensor.__truediv__(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2585,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2589,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[259,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2591,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2593,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2595,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2598,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2599,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[260,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2607,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[261,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2610,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2611,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2613,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2615,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2616,1,], )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([2, 3, 4, 178956971],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2617,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2618,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2619,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[262,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2620,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2622,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2623,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2624,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2628,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2629,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[263,1,], )
paddle.Tensor.__truediv__(Tensor([1, 46530],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2630,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2632,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2634,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2635,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2636,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2637,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2638,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2639,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[264,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2640,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2643,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2645,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2646,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[265,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2650,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2651,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2652,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2653,1,], )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([2, 3, 4, 89478486],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2655,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2656,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2658,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2659,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[266,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2660,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2663,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2665,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2667,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2669,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[267,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2670,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2672,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2673,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2676,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2677,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2679,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[268,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2681,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2682,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2684,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2687,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2688,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2689,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[269,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2692,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2693,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2697,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2698,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[270,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2700,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2703,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2707,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2708,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[271,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2710,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2711,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2712,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2713,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2718,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[272,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2720,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2722,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2724,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2726,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2727,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2728,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[273,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2730,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2731,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2733,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2734,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2736,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2737,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2738,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2739,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[274,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2742,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2745,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2748,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2749,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[275,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2751,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2753,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2754,1,], )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2756,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2759,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[276,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2760,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2763,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2764,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2765,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2767,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[277,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2771,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2772,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2773,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2778,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2779,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2783,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2784,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2787,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2789,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[279,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2791,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2796,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2798,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[280,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2800,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2801,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2802,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2805,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2807,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2808,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[281,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2810,1,], )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2811,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2812,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2813,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2814,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2817,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[282,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2821,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2825,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[283,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2832,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2835,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2838,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[284,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2840,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2846,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2847,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[285,1,], )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2850,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2852,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2853,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2856,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2859,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[286,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2861,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2862,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2863,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2868,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[287,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2870,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2871,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2873,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2874,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2875,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2878,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2879,1,], )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[288,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2880,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2882,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2883,1,], )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 35791395],"float64"), 2, -1, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2885,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[289,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2890,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2891,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2894,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2898,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2899,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[290,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2901,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2903,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2907,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2908,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[291,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2910,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2912,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2914,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2916,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2918,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2919,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[292,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2924,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2928,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2929,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[293,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2930,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2934,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2939,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[294,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2940,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2941,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2943,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2945,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2946,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2948,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[295,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2954,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2955,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2956,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2958,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[296,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2960,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2964,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2965,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[297,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2973,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2974,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2975,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2979,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[298,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2981,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2986,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 2, 107374183, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2987,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 2, 3, 143165577, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2988,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 2, 3, 4, 178956971],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2989,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float32"), Tensor([1, 71582789, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[299,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2993,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[2996,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[300,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3001,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3003,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3004,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3007,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3008,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3009,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[301,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3010,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3011,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3013,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3017,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3018,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[302,1,], )
paddle.Tensor.tile(Tensor([157811, 1, 27216],"bool"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3020,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3024,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3026,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 2, 3, 4, 89478486],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3029,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 2, 3, 71582789, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[303,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3031,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3033,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 2, 53687092, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3035,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"float64"), Tensor([1, 35791395, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3036,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3037,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3038,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 2, 107374183, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3039,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 2, 3, 143165577, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 2, 3, 4, 178956971],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[304,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([1, 71582789, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3042,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3043,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3047,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3049,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[305,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3053,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3054,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3055,1,], )
paddle.Tensor.__truediv__(Tensor([1, 60160],"float64"), Tensor([2147483649],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3056,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3058,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3059,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[306,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3061,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3064,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3066,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3067,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3068,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[307,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3071,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3072,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3073,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3077,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[308,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3084,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3085,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6115, 686, 1024],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[309,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 2, 3, 4, 89478486],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3090,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 2, 3, 71582789, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3091,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 2, 53687092, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3092,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([1, 35791395, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3093,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3094,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3095,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[310,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3101,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3102,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3104,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3105,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[311,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3111,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3115,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3116,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3117,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[312,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3120,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3121,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3122,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3123,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3125,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3129,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[313,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3130,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3132,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[314,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3142,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3143,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3148,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[315,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3152,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3155,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3156,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[316,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3163,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3164,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3165,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3166,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3169,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[317,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3176,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[318,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3181,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3182,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3183,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3185,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3186,1,], )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3188,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3189,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[319,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3192,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3198,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[320,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3206,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3207,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[321,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3213,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3215,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[322,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3220,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3228,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[323,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3230,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3234,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3236,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[324,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3240,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 10519, 4, 2],"float32"), Tensor([1, 1, 1, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3241,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3242,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3245,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3247,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3249,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[325,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3254,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3255,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[326,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3260,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3266,1,], )
paddle.nn.functional.maxout(x=Tensor([10, 23860930, 3, 3],"float64"), groups=3, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3267,1,], )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3269,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[327,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3274,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3275,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3276,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[328,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3280,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3281,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[329,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3290,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3291,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[330,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3301,1,], )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3306,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[331,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3312,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3315,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3316,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3317,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3318,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[332,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3321,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3328,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[333,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3332,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3335,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3337,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3338,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3339,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3341,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3344,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3346,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3348,1,], )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3349,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[335,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3350,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 4, 4, 2],"float32"), Tensor([1, 1, 1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[336,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3360,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3361,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3364,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3367,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3369,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[337,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[338,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3380,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3384,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3388,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[339,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3390,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3392,1,], )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3396,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3399,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[340,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 4, 4, 2],"float32"), Tensor([1, 1, 1, 4, 1, 1073741824],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3403,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3405,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3409,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[341,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3410,1,], )
paddle.nn.functional.maxout(x=Tensor([100, 2386093, 3, 3],"float64"), groups=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3414,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3416,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[342,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3423,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3428,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[343,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3430,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3432,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3434,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[344,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3440,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 4, 4, 2],"float32"), Tensor([1, 1, 1, 4, 536870912, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3442,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[345,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3450,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3453,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3455,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3456,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[346,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3467,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3469,1,], )
paddle.remainder(Tensor([1, 3, 1, 1431655765],"float32"), Tensor([2, 1, 4, 1431655765],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[347,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3470,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3479,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[348,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3482,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3486,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3488,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[349,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 4, 4, 2],"float32"), Tensor([1, 1, 536870912, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3492,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3495,1,], )
paddle.remainder(Tensor([1, 3, 1, 1431655765],"int32"), Tensor([2, 1, 4, 1431655765],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3498,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[350,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3500,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([2, 1, 2147483648, 1],"float32"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([2, 1, 4, 536870912],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3502,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"float32"), Tensor([2, 536870912, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3503,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3507,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[351,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3511,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3513,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3514,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3516,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[352,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3522,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 4, 4, 2],"float32"), Tensor([1, 536870912, 1, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3526,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[353,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3531,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3532,1,], )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3579140],"float32"), groups=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3533,1,], )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3579140, 3],"float32"), groups=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3536,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3537,1,], )
paddle.nn.functional.maxout(x=Tensor([100, 4772186, 3, 3],"float32"), groups=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3539,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"float64"), Tensor([2, 1, 4, 268435457],"float64"), )
paddle.remainder(Tensor([1, 3, 1, 5],"float64"), Tensor([2, 268435457, 4, 1],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[354,1,], )
paddle.nn.functional.maxout(x=Tensor([119304648, 4, 3, 3],"float32"), groups=2, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3542,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[355,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([2, 1, 2147483648, 1],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3553,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([2, 1, 4, 536870912],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3559,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"int32"), Tensor([2, 536870912, 4, 1],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[356,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3561,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3563,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3567,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[357,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3570,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3573,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3575,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3577,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[358,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3584,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3585,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"int64"), Tensor([2, 1, 4, 268435457],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[359,1,], )
paddle.remainder(Tensor([1, 3, 1, 5],"int64"), Tensor([2, 268435457, 4, 1],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3590,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3591,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3592,1,], )
paddle.remainder(Tensor([1, 3, 1, 715827883],"float64"), Tensor([2, 1, 4, 715827883],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3594,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3596,1,], )
paddle.remainder(Tensor([1, 3, 1, 715827883],"int64"), Tensor([2, 1, 4, 715827883],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[360,1,], )
paddle.Tensor.__truediv__(Tensor([1, 6380, 8, 4, 4, 5260],"float32"), Tensor([1, 1, 1, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3605,1,], )
paddle.remainder(Tensor([1, 3, 143165577, 5],"float64"), Tensor([2, 1, 4, 1],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[361,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3611,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3613,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3615,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3616,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[362,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3626,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3627,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[363,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), list[2,5,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3635,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[364,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3642,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3643,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[365,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3650,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3653,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3654,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3657,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[366,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3660,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3663,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3665,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[367,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3674,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3675,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[368,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3681,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[369,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[370,1,], )
paddle.remainder(Tensor([1, 3, 143165577, 5],"int64"), Tensor([2, 1, 4, 1],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3703,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[371,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3710,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3717,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[372,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3721,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3724,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3728,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3729,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[373,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3731,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3732,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3734,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[374,1,], )
paddle.remainder(Tensor([1, 3, 286331153, 5],"float32"), Tensor([2, 1, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3741,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3747,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3748,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[375,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3750,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3755,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3759,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[376,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3760,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3762,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3766,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[377,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3774,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[378,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3780,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3782,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3785,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3786,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3787,1,], )
paddle.Tensor.tile(Tensor([176923, 1, 24276],"bool"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[379,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3792,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3793,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3795,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[380,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3802,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3806,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3807,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3808,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3812,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3813,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3815,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3816,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[382,1,], )
paddle.remainder(Tensor([1, 3, 286331153, 5],"int32"), Tensor([2, 1, 4, 1],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3822,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[383,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[384,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3846,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3848,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[385,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3851,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3856,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[386,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3863,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3864,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[387,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3871,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[388,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3882,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3883,1,], )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"float64"), Tensor([1, 2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3886,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3897,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[39,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[390,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[391,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3912,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[392,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3920,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3922,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3927,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[393,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3933,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3937,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3939,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[394,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3941,1,], )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"int64"), Tensor([1, 2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3944,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3948,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3949,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[395,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3955,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[396,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3972,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3979,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[398,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3987,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[399,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3994,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[3999,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[400,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4003,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[401,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4011,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[402,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4025,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[403,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4032,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4035,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4038,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[404,1,], )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4047,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[405,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4054,1,], )
paddle.nn.functional.mse_loss(Tensor([1, 4294967295],"float32"), Tensor([4, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 4294967295],"float32"), Tensor([4, 4294967295],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[406,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4065,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[407,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4072,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4074,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4077,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[408,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4081,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4084,1,], )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4085,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[409,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4094,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[410,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4102,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4109,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[411,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4118,1,], )
paddle.nn.functional.mse_loss(Tensor([100, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[412,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[413,1,], )
paddle.remainder(Tensor([1, 429496730, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4137,1,], )
paddle.remainder(Tensor([1, 429496730, 5],"int64"), Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[414,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4144,1,], )
paddle.nn.functional.mse_loss(Tensor([10240, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[415,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4156,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4157,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[416,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4160,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4167,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[417,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4174,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[418,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[419,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4195,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4197,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[420,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4204,1,], )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"float32"), Tensor([1, 2, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[421,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4213,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4219,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[422,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4221,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4227,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[423,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4233,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4234,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[424,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4242,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4248,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4249,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[425,1,], )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"int32"), Tensor([1, 2, 3, 4, 5],"int32"), )
paddle.nn.functional.mse_loss(Tensor([1073741825, 2],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[426,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[428,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4287,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[429,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4294,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4302,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4309,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[431,1,], )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[432,1,], )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4320,1,], )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[433,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[434,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[435,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4354,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[436,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 134217728, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 134217728, 2],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4362,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4369,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4375,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 268435456, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4384,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 268435456, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[439,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4392,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4399,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[440,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([335545, 256, 2, 25],"float16"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[441,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[442,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[443,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4434,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4435,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4438,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[444,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[445,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4452,1,], )
paddle.remainder(Tensor([1, 858993459, 1, 5],"float32"), Tensor([2, 858993459, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4455,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4459,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[446,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4463,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[447,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[448,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4481,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4488,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[449,1,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([335545, 256, 2, 25],"float32"), output_size=list[1,25,], data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[45,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[450,1,], )
paddle.remainder(Tensor([1, 858993459, 1, 5],"int32"), Tensor([2, 858993459, 4, 1],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[451,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4519,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[452,1,], )
paddle.remainder(Tensor([1, 858993459, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[453,1,], )
paddle.remainder(Tensor([1, 858993459, 5],"int32"), Tensor([2, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4534,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[454,1,], )
paddle.remainder(Tensor([1073741824, 1, 4, 1],"float32"), Tensor([1073741824, 3, 1, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4549,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[455,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4551,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[456,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[457,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[458,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[459,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4594,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[460,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4600,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4606,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4609,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[461,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4624,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[463,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[464,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[465,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[466,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4661,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4662,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[467,1,], )
paddle.remainder(Tensor([143165577, 3, 1, 5],"float64"), Tensor([2, 1, 4, 1],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4684,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[469,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[470,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4714,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[472,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[473,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[474,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[475,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[476,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[477,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4774,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[478,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[479,1,], )
paddle.remainder(Tensor([143165577, 3, 1, 5],"int64"), Tensor([2, 1, 4, 1],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[480,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[481,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 134217728, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[482,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4822,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2796203],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[483,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[484,1,], )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[485,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[486,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[488,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[490,1,], )
paddle.nn.functional.mse_loss(Tensor([1820, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[491,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[492,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4928,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[494,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[495,1,], )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[496,1,], )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[4968,1,], )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[497,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[499,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[50,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[501,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[502,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[504,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5043,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5045,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[505,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[506,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[507,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[508,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[509,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[51,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[510,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[511,1,], )
paddle.remainder(Tensor([1],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[512,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[513,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[514,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[515,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[516,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5172,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[518,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[519,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[520,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5203,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5209,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[521,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[522,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[523,1,], )
paddle.remainder(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.remainder(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([1, 3, 2147483648, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[524,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[525,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[526,1,], )
paddle.remainder(Tensor([2, 1, 4, 1],"float32"), Tensor([1, 3, 286331153, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[528,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[529,1,], )
paddle.remainder(Tensor([2, 1, 4, 1],"float32"), Tensor([286331153, 3, 1, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[53,1,], )
paddle.Tensor.tile(Tensor([195225787, 22, 1],"bool"), list[1,1,16,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[531,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[532,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[533,1,], )
paddle.remainder(Tensor([2, 1, 4, 536870912],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[534,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[535,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[536,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 96, 22369622],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[537,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 96, 22369622],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[538,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[539,1,], )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5390,1,], )
paddle.remainder(Tensor([2, 3, 4, 178956971],"float32"), Tensor([1, 1, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[54,1,], )
paddle.remainder(Tensor([2, 3, 4, 178956971],"int32"), Tensor([1, 1, 5],"int32"), )
paddle.nn.functional.mse_loss(Tensor([2143198, 501, 4],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[540,1,], )
paddle.remainder(Tensor([2, 3, 4, 5],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.remainder(Tensor([2, 3, 4, 5],"float32"), Tensor([1, 858993459, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[541,1,], )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.remainder(Tensor([2, 3, 4, 5],"float32"), Tensor([858993459, 1, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[542,1,], )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[543,1,], )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([2, 96, 2],"float32"), reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[544,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[545,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[546,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[547,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[548,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[549,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[550,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[552,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 1431655765, 1],"float32"), Tensor([3, 96, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[553,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[554,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[555,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[556,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[557,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[558,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[559,1,], )
paddle.remainder(Tensor([2, 3, 4, 5],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[56,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.remainder(Tensor([2, 3, 4, 5],"float64"), Tensor([1, 429496730, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[560,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.remainder(Tensor([2, 3, 4, 5],"float64"), Tensor([429496730, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[561,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "mean", )
paddle.remainder(Tensor([2, 3, 4, 5],"int32"), Tensor([1, 1, 4294967295],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[562,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "none", )
paddle.remainder(Tensor([2, 3, 4, 5],"int32"), Tensor([1, 858993459, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[563,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[564,1,], )
paddle.remainder(Tensor([2, 3, 4, 5],"int32"), Tensor([858993459, 1, 5],"int32"), )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[565,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[566,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[567,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[568,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[569,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8400, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5697,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[57,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[570,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[571,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[572,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5725,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[573,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5736,1,], )
paddle.remainder(Tensor([2, 3, 4, 5],"int64"), Tensor([1, 1, 2147483649],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[574,1,], )
paddle.remainder(Tensor([2, 3, 4, 5],"int64"), Tensor([1, 429496730, 5],"int64"), )
paddle.remainder(Tensor([2, 3, 4, 5],"int64"), Tensor([429496730, 1, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[575,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[576,1,], )
paddle.remainder(Tensor([2, 3, 4, 89478486],"float64"), Tensor([1, 1, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[577,1,], )
paddle.remainder(Tensor([2, 3, 4, 89478486],"int64"), Tensor([1, 1, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[578,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5781,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[579,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[581,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.Tensor.__truediv__(Tensor([1, 8400, 511306],"float32"), Tensor([4],"float32"), )
paddle.remainder(Tensor([2, 536870912, 4, 1],"float32"), Tensor([1, 3, 1, 5],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[582,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[583,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[584,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5847,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[585,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[586,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[587,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[588,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[589,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[59,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[590,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[591,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[592,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[593,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[594,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[596,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[597,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[5972,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[599,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[60,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[601,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[602,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[603,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[605,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[607,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[608,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[609,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 96, 1],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[61,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[610,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[611,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[612,1,], )
paddle.remainder(Tensor([2147483649],"int64"), Tensor([4],"int64"), None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[613,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[614,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[615,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[616,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[617,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[618,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[619,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[62,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[622,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[623,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[624,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[625,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[626,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[627,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[628,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[629,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[63,1,], )
paddle.remainder(Tensor([286331153, 3, 1, 5],"float32"), Tensor([2, 1, 4, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[630,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[631,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 4, 4, 2],"float32"), Tensor([1, 1, 1, 2147483648, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6310,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[632,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[633,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[635,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6359,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[637,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[638,1,], )
paddle.nn.functional.mse_loss(Tensor([3, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[639,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[640,1,], )
paddle.remainder(Tensor([286331153, 3, 1, 5],"int32"), Tensor([2, 1, 4, 1],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[641,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[642,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6422,1,], )
paddle.nn.functional.mse_loss(Tensor([32, 33554432, 4],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[643,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[644,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[645,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[646,1,], )
paddle.nn.functional.mse_loss(Tensor([32, 501, 267900],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 4, 4, 2],"float32"), Tensor([1, 1, 1, 4, 1, 1073741824],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[647,1,], )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([2143198, 501, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[648,1,], )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6484,1,], )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([32, 501, 267900],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[649,1,], )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([100, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([199729, 1, 21504],"bool"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[65,1,], )
paddle.Tensor.tile(Tensor([199729, 21504, 1],"bool"), list[1,1,5,], )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([10240, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[650,1,], )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([1820, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[652,1,], )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([4, 1],"float32"), "none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[653,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[654,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6542,1,], )
paddle.Tensor.tile(Tensor([2, 1, 1, 2147483648],"float32"), tuple(4,1,4,4,), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[655,1,], )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648, 1],"float32"), tuple(4,1,4,4,), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,100,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,101,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[656,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,102,1,], )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,103,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,105,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,106,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,107,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[657,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,108,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,109,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,110,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,111,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[658,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,112,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,113,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,114,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,115,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[66,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,116,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,117,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,118,1,], )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([8],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,119,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 4, 4, 2],"float32"), Tensor([1, 1, 1, 4, 536870912, 2],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,120,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[660,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,122,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,123,1,], )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,124,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,125,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6617,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,126,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,127,1,], )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,129,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,130,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[662,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,131,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,132,1,], )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,133,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,136,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[663,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,138,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,139,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,140,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,141,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[664,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,142,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,145,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,146,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,147,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[665,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,149,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,150,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,152,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,153,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,154,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[666,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,155,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,156,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,157,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,158,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[667,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,159,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,160,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,163,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,168,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,169,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[668,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,170,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,176,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,177,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,179,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,184,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[669,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,185,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,189,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,190,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,194,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,196,1,], )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), "mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[670,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,197,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,201,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,204,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,207,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[671,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,208,1,], )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), "none", )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,209,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,210,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,218,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6712,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,220,1,], )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), "sum", )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,222,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,224,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,227,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,239,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[673,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,240,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,249,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,255,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,275,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[674,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,283,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,284,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,286,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,293,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[675,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,296,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,319,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,324,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,329,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[676,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 4, 4, 2],"float32"), Tensor([1, 1, 536870912, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,333,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,369,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,400,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,461,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[677,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,53,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,61,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,64,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6779,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,66,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,67,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,68,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,70,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[678,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,71,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,73,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,74,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,75,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[679,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,76,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,78,1,], )
paddle.nn.functional.mse_loss(Tensor([44739243, 96, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,79,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,81,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[68,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,82,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,83,1,], )
paddle.nn.functional.mse_loss(Tensor([44739243, 96, 1],"float32"), Tensor([3, 96, 1],"float32"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,84,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[680,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,85,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,86,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,87,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,88,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,89,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[681,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,90,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,91,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,92,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[682,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,93,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,94,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,95,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,96,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[683,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,97,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,98,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"bool"), list[1,99,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[684,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[685,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"float32"), list[1,100,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[686,1,], )
paddle.remainder(Tensor([4, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"float32"), list[1,200,1,], )
paddle.Tensor.tile(Tensor([2, 1, 2147483648],"float32"), repeat_times=list[1,12,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[689,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[69,1,], )
paddle.remainder(Tensor([4, 8],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[690,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 4, 4, 2],"float32"), Tensor([1, 536870912, 1, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6905,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[6909,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[692,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[693,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[694,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[695,1,], )
paddle.Tensor.tile(Tensor([2, 1073741824, 2],"float32"), list[1,1,2,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[696,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[697,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[698,1,], )
paddle.remainder(Tensor([4294967295],"int32"), Tensor([1],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[70,1,], )
paddle.nn.functional.mse_loss(Tensor([5, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[700,1,], )
paddle.nn.functional.mse_loss(Tensor([5, 2],"float64"), label=Tensor([5, 429496730],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[701,1,], )
paddle.nn.functional.mse_loss(Tensor([5, 429496730],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[702,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[703,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[7030,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[704,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[705,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[706,1,], )
paddle.nn.functional.mse_loss(Tensor([8],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 1],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[708,1,], )
paddle.nn.functional.mse_loss(input=Tensor([2, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[709,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[71,1,], )
paddle.nn.functional.mse_loss(input=Tensor([2, 2147483648],"float32"), label=Tensor([2, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[710,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[711,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[712,1,], )
paddle.nn.functional.mse_loss(input=Tensor([4294967295, 1],"float32"), label=Tensor([2, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[713,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[714,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[715,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[716,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[717,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[718,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[72,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[720,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 4, 4, 3925],"float32"), Tensor([1, 1, 1, 4, 1, 2],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[721,1,], )
paddle.remainder(Tensor([429496730, 1, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[722,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[723,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[724,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[725,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[727,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[728,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[730,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[731,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[732,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[733,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[734,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[735,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[736,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[737,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="none", weight=None, )
paddle.remainder(Tensor([429496730, 1, 5],"int64"), Tensor([2, 3, 4, 5],"int64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[738,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="sum", weight=None, )
paddle.remainder(Tensor([4],"int64"), Tensor([2147483649],"int64"), None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[739,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[74,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[740,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[741,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[742,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[743,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[744,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[7449,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[745,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[746,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[747,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[748,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[749,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[75,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[750,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[752,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[753,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[754,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[755,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[756,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[757,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[759,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[76,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[760,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[761,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[762,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[764,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[765,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="none", weight=None, )
paddle.remainder(Tensor([8, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="sum", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[766,1,], )
paddle.remainder(Tensor([858993459, 1, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[7662,1,], )
paddle.remainder(Tensor([858993459, 1, 5],"int32"), Tensor([2, 3, 4, 5],"int32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[767,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[768,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[769,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[77,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[770,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[771,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="none", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[772,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="sum", weight=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[773,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[3,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[774,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[3,1,2,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[775,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[776,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[777,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[778,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[779,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="none", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[78,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="sum", weight=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[780,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[781,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="none", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[782,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[0,],list[],], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[783,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,0,2,3,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[784,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[7846,1,], )
paddle.Tensor.__truediv__(Tensor([1, 8550, 8, 7849, 4, 2],"float32"), Tensor([1, 1, 1, 4, 1, 2],"float32"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([429496730, 5],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[785,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([5, 429496730],"float64"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[786,1,], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), weight=Tensor([429496730, 5],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[787,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), weight=Tensor([5, 429496730],"float64"), reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[788,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[789,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[79,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,2,3,0,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[790,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[791,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[792,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[793,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[794,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[795,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[796,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[7968,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[797,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[798,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,],list[0,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[80,1,], )
paddle.nn.functional.multi_margin_loss(Tensor([1073741825, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[800,1,], )
paddle.nn.functional.multi_margin_loss(Tensor([1073741825, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="none", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[801,1,], )
paddle.nn.functional.multi_margin_loss(Tensor([1073741825, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="sum", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[803,1,], )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[804,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[1,],list[1,3,],], )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="none", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[805,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[806,1,], )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="sum", name=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[807,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[808,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[809,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[81,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[810,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[812,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[814,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[815,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[816,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[2,],list[0,1,3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8160,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[817,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[818,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[819,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[3,1,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[82,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[3,1,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[820,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[821,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[822,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[3,2,],list[3,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[823,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[824,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[3,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[825,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 429496730],"float64"), list[list[],list[0,3,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[826,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[827,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[3,0,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[828,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8280,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[829,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[83,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[830,1,], )
paddle.Tensor.__truediv__(Tensor([1, 85599, 224, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[832,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8333,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[834,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[835,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[836,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[837,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[838,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[839,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[84,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[840,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[841,1,], )
paddle.nn.functional.multi_margin_loss(input=Tensor([1073741825, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[842,1,], )
paddle.nn.functional.multi_margin_loss(input=Tensor([1073741825, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[844,1,], )
paddle.nn.functional.multi_margin_loss(input=Tensor([1073741825, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[845,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[846,1,], )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="mean", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8460,1,], )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="none", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[847,1,], )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="sum", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[848,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[849,1,], )
paddle.roll(Tensor([10],"float32"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[85,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[850,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[851,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[852,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[853,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[854,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[855,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[856,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8568,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[857,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[858,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8589,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[86,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[860,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[861,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[862,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[863,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[864,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[865,1,], )
paddle.nn.functional.npair_loss(Tensor([18, 238609295],"float32"), positive=Tensor([18, 6],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[866,1,], )
paddle.nn.functional.npair_loss(Tensor([18, 6],"float32"), positive=Tensor([18, 238609295],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[0,],list[],], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[867,1,], )
paddle.nn.functional.npair_loss(Tensor([18, 6],"float32"), positive=Tensor([18, 6],"float32"), labels=Tensor([4294967295],"float32"), l2_reg=0.002, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8679,1,], )
paddle.nn.functional.npair_loss(Tensor([18, 6],"float32"), positive=Tensor([715827883, 6],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[868,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[87,1,], )
paddle.nn.functional.npair_loss(Tensor([715827883, 6],"float32"), positive=Tensor([18, 6],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.roll(Tensor([10],"float64"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[870,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[871,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[872,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[873,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[874,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[875,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[877,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8771,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[878,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[879,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[88,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[880,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[881,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[883,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8846,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[885,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[886,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[887,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 1, 4294967295],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[888,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 1, 4294967295],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[889,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 10, 429496730],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[89,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[890,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[891,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 100, 42949673],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[8910,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[892,1,], )
paddle.roll(Tensor([2, 4, 2],"float64"), Tensor([2147483649],"int64"), list[0,1,2,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[893,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[894,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[895,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[897,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[898,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[899,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[90,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[900,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[902,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[9021,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[903,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 1073741825, 2],"float64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[904,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[905,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[907,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[908,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[909,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[91,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 1073741825],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[911,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 1073741825],"float64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[912,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[913,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2, 536870913],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[914,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[915,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[916,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[918,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[919,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2147483648],"float32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[92,1,], )
paddle.roll(Tensor([2147483649],"float64"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[920,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[921,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 3, 357913942],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[922,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 357913942, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[923,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[924,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[926,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[927,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[928,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[93,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[930,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 204522253, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[931,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2147483648, 2],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[932,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 2147483648, 2],"float32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[933,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[934,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[935,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[936,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[937,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 2, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[938,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[94,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[940,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 3, 2],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[943,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 37675152, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[944,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 38008561, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[946,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[947,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[948,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 38347923, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[9485,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 38693400, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[949,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[95,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 4294967295, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[951,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[952,1,], )
paddle.roll(Tensor([3, 3],"int64"), shifts=Tensor([2147483649],"int64"), axis=list[0,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[953,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 4294967295, 1],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[954,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[956,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[957,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[958,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[959,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[96,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[960,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[961,1,], )
paddle.nn.functional.pad(Tensor([1, 1048576, 64, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[962,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[963,1,], )
paddle.nn.functional.pad(Tensor([1, 11749, 56, 68, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[964,1,], )
paddle.nn.functional.pad(Tensor([1, 13097, 61, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[965,1,], )
paddle.nn.functional.pad(Tensor([1, 13316, 56, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13316, 60, 56, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[966,1,], )
paddle.nn.functional.pad(Tensor([1, 13541, 56, 59, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[967,1,], )
paddle.nn.functional.pad(Tensor([1, 13541, 59, 56, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[968,1,], )
paddle.nn.functional.pad(Tensor([1, 13775, 56, 58, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[969,1,], )
paddle.nn.functional.pad(Tensor([1, 14017, 57, 56, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[97,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[970,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[971,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[972,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[973,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=5, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[974,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=6, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[976,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[977,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[978,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[979,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[98,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[980,1,], )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[981,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[982,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[983,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[984,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[985,1,], )
paddle.nn.functional.pad(Tensor([1, 155345, 18, 1536],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[987,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[988,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[989,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[99,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[990,1,], )
paddle.roll(Tensor([4, 5, 4, 4],"float64"), Tensor([2147483649],"int64"), list[0,1,2,3,], name=None, )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[991,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[9911,1,], )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[992,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[993,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[994,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[995,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 16, 1198373],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[996,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 16, 1198373],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[9969,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[997,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[998,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295, 1],"int32"), list[999,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 18, 1065221],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 18, 1065221],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 1009156],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.Tensor.tile(Tensor([4294967295],"float32"), list[1,1,], )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 1009156],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 1009156],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.roll(Tensor([4, 5, 4],"float64"), Tensor([2147483649],"int64"), list[0,1,2,], name=None, )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 14, 1198373],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 14, 1198373],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 43691, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 43691, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 14, 1065221],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 14, 1065221],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 38837, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 38837, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.roll(Tensor([4294967295],"float32"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.nn.functional.pad(Tensor([1, 16, 28, 29, 330586],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 29, 330586],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 30, 319567],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 30, 319567],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 32, 299594],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 32, 299594],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 33, 290515],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 33, 290515],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 36, 266306],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 38, 252289],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 38, 252289],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.roll(Tensor([5],"float32"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[3,],list[],], )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 28, 319567],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 28, 319567],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 46604, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 46604, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 309258],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 309258],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 309258],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 45101, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 45101, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 45101, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.roll(Tensor([5],"float64"), Tensor([2147483649],"int64"), list[0,], name=None, )
paddle.nn.functional.pad(Tensor([1, 16, 32, 28, 299594],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 28, 299594],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 43691, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 43691, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 19, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 19, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 38, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 38, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 38837, 18, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 38837, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 38837, 36, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 68, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 42367, 33, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.pad(Tensor([1, 16, 42367, 33, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 16, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 32, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 32, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 30, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 30, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 47394, 59, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 48211, 29, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 48211, 29, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 48211, 58, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([1, 16, 56, 58, 82647],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 59, 81246],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 60, 79892],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 68, 70493],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 57, 49057, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 57, 56, 84097],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 59, 47394, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 59, 56, 81246],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 60, 46604, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 60, 56, 79892],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 61, 45840, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 61, 56, 78582],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 9, 38837, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 9, 7, 4260881],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 160, 120, 223697],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 160, 279621, 96],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 178956971, 2, 2, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 2, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 3, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 19522579, 10, 22],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([1, 2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2, 2, 268435457, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 2147483648],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 268435457, 2, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 268435457, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NHWC", name=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.nn.functional.pad(Tensor([1, 2, 3, 357913942],"float64"), pad=list[1,1,1,0,], mode="reflect", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 20, 15, 14316558],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 20, 279621, 768],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 2018, 32, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 20452226, 10, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 21025, 28, 38, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 21025, 28, 38, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2118, 32, 224, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2147483648, 2, 1],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 2147483649, 1],"float64"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 2212, 32, 224, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 22193, 28, 36, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2323, 32, 224, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 24, 18, 9942054],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 24210, 28, 33, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24210, 28, 33, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2446, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2476, 32, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 24967, 28, 32, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24967, 28, 32, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24967, 32, 28, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.nn.functional.pad(Tensor([1, 24967, 32, 28, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2508, 32, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[3,],list[],], )
paddle.nn.functional.pad(Tensor([1, 2518, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 25565282, 14, 12],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 256, 262144, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 256, 64, 262144],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 25772, 31, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 25772, 31, 28, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 25772, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2594, 32, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 26631, 28, 30, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26631, 28, 30, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26631, 30, 28, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[0,], )
paddle.nn.functional.pad(Tensor([1, 26631, 30, 28, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 268435457, 2, 2, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 27549, 28, 29, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 28, 29, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.scale(Tensor([2, 3, 4, 5, 6],"float32"), scale=Tensor([4294967295],"float32"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,],list[],], )
paddle.nn.functional.pad(Tensor([1, 3, 21520, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 22585, 224, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 23585, 224, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 24773, 224, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 256, 5592406],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 3, 26088, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 26411, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 26742, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 26855, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 27669, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 28, 51130564],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 28, 51130564],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 280, 5113057],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 150638, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 158090, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 165090, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 173408, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 187981, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 193677, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 239, 187194],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.nn.functional.pad(Tensor([1, 3, 32, 242, 184873],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 245, 182610],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 400, 3579140],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4090446, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4772186, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 5592406, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 3, 59652324, 24],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 59652324, 24],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.scale(Tensor([342, 768, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.nn.functional.pad(Tensor([1, 3, 6391321, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 3, 686, 2086962],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([1, 330382100, 1, 13],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 357913942, 2, 3],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 35792, 400, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 365779, 103, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 372633, 102, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 372828, 120, 96],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 372828, 15, 768],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 372828, 30, 384],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 372828, 60, 192],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 379683, 101, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 383480, 100, 112],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 386934, 100, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 40, 279621, 384],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 40, 30, 3579140],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 42049, 14, 19, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 42049, 14, 19, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 42049, 14, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1, 1],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 43827, 280, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 4410, 973916],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 44385, 14, 18, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 44385, 14, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 44385, 18, 14, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 44385, 18, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 14, 16, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 14, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 16, 14, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 16, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 6115, 686, 1024],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([1, 6391321, 28, 24],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 6391321, 28, 24],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.nn.functional.pad(Tensor([1, 64, 256, 262144],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 64, 262144, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 65536, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3, 2],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 71582789, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.nn.functional.pad(Tensor([1, 79949, 53722],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 8, 14, 38347923],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 8, 44739243, 12],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 80, 279621, 192],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 80, 60, 894785],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 85599, 224, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 88769, 9, 7, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[3,0,], )
paddle.searchsorted(Tensor([2147483649],"float64"), Tensor([2, 3],"float64"), out_int32=True, )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"float32"), values=Tensor([1431655765, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"float64"), values=Tensor([715827883, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"int32"), values=Tensor([1431655765, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([2, 5],"int64"), values=Tensor([715827883, 3],"int64"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.searchsorted(sorted_sequence=Tensor([429496730, 5],"float64"), values=Tensor([2, 3],"float64"), )
paddle.searchsorted(sorted_sequence=Tensor([429496730, 5],"int64"), values=Tensor([2, 3],"int64"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.searchsorted(sorted_sequence=Tensor([858993459, 5],"float32"), values=Tensor([2, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([858993459, 5],"int32"), values=Tensor([2, 3],"int32"), )
paddle.nn.functional.pad(Tensor([10, 128, 16, 104],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([1, 5, 429496730, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, 255, 499, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, 255, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, None, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, 255, 499, Tensor([499],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, 255, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.Tensor.__truediv__(Tensor([1000, 2, 2, 1073742],"float32"), Tensor([2, 3],"float32"), )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, None, None, None, False, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, None, None, None, True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 2147483649],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([16, 25500],"float32"), 1024, 120, 600, window=Tensor([4294967295],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 25500],"float32"), 2048, 240, 1200, window=Tensor([4294967295],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 25500],"float32"), 512, 50, 240, window=Tensor([4294967295],"float32"), center=True, pad_mode="reflect", )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), output_size=list[1,4,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), output_size=list[2,3,], data_format="NCHW", name=None, )
paddle.signal.stft(Tensor([160000],"float64"), 512, None, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([1000, 2, 2, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44739243, 4, 4, 3],"float64"), output_size=3, data_format="NHWC", name=None, )
paddle.signal.stft(Tensor([2147483649],"float64"), 512, None, None, Tensor([2147483649],"float64"), True, "reflect", False, True, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44739243, 4, 4, 3],"float64"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.signal.stft(Tensor([2147483649],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([4294967295],"float32"), 400, 160, window=Tensor([400],"float32"), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([44739243, 4, 4, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", name=None, )
paddle.signal.stft(Tensor([4294967295],"float32"), 400, 160, window=Tensor([4294967295],"float32"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.signal.stft(Tensor([79949],"float32"), 400, 160, window=Tensor([4294967295],"float32"), )
paddle.signal.stft(n_fft=400, x=Tensor([4294967295],"float32"), )
paddle.slice(Tensor([1, 4, 1073741824],"float32"), axes=list[0,], starts=list[0,], ends=list[1,], )
paddle.Tensor.__truediv__(Tensor([1000, 2, 2, 3],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.Tensor.__truediv__(Tensor([1000, 2, 2147484],"float32"), Tensor([2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1000, 2, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.pad(Tensor([10, 128, 16, 128],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.Tensor.__truediv__(Tensor([1000, 2, 715828, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.Tensor.__truediv__(Tensor([10000],"float32"), Tensor([4294967295],"float32"), )
paddle.slice(Tensor([143165577, 5, 6],"float32"), axes=list[0,1,2,], starts=list[-3,0,2,], ends=list[3,2,4,], )
paddle.Tensor.__truediv__(Tensor([1000110],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__truediv__(Tensor([1001730],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.__truediv__(Tensor([1003547],"float32"), Tensor([4294967295],"float32"), )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.Tensor.__truediv__(Tensor([1005783],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.pad(Tensor([10, 128, 16, 136],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 429496730, 5],"float64"), Tensor([5, 5, 429496730, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 429496730],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.nn.functional.pad(Tensor([10, 128, 16, 32],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 429496730],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.slice(Tensor([214749, 2, 100, 100],"float16"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.slice(Tensor([214749, 2, 100, 100],"float16"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.slice(Tensor([214749, 2, 100, 100],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.nn.functional.pad(Tensor([10, 128, 16, 40],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.nn.functional.pad(Tensor([10, 128, 24673, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([10, 128, 26215, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([10, 128, 32264, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 83887, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 139811, 16, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 167773, 16, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 186414, 16, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 197380, 16, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 209716, 16, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 209716, 16, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 239675, 16, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 258112, 16, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.slice(Tensor([3, 715827883],"int64"), list[1,], list[-3,], list[2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[-3,-2,-1,], list[1,-3,2,], list[3,3,4,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([68479, 320, 14, 14],"float16"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([68479, 320, 14, 14],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 112],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 429496730, 1, 1],"float64"), list[0,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([89478486, 3, 4, 4],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 429496730, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 429496730, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 429496730, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([10, 64, 16, 128],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 429496730, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 429496730, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.slice(Tensor([536870913, 4],"int64"), list[-2,-1,], list[-3,0,], list[2,-1,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), output_size=list[1,1,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), output_size=list[1,4,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), output_size=list[3,3,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.slice_scatter(Tensor([119304648, 6, 3],"float64"), Tensor([8, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.slice_scatter(Tensor([13256072, 6, 3, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.slice_scatter(Tensor([238609295, 6, 3],"float32"), Tensor([8, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([23860930, 6, 3, 5],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([26512144, 6, 3, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([39768216, 9, 6],"float64"), Tensor([39768216, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.slice_scatter(Tensor([47721859, 6, 3, 5],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"bfloat16"), Tensor([8, 2],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([715827883, 6],"bool"), Tensor([8, 2],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.slice_scatter(Tensor([715827883, 6],"float16"), Tensor([8, 2],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 429496730, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[3,0,], )
paddle.slice_scatter(Tensor([79536432, 9, 6],"float32"), Tensor([79536432, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.slice_scatter(Tensor([8, 178956971, 3],"float32"), Tensor([8, 178956971, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.slice_scatter(Tensor([8, 17895698, 3, 5],"float64"), Tensor([8, 17895698, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.slice_scatter(Tensor([8, 19884108, 3, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,],list[3,],], )
paddle.slice_scatter(Tensor([8, 35791395, 3, 5],"float32"), Tensor([8, 35791395, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.slice_scatter(Tensor([8, 44739243, 6],"float64"), Tensor([1, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.slice_scatter(Tensor([8, 536870912],"bfloat16"), Tensor([8, 536870912],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.slice_scatter(Tensor([8, 536870912],"bool"), Tensor([8, 536870912],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.slice_scatter(Tensor([8, 536870912],"float16"), Tensor([8, 536870912],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.slice_scatter(Tensor([8, 6, 17895698, 5],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,1,2,],list[3,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 14913081],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 14913081],"float64"), Tensor([8, 6, 3, 14913081],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[0,], )
paddle.slice_scatter(Tensor([8, 6, 3, 29826162],"float32"), Tensor([8, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 29826162],"float32"), Tensor([8, 6, 3, 29826162],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([143165577, 2, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([8, 2, 3, 89478486],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([8, 2, 53687092, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float32"), Tensor([8, 35791395, 3, 5],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([71582789, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([8, 17895698, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([8, 2, 26843546, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 5],"float64"), Tensor([8, 2, 3, 44739243],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([119304648, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 6, 3, 29826162],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 6, 44739243, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 89478486, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[0,],list[],], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([59652324, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 44739243, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 6, 22369622, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 6, 3, 14913081],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.slice_scatter(Tensor([8, 6, 3],"float32"), Tensor([715827883, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.slice_scatter(Tensor([8, 6, 3],"float32"), Tensor([8, 178956971, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.slice_scatter(Tensor([8, 6, 3],"float32"), Tensor([8, 2, 268435456],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.slice_scatter(Tensor([8, 6, 3],"float64"), Tensor([357913942, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.slice_scatter(Tensor([8, 6, 3],"float64"), Tensor([8, 2, 134217729],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.slice_scatter(Tensor([8, 6, 3],"float64"), Tensor([8, 89478486, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 44739243],"float64"), Tensor([8, 2, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.slice_scatter(Tensor([8, 6, 4971027, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.slice_scatter(Tensor([8, 6, 89478486],"float32"), Tensor([8, 2, 3],"float32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.slice_scatter(Tensor([8, 6, 8947849, 5],"float64"), Tensor([8, 2, 3, 5],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.slice_scatter(Tensor([8, 6, 9942054, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bfloat16"), Tensor([2147483648, 2],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bfloat16"), Tensor([8, 536870912],"bfloat16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bool"), Tensor([2147483648, 2],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"bool"), Tensor([8, 536870912],"bool"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"float16"), Tensor([2147483648, 2],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6],"float16"), Tensor([8, 536870912],"float16"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), output_size=list[1,1,], )
paddle.slice_scatter(Tensor([8, 89478486, 3],"float64"), Tensor([8, 89478486, 3],"float64"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 89478486, 6],"float32"), Tensor([1, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 29826162],"float64"), Tensor([1, 9, 29826162],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 59652324],"float32"), Tensor([1, 9, 59652324],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float32"), Tensor([1, 4294967295, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float32"), Tensor([1, 9, 477218589],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float32"), Tensor([477218589, 9, 1],"float32"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.slice_scatter(Tensor([8, 9, 6],"float64"), Tensor([1, 2147483649, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.slice_scatter(Tensor([8, 9, 6],"float64"), Tensor([1, 9, 238609295],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9, 6],"float64"), Tensor([238609295, 9, 1],"float64"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.slice_scatter(Tensor([8, 9942054, 3, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 429496730, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.sort(Tensor([10, 214748365],"float64"), )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.sort(Tensor([10, 214748365],"float64"), axis=-1, )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 429496730, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.sort(Tensor([178956971, 12],"float64"), 1, )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.sort(Tensor([214748365, 10],"float64"), )
paddle.sort(Tensor([214748365, 10],"float64"), axis=-1, )
paddle.sort(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), 5, )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.sort(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), 5, )
paddle.sort(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), 5, )
paddle.sort(Tensor([306783379, 7],"float64"), 1, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 192],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.sort(Tensor([4, 536870913],"float64"), 1, )
paddle.sort(Tensor([4, 7, 76695845],"float64"), 2, )
paddle.sort(Tensor([4, 89478486, 6],"float64"), 2, )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.nn.functional.pad(Tensor([1024, 1, 129, 32514],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 1398102, 3],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 16321, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 16384, 256],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 16384, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 1, 256, 16384],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 256, 16384],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 1, 257, 16321],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 3, 1398102],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 32514, 129],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 253, 129, 129],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 466034, 3, 3],"float32"), list[1,1,1,1,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([429496730, 1, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.nn.functional.pad(Tensor([1024, 64, 256, 256],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 64, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 64, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1024, 64, 257, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1048576, 1, 32, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1048576, 1, 64, 64],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,],list[],], )
paddle.nn.functional.pad(Tensor([11184811, 3, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.nn.functional.pad(Tensor([11184811, 3, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([11184811, 3, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.nn.functional.pad(Tensor([119304648, 6, 6],"float32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([11931, 3, 400, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([12, 1, 11184811, 32],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 128, 2796203],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.nn.functional.pad(Tensor([12, 1, 1398102, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 16, 22369622],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.nn.functional.pad(Tensor([12, 1, 22369622, 16],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.nn.functional.pad(Tensor([12, 1, 256, 1398102],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 2796203, 128],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.nn.functional.pad(Tensor([12, 1, 32, 11184811],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.nn.functional.pad(Tensor([12, 1, 5592406, 64],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.nn.functional.pad(Tensor([12, 1, 64, 5592406],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1398102, 16, 16],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.nn.functional.pad(Tensor([12, 21846, 128, 128],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.sort(Tensor([5, 429496730],"float64"), 1, )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[0,], )
paddle.sort(Tensor([51130564, 42],"float64"), 1, )
paddle.nn.functional.pad(Tensor([12, 349526, 32, 32],"float32"), list[2,1,2,1,], )
paddle.sort(Tensor([51130564, 7, 6],"float64"), 2, )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[0,],list[],], )
paddle.nn.functional.pad(Tensor([12, 5462, 256, 256],"float32"), list[2,1,2,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[1,2,],list[3,],], )
paddle.nn.functional.pad(Tensor([12, 87382, 64, 64],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([120, 120, 1, 298262],"float32"), list[1,1,1,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([120, 120, 298262, 1],"float32"), list[1,1,1,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.sort(x=Tensor([3, 2, 357913942],"float64"), axis=-1, )
paddle.nn.functional.pad(Tensor([12288, 1, 1, 349526],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([12288, 1, 349526, 1],"float32"), list[0,1,0,1,], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 85899346],"float64"), Tensor([1, 1, 1, 85899346],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.nn.functional.pad(Tensor([13, 110127367, 3],"float32"), tuple(1,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([13, 3441481, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([13, 4, 82595525],"float32"), list[0,0,0,3,0,0,], mode="constant", value=0, )
paddle.sort(x=Tensor([3, 357913942, 2],"float64"), axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[0,], )
paddle.sort(x=Tensor([536870913, 2, 2],"float64"), axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.split(Tensor([1, 1, 16, 268435456],"float32"), num_or_sections=3, axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,],list[],], )
paddle.split(Tensor([1, 1, 4, 1073741824],"float32"), 3, axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[27648,6912,1728,432,108,30,], axis=-1, )
paddle.Tensor.__truediv__(Tensor([12, 223697, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[28800,7200,1800,450,117,35,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.nn.functional.pad(Tensor([13, 6, 55063684],"float32"), list[0,0,0,1,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([13, 6, 55063684],"float32"), list[0,0,1,0,0,0,], value=0, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[4800,1200,300,80,20,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[6408,1620,414,108,30,], axis=-1, )
paddle.split(Tensor([1, 1, 4294967295],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.nn.functional.pad(Tensor([13, 7, 47197443],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.split(Tensor([1, 1, 4294967295],"float32"), num_or_sections=4, axis=-1, )
paddle.split(Tensor([1, 10, 429496730],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.split(Tensor([1, 100, 42949673],"float32"), 2, -1, )
paddle.split(Tensor([1, 101, 42524429],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 101, 42524429],"float32"), num_or_sections=4, axis=-1, )
paddle.nn.functional.pad(Tensor([1315, 16, 28, 38, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1315, 16, 28, 38, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 1024, 16, 262144],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 1024, 4194304],"bfloat16"), num_or_sections=3, axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.split(Tensor([1, 1073741824, 4],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 11, 16, 24403224],"float32"), num_or_sections=list[32,32,32,], axis=-1, )
paddle.split(Tensor([1, 11, 390451573],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 11, 390451573],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.nn.functional.pad(Tensor([1388, 16, 28, 36, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1398102, 3, 32, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1398102, 48, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[0,], )
paddle.split(Tensor([1, 116509, 192, 192],"float32"), list[100,300,], axis=1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[0,],list[],], )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 12, 357913942],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.split(Tensor([1, 126860, 184, 184],"float32"), list[100,300,], axis=1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.split(Tensor([1, 13, 16, 20648882],"float32"), num_or_sections=3, axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.split(Tensor([1, 13, 330382100],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 13, 330382100],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.split(Tensor([1, 138655, 176, 176],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([1, 14, 306783379],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 14, 306783379],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.split(Tensor([1, 14, 306783379],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.split(Tensor([1, 16, 268435456],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 16, 268435456],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.split(Tensor([1, 16, 4194304, 64],"float32"), list[1,256,], axis=2, )
paddle.split(Tensor([1, 171798692, 5, 5],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([1, 196, 21913099],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 2, 2147483648],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.nn.functional.pad(Tensor([143166, 3, 100, 100],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.nn.functional.pad(Tensor([14609, 3, 280, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.split(Tensor([1, 20, 214748365],"float32"), num_or_sections=2, axis=-1, )
paddle.split(Tensor([1, 2048, 2097152],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 2147483648, 2],"float32"), list[100,300,], axis=1, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 11930465, 1],"float32"), )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.nn.functional.pad(Tensor([1514, 16, 28, 33, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 2147483649],"float64"), num_or_sections=4, axis=-1, )
paddle.nn.functional.pad(Tensor([1514, 16, 28, 33, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1536, 1, 1, 2796203],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([1536, 1, 2796203, 1],"float32"), list[0,1,0,1,], )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 85899346, 5],"float64"), Tensor([1, 1, 85899346, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.split(Tensor([1, 25, 171798692],"float32"), 5, axis=-1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 11930465, 10, 1],"float32"), )
paddle.nn.functional.pad(Tensor([1561, 16, 28, 32, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 3, 1431655765],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.split(Tensor([1, 3, 1431655765],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.nn.functional.pad(Tensor([1561, 16, 28, 32, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1561, 16, 32, 28, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 3, 1431655765],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.nn.functional.pad(Tensor([1561, 16, 32, 28, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,],list[],], )
paddle.nn.functional.pad(Tensor([16, 25500, 10527],"float32"), pad=list[1024,1024,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 25500, 10527],"float32"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 25500, 10527],"float32"), pad=list[512,512,], mode="reflect", data_format="NLC", )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[2704,676,169,49,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=5, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[4096,1024,256,64,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3579140, 10, 10, 1],"float32"), )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 4, 1073741824],"float32"), list[7744,1936,484,121,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([16, 2796203, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.pad(Tensor([16, 3, 256, 349526],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([16, 3, 256, 349526],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16, 3, 256, 349526],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([16, 3, 349526, 256],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([16, 3, 349526, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16, 3, 349526, 256],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([16, 4096, 256, 256],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([16, 4096, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16, 4096, 256, 256],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([1611, 16, 31, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1611, 16, 31, 28, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([14316558, 3, 10, 10, 1],"float32"), )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.nn.functional.pad(Tensor([1611, 16, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.split(Tensor([1, 4294967295],"float32"), 2, axis=-1, )
paddle.split(Tensor([1, 4294967295],"float32"), 7, axis=-1, )
paddle.nn.functional.pad(Tensor([16645, 12, 42, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([1665, 16, 28, 30, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 4294967295],"float32"), num_or_sections=4, axis=-1, )
paddle.nn.functional.pad(Tensor([1665, 16, 28, 30, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 4294967295],"float32"), num_or_sections=list[10,10,], axis=1, )
paddle.nn.functional.pad(Tensor([1665, 16, 30, 28, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 42949673, 10, 10],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.nn.functional.pad(Tensor([1665, 16, 30, 28, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([16777216, 1, 16, 16],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([16777216, 1, 16, 16],"float32"), list[2,2,2,2,], )
paddle.split(Tensor([1, 477218589, 3, 3],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.nn.functional.pad(Tensor([168431, 25500, 1],"float32"), pad=list[1024,1024,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([168431, 25500, 1],"float32"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([168431, 25500, 1],"float32"), pad=list[512,512,], mode="reflect", data_format="NLC", )
paddle.split(Tensor([1, 5, 858993459],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.nn.functional.pad(Tensor([1722, 16, 28, 29, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 5, 858993459],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.nn.functional.pad(Tensor([1722, 16, 28, 29, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.split(Tensor([1, 5, 858993459],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([175858, 8141, 3],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), output_size=list[1,4,], )
paddle.split(Tensor([1, 58, 74051161],"float32"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([1, 6, 715827883],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), output_size=list[2,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([44739243, 4, 4, 3],"float64"), output_size=3, data_format="NHWC", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[0,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([44739243, 4, 4, 3],"float64"), output_size=list[3,3,], data_format="NHWC", )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([44739243, 4, 4, 3],"float64"), output_size=tuple(3,3,), data_format="NHWC", )
paddle.Tensor.__truediv__(Tensor([12, 3, 10, 11930465, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[5184,1296,324,81,], axis=-1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 7, 613566757],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([1, 77673, 192, 288],"float32"), num_or_sections=list[2,1,], axis=1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[0,],list[],], )
paddle.split(Tensor([1, 8, 536870912],"float32"), list[3136,784,196,49,], axis=-1, )
paddle.split(Tensor([1, 8, 536870912],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.nn.functional.pad(Tensor([178956971, 1, 2, 2, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([178956971, 1, 2, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float32"), output_size=list[3,3,], )
paddle.split(Tensor([1, 9, 477218589],"float32"), 2, axis=2, )
paddle.split(Tensor([1, 9, 477218589],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([1, 9, 477218589],"float32"), list[6400,1600,400,100,], axis=-1, )
paddle.split(Tensor([10, 2, 8, 26843546],"float32"), 3, axis=-1, )
paddle.nn.functional.pad(Tensor([179541, 7974, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.nn.functional.pad(Tensor([18642, 20, 15, 768],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([18725, 128, 16, 112],"float32"), list[0,1,0,1,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([191270, 7485, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([192, 1, 1, 22369622],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([192, 1, 22369622, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([19522579, 1, 10, 22],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([196608, 1, 1, 21846],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([196608, 1, 21846, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([2, 1, 536870912, 4],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.nn.functional.pad(Tensor([2, 1, 715827883, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.split(Tensor([10, 429496730],"float32"), 7, axis=-1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.split(Tensor([100, 42949673],"float32"), 2, axis=-1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.split(Tensor([100, 42949673],"float32"), 7, axis=-1, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([1, 85899346, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([101, 42524429],"float32"), 2, axis=-1, )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 16777217, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 16777217, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 16777217, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.split(Tensor([1024, 16, 2, 131072],"float16"), num_or_sections=3, axis=-1, )
paddle.split(Tensor([10240, 419431],"float32"), 3, axis=-1, )
paddle.nn.functional.pad(Tensor([2, 178956971, 3, 4],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.split(Tensor([103, 41698712],"float32"), 7, axis=-1, )
paddle.nn.functional.pad(Tensor([2, 2097152, 32, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.nn.functional.pad(Tensor([2, 2147483648, 1],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.nn.functional.pad(Tensor([2, 214749, 100, 100],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.nn.functional.pad(Tensor([2, 22369622, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.Tensor.__truediv__(Tensor([12, 3, 11930465, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.nn.functional.pad(Tensor([2, 3, 100, 7158279],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.nn.functional.pad(Tensor([2, 3, 178956971, 4],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 178956971, 4],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 178956971, 4],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.nn.functional.pad(Tensor([2, 3, 32, 22369622],"float32"), list[2,3,2,3,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.split(Tensor([10737419, 20, 20],"float16"), 2, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 22369622, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 22369622, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 22369622, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 22369622],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 22369622],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.split(Tensor([108, 39768216],"float32"), 7, axis=-1, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 22369622],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 44739243],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.split(Tensor([10923, 2, 2, 8, 128, 96],"float16"), 2, axis=0, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 44739243],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 44739243],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.split(Tensor([11, 390451573],"float32"), 2, axis=-1, )
paddle.nn.functional.pad(Tensor([2, 3, 4, 44739243, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 44739243, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.nn.functional.pad(Tensor([2, 3, 4, 44739243, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.nn.functional.pad(Tensor([2, 3, 44739243, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 44739243, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 44739243, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 5965233, 1],"float32"), )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,],list[],], )
paddle.nn.functional.pad(Tensor([2, 3, 7158279, 100],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.split(Tensor([119304648, 6, 6],"float32"), num_or_sections=list[5,0,3,], )
paddle.nn.functional.pad(Tensor([2, 33554432, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 33554432, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 5965233, 20, 1],"float32"), )
paddle.nn.functional.pad(Tensor([2, 33554432, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 33554432, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 357913942, 2, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.nn.functional.pad(Tensor([2, 48, 5592406, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 48, 8, 5592406],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 536870912, 4],"float32"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 536870912, 4],"float32"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 536870912, 4],"float32"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 64, 16, 2097152],"float32"), list[0,1,0,1,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.nn.functional.pad(Tensor([2, 64, 2097152, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([12, 3579140, 10, 10],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.nn.functional.pad(Tensor([2, 67108865, 4, 4],"float64"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.split(Tensor([12, 3579140, 10, 10],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.nn.functional.pad(Tensor([2, 67108865, 4, 4],"float64"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.nn.functional.pad(Tensor([2, 67108865, 4, 4],"float64"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 8388608, 16, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 96, 4, 5592406],"float32"), list[0,1,0,1,], value=0, )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 894785, 20, 20, 1],"float32"), )
paddle.nn.functional.pad(Tensor([2, 96, 5592406, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([20165, 128, 16, 104],"float32"), list[0,1,0,1,], value=0, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.pad(Tensor([2039, 3, 686, 1024],"float32"), tuple(0,0,0,338,), )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.nn.functional.pad(Tensor([20452226, 1, 10, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2048, 1, 128, 16384],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([2048, 1, 16384, 128],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([2048, 128, 128, 128],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([2130441, 3, 28, 24],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2130441, 3, 28, 24],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2147483648, 1, 2, 1],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2147483648, 2, 1],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([3579140, 3, 20, 20, 1],"float32"), )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,1,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="circular", value=0.0, data_format="NCL", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.split(Tensor([13, 10, 33038210],"float32"), list[2,16,16,], axis=-1, )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), list[14,14,14,14,], )
paddle.split(Tensor([13, 1007, 328086],"float32"), list[2,16,16,], axis=-1, )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), list[6,6,6,6,], )
paddle.tensordot(Tensor([1, 85899346, 5, 5],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([22369622, 2, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.split(Tensor([13, 3, 110127367],"float32"), list[2,16,16,], axis=-1, )
paddle.nn.functional.pad(Tensor([22369622, 3, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([22369622, 3, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([22369622, 3, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.split(Tensor([13, 4, 2, 41297763],"float32"), 2, -1, )
paddle.nn.functional.pad(Tensor([22369622, 6, 32],"float32"), list[0,0,0,1,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([22369622, 6, 32],"float32"), list[0,0,1,0,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([22369622, 64, 3],"float32"), tuple(1,0,), data_format="NCL", )
paddle.split(Tensor([13, 4, 7, 11799361],"float32"), 2, -1, )
paddle.nn.functional.pad(Tensor([2331, 160, 120, 96],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.split(Tensor([13, 7, 47197443],"float32"), list[2,16,16,], axis=-1, )
paddle.split(Tensor([13, 7, 47197443],"float32"), list[37,37,128,], axis=-1, )
paddle.split(Tensor([13, 7, 47197443],"float32"), num_or_sections=2, axis=-1, )
paddle.nn.functional.pad(Tensor([2428, 48, 48, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([24576, 1, 1, 174763],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([24576, 1, 174763, 1],"float32"), list[0,1,0,1,], )
paddle.tensordot(Tensor([134217729, 4, 4],"float64"), Tensor([134217729, 4, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.nn.functional.pad(Tensor([2550, 64, 188, 140],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([257910, 5551, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([258096, 1, 129, 129],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([262144, 1, 128, 128],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([262144, 1, 128, 128],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([262144, 64, 16, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([262144, 64, 16, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([262144, 64, 16, 16],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.nn.functional.pad(Tensor([26215, 64, 16, 160],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([2629, 16, 14, 19, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2629, 16, 14, 19, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2629, 16, 14, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.nn.functional.pad(Tensor([2684355, 1, 40, 40],"float32"), pad=list[0,0,2,2,], )
paddle.nn.functional.pad(Tensor([2684355, 1, 40, 40],"float32"), pad=list[2,2,0,0,], )
paddle.nn.functional.pad(Tensor([2775, 16, 14, 18, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2775, 16, 14, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2775, 16, 18, 14, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2775, 16, 18, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2796203, 6, 16, 16],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2796203, 6, 16, 16],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2796203, 6, 16, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2796203, 96, 4, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([28533, 3, 224, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([29128, 64, 16, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([298262, 1, 3, 1600, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([298262, 1, 3, 3, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 11930465, 40, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 298262, 1600, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 11930465, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 159072863, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.split(Tensor([14, 1, 4, 76695845],"float32"), 3, axis=-1, )
paddle.nn.functional.pad(Tensor([3, 1, 3, 298262, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 3, 159072863],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 40, 11930465],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.split(Tensor([14, 10, 4, 7669585],"float32"), 3, axis=-1, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.nn.functional.pad(Tensor([3, 1, 35791395, 40],"float32"), pad=list[2,2,0,0,], )
paddle.nn.functional.pad(Tensor([3, 1, 40, 11930465, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 40, 35791395],"float32"), pad=list[0,0,2,2,], )
paddle.split(Tensor([14, 7, 43826197],"float32"), 3, axis=-1, )
paddle.split(Tensor([14, 7, 43826197],"float32"), list[2,16,16,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 14913081, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,1,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="circular", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.nn.functional.pad(Tensor([3, 298262, 3, 40, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 298262, 40, 40, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.Tensor.__truediv__(Tensor([12, 3, 20, 5965233, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([1536, 14267, 14, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([1536, 14267, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([1536, 3567, 28, 28],"float16"), num_or_sections=list[58,58,], axis=1, )
paddle.split(Tensor([1536, 3567, 28, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([17179870, 5, 5, 5],"float64"), Tensor([17179870, 1, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.split(Tensor([1536, 57066, 7, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([1536, 57066, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[225,900,3600,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[256,1024,4096,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[289,1156,4624,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[324,1296,5184,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[361,1444,5776,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 5592406, 16, 16],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[400,1600,6400,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 64, 1398102, 16],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[441,1764,7056,], axis=-1, )
paddle.tensordot(Tensor([268435456, 4, 4],"float32"), Tensor([268435456, 4, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([268435456, 4, 4],"float32"), Tensor([268435456, 4, 5],"float32"), tuple(1,), )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[529,2116,8464,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 64, 16, 1398102],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([268435456, 4, 4],"float32"), Tensor([268435456, 4, 5],"float32"), tuple(list[1,],), )
paddle.split(Tensor([16, 10, 26843546],"float32"), list[576,2304,9216,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([268435456, 4, 4],"float32"), Tensor([268435456, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([268435456, 4, 4],"float32"), Tensor([268435456, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[100,400,1600,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[169,676,2704,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[225,900,3600,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 894785, 40, 40],"float32"), pad=list[0,0,2,2,], )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[256,1024,4096,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 894785, 40, 40],"float32"), pad=list[2,2,0,0,], )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[400,1600,6400,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 99421, 3, 1600, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[484,1936,7744,], axis=-1, )
paddle.nn.functional.pad(Tensor([3, 99421, 3, 3, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.split(Tensor([16, 11, 24403224],"float32"), list[576,2304,9216,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[100,400,1600,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 1, 1118482, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[169,676,2704,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 4473925],"float32"), list[2,3,2,3,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[225,900,3600,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 1, 639133, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[256,1024,4096,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 1, 745655, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[324,1296,5184,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 1, 894785, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[361,1444,5776,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 128, 10755, 104],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[441,1764,7056,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 128, 16, 69906],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[484,1936,7744,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 128, 9987, 112],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[529,2116,8464,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 19973, 32, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.split(Tensor([16, 12, 22369622],"float32"), list[576,2304,9216,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 23302, 32, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 27963, 32, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 34953, 32, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.tensordot(Tensor([3, 178956971, 4],"float64"), Tensor([4, 4, 5],"float64"), list[1,], )
paddle.nn.functional.pad(Tensor([30, 559241, 16, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 178956971, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(1,), )
paddle.tensordot(Tensor([3, 178956971, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(list[1,],), )
paddle.nn.functional.pad(Tensor([30, 55925, 16, 160],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 178956971, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(1,),), )
paddle.nn.functional.pad(Tensor([30, 62138, 16, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 178956971, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[121,484,1936,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 64, 139811, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[169,676,2704,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 64, 13982, 160],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[196,784,3136,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 64, 15535, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 357913942, 5],"float32"), list[1,], )
paddle.nn.functional.pad(Tensor([30, 64, 16, 139811],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[225,900,3600,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 357913942, 5],"float32"), tuple(1,), )
paddle.nn.functional.pad(Tensor([30, 64, 17477, 128],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[256,1024,4096,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 357913942, 5],"float32"), tuple(list[1,],), )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[289,1156,4624,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 64, 19973, 112],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 357913942, 5],"float32"), tuple(tuple(1,),), )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[324,1296,5184,], axis=-1, )
paddle.nn.functional.pad(Tensor([30, 69906, 16, 128],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 357913942, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[361,1444,5776,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 4, 5],"float32"), list[1,], )
paddle.nn.functional.pad(Tensor([30, 79892, 16, 112],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[400,1600,6400,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(1,), )
paddle.nn.functional.pad(Tensor([30, 79892, 16, 112],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[441,1764,7056,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,],), )
paddle.nn.functional.pad(Tensor([30, 86038, 16, 104],"float32"), list[0,1,0,1,], value=0, )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[484,1936,7744,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.nn.functional.pad(Tensor([3121, 16, 14, 16, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[529,2116,8464,], axis=-1, )
paddle.tensordot(Tensor([3, 357913942, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.split(Tensor([16, 13, 20648882],"float32"), list[576,2304,9216,], axis=-1, )
paddle.nn.functional.pad(Tensor([3121, 16, 14, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3121, 16, 16, 14, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3121, 16, 16, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3195661, 8, 14, 12],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[100,400,1600,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[144,576,2304,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[225,900,3600,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 178956971],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[256,1024,4096,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 357913942],"float32"), Tensor([4, 4, 357913942],"float32"), list[1,], )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[289,1156,4624,], axis=-1, )
paddle.nn.functional.pad(Tensor([32768, 64, 16, 128],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.tensordot(Tensor([3, 4, 357913942],"float32"), Tensor([4, 4, 357913942],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 357913942],"float32"), Tensor([4, 4, 357913942],"float32"), tuple(list[1,],), )
paddle.nn.functional.pad(Tensor([330382100, 1, 1, 13],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[324,1296,5184,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 357913942],"float32"), Tensor([4, 4, 357913942],"float32"), tuple(tuple(1,),), )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[361,1444,5776,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 357913942],"float32"), Tensor([4, 4, 357913942],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[400,1600,6400,], axis=-1, )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[484,1936,7744,], axis=-1, )
paddle.nn.functional.pad(Tensor([33289, 6, 21, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[529,2116,8464,], axis=-1, )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 14, 19173962],"float32"), list[576,2304,9216,], axis=-1, )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[100,400,1600,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 357913942],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[121,484,1936,], axis=-1, )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[144,576,2304,], axis=-1, )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[169,676,2704,], axis=-1, )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[196,784,3136,], axis=-1, )
paddle.nn.functional.pad(Tensor([33554432, 4, 32],"float32"), list[0,0,0,3,0,0,], mode="constant", value=0, )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[289,1156,4624,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([214748365, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[361,1444,5776,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 214748365, 5],"float32"), list[1,], )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[441,1764,7056,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 214748365, 5],"float32"), tuple(1,), )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[484,1936,7744,], axis=-1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 214748365, 5],"float32"), tuple(list[1,],), )
paddle.split(Tensor([16, 15, 17895698],"float32"), list[529,2116,8464,], axis=-1, )
paddle.nn.functional.pad(Tensor([357913942, 1, 2, 3],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 214748365, 5],"float32"), tuple(tuple(1,),), )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[100,400,1600,], axis=-1, )
paddle.Tensor.__truediv__(Tensor([12, 3, 2982617, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 214748365, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.nn.functional.pad(Tensor([357913942, 1, 3, 4],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[121,484,1936,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[144,576,2304,], axis=-1, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3, 1],"float64"), pad=list[1,1,1,0,], mode="reflect", value=0.0, data_format="NHWC", name=None, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[169,676,2704,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[196,784,3136,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[324,1296,5184,], axis=-1, )
paddle.split(Tensor([16, 16, 16777216],"float32"), list[441,1764,7056,], axis=-1, )
paddle.split(Tensor([16, 17, 15790321],"float32"), list[144,576,2304,], axis=-1, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NLC", name=None, )
paddle.split(Tensor([16, 17, 15790321],"float32"), list[289,1156,4624,], axis=-1, )
paddle.split(Tensor([16, 18, 14913081],"float32"), list[144,576,2304,], axis=-1, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.split(Tensor([16, 2, 134217728],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([16, 2, 134217728],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.nn.functional.pad(Tensor([357913942, 3, 4],"float32"), list[1,1,], mode="circular", data_format="NCL", )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([107374183, 4, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.nn.functional.pad(Tensor([357913942, 3, 4],"float32"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 107374183, 5],"float64"), list[1,], )
paddle.nn.functional.pad(Tensor([357913942, 3, 4],"float32"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 107374183, 5],"float64"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 107374183, 5],"float64"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 107374183, 5],"float64"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 107374183, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 268435456],"float32"), num_or_sections=3, axis=1, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 3, 89478486],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([365779, 1, 103, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([372633, 1, 102, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([37450, 64, 16, 112],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([379683, 1, 101, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([38347923, 7, 16],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([383480, 1, 100, 112],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([386934, 1, 100, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 1, 357913942, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.split(Tensor([16, 5, 53687092],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.nn.functional.pad(Tensor([4, 10199, 376, 280],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 128, 119838, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 128, 94, 89241],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 163183, 94, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 178956971, 2, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 178956971, 6],"float32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 4971027, 6, 6],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 4971027, 6],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 4971027],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 9942054],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 9942054, 6],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 9942054, 6, 6],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 32, 32, 1048576],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([4, 32, 43691, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([4, 40796, 188, 140],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 4194304, 16, 16],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 4194304, 16, 16],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 4194304, 16, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 43691, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([4, 6, 11184811, 16],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 11184811, 16],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 11184811, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 16, 11184811],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 16, 11184811],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 16, 11184811],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 64, 119838, 140],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 188, 89241],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 2982617, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.nn.functional.pad(Tensor([4, 64, 376, 44621],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 59919, 280],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4096, 1, 16, 65536],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4096, 1, 65536, 16],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4096, 256, 64, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4096, 4096, 16, 16],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4162, 48, 168, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([4194304, 1, 32, 32],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([421120, 25, 408],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.nn.functional.pad(Tensor([421120, 3400, 3],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 223697, 40, 40, 1],"float32"), )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.split(Tensor([1820, 2359873],"float32"), 3, axis=-1, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.nn.functional.pad(Tensor([44739243, 1, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([44739243, 3, 4, 4],"float64"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 2982617, 40, 1],"float32"), )
paddle.nn.functional.pad(Tensor([44739243, 3, 4, 4],"float64"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([44739243, 3, 4, 4],"float64"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4661, 80, 60, 192],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([477218589, 1, 3, 3],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([5, 23302, 48, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.nn.functional.pad(Tensor([5, 48, 23302, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.split(Tensor([2, 1, 2147483648],"float32"), list[5776,1444,361,100,], axis=-1, )
paddle.split(Tensor([2, 1, 2147483648],"float32"), list[7056,1764,441,121,], axis=-1, )
paddle.nn.functional.pad(Tensor([5, 48, 48, 372828],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([5100, 128, 94, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.split(Tensor([2, 10, 214748365],"float32"), list[4624,1156,289,81,], axis=-1, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([2, 1073741824, 2],"float32"), list[100,300,], axis=1, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[176,176,], axis=1, )
paddle.nn.functional.pad(Tensor([51388, 27860, 3],"float32"), list[1,0,], value=6, mode="constant", data_format="NCL", )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 2982617, 1],"float32"), )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[244,244,], axis=1, )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[32,32,], axis=1, )
paddle.nn.functional.pad(Tensor([52, 7, 11799361],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.split(Tensor([2, 10956550, 14, 14],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.split(Tensor([2, 116106, 136, 136],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 1217395, 42, 42],"float32"), list[4,1,], axis=1, )
paddle.nn.functional.pad(Tensor([53722, 79949, 1],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([5462, 32, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([5549, 16, 9, 7, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([55584, 25757, 3],"float32"), list[1,0,], value=5, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([57266231, 25, 3],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.split(Tensor([2, 14, 153391690],"float32"), list[3600,900,225,64,], axis=-1, )
paddle.nn.functional.pad(Tensor([599187, 1, 32, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([6, 715827883],"float32"), list[1,0,1,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([638, 64, 376, 280],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([6473, 24, 18, 1536],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.split(Tensor([2, 17747799, 11, 11],"float32"), list[1,32,], axis=1, )
paddle.nn.functional.pad(Tensor([64866, 22071, 3],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([65027, 1, 257, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([65209, 21955, 3],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([65536, 1, 256, 256],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([65536, 1, 256, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([65536, 1, 256, 256],"float32"), list[2,2,2,2,], )
paddle.Tensor.__truediv__(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([894785, 3, 40, 40, 1],"float32"), )
paddle.nn.functional.pad(Tensor([673, 3, 32, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([69756, 20524, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([699051, 1, 32, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([7, 12, 42, 1217395],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.split(Tensor([2, 21474837, 10, 10],"float32"), list[1,32,], axis=1, )
paddle.nn.functional.pad(Tensor([7, 12, 99865, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 24, 84, 304349],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 24, 99865, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 168, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 21, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 42, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 48, 168, 76088],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 48, 99865, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 6, 21, 4869578],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([7, 6, 99865, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.split(Tensor([2, 2386093, 30, 30],"float32"), list[4,1,], axis=1, )
paddle.nn.functional.pad(Tensor([706, 3, 32, 224, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([715827883, 1, 2, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 1, 3, 2],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[112,112,], axis=1, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[12,12,], axis=1, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[16,16,], axis=1, )
paddle.nn.functional.pad(Tensor([715827883, 6],"float32"), list[1,0,1,0,], mode="constant", value=0, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[24,24,], axis=1, )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[58,58,], axis=1, )
paddle.nn.functional.pad(Tensor([72379, 19780, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.split(Tensor([2, 2739138, 28, 28],"float32"), num_or_sections=list[88,88,], axis=1, )
paddle.nn.functional.pad(Tensor([735, 16, 56, 68, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([738, 3, 32, 224, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([775, 3, 32, 224, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([79625, 17980, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([8, 21846, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([8, 32, 21846, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([8, 32, 32, 524288],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([816, 3, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.split(Tensor([2, 32, 524288, 128],"float16"), 3, axis=2, )
paddle.nn.functional.pad(Tensor([819, 16, 61, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([826, 3, 32, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([8323, 24, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([833, 16, 56, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([833, 16, 60, 56, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([836, 3, 32, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([838861, 1, 32, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([840, 3, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([847, 16, 56, 59, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([847, 16, 59, 56, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([861, 16, 56, 58, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([865, 3, 32, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([877, 16, 57, 56, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([89478486, 2, 3, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([89478486, 3, 4, 4],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([89478486, 3, 4, 4],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([89478486, 3, 4, 4],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([894785, 1, 3, 40, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([894785, 1, 40, 40, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([9321, 40, 30, 384],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[352,352,], axis=1, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[488,488,], axis=1, )
paddle.nn.functional.pad(Tensor([97385, 14701, 3],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[64,64,], axis=1, )
paddle.split(Tensor([2, 43826197, 7, 7],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.nn.functional.pad(Tensor([973916, 4410, 1],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.split(Tensor([2, 4869578, 21, 21],"float32"), list[4,1,], axis=1, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.Tensor.__truediv__(Tensor([12, 3, 5965233, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.split(Tensor([2, 536870912, 4],"float32"), list[100,300,], axis=1, )
paddle.split(Tensor([2, 5368710, 20, 20],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 5948709, 19, 19],"float32"), list[1,32,], axis=1, )
paddle.split(Tensor([2, 596524, 60, 60],"float32"), list[4,1,], axis=1, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.split(Tensor([2, 6628036, 18, 18],"float32"), list[1,32,], axis=1, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 131073, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.split(Tensor([2, 9544372, 15, 15],"float32"), list[4,1,], axis=1, )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([2147483649],"float64"), )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="constant", value=0, data_format="NCDHW", )
paddle.split(Tensor([20, 332428, 19, 34],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 5195, 152, 272],"float16"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([20, 5195, 152, 272],"float32"), num_or_sections=list[18,9,], axis=1, )
paddle.split(Tensor([2097153, 1024],"int64"), 8, )
paddle.split(Tensor([2147483649],"int64"), 2, axis=0, )
paddle.split(Tensor([2147483649],"int64"), list[100,100,100,100,100,100,100,100,], )
paddle.split(Tensor([2147483649],"int64"), list[100,100,100,100,], )
paddle.split(Tensor([2147483649],"int64"), list[100,100,], )
paddle.split(Tensor([2147483649],"int64"), list[100,], )
paddle.split(Tensor([2147483649],"int64"), list[33,99,], )
paddle.split(Tensor([2147483649],"int64"), list[4,8,8,20,32,88,20,20,72,12,36,16,4,8,44,12,], )
paddle.split(Tensor([2147483649],"int64"), list[5,4,0,4,], )
paddle.split(Tensor([2147483649],"int64"), list[96,32,], )
paddle.split(Tensor([2147483649],"int64"), list[96,], )
paddle.split(Tensor([2147483649],"int64"), list[98,], )
paddle.nn.functional.pad(x=Tensor([3, 477218589, 3],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.Tensor.__truediv__(Tensor([12, 3579140, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.nn.functional.pad(x=Tensor([477218589, 3, 3],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.split(Tensor([24, 10923, 128, 128],"float16"), 2, axis=1, )
paddle.split(Tensor([24, 10923, 128, 128],"float32"), 2, axis=1, )
paddle.split(Tensor([24, 1376593, 13, 10],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 1657009, 12, 9],"float32"), list[11,32,], axis=1, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.split(Tensor([24, 21510, 104, 80],"float32"), list[11,32,], axis=1, )
paddle.split(Tensor([24, 23547, 100, 76],"float32"), list[11,32,], axis=1, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217728, 4, 4],"float32"), upscale_factor=3, )
paddle.tensordot(Tensor([429496730, 1, 1, 5],"float64"), Tensor([429496730, 5, 1, 1],"float64"), list[list[3,],list[],], )
paddle.split(Tensor([24, 414253, 24, 18],"float32"), list[11,32,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.nn.functional.pixel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([1, 1, 1, 17179870],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.Tensor.__truediv__(Tensor([12, 894785, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.nn.functional.pixel_shuffle(Tensor([4, 33554433, 4, 4],"float64"), 3, "NCHW", None, )
paddle.split(Tensor([28, 153391690],"float32"), 3, axis=-1, )
paddle.split(Tensor([282600, 15199],"float32"), 3, axis=-1, )
paddle.split(Tensor([291, 2, 400, 136, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([292, 1, 400, 192, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([292, 400, 192, 192],"float32"), list[100,300,], axis=1, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 4, 67108865],"float64"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 67108865, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.split(Tensor([3, 143165577, 5],"float64"), num_or_sections=2, axis=1, )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 33554433, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.split(Tensor([3, 4, 89478486, 4],"float32"), list[200,300,], axis=2, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.split(Tensor([300, 14316558],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.split(Tensor([304, 14128182],"float32"), list[2,2,1,], axis=-1, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 178956971],"float16"), 3, "NCHW", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[1,2,],list[3,],], )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 178956971],"float32"), 3, "NCHW", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.split(Tensor([318, 1, 400, 184, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([318, 400, 184, 184],"float32"), list[100,300,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.split(Tensor([32, 1109238, 11, 11],"float32"), list[80,32,], axis=1, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 349526, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 178956971, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 178956971, 12],"float32"), 3, "NCHW", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.split(Tensor([32, 596524, 15, 15],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 684785, 14, 14],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([32, 794188, 13, 13],"float32"), list[80,32,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 17179870],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.split(Tensor([32, 932068, 12, 12],"float32"), list[80,32,], axis=1, )
paddle.split(Tensor([3200, 671089],"int64"), 2, axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.split(Tensor([342, 1024, 12288],"bfloat16"), num_or_sections=3, axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([2147483648, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([2147483648, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 17179870],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.split(Tensor([4, 1, 1073741824],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([4, 1, 1073741824],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.split(Tensor([4, 178956971, 6],"bool"), num_or_sections=3, axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.split(Tensor([4, 178956971, 6],"int32"), list[2,2,2,], axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), list[6,], axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), num_or_sections=3, axis=1, )
paddle.split(Tensor([4, 178956971, 6],"int32"), num_or_sections=list[2,2,2,], axis=1, )
paddle.split(Tensor([4, 2, 536870912],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.split(Tensor([4, 2, 536870912],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), list[list[3,],list[2,1,0,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.split(Tensor([4, 3, 357913942],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[3,0,], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[3,1,2,], )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.split(Tensor([4, 536870913],"int64"), 2, axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.split(Tensor([4294967295],"bool"), list[27648,6912,1728,432,108,30,], )
paddle.nn.functional.poisson_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.split(Tensor([4294967295],"bool"), list[28800,7200,1800,450,117,35,], )
paddle.split(Tensor([4294967295],"bool"), list[4800,1200,300,80,20,], )
paddle.nn.functional.poisson_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.split(Tensor([4294967295],"bool"), list[6408,1620,414,108,30,], )
paddle.split(Tensor([4294967295],"float32"), 100, )
paddle.split(Tensor([4294967295],"float32"), 16, axis=-1, )
paddle.split(Tensor([4294967295],"float32"), 48, axis=-1, )
paddle.split(Tensor([4294967295],"float32"), num_or_sections=4, axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.split(Tensor([512, 10700, 28, 28],"float16"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 10700, 28, 28],"float32"), num_or_sections=list[60,60,], axis=1, )
paddle.split(Tensor([512, 171197, 7, 7],"float16"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 171197, 7, 7],"float32"), num_or_sections=list[232,232,], axis=1, )
paddle.split(Tensor([512, 42800, 14, 14],"float16"), num_or_sections=list[116,116,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.split(Tensor([512, 42800, 14, 14],"float32"), num_or_sections=list[116,116,], axis=1, )
paddle.split(Tensor([512, 8388608],"float32"), 48, axis=-1, )
paddle.split(Tensor([52, 7, 11799361],"float32"), list[37,37,128,], axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[100,300,], axis=2, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[0,], )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[196,300,], axis=2, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[3,0,], )
paddle.split(Tensor([6, 1, 178956971, 4],"float32"), list[200,300,], axis=2, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[3,1,2,], )
paddle.split(Tensor([6, 1, 19419, 192, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 21144, 184, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 1, 23110, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.split(Tensor([6, 1, 357913942, 2],"float32"), list[100,300,], axis=2, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.split(Tensor([6, 1, 65075263, 11],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 1, 65075263, 11],"float32"), list[196,300,], axis=2, )
paddle.split(Tensor([6, 1, 65075263, 11],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 1145325, 25, 25],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 1145325, 25, 25],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 16, 11184811, 4],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 16, 559241, 80],"float32"), list[176,300,], axis=2, )
paddle.split(Tensor([6, 2, 178956971, 2],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 19351, 136, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 357913942, 1],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 2, 357913942, 1],"float32"), list[198,300,], axis=2, )
paddle.split(Tensor([6, 2, 4473925, 80],"float32"), list[200,900,], axis=2, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[192,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[198,300,], axis=2, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 2, 89478486, 4],"float32"), list[200,900,], axis=2, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.split(Tensor([6, 286332, 50, 50],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.split(Tensor([6, 4, 44739243, 4],"float32"), list[200,300,], axis=2, )
paddle.split(Tensor([6, 49, 400, 192, 192],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 53, 400, 184, 184],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 58, 400, 176, 176],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6, 71583, 100, 100],"float16"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 71583, 100, 100],"float32"), num_or_sections=list[36,18,], axis=1, )
paddle.split(Tensor([6, 97, 400, 136, 136],"float32"), list[100,300,], axis=2, )
paddle.split(Tensor([6380, 673193],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.split(Tensor([64, 13, 5162221],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float16"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), list[396,396,396,396,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), list[792,792,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[512,128,], axis=1, )
paddle.split(Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[512,64,], axis=1, )
paddle.split(Tensor([64, 14, 4793491],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([64, 14, 4793491],"float32"), list[2304,576,144,36,], axis=-1, )
paddle.split(Tensor([64, 15, 4473925],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.split(Tensor([64, 15, 4473925],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 15, 4473925],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.split(Tensor([64, 16, 4194304],"float32"), list[1600,400,100,25,], axis=-1, )
paddle.split(Tensor([64, 16, 4194304],"float32"), list[1936,484,121,36,], axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.split(Tensor([64, 17, 3947581],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 17, 3947581],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.split(Tensor([64, 18, 3728271],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.split(Tensor([64, 18, 3728271],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.split(Tensor([64, 19, 3532046],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.split(Tensor([64, 19, 3532046],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.split(Tensor([64, 20, 3355444],"float32"), list[1024,256,64,16,], axis=-1, )
paddle.split(Tensor([64, 20, 3355444],"float32"), list[1296,324,81,25,], axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.split(Tensor([64, 207127, 18, 18],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.split(Tensor([64, 207127, 18, 18],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 4],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float16"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[20,20,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[60,60,60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[60,60,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), list[96,96,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), num_or_sections=list[64,16,], axis=1, )
paddle.split(Tensor([64, 21400, 56, 56],"float32"), num_or_sections=list[64,32,], axis=1, )
paddle.split(Tensor([64, 262144, 16, 16],"float16"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 262144, 16, 16],"float32"), num_or_sections=list[96,96,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), num_or_sections=list[256,32,], axis=1, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.split(Tensor([64, 342393, 14, 14],"float16"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[120,120,120,120,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[156,156,156,156,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[240,240,240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[240,240,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[312,312,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[52,52,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), list[80,80,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), num_or_sections=list[256,32,], axis=1, )
paddle.split(Tensor([64, 342393, 14, 14],"float32"), num_or_sections=list[256,64,], axis=1, )
paddle.split(Tensor([64, 466034, 12, 12],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 5350, 112, 112],"float16"), list[16,16,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.split(Tensor([64, 5350, 112, 112],"float16"), list[64,64,64,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.split(Tensor([64, 5350, 112, 112],"float32"), list[16,16,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[0,],list[],], )
paddle.split(Tensor([64, 5350, 112, 112],"float32"), list[64,64,64,], axis=1, )
paddle.split(Tensor([64, 554619, 11, 11],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 554619, 11, 11],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.split(Tensor([64, 65536, 32, 32],"float16"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 65536, 32, 32],"float32"), num_or_sections=list[48,48,], axis=1, )
paddle.split(Tensor([64, 671089, 10, 10],"float16"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 671089, 10, 10],"float32"), num_or_sections=list[192,192,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), 4, 1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float16"), num_or_sections=list[128,64,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), 4, 1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), list[112,112,112,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), list[168,168,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), list[28,28,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), num_or_sections=list[128,32,], axis=1, )
paddle.split(Tensor([64, 85599, 28, 28],"float32"), num_or_sections=list[128,64,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.split(Tensor([715827883, 3],"float64"), 3, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 85899346],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.split(Tensor([8, 128, 4194304],"float32"), 3, axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.split(Tensor([8, 32768, 128, 128],"float32"), num_or_sections=9, axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 17179870, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.split(Tensor([8550, 502336],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.split(Tensor([900, 4772186],"float32"), tuple(1,1,1,1,), axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([124, 11045, 56, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 176719, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([87382, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([124, 44180, 28, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([124, 706875, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([128, 10700, 56, 56],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.split(x=Tensor([128, 171197, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([128, 42800, 28, 28],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.split(x=Tensor([128, 684785, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([1, 1, 85899346, 1],"float64"), list[list[3,],list[],], )
paddle.split(x=Tensor([2, 1073741825],"float64"), num_or_sections=tuple(2,1,), axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[20,60,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[32,96,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([4, 1369569, 28, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[256,768,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([4, 21913099, 7, 7],"float32"), num_or_sections=list[80,240,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[10,30,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[16,48,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[24,72,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([4, 342393, 56, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[128,384,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[40,120,], axis=1, )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[64,192,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.split(x=Tensor([4, 5478275, 14, 14],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 131073, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.split(x=Tensor([60, 1460874, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.split(x=Tensor([60, 1460874, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.split(x=Tensor([60, 22827, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.split(x=Tensor([60, 22827, 56, 56],"float32"), num_or_sections=list[48,144,], axis=1, )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 85899346, 1],"float64"), Tensor([5, 5, 85899346, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.split(x=Tensor([60, 365219, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([60, 365219, 14, 14],"float32"), num_or_sections=list[192,576,], axis=1, )
paddle.split(x=Tensor([60, 91305, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([60, 91305, 28, 28],"float32"), num_or_sections=list[96,288,], axis=1, )
paddle.split(x=Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[288,864,], axis=1, )
paddle.split(x=Tensor([64, 1369569, 7, 7],"float32"), num_or_sections=list[384,1152,], axis=1, )
paddle.split(x=Tensor([64, 21400, 56, 56],"float32"), num_or_sections=list[36,108,], axis=1, )
paddle.split(x=Tensor([64, 342393, 14, 14],"float32"), num_or_sections=list[144,432,], axis=1, )
paddle.split(x=Tensor([64, 85599, 28, 28],"float32"), num_or_sections=list[72,216,], axis=1, )
paddle.split(x=Tensor([715827883, 3],"float64"), num_or_sections=2, )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 349526, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([1, 85899346, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.strided_slice(x=Tensor([3, 23860930, 5, 6],"float64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 23860930, 5, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.strided_slice(x=Tensor([3, 47721859, 5, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 47721859, 5, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 85899346, 5, 1],"float64"), Tensor([5, 85899346, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=3, )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[1,1,1,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[1,3,2,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[2,2,2,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[2,3,3,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1398102, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=3, )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=list[3,3,3,], )
paddle.tensordot(Tensor([85899346, 1, 5, 5],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=tuple(3,3,3,), )
paddle.subtract(Tensor([1, 1, 143165577, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1398102],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.subtract(Tensor([1, 1, 30, 143165577],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 143165577, 30],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 30, 143165577],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 256, 5592406],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 5592406, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 65536, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 5592406],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 3, 32, 44739243],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 3, 44739243, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 4194304, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 44739243],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 44739243, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([1, 3, 5592406, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.Tensor.__truediv__(Tensor([13, 3, 224, 224],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.subtract(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=5, )
paddle.subtract(Tensor([1, 4294967295],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([1, 4294967295],"float32"), Tensor([4, 4294967295],"float32"), )
paddle.Tensor.__truediv__(Tensor([13, 3, 224, 224],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.subtract(Tensor([1, 65536, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.Tensor.__truediv__(Tensor([13, 3, 224, 224],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.subtract(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.subtract(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.subtract(Tensor([10, 15],"float32"), Tensor([10, 429496730],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.subtract(Tensor([10, 15],"float32"), Tensor([286331153, 15],"float32"), )
paddle.subtract(Tensor([10, 15],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([10, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([10, 15],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.subtract(Tensor([10, 429496730],"float32"), Tensor([15],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.subtract(Tensor([100, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.subtract(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.subtract(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_log_prob", )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.subtract(Tensor([16, 134217728, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.subtract(Tensor([16, 268435456, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([16, 268435456, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.subtract(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), name="Cauchy_log_prob", )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.subtract(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.subtract(Tensor([1],"float64"), Tensor([2147483649],"float64"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), )
paddle.subtract(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.subtract(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), )
paddle.subtract(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), )
paddle.subtract(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.tensordot(Tensor([85899346, 5, 5, 1],"float64"), Tensor([85899346, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.subtract(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), name="Normal_log_prob", )
paddle.tensordot(x=Tensor([143165577, 3, 5],"float64"), y=Tensor([4, 1, 8],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([17895698, 2, 3, 5, 4],"float64"), y=Tensor([17895698, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([17895698, 2, 3, 5, 4],"float64"), y=Tensor([2, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([2, 134217729, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([2, 3, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([7, 134217729, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([7, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([8, 134217729, 4, 2],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([8, 134217729, 4, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 134217729, 4, 2],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 3, 178956971, 2],"float64"), y=Tensor([2, 3, 178956971, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 3, 178956971, 2],"float64"), y=Tensor([8, 7, 178956971, 2],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 3, 178956971, 2],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float64"), y=Tensor([12782641, 3, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float64"), y=Tensor([2, 19173962, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float64"), y=Tensor([8, 7, 19173962, 2],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float64"), y=Tensor([8, 7, 4, 9586981],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 3, 4, 89478486],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 3, 4, 89478486],"float64"), y=Tensor([8, 7, 4, 89478486],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 4, 3, 5],"float64"), y=Tensor([107374183, 4, 1, 5],"float64"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([2, 4, 3, 5],"float64"), y=Tensor([2, 4, 53687092, 5],"float64"), axes=list[0,2,], )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 178956971, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([38347923, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 7, 21913099, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 7, 4, 10956550],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([8, 33554433, 4, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([8, 7, 19173962, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([8, 7, 4, 9586981],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 38347923],"float64"), y=Tensor([7, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 38347923],"float64"), y=Tensor([7, 7, 4, 38347923],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 38347923],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 38347923],"float64"), y=Tensor([8, 7, 4, 38347923],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 76695845, 2],"float64"), y=Tensor([7, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 76695845, 2],"float64"), y=Tensor([7, 7, 76695845, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 76695845, 2],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 76695845, 2],"float64"), y=Tensor([8, 7, 76695845, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([35791395, 4, 3, 5],"float64"), y=Tensor([2, 4, 1, 5],"float64"), axes=list[0,2,], )
paddle.Tensor.__truediv__(Tensor([13, 6585, 224, 224],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.tensordot(x=Tensor([38347923, 7, 4, 2],"float64"), y=Tensor([38347923, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([4, 2, 13421773, 5, 4],"float64"), y=Tensor([2, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 2, 3, 22369622, 4],"float64"), y=Tensor([2, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float64"), y=Tensor([2, 4, 3, 11184811, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float64"), y=Tensor([2, 4, 6710887, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float64"), y=Tensor([2, 8947849, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float64"), y=Tensor([4473925, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 3, 5],"float64"), y=Tensor([268435457, 1, 8],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([4, 3, 5],"float64"), y=Tensor([4, 67108865, 8],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([4, 8947849, 3, 5, 4],"float64"), y=Tensor([2, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 8947849, 3, 5, 4],"float64"), y=Tensor([2, 8947849, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([89478486, 3, 4, 2],"float64"), y=Tensor([2, 3, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([89478486, 3, 4, 2],"float64"), y=Tensor([89478486, 3, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([89478486, 3, 4, 2],"float64"), y=Tensor([89478486, 7, 4, 2],"float64"), axes=list[2,3,], )
paddle.Tensor.__truediv__(Tensor([13, 96, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([87382, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.avg_pool1d(Tensor([13, 1, 330382100],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([13, 2753185, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([16, 1, 268435456],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([16, 2, 134217728],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([16, 2236963, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([178956971, 3, 8],"float32"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([17895698, 2, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 134217729, 8],"float64"), 1, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, 0, True, True, None, )
paddle.subtract(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.subtract(Tensor([2, 3, 3, 238609295],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 134217729, 8],"float64"), 3, 4, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([1073741824, 1, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([1431655765, 3, 1, 1],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 17895698, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 2, 1073741824],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 268435456, 8],"float32"), 2, 2, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 357913942],"float64"), 1, 1, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 178956971, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, 0, True, True, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 715827883, 1],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, 1, False, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 536870912, 1, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 2, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 357913942],"float64"), 3, 4, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 715827883],"float32"), 2, 2, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 357913942, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 715827883],"float32"), 2, None, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 3, 4],"float32"), Tensor([357913942, 3, 1, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=list[0,], )
paddle.subtract(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.subtract(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 67108864, 32],"float32"), 2, None, 0, True, False, None, )
paddle.subtract(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.subtract(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.avg_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=list[0,], )
paddle.nn.functional.avg_pool1d(Tensor([3, 1, 1431655765],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([3, 11930465, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([35791395, 1, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.subtract(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool1d(Tensor([44739243, 3, 32],"float32"), 2, None, 0, True, False, None, )
paddle.subtract(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding=list[0,], )
paddle.nn.functional.avg_pool1d(Tensor([89478486, 3, 8],"float64"), 1, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, 0, True, True, None, )
paddle.nn.functional.avg_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([89478486, 3, 8],"float64"), 3, 4, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(x=Tensor([178956971, 3, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=1, exclusive=False, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 268435456, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.subtract(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.subtract(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=1, exclusive=False, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.subtract(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.avg_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=1, exclusive=False, )
paddle.nn.functional.avg_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.subtract(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 40, 104858],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 42, 99865],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2, 96, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 44, 95326],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2, 96, 2],"float32"), Tensor([2, 96, 22369622],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 65536, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 67651, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 69906, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([1],"float64"), name="Cauchy_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 77673, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 1677722, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 20, 1677722],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1597831, 42, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1626882, 44, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 171798692, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1731842, 40, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1789570, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1988411, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 4, 536870912],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2147483649],"float64"), Tensor([2],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 536870912, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 21913099, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 10, 1677722],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 1677722, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 268435456, 4, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 4, 3, 357913942],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 4, 357913942, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 42949673, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 477218589, 3, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 1677722, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 5, 1677722],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 8, 14, 38347923],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 8, 38347923, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2147483649],"int64"), Tensor([3],"int64"), )
paddle.nn.functional.avg_pool2d(Tensor([105352, 208, 14, 14],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([10700, 512, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([119304648, 4, 3, 3],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 10324441, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 4, 82595525],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 7, 47197443],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1474921, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([13, 2581111, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([134217728, 2, 4, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([134218, 1280, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([14514, 1024, 17, 17],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([14514, 1024, 17, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1561, 1024, 42, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1589, 1024, 44, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 32768, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([22369622, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 4, 65536],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([22369622, 96, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 65536, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 8, 32768],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 256, 8192],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 32, 65536],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 32768, 64],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([286331153, 15],"float32"), Tensor([10, 15],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 64, 32768],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 65536, 32],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 128, 8192, 256],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 16777216, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 262144, 32, 32],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 4096, 256, 256],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 4194304, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 65536, 64, 64],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([167773, 256, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1692, 1024, 40, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1748, 1024, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([19173962, 1, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([1942, 1024, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1056, 14, 145258],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1056, 145258, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 10956550, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1280, 335545, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1280, 5, 335545],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 192, 25, 447393],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 192, 447393, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2048, 209716, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2048, 5, 209716],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 256, 25, 335545],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 256, 335545, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 288, 25, 298262],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 288, 298262, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([2],"float64"), Tensor([2147483649],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), name="Normal_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3435974, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 13, 322639],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 322639, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 13, 312862],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([32],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 312862, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3],"float32"), Tensor([4294967295],"float32"), name="Cauchy_kl_divergence", )
paddle.nn.functional.avg_pool2d(Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3],"float32"), Tensor([4294967295],"float32"), name="Cauchy_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 85899346, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([20752, 1056, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([21400, 1024, 14, 14],"float16"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([21400, 1024, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([22369622, 3, 8, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([23861, 288, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2440323, 1, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([2440323, 1, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 2622, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 2622, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 8, 16384],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 128, 8, 16384],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 20972, 16, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([3],"int64"), Tensor([2147483649],"int64"), )
paddle.nn.functional.avg_pool2d(Tensor([256, 256, 1311, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([10, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([256, 256, 1311, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([100, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([256, 256, 4, 16384],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 256, 4, 16384],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4294967295, 1],"float32"), Tensor([4, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([256, 41944, 8, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 41944, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 64, 16, 16384],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 64, 5243, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 83887, 4, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 83887, 4, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([262144, 1024, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([26844, 256, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([2739138, 8, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), name="Cauchy_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 32537632, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([32],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 35791395, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 40, 35791395],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([3],"float32"), name="Cauchy_kl_divergence", )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 44, 32537632],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([3, 813441, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([3],"float32"), name="Cauchy_log_prob", )
paddle.nn.functional.avg_pool2d(Tensor([3, 813441, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.subtract(Tensor([4294967295],"float32"), Tensor([4, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 14, 9363],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 9363, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 171197, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 256, 56, 9363],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 256, 9363, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 42800, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 512, 28, 9363],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 512, 9363, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 684785, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32768, 128, 32, 32],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([33554432, 1, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([335545, 512, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([349526, 3, 64, 64],"float32"), kernel_size=2, stride=2, )
paddle.subtract(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([34953, 384, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([34953, 512, 3, 80],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([34953, 512, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([34953, 512, 3, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([35792, 192, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 3355444, 4, 80],"float32"), list[4,2,], )
paddle.subtract(Tensor([44739243, 96, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 34953, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 4, 699051],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([43691, 1536, 8, 8],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([43691, 1536, 8, 8],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([48133, 528, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([49637, 512, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([512, 128, 256, 256],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([52676, 104, 28, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([52676, 104, 28, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([5350, 256, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([5592406, 3, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 1198373, 8, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 18725, 64, 64],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 299594, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 1597831, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 16, 1597831],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 3195661, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 32, 798916],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 399458, 64],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 4, 6391321],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 6391321, 4],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 64, 399458],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 798916, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 8, 3195661],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 4793491, 4, 4],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 74899, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([57066, 1536, 7, 7],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([57066, 1536, 7, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 14, 4682],"float16"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 14, 4682],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 17, 3856],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 17, 3856],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 3856, 17],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 3856, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 4682, 14],"float16"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 4682, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 23046, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 23046, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(Tensor([4],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 28, 23046],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 28, 23046],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1048576, 8, 8],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1048576, 8, 8],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 8192],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 8192],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 8192],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 64, 8192],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 8192, 64],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 8192, 64],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 8192, 64],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 8192, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1369569, 7, 7],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1369569, 7, 7],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 5462, 8],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 5462, 8],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([1431655765, 3],"float32"), dx=None, axis=-1, )
paddle.subtract(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), name="Normal_log_prob", )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 2147483648],"float32"), dx=None, axis=-1, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 6242, 7],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 7, 6242],"float16"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([1073741825, 2],"int64"), y=Tensor([2, 2],"int64"), )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([715827883, 3],"float64"), dx=None, axis=-1, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 7, 6242],"float32"), kernel_size=7, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 8, 5462],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 1536, 8, 5462],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 16384, 64, 64],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 16384, 64, 64],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 16384, 64, 64],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 16384, 64, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 208, 14, 23046],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 208, 23046, 14],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 232211, 17, 17],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 1073741825],"float64"), y=Tensor([2, 2],"float64"), )
paddle.nn.functional.avg_pool2d(Tensor([64, 232211, 17, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 279621, 3, 80],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 279621, 3, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 342393, 14, 14],"float16"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 342393, 14, 14],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 342393, 14, 14],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 384, 35, 4994],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 1073741825],"int64"), y=Tensor([2, 2],"int64"), )
paddle.nn.functional.avg_pool2d(Tensor([64, 384, 4994, 35],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 1639, 80],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 1639, 80],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 3, 43691],"float16"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 3, 43691],"float32"), kernel_size=list[3,2,], stride=list[3,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 54783, 35, 35],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 85599, 28, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 85599, 28, 28],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([65536, 1024, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([4294967295],"float32"), dx=None, axis=1, )
paddle.subtract(x=Tensor([2, 2147483648],"float32"), y=Tensor([2, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 2236963, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 13108, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 3, 349526],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8192, 128, 64, 64],"float16"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8192, 128, 64, 64],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2147483648],"int32"), y=Tensor([2, 2],"int32"), )
paddle.nn.functional.avg_pool2d(Tensor([8192, 128, 64, 64],"float32"), kernel_size=1, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8192, 128, 64, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2],"float32"), y=Tensor([2, 2147483648],"float32"), )
paddle.subtract(x=Tensor([2, 2],"float32"), y=Tensor([2147483648, 2],"float32"), )
paddle.nn.functional.avg_pool2d(Tensor([8192, 128, 64, 64],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([83887, 128, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.nn.functional.avg_pool2d(Tensor([83887, 128, 8, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.nn.functional.avg_pool2d(Tensor([83887, 128, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2],"int32"), y=Tensor([2, 2147483648],"int32"), )
paddle.nn.functional.avg_pool2d(Tensor([83887, 2048, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([83887, 256, 4, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2],"int32"), y=Tensor([2147483648, 2],"int32"), )
paddle.nn.functional.avg_pool2d(Tensor([83887, 256, 4, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([83887, 64, 16, 50],"float16"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2, 2],"int64"), y=Tensor([1073741825, 2],"int64"), )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float32"), kernel_size=2, stride=2, )
paddle.subtract(x=Tensor([2, 2],"int64"), y=Tensor([2, 1073741825],"int64"), )
paddle.nn.functional.avg_pool2d(Tensor([9131, 384, 35, 35],"float16"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.subtract(x=Tensor([2147483648, 2],"float32"), y=Tensor([2, 2],"float32"), )
paddle.nn.functional.avg_pool2d(x=Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.subtract(x=Tensor([2147483648, 2],"int32"), y=Tensor([2, 2],"int32"), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], )
paddle.subtract(x=Tensor([2147483649],"float64"), y=Tensor([3],"float64"), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.subtract(x=Tensor([3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.sum(Tensor([13, 330382100],"int32"), axis=1, dtype="int64", )
paddle.sum(Tensor([2, 1073741825],"float64"), -1, keepdim=True, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.sum(Tensor([2, 1073741825],"float64"), 0, keepdim=True, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 4, 89478486],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.sum(Tensor([2, 1073741825],"float64"), None, keepdim=False, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.sum(Tensor([2, 1073741825],"float64"), None, keepdim=True, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 89478486, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.sum(Tensor([429496730, 5],"float64"), -1, keepdim=True, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.sum(Tensor([429496730, 5],"float64"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([429496730, 5],"float64"), None, keepdim=False, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.sum(Tensor([429496730, 5],"float64"), None, keepdim=True, dtype="float32", )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 67108865, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.Tensor.__truediv__(Tensor([14316558, 10, 15, 2],"float32"), Tensor([2, 1, 1, 2],"float32"), )
paddle.nn.functional.avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], exclusive=False, )
paddle.sum(Tensor([613566757, 7],"int32"), axis=1, dtype="int64", )
paddle.nn.functional.avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,], ceil_mode=True, exclusive=False, )
paddle.nn.functional.avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([44739243, 3, 4, 4],"float64"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=tuple(0,0,), )
paddle.nn.functional.avg_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool3d(Tensor([127827, 1, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([127827, 1, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.sum(x=Tensor([2, 2147483648],"float32"), dtype="float64", )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.sum(x=Tensor([2147483648, 2],"float32"), dtype="float64", )
paddle.nn.functional.avg_pool3d(Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([1073741824, 4],"float32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([1073741824, 4],"float32"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([1073741824, 4],"int32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([1073741824, 4],"int32"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 4],"float32"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.take(Tensor([3, 4],"float32"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 4],"float64"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.take(Tensor([3, 4],"float64"), Tensor([268435457, 8],"int64"), mode="clip", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.take(Tensor([3, 4],"float64"), Tensor([268435457, 8],"int64"), mode="wrap", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.take(Tensor([3, 4],"float64"), Tensor([5, 429496730],"int64"), mode="clip", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 4],"float64"), Tensor([5, 429496730],"int64"), mode="wrap", )
paddle.take(Tensor([3, 4],"float64"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.take(Tensor([3, 4],"int32"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.Tensor.__truediv__(Tensor([14316558, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.take(Tensor([3, 4],"int32"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 4],"int64"), Tensor([2, 1073741825],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 4],"int64"), Tensor([715827883, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([2, 715827883],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 715827883],"int64"), mode="clip", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 715827883],"int64"), mode="wrap", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 8],"int64"), mode="clip", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"float64"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"int64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([3, 715827883],"int64"), Tensor([2, 715827883],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([5, 8],"int64"), mode="clip", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([536870913, 8],"int64"), mode="clip", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([536870913, 4],"float64"), Tensor([536870913, 8],"int64"), mode="wrap", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([536870913, 4],"int64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.take(Tensor([536870913, 4],"int64"), Tensor([536870913, 3],"int64"), mode="raise", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.tanh(Tensor([64, 26, 512, 127, 40],"float16"), )
paddle.tanh(Tensor([64, 26, 512, 127, 40],"float32"), )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 127827, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 298262, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 3, 1600, 298262],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 3, 68174085, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 40, 894785],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 5113057, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 5113057, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 127827, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 3, 68174085],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 40, 5113057],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 5113057, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 894785, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 127827, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 127827, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 42609, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 42609, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([383480, 1, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([383480, 1, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([10700, 2048, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([10700, 256, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 7, 9363],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 9363, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 5350, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 7, 9363],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 9363, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 42800, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2739138, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 342393, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 4194304],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 128, 33554432],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 16777216, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 16777216, 256],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 3728271, 1152],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 8388608, 512],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 8388608, 512],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1048576, 8, 16, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1048577, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1048577, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1048577, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([107374183, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1242757, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1242757, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1242757, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1242757, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1242757, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1242757, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([131072, 128, 256],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1398102, 24, 16, 8],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 1048577, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 1048577, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1048577, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1048577, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048576],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048576],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048576],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048576],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048576],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 524289],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 524289],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float16"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.cumulative_trapezoid(y=Tensor([715827883, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.diag(Tensor([2147483649],"float64"), padding_value=8, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097152, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097152, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097152, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.diag(Tensor([2147483649],"int64"), padding_value=-8, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097152, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097152, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 2097152, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 2097152, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 2097152, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 2097152, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 2097152, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 2097152, 16, 8],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 24, 1398102, 8],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 24, 16, 699051],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 24, 16, 8],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16, 24, 16, 8],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([4294967295],"float32"), Tensor([24],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16384, 1024, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([16777216, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([16777216, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 1073741824],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 1073741824],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([4294967295],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([4294967295],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([4294967295],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.diag(Tensor([2147483649],"int64"), padding_value=8.0, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 3],"float32"), Tensor([4294967295],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 715827883, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 715827883, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 119304648, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 119304648, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 119304648, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 119304648, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 119304648, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 119304648, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([2147483649],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([2147483649],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 89478486],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 4, 89478486],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 89478486, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 89478486, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 89478486, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 89478486, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 357913942, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 357913942, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([2, 4, 3, 89478486],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 89478486, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 89478486, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 89478486, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 89478486, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 89478486, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 89478486, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 67108865, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 67108865, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 67108865, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 67108865, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2097152, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2097152, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2097152, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2097152, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([2097152, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097152, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2485514, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2485514, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2485514, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2485514, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2485514, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2485514, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([29128, 128, 1152],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([30, 143165577],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([4294967295],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([4294967295],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([4294967295],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([4294967295],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([4294967295],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([4294967295],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([4294967295],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([4294967295],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 71583],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 71583],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 71583],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 71583],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 59653, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 59653, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.divide(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 59653, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.divide(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([4294967295],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 47722, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 47722, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.prelu(Tensor([104, 128, 56, 56],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.batch_norm(Tensor([30, 47722, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 47722, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([35792, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([35792, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([35792, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([35792, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([4, 1073741824],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 1864136, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 1864136, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 1864136, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 1864136, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 1864136, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 1864136, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 2097152, 16, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([4294967295],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 33554432, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 3728271, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 3728271, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 3728271, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 3728271, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 3728271, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 3728271, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 14913081],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 14913081],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 14913081],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 14913081],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 14913081],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 14913081],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.prelu(Tensor([104, 13169, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 210703, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.divide(Tensor([1, 1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.divide(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7456541],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7456541],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7456541],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7456541],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7456541],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7456541],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3728271, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.divide(Tensor([1, 3],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3728271, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3728271, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3728271, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3728271, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3728271, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 7456541, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 7456541, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 7456541, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 7456541, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 7456541, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 7456541, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 134217728],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 16, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 16, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 16, 8388608],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 4194304, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([44739243, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([44739243, 3, 4, 4],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([44739243, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([44739243, 3, 4, 4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), Tensor([4],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([59652324, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([59652324, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([59652324, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([59652324, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([59652324, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([59652324, 4, 3, 3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), Tensor([3],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([65536, 128, 512],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([715827883, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([715827883, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.divide(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 1048577, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 2097152, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([4294967295],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.divide(Tensor([1, 4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.divide(Tensor([1, 4294967295],"float32"), Tensor([1, 3],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([2147483649],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([2147483649],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.divide(Tensor([10, 12],"float32"), Tensor([10, 429496730],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2097153],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 4194304],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.divide(Tensor([10, 12],"float32"), Tensor([357913942, 12],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2097153, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.divide(Tensor([10, 12],"float64"), Tensor([10, 214748365],"float64"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 4194304, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.divide(Tensor([10, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.nn.functional.batch_norm(Tensor([8192, 1024, 512],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 1073741825],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 1073741825],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 1073741825],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741824],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([4294967295],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([4294967295],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float32"), running_mean=Tensor([4294967295],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 536870913],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 536870913],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 536870913],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 536870913],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 536870913],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([2147483649],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([2147483649],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 3],"float64"), running_mean=Tensor([2147483649],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 178956971, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 178956971, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 178956971, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 178956971, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 178956971, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([357913942, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([357913942, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([357913942, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([357913942, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([357913942, 1, 2, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 3],"float64"), running_mean=Tensor([1],"float64"), running_var=Tensor([1],"float64"), weight=Tensor([1],"float64"), bias=Tensor([1],"float64"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([477218589, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 238609295, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 238609295],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 4294967295],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([715827883, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1, 4294967295],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 3],"float32"), Tensor([1431655765, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1, 4294967295],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1431655765, 3],"float32"), Tensor([1, 3],"float32"), Tensor([6, 3, 3],"float32"), Tensor([1, 6],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([2147483649, 1],"float64"), Tensor([3, 2],"float64"), Tensor([4, 1, 2],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1431655765],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([2147483648, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 1431655765],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([2147483648, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 1073741824],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4294967295],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1073741824, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 536870912, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([1073741825, 2],"float64"), Tensor([4, 1, 2],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([3, 2],"float64"), Tensor([1073741825, 1, 2],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([3, 2],"float64"), Tensor([4, 1, 2],"float64"), Tensor([1, 2147483649],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([3, 2],"float64"), Tensor([4, 1, 2],"float64"), Tensor([536870913, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([3, 2],"float64"), Tensor([4, 1, 536870913],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([3, 2],"float64"), Tensor([4, 268435457, 2],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float64"), Tensor([3, 715827883],"float64"), Tensor([4, 1, 2],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), Tensor([4, 1, 2],"float64"), Tensor([1, 4],"float64"), None, )
paddle.nn.functional.bilinear(Tensor([4294967295, 1],"float32"), Tensor([3, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([1073741824, 4],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 1073742, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([1, 4294967295],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([4294968, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 5, 858994],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 4],"float32"), Tensor([214748365, 5, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 858993459],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([5, 858993459],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([858993459, 5],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 143165577, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2147483649],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2],"float64"), label=Tensor([1, 1, 2147483649],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.prelu(Tensor([104, 256, 14, 14],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2],"float64"), label=Tensor([1, 1073741825, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.prelu(Tensor([104, 52676, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 2],"float64"), label=Tensor([1073741825, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 143165577],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 143165577, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 30, 143165577],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 4772186, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 30],"float32"), Tensor([4772186, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 42949673],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 2147483648, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 100, 42949673],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([1, 2147483648, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.divide(Tensor([10, 214748365],"float64"), Tensor([10, 12],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 2],"float32"), Tensor([21474837, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1073741824, 4],"float32"), Tensor([1, 200, 4],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1073741825, 2],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 10],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 12544],"float32"), Tensor([1, 4294967295],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 12544],"float32"), Tensor([342393, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 153391690, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 22369622],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 390451573, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 22369622],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 390451573, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([2033602, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 22369622],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 11],"float32"), Tensor([1, 196, 11],"float32"), weight=Tensor([1, 196, 21913099],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 11],"float32"), Tensor([1, 196, 11],"float32"), weight=Tensor([1, 390451573, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 11],"float32"), Tensor([1, 196, 21913099],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 11],"float32"), Tensor([1, 390451573, 11],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 11],"float32"), Tensor([1992100, 196, 11],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 21913099],"float32"), Tensor([1, 196, 11],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.divide(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 11],"float32"), Tensor([1, 200, 11],"float32"), weight=Tensor([1, 200, 21474837],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 11],"float32"), Tensor([1, 200, 11],"float32"), weight=Tensor([1, 390451573, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 11],"float32"), Tensor([1, 200, 21474837],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 11],"float32"), Tensor([1, 390451573, 11],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 11],"float32"), Tensor([1952258, 200, 11],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 21474837],"float32"), Tensor([1, 200, 11],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 21474837],"float32"), Tensor([1, 200, 4],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 4],"float32"), Tensor([1, 1073741824, 4],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 4],"float32"), Tensor([1, 200, 21474837],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 4],"float32"), Tensor([1, 200, 4],"float32"), weight=Tensor([1, 1073741824, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 4],"float32"), Tensor([1, 200, 4],"float32"), weight=Tensor([1, 200, 21474837],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 4],"float32"), Tensor([5368710, 200, 4],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 2147483648, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 153391690],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 153391690, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 153391690],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 4294967295],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 4294967295, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([4294967295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([5478275, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 390451573, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 390451573, 11],"float32"), Tensor([1, 196, 11],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 390451573, 11],"float32"), Tensor([1, 200, 11],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 4294967295],"float32"), Tensor([1, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 4294967295],"float32"), Tensor([1, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 4772186, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 15339169, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 15339169],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 15339169, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 15339169],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 429496730],"float32"), reduction="mean", )
paddle.divide(Tensor([10, 429496730],"float32"), Tensor([10, 12],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 429496730, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([4294967295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([5478275, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 12544],"float32"), Tensor([100, 42949673],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 12544],"float32"), Tensor([342393, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 42949673],"float32"), Tensor([100, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10032, 428127],"float32"), Tensor([10032, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10032, 80],"float32"), Tensor([10032, 428127],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10032, 80],"float32"), Tensor([53687092, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100352, 42800],"float32"), Tensor([100352, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100352, 80],"float32"), Tensor([100352, 42800],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100352, 80],"float32"), Tensor([53687092, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1024, 4194304],"float32"), Tensor([1024, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1024, 80],"float32"), Tensor([1024, 4194304],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1024, 80],"float32"), Tensor([53687092, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 1447092, 28],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 1447092],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([106, 1447092, 28],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([106, 28, 1447092],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([106, 1, 40518560],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([106, 40518560, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([4294967295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([5478275, 28, 28],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1073741825, 1, 2],"float64"), label=Tensor([1, 1, 2],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1073741825, 2],"float64"), Tensor([5, 2],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 13944700, 28],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.divide(Tensor([104, 128],"float32"), Tensor([104, 41297763],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([11, 1, 390451573],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([11, 390451573, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([4294967295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([11, 14, 27889399],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([11, 27889399, 14],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([21913099, 14, 14],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 27889399],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 27889399, 14],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 13944700],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([11, 13944700, 28],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.divide(Tensor([104, 128],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([11, 28, 13944700],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([11, 1, 390451573],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([11, 390451573, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([4294967295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([5478275, 28, 28],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([110484],"float32"), Tensor([4294967295],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 11185, 20, 20, 80],"float32"), Tensor([12, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 223697, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1193047],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1193047],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1193047],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 11930465, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 11930465, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3579140, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([14316558, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 3, 10, 10, 1193047],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 3, 10, 149131, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 3, 149131, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([12, 44740, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 80],"float32"), Tensor([178957, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 11930465, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 149131, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 11930465, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 149131, 10, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 298262],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 5965233, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 5965233, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 894785, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([3579140, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 298262],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 298262],"float32"), Tensor([12, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 80],"float32"), Tensor([12, 11185, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 80],"float32"), Tensor([12, 3, 20, 20, 298262],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 80],"float32"), Tensor([12, 3, 20, 74566, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 80],"float32"), Tensor([12, 3, 74566, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 80],"float32"), Tensor([44740, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 5965233, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 74566, 80],"float32"), Tensor([12, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 2982617, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 2982617, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 223697, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 2982617, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 2982617, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 74566],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([894785, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 74566],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 5965233, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 74566, 20, 80],"float32"), Tensor([12, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3579140, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 44740, 10, 10, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 894785, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([122760],"float32"), Tensor([4294967295],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 160],"float32"), Tensor([13, 160, 2064889],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 160],"float32"), Tensor([13, 2064889, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 160],"float32"), Tensor([167773, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 2064889],"float32"), Tensor([13, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 2064889, 160],"float32"), Tensor([13, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 330382100],"float32"), Tensor([13, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 3],"float32"), Tensor([13, 330382100],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 3],"float32"), Tensor([1431655765, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([135036],"float32"), Tensor([4294967295],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1431655765, 3],"float32"), Tensor([13, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([14316558, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([167773, 160, 160],"float32"), Tensor([13, 160, 160],"float32"), reduction="none", )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([178957, 3, 10, 10, 80],"float32"), Tensor([12, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([178957, 300, 80],"float32"), Tensor([2, 300, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([190960],"float32"), Tensor([4294967295],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1952258, 200, 11],"float32"), Tensor([1, 200, 11],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1992100, 196, 11],"float32"), Tensor([1, 196, 11],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 10737419],"float32"), Tensor([2, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 80],"float32"), Tensor([2, 200, 10737419],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 80],"float32"), Tensor([2, 26843546, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 80],"float32"), Tensor([268436, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 80],"float32"), Tensor([2, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 80],"float32"), Tensor([2, 300, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 26843546, 80],"float32"), Tensor([2, 900, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([17895698, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 26843546, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 35791395, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 178956971],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 71582789, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([53687092, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([17895698, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([17895698, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([17895698, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([17895698, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 26843546, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 26843546, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 26843546, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 26843546, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.divide(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_probs", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 35791395, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 35791395, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 35791395, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 35791395, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 178956971],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 71582789, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([53687092, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 89478486],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 89478486],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 89478486],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 89478486],"float64"), reduction="sum", pos_weight=None, )
paddle.divide(Tensor([178956971, 12],"float64"), Tensor([10, 12],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 89478486],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "mean", Tensor([3, 4, 10],"float64"), None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), Tensor([2, 3, 4, 10],"float64"), "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="mean", pos_weight=Tensor([3, 4, 10],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 10],"float64"), weight=Tensor([2, 3, 4, 10],"float64"), reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 7158279],"float32"), Tensor([2, 300, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 80],"float32"), Tensor([178957, 300, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 80],"float32"), Tensor([2, 26843546, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 80],"float32"), Tensor([2, 300, 7158279],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 900, 2386093],"float32"), Tensor([2, 900, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 900, 80],"float32"), Tensor([2, 26843546, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 900, 80],"float32"), Tensor([2, 900, 2386093],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 900, 80],"float32"), Tensor([59653, 900, 80],"float32"), reduction="none", )
paddle.divide(Tensor([178957, 100, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 107374183],"float64"), Tensor([20, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 107374183],"float64"), Tensor([20, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 107374183],"float64"), Tensor([20, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 107374183],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 107374183],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 107374183],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 107374183],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 107374183],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 107374183],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 107374183],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 107374183],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([20, 107374183],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([71582789, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([71582789, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([71582789, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([71582789, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.divide(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([71582789, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 30],"float64"), Tensor([71582789, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2033602, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([210056],"float32"), Tensor([4294967295],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([21474837, 100, 2],"float32"), Tensor([1, 100, 2],"float32"), weight=Tensor([1, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([21913099, 14, 14],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.divide(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([268436, 200, 80],"float32"), Tensor([2, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([4294967295],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([4294967295],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 14316558],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 14316558],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([4294968, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([4294968, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 14316558],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 14316558],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 14316558],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 14316558],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([4294968, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([4294968, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([4294968, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([4294968, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 14316558],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 14316558],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 14316558],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 14316558],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([342393, 12544],"float32"), Tensor([1, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([342393, 12544],"float32"), Tensor([100, 12544],"float32"), reduction="none", )
paddle.divide(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), name="Normal_probs", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([3579140, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295, 1],"float32"), Tensor([459, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295, 1],"float32"), Tensor([465, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295, 1],"float32"), Tensor([512, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295],"float32"), Tensor([110484],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295],"float32"), Tensor([122760],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295],"float32"), Tensor([135036],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295],"float32"), Tensor([190960],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295],"float32"), Tensor([210056],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294967295],"float32"), Tensor([9],"float32"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([429496730, 10],"float32"), Tensor([1, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294968, 1000],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294968, 1000],"float32"), Tensor([300, 1000],"float32"), weight=None, reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294968, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4294968, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=Tensor([1000],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([44740, 3, 20, 20, 80],"float32"), Tensor([12, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 1],"float32"), Tensor([459, 9357228],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 9357228],"float32"), Tensor([459, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([465, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([465, 1],"float32"), Tensor([465, 9236489],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([465, 9236489],"float32"), Tensor([465, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4772186, 1, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5, 2],"float64"), Tensor([1073741825, 2],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5, 2],"float64"), Tensor([5, 429496730],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5, 429496730],"float64"), Tensor([5, 2],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([512, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([512, 1],"float32"), Tensor([512, 8388608],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([512, 8388608],"float32"), Tensor([512, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([53687092, 80],"float32"), Tensor([10032, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([53687092, 80],"float32"), Tensor([100352, 80],"float32"), reduction="none", )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([53687092, 80],"float32"), Tensor([1024, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5368710, 200, 4],"float32"), Tensor([1, 200, 4],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5478275, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5478275, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5478275, 28, 28],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([5478275, 28, 28],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([59653, 900, 80],"float32"), Tensor([2, 900, 80],"float32"), reduction="none", )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([71582789, 30],"float64"), Tensor([20, 30],"float64"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([71582789, 30],"float64"), Tensor([20, 30],"float64"), None, "none", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([71582789, 30],"float64"), Tensor([20, 30],"float64"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([71582789, 30],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="mean", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([71582789, 30],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([71582789, 30],"float64"), Tensor([20, 30],"float64"), weight=None, reduction="sum", pos_weight=None, )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([894785, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([9],"float32"), Tensor([4294967295],"float32"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([1024],"float32"), label=Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([165191050, 26],"float32"), label=Tensor([64, 26],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 1],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 2147483648],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2048],"float32"), label=Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([226050911, 19],"float32"), label=Tensor([64, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([256],"float32"), label=Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([4294967295, 1],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([4294967295],"float32"), label=Tensor([1024],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([4294967295],"float32"), label=Tensor([2048],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([4294967295],"float32"), label=Tensor([256],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([4294967295],"float32"), label=Tensor([512],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([512],"float32"), label=Tensor([4294967295],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 19],"float32"), label=Tensor([226050911, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 19],"float32"), label=Tensor([64, 67108864],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 26],"float32"), label=Tensor([165191050, 26],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 26],"float32"), label=Tensor([64, 67108864],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 67108864],"float32"), label=Tensor([64, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 67108864],"float32"), label=Tensor([64, 26],"float32"), reduction="none", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", )
paddle.divide(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name="Normal_probs", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", None, )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.nn.functional.class_center_sample(Tensor([2147483649],"int64"), 20, 6, )
paddle.nn.functional.class_center_sample(Tensor([2147483649],"int64"), num_classes=10, num_samples=6, group=None, )
paddle.nn.functional.class_center_sample(Tensor([4294967295],"int32"), 10, 8, )
paddle.nn.functional.class_center_sample(Tensor([4294967295],"int32"), 20, 6, )
paddle.nn.functional.class_center_sample(Tensor([4294967295],"int32"), 20, 8, )
paddle.nn.functional.class_center_sample(Tensor([4294967295],"int32"), num_classes=10, num_samples=6, group=None, )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 1024, 4096],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 1398102, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 429496730, 1, 5],"float32"), )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([286331153, 3, 1, 5],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 1024, 4194304],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([11184811, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 1, 715827883],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([11184811, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([11184811, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 3050403, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 3050403, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 3050403, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 4793491, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 4793491, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 4793491, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([3050403, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([3050403, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([3050403, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([4793491, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([4793491, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([4793491, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 33554432],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 238609295],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([1280, 1118482, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([1073741824, 1, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3355444],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1431656, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([1431655765, 3, 1, 1],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 1431656, 3000],"float32"), Tensor([1024, 80, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1431656, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1431656, 3000],"float32"), Tensor([384, 384, 3],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1431656, 3000],"float32"), Tensor([512, 512, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1431656, 3000],"float32"), Tensor([768, 768, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 153391690, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([30678338, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 1198373, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 20, 419431],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([1, 32, 7],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 178956971, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 2396746, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 16777216],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 715827883, 1],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([1525202, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 536870912, 1, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([1525202, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 357913942, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([1525202, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([357913942, 3, 1, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([2396746, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.divide(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([2396746, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([2396746, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 1525202, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 1525202, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 1525202, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 2396746, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 2396746, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 2396746, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 65536],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 5592406, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 5592406, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 5592406, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([5592406, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_probs", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([5592406, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_probs", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([5592406, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_probs", )
paddle.divide(Tensor([2, 429496730, 1, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 3, 1431655765],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([4, 3, 357913942],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([4, 357913942, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([477218589, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([1, 32, 7],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 134217728],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([1, 32, 134217728],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([1, 32, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([1, 613566757, 7],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 12201612, 11],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 12201612, 11],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 12201612, 11],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 19173962, 7],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 19173962, 7],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 19173962, 7],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 4194304],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 44739243, 3],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 44739243, 3],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 44739243, 3],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 38347923, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 384, 11184811],"float32"), Tensor([384, 384, 3],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 384, 3000],"float32"), Tensor([3728271, 384, 3],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 384, 3000],"float32"), Tensor([384, 3728271, 3],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 384, 3000],"float32"), Tensor([384, 384, 29128],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 384, 3000],"float32"), Tensor([384, 384, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 512, 3000],"float32"), Tensor([2796203, 512, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 512, 3000],"float32"), Tensor([512, 2796203, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 512, 3000],"float32"), Tensor([512, 512, 16384],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 512, 3000],"float32"), Tensor([512, 512, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 512, 8388608],"float32"), Tensor([512, 512, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 613566757, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([22369622, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([22369622, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([22369622, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([6100806, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([6100806, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([6100806, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 22369622, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 22369622, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 22369622, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 6100806, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 6100806, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 6100806, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 9586981, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 9586981, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([9586981, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([9586981, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 67108864],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 768, 3000],"float32"), Tensor([1864136, 768, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 768, 3000],"float32"), Tensor([768, 1864136, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 768, 3000],"float32"), Tensor([768, 768, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 768, 3000],"float32"), Tensor([768, 768, 7282],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 768, 5592406],"float32"), Tensor([768, 768, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([1024, 1398102, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([1024, 80, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([1024, 80, 52429],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 858993459, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 9586981, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([107375, 400, 100],"float32"), Tensor([256, 100, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1119, 1280, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([12782641, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 1024],"float32"), Tensor([32, 1, 134217728],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 1024],"float32"), Tensor([32, 16777216, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 330382100],"float32"), Tensor([32, 1, 330382100],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 10324441, 32],"float32"), Tensor([16, 10324441, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 10324441, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 10324441, 32],"float32"), Tensor([32, 10324441, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 110127367, 3],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1295617, 255],"float32"), Tensor([32, 1295617, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1295617, 255],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 161320, 2048],"float32"), Tensor([20, 161320, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 161320, 2048],"float32"), Tensor([20, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 161320, 2048],"float32"), Tensor([256, 161320, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 161320, 2048],"float32"), Tensor([256, 20, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 161320, 2048],"float32"), Tensor([256, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 16519105],"float32"), Tensor([256, 20, 16519105],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 2048],"float32"), Tensor([256, 20, 838861],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 20, 2048],"float32"), Tensor([256, 3355444, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 23598722, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 13765921],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([22369622, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 11184811, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 12, 14913081],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.divide(Tensor([2684355, 40, 40],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([4294967295],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 1290556],"float32"), Tensor([20, 256, 1290556],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 1290556],"float32"), Tensor([20, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 1290556],"float32"), Tensor([256, 256, 1290556],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 1290556],"float32"), Tensor([256, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([20, 256, 838861],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([20, 42949673, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([256, 256, 65536],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 256, 2048],"float32"), Tensor([256, 3355444, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 10324441],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 10324441],"float32"), Tensor([32, 32, 10324441],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 10324441],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 10324441],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 255],"float32"), Tensor([32, 16777216, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 255],"float32"), Tensor([32, 32, 4194304],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 62],"float32"), Tensor([16777216, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([286331153, 3, 1, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.nn.functional.conv1d(Tensor([13, 32, 62],"float32"), Tensor([32, 16777216, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 62],"float32"), Tensor([32, 32, 4194304],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 134217728, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 16, 8388608],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 67108864, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 8, 8388608],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 322639, 1024],"float32"), Tensor([32, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 322639, 1024],"float32"), Tensor([32, 322639, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 328086, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 33038210, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 47197443, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 47197443, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 47197443, 7],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 47197443, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 5328744, 62],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 5328744, 62],"float32"), Tensor([32, 5328744, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 1, 67108864],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 16777216, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 1, 67108864],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 16777216, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 3],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 3],"float32"), Tensor([64, 1, 67108864],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 3],"float32"), Tensor([64, 16777216, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 5162221],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 134217728, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 64, 2097152],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([64, 1, 67108864],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([64, 16777216, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([67108864, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([16, 268435456, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([16, 32, 8388608],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([32, 1, 134217728],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([32, 44739243, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 47197443],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 47197443],"float32"), Tensor([16, 32, 47197443],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 47197443],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 7, 47197443],"float32"), Tensor([32, 1, 47197443],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([1399, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([14, 43826197, 7],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([14, 64, 7],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([14, 64, 7],"float32"), Tensor([64, 1, 67108864],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([14, 64, 7],"float32"), Tensor([64, 16777216, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([149797, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([298262, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([16, 1, 25500],"float32"), Tensor([64, 1, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 1, 25500],"float32"), Tensor([64, 1, 67108864],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 1, 25500],"float32"), Tensor([64, 67108864, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([1, 64, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 10527, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([64, 1, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 10527, 25500],"float32"), Tensor([64, 64, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 3016129, 89],"float32"), Tensor([80, 3016129, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 3016129, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([1, 4294967295, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([1, 64, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([1, 64, 67108864],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([128, 64, 524288],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.divide(Tensor([298262, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([64, 64, 1048576],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([64, 64, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([64, 67108864, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([1, 64, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.divide(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 4194304],"float32"), Tensor([64, 64, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 25500],"float32"), Tensor([128, 33554432, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 25500],"float32"), Tensor([128, 80, 419431],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 3355444],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 3355444],"float32"), Tensor([128, 80, 3355444],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 3355444],"float32"), Tensor([80, 80, 3355444],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 3355444],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([178957, 100, 120],"float64"), )
paddle.nn.functional.conv1d(Tensor([16, 80, 89],"float32"), Tensor([80, 10737419, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 89],"float32"), Tensor([80, 80, 671089],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([3, 100, 7158279],"float64"), )
paddle.nn.functional.conv1d(Tensor([167773, 256, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([167773, 256, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([3, 5965233, 120],"float64"), )
paddle.divide(Tensor([3, 100, 7158279],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.nn.functional.conv1d(Tensor([178956971, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([178956971, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([178956971, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([178956971, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([178956971, 4, 3],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([1865, 768, 3000],"float32"), Tensor([768, 768, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([19173962, 32, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([19173962, 32, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([19173962, 7, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([19173962, 7, 32],"float32"), Tensor([19173962, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([11184811, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([11184811, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 11184811, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 262144],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 11930465, 40, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([4294967295],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 3050403, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 3050403, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 3050403, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 4793491, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 4793491, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([3050403, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([3050403, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 298262, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([3050403, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([4793491, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 298262, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([4793491, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 11930465, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 16777216],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 19173962, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 268435457, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 268435457, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 268435457, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 268435457, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 268435457, 4],"float64"), Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 298262, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.divide(Tensor([3, 3, 3, 3976822, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([6, 1, 715827883],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.divide(Tensor([3, 3, 3, 40, 3976822],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([298262, 3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 298262, 3, 40, 40],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 1, 2, 1],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 298262, 40, 40],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 1, 2, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 3976822, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 3976822],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([6, 1, 357913942],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([6, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.divide(Tensor([3, 3, 3976822, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([6, 119304648, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 4],"float64"), Tensor([715827883, 1, 3],"float64"), bias=Tensor([6],"float64"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 715827883],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 715827883],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 715827883],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 715827883],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 11930465],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 357913942, 3],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 268435457],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([2, 3, 715827883],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float32"), Tensor([2, 715827883, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.divide(Tensor([3, 3, 40, 3976822, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([2, 3, 357913942],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([2, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 3],"float64"), Tensor([2, 357913942, 3],"float64"), bias=Tensor([2],"float64"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 4, 536870912],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 536870912, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 536870912, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 536870912, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 536870912, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 536870912, 4],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40, 298262],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2, 715827883, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2106, 80, 25500],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2164803, 32, 62],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([1, 64, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([298262, 3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([128, 64, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2632, 64, 25500],"float32"), Tensor([64, 64, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2797, 512, 3000],"float32"), Tensor([512, 512, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([286331153, 3, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([299594, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 298262, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([357913942, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([357913942, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([357913942, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([357913942, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 3976822, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 3976822, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([357913942, 4, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([3729, 384, 3000],"float32"), Tensor([384, 384, 3],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 1, 715827883],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 67108864],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 67108864],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 67108864],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 298262],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 178956971, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 3, 11930465, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([477218589, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 2796203, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 2796203, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 1398102],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 1398102],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 3, 40, 11930465],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 3, 178956971],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 894785, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([894785, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([52, 2581111, 32],"float32"), Tensor([16, 2581111, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 2581111, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 2581111, 32],"float32"), Tensor([32, 2581111, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 11799361],"float32"), Tensor([16, 32, 11799361],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 11799361],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 11799361],"float32"), Tensor([32, 1, 11799361],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 11799361],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([16, 268435456, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([16, 32, 8388608],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([32, 1, 134217728],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([32, 44739243, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([526345, 32, 255],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 35791395, 40],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([599187, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 2882, 4, 2],"float16"), Tensor([1, 1, 1, 4, 1, 2],"float16"), )
paddle.nn.functional.conv1d(Tensor([603226, 80, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([66643, 64, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([6710887, 64, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([1, 32, 7],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([74899, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([22369622, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([256, 5592406, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([256, 64, 262144],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([4294967295],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([22369622, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 5592406, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 64, 262144],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 2097152],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 2097152],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([14316558, 100, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 100, 167773],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 100, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 5592406, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 400, 1342178],"float32"), Tensor([256, 100, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 5368710, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 5368710, 100],"float32"), Tensor([256, 100, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 5368710, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8192, 256, 2048],"float32"), Tensor([20, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8192, 256, 2048],"float32"), Tensor([256, 256, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([9586981, 64, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([3, 40, 11930465, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d(x=Tensor([178956971, 3, 4],"float64"), weight=Tensor([1, 3, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([178956971, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([178956971, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([178956971, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([178956971, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([178956971, 3, 4],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([178956971, 4, 3],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 268435457, 4],"float64"), weight=Tensor([1, 3, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 268435457, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 268435457, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 268435457, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 268435457, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 268435457, 4],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 357913942],"float64"), weight=Tensor([1, 3, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 357913942],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 357913942],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 357913942],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 357913942],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 1431655765, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 2147483648, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 1431655765],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=2, padding=0, )
paddle.divide(Tensor([3, 40, 35791395],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([1431655765, 1, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([2, 3, 715827883],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([2, 715827883, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([3, 3, 2],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([3, 3, 477218589],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([3, 715827883, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 11930465, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 40, 11930465, 3],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 1441],"float16"), Tensor([1, 1, 1, 4, 1, 2],"float16"), )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 40, 40, 894785],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 2],"float16"), Tensor([1, 1, 1, 2147483648, 1, 2],"float16"), )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([894785, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 894785],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 2],"float16"), Tensor([1, 1, 1, 4, 1, 1073741824],"float16"), )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 2],"float16"), Tensor([1, 1, 1, 4, 536870912, 2],"float16"), )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 2],"float16"), Tensor([1, 1, 536870912, 4, 1, 2],"float16"), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([477218589, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([2684355, 40, 40],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 2],"float16"), Tensor([1, 536870912, 1, 4, 1, 2],"float16"), )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([3, 35791395, 40],"float32"), name=None, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([6, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([6, 1, 715827883],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([6, 238609295, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([715827883, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([715827883, 3, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([3, 40, 35791395],"float32"), name=None, )
paddle.Tensor.__truediv__(Tensor([2, 11645, 8, 4, 4, 2],"float16"), Tensor([536870912, 1, 1, 4, 1, 2],"float16"), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 1073741825, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 2],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=2, padding=0, )
paddle.divide(Tensor([3, 5965233, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 3, 715827883],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([1, 715827883, 3],"float64"), bias=Tensor([1],"float64"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.divide(Tensor([3, 894785, 40, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([33554432, 128],"float32"), Tensor([104, 1],"float32"), )
paddle.divide(Tensor([357913942, 12],"float32"), Tensor([10, 12],"float32"), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([357913942, 3, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([6, 1, 357913942],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([6, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([6, 119304648, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float64"), weight=Tensor([715827883, 1, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 715827883],"float32"), weight=Tensor([3, 3, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.divide(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.conv1d(x=Tensor([2, 357913942, 3],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 268435457],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.divide(Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([2, 3, 715827883],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float32"), weight=Tensor([2, 715827883, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.divide(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([2, 3, 357913942],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([2, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 3],"float64"), weight=Tensor([2, 357913942, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 4, 536870912],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.divide(Tensor([4294967295, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([3, 3, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([2, 536870912, 4],"float32"), weight=Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv1d(x=Tensor([2, 715827883, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 3, 4],"float32"), weight=Tensor([3, 3, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(x=Tensor([357913942, 4, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([128, 4194304, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.divide(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([8388608, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 33554432],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 153391690, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 16777216],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([256, 2097152, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([4194304, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 38347923, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 512, 7],"float32"), Tensor([2097152, 256, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 512, 7],"float32"), Tensor([512, 1048576, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.nn.functional.conv1d_transpose(Tensor([1, 512, 7],"float32"), Tensor([512, 256, 8],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 512, 8388608],"float32"), Tensor([512, 256, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 613566757, 7],"float32"), Tensor([512, 256, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 64, 448],"float32"), Tensor([16777216, 32, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv1d_transpose(Tensor([1, 64, 448],"float32"), Tensor([64, 32, 8],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([715827883, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_probs", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 64, 448],"float32"), Tensor([64, 8388608, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 64, 67108864],"float32"), Tensor([64, 32, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 9586981, 448],"float32"), Tensor([64, 32, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1198373, 512, 7],"float32"), Tensor([512, 256, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([149797, 64, 448],"float32"), Tensor([64, 32, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 1073741824, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 1073741824, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 1073741824, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 1073741824, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 1073741824, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 128, 112],"float32"), Tensor([128, 4194304, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 128, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 128, 112],"float32"), Tensor([8388608, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 128, 16777216],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 19173962, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 1073741824],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.divide(Tensor([894785, 3, 40, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 1073741824],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 1431655765],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 1431655765],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 715827883],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 1, 715827883],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 238609295, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([3, 238609295, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([715827883, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 3],"float64"), Tensor([715827883, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 536870913],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 2, 536870913],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([3],"float64"), output_size=None, output_padding=1, padding=list[1,], stride=list[2,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 1431655765],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 1431655765],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 1431655765],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 1431655765],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 2, 715827883],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(Tensor([894785, 40, 40, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([715827883, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.divide(x=Tensor([2147483649, 1],"float64"), y=Tensor([3, 1],"float64"), name=None, )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([2],"float64"), )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([3, 1],"float64"), )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([3],"float64"), )
paddle.divide(x=Tensor([2],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([3, 1],"float64"), y=Tensor([2147483649, 1],"float64"), name=None, )
paddle.divide(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3],"float64"), )
paddle.divide(x=Tensor([3, 3, 3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([3],"float32"), y=Tensor([4294967295],"float32"), )
paddle.divide(x=Tensor([3],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.divide(x=Tensor([3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.divide(x=Tensor([4294967295],"float32"), y=Tensor([3],"float32"), )
paddle.dot(Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.dot(Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.dot(Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.dot(Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.dot(x=Tensor([2, 1073741825],"float64"), y=Tensor([2, 3],"float64"), )
paddle.dot(x=Tensor([2, 3],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.dot(x=Tensor([2, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.dot(x=Tensor([2147483649],"int64"), y=Tensor([6],"int64"), )
paddle.dot(x=Tensor([4294967295],"int32"), y=Tensor([6],"int32"), )
paddle.dot(x=Tensor([6],"int32"), y=Tensor([4294967295],"int32"), )
paddle.dot(x=Tensor([6],"int64"), y=Tensor([2147483649],"int64"), )
paddle.dot(x=Tensor([715827883, 3],"float64"), y=Tensor([2, 3],"float64"), )
paddle.einsum("..., ...", Tensor([153391690, 14],"float64"), Tensor([2, 3, 14],"float64"), )
paddle.einsum("..., ...", Tensor([165191050, 13],"float64"), Tensor([2, 3, 13],"float64"), )
paddle.einsum("..., ...", Tensor([178956971, 12],"float64"), Tensor([2, 3, 12],"float64"), )
paddle.einsum("..., ...", Tensor([195225787, 11],"float64"), Tensor([2, 3, 11],"float64"), )
paddle.einsum("..., ...", Tensor([214748365, 10],"float64"), Tensor([2, 3, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 10],"float64"), Tensor([2, 107374183, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 10],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 10],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 11],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 11],"float64"), Tensor([2, 97612894, 11],"float64"), )
paddle.einsum("..., ...", Tensor([3, 11],"float64"), Tensor([65075263, 3, 11],"float64"), )
paddle.einsum("..., ...", Tensor([3, 12],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 12],"float64"), Tensor([2, 89478486, 12],"float64"), )
paddle.einsum("..., ...", Tensor([3, 12],"float64"), Tensor([59652324, 3, 12],"float64"), )
paddle.einsum("..., ...", Tensor([3, 13],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 13],"float64"), Tensor([2, 82595525, 13],"float64"), )
paddle.einsum("..., ...", Tensor([3, 13],"float64"), Tensor([55063684, 3, 13],"float64"), )
paddle.einsum("..., ...", Tensor([3, 14],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 14],"float64"), Tensor([2, 76695845, 14],"float64"), )
paddle.einsum("..., ...", Tensor([3, 14],"float64"), Tensor([51130564, 3, 14],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 11],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 12],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 13],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 14],"float64"), )
paddle.einsum("..., f -> ... f", Tensor([16],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("..., f -> ... f", Tensor([24],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("..., f -> ... f", Tensor([4294967295],"float32"), Tensor([16],"float32"), )
paddle.einsum("..., f -> ... f", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("...,...", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([11],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([12],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([13],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([14],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 5],"float64"), Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 5],"float64"), Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 5],"float64"), Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 85899346],"float64"), Tensor([5, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 85899346],"float64"), Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 85899346, 5],"float64"), Tensor([5, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 85899346, 5],"float64"), Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([85899346, 5, 5],"float64"), Tensor([5, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([85899346, 5, 5],"float64"), Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([10, 3, 2, 35791395],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([10, 3, 35791395, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([10, 53687092, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([178956971, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 178956971],"float64"), Tensor([10, 3, 2, 178956971],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 178956971],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 35791395, 10],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 35791395, 10],"float64"), Tensor([10, 3, 35791395, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 35791395, 2, 10],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 35791395, 2, 10],"float64"), Tensor([10, 35791395, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([53687092, 2, 2, 10],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([53687092, 2, 2, 10],"float64"), Tensor([53687092, 3, 2, 2],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([10],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([11],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([12],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([13],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([14],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 12, 12],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 12, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 12, 33092],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 33092, 12],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([10, 11],"float64"), Tensor([3, 4, 5, 35791395],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([195225787, 11],"float64"), Tensor([3, 4, 5, 10],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 2147483649],"float64"), Tensor([5, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 2147483649],"float64"), Tensor([5, 2147483649],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 2147483649],"float64"), Tensor([5, 5],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 5],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([429496730, 5],"float64"), Tensor([429496730, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([11184811, 6, 8, 8],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 33554432, 8, 8],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 44739243, 8],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 44739243],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 3, 11184811, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 3, 6, 14913081, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 3, 6, 8, 14913081],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([3728271, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([5478275, 28, 28],"float32"), Tensor([3, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 25565282, 28],"float32"), Tensor([3, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 25565282],"float32"), Tensor([3, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([3, 1826092, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([3, 6, 28, 8521761],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([3, 6, 8521761, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 89478486],"float32"), Tensor([3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([3, 22369622, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([3, 6, 29826162, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([3, 6, 8, 29826162],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 89478486, 8],"float32"), Tensor([3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([67108864, 8, 8],"float32"), Tensor([3, 6, 8, 8],"float32"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 3],"float64"), Tensor([3, 3, 238609295],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 3],"float64"), Tensor([3, 71582789, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 3],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 71582789],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 238609295, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.trapezoid(y=Tensor([1431655765, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.einsum("...jk, ...kl->...jl", Tensor([71582789, 10, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 2, 27531842],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 4, 3, 3441481, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 4, 5162221, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 6882961, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([22369622, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 13765921, 2],"float32"), Tensor([13, 4, 3, 13765921, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 41297763, 1, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 41297763, 1, 2],"float32"), Tensor([13, 4, 41297763, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 55063684, 3, 1, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 55063684, 3, 1, 2],"float32"), Tensor([13, 55063684, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([178956971, 4, 3, 1, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([178956971, 4, 3, 1, 2],"float32"), Tensor([178956971, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([178956971, 4, 3, 1, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 13765921, 3, 1, 2],"float32"), Tensor([52, 13765921, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 13765921, 3, 1, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 10324441, 1, 2],"float32"), Tensor([52, 4, 10324441, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 10324441, 1, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([22369622, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 1720741, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 4, 1290556, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 4, 3, 860371, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 2, 6882961],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 3441481, 2],"float32"), Tensor([52, 4, 3, 3441481, 8],"float32"), )
paddle.einsum("a...a->...", Tensor([17895698, 3, 2, 1, 4, 5],"float64"), )
paddle.einsum("a...a->...", Tensor([5, 3, 2, 1, 4, 17895698],"float64"), )
paddle.einsum("a...a->a...", Tensor([17895698, 3, 2, 1, 4, 5],"float64"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 2, 1, 4, 17895698],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([178956971, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 178956971],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), )
paddle.einsum("aaa->a", Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("aaa->a", Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("aaa->a", Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 5, 3],"float64"), Tensor([107374183, 4, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 5, 53687092],"float64"), Tensor([3, 4, 5],"float64"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 11],"float32"), Tensor([85899346, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 286332],"float32"), Tensor([11, 286332],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 286332],"float32"), Tensor([11, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([390451573, 11],"float32"), Tensor([390451573, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 11],"float32"), Tensor([85899346, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 71583],"float32"), Tensor([11, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 71583],"float32"), Tensor([11, 71583],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 427445, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 462820, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 593884, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 615678, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 67108864, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 1, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 109, 4925422],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 113, 4751071],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 145, 3702559],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 157, 3419560],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 25414008, 1, 169],"float32"), Tensor([1, 25414008, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 25414008, 1, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 27356480, 1, 157],"float32"), Tensor([1, 27356480, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 27356480, 1, 157],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 29620465, 1, 145],"float32"), Tensor([1, 29620465, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 29620465, 1, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 38008561, 1, 113],"float32"), Tensor([1, 38008561, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 38008561, 1, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 39403370, 1, 109],"float32"), Tensor([1, 39403370, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 39403370, 1, 109],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([1, 615678, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 113],"float32"), Tensor([1, 593884, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 113],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 145],"float32"), Tensor([1, 462820, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 145],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 157],"float32"), Tensor([1, 427445, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 157],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 169],"float32"), Tensor([1, 397094, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 169],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 169, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3176751, 169],"float32"), Tensor([1, 8, 3176751, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3419560, 157],"float32"), Tensor([1, 8, 3419560, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3702559, 145],"float32"), Tensor([1, 8, 3702559, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4751071, 113],"float32"), Tensor([1, 8, 4751071, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4925422, 109],"float32"), Tensor([1, 8, 4925422, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3176751, 8, 1, 169],"float32"), Tensor([3176751, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3419560, 8, 1, 157],"float32"), Tensor([3419560, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3702559, 8, 1, 145],"float32"), Tensor([3702559, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4751071, 8, 1, 113],"float32"), Tensor([4751071, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4925422, 8, 1, 109],"float32"), Tensor([4925422, 8, 109, 64],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 10324441, 1, 8],"float32"), Tensor([13, 4, 10324441, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 10324441, 1, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 16519105],"float32"), Tensor([13, 4, 5, 7, 16519105],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 16519105],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 1179937, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 4, 1474921, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 4, 5, 7, 2359873],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([3834793, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 8259553, 5, 1, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 8259553, 5, 1, 8],"float32"), Tensor([13, 8259553, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([26843546, 4, 5, 1, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([26843546, 4, 5, 1, 8],"float32"), Tensor([26843546, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([26843546, 4, 5, 1, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 2064889, 5, 1, 8],"float32"), Tensor([52, 2064889, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 2064889, 5, 1, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 2581111, 1, 8],"float32"), Tensor([52, 4, 2581111, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 2581111, 1, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 4129777],"float32"), Tensor([52, 4, 5, 7, 4129777],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 4129777],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([3834793, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 294985, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 4, 368731, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 4, 5, 7, 589969],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 110127367, 3, 1, 1],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([13, 41297763, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([134217728, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([357913942, 4, 3, 1, 1],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([357913942, 4, 3, 1, 1],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 27531842, 3, 1, 1],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([134217728, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([52, 10324441, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([52, 4, 1, 20648882],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([119304648, 4, 3, 1, 3],"float32"), Tensor([119304648, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([119304648, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([119304648, 4, 3, 1, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 36709123, 3, 1, 3],"float32"), Tensor([13, 36709123, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 36709123, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 10324441, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 5899681, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([19173962, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 82595525],"float32"), Tensor([13, 4, 1, 7, 82595525],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 82595525],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 11799361, 7],"float32"), Tensor([13, 4, 1, 11799361, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 11799361, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 11799361, 1, 7],"float32"), Tensor([13, 4, 11799361, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 27531842, 1, 3],"float32"), Tensor([13, 4, 27531842, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 27531842, 1, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 3, 27531842],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3441481, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3441481, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4588641, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([14913081, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 9177281, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 9177281, 3],"float32"), Tensor([13, 4, 3, 9177281, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 47197443, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 47197443, 1, 1, 7],"float32"), Tensor([13, 47197443, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([153391690, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([153391690, 4, 1, 1, 7],"float32"), Tensor([153391690, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([153391690, 4, 1, 1, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 11799361, 1, 1, 7],"float32"), Tensor([52, 11799361, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 11799361, 1, 1, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 20648882],"float32"), Tensor([52, 4, 1, 7, 20648882],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 20648882],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([19173962, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([52, 1474921, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([52, 4, 1, 2581111, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 2949841, 7],"float32"), Tensor([52, 4, 1, 2949841, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 2949841, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 2949841, 1, 7],"float32"), Tensor([52, 4, 2949841, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([14913081, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 1147161, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 4, 3, 860371, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 4, 860371, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 3, 6882961],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 2294321, 3],"float32"), Tensor([52, 4, 3, 2294321, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 2294321, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 6882961, 1, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 6882961, 1, 3],"float32"), Tensor([52, 4, 6882961, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 9177281, 3, 1, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 9177281, 3, 1, 3],"float32"), Tensor([52, 9177281, 3, 3, 8],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 11097, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 50725],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 87382],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 43691, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 23302, 48, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 31069],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([1398102, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([48, 48, 1864136],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 25363],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 5549, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 21846, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 43691],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 11097, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 50725],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 87382],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 43691, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 23302, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 31069],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([1398102, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([48, 48, 1864136],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 25363],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 5549, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 21846, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 43691],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bij,bjk->bik", Tensor([107374183, 4, 5],"float64"), Tensor([3, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 143165577, 5],"float64"), Tensor([3, 143165577, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 178956971],"float64"), Tensor([3, 5, 178956971],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 178956971],"float64"), Tensor([3, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 5],"float64"), Tensor([214748365, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 5],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 4, 4, 41297763],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 2, 4, 41297763],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([134217728, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 4, 41297763, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 7, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 11799361, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 11799361],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([134217728, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([38347923, 7, 4, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([67108864, 7, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 41297763],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 4],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 41297763, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 20648882, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 20648882],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 4],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 11799361, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 11799361],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 4],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 41297763],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 41297763],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([4, 268435456, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([4, 4, 268435456],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([8, 134217728, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([8, 4, 134217728],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 41297763, 4],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 41297763, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 20648882, 4],"float32"), Tensor([15, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 20648882, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 20648882],"float32"), Tensor([15, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 20648882],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([15, 4, 71582789],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([15, 71582789, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([8, 134217728, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([8, 4, 134217728],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 11799361, 4],"float32"), Tensor([14, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 11799361],"float32"), Tensor([14, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 4],"float32"), Tensor([14, 4, 76695845],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 4],"float32"), Tensor([14, 76695845, 4],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 330382100, 1, 1],"float32"), Tensor([13, 330382100, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 330382100, 1, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 110127367, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([286331153, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 66076420, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 66076420, 1],"float32"), Tensor([13, 5, 66076420, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 1],"float32"), Tensor([286331153, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 27531842, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 16519105, 1],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 16519105, 1],"float32"), Tensor([52, 5, 16519105, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 82595525, 1, 1],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 82595525, 1, 1],"float32"), Tensor([52, 82595525, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([858993459, 5, 1, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([858993459, 5, 1, 1],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([858993459, 5, 1, 1],"float32"), Tensor([858993459, 5, 1, 3],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 3, 5],"float64"), Tensor([1, 2, 268435457, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 429496730, 5],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 330382100, 1],"float32"), Tensor([13, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 1],"float32"), Tensor([107374183, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 1],"float32"), Tensor([13, 4, 41297763, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 1],"float32"), Tensor([107374183, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 1],"float32"), Tensor([52, 4, 10324441, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 82595525, 1],"float32"), Tensor([52, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([858993459, 5, 1],"float32"), Tensor([13, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([858993459, 5, 1],"float32"), Tensor([52, 4, 5, 2],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([858993459, 5, 1, 1],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([858993459, 5, 1, 1],"float32"), Tensor([52, 1, 1, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 1290556, 16, 16],"float32"), Tensor([2, 1290556, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 1290556, 16, 16],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 10324441],"float32"), Tensor([2, 16, 4, 10324441],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 10324441],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 16],"float32"), Tensor([2, 536870912, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 16],"float32"), Tensor([67108864, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([8388608, 2, 16, 16],"float32"), Tensor([8388608, 16, 4, 1],"float32"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 1073741825],"float64"), Tensor([3, 5, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 5, 143165577],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 5, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 5, 2],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([429496730, 5],"float64"), Tensor([3, 5, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 11799361, 4, 7],"float32"), Tensor([13, 11799361, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 11799361, 4, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 11799361, 7],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([134217728, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 2, 4, 41297763],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 4, 4, 41297763],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 20648882],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 41297763, 2],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 11799361],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 11799361],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 41297763, 2, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 41297763, 2, 4],"float32"), Tensor([13, 41297763, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 6742492, 7, 7],"float32"), Tensor([13, 6742492, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 6742492, 7, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 82595525, 2, 2],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 82595525, 2, 2],"float32"), Tensor([13, 82595525, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([134217728, 4, 2, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([134217728, 4, 2, 4],"float32"), Tensor([134217728, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([21913099, 4, 7, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([268435456, 4, 2, 2],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([268435456, 4, 2, 2],"float32"), Tensor([268435456, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([38347923, 4, 4, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([67108864, 4, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 15339169, 7],"float32"), Tensor([7, 10, 15339169, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 15339169, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 15339169],"float32"), Tensor([7, 10, 4, 15339169],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 15339169],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([13421773, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([7, 10, 7669585, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 8765240, 7, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 8765240, 7, 7],"float32"), Tensor([7, 8765240, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 13944700, 7],"float32"), Tensor([7, 11, 13944700, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 13944700, 7],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 13944700],"float32"), Tensor([7, 11, 4, 13944700],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 13944700],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([12201612, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([7, 11, 6972350, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 7968400, 7, 7],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 7968400, 7, 7],"float32"), Tensor([7, 7968400, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 10956550, 7],"float32"), Tensor([7, 14, 10956550, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 10956550, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 10956550],"float32"), Tensor([7, 14, 4, 10956550],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 10956550],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([7, 14, 5478275, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([7, 14, 5478275, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([8, 14, 4793491, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([8, 16777216, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([7, 14, 4, 9586981],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([8, 14, 4, 9586981],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 9586981, 8],"float32"), Tensor([8, 14, 9586981, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4793491, 8, 8],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4793491, 8, 8],"float32"), Tensor([8, 4793491, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 5478275, 8, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 5478275, 8, 7],"float32"), Tensor([7, 5478275, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 6260886, 7, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 6260886, 7, 7],"float32"), Tensor([7, 6260886, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([16777216, 4, 8, 8],"float32"), Tensor([16777216, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([16777216, 4, 8, 8],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([19173962, 4, 8, 7],"float32"), Tensor([19173962, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([19173962, 4, 8, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("i , j -> i j", Tensor([10],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.einsum("i , j -> i j", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([4],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i, i", Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.einsum("i, i", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i, i", Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,d->id", Tensor([14],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,d->id", Tensor([16],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,d->id", Tensor([4294967295],"float32"), Tensor([16],"float32"), )
paddle.einsum("i,d->id", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,i", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([11],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([12],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([13],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([14],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("i,i->", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->", Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.einsum("i,i->", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,i->", Tensor([4294967295],"float32"), Tensor([5],"float32"), )
paddle.einsum("i,i->", Tensor([5],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,i->", Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->i", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->i", Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.einsum("i,i->i", Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,ij->", Tensor([2147483649],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("i,ij->", Tensor([2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([11],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([12],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([13],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([14],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j", Tensor([3],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ii", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ii", Tensor([2147483649],"float64"), Tensor([2],"float64"), )
paddle.einsum("i,j->ii", Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ij", Tensor([10],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ij", Tensor([11],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([131072],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ij", Tensor([2147483649],"float64"), Tensor([6],"float64"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([128],"float32"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([4],"float32"), )
paddle.einsum("i->", Tensor([2147483649],"float64"), )
paddle.einsum("i->ii", Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([1, 1073741825, 2],"float64"), Tensor([1],"float64"), )
paddle.einsum("i..., i...", Tensor([1, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([1, 3, 715827883],"float64"), Tensor([1],"float64"), )
paddle.einsum("i..., i...", Tensor([10, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([2, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([3, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([10],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([2],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([3],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([4],"float64"), )
paddle.einsum("i..., i...", Tensor([4, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 14, 306783379],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 14, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 10, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 10, 61356676],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 11, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 11, 55778797],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 14, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 14, 43826197],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 4, 153391690],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 4, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([12201612, 11, 4, 8],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([13421773, 10, 4, 8],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([14, 10, 4, 15339169],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([14, 10, 3834793, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([14, 10, 4, 7669585],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([14, 9586981, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7, 10, 4, 15339169],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7, 10, 7669585, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([14, 10, 7669585, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([14, 11, 4, 13944700],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([14, 11, 3486175, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([14, 11, 4, 6972350],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([14, 9586981, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([7, 11, 4, 13944700],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([7, 11, 6972350, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([14, 11, 6972350, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 10956550],"float32"), Tensor([14, 14, 4, 10956550],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 10956550],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([14, 14, 2739138, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([14, 14, 4, 5478275],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([14, 9586981, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 5478275, 8],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 5478275, 8],"float32"), Tensor([14, 14, 5478275, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([9586981, 14, 4, 8],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 10956550],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 8],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 5478275, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ii->", Tensor([429496730, 5],"float64"), )
paddle.einsum("ii->", Tensor([5, 429496730],"float64"), )
paddle.einsum("ij, j", Tensor([4, 10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([10],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([11],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([12],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([13],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([14],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([4, 5],"float64"), Tensor([3, 2, 357913942],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([429496730, 5],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ij,i->", Tensor([1073741825, 2],"float64"), Tensor([2],"float64"), )
paddle.einsum("ij,i->", Tensor([2, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij,ij->", Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("ij,ij->", Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("ij,ij->", Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("ij,ij->", Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("ij,ij->", Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("ij,ij->", Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("ij,ij->ij", Tensor([4, 536870913],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([4, 536870913],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([429496730, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 214748365],"float64"), Tensor([1, 2],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("ij,j", Tensor([1, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij,j", Tensor([1, 2147483649],"float64"), Tensor([1],"float64"), )
paddle.einsum("ij,j", Tensor([2147483649, 1],"float64"), Tensor([1],"float64"), )
paddle.einsum("ij,j->i", Tensor([4, 536870913],"float64"), Tensor([5],"float64"), )
paddle.einsum("ij,j->i", Tensor([4, 5],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij,jk", Tensor([153391690, 14],"float64"), Tensor([153391690, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([165191050, 13],"float64"), Tensor([165191050, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([178956971, 12],"float64"), Tensor([178956971, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([195225787, 11],"float64"), Tensor([195225787, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([214748365, 10],"float64"), Tensor([214748365, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 10],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 11],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 12],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 13],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 14],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([10, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([10, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([11, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([11, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([12, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([12, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([13, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([13, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([14, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([14, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([4, 5],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([429496730, 5],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 715827883],"float64"), Tensor([4, 5],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([536870913, 4],"float64"), Tensor([536870913, 5],"float64"), Tensor([536870913, 6],"float64"), )
paddle.einsum("ij,k->ijk", Tensor([1, 128],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1, 4096],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1, 4294967295],"float32"), Tensor([32],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1, 4294967295],"float32"), Tensor([64],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1048576, 4096],"float32"), Tensor([32],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1048576, 4096],"float32"), Tensor([64],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([33554432, 128],"float32"), Tensor([32],"float32"), )
paddle.einsum("ij,kj->ik", Tensor([4, 536870913],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ij,kj->ik", Tensor([4, 5],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 536870913],"float64"), Tensor([3, 536870913],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 536870913],"float64"), Tensor([3, 7],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 5],"float64"), Tensor([3, 715827883],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 5],"float64"), Tensor([306783379, 7],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([429496730, 5],"float64"), Tensor([3, 7],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([429496730, 5],"float64"), Tensor([429496730, 7],"float64"), )
paddle.einsum("ij->", Tensor([2, 2147483648],"float32"), )
paddle.einsum("ij->", Tensor([2147483648, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([21913099, 7, 14, 2],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 21913099, 14, 2],"float32"), Tensor([7, 21913099, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([38347923, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([7, 14, 4, 10956550],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([7, 76695845, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 6260886],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 43826197, 2],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 43826197, 2],"float32"), Tensor([7, 14, 43826197, 2],"float32"), )
paddle.einsum("iji->j", Tensor([42949673, 10, 5],"float64"), )
paddle.einsum("iji->j", Tensor([5, 10, 42949673],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([214748365, 2, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 2, 268435457],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 2, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 2, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 3],"float64"), Tensor([3, 71582789, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 3],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 71582789],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 238609295, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([71582789, 10, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([107374183, 4, 5],"float64"), Tensor([107374183, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([107374183, 4, 5],"float64"), Tensor([4, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 143165577, 5],"float64"), Tensor([4, 143165577, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 143165577, 5],"float64"), Tensor([4, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 5],"float64"), Tensor([357913942, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 5],"float64"), Tensor([4, 268435457, 2],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 143165577, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 4, 178956971],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 143165577, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 4, 178956971],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 143165577, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 4, 178956971],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 178956971],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 5],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([20452226, 5, 7, 3],"float64"), Tensor([20452226, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([20452226, 5, 7, 3],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 34087043, 7, 3],"float64"), Tensor([5, 34087043, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 34087043, 7, 3],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 47721859, 3],"float64"), Tensor([5, 7, 47721859, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 47721859, 3],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 20452226],"float64"), Tensor([5, 7, 5, 20452226],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 20452226],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([5, 12271336, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([5, 7, 5, 12271336],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([5, 7, 8765240, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([8765240, 7, 5, 7],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 3],"float64"), Tensor([268435457, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 53687092],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 3],"float64"), Tensor([268435457, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 53687092],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 536870913],"float64"), Tensor([4, 2, 5],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 5],"float64"), Tensor([214748365, 2, 5],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 5],"float64"), Tensor([4, 2, 268435457],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([429496730, 5],"float64"), Tensor([4, 2, 5],"float64"), )
paddle.einsum("ji,i->", Tensor([2, 1073741825],"float64"), Tensor([2],"float64"), )
paddle.einsum("ji,i->", Tensor([2, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([1, 2147483649],"float64"), Tensor([1],"float64"), )
paddle.einsum("ji,j", Tensor([1, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([10, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([11, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([12, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([13, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([10],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([11],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([12],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([13],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 3, 2, 3, 4],"float64"), Tensor([12, 178956971],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([29826162, 3, 2, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("k...,jk", Tensor([2, 4, 5, 3],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("k...,jk", Tensor([35791395, 4, 5, 3],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 8],"float32"), Tensor([1, 306783379, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 8],"float32"), Tensor([1, 8, 536870912],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 16777216, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([9586981, 14, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("m,d->md", Tensor([196],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("m,d->md", Tensor([4294967295],"float32"), Tensor([192],"float32"), )
paddle.einsum("m,d->md", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 4, 8],"float32"), Tensor([1, 8, 536870912],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 143165577, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 143165577, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 238609295, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 238609295, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([2, 2, 1073741824],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 357913942],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 286331153],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 286331153],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 178956971, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 2, 357913942],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 715827883, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 536870912, 4, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([178956971, 3, 4, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 119304648, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 119304648, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 143165577],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 143165577],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 71582789, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 71582789, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([47721859, 3, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([47721859, 3, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 143165577, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 143165577, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 238609295, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 238609295, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 286331153],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 286331153],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 178956971, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 2, 357913942],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 119304648, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 119304648, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 143165577],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 143165577],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 71582789, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 71582789, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([47721859, 3, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([47721859, 3, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float16"), Tensor([1, 107374183, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 107374183, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 3, 178956971, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 3, 5, 2, 143165577],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 3, 5, 71582789, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([35791395, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 107374183, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 134217728, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 4, 2, 178956971],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 4, 89478486, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 5, 2, 143165577],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 5, 71582789, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float16"), Tensor([1, 3, 5, 71582789, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 3, 5, 2, 71582789],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 3, 5, 35791395, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 3, 89478486, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 53687092, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([35791395, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 3, 5, 2, 71582789],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 3, 5, 35791395, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 53687092, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([35791395, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 71582789],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 71582789],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float16"), Tensor([2, 3, 5, 35791395, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 89478486, 2, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float16"), Tensor([2, 53687092, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float16"), Tensor([35791395, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([1474921, 52, 7, 8],"float32"), Tensor([1474921, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([1474921, 52, 7, 8],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 38347923, 7, 8],"float32"), Tensor([2, 38347923, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 38347923, 7, 8],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 5162221, 8],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 5899681],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 19173962, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 52, 14, 2949841],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([737461, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 21913099, 7, 14],"float32"), Tensor([2, 21913099, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 21913099, 7, 14],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 2949841, 14],"float32"), Tensor([2, 52, 2949841, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([2, 19173962, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([2, 52, 5162221, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([737461, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 5899681],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([842812, 52, 7, 14],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([842812, 52, 7, 14],"float32"), Tensor([842812, 52, 14, 8],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 429496730],"float32"), Tensor([10, 60, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 60],"float32"), Tensor([10, 42949673, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 60],"float32"), Tensor([7158279, 60, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 2147483648],"float32"), Tensor([2, 60, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 60],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 60],"float32"), Tensor([35791395, 60, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 214748365],"float32"), Tensor([20, 60, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 60],"float32"), Tensor([20, 10737419, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 60],"float32"), Tensor([3579140, 60, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 143165577],"float32"), Tensor([30, 60, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 60],"float32"), Tensor([2386093, 60, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 60],"float32"), Tensor([30, 4772186, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 1073741824],"float32"), Tensor([4, 60, 4],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 60],"float32"), Tensor([17895698, 60, 4],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 60],"float32"), Tensor([4, 268435456, 4],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([10, 60, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([2, 60, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([20, 60, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([30, 60, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([4, 60, 4],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 42949673, 10],"float32"), Tensor([60, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 42949673, 10],"float32"), Tensor([60, 42949673, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 10],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 10],"float32"), Tensor([6710887, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 7158279],"float32"), Tensor([60, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 7158279],"float32"), Tensor([60, 10, 7158279],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([17895698, 60, 4],"float32"), Tensor([17895698, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 1073741824, 2],"float32"), Tensor([60, 1073741824, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 1073741824, 2],"float32"), Tensor([60, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 2],"float32"), Tensor([33554432, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 2],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 35791395],"float32"), Tensor([60, 2, 35791395],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 35791395],"float32"), Tensor([60, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 10737419, 20],"float32"), Tensor([60, 10737419, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 10737419, 20],"float32"), Tensor([60, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 20],"float32"), Tensor([3355444, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 20],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 3579140],"float32"), Tensor([60, 20, 3579140],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 3579140],"float32"), Tensor([60, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2386093, 60, 30],"float32"), Tensor([2386093, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 4772186, 30],"float32"), Tensor([60, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 4772186, 30],"float32"), Tensor([60, 4772186, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 2386093],"float32"), Tensor([60, 30, 2386093],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 2386093],"float32"), Tensor([60, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 30],"float32"), Tensor([2236963, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 30],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([35791395, 60, 2],"float32"), Tensor([35791395, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([3579140, 60, 20],"float32"), Tensor([3579140, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 268435456, 4],"float32"), Tensor([60, 268435456, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 268435456, 4],"float32"), Tensor([60, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 17895698],"float32"), Tensor([60, 4, 17895698],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 17895698],"float32"), Tensor([60, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 4],"float32"), Tensor([16777216, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 4],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([7158279, 60, 10],"float32"), Tensor([7158279, 10, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([10, 60, 10],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([17895698, 60, 4],"float32"), Tensor([4, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 1073741824, 2],"float32"), Tensor([2, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 60, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 60, 2],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 60, 35791395],"float32"), Tensor([2, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([20, 60, 20],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2386093, 60, 30],"float32"), Tensor([30, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 4772186, 30],"float32"), Tensor([30, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 60, 2386093],"float32"), Tensor([30, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 60, 30],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([35791395, 60, 2],"float32"), Tensor([2, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([3579140, 60, 20],"float32"), Tensor([20, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([4, 60, 4],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([7158279, 60, 10],"float32"), Tensor([10, 64],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 306783379],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([15, 286331153],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([15, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([4, 1073741824],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([4, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([8, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([8, 536870912],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 1073741824],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 1073741824],"float32"), Tensor([4, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([4, 536870913],"float64"), Tensor([4, 4],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([4, 536870913],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([536870913, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.expand(Tensor([1, 1, 306783379, 7],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([1, 1, 306783379, 7],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([1, 1, 4294967295],"int32"), list[13,2,32,], )
paddle.expand(Tensor([1, 1, 7, 306783379],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([1, 1, 7, 306783379],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([1, 10, 1, 429496730],"float32"), list[-1,-1,256,256,], )
paddle.expand(Tensor([1, 10, 1, 429496730],"float32"), list[-1,-1,32,32,], )
paddle.expand(Tensor([1, 10, 429496730, 1],"float32"), list[-1,-1,256,256,], )
paddle.expand(Tensor([1, 10, 429496730, 1],"float32"), list[-1,-1,32,32,], )
paddle.expand(Tensor([1, 10, 429496730],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([1, 134217728, 32],"int32"), list[13,2,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,1024,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,11,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,20,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,10,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,7,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,8,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[15,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[2,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[2,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[4,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[4,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[4,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[6,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[6,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[8,32,], )
paddle.expand(Tensor([1, 275319, 100, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 282564, 100, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 282564, 100, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 282564, 152, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 290201, 100, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 298262, 100, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 3, 1, 1, 1, 1431655765],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 3, 1, 1, 1431655765, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 3, 1, 1431655765, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 3, 1431655765, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 306783379, 7],"int64"), shape=list[14,2,-1,], )
paddle.expand(Tensor([1, 306784, 100, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 315807, 100, 136],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 315807, 100, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 4294967295, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 4294967295, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([1, 4294967295],"float32"), tuple(10,10,), )
paddle.expand(Tensor([1, 43826197, 7, 7],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([1, 43826197, 7, 7],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([1, 5052903, 25, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 613566757, 7],"float32"), shape=list[13,7,7,], )
paddle.expand(Tensor([1, 7, 613566757],"float32"), shape=list[13,7,7,], )
paddle.expand(Tensor([10, 1, 10, 42949673],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([10, 1, 429496730, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([10, 42949673, 10, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([10, 429496730],"float32"), tuple(10,10,), )
paddle.expand(Tensor([1048576, 32, 128],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([1073741824, 1, 2, 2],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([107374183, 20],"int64"), list[1,20,], )
paddle.expand(Tensor([108, 39768216],"int32"), list[-1,1,], )
paddle.expand(Tensor([117, 36709123],"int32"), list[-1,1,], )
paddle.expand(Tensor([1200, 3579140],"int32"), list[-1,1,], )
paddle.expand(Tensor([128, 16777217],"int64"), tuple(128,128,), )
paddle.expand(Tensor([13, 1, 165191050, 2],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 1, 2, 165191050],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 1, 2, 165191050],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 1, 330382100, 1],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([13, 1, 330382100],"float32"), shape=tuple(13,7,16,), )
paddle.expand(Tensor([13, 1, 330382100],"int32"), list[13,2,32,], )
paddle.expand(Tensor([13, 1, 4, 82595525],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 1, 4, 82595525],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 1, 47197443, 7],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 1, 47197443, 7],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 1, 5, 13215284, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 1, 66076420, 1, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 1, 7, 47197443],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 1, 82595525, 4],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 1, 82595525, 4],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 11799361, 4, 7],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 13215284, 5, 1, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 165191050, 2, 1],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 165191050, 2, 1],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 20648882, 16],"float32"), shape=tuple(13,7,16,), )
paddle.expand(Tensor([13, 20648882, 4, 4],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 330382100, 1],"int32"), list[13,2,32,], )
paddle.expand(Tensor([13, 4, 1, 1, 1, 82595525],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 1, 1, 10324441, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 1, 10324441, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 10324441, 1, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 2, 41297763],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 4, 2, 41297763],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 4, 4, 20648882],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 4, 4, 20648882],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 4, 7, 11799361],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 41297763, 1, 1, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 41297763, 2, 4],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 47197443, 7, 1],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([13, 47197443, 7, 1],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 6742492, 7, 7],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 82595525, 2, 2],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 82595525, 4, 1],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 82595525, 4, 1],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([134217728, 1, 32],"int32"), list[13,2,32,], )
paddle.expand(Tensor([134217728, 32],"float32"), list[128,32,32,], )
paddle.expand(Tensor([134217728, 32],"float32"), list[96,32,32,], )
paddle.expand(Tensor([134217728, 4, 1, 1, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([134217728, 4, 1, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([14, 153391690],"int64"), tuple(14,32,), name=None, )
paddle.expand(Tensor([1431655765, 3, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([15, 143165577],"int64"), tuple(15,32,), name=None, )
paddle.expand(Tensor([153391690, 1, 4, 7],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([153391690, 4, 7, 1],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([16, 2097152, 128],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([16, 32, 8388608],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([1620, 2651215],"int32"), list[-1,1,], )
paddle.expand(Tensor([171798692, 1, 5, 1, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([171798692, 1, 5, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([1728, 2485514],"int32"), list[-1,1,], )
paddle.expand(Tensor([195225787, 11],"int64"), list[1,11,], )
paddle.expand(Tensor([2, 1, 153391690, 14],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([2, 1, 7, 306783379],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([2, 2, 1, 8, 128, 1048576],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 128, 1048576],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 1398102, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 1398102, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 87382, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 87382, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2, 10923, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 10923, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2147483648],"float32"), list[2,3072,], )
paddle.expand(Tensor([2, 21846, 1, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 21846, 1, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 21913099, 7, 14],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([2, 268435456, 8],"float32"), list[-1,8,-1,], )
paddle.expand(Tensor([2097153, 1024],"int64"), list[1,1024,], )
paddle.expand(Tensor([2147483648, 2],"float16"), shape=list[512,3,2,], )
paddle.expand(Tensor([2147483648, 2],"float32"), shape=list[512,3,2,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[1,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[14,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[2,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[4,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[6,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(128,128,), )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(14,32,), name=None, )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(15,32,), name=None, )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(4,32,), name=None, )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(8,32,), name=None, )
paddle.expand(Tensor([2147483649],"int64"), list[13,7,4,], )
paddle.expand(Tensor([214748365, 10],"int64"), list[14,10,], )
paddle.expand(Tensor([21846, 2, 1, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([21846, 2, 1, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([268435456, 1, 16],"float32"), shape=tuple(13,7,16,), )
paddle.expand(Tensor([268435456, 1, 4, 4],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([268435456, 4, 4, 1],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([268435456, 4, 4, 1],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([268435457, 8],"int64"), list[14,8,], )
paddle.expand(Tensor([275319, 1, 100, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([282564, 1, 100, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([282564, 1, 100, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([282564, 1, 152, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([290201, 1, 100, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([298262, 1, 100, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([3, 1431655765],"float16"), shape=list[512,3,2,], )
paddle.expand(Tensor([3, 1431655765],"float32"), shape=list[512,3,2,], )
paddle.expand(Tensor([306783379, 1, 7],"int64"), shape=list[14,2,-1,], )
paddle.expand(Tensor([306783379, 7],"int64"), list[14,7,], )
paddle.expand(Tensor([306784, 1, 100, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([315807, 1, 100, 136],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([315807, 1, 100, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[128,32,32,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[16,32,128,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[16,32,64,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[96,32,32,], )
paddle.expand(Tensor([33554432, 128],"float32"), list[16,32,128,], )
paddle.expand(Tensor([33554432, 128],"float32"), list[32,64,128,], )
paddle.expand(Tensor([4, 536870913],"int64"), tuple(4,32,), name=None, )
paddle.expand(Tensor([4294967295, 1, 1],"int32"), list[13,2,32,], )
paddle.expand(Tensor([4294967295, 1],"float32"), list[2,3072,], )
paddle.expand(Tensor([4294967295],"float32"), shape=list[128,96,], )
paddle.expand(Tensor([429496730, 1, 10, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([429496730, 10, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([429496730, 10],"float32"), tuple(10,10,), )
paddle.expand(Tensor([43826197, 1, 7, 14],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([43826197, 1, 7, 7],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([43826197, 1, 7, 7],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([5052903, 1, 25, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([52, 1, 16519105, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 1, 5, 3303821, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 1, 82595525, 1],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([52, 10324441, 1, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 11799361, 7, 1],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([52, 3303821, 5, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 4, 1, 1, 1, 20648882],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 4, 1, 1, 2581111, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 4, 1, 2581111, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 4, 2581111, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([536870912, 1, 2, 4],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([536870912, 4, 2, 1],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([536870912, 4, 2, 1],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([613566757, 1, 7, 1],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([613566757, 1, 7, 1],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([64, 67108864],"float32"), list[32,64,128,], )
paddle.expand(Tensor([67108864, 64],"float32"), list[16,32,64,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[14,32,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[15,32,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[4,32,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[8,32,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[14,3,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[2,3,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[4,3,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[6,3,], )
paddle.expand(Tensor([8, 268435457],"int64"), tuple(8,32,), name=None, )
paddle.expand(Tensor([87652394, 1, 7, 7],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([87652394, 7, 7],"float32"), shape=list[13,7,7,], )
paddle.expand(x=Tensor([1, 1, 1],"int64"), shape=Tensor([4294967295],"int32"), )
paddle.expand(x=Tensor([1, 1, 2147483649],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([1, 2147483649, 1],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([2147483649, 1, 1],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([2147483649, 1],"int64"), shape=tuple(3,2,), )
paddle.expand(x=Tensor([2147483649],"float64"), shape=list[3,3,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[1,1,1,1,1,1,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[1,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[2,3,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[2,], )
paddle.expand(x=Tensor([3, 715827883],"int64"), shape=tuple(3,2,), )
paddle.expand(x=Tensor([4294967295],"int32"), shape=list[1,], )
paddle.expand(x=Tensor([4294967295],"int32"), shape=tuple(3,3,), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([32, 67108865],"int64"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([7, 306783379],"int64"), )
paddle.expand_as(Tensor([1, 2, 1, 1],"float32"), Tensor([1, 5478275, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 2147483648],"float32"), Tensor([1, 2, 28, 2147483648],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 2147483648],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 2147483648, 1],"float32"), Tensor([1, 2, 2147483648, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 2147483648, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([32, 128],"int64"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([32, 2147483649],"int64"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([7, 128],"int64"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([7, 2147483649],"int64"), )
paddle.expand_as(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([10, 547828, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([2739138, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 214748365],"float32"), Tensor([10, 2, 28, 214748365],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 214748365],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 214748365, 1],"float32"), Tensor([10, 2, 214748365, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 214748365, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 429496730, 1, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 429496730, 1, 1],"float32"), Tensor([10, 429496730, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 40518560, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 40518560, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 51682, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 51682, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([68479, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([68479, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 506482],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 506482],"float32"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 506482, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 506482, 28],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 195225787],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 195225787],"float32"), Tensor([11, 2, 14, 195225787],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([10956550, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([11, 1992100, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 195225787, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 195225787, 1],"float32"), Tensor([11, 2, 195225787, 14],"float32"), )
paddle.expand_as(Tensor([11, 390451573, 1, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 390451573, 1, 1],"float32"), Tensor([11, 390451573, 14, 14],"float32"), )
paddle.expand_as(Tensor([16777217, 128],"int64"), Tensor([32, 128],"int64"), )
paddle.expand_as(Tensor([16777217, 128],"int64"), Tensor([7, 128],"int64"), )
paddle.expand_as(Tensor([1],"float32"), Tensor([1, 2147483649],"int64"), )
paddle.expand_as(Tensor([1],"float32"), Tensor([2147483649, 1],"int64"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 128],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 128],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 2],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 2],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 4],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 128],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 128],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 107374183, 2],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 107374183, 2],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 1677722, 128],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 1677722, 128],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 53687092, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([2147484, 500, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([4294968, 500, 2],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([4294968, 500, 2],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([67109, 500, 128],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([67109, 500, 128],"float32"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 128],"float16"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 128],"float32"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([2147483648, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([2147483648, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([2],"float32"), Tensor([1, 2147483649],"int64"), )
paddle.expand_as(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), )
paddle.expand_as(Tensor([3, 1],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([1, 2147483649],"int64"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([2, 1073741825],"int64"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([4, 536870913],"int64"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([3, 3],"float32"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 3],"float32"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 4],"float32"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([6, 4],"float32"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([1, 1],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([1, 2],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([1, 3],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([2, 3],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([4, 3],"int64"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([53687092, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([53687092, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([6, 1],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.expand_as(Tensor([6, 715827883],"float32"), Tensor([6, 4],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 128],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 128],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 128],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 128],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 2],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 2],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 4],"float16"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 1, 1, 2147483649],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 1, 2147483649, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 2147483649, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 2147483649, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 2147483649, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([2147483649, 1, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([2, 2147483648],"int32"), y=Tensor([1, 2, 2],"int32"), )
paddle.expand_as(x=Tensor([2, 2],"int32"), y=Tensor([1, 2, 2147483648],"int32"), )
paddle.expand_as(x=Tensor([2, 2],"int32"), y=Tensor([1, 2147483648, 2],"int32"), )
paddle.expand_as(x=Tensor([2147483648, 2],"int32"), y=Tensor([1, 2, 2],"int32"), )
paddle.expand_as(x=Tensor([2147483649, 1],"int64"), y=Tensor([2147483649, 2],"int64"), )
paddle.expand_as(x=Tensor([2147483649, 1],"int64"), y=Tensor([3, 2],"int64"), )
paddle.expand_as(x=Tensor([2147483649],"float64"), y=Tensor([3, 3],"float64"), )
paddle.expand_as(x=Tensor([2147483649],"int64"), y=Tensor([1, 1, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([2147483649],"int64"), y=Tensor([2, 3],"int64"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([2, 1, 2147483648],"int32"), )
paddle.Tensor.__truediv__(Tensor([2, 5, 143165577, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 5, 2, 214748365],"float32"), Tensor([2, 3],"float32"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([2147483648, 1, 2],"int32"), )
paddle.expand_as(x=Tensor([3, 1],"int64"), y=Tensor([1073741825, 2],"int64"), )
paddle.Tensor.__truediv__(Tensor([2, 5, 2, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 5, 2, 3],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.expand_as(x=Tensor([3, 715827883],"int64"), y=Tensor([3, 2],"int64"), )
paddle.expand_as(x=Tensor([3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.expand_as(x=Tensor([3],"int32"), y=Tensor([3, 1431655765],"int32"), )
paddle.expand_as(x=Tensor([3],"int64"), y=Tensor([2, 1073741825],"int64"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([1],"int32"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([2, 1, 2],"int32"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([3, 3],"int32"), )
paddle.floor_divide(Tensor([10, 1024],"int64"), Tensor([10, 214748365],"int64"), )
paddle.floor_divide(Tensor([10, 1024],"int64"), Tensor([2097153, 1024],"int64"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 214748365],"int64"), Tensor([10, 1024],"int64"), )
paddle.floor_divide(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([1],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.floor_divide(Tensor([1],"float16"), Tensor([4294967295],"float16"), )
paddle.floor_divide(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.floor_divide(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.floor_divide(Tensor([2097153, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.floor_divide(Tensor([2147483649],"float64"), Tensor([3],"float64"), )
paddle.floor_divide(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 8],"int64"), Tensor([2147483649],"int64"), )
paddle.floor_divide(Tensor([4294967295],"bfloat16"), Tensor([3],"bfloat16"), )
paddle.Tensor.__truediv__(Tensor([2147483648, 1, 2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.floor_divide(Tensor([4294967295],"bfloat16"), Tensor([4],"bfloat16"), )
paddle.floor_divide(Tensor([4294967295],"float16"), Tensor([3],"float16"), )
paddle.floor_divide(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.floor_divide(Tensor([4],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([8, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.floor_divide(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.floor_divide(x=Tensor([2],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([4294967295, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 3, 3],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([3, 3, 477218589],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([3],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.floor_divide(x=Tensor([4294967295, 1],"int32"), y=Tensor([3, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([4294967295],"int32"), y=Tensor([2],"int32"), )
paddle.floor_divide(x=Tensor([4294967295],"int32"), y=Tensor([3],"int32"), )
paddle.greater_equal(Tensor([1, 1],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.greater_equal(Tensor([1, 1],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.greater_equal(Tensor([1, 2147483649],"int64"), Tensor([1, 1],"int64"), )
paddle.greater_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.greater_equal(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.greater_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_equal(Tensor([107374183, 40],"float32"), Tensor([3, 40],"float32"), )
paddle.greater_equal(Tensor([107374183, 40],"float32"), Tensor([40, 40],"float32"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1290556],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 1290556, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 10324441, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 645278, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([8388609, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 5162221, 1],"int64"), Tensor([13, 2, 16, 5162221, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 10324441, 1],"int64"), Tensor([13, 2, 8, 10324441, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2, 10324441, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1290556, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2581111, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([16777217, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 2581111],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2581111, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 5162221, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 8, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.greater_equal(Tensor([1431656, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([16777217, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([2, 1, 1, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 1, 2147483648],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 2147483648, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 2147483648],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 2147483648, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 107374183, 4, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 1],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.greater_equal(Tensor([2, 1],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.greater_equal(Tensor([2, 2147483648, 1, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 2147483648, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), )
paddle.greater_equal(Tensor([2, 256, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 3, 143165577, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 178956971],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 107374183, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 3, 143165577, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 3, 4, 178956971],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([71582789, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 71582789, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 53687092, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([35791395, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 71582789, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.greater_equal(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.greater_equal(Tensor([2, 53687092, 4, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 768, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2147483649, 1],"int64"), Tensor([1, 1],"int64"), )
paddle.greater_equal(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.greater_equal(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_equal(Tensor([3, 1431655765],"float32"), Tensor([3, 40],"float32"), )
paddle.greater_equal(Tensor([3, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.greater_equal(Tensor([3, 40],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.greater_equal(Tensor([33554433, 2, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([35791395, 3, 4, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([4, 256, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([40, 107374183],"float32"), Tensor([40, 40],"float32"), )
paddle.greater_equal(Tensor([40, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.greater_equal(Tensor([40, 40],"float32"), Tensor([40, 107374183],"float32"), )
paddle.greater_equal(Tensor([4294967295, 1, 1, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.greater_equal(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.greater_equal(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.greater_equal(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([1431656, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 5726624],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 4294968, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 2863312, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 5726624],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 4294968, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 2863312, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([71582789, 3, 4, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.greater_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_equal(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.greater_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_equal(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.greater_equal(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.greater_equal(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.greater_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_equal(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.greater_equal(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.greater_equal(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.greater_equal(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.greater_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_equal(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.greater_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_than(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.greater_than(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.greater_than(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_than(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.greater_than(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.greater_than(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.greater_than(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.greater_than(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.greater_than(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.greater_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_than(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.greater_than(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_than(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_than(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.greater_than(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.greater_than(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.greater_than(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_than(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.greater_than(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.greater_than(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.greater_than(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.greater_than(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_than(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.greater_than(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.histogram(input=Tensor([2147483649],"float64"), )
paddle.histogram(input=Tensor([4, 536870913],"float64"), )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, max=5, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-2, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-4, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-40, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-41, max=-5, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=4, max=5, )
paddle.histogram(input=Tensor([4, 536870913],"int64"), )
paddle.histogram(input=Tensor([536870913, 4],"float64"), )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, max=5, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-2, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-4, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-40, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-41, max=-5, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=4, max=5, )
paddle.histogram(input=Tensor([536870913, 4],"int64"), )
paddle.histogramdd(Tensor([1073741825, 2],"float64"), bins=list[3,3,], weights=Tensor([4],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([268435457, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([268435457, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 1073741824],"float32"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 134217729, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 134217729, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=False, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=5, weights=Tensor([1073741825, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=5, weights=Tensor([4, 536870913],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 536870913],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 536870913],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([1073741825, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 536870913],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 536870913],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 536870913],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2],"float64"), bins=list[3,3,], weights=Tensor([2147483649],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 536870913],"float64"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 536870913],"float64"), bins=list[3,3,], weights=Tensor([4],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 4],"float32"), weight=Tensor([4294967295],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 4],"float64"), weight=Tensor([2147483649],"float64"), )
paddle.nn.functional.prelu(x=Tensor([3, 238609295, 3],"float64"), weight=Tensor([3],"float64"), )
paddle.nn.functional.prelu(x=Tensor([3, 3, 3],"float64"), weight=Tensor([2147483649],"float64"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 2147483648],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 107374183, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 2147483648],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 2147483648],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 2147483648, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 4294967295, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([2147483648, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 53687092, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.hsplit(Tensor([2147483649],"float64"), 3, )
paddle.hsplit(Tensor([2147483649],"int64"), 2, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32768, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.hsplit(Tensor([4294967295],"bool"), 3, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.hsplit(Tensor([4294967295],"float16"), 3, )
paddle.hsplit(Tensor([4294967295],"float32"), 3, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 43691, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 2097152],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.hsplit(Tensor([4294967295],"int32"), 3, )
paddle.increment(Tensor([2147483649],"int64"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.increment(Tensor([4294967295],"float32"), value=2.0, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.increment(x=Tensor([2147483649],"float64"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 2, 524288],"bfloat16"), Tensor([1, 1024, 2, 524288],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.increment(x=Tensor([2147483649],"float64"), value=2.0, )
paddle.increment(x=Tensor([2147483649],"int64"), )
paddle.increment(x=Tensor([2147483649],"int64"), value=1.0, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.increment(x=Tensor([4294967295],"float32"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 43691, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.increment(x=Tensor([4294967295],"int32"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([1, 4294967295],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([100, 42949673],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([101, 42524429],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([104, 41297763],"float16"), None, act_method="swiglu", )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), attn_mask=Tensor([1, 1, 131072, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), attn_mask=Tensor([1, 1, 16384, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), attn_mask=Tensor([1, 1, 16384, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), attn_mask=Tensor([1, 1, 21846, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), attn_mask=Tensor([1, 1, 32768, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), attn_mask=Tensor([1, 1, 32768, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 134217728, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 1048576],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 262144],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.Tensor.expand(Tensor([1, 1, 1, 2147483649],"int64"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,10,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,100,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,101,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,102,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,103,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,11,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,12,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,13,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,14,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,15,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,16,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,17,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,18,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,19,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,2,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,20,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,21,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,22,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,24,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,26,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,27,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,28,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,29,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,30,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,31,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,32,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,33,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,34,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,35,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,36,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,37,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,38,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,39,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,40,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,41,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,42,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,43,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,44,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,45,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,46,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,47,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,48,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,49,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,5,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,50,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,51,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,52,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,53,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,54,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,55,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,56,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,57,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,58,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,59,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,60,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,61,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,62,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,63,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,64,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,65,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,66,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,67,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,68,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,69,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,7,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,70,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,71,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,72,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,73,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,74,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,75,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,76,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,77,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,78,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,79,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,8,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,81,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,82,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,83,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,84,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,85,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,86,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,87,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,88,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,89,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,9,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,90,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,91,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,92,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,93,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,94,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,95,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,96,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,97,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,98,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,1,99,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,4,4,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,8,1,1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,8,1,2,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"bool"), list[1,8,1,3,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float16"), list[2,1,1,4096,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float16"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float16"), list[2,1,4096,4096,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,2,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,24,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,26,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,20,22,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[1,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[2,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[4,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 4294967295],"float32"), list[6,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 10, 429496730],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 10, 429496730],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 10, 429496730],"bool"), list[4,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 10, 429496730],"bool"), list[6,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 10, 429496730],"float32"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 10, 429496730],"float32"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 1007, 4265112],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([1, 1, 102261127, 42],"bool"), list[1,1,1,42,], )
paddle.Tensor.expand(Tensor([1, 1, 1024, 4194304],"float32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([1, 1, 104755300, 41],"bool"), list[1,1,1,41,], )
paddle.Tensor.expand(Tensor([1, 1, 1048576, 4096],"float16"), list[2,1,1,4096,], )
paddle.Tensor.expand(Tensor([1, 1, 1048576, 4096],"float16"), list[2,1,4096,4096,], )
paddle.Tensor.expand(Tensor([1, 1, 107, 40139882],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([1, 1, 107, 40139882],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([1, 1, 1073741824, 4],"bool"), list[1,1,4,4,], )
paddle.Tensor.expand(Tensor([1, 1, 107374183, 40],"bool"), list[1,1,1,40,], )
paddle.Tensor.expand(Tensor([1, 1, 10845878, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([1, 1, 109, 39403370],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([1, 1, 109, 39403370],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([1, 1, 110, 39045158],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([1, 1, 110, 39045158],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([1, 1, 110127367, 39],"bool"), list[1,1,1,39,], )
paddle.Tensor.expand(Tensor([1, 1, 110127367, 39],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([1, 1, 111, 38693400],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([1, 1, 111, 38693400],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([1, 1, 112, 38347923],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([1, 1, 112, 38347923],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([1, 1, 113025456, 38],"bool"), list[1,1,1,38,], )
paddle.Tensor.expand(Tensor([1, 1, 113025456, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([1, 1, 11392487, 377],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([1, 1, 114, 37675152],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([1, 1, 115, 37347542],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([1, 1, 116080198, 37],"bool"), list[1,1,1,37,], )
paddle.Tensor.expand(Tensor([1, 1, 119304648, 36],"bool"), list[1,1,1,36,], )
paddle.Tensor.expand(Tensor([1, 1, 119304648, 36],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([1, 1, 122713352, 35],"bool"), list[1,1,1,35,], )
paddle.Tensor.expand(Tensor([1, 1, 12413201, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 1, 12413201, 346],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 1, 126322568, 34],"bool"), list[1,1,1,34,], )
paddle.Tensor.expand(Tensor([1, 1, 127, 33818641],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([1, 1, 130150525, 33],"bool"), list[1,1,1,33,], )
paddle.Tensor.expand(Tensor([1, 1, 134217728, 32],"bool"), list[1,1,1,32,], )
paddle.Tensor.expand(Tensor([1, 1, 134217728, 32],"float32"), tuple(1,128,32,32,), )
paddle.Tensor.expand(Tensor([1, 1, 138547333, 31],"bool"), list[1,1,1,31,], )
paddle.Tensor.expand(Tensor([1, 1, 141, 30460761],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([1, 1, 14128182, 304],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([1, 1, 14128182, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([1, 1, 14221747, 302],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([1, 1, 1431655765, 3],"bool"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1, 1, 1431655765, 3],"bool"), list[1,8,1,3,], )
paddle.Tensor.expand(Tensor([1, 1, 1431655765, 3],"float32"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1, 1, 143165577, 30],"bool"), list[1,1,1,30,], )
paddle.Tensor.expand(Tensor([1, 1, 147, 29217465],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([1, 1, 148, 29020050],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([1, 1, 148102321, 29],"bool"), list[1,1,1,29,], )
paddle.Tensor.expand(Tensor([1, 1, 14913081, 288],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([1, 1, 15017369, 286],"float32"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([1, 1, 152, 28256364],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([1, 1, 153391690, 28],"bool"), list[1,1,1,28,], )
paddle.Tensor.expand(Tensor([1, 1, 159072863, 27],"bool"), list[1,1,1,27,], )
paddle.Tensor.expand(Tensor([1, 1, 164, 26188825],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([1, 1, 165, 26030105],"float32"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([1, 1, 165191050, 26],"bool"), list[1,1,1,26,], )
paddle.Tensor.expand(Tensor([1, 1, 165191050, 26],"float32"), list[1,1,1,26,], )
paddle.Tensor.expand(Tensor([1, 1, 171798692, 25],"bool"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([1, 1, 171798692, 25],"float32"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([1, 1, 172, 24970741],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([1, 1, 178956971, 24],"bool"), list[1,1,1,24,], )
paddle.Tensor.expand(Tensor([1, 1, 178956971, 24],"float32"), list[1,1,1,24,], )
paddle.Tensor.expand(Tensor([1, 1, 17895698, 240],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([1, 1, 17970575, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([1, 1, 18046082, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([1, 1, 18122225, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([1, 1, 18276457, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([1, 1, 186, 23091223],"float32"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([1, 1, 186737709, 23],"bool"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([1, 1, 186737709, 23],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([1, 1, 186737709, 23],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([1, 1, 186737709, 23],"float32"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([1, 1, 195225787, 22],"bool"), list[1,1,1,22,], )
paddle.Tensor.expand(Tensor([1, 1, 195225787, 22],"float32"), list[1,1,20,22,], )
paddle.Tensor.expand(Tensor([1, 1, 19522579, 220],"float32"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([1, 1, 19611723, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([1, 1, 198, 21691755],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([1, 1, 20, 214748365],"bool"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 20, 214748365],"bool"), list[1,4,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 20, 214748365],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 204522253, 21],"bool"), list[1,1,1,21,], )
paddle.Tensor.expand(Tensor([1, 1, 204522253, 21],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([1, 1, 20452226, 210],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([1, 1, 20550083, 209],"float32"), list[14,1,209,209,], )
paddle.Tensor.expand(Tensor([1, 1, 20550083, 209],"float32"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([1, 1, 206, 20849356],"float32"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([1, 1, 20648882, 208],"bool"), list[2,1,80,208,], )
paddle.Tensor.expand(Tensor([1, 1, 20748635, 207],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([1, 1, 20849356, 206],"float32"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([1, 1, 209, 20550083],"float32"), list[14,1,209,209,], )
paddle.Tensor.expand(Tensor([1, 1, 209, 20550083],"float32"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([1, 1, 21, 204522253],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([1, 1, 21262215, 202],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([1, 1, 2147483648, 2],"bool"), list[1,1,1,2,], )
paddle.Tensor.expand(Tensor([1, 1, 2147483648, 2],"bool"), list[1,8,1,2,], )
paddle.Tensor.expand(Tensor([1, 1, 2147483648, 2],"float32"), list[1,1,1,2,], )
paddle.Tensor.expand(Tensor([1, 1, 2147483649, 1],"int64"), shape=list[13,2,4,1,], )
paddle.Tensor.expand(Tensor([1, 1, 214748365, 20],"bool"), list[1,1,1,20,], )
paddle.Tensor.expand(Tensor([1, 1, 214748365, 20],"bool"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 214748365, 20],"bool"), list[1,4,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 214748365, 20],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 214748365, 20],"float32"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 1, 21691755, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([1, 1, 220, 19522579],"float32"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([1, 1, 226050911, 19],"bool"), list[1,1,1,19,], )
paddle.Tensor.expand(Tensor([1, 1, 23, 186737709],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([1, 1, 23091223, 186],"float32"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([1, 1, 238609295, 18],"bool"), list[1,1,1,18,], )
paddle.Tensor.expand(Tensor([1, 1, 24970741, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([1, 1, 252645135, 17],"bool"), list[1,1,1,17,], )
paddle.Tensor.expand(Tensor([1, 1, 26030105, 165],"float32"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([1, 1, 26188825, 164],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([1, 1, 268435456, 16],"bool"), list[1,1,1,16,], )
paddle.Tensor.expand(Tensor([1, 1, 28256364, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([1, 1, 286, 15017369],"float32"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([1, 1, 286331153, 15],"bool"), list[1,1,1,15,], )
paddle.Tensor.expand(Tensor([1, 1, 288, 14913081],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([1, 1, 29020050, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([1, 1, 29217465, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([1, 1, 3, 1431655765],"bool"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([1, 1, 3, 1431655765],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([1, 1, 3, 1431655765],"float32"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([1, 1, 302, 14221747],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([1, 1, 304, 14128182],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([1, 1, 304, 14128182],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([1, 1, 30460761, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([1, 1, 306783379, 14],"bool"), list[1,1,1,14,], )
paddle.Tensor.expand(Tensor([1, 1, 32, 134217728],"float32"), tuple(1,128,32,32,), )
paddle.Tensor.expand(Tensor([1, 1, 330382100, 13],"bool"), list[1,1,1,13,], )
paddle.Tensor.expand(Tensor([1, 1, 33818641, 127],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([1, 1, 346, 12413201],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 1, 346, 12413201],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 1, 357913942, 12],"bool"), list[1,1,1,12,], )
paddle.Tensor.expand(Tensor([1, 1, 36, 119304648],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([1, 1, 37025581, 58],"int64"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 37347542, 115],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([1, 1, 37675152, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([1, 1, 37675152, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 377, 11392487],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([1, 1, 38, 113025456],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([1, 1, 38347923, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([1, 1, 38693400, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([1, 1, 39, 110127367],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([1, 1, 390451573, 11],"bool"), list[1,1,1,11,], )
paddle.Tensor.expand(Tensor([1, 1, 390451573, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([1, 1, 39045158, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([1, 1, 39403370, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([1, 1, 396, 10845878],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([1, 1, 4, 1073741824],"bool"), list[1,1,4,4,], )
paddle.Tensor.expand(Tensor([1, 1, 4, 536870913],"int64"), shape=list[13,2,4,1,], )
paddle.Tensor.expand(Tensor([1, 1, 40139882, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([1, 1, 41698712, 103],"bool"), list[1,1,1,103,], )
paddle.Tensor.expand(Tensor([1, 1, 4194304, 1024],"float32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([1, 1, 42107523, 102],"bool"), list[1,1,1,102,], )
paddle.Tensor.expand(Tensor([1, 1, 42524429, 101],"bool"), list[1,1,1,101,], )
paddle.Tensor.expand(Tensor([1, 1, 4265112, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"bool"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"bool"), list[1,8,1,1,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"float16"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"float32"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"float32"), list[1,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"float32"), list[2,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"float32"), list[4,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295, 1],"float32"), list[6,1,4,8,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 4294967295],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([1, 1, 4294967295],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295],"float32"), list[3,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 4294967295],"float32"), shape=list[2,-1,-1,], )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float64"), Tensor([3, 1, 715827883],"float64"), bias=Tensor([1],"float64"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.Tensor.expand(Tensor([1, 1, 4294967295],"float32"), tuple(1,1,2,), )
paddle.Tensor.expand(Tensor([1, 1, 42949673, 100],"bool"), list[1,1,1,100,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"bool"), list[1,1,1,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"bool"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"bool"), list[4,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"bool"), list[6,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"float32"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"float32"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([1, 1, 429496730, 10],"float32"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 1, 43383509, 99],"bool"), list[1,1,1,99,], )
paddle.Tensor.expand(Tensor([1, 1, 435, 9873489],"float32"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([1, 1, 43826197, 98],"bool"), list[1,1,1,98,], )
paddle.Tensor.expand(Tensor([1, 1, 44278014, 97],"bool"), list[1,1,1,97,], )
paddle.Tensor.expand(Tensor([1, 1, 44739243, 96],"bool"), list[1,1,1,96,], )
paddle.Tensor.expand(Tensor([1, 1, 45210183, 95],"bool"), list[1,1,1,95,], )
paddle.Tensor.expand(Tensor([1, 1, 45691142, 94],"bool"), list[1,1,1,94,], )
paddle.Tensor.expand(Tensor([1, 1, 46182445, 93],"bool"), list[1,1,1,93,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([64, 1, 7, 9586981],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 46684428, 92],"bool"), list[1,1,1,92,], )
paddle.Tensor.expand(Tensor([1, 1, 47, 91382283],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([1, 1, 47197443, 91],"bool"), list[1,1,1,91,], )
paddle.Tensor.expand(Tensor([1, 1, 47197443, 91],"bool"), list[2,1,91,91,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([64, 1, 9586981, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 477218589, 9],"bool"), list[1,1,1,9,], )
paddle.Tensor.expand(Tensor([1, 1, 47721859, 90],"bool"), list[1,1,1,90,], )
paddle.Tensor.expand(Tensor([1, 1, 48258060, 89],"bool"), list[1,1,1,89,], )
paddle.Tensor.expand(Tensor([1, 1, 48806447, 88],"bool"), list[1,1,1,88,], )
paddle.Tensor.expand(Tensor([1, 1, 49367441, 87],"bool"), list[1,1,1,87,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 165],"float32"), Tensor([64, 1369569, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 49941481, 86],"bool"), list[1,1,1,86,], )
paddle.Tensor.expand(Tensor([1, 1, 5, 858993459],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 5, 858993459],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 5, 858993459],"bool"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 5, 858993459],"float32"), list[2,1,5,5,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([64, 1, 7, 9586981],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 5, 858993459],"float32"), list[4,1,5,5,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([64, 1, 9586981, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 5, 858993459],"float32"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 50, 85899346],"bool"), list[2,1,50,50,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 261],"float32"), Tensor([64, 1369569, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 50529027, 85],"bool"), list[1,1,1,85,], )
paddle.Tensor.expand(Tensor([1, 1, 51, 84215045],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([1, 1, 51130564, 84],"bool"), list[1,1,1,84,], )
paddle.Tensor.expand(Tensor([1, 1, 512, 8388608],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([1, 1, 51746594, 83],"bool"), list[1,1,1,83,], )
paddle.Tensor.expand(Tensor([1, 1, 52, 82595525],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([1, 1, 52377650, 82],"bool"), list[1,1,1,82,], )
paddle.Tensor.expand(Tensor([1, 1, 52377650, 82],"bool"), list[2,1,82,82,], )
paddle.Tensor.expand(Tensor([1, 1, 53024288, 81],"bool"), list[1,1,1,81,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 293],"float32"), Tensor([64, 1, 7, 9586981],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 536870912, 8],"bool"), list[1,1,1,8,], )
paddle.Tensor.expand(Tensor([1, 1, 53687092, 80],"bool"), list[1,1,1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 53687092, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([1, 1, 54366675, 79],"bool"), list[1,1,1,79,], )
paddle.Tensor.expand(Tensor([1, 1, 54366675, 79],"bool"), list[2,1,79,79,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 293],"float32"), Tensor([64, 1, 9586981, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 55063684, 78],"bool"), list[1,1,1,78,], )
paddle.Tensor.expand(Tensor([1, 1, 55778797, 77],"bool"), list[1,1,1,77,], )
paddle.Tensor.expand(Tensor([1, 1, 56512728, 76],"bool"), list[1,1,1,76,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([536870912, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([1, 1, 57266231, 75],"bool"), list[1,1,1,75,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 293],"float32"), Tensor([64, 1369569, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 58, 74051161],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 58, 74051161],"bool"), list[1,2,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 58040099, 74],"bool"), list[1,1,1,74,], )
paddle.Tensor.expand(Tensor([1, 1, 58040099, 74],"bool"), list[2,1,74,74,], )
paddle.Tensor.expand(Tensor([1, 1, 58835169, 73],"bool"), list[1,1,1,73,], )
paddle.Tensor.expand(Tensor([1, 1, 59, 72796056],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([1, 1, 59652324, 72],"bool"), list[1,1,1,72,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 389],"float32"), Tensor([64, 1, 7, 9586981],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 6, 715827883],"float32"), list[2,1,6,6,], )
paddle.Tensor.expand(Tensor([1, 1, 60492498, 71],"bool"), list[1,1,1,71,], )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"bool"), list[1,1,1,7,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 389],"float32"), Tensor([64, 1, 9586981, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"bool"), shape=tuple(13,1,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 389],"float32"), Tensor([64, 1369569, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"float32"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"float32"), list[2,1,1,7,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 421],"float32"), Tensor([64, 1, 7, 9586981],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"float32"), list[4,1,1,7,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 421],"float32"), Tensor([64, 1, 9586981, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 613566757, 7],"float32"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([1, 1, 61356676, 70],"bool"), list[1,1,1,70,], )
paddle.Tensor.expand(Tensor([1, 1, 62245903, 69],"bool"), list[1,1,1,69,], )
paddle.Tensor.expand(Tensor([1, 1, 63161284, 68],"bool"), list[1,1,1,68,], )
paddle.Tensor.expand(Tensor([1, 1, 64103990, 67],"bool"), list[1,1,1,67,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 421],"float32"), Tensor([64, 1369569, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 65075263, 66],"bool"), list[1,1,1,66,], )
paddle.Tensor.expand(Tensor([1, 1, 66076420, 65],"bool"), list[1,1,1,65,], )
paddle.Tensor.expand(Tensor([1, 1, 67108864, 64],"bool"), list[1,1,1,64,], )
paddle.Tensor.expand(Tensor([1, 1, 68174085, 63],"bool"), list[1,1,1,63,], )
paddle.Tensor.expand(Tensor([1, 1, 69273667, 62],"bool"), list[1,1,1,62,], )
paddle.Tensor.expand(Tensor([1, 1, 7, 613566757],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([1, 1, 7, 613566757],"bool"), shape=tuple(13,1,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 1, 101, 42524429],"float32"), Tensor([64, 1, 7, 42524429],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 7, 613566757],"float32"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([1, 1, 70409300, 61],"bool"), list[1,1,1,61,], )
paddle.Tensor.expand(Tensor([1, 1, 715827883, 6],"bool"), list[1,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 1, 715827883, 6],"float32"), list[2,1,1,6,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 10201823, 421],"float32"), Tensor([64, 1, 10201823, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 715827883, 6],"float32"), list[2,1,6,6,], )
paddle.Tensor.expand(Tensor([1, 1, 715827883, 6],"float32"), list[4,1,1,6,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 11041048, 389],"float32"), Tensor([64, 1, 11041048, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([143165577, 3, 5],"int64"), Tensor([2, 3, 5],"int64"), )
paddle.Tensor.expand(Tensor([1, 1, 715827883, 6],"float32"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 1, 71582789, 60],"bool"), list[1,1,1,60,], )
paddle.Tensor.expand(Tensor([1, 1, 72796056, 59],"bool"), list[1,1,1,59,], )
paddle.Tensor.expand(Tensor([1, 1, 72796056, 59],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([1, 1, 74, 58040099],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([1, 1, 74, 58040099],"bool"), list[2,1,74,74,], )
paddle.Tensor.expand(Tensor([1, 1, 74051161, 58],"bool"), list[1,1,1,58,], )
paddle.Tensor.expand(Tensor([1, 1, 74051161, 58],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 74051161, 58],"bool"), list[1,2,58,58,], )
paddle.Tensor.expand(Tensor([1, 1, 75350304, 57],"bool"), list[1,1,1,57,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 14658592, 293],"float32"), Tensor([64, 1, 14658592, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 76695845, 56],"bool"), list[1,1,1,56,], )
paddle.Tensor.expand(Tensor([1, 1, 78090315, 55],"bool"), list[1,1,1,55,], )
paddle.Tensor.__xor__(Tensor([1988411, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 1, 79, 54366675],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([1, 1, 79, 54366675],"bool"), list[2,1,79,79,], )
paddle.Tensor.expand(Tensor([1, 1, 79536432, 54],"bool"), list[1,1,1,54,], )
paddle.Tensor.expand(Tensor([1, 1, 80, 53687092],"bool"), list[2,1,80,208,], )
paddle.Tensor.__xor__(Tensor([2, 214748365, 1, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.Tensor.expand(Tensor([1, 1, 80, 53687092],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([1, 1, 81037119, 53],"bool"), list[1,1,1,53,], )
paddle.Tensor.expand(Tensor([1, 1, 82, 52377650],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([1, 1, 82, 52377650],"bool"), list[2,1,82,82,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 16455814, 261],"float32"), Tensor([64, 1, 16455814, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1, 82595525, 52],"bool"), list[1,1,1,52,], )
paddle.Tensor.expand(Tensor([1, 1, 82595525, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([1, 1, 8388608, 512],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([1, 1, 84215045, 51],"bool"), list[1,1,1,51,], )
paddle.Tensor.expand(Tensor([1, 1, 84215045, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"bool"), list[1,1,1,5,], )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"bool"), list[6,1,5,5,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 26030105, 165],"float32"), Tensor([64, 1, 26030105, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 214748365, 5],"int64"), Tensor([2, 3, 5],"int64"), )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"float32"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"float32"), list[4,1,5,5,], )
paddle.Tensor.__xor__(Tensor([2, 2982617, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 1, 858993459, 5],"float32"), list[6,1,5,5,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([1, 1, 85899346, 50],"bool"), list[1,1,1,50,], )
paddle.Tensor.expand(Tensor([1, 1, 85899346, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([1, 1, 87652394, 49],"bool"), list[1,1,1,49,], )
paddle.Tensor.expand(Tensor([1, 1, 89478486, 48],"bool"), list[1,1,1,48,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([1, 1, 91, 47197443],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([1, 1, 91, 47197443],"bool"), list[2,1,91,91,], )
paddle.Tensor.expand(Tensor([1, 1, 91382283, 47],"bool"), list[1,1,1,47,], )
paddle.Tensor.__xor__(Tensor([2, 3, 1, 5],"int64"), Tensor([3, 4, 178956971],"int64"), )
paddle.Tensor.expand(Tensor([1, 1, 91382283, 47],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([1, 1, 93368855, 46],"bool"), list[1,1,1,46,], )
paddle.Tensor.expand(Tensor([1, 1, 95443718, 45],"bool"), list[1,1,1,45,], )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([1, 1, 97612894, 44],"bool"), list[1,1,1,44,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.__xor__(Tensor([2, 3, 1, 5],"int64"), Tensor([536870913, 4, 1],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([1, 1, 9873489, 435],"float32"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([1, 1, 99882961, 43],"bool"), list[1,1,1,43,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1, 101009, 101, 421],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1, 101009, 101, 421],"float32"), Tensor([64, 101009, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 2982617, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([256, 1024, 1, 16384],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 10, 429496730],"float32"), list[14,1,10,10,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([256, 1024, 16384, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([256, 16777216, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 2982617, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 101211, 206, 206],"float32"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([1, 102261127, 1, 42],"bool"), list[1,1,1,42,], )
paddle.Tensor.expand(Tensor([1, 104755300, 1, 41],"bool"), list[1,1,1,41,], )
paddle.Tensor.expand(Tensor([1, 1048576, 1, 4096],"float16"), list[2,1,1,4096,], )
paddle.Tensor.expand(Tensor([1, 1048576, 1, 4096],"float16"), list[2,1,4096,4096,], )
paddle.Tensor.expand(Tensor([1, 1073741824, 1, 4],"bool"), list[1,1,4,4,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 3976822, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 107374183, 1, 40],"bool"), list[1,1,1,40,], )
paddle.Tensor.expand(Tensor([1, 107374183, 20],"int64"), list[-1,4,-1,], )
paddle.Tensor.expand(Tensor([1, 107374183, 20],"int64"), list[-1,5,-1,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 4971027, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 10737419, 20, 20],"bool"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 10737419, 20, 20],"bool"), list[1,4,20,20,], )
paddle.Tensor.expand(Tensor([1, 10737419, 20, 20],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 109555, 198, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 1988411],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 11, 390451573],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([1, 110127367, 1, 39],"bool"), list[1,1,1,39,], )
paddle.Tensor.expand(Tensor([1, 113025456, 1, 38],"bool"), list[1,1,1,38,], )
paddle.Tensor.expand(Tensor([1, 116080198, 1, 37],"bool"), list[1,1,1,37,], )
paddle.Tensor.expand(Tensor([1, 119304648, 1, 36],"bool"), list[1,1,1,36,], )
paddle.Tensor.expand(Tensor([1, 119304648, 6, 6],"float32"), list[2,1,6,6,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 419431],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 419431],"float32"), Tensor([256, 1024, 1, 419431],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 122713352, 1, 35],"bool"), list[1,1,1,35,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 116509, 36],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 12271336, 350],"float32"), list[1,280,350,], )
paddle.Tensor.expand(Tensor([1, 1233832, 59, 59],"bool"), list[2,1,59,59,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 116509, 36],"float32"), Tensor([256, 1024, 116509, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 124147, 186, 186],"float32"), list[7,1,186,186,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([256, 1024, 1, 16384],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 126322568, 1, 34],"bool"), list[1,1,1,34,], )
paddle.Tensor.expand(Tensor([1, 1276745, 58, 58],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 1276745, 58, 58],"bool"), list[1,2,58,58,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([256, 1024, 16384, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"bool"), )
paddle.Tensor.expand(Tensor([1, 128, 1, 33554432],"float32"), list[1,128,32,32,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 128, 1048576, 32],"float32"), list[1,128,32,32,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 32],"float32"), Tensor([256, 16777216, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 13, 1, 330382100],"float32"), tuple(2,13,7,7,), )
paddle.Tensor.expand(Tensor([1, 13, 1007, 1, 328086],"float32"), tuple(2,13,1007,2,16,), )
paddle.Tensor.expand(Tensor([1, 13, 1007, 328086, 1],"float32"), tuple(2,13,1007,2,16,), )
paddle.Tensor.expand(Tensor([1, 13, 1007, 328086],"float32"), tuple(2,13,1007,16,), )
paddle.Tensor.expand(Tensor([1, 13, 330382100, 1, 1],"float32"), tuple(2,13,1007,2,16,), )
paddle.Tensor.expand(Tensor([1, 13, 330382100, 1, 1],"float32"), tuple(2,13,7,2,16,), )
paddle.Tensor.expand(Tensor([1, 13, 330382100, 1],"float32"), tuple(2,13,1007,16,), )
paddle.Tensor.expand(Tensor([1, 13, 330382100, 1],"float32"), tuple(2,13,7,16,), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 13, 47197443, 7],"float32"), tuple(2,13,7,7,), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 13, 7, 1, 47197443],"float32"), tuple(2,13,7,2,16,), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 13, 7, 47197443, 1],"float32"), tuple(2,13,7,2,16,), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 13, 7, 47197443],"float32"), tuple(2,13,7,16,), )
paddle.Tensor.expand(Tensor([1, 130150525, 1, 33],"bool"), list[1,1,1,33,], )
paddle.Tensor.expand(Tensor([1, 134217728, 1, 32],"bool"), list[1,1,1,32,], )
paddle.Tensor.expand(Tensor([1, 134217728, 1, 32],"float32"), list[1,128,32,32,], )
paddle.Tensor.expand(Tensor([1, 134217728, 32],"float32"), list[1,14,-1,], )
paddle.Tensor.expand(Tensor([1, 134217728, 32],"float32"), list[12,1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 349526],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 134217728, 32],"float32"), list[2,-1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 12, 349526],"float32"), Tensor([256, 1024, 1, 349526],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 134217728, 32],"float32"), shape=tuple(16,16,32,), )
paddle.Tensor.expand(Tensor([1, 134217728, 32],"float32"), shape=tuple(24,24,32,), )
paddle.Tensor.expand(Tensor([1, 138547333, 1, 31],"bool"), list[1,1,1,31,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 123362, 34],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1431655765, 1, 3],"bool"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1, 1431655765, 1, 3],"bool"), list[1,8,1,3,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 123362, 34],"float32"), Tensor([256, 1024, 123362, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 1431655765, 1, 3],"float32"), list[1,1,1,3,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int32"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 256, 3, 5462],"float32"), padding=1, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 1431655765, 3],"float32"), list[13,3,3,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 256, 5462, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 1431655765, 3],"float32"), list[2,1,3,3,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 466034, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 1431655765, 3],"float32"), list[4,1,3,3,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([12, 256, 1, 1398102],"float32"), padding=0, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 1431655765, 3],"float32"), list[6,1,3,3,], )
paddle.Tensor.expand(Tensor([1, 143165577, 1, 30],"bool"), list[1,1,1,30,], )
paddle.Tensor.expand(Tensor([1, 143165577, 3, 10],"bool"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([12, 256, 1398102, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 143165577, 3, 10],"float32"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 128],"float32"), Tensor([12, 357913942, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 14316558, 300],"float32"), list[1,400,300,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([1988411, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 32768],"float32"), Tensor([1024, 256, 3, 32768],"float32"), padding=1, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 2982617, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 32768],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 2982617, 3, 4, 1, 5, 2],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 32768],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 2982617, 4, 1, 5, 2],"int64"), )
paddle.Tensor.expand(Tensor([1, 145179, 172, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([1, 148102321, 1, 29],"bool"), list[1,1,1,29,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 128, 32768],"float32"), Tensor([12, 256, 1, 32768],"float32"), padding=0, groups=4, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 3976822, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 4971027, 2],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 131072, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 1988411],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 131072, 32],"float32"), Tensor([256, 1024, 131072, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 153391690, 1, 28],"bool"), list[1,1,1,28,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 161320, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 153391690, 28],"float32"), list[1,28,28,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 161320, 26],"float32"), Tensor([256, 1024, 161320, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 157759, 165, 165],"float32"), list[7,1,165,165,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 16384, 256],"float32"), Tensor([1024, 128, 16384, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 1588376, 52, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([1, 159072863, 1, 27],"bool"), list[1,1,1,27,], )
paddle.Tensor.expand(Tensor([1, 159688, 164, 164],"bool"), list[4,1,164,164,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 16384, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 159784, 112, 240],"bool"), list[2,1,112,240,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 16384, 256],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 16, 1, 268435456],"float32"), list[2,-1,-1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 16384, 256],"float32"), Tensor([24, 128, 16384, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 16, 268435456],"float32"), shape=tuple(16,16,32,), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 2097152],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 16, 26843546, 10],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 161898, 111, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([1, 16384, 512, 512],"bool"), list[8,1,512,512,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 2097152],"float32"), Tensor([256, 1024, 1, 2097152],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 164056, 110, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([1, 1651276, 51, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([1, 165191050, 1, 26],"bool"), list[1,1,1,26,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 32],"float32"), Tensor([256, 1024, 1, 16384],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.expand(Tensor([1, 165191050, 1, 26],"float32"), list[1,1,1,26,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 32],"float32"), Tensor([256, 1024, 16384, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 166259, 109, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 32],"float32"), Tensor([256, 16777216, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 16777216, 256],"float32"), list[2,-1,-1,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 16777216, 256],"float32"), list[3,-1,-1,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 17, 252645135],"float32"), list[12,1,17,17,], )
paddle.Tensor.expand(Tensor([1, 170809, 107, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([1, 171798692, 1, 25],"bool"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([1, 171798692, 1, 25],"float32"), list[1,1,1,25,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 171798692, 5, 5],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 171798692, 5, 5],"bool"), list[4,1,5,5,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 171798692, 5, 5],"bool"), list[6,1,5,5,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 171798692, 5, 5],"float32"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 171798692, 5, 5],"float32"), list[4,1,5,5,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 171798692, 5, 5],"float32"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([1, 1717987, 50, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([1, 178956971, 1, 24],"bool"), list[1,1,1,24,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 178956971, 1, 24],"float32"), list[1,1,1,24,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 34],"float32"), Tensor([256, 1024, 1, 16384],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 34],"float32"), Tensor([256, 1024, 16384, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 34],"float32"), Tensor([256, 16777216, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 185898, 152, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([1, 186737709, 1, 23],"bool"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([1, 186737709, 1, 23],"float32"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([1, 1944304, 47, 47],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([1, 195225787, 1, 22],"bool"), list[1,1,1,22,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 195225787, 1, 22],"float32"), list[1,1,20,22,], )
paddle.Tensor.expand(Tensor([1, 196082, 148, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 198759, 147, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 2, 2147483648],"float32"), tuple(1,2,2,), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 2, 2147483648],"float32"), tuple(5,10,8,1,2,2,), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 20, 214748365],"float32"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 204522253, 1, 21],"bool"), list[1,1,1,21,], )
paddle.Tensor.expand(Tensor([1, 2048, 1, 2097152],"float16"), list[1,2048,1,64,], )
paddle.Tensor.expand(Tensor([1, 2048, 2097152, 1],"float16"), list[1,2048,1,64,], )
paddle.Tensor.__xor__(Tensor([2, 3, 357913942],"int64"), Tensor([2, 3, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 2147483648, 1, 2],"bool"), list[1,1,1,2,], )
paddle.Tensor.expand(Tensor([1, 2147483648, 1, 2],"bool"), list[1,8,1,2,], )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 2147483648, 1, 2],"float32"), list[1,1,1,2,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 36],"float32"), Tensor([256, 1024, 1, 16384],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 2147483648, 2],"float32"), tuple(1,1,2,), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 36],"float32"), Tensor([256, 1024, 16384, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 2147483648, 2],"float32"), tuple(1,2,2,), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 36],"float32"), Tensor([256, 16777216, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 2147483648, 2],"float32"), tuple(5,10,8,1,2,2,), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5],"int64"), Tensor([143165577, 3, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5],"int64"), Tensor([2, 214748365, 5],"int64"), )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), list[1,20,], )
paddle.Tensor.__xor__(Tensor([2, 3, 5],"int64"), Tensor([2, 3, 357913942],"int64"), )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), list[12,7,], )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), list[13,7,], )
paddle.Tensor.__xor__(Tensor([2, 3, 71582789, 5],"int64"), Tensor([3, 4, 1],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), list[52,7,], )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), tuple(13,8,), )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), tuple(2,10,), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([1, 2147483649],"int64"), tuple(2,6,), )
paddle.Tensor.expand(Tensor([1, 214748365, 1, 20],"bool"), list[1,1,1,20,], )
paddle.Tensor.expand(Tensor([1, 214748365, 1, 20],"bool"), list[1,1,20,20,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([1, 214748365, 1, 20],"float32"), list[1,1,20,20,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 214748365, 20],"float32"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([1, 215514, 91, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([1, 216034, 141, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.__xor__(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), )
paddle.Tensor.expand(Tensor([1, 22369622, 192],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 22369622, 192],"float32"), shape=list[2,256,-1,], )
paddle.Tensor.__xor__(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), )
paddle.Tensor.expand(Tensor([1, 226050911, 1, 19],"bool"), list[1,1,1,19,], )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.expand(Tensor([1, 22698, 435, 435],"float32"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([1, 238609295, 1, 18],"bool"), list[1,1,1,18,], )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.expand(Tensor([1, 24, 178956971],"float32"), shape=tuple(24,24,32,), )
paddle.Tensor.expand(Tensor([1, 249418, 82, 210],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([1, 252645135, 1, 17],"bool"), list[1,1,1,17,], )
paddle.Tensor.expand(Tensor([1, 252645135, 17],"float32"), list[12,1,17,17,], )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.expand(Tensor([1, 258112, 80, 208],"bool"), list[2,1,80,208,], )
paddle.Tensor.expand(Tensor([1, 262641, 79, 207],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([1, 266289, 127, 127],"bool"), list[4,1,127,127,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 16384],"float32"), Tensor([1024, 128, 3, 16384],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 268435456, 1, 16],"bool"), list[1,1,1,16,], )
paddle.Tensor.__xor__(Tensor([3],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.expand(Tensor([1, 268435456, 16],"float32"), shape=list[13,4,8,16,], )
paddle.Tensor.__xor__(Tensor([4294967295],"int32"), Tensor([3],"int32"), )
paddle.Tensor.expand(Tensor([1, 268435456, 4, 4],"bool"), list[1,1,4,4,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 16384],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 268435456, 8, 2],"float32"), shape=list[2,8,8,2,], )
paddle.Tensor.__xor__(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 16384],"float32"), Tensor([24, 128, 1, 16384],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 27389, 396, 396],"bool"), list[4,1,396,396,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 16384],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 28, 153391690],"float32"), list[1,28,28,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 128, 10923, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 280, 15339169],"float32"), list[1,280,350,], )
paddle.Tensor.expand(Tensor([1, 2823779, 39, 39],"bool"), list[2,1,39,39,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 128, 3, 10923],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 466034, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([24, 128, 1, 1398102],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([24, 128, 1398102, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 286331153, 1, 15],"bool"), list[1,1,1,15,], )
paddle.Tensor.expand(Tensor([1, 287328, 74, 202],"bool"), list[2,1,74,202,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([24, 178956971, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([3728271, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 2974355, 38, 38],"bool"), list[2,1,38,38,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 32768, 128],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1, 1431655765],"float32"), list[2,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 32768, 128],"float32"), Tensor([1024, 256, 32768, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1, 1431655765],"float32"), list[4,3,4,8,], )
paddle.Tensor.expand(Tensor([1, 3, 1, 1431655765],"float32"), list[6,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 32768, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765, 1],"float32"), list[2,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 1024, 32768, 128],"float32"), Tensor([12, 256, 32768, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765, 1],"float32"), list[4,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 1048576, 64, 64],"float32"), Tensor([12, 1048576, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765, 1],"float32"), list[6,3,4,8,], )
paddle.Tensor.expand(Tensor([1, 3, 1431655765],"float32"), list[13,3,3,], )
paddle.nn.functional.conv2d(Tensor([1, 1048576, 64, 64],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765],"float32"), list[14,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 1048576, 64, 64],"float32"), Tensor([2048, 1048576, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765],"float32"), list[2,1,3,3,], )
paddle.nn.functional.conv2d(Tensor([1, 1048576, 64, 64],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765],"float32"), list[4,1,3,3,], )
paddle.nn.functional.conv2d(Tensor([1, 109318, 101, 389],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 109318, 101, 389],"float32"), Tensor([64, 109318, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 3, 1431655765],"float32"), list[6,1,3,3,], )
paddle.Tensor.expand(Tensor([1, 30219, 377, 377],"bool"), list[4,1,377,377,], )
paddle.nn.functional.conv2d(Tensor([1, 11184811, 12, 32],"float32"), Tensor([128, 11184811, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 3050403, 1408],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 306783379, 1, 14],"bool"), list[1,1,1,14,], )
paddle.Tensor.expand(Tensor([1, 324762, 115, 115],"bool"), list[4,1,115,115,], )
paddle.nn.functional.conv2d(Tensor([1, 11184811, 12, 32],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 330382100, 1, 13],"bool"), list[1,1,1,13,], )
paddle.Tensor.expand(Tensor([1, 330484, 114, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([1, 3314018, 36, 36],"bool"), list[2,1,36,36,], )
paddle.nn.functional.conv2d(Tensor([1, 11184811, 12, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 11184811, 12, 32],"float32"), Tensor([256, 11184811, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 1048576, 32],"float32"), Tensor([128, 128, 1048576, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 342393, 112, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([1, 348590, 111, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([1, 35, 1, 122713352],"float16"), list[2,35,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 1048576, 32],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 35, 122713352, 1],"float16"), list[2,35,1,64,], )
paddle.Tensor.expand(Tensor([1, 354956, 110, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([1, 357913942, 1, 12],"bool"), list[1,1,1,12,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([128, 128, 3, 87382],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 35877, 346, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 35877, 346, 346],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 361499, 109, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([1, 37, 1, 116080198],"float16"), list[2,37,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([128, 128, 87382, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 37, 116080198, 1],"float16"), list[2,37,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 20],"float32"), Tensor([128, 3728271, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 37025581, 1, 58],"int64"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1, 375140, 107, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([1, 37675152, 1, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 38, 1, 113025456],"float16"), list[2,38,1,64,], )
paddle.Tensor.expand(Tensor([1, 38, 113025456, 1],"float16"), list[2,38,1,64,], )
paddle.Tensor.expand(Tensor([1, 39, 1, 110127367],"float16"), list[2,39,1,64,], )
paddle.Tensor.expand(Tensor([1, 39, 110127367, 1],"float16"), list[2,39,1,64,], )
paddle.Tensor.expand(Tensor([1, 390451573, 1, 11],"bool"), list[1,1,1,11,], )
paddle.Tensor.expand(Tensor([1, 390451573, 1, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([1, 390451573, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([1, 4, 153391690, 7],"float32"), shape=tuple(13,4,7,7,), )
paddle.Tensor.expand(Tensor([1, 4, 153391690, 7],"float32"), shape=tuple(52,4,7,7,), )
paddle.Tensor.expand(Tensor([1, 4, 4, 268435456],"float32"), shape=list[2,4,4,2,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 2796203],"float32"), Tensor([128, 128, 3, 2796203],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4, 536870912, 2],"float32"), shape=list[2,4,4,2,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 2796203],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4, 7, 153391690],"float32"), shape=tuple(13,4,7,7,), )
paddle.Tensor.expand(Tensor([1, 4, 7, 153391690],"float32"), shape=tuple(52,4,7,7,), )
paddle.Tensor.expand(Tensor([1, 400, 10737419],"float32"), list[1,400,300,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([128, 128, 3, 87382],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4096, 1024, 1024],"float32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([1, 41698712, 1, 103],"bool"), list[1,1,1,103,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([128, 128, 87382, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([128, 3728271, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4194304, 32, 32],"float32"), tuple(1,128,32,32,), )
paddle.Tensor.expand(Tensor([1, 42107523, 1, 102],"bool"), list[1,1,1,102,], )
paddle.Tensor.expand(Tensor([1, 4236, 1007, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([1, 42524429, 1, 101],"bool"), list[1,1,1,101,], )
paddle.Tensor.expand(Tensor([1, 4265112, 1007, 1, 1],"float32"), tuple(2,13,1007,2,16,), )
paddle.Tensor.expand(Tensor([1, 4265112, 1007, 1],"float32"), tuple(2,13,1007,16,), )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"bool"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"bool"), list[1,8,1,1,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[1,2048,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,35,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,37,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,38,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,39,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,45,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,50,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,51,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,52,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float16"), list[2,57,1,64,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[1,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[13,7,4,8,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[2,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[2,3,4,8,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[4,1,4,8,], )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[4,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 36],"float32"), Tensor([128, 128, 3, 87382],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[6,1,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 36],"float32"), Tensor([128, 128, 87382, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[6,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 36],"float32"), Tensor([128, 3728271, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 4294967295],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 4294967295],"float32"), tuple(1,2,), )
paddle.Tensor.expand(Tensor([1, 42949673, 1, 100],"bool"), list[1,1,1,100,], )
paddle.Tensor.expand(Tensor([1, 42949673, 10, 10],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 42949673, 10, 10],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 42949673, 10, 10],"bool"), list[4,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 42949673, 10, 10],"bool"), list[6,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 42949673, 10, 10],"float32"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 42949673, 10, 10],"float32"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 429496730, 1, 10],"bool"), list[1,1,1,10,], )
paddle.Tensor.expand(Tensor([1, 429496730, 1, 10],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 429496730, 10],"float32"), list[14,1,10,10,], )
paddle.Tensor.expand(Tensor([1, 429496730, 10],"float32"), list[14,1,3,10,], )
paddle.Tensor.expand(Tensor([1, 43383509, 1, 99],"bool"), list[1,1,1,99,], )
paddle.Tensor.expand(Tensor([1, 43826197, 1, 98],"bool"), list[1,1,1,98,], )
paddle.Tensor.expand(Tensor([1, 44278014, 1, 97],"bool"), list[1,1,1,97,], )
paddle.Tensor.expand(Tensor([1, 44739243, 1, 96],"bool"), list[1,1,1,96,], )
paddle.Tensor.expand(Tensor([1, 45, 1, 95443718],"float16"), list[2,45,1,64,], )
paddle.Tensor.expand(Tensor([1, 45, 95443718, 1],"float16"), list[2,45,1,64,], )
paddle.Tensor.expand(Tensor([1, 45210183, 1, 95],"bool"), list[1,1,1,95,], )
paddle.Tensor.expand(Tensor([1, 45691142, 1, 94],"bool"), list[1,1,1,94,], )
paddle.Tensor.expand(Tensor([1, 46182445, 1, 93],"bool"), list[1,1,1,93,], )
paddle.Tensor.expand(Tensor([1, 46475, 304, 304],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([1, 46475, 304, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([1, 46684428, 1, 92],"bool"), list[1,1,1,92,], )
paddle.Tensor.expand(Tensor([1, 47092, 302, 302],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([1, 47197443, 1, 91],"bool"), list[1,1,1,91,], )
paddle.Tensor.expand(Tensor([1, 477218589, 1, 9],"bool"), list[1,1,1,9,], )
paddle.Tensor.expand(Tensor([1, 47721859, 1, 90],"bool"), list[1,1,1,90,], )
paddle.Tensor.expand(Tensor([1, 48258060, 1, 89],"bool"), list[1,1,1,89,], )
paddle.Tensor.expand(Tensor([1, 48806447, 1, 88],"bool"), list[1,1,1,88,], )
paddle.Tensor.expand(Tensor([1, 49367441, 1, 87],"bool"), list[1,1,1,87,], )
paddle.Tensor.expand(Tensor([1, 49941481, 1, 86],"bool"), list[1,1,1,86,], )
paddle.Tensor.expand(Tensor([1, 50, 1, 85899346],"float16"), list[2,50,1,64,], )
paddle.Tensor.expand(Tensor([1, 50, 85899346, 1],"float16"), list[2,50,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 48],"float32"), Tensor([128, 128, 3, 87382],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 48],"float32"), Tensor([128, 128, 87382, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 48],"float32"), Tensor([128, 3728271, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 48],"float32"), Tensor([3728271, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 52],"float32"), Tensor([128, 128, 3, 87382],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 52],"float32"), Tensor([128, 128, 87382, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 52],"float32"), Tensor([128, 3728271, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 52],"float32"), Tensor([3728271, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 131072, 256],"float32"), Tensor([128, 128, 131072, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.add(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 128, 131072, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.add(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 128, 131072, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.add(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.Tensor.expand(Tensor([1, 500, 4294968],"float64"), list[1,500,400,], )
paddle.Tensor.add(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 128, 131072, 256],"float32"), Tensor([3, 128, 131072, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.add(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.expand(Tensor([1, 500, 4294968],"float64"), list[3,500,400,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 1677722, 20],"float32"), Tensor([128, 128, 1677722, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 50529027, 1, 85],"bool"), list[1,1,1,85,], )
paddle.Tensor.expand(Tensor([1, 51, 1, 84215045],"float16"), list[2,51,1,64,], )
paddle.Tensor.expand(Tensor([1, 51, 84215045, 1],"float16"), list[2,51,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 1677722, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 51130564, 1, 84],"bool"), list[1,1,1,84,], )
paddle.Tensor.expand(Tensor([1, 51746594, 1, 83],"bool"), list[1,1,1,83,], )
paddle.Tensor.expand(Tensor([1, 51782, 288, 288],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([1, 518654, 91, 91],"bool"), list[2,1,91,91,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 131072],"float32"), Tensor([128, 128, 3, 131072],"float32"), padding=1, groups=1, )
paddle.Tensor.add(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.expand(Tensor([1, 52, 1, 82595525],"float16"), list[2,52,1,64,], )
paddle.Tensor.expand(Tensor([1, 52, 82595525, 1],"float16"), list[2,52,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 131072],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1, 52377650, 1, 82],"bool"), list[1,1,1,82,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 131072],"float32"), Tensor([3, 128, 1, 131072],"float32"), padding=0, groups=1, )
paddle.Tensor.add(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.expand(Tensor([1, 52509, 286, 286],"float32"), list[7,1,286,286,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 131072],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1, 53024288, 1, 81],"bool"), list[1,1,1,81,], )
paddle.Tensor.add(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.expand(Tensor([1, 536870912, 1, 8],"bool"), list[1,1,1,8,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([128, 128, 3, 87382],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1, 536870912, 4, 2],"float32"), shape=list[2,4,4,2,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([128, 128, 87382, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1, 536870912, 8],"float32"), list[1,8,8,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([128, 3728271, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1, 536870912, 8],"float32"), list[14,1,8,8,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([33038210, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([3, 128, 1, 11184811],"float32"), padding=0, groups=1, )
paddle.Tensor.add(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([33038210, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.Tensor.expand(Tensor([1, 536870913, 4, 1],"int64"), shape=list[13,2,4,1,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([3, 128, 11184811, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.add(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.expand(Tensor([1, 53687092, 1, 80],"bool"), list[1,1,1,80,], )
paddle.nn.functional.conv2d(Tensor([1, 128, 256, 256],"float32"), Tensor([3, 1431655765, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1, 5368710, 400],"float64"), list[1,500,400,], )
paddle.Tensor.expand(Tensor([1, 5368710, 400],"float64"), list[3,500,400,], )
paddle.Tensor.expand(Tensor([1, 54366675, 1, 79],"bool"), list[1,1,1,79,], )
paddle.Tensor.expand(Tensor([1, 55063684, 1, 78],"bool"), list[1,1,1,78,], )
paddle.Tensor.expand(Tensor([1, 55778797, 1, 77],"bool"), list[1,1,1,77,], )
paddle.Tensor.add(Tensor([4294967295],"float32"), Tensor([42],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 128, 645278, 52],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.add(Tensor([42],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 128, 645278, 52],"float32"), Tensor([128, 128, 645278, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 699051, 48],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 699051, 48],"float32"), Tensor([128, 128, 699051, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 932068, 36],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 932068, 36],"float32"), Tensor([128, 128, 932068, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 145135, 101, 293],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 145135, 101, 293],"float32"), Tensor([64, 145135, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 162929, 101, 261],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 162929, 101, 261],"float32"), Tensor([64, 162929, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 56512728, 1, 76],"bool"), list[1,1,1,76,], )
paddle.Tensor.expand(Tensor([1, 57, 1, 75350304],"float16"), list[2,57,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 16519105, 10, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 57, 75350304, 1],"float16"), list[2,57,1,64,], )
paddle.Tensor.expand(Tensor([1, 57266231, 1, 75],"bool"), list[1,1,1,75,], )
paddle.Tensor.expand(Tensor([1, 58040099, 1, 74],"bool"), list[1,1,1,74,], )
paddle.Tensor.expand(Tensor([1, 58835169, 1, 73],"bool"), list[1,1,1,73,], )
paddle.Tensor.expand(Tensor([1, 59652324, 1, 72],"bool"), list[1,1,1,72,], )
paddle.Tensor.expand(Tensor([1, 60492498, 1, 71],"bool"), list[1,1,1,71,], )
paddle.Tensor.expand(Tensor([1, 613566757, 1, 7],"bool"), list[1,1,1,7,], )
paddle.Tensor.expand(Tensor([1, 613566757, 1, 7],"float32"), list[2,1,1,7,], )
paddle.nn.functional.conv2d(Tensor([1, 16519105, 10, 26],"float32"), Tensor([256, 16519105, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([12, 16777216, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 613566757, 1, 7],"float32"), list[4,1,1,7,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 613566757, 1, 7],"float32"), list[6,1,1,7,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([1, 613566757, 1, 7],"float32"), tuple(2,13,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([2048, 16777216, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 613566757, 7, 1, 1],"float32"), tuple(2,13,7,2,16,), )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 613566757, 7, 1],"float32"), tuple(2,13,7,16,), )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([24, 16777216, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 613566757, 7],"float32"), list[14,1,7,7,], )
paddle.Tensor.expand(Tensor([1, 61356676, 1, 70],"bool"), list[1,1,1,70,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 62245903, 1, 69],"bool"), list[1,1,1,69,], )
paddle.Tensor.expand(Tensor([1, 62245903, 3, 23],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([1, 63161284, 1, 68],"bool"), list[1,1,1,68,], )
paddle.Tensor.expand(Tensor([1, 638752, 82, 82],"bool"), list[2,1,82,82,], )
paddle.Tensor.expand(Tensor([1, 64103990, 1, 67],"bool"), list[1,1,1,67,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([3, 16777216, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1, 65075263, 1, 66],"bool"), list[1,1,1,66,], )
paddle.Tensor.expand(Tensor([1, 66076420, 1, 65],"bool"), list[1,1,1,65,], )
paddle.Tensor.expand(Tensor([1, 67108864, 1, 64],"bool"), list[1,1,1,64,], )
paddle.Tensor.expand(Tensor([1, 671089, 80, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([1, 68174085, 1, 63],"bool"), list[1,1,1,63,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1, 688186, 79, 79],"bool"), list[2,1,79,79,], )
paddle.Tensor.expand(Tensor([1, 69273667, 1, 62],"bool"), list[1,1,1,62,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([4096, 16777216, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 7, 1, 613566757],"float32"), list[13,7,4,8,], )
paddle.Tensor.expand(Tensor([1, 7, 613566757, 1],"float32"), list[13,7,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 7, 613566757],"float32"), list[14,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([512, 16777216, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1, 70409300, 1, 61],"bool"), list[1,1,1,61,], )
paddle.Tensor.expand(Tensor([1, 715827883, 1, 6],"bool"), list[1,1,1,6,], )
paddle.Tensor.expand(Tensor([1, 715827883, 1, 6],"float32"), list[2,1,1,6,], )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1, 715827883, 1, 6],"float32"), list[4,1,1,6,], )
paddle.nn.functional.conv2d(Tensor([1, 17895698, 12, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 715827883, 1, 6],"float32"), list[6,1,1,6,], )
paddle.nn.functional.conv2d(Tensor([1, 17895698, 12, 20],"float32"), Tensor([128, 17895698, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([1, 71582789, 1, 60],"bool"), list[1,1,1,60,], )
paddle.Tensor.expand(Tensor([1, 72796056, 1, 59],"bool"), list[1,1,1,59,], )
paddle.Tensor.expand(Tensor([1, 74051161, 1, 58],"bool"), list[1,1,1,58,], )
paddle.Tensor.expand(Tensor([1, 74051161, 1, 58],"bool"), list[1,1,58,58,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([2048, 256, 2731, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 74051161, 58],"float32"), list[2,-1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([2048, 256, 3, 2731],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([24, 178956971, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 75350304, 1, 57],"bool"), list[1,1,1,57,], )
paddle.Tensor.expand(Tensor([1, 76695845, 1, 56],"bool"), list[1,1,1,56,], )
paddle.Tensor.expand(Tensor([1, 78090315, 1, 55],"bool"), list[1,1,1,55,], )
paddle.Tensor.expand(Tensor([1, 784326, 74, 74],"bool"), list[2,1,74,74,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([24, 256, 1, 699051],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 79536432, 1, 54],"bool"), list[1,1,1,54,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 128],"float32"), Tensor([24, 256, 699051, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 16384],"float32"), Tensor([2048, 256, 3, 16384],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 16384],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([1, 8, 268435456, 2],"float32"), shape=list[2,8,8,2,], )
paddle.Tensor.expand(Tensor([1, 8, 536870912],"float32"), list[1,8,8,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 16384],"float32"), Tensor([24, 256, 1, 16384],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 8, 536870912],"float32"), list[14,1,8,8,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 128, 16384],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([1, 8, 536870912],"float32"), shape=list[13,4,8,16,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 131072, 16],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 8, 536870912],"float32"), shape=list[13,4,8,48,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 131072, 16],"float32"), Tensor([12, 512, 131072, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 8, 8, 67108864],"float32"), shape=list[2,8,8,2,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 131072, 16],"float32"), Tensor([2048, 512, 131072, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 131072, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 81037119, 1, 53],"bool"), list[1,1,1,53,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 131072],"float32"), Tensor([12, 512, 1, 131072],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 8119031, 23, 23],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([1, 82595525, 1, 52],"bool"), list[1,1,1,52,], )
paddle.Tensor.expand(Tensor([1, 84215045, 1, 51],"bool"), list[1,1,1,51,], )
paddle.Tensor.expand(Tensor([1, 858993459, 1, 5],"bool"), list[1,1,1,5,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 131072],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 85899346, 1, 50],"bool"), list[1,1,1,50,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 131072],"float32"), Tensor([2048, 512, 3, 131072],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 131072],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 87652394, 1, 49],"bool"), list[1,1,1,49,], )
paddle.Tensor.expand(Tensor([1, 87652394, 7, 7],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([1, 87652394, 7, 7],"bool"), shape=tuple(13,1,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([12, 357913942, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 87652394, 7, 7],"float32"), list[13,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([12, 512, 1, 699051],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 87652394, 7, 7],"float32"), shape=tuple(13,4,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([12, 512, 699051, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 87652394, 7, 7],"float32"), shape=tuple(52,4,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=1, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([8454661, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.Tensor.expand(Tensor([1, 88739, 220, 220],"float32"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([1, 89478486, 1, 48],"bool"), list[1,1,1,48,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 1366, 3],"float32"), padding=1, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([8454661, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.Tensor.expand(Tensor([1, 89478486, 48],"float32"), shape=list[13,4,8,48,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 3, 1366],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1, 91382283, 1, 47],"bool"), list[1,1,1,47,], )
paddle.Tensor.expand(Tensor([1, 93368855, 1, 46],"bool"), list[1,1,1,46,], )
paddle.Tensor.expand(Tensor([1, 95443718, 1, 45],"bool"), list[1,1,1,45,], )
paddle.Tensor.expand(Tensor([1, 9739155, 21, 21],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([1, 97612894, 1, 44],"bool"), list[1,1,1,44,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16, 16],"float32"), Tensor([8388608, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1, 98326, 209, 209],"float32"), list[14,1,209,209,], )
paddle.Tensor.expand(Tensor([1, 98326, 209, 209],"float32"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([1, 99882961, 1, 43],"bool"), list[1,1,1,43,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16384, 128],"float32"), Tensor([2048, 256, 16384, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16384, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16384, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([10, 10, 10, 2147484],"float64"), tuple(10,10,10,2,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 16384, 128],"float32"), Tensor([24, 256, 16384, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([10, 10, 10, 2147484],"float64"), tuple(2,3,10,10,10,2,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([12, 357913942, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10, 10, 10737419, 2],"float64"), tuple(10,10,10,2,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([12, 512, 1, 699051],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10, 10, 10737419, 2],"float64"), tuple(2,3,10,10,10,2,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([12, 512, 699051, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10, 10737419, 10, 2],"float64"), tuple(10,10,10,2,), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10, 10737419, 10, 2],"float64"), tuple(2,3,10,10,10,2,), )
paddle.Tensor.expand(Tensor([10, 429496730, 1],"bool"), list[10,60,10,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([2048, 512, 1366, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10, 429496730],"float16"), list[-1,4,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([2048, 512, 3, 1366],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10, 429496730],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([10, 60, 7158279],"bool"), list[10,60,10,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([8388608, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([100, 42949673],"float16"), list[-1,4,], )
paddle.Tensor.expand(Tensor([100, 42949673],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([10032, 214064],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10064, 213383],"float64"), list[-1,80,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 65536],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([101211, 1, 206, 206],"float32"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([102261127, 1, 1, 42],"bool"), list[1,1,1,42,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 65536],"float32"), Tensor([12, 512, 1, 65536],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([102261127, 1, 1, 42],"bool"), list[2,1,1,42,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 65536],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([16519105, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 65536],"float32"), Tensor([2048, 512, 3, 65536],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10275042, 1, 1, 209],"int64"), list[14,1,209,209,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32768, 64],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10275042, 1, 1, 209],"int64"), list[7,1,209,209,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32768, 64],"float32"), Tensor([12, 512, 32768, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10285, 417596],"float32"), list[1,10285,1,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32768, 64],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10285, 417596],"float32"), list[1,10285,2,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32768, 64],"float32"), Tensor([2048, 512, 32768, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10285, 417596],"float32"), list[2,10285,1,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([12, 357913942, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10285, 417596],"float32"), list[2,10285,2,], )
paddle.Tensor.expand(Tensor([10285, 417596],"float32"), list[8,10285,1,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([12, 512, 1, 699051],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10285, 417596],"float32"), list[8,10285,2,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([12, 512, 699051, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10336, 207768],"float64"), list[-1,80,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([2048, 512, 1366, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([10424678, 1, 1, 206],"int64"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([104755300, 1, 1, 41],"bool"), list[1,1,1,41,], )
paddle.Tensor.expand(Tensor([104755300, 1, 1, 41],"bool"), list[2,1,1,41,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([2048, 512, 3, 1366],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1048576, 1, 1, 4096],"float16"), list[2,1,1,4096,], )
paddle.Tensor.expand(Tensor([1048576, 1, 1, 4096],"float16"), list[2,1,4096,4096,], )
paddle.Tensor.expand(Tensor([1048576, 128, 1, 32],"float32"), list[1,128,32,32,], )
paddle.Tensor.expand(Tensor([10608, 202441],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10640, 201832],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1073741824, 1, 1, 4],"bool"), list[1,1,4,4,], )
paddle.Tensor.expand(Tensor([1073741824, 1, 1, 4],"float32"), list[2,1,1,4,], )
paddle.Tensor.expand(Tensor([1073741824, 1, 1, 4],"float32"), list[4,1,1,4,], )
paddle.Tensor.expand(Tensor([1073741824, 1, 1, 4],"float32"), list[6,1,1,4,], )
paddle.Tensor.expand(Tensor([1073741824, 2, 2],"float32"), tuple(1,2,2,), )
paddle.Tensor.expand(Tensor([1073741824, 2, 2],"float32"), tuple(2,2,2,), )
paddle.Tensor.expand(Tensor([1073741824, 2, 2],"float32"), tuple(5,10,8,1,2,2,), )
paddle.Tensor.expand(Tensor([1073741825, 2],"float64"), list[2,2,], )
paddle.Tensor.expand(Tensor([1073741825, 2],"int64"), list[1,-1,], )
paddle.Tensor.expand(Tensor([107374183, 1, 1, 40],"bool"), list[1,1,1,40,], )
paddle.Tensor.expand(Tensor([107374183, 1, 1, 40],"bool"), list[2,1,1,40,], )
paddle.Tensor.expand(Tensor([107374183, 20],"int64"), list[1,20,], )
paddle.Tensor.expand(Tensor([10737419, 1, 20, 20],"bool"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([10737419, 1, 20, 20],"bool"), list[1,4,20,20,], )
paddle.Tensor.expand(Tensor([10737419, 1, 20, 20],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([10737419, 1, 20, 20],"bool"), list[2,8,20,20,], )
paddle.Tensor.expand(Tensor([10737419, 10, 10, 2],"float64"), tuple(10,10,10,2,), )
paddle.Tensor.expand(Tensor([10737419, 10, 10, 2],"float64"), tuple(2,3,10,10,10,2,), )
paddle.Tensor.expand(Tensor([10737419, 20, 20],"float32"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([10738, 500, 400],"float64"), list[1,500,400,], )
paddle.linalg.slogdet(Tensor([1431655765, 3],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 524288],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([10738, 500, 400],"float64"), list[3,500,400,], )
paddle.Tensor.expand(Tensor([10845878, 1, 1, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([109555, 1, 198, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([110127367, 1, 1, 39],"bool"), list[1,1,1,39,], )
paddle.Tensor.expand(Tensor([110127367, 1, 1, 39],"bool"), list[2,1,1,39,], )
paddle.linalg.slogdet(Tensor([3, 1431655765],"float32"), )
paddle.Tensor.expand(Tensor([110127367, 1, 1, 39],"bool"), list[2,1,39,39,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 524288],"float32"), Tensor([12, 512, 1, 524288],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([110127367, 39, 1, 1],"float16"), list[2,39,1,64,], )
paddle.linalg.slogdet(Tensor([3, 3, 477218589],"float32"), )
paddle.Tensor.expand(Tensor([11184811, 1, 384],"float16"), tuple(64,-1,-1,), )
paddle.linalg.slogdet(Tensor([3, 3, 5, 95443718],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 524288],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([11184811, 1, 384],"float32"), tuple(64,-1,-1,), )
paddle.linalg.slogdet(Tensor([3, 3, 95443718, 5],"float32"), )
paddle.linalg.slogdet(Tensor([3, 477218589, 3],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 524288],"float32"), Tensor([2048, 512, 3, 524288],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([11184811, 8, 48],"float32"), shape=list[13,4,8,48,], )
paddle.Tensor.expand(Tensor([113025456, 1, 1, 38],"bool"), list[1,1,1,38,], )
paddle.Tensor.expand(Tensor([113025456, 1, 1, 38],"bool"), list[2,1,1,38,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 524288, 4],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([113025456, 1, 1, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([113025456, 38, 1, 1],"float16"), list[2,38,1,64,], )
paddle.Tensor.expand(Tensor([11392487, 1, 1, 377],"bool"), list[4,1,377,377,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 524288, 4],"float32"), Tensor([12, 512, 524288, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 524288, 4],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([11545612, 1, 1, 186],"int64"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([116080198, 1, 1, 37],"bool"), list[1,1,1,37,], )
paddle.Tensor.expand(Tensor([116080198, 1, 1, 37],"bool"), list[2,1,1,37,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 524288, 4],"float32"), Tensor([2048, 512, 524288, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([116080198, 37, 1, 1],"float16"), list[2,37,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 32768],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([11799361, 1, 1, 182],"int64"), list[4,1,182,182,], )
paddle.Tensor.expand(Tensor([119304648, 1, 1, 36],"bool"), list[1,1,1,36,], )
paddle.Tensor.expand(Tensor([119304648, 1, 1, 36],"bool"), list[2,1,36,36,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 32768],"float32"), Tensor([12, 512, 1, 32768],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([119304648, 1, 6, 6],"float32"), list[2,1,6,6,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 32768],"float32"), Tensor([2048, 512, 3, 32768],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([12, 1, 1, 357913942],"float32"), list[12,1,17,17,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 32768],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([4227331, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([12, 357913942, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([12, 512, 1, 699051],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([12, 512, 699051, 1],"float32"), padding=0, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 706875],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([2048, 512, 1366, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([2048, 512, 3, 1366],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 65536, 32],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 65536, 32],"float32"), Tensor([12, 512, 65536, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 65536, 32],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([12, 1, 1, 357913942],"int32"), list[12,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 2048, 65536, 32],"float32"), Tensor([2048, 512, 65536, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([12, 1, 21053762, 17],"float32"), list[12,1,17,17,], )
paddle.Tensor.expand(Tensor([12, 1, 51130564, 7],"int32"), list[12,1,7,-1,], )
paddle.Tensor.expand(Tensor([12, 1, 51130564, 7],"int32"), list[12,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 1864136, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([12, 21053762, 1, 17],"float32"), list[12,1,17,17,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 256, 21846, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([12, 51130564, 1, 7],"int32"), list[12,1,7,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 256, 3, 21846],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([3, 1431655765, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([12, 51130564, 1, 7],"int32"), list[12,1,7,7,], )
paddle.Tensor.expand(Tensor([122713352, 1, 1, 35],"bool"), list[1,1,1,35,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([3, 256, 1, 5592406],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 128],"float32"), Tensor([3, 256, 5592406, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([122713352, 35, 1, 1],"float16"), list[2,35,1,64,], )
paddle.Tensor.expand(Tensor([1233832, 1, 59, 59],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([12413201, 1, 1, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([12413201, 1, 1, 346],"bool"), list[4,1,346,346,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 131072],"float32"), Tensor([256, 256, 3, 131072],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([124147, 1, 186, 186],"float32"), list[7,1,186,186,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 131072],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([126322568, 1, 1, 34],"bool"), list[1,1,1,34,], )
paddle.Tensor.expand(Tensor([1276745, 1, 58, 58],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1276745, 1, 58, 58],"bool"), list[1,2,58,58,], )
paddle.linalg.slogdet(Tensor([3, 57266231, 5, 5],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 131072],"float32"), Tensor([3, 256, 1, 131072],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([12782641, 1, 1, 168],"int64"), list[4,1,168,168,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 128, 131072],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 131072, 128],"float32"), Tensor([256, 256, 131072, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([128, 33554432],"float32"), list[16,16,128,128,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 131072, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 1, 165191050],"int64"), shape=list[13,2,16,16,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,1007,1007,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 131072, 128],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,1024,14,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,14,14,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,7,14,], )
paddle.nn.functional.conv2d(Tensor([1, 256, 131072, 128],"float32"), Tensor([3, 256, 131072, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), list[13,4,56,56,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"bool"), shape=tuple(13,1,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 257724, 101, 165],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 257724, 101, 165],"float32"), Tensor([64, 257724, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"int32"), list[13,1,10,10,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"int32"), list[13,1,1024,1024,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([1024, 262144, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"int32"), list[13,1,1024,7,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([12, 256, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"int32"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([12, 262144, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([13, 1, 1, 330382100],"int32"), list[13,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 1, 10324441, 16],"int64"), shape=list[13,2,16,16,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([2048, 262144, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 1048576],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([24, 262144, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 20648882, 1, 8],"int64"), shape=list[13,2,8,4,8,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 1048576],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([13, 1, 23598722, 14],"bool"), list[13,1,1024,14,], )
paddle.Tensor.expand(Tensor([13, 1, 23598722, 14],"bool"), list[13,1,14,14,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([256, 262144, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 23598722, 14],"bool"), list[13,1,7,14,], )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 322639, 1024],"int32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([13, 1, 328086, 1007],"bool"), list[13,1,1007,1007,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1, 262144, 128, 128],"float32"), Tensor([3, 262144, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 33038210, 10],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([13, 1, 33038210, 10],"bool"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([12, 268435456, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([13, 1, 33038210, 10],"int32"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([13, 1, 33038210, 10],"int32"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([2048, 268435456, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([13, 1, 330382100],"int32"), list[-1,2,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([24, 268435456, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([3, 268435456, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 330382100],"int32"), shape=list[-1,2,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([4096, 268435456, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 1, 47197443, 7],"bool"), list[13,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 1, 47197443, 7],"bool"), shape=tuple(13,1,7,7,), )
paddle.Tensor.expand(Tensor([13, 1, 47197443, 7],"int32"), list[13,1,1024,7,], )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([512, 268435456, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 268435456, 4, 4],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([13, 1, 47197443, 7],"int32"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([13, 1, 5899681, 56],"bool"), list[13,4,56,56,], )
paddle.Tensor.expand(Tensor([13, 1, 8, 1, 20648882],"int64"), shape=list[13,2,8,4,8,], )
paddle.Tensor.expand(Tensor([13, 1, 8, 2581111, 8],"int64"), shape=list[13,2,8,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 159072863, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 10324441, 1, 16],"int64"), shape=list[13,2,16,16,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 159072863, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 1290556, 16, 1, 8],"int64"), shape=list[13,2,16,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 159072863, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 165191050],"int64"), list[13,3,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 159072863, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 1, 10, 16519105],"float32"), list[13,2,2,10,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 159072863],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 159072863],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 1, 1007, 164043],"float32"), list[13,2,2,1007,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 1, 20648882, 8],"float32"), list[13,2,2,10,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 1, 20648882, 8],"float32"), list[13,2,2,1007,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 6391321],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 6391321],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 1, 20648882, 8],"float32"), list[13,2,2,7,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 6391321, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 1, 7, 23598722],"float32"), list[13,2,2,7,8,], )
paddle.Tensor.expand(Tensor([13, 2, 10324441, 1, 8],"int64"), shape=list[13,2,16,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 3, 6391321, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([13, 2, 16, 1, 5162221],"int64"), shape=list[13,2,16,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([24, 178956971, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 2, 16, 645278, 8],"int64"), shape=list[13,2,16,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([24, 512, 1, 349526],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 2, 165191050],"int32"), tuple(-1,-1,32,), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([24, 512, 349526, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([4096, 116509, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 2, 20506, 1007, 8],"float32"), list[13,2,2,1007,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([4096, 512, 3, 683],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 2, 2064889, 10, 8],"float32"), list[13,2,2,10,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([4096, 512, 683, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([8388608, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 2, 2949841, 7, 8],"float32"), list[13,2,2,7,8,], )
paddle.Tensor.expand(Tensor([13, 23598722, 1, 14],"bool"), list[13,1,1024,14,], )
paddle.Tensor.expand(Tensor([13, 23598722, 1, 14],"bool"), list[13,1,14,14,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 16],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 23598722, 1, 14],"bool"), list[13,1,7,14,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 65536],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 23598722, 7],"int64"), list[-1,4,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 65536],"float32"), Tensor([24, 512, 1, 65536],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 23598722, 7],"int64"), shape=list[-1,4,-1,], )
paddle.linalg.slogdet(Tensor([477218589, 3, 3],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 65536],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 2581111, 8, 1, 8],"int64"), shape=list[13,2,8,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 16, 65536],"float32"), Tensor([4096, 512, 3, 65536],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 322639, 1, 1024],"int32"), list[13,1,1024,1024,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 262144, 4],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 328086, 1, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([13, 33038210, 1, 10],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([13, 33038210, 1, 10],"bool"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 262144, 4],"float32"), Tensor([24, 512, 262144, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 33038210, 1, 10],"int32"), list[13,1,10,10,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 262144, 4],"float32"), Tensor([4096, 512, 262144, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 33038210, 1, 10],"int32"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 262144, 4],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32768],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 41011, 1, 1007, 8],"float32"), list[13,2,2,1007,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32768],"float32"), Tensor([24, 512, 1, 32768],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 41297763, 8],"int32"), list[-1,4,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32768],"float32"), Tensor([4096, 512, 3, 32768],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 4129777, 1, 10, 8],"float32"), list[13,2,2,10,8,], )
paddle.Tensor.expand(Tensor([13, 47197443, 1, 7],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([13, 47197443, 1, 7],"bool"), shape=tuple(13,1,7,7,), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32768],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 47197443, 1, 7],"int32"), list[13,1,1024,7,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([24, 178956971, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 47197443, 1, 7],"int32"), list[13,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([24, 512, 1, 349526],"float32"), padding=0, groups=8, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([13, 47197443, 7],"int32"), list[-1,2,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([24, 512, 349526, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 47197443, 7],"int32"), list[-1,4,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([4096, 116509, 3, 3],"float32"), padding=1, groups=8, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([1398102, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([13, 47197443, 7],"int32"), shape=list[-1,1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([4096, 512, 3, 683],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 47197443, 7],"int32"), shape=list[-1,2,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([4096, 512, 683, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 47197443, 7],"int32"), shape=list[-1,4,-1,], )
paddle.Tensor.expand(Tensor([13, 47197443, 7],"int32"), tuple(-1,4,-1,), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([8388608, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13, 5899681, 1, 56],"bool"), list[13,4,56,56,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13, 5899681, 1, 7, 8],"float32"), list[13,2,2,7,8,], )
paddle.Tensor.expand(Tensor([130150525, 1, 1, 33],"bool"), list[1,1,1,33,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32768, 32],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32768, 32],"float32"), Tensor([24, 512, 32768, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([13015053, 1, 1, 165],"int64"), list[7,1,165,165,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32768, 32],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32768, 32],"float32"), Tensor([4096, 512, 32768, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([134217728, 1, 1, 32],"bool"), list[1,1,1,32,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 262144],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 262144],"float32"), Tensor([24, 512, 1, 262144],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 262144],"float32"), Tensor([4096, 512, 3, 262144],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 262144],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([24, 178956971, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([24, 512, 1, 349526],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([134217728, 1, 32],"float32"), list[1,14,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([24, 512, 349526, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([4096, 116509, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([134217728, 1, 32],"float32"), list[12,-1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([4096, 512, 3, 683],"float32"), padding=1, groups=8, )
paddle.linalg.slogdet(Tensor([57266231, 3, 5, 5],"float32"), )
paddle.Tensor.expand(Tensor([134217728, 1, 32],"float32"), list[12,1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([4096, 512, 683, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([134217728, 1, 32],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([134217728, 1, 32],"float32"), shape=tuple(16,16,32,), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 4, 4],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([134217728, 1, 32],"float32"), shape=tuple(24,24,32,), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 65536, 16],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([134217728, 4, 4, 2],"float32"), shape=list[2,4,4,2,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 65536, 16],"float32"), Tensor([24, 512, 65536, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([134217729, 1, 1, 16],"int64"), shape=list[13,2,16,16,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 65536, 16],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([13421773, 10, 32],"float32"), list[12,-1,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 4096, 65536, 16],"float32"), Tensor([4096, 512, 65536, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([12, 4194304, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([13591669, 1, 1, 158],"int64"), list[4,1,158,158,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([1360, 3158065],"float32"), list[64,1360,1,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([2048, 4194304, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([1360, 3158065],"float32"), list[64,1360,2,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([13765921, 1, 1, 156],"int64"), list[4,1,156,156,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([24, 4194304, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([138547333, 1, 1, 31],"bool"), list[1,1,1,31,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([14, 1, 1, 153391690],"int64"), list[14,1,209,209,], )
paddle.Tensor.expand(Tensor([14, 1, 1, 306783379],"float32"), list[14,1,1,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([3, 4194304, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([14, 1, 1, 306783379],"float32"), list[14,1,10,10,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([14, 1, 1, 306783379],"float32"), list[14,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([4096, 4194304, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([14, 1, 1, 306783379],"float32"), list[14,1,7,7,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([14, 1, 1, 306783379],"float32"), list[14,1,8,8,], )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([512, 4194304, 3, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([5592406, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([3, 1431655765, 1, 1],"float32"), padding=0, groups=1, )
paddle.linalg.slogdet(x=Tensor([14, 153391690],"float64"), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([3, 512, 1, 2796203],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([3, 512, 2796203, 1],"float32"), padding=0, groups=1, )
paddle.linalg.slogdet(x=Tensor([14, 306783379],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([512, 512, 3, 5462],"float32"), padding=1, groups=1, )
paddle.linalg.slogdet(x=Tensor([153391690, 14],"float64"), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([512, 512, 5462, 3],"float32"), padding=1, groups=1, )
paddle.linalg.slogdet(x=Tensor([3, 178956971, 4],"float64"), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([512, 932068, 3, 3],"float32"), padding=1, groups=1, )
paddle.linalg.slogdet(x=Tensor([3, 4, 178956971],"float64"), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 16],"float32"), Tensor([8388608, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.linalg.slogdet(x=Tensor([306783379, 14],"float32"), )
paddle.Tensor.expand(Tensor([14, 1, 30678338, 10],"float32"), list[14,1,10,10,], )
paddle.Tensor.expand(Tensor([14, 1, 30678338, 10],"float32"), list[14,1,3,10,], )
paddle.linalg.slogdet(x=Tensor([4, 536870913],"float64"), )
paddle.Tensor.expand(Tensor([14, 1, 38347923, 8],"float32"), list[14,1,1,8,], )
paddle.linalg.slogdet(x=Tensor([536870913, 4],"float64"), )
paddle.Tensor.expand(Tensor([14, 1, 38347923, 8],"float32"), list[14,1,8,8,], )
paddle.linalg.svd(Tensor([1, 100, 21474837],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 1, 43826197, 7],"float32"), list[14,1,7,7,], )
paddle.Tensor.expand(Tensor([14, 1, 733932, 209],"int64"), list[14,1,209,209,], )
paddle.linalg.svd(Tensor([1, 1073741825, 2],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 30678338, 1, 10],"float32"), list[14,1,10,10,], )
paddle.linalg.svd(Tensor([1, 178956971, 12],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 30678338, 1, 10],"float32"), list[14,1,3,10,], )
paddle.linalg.svd(Tensor([1, 2147483649],"float64"), )
paddle.Tensor.expand(Tensor([14, 38347923, 1, 8],"float32"), list[14,1,1,8,], )
paddle.linalg.svd(Tensor([1, 357913942, 6],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 38347923, 1, 8],"float32"), list[14,1,8,8,], )
paddle.Tensor.expand(Tensor([14, 43826197, 1, 7],"float32"), list[14,1,7,7,], )
paddle.linalg.svd(Tensor([1, 536870913, 4],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 43826197, 7],"int32"), shape=list[-1,4,-1,], )
paddle.linalg.svd(Tensor([1, 53687092, 40],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 733932, 1, 209],"int64"), list[14,1,209,209,], )
paddle.linalg.svd(Tensor([100, 21474837],"float64"), )
paddle.Tensor.expand(Tensor([14, 9586981, 32],"float32"), list[-1,10,-1,], )
paddle.linalg.svd(Tensor([100, 21474837],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 9586981, 32],"float32"), list[-1,11,-1,], )
paddle.linalg.svd(Tensor([102261127, 21],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 9586981, 32],"float32"), list[-1,14,-1,], )
paddle.Tensor.expand(Tensor([14, 9586981, 32],"float32"), list[-1,4,-1,], )
paddle.linalg.svd(Tensor([1073741825, 2],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([14, 9586981, 32],"float32"), list[-1,56,-1,], )
paddle.Tensor.expand(Tensor([14, 9586981, 32],"float32"), list[-1,7,-1,], )
paddle.Tensor.expand(Tensor([14128182, 1, 1, 304],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([14128182, 1, 1, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([14221747, 1, 1, 302],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([1431655765, 1, 1, 3],"bool"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1431655765, 1, 1, 3],"bool"), list[1,8,1,3,], )
paddle.Tensor.expand(Tensor([1431655765, 1, 1, 3],"float32"), list[1,1,1,3,], )
paddle.Tensor.expand(Tensor([1431655765, 1, 1, 3],"float32"), list[2,1,3,3,], )
paddle.Tensor.expand(Tensor([1431655765, 1, 1, 3],"float32"), list[4,1,3,3,], )
paddle.Tensor.expand(Tensor([1431655765, 1, 1, 3],"float32"), list[6,1,3,3,], )
paddle.Tensor.expand(Tensor([1431655765, 3, 1, 1],"float32"), list[2,3,4,8,], )
paddle.Tensor.expand(Tensor([1431655765, 3, 1, 1],"float32"), list[4,3,4,8,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 524288],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1431655765, 3, 1, 1],"float32"), list[6,3,4,8,], )
paddle.Tensor.expand(Tensor([1431655765, 3],"float32"), tuple(10000,2,3,), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 524288],"float32"), Tensor([3, 512, 1, 524288],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1431655765, 3],"float32"), tuple(2,3,), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 524288],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1431655765, 3],"float32"), tuple(3,2,2,3,), )
paddle.nn.functional.conv2d(Tensor([1, 512, 16, 524288],"float32"), Tensor([512, 512, 3, 524288],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([1431655765, 3],"float32"), tuple(30000,2,3,), )
paddle.nn.functional.conv2d(Tensor([1, 512, 2097152, 4],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([143165577, 1, 1, 30],"bool"), list[1,1,1,30,], )
paddle.Tensor.expand(Tensor([143165577, 1, 3, 10],"bool"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([143165577, 1, 3, 10],"float32"), list[13,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 2097152, 4],"float32"), Tensor([3, 512, 2097152, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([143165577, 3, 10],"float32"), list[14,1,3,10,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 2097152, 4],"float32"), Tensor([512, 512, 2097152, 3],"float32"), padding=1, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 2097152, 4],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([14510025, 1, 1, 148],"int64"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([145179, 1, 172, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([148102321, 1, 1, 29],"bool"), list[1,1,1,29,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 262144, 32],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([14810233, 1, 1, 145],"int64"), list[4,1,145,145,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 262144, 32],"float32"), Tensor([3, 512, 262144, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([14861479, 17, 17],"float32"), list[12,1,17,17,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 262144, 32],"float32"), Tensor([512, 512, 262144, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([14913081, 1, 1, 288],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([14965043, 1, 1, 287],"bool"), list[2,1,1,287,], )
paddle.Tensor.expand(Tensor([15017369, 1, 1, 286],"bool"), list[2,1,1,286,], )
paddle.Tensor.expand(Tensor([15070061, 1, 1, 285],"bool"), list[2,1,1,285,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 262144, 32],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([15123125, 1, 1, 284],"bool"), list[2,1,1,284,], )
paddle.Tensor.expand(Tensor([15176563, 1, 1, 283],"bool"), list[2,1,1,283,], )
paddle.Tensor.expand(Tensor([15230381, 1, 1, 282],"bool"), list[2,1,1,282,], )
paddle.Tensor.expand(Tensor([15284582, 1, 1, 281],"bool"), list[2,1,1,281,], )
paddle.Tensor.expand(Tensor([15339169, 1, 1, 280],"bool"), list[2,1,1,280,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 262144],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([153391690, 1, 1, 28],"bool"), list[1,1,1,28,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 262144],"float32"), Tensor([3, 512, 1, 262144],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 262144],"float32"), Tensor([512, 512, 3, 262144],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([15394149, 1, 1, 279],"bool"), list[2,1,1,279,], )
paddle.Tensor.expand(Tensor([15449523, 1, 1, 278],"bool"), list[2,1,1,278,], )
paddle.Tensor.expand(Tensor([15505298, 1, 1, 277],"bool"), list[2,1,1,277,], )
paddle.Tensor.expand(Tensor([15561476, 1, 1, 276],"bool"), list[2,1,1,276,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 262144],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([15618063, 1, 1, 275],"bool"), list[2,1,1,275,], )
paddle.Tensor.expand(Tensor([15675064, 1, 1, 274],"bool"), list[2,1,1,274,], )
paddle.Tensor.expand(Tensor([15732481, 1, 1, 273],"bool"), list[2,1,1,273,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([3, 1431655765, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([157759, 1, 165, 165],"float32"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([15790321, 1, 1, 272],"bool"), list[2,1,1,272,], )
paddle.Tensor.expand(Tensor([15848588, 1, 1, 271],"bool"), list[2,1,1,271,], )
paddle.Tensor.expand(Tensor([1588376, 1, 52, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([159072863, 1, 1, 27],"bool"), list[1,1,1,27,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([3, 512, 1, 2796203],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([15907287, 1, 1, 270],"bool"), list[2,1,1,270,], )
paddle.Tensor.expand(Tensor([15966422, 1, 1, 269],"bool"), list[2,1,1,269,], )
paddle.Tensor.expand(Tensor([159688, 1, 164, 164],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([159784, 1, 112, 240],"bool"), list[2,1,112,240,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([3, 512, 2796203, 1],"float32"), padding=0, groups=1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([512, 512, 3, 5462],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([16, 1, 268435456],"float32"), shape=tuple(16,16,32,), )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([512, 512, 5462, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([16, 8388608, 32],"float32"), list[-1,14,-1,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([512, 932068, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([16, 8388608, 32],"float32"), shape=tuple(16,16,32,), )
paddle.nn.functional.conv2d(Tensor([1, 512, 32, 32],"float32"), Tensor([8388608, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([16025998, 1, 1, 134],"int64"), list[4,1,134,134,], )
paddle.Tensor.expand(Tensor([16025998, 1, 1, 268],"bool"), list[2,1,1,268,], )
paddle.Tensor.expand(Tensor([16086020, 1, 1, 267],"bool"), list[2,1,1,267,], )
paddle.Tensor.expand(Tensor([16146494, 1, 1, 266],"bool"), list[2,1,1,266,], )
paddle.Tensor.expand(Tensor([161898, 1, 111, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([16207424, 1, 1, 265],"bool"), list[2,1,1,265,], )
paddle.Tensor.expand(Tensor([16268816, 1, 1, 132],"int64"), list[4,1,132,132,], )
paddle.Tensor.expand(Tensor([16268816, 1, 1, 264],"bool"), list[2,1,1,264,], )
paddle.Tensor.expand(Tensor([16330675, 1, 1, 263],"bool"), list[2,1,1,263,], )
paddle.Tensor.expand(Tensor([16384, 1, 512, 512],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([16393005, 1, 1, 262],"bool"), list[2,1,1,262,], )
paddle.Tensor.expand(Tensor([164056, 1, 110, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([16455814, 1, 1, 261],"bool"), list[2,1,1,261,], )
paddle.Tensor.expand(Tensor([1651276, 1, 51, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([16519105, 1, 1, 260],"bool"), list[2,1,1,260,], )
paddle.Tensor.expand(Tensor([165191050, 1, 1, 26],"bool"), list[1,1,1,26,], )
paddle.Tensor.expand(Tensor([165191050, 1, 1, 26],"float32"), list[1,1,1,26,], )
paddle.Tensor.expand(Tensor([16582886, 1, 1, 259],"bool"), list[2,1,1,259,], )
paddle.Tensor.expand(Tensor([166259, 1, 109, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([16647161, 1, 1, 258],"bool"), list[2,1,1,258,], )
paddle.Tensor.expand(Tensor([16711935, 1, 1, 257],"bool"), list[2,1,1,257,], )
paddle.Tensor.expand(Tensor([16777216, 1, 1, 256],"bool"), list[2,1,1,256,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[10,-1,-1,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[3,-1,-1,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([33554432, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[30,-1,-1,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 33554432],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[4,-1,-1,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([16777216, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 33554432],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[5,-1,-1,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[6,-1,-1,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[7,-1,-1,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[8,-1,-1,], )
paddle.Tensor.expand(Tensor([16777216, 1, 256],"float32"), list[9,-1,-1,], )
paddle.Tensor.expand(Tensor([16777217, 128],"int64"), list[2,-1,], )
paddle.Tensor.expand(Tensor([16843009, 1, 1, 255],"bool"), list[2,1,1,255,], )
paddle.Tensor.expand(Tensor([16909321, 1, 1, 254],"bool"), list[2,1,1,254,], )
paddle.Tensor.expand(Tensor([16976156, 1, 1, 253],"bool"), list[2,1,1,253,], )
paddle.Tensor.expand(Tensor([17043522, 1, 1, 252],"bool"), list[2,1,1,252,], )
paddle.Tensor.expand(Tensor([170809, 1, 107, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([17111424, 1, 1, 251],"bool"), list[2,1,1,251,], )
paddle.Tensor.expand(Tensor([171798692, 1, 1, 25],"bool"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([171798692, 1, 1, 25],"float32"), list[1,1,1,25,], )
paddle.Tensor.expand(Tensor([171798692, 1, 5, 5],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([171798692, 1, 5, 5],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([171798692, 1, 5, 5],"bool"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([171798692, 1, 5, 5],"float32"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([171798692, 1, 5, 5],"float32"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([171798692, 1, 5, 5],"float32"), list[6,1,5,5,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 2097152],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1717987, 1, 50, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([17179870, 1, 1, 250],"bool"), list[2,1,1,250,], )
paddle.Tensor.expand(Tensor([17248865, 1, 1, 249],"bool"), list[2,1,1,249,], )
paddle.Tensor.expand(Tensor([1726, 2488394],"float32"), list[64,1726,1,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 2097152],"float32"), Tensor([3, 512, 1, 2097152],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([1726, 2488394],"float32"), list[64,1726,2,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 2097152],"float32"), Tensor([512, 512, 3, 2097152],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([17318417, 1, 1, 248],"bool"), list[2,1,1,248,], )
paddle.Tensor.expand(Tensor([17388532, 1, 1, 247],"bool"), list[2,1,1,247,], )
paddle.Tensor.expand(Tensor([17459217, 1, 1, 246],"bool"), list[2,1,1,246,], )
paddle.Tensor.expand(Tensor([17530479, 1, 1, 245],"bool"), list[2,1,1,245,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 2097152],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([17602325, 1, 1, 244],"bool"), list[2,1,1,244,], )
paddle.Tensor.expand(Tensor([17674763, 1, 1, 243],"bool"), list[2,1,1,243,], )
paddle.Tensor.expand(Tensor([17747799, 1, 1, 242],"bool"), list[2,1,1,242,], )
paddle.Tensor.expand(Tensor([17821442, 1, 1, 241],"bool"), list[2,1,1,241,], )
paddle.Tensor.expand(Tensor([178956971, 1, 1, 24],"bool"), list[1,1,1,24,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 4],"float32"), Tensor([3, 1431655765, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([178956971, 1, 1, 24],"float32"), list[1,1,1,24,], )
paddle.Tensor.expand(Tensor([17895698, 1, 1, 240],"bool"), list[2,1,1,240,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 4],"float32"), Tensor([3, 512, 1, 2796203],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([17895698, 1, 1, 240],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([17970575, 1, 1, 239],"bool"), list[2,1,1,239,], )
paddle.Tensor.expand(Tensor([17970575, 1, 1, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([18046082, 1, 1, 238],"bool"), list[2,1,1,238,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 4],"float32"), Tensor([3, 512, 2796203, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([18046082, 1, 1, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([18122225, 1, 1, 237],"bool"), list[2,1,1,237,], )
paddle.Tensor.expand(Tensor([18122225, 1, 1, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([18199014, 1, 1, 236],"bool"), list[2,1,1,236,], )
paddle.Tensor.expand(Tensor([18276457, 1, 1, 235],"bool"), list[2,1,1,235,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 4],"float32"), Tensor([512, 512, 3, 5462],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([18276457, 1, 1, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([18354562, 1, 1, 234],"bool"), list[2,1,1,234,], )
paddle.Tensor.expand(Tensor([18433337, 1, 1, 233],"bool"), list[2,1,1,233,], )
paddle.Tensor.expand(Tensor([18512791, 1, 1, 232],"bool"), list[2,1,1,232,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 4],"float32"), Tensor([512, 512, 5462, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([185898, 1, 152, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([18592933, 1, 1, 231],"bool"), list[2,1,1,231,], )
paddle.Tensor.expand(Tensor([186737709, 1, 1, 23],"bool"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([186737709, 1, 1, 23],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([186737709, 1, 1, 23],"bool"), list[2,1,3,23,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 4],"float32"), Tensor([512, 932068, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([186737709, 1, 1, 23],"float32"), list[1,1,1,23,], )
paddle.Tensor.expand(Tensor([18673771, 1, 1, 230],"bool"), list[2,1,1,230,], )
paddle.Tensor.expand(Tensor([18755316, 1, 1, 229],"bool"), list[2,1,1,229,], )
paddle.Tensor.expand(Tensor([18837576, 1, 1, 228],"bool"), list[2,1,1,228,], )
paddle.Tensor.expand(Tensor([18920561, 1, 1, 227],"bool"), list[2,1,1,227,], )
paddle.Tensor.expand(Tensor([19004281, 1, 1, 226],"bool"), list[2,1,1,226,], )
paddle.Tensor.expand(Tensor([19088744, 1, 1, 225],"bool"), list[2,1,1,225,], )
paddle.Tensor.expand(Tensor([19173962, 1, 1, 224],"bool"), list[2,1,1,224,], )
paddle.Tensor.expand(Tensor([19259944, 1, 1, 223],"bool"), list[2,1,1,223,], )
paddle.Tensor.expand(Tensor([19346700, 1, 1, 222],"bool"), list[2,1,1,222,], )
paddle.Tensor.expand(Tensor([19434242, 1, 1, 221],"bool"), list[2,1,1,221,], )
paddle.Tensor.expand(Tensor([1944304, 1, 47, 47],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([195225787, 1, 1, 22],"bool"), list[1,1,1,22,], )
paddle.Tensor.expand(Tensor([195225787, 1, 1, 22],"float32"), list[1,1,20,22,], )
paddle.Tensor.expand(Tensor([19522579, 1, 1, 220],"bool"), list[2,1,1,220,], )
paddle.Tensor.expand(Tensor([196082, 1, 148, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([19611723, 1, 1, 219],"bool"), list[2,1,1,219,], )
paddle.Tensor.expand(Tensor([19611723, 1, 1, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([19701685, 1, 1, 218],"bool"), list[2,1,1,218,], )
paddle.Tensor.expand(Tensor([19792477, 1, 1, 217],"bool"), list[2,1,1,217,], )
paddle.Tensor.expand(Tensor([198759, 1, 147, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([19884108, 1, 1, 216],"bool"), list[2,1,1,216,], )
paddle.Tensor.expand(Tensor([19884108, 12, 9, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([19976593, 1, 1, 215],"bool"), list[2,1,1,215,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,102,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,103,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,36,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,39,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,40,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,41,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,42,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 524288, 16],"float32"), Tensor([3, 512, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,43,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 524288, 16],"float32"), Tensor([3, 512, 524288, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,44,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 524288, 16],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,45,], )
paddle.nn.functional.conv2d(Tensor([1, 512, 524288, 16],"float32"), Tensor([512, 512, 524288, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,46,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,47,], )
paddle.nn.functional.conv2d(Tensor([1, 59652324, 2, 36],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,48,], )
paddle.nn.functional.conv2d(Tensor([1, 59652324, 2, 36],"float32"), Tensor([256, 59652324, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,50,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,51,], )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,52,], )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,53,], )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,54,], )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,55,], )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 44739243],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,56,], )
paddle.nn.functional.conv2d(Tensor([1, 6, 44739243, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,57,], )
paddle.nn.functional.conv2d(Tensor([1, 63161284, 2, 34],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,58,], )
paddle.nn.functional.conv2d(Tensor([1, 63161284, 2, 34],"float32"), Tensor([256, 63161284, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,59,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,60,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([1024, 65536, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,61,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,62,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([128, 65536, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,63,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,64,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([24, 65536, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,65,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([3, 128, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,66,], )
paddle.nn.functional.conv2d(Tensor([1, 65536, 256, 256],"float32"), Tensor([3, 65536, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,67,], )
paddle.nn.functional.conv2d(Tensor([1, 67108864, 2, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 67108864, 2, 32],"float32"), Tensor([256, 67108864, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,68,], )
paddle.nn.functional.conv2d(Tensor([1, 6882961, 12, 52],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,69,], )
paddle.nn.functional.conv2d(Tensor([1, 6882961, 12, 52],"float32"), Tensor([128, 6882961, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,70,], )
paddle.nn.functional.conv2d(Tensor([1, 7456541, 12, 48],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,71,], )
paddle.nn.functional.conv2d(Tensor([1, 7456541, 12, 48],"float32"), Tensor([128, 7456541, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,73,], )
paddle.nn.functional.conv2d(Tensor([1, 85599, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,74,], )
paddle.nn.functional.conv2d(Tensor([1, 85599, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,75,], )
paddle.nn.functional.conv2d(Tensor([1, 9942054, 12, 36],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,76,], )
paddle.nn.functional.conv2d(Tensor([1, 9942054, 12, 36],"float32"), Tensor([128, 9942054, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,77,], )
paddle.nn.functional.conv2d(Tensor([1009, 256, 129, 129],"float32"), Tensor([1009, 256, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,79,], )
paddle.nn.functional.conv2d(Tensor([1009, 256, 129, 129],"float32"), Tensor([512, 256, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,81,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,82,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([1, 1, 1073741824, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([1, 1, 4, 1073741824],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,84,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 131],"float32"), Tensor([1, 268435456, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,85,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,86,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,87,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 32018],"float32"), Tensor([1, 1, 4, 32018],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,88,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 131, 32018],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,89,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 16132, 260],"float32"), Tensor([1, 1, 16132, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,90,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 16132, 260],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,91,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 16195, 259],"float32"), Tensor([1, 1, 16195, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,92,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 16195, 259],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,93,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 16257, 258],"float32"), Tensor([1, 1, 16257, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,94,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([1398102, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1024, 1, 16257, 258],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,95,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,96,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 16257],"float32"), Tensor([1, 1, 4, 16257],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,97,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 16257],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,98,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([1, 1, 1073741824, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,1,99,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([1, 1, 4, 1073741824],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,35,35,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 258, 258],"float32"), Tensor([1, 268435456, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,37,37,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,39,39,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 259, 16195],"float32"), Tensor([1, 1, 4, 16195],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,40,40,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 259, 16195],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,41,41,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 259, 259],"float32"), Tensor([1, 1, 1073741824, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,45,45,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 259, 259],"float32"), Tensor([1, 1, 4, 1073741824],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 1, 259, 259],"float32"), Tensor([1, 268435456, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,5,5,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 260, 16132],"float32"), Tensor([1, 1, 4, 16132],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,50,50,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 260, 16132],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,51,51,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 260, 260],"float32"), Tensor([1, 1, 1073741824, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,52,52,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 260, 260],"float32"), Tensor([1, 1, 4, 1073741824],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,53,53,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 260, 260],"float32"), Tensor([1, 268435456, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,54,54,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,57,57,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 32018, 131],"float32"), Tensor([1, 1, 32018, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 1073741825],"int64"), list[2,1,6,6,], )
paddle.nn.functional.conv2d(Tensor([1024, 1, 32018, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 245, 131, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 245, 131, 131],"float32"), Tensor([1, 245, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,102,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,103,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,105,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,106,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,107,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,108,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,109,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,110,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,111,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,112,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,113,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,114,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,115,], )
paddle.nn.functional.conv2d(Tensor([1024, 256, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,116,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,117,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,118,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([5592406, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.nn.functional.conv2d(Tensor([1024, 256, 128, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), padding=1, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,119,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,120,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,121,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,122,], )
paddle.nn.functional.conv2d(Tensor([1024, 256, 128, 128],"float32"), Tensor([3, 256, 1, 1],"float32"), padding=0, groups=1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,123,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,124,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,125,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,126,], )
paddle.nn.functional.conv2d(Tensor([1024, 4096, 32, 32],"float32"), Tensor([1024, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,127,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,128,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,129,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,130,], )
paddle.nn.functional.conv2d(Tensor([1024, 4096, 32, 32],"float32"), Tensor([1024, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,131,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,132,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,133,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,134,], )
paddle.nn.functional.conv2d(Tensor([1024, 4096, 32, 32],"float32"), Tensor([24, 512, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,135,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,136,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,137,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,138,], )
paddle.nn.functional.conv2d(Tensor([1024, 4096, 32, 32],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1024, 63, 259, 259],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 63, 259, 259],"float32"), Tensor([1, 63, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 63, 260, 260],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 63, 260, 260],"float32"), Tensor([1, 63, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 64, 258, 258],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1024, 64, 258, 258],"float32"), Tensor([1, 64, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,139,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,140,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,141,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,142,], )
paddle.nn.functional.conv2d(Tensor([1041, 256, 127, 127],"float32"), Tensor([1041, 256, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,143,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,144,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,145,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,146,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,147,], )
paddle.nn.functional.conv2d(Tensor([1041, 256, 127, 127],"float32"), Tensor([512, 256, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,148,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,149,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,150,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,151,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,152,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,153,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,154,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,155,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,156,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,157,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,158,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,159,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,203,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,204,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,205,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,206,], )
paddle.nn.functional.conv2d(Tensor([10923, 1024, 12, 32],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,207,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,208,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,209,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,21,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,210,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,211,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,212,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,213,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,214,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,215,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,216,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,217,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,218,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,219,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,220,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,221,], )
paddle.nn.functional.conv2d(Tensor([1104673, 48, 9, 9],"float32"), Tensor([48, 48, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,222,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,223,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,224,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,225,], )
paddle.nn.functional.conv2d(Tensor([11184811, 96, 2, 2],"float32"), Tensor([11184811, 96, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,226,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,227,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,228,], )
paddle.nn.functional.conv2d(Tensor([11184811, 96, 2, 2],"float32"), Tensor([96, 96, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,229,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,230,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,231,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,232,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,233,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 11, 11],"float32"), Tensor([1, 1, 1073741824, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,234,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,235,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,236,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 11, 11],"float32"), Tensor([1, 1, 4, 1073741824],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,237,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,238,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,239,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,240,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 11, 11],"float32"), Tensor([1, 268435456, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,241,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,242,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,243,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,244,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,245,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,246,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,247,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 11, 32537632],"float32"), Tensor([1, 1, 4, 32537632],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,248,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,249,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,250,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,251,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 11, 32537632],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,252,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,253,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,254,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,255,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 32537632, 11],"float32"), Tensor([1, 1, 32537632, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,256,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,257,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,258,], )
paddle.nn.functional.conv2d(Tensor([12, 1, 32537632, 11],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,259,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,260,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,261,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,262,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,263,], )
paddle.nn.functional.conv2d(Tensor([12, 2957967, 11, 11],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,264,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,265,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,266,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,267,], )
paddle.nn.functional.conv2d(Tensor([12, 2957967, 11, 11],"float32"), Tensor([1, 2957967, 4, 4],"float32"), )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,268,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,269,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,270,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,271,], )
paddle.nn.functional.conv2d(Tensor([128, 2048, 128, 128],"float32"), Tensor([128, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,272,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,273,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,274,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,275,], )
paddle.nn.functional.conv2d(Tensor([128, 2048, 128, 128],"float32"), Tensor([128, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,276,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,277,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,278,], )
paddle.nn.functional.conv2d(Tensor([128, 2048, 128, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,279,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,280,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,281,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,282,], )
paddle.nn.functional.conv2d(Tensor([128, 2048, 128, 128],"float32"), Tensor([24, 256, 1, 1],"float32"), padding=0, groups=8, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,283,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,284,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,285,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,286,], )
paddle.nn.functional.conv2d(Tensor([131072, 2048, 4, 4],"float32"), Tensor([12, 512, 1, 1],"float32"), padding=0, groups=4, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,287,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,39,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,40,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 349526],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,41,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,42,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,43,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,44,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,45,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,46,], )
paddle.nn.functional.conv2d(Tensor([131072, 2048, 4, 4],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,47,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,50,], )
paddle.nn.functional.conv2d(Tensor([134217728, 8, 2, 2],"float32"), Tensor([134217728, 8, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,51,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,52,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,53,], )
paddle.nn.functional.conv2d(Tensor([134217728, 8, 2, 2],"float32"), Tensor([8, 8, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,54,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,57,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,58,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,60,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,63,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,65,], )
paddle.nn.functional.conv2d(Tensor([1398102, 192, 4, 4],"float32"), Tensor([384, 192, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,67,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,69,], )
paddle.nn.functional.conv2d(Tensor([1398102, 192, 4, 4],"float32"), Tensor([48, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,70,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,72,], )
paddle.nn.functional.conv2d(Tensor([1398102, 192, 4, 4],"float32"), Tensor([96, 192, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, "NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,73,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,74,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,75,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,77,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,79,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,81,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,82,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,84,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,85,], )
paddle.nn.functional.conv2d(Tensor([139811, 128, 12, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,86,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,87,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,88,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,89,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,90,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,92,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,93,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,94,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,95,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,96,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,97,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,98,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,1,99,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,10,10,], )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([171798692, 1, 5, 5],"float32"), groups=3, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,110,110,], )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([3, 1, 286331153, 5],"float32"), groups=3, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,112,112,], )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([3, 1, 5, 286331153],"float32"), groups=3, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,20,20,], )
paddle.nn.functional.conv2d(Tensor([16, 3, 260, 260],"float32"), weight=Tensor([3, 57266231, 5, 5],"float32"), groups=3, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,74,74,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,79,79,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,80,208,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,82,82,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,1,91,91,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,8,1,11,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,8,1,12,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"bool"), list[2,8,1,21,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"float32"), list[2,1,1,4,], )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([3, 1, 110127367, 13],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([3, 1, 13, 110127367],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([16, 3, 268, 268],"float32"), weight=Tensor([3, 8471336, 13, 13],"float32"), groups=3, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"float32"), list[2,1,1,5,], )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"float32"), list[2,1,3,3,], )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 2147483648],"float32"), dx=None, axis=-1, )
paddle.linalg.svd(Tensor([178956971, 12],"float64"), full_matrices=False, )
paddle.Tensor.expand(Tensor([2, 1, 1, 2147483648],"int32"), list[2,1,10,10,], )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 1073741825],"float64"), dx=None, axis=-1, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([715827883, 3],"float64"), dx=None, axis=-1, )
paddle.Tensor.expand(Tensor([2, 1, 10, 214748365],"bool"), list[2,8,10,10,], )
paddle.Tensor.expand(Tensor([2, 1, 10034971, 214],"bool"), list[2,1,1,214,], )
paddle.Tensor.expand(Tensor([2, 1, 10082083, 213],"bool"), list[2,1,1,213,], )
paddle.Tensor.expand(Tensor([2, 1, 10129640, 212],"bool"), list[2,1,1,212,], )
paddle.Tensor.expand(Tensor([2, 1, 10177648, 211],"bool"), list[2,1,1,211,], )
paddle.Tensor.expand(Tensor([2, 1, 102261127, 21],"bool"), list[2,1,1,21,], )
paddle.Tensor.expand(Tensor([2, 1, 102261127, 21],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([2, 1, 102261127, 21],"bool"), list[2,8,1,21,], )
paddle.Tensor.expand(Tensor([2, 1, 102261127, 21],"bool"), list[2,8,21,21,], )
paddle.Tensor.expand(Tensor([2, 1, 10226113, 210],"bool"), list[2,1,1,210,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 10226113, 210],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([2, 1, 10275042, 209],"bool"), list[2,1,1,209,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([1073741824, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 1048576, 4],"float32"), Tensor([1024, 512, 1048576, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 1048576, 4],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 10324441, 104],"int64"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([2, 1, 10324441, 208],"bool"), list[2,1,1,208,], )
paddle.Tensor.expand(Tensor([2, 1, 10324441, 208],"bool"), list[2,1,80,208,], )
paddle.Tensor.expand(Tensor([2, 1, 10374318, 207],"bool"), list[2,1,1,207,], )
paddle.Tensor.expand(Tensor([2, 1, 10374318, 207],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([2, 1, 10424678, 103],"int64"), list[2,1,1,103,], )
paddle.Tensor.expand(Tensor([2, 1, 10424678, 206],"bool"), list[2,1,1,206,], )
paddle.Tensor.expand(Tensor([2, 1, 10475530, 205],"bool"), list[2,1,1,205,], )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([4294967295],"float32"), dx=None, axis=1, )
paddle.Tensor.expand(Tensor([2, 1, 10526881, 102],"int64"), list[2,1,1,102,], )
paddle.Tensor.expand(Tensor([2, 1, 10526881, 204],"bool"), list[2,1,1,204,], )
paddle.Tensor.expand(Tensor([2, 1, 10578738, 203],"bool"), list[2,1,1,203,], )
paddle.Tensor.expand(Tensor([2, 1, 10631108, 101],"int64"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([2, 1, 10631108, 202],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([2, 1, 107374183, 20],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([2, 1, 107374183, 20],"bool"), list[2,8,20,20,], )
paddle.Tensor.expand(Tensor([2, 1, 10737419, 100],"int64"), list[2,1,1,100,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([1073741824, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 10845878, 99],"int64"), list[2,1,1,99,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 10956550, 98],"int64"), list[2,1,1,98,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([2, 1, 11069504, 97],"int64"), list[2,1,1,97,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 11184811, 96],"int64"), list[2,1,1,96,], )
paddle.Tensor.expand(Tensor([2, 1, 11302546, 95],"int64"), list[2,1,1,95,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([2, 1, 11422786, 94],"int64"), list[2,1,1,94,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 11545612, 93],"int64"), list[2,1,1,93,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2147483648],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 11671107, 92],"int64"), list[2,1,1,92,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2147483648],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 11799361, 91],"int64"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([2, 1, 11930465, 90],"int64"), list[2,1,1,90,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2147483648],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([2, 1, 12064515, 89],"int64"), list[2,1,1,89,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 128, 128],"float32"), Tensor([3728271, 128, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 12201612, 88],"int64"), list[2,1,1,88,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 128, 32768],"float32"), Tensor([1024, 128, 3, 32768],"float32"), padding=0, stride=2, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 12341861, 87],"int64"), list[2,1,1,87,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 128, 32768],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([2, 1, 12485371, 86],"int64"), list[2,1,1,86,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 12632257, 85],"int64"), list[2,1,1,85,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([2, 1, 12782641, 84],"int64"), list[2,1,1,84,], )
paddle.Tensor.expand(Tensor([2, 1, 12936649, 83],"int64"), list[2,1,1,83,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 13094413, 82],"int64"), list[2,1,1,82,], )
paddle.Tensor.expand(Tensor([2, 1, 13256072, 81],"int64"), list[2,1,1,81,], )
paddle.Tensor.expand(Tensor([2, 1, 13421773, 80],"int64"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([2, 1, 13506187, 159],"bool"), list[2,1,1,159,], )
paddle.Tensor.expand(Tensor([2, 1, 13591669, 158],"bool"), list[2,1,1,158,], )
paddle.Tensor.expand(Tensor([2, 1, 13591669, 79],"int64"), list[2,1,1,79,], )
paddle.Tensor.expand(Tensor([2, 1, 13678240, 157],"bool"), list[2,1,1,157,], )
paddle.Tensor.expand(Tensor([2, 1, 13765921, 156],"bool"), list[2,1,1,156,], )
paddle.Tensor.expand(Tensor([2, 1, 13765921, 78],"int64"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([2, 1, 13854734, 155],"bool"), list[2,1,1,155,], )
paddle.Tensor.expand(Tensor([2, 1, 13944700, 154],"bool"), list[2,1,1,154,], )
paddle.Tensor.expand(Tensor([2, 1, 13944700, 77],"int64"), list[2,1,1,77,], )
paddle.Tensor.expand(Tensor([2, 1, 14035841, 153],"bool"), list[2,1,1,153,], )
paddle.Tensor.expand(Tensor([2, 1, 14128182, 152],"bool"), list[2,1,1,152,], )
paddle.Tensor.expand(Tensor([2, 1, 14128182, 76],"int64"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([2, 1, 14221747, 151],"bool"), list[2,1,1,151,], )
paddle.Tensor.expand(Tensor([2, 1, 14316558, 150],"bool"), list[2,1,1,150,], )
paddle.Tensor.expand(Tensor([2, 1, 14316558, 75],"int64"), list[2,1,1,75,], )
paddle.Tensor.expand(Tensor([2, 1, 14412642, 149],"bool"), list[2,1,1,149,], )
paddle.Tensor.expand(Tensor([2, 1, 14510025, 148],"bool"), list[2,1,1,148,], )
paddle.Tensor.expand(Tensor([2, 1, 14510025, 74],"int64"), list[2,1,1,74,], )
paddle.Tensor.expand(Tensor([2, 1, 14608733, 147],"bool"), list[2,1,1,147,], )
paddle.Tensor.expand(Tensor([2, 1, 14708793, 146],"bool"), list[2,1,1,146,], )
paddle.Tensor.expand(Tensor([2, 1, 14708793, 73],"int64"), list[2,1,1,73,], )
paddle.Tensor.expand(Tensor([2, 1, 14810233, 145],"bool"), list[2,1,1,145,], )
paddle.Tensor.expand(Tensor([2, 1, 14913081, 144],"bool"), list[2,1,1,144,], )
paddle.Tensor.expand(Tensor([2, 1, 14913081, 72],"int64"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([2, 1, 15017369, 143],"bool"), list[2,1,1,143,], )
paddle.Tensor.expand(Tensor([2, 1, 15123125, 142],"bool"), list[2,1,1,142,], )
paddle.Tensor.expand(Tensor([2, 1, 15123125, 71],"int64"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([2, 1, 15230381, 141],"bool"), list[2,1,1,141,], )
paddle.Tensor.expand(Tensor([2, 1, 15339169, 140],"bool"), list[2,1,1,140,], )
paddle.Tensor.expand(Tensor([2, 1, 15339169, 70],"int64"), list[2,1,1,70,], )
paddle.Tensor.expand(Tensor([2, 1, 153391690, 7],"int64"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([2, 1, 15449523, 139],"bool"), list[2,1,1,139,], )
paddle.Tensor.expand(Tensor([2, 1, 15561476, 138],"bool"), list[2,1,1,138,], )
paddle.Tensor.expand(Tensor([2, 1, 15561476, 69],"int64"), list[2,1,1,69,], )
paddle.Tensor.expand(Tensor([2, 1, 15675064, 137],"bool"), list[2,1,1,137,], )
paddle.Tensor.expand(Tensor([2, 1, 15790321, 136],"bool"), list[2,1,1,136,], )
paddle.Tensor.expand(Tensor([2, 1, 15790321, 68],"int64"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([2, 1, 15907287, 135],"bool"), list[2,1,1,135,], )
paddle.Tensor.expand(Tensor([2, 1, 16025998, 134],"bool"), list[2,1,1,134,], )
paddle.Tensor.expand(Tensor([2, 1, 16025998, 67],"int64"), list[2,1,1,67,], )
paddle.Tensor.expand(Tensor([2, 1, 16146494, 133],"bool"), list[2,1,1,133,], )
paddle.Tensor.expand(Tensor([2, 1, 16268816, 132],"bool"), list[2,1,1,132,], )
paddle.Tensor.expand(Tensor([2, 1, 16268816, 66],"int64"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([2, 1, 16393005, 131],"bool"), list[2,1,1,131,], )
paddle.Tensor.expand(Tensor([2, 1, 16519105, 130],"bool"), list[2,1,1,130,], )
paddle.Tensor.expand(Tensor([2, 1, 16519105, 65],"int64"), list[2,1,1,65,], )
paddle.Tensor.expand(Tensor([2, 1, 16647161, 129],"bool"), list[2,1,1,129,], )
paddle.Tensor.expand(Tensor([2, 1, 16777216, 128],"bool"), list[2,1,1,128,], )
paddle.Tensor.expand(Tensor([2, 1, 16777217, 64],"int64"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([2, 1, 16909321, 127],"bool"), list[2,1,1,127,], )
paddle.Tensor.expand(Tensor([2, 1, 17043522, 126],"bool"), list[2,1,1,126,], )
paddle.Tensor.expand(Tensor([2, 1, 17043522, 63],"int64"), list[2,1,1,63,], )
paddle.Tensor.expand(Tensor([2, 1, 17179870, 125],"bool"), list[2,1,1,125,], )
paddle.Tensor.expand(Tensor([2, 1, 17318417, 124],"bool"), list[2,1,1,124,], )
paddle.Tensor.expand(Tensor([2, 1, 17318417, 62],"int64"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([2, 1, 17459217, 123],"bool"), list[2,1,1,123,], )
paddle.Tensor.expand(Tensor([2, 1, 17602325, 122],"bool"), list[2,1,1,122,], )
paddle.Tensor.expand(Tensor([2, 1, 17602325, 61],"int64"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([2, 1, 17747799, 121],"bool"), list[2,1,1,121,], )
paddle.Tensor.expand(Tensor([2, 1, 178956971, 12],"bool"), list[2,8,1,12,], )
paddle.Tensor.expand(Tensor([2, 1, 178956971, 6],"int64"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([2, 1, 178956971, 6],"int64"), list[2,1,6,6,], )
paddle.Tensor.expand(Tensor([2, 1, 17895698, 120],"bool"), list[2,1,1,120,], )
paddle.Tensor.expand(Tensor([2, 1, 17895698, 60],"int64"), list[2,1,1,60,], )
paddle.Tensor.expand(Tensor([2, 1, 18046082, 119],"bool"), list[2,1,1,119,], )
paddle.Tensor.expand(Tensor([2, 1, 18199014, 118],"bool"), list[2,1,1,118,], )
paddle.Tensor.expand(Tensor([2, 1, 18199014, 59],"int64"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([2, 1, 18354562, 117],"bool"), list[2,1,1,117,], )
paddle.Tensor.expand(Tensor([2, 1, 18512791, 116],"bool"), list[2,1,1,116,], )
paddle.Tensor.expand(Tensor([2, 1, 18512791, 58],"int64"), list[2,1,1,58,], )
paddle.Tensor.expand(Tensor([2, 1, 18673771, 115],"bool"), list[2,1,1,115,], )
paddle.Tensor.expand(Tensor([2, 1, 18837576, 114],"bool"), list[2,1,1,114,], )
paddle.Tensor.expand(Tensor([2, 1, 18837576, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([2, 1, 18837576, 57],"int64"), list[2,1,1,57,], )
paddle.Tensor.expand(Tensor([2, 1, 18837576, 57],"int64"), list[2,1,57,57,], )
paddle.Tensor.expand(Tensor([2, 1, 19004281, 113],"bool"), list[2,1,1,113,], )
paddle.Tensor.expand(Tensor([2, 1, 19173962, 112],"bool"), list[2,1,1,112,], )
paddle.Tensor.expand(Tensor([2, 1, 19173962, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([2, 1, 19173962, 56],"int64"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([2, 1, 19346700, 111],"bool"), list[2,1,1,111,], )
paddle.Tensor.expand(Tensor([2, 1, 19346700, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([2, 1, 195225787, 11],"bool"), list[2,8,1,11,], )
paddle.Tensor.expand(Tensor([2, 1, 19522579, 110],"bool"), list[2,1,1,110,], )
paddle.Tensor.expand(Tensor([2, 1, 19522579, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([2, 1, 19522579, 55],"int64"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([2, 1, 19701685, 109],"bool"), list[2,1,1,109,], )
paddle.Tensor.expand(Tensor([2, 1, 19701685, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([2, 1, 19884108, 108],"bool"), list[2,1,1,108,], )
paddle.Tensor.expand(Tensor([2, 1, 19884108, 54],"int64"), list[2,1,1,54,], )
paddle.Tensor.expand(Tensor([2, 1, 19884108, 54],"int64"), list[2,1,54,54,], )
paddle.Tensor.expand(Tensor([2, 1, 20, 107374183],"bool"), list[2,8,20,20,], )
paddle.Tensor.expand(Tensor([2, 1, 20069941, 107],"bool"), list[2,1,1,107,], )
paddle.Tensor.expand(Tensor([2, 1, 20069941, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([2, 1, 20259280, 106],"bool"), list[2,1,1,106,], )
paddle.Tensor.expand(Tensor([2, 1, 20259280, 53],"int64"), list[2,1,1,53,], )
paddle.Tensor.expand(Tensor([2, 1, 20259280, 53],"int64"), list[2,1,53,53,], )
paddle.Tensor.expand(Tensor([2, 1, 20452226, 105],"bool"), list[2,1,1,105,], )
paddle.Tensor.expand(Tensor([2, 1, 20648882, 104],"bool"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([2, 1, 20648882, 52],"int64"), list[2,1,1,52,], )
paddle.nn.functional.fractional_max_pool3d(x=Tensor([2, 3, 7, 14608733, 7],"float32"), output_size=list[3,None,3,], random_u=0.6, )
paddle.Tensor.expand(Tensor([2, 1, 20648882, 52],"int64"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 1, 20849356, 103],"bool"), list[2,1,1,103,], )
paddle.Tensor.expand(Tensor([2, 1, 21, 102261127],"bool"), list[2,8,21,21,], )
paddle.Tensor.expand(Tensor([2, 1, 21053762, 102],"bool"), list[2,1,1,102,], )
paddle.Tensor.expand(Tensor([2, 1, 21053762, 51],"int64"), list[2,1,1,51,], )
paddle.Tensor.expand(Tensor([2, 1, 21053762, 51],"int64"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 1, 21262215, 101],"bool"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([2, 1, 2147483648],"float32"), tuple(2,1,2,), )
paddle.Tensor.expand(Tensor([2, 1, 2147483648],"int32"), list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([2, 1, 2147483648],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([2, 1, 214748365, 10],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([2, 1, 214748365, 10],"bool"), list[2,8,10,10,], )
paddle.Tensor.expand(Tensor([2, 1, 214748365, 10],"int32"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([2, 1, 214748365, 5],"int64"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([2, 1, 21474837, 100],"bool"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([2, 1, 21474837, 50],"int64"), list[2,1,1,50,], )
paddle.Tensor.expand(Tensor([2, 1, 21474837, 50],"int64"), list[2,1,50,50,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 16, 16],"float32"), Tensor([1048576, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 21691755, 99],"bool"), list[2,1,1,99,], )
paddle.Tensor.expand(Tensor([2, 1, 21913099, 49],"int64"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([2, 1, 21913099, 98],"bool"), list[2,1,1,98,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 16, 262144],"float32"), Tensor([1024, 256, 4, 262144],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 22139007, 97],"bool"), list[2,1,1,97,], )
paddle.Tensor.expand(Tensor([2, 1, 22369622, 48],"int64"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([2, 1, 22369622, 96],"bool"), list[2,1,1,96,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 16, 262144],"float32"), Tensor([1024, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 22605092, 95],"bool"), list[2,1,1,95,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 2, 2097152],"float32"), Tensor([1024, 512, 4, 2097152],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 22845571, 47],"int64"), list[2,1,1,47,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 2, 2097152],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 22845571, 47],"int64"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 1, 22845571, 94],"bool"), list[2,1,1,94,], )
paddle.Tensor.expand(Tensor([2, 1, 23, 93368855],"bool"), list[2,8,23,23,], )
paddle.Tensor.expand(Tensor([2, 1, 23091223, 93],"bool"), list[2,1,1,93,], )
paddle.Tensor.expand(Tensor([2, 1, 23342214, 46],"int64"), list[2,1,1,46,], )
paddle.Tensor.expand(Tensor([2, 1, 23342214, 92],"bool"), list[2,1,1,92,], )
paddle.Tensor.expand(Tensor([2, 1, 23598722, 91],"bool"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([2, 1, 23598722, 91],"bool"), list[2,1,91,91,], )
paddle.Tensor.expand(Tensor([2, 1, 23860930, 45],"int64"), list[2,1,1,45,], )
paddle.Tensor.expand(Tensor([2, 1, 23860930, 45],"int64"), list[2,1,45,45,], )
paddle.Tensor.expand(Tensor([2, 1, 23860930, 90],"bool"), list[2,1,1,90,], )
paddle.Tensor.expand(Tensor([2, 1, 24129030, 89],"bool"), list[2,1,1,89,], )
paddle.Tensor.expand(Tensor([2, 1, 24403224, 44],"int64"), list[2,1,1,44,], )
paddle.Tensor.expand(Tensor([2, 1, 24403224, 88],"bool"), list[2,1,1,88,], )
paddle.Tensor.expand(Tensor([2, 1, 24683721, 87],"bool"), list[2,1,1,87,], )
paddle.Tensor.expand(Tensor([2, 1, 24970741, 43],"int64"), list[2,1,1,43,], )
paddle.Tensor.expand(Tensor([2, 1, 24970741, 86],"bool"), list[2,1,1,86,], )
paddle.Tensor.expand(Tensor([2, 1, 25264514, 85],"bool"), list[2,1,1,85,], )
paddle.Tensor.expand(Tensor([2, 1, 25565282, 42],"int64"), list[2,1,1,42,], )
paddle.Tensor.expand(Tensor([2, 1, 25565282, 84],"bool"), list[2,1,1,84,], )
paddle.Tensor.expand(Tensor([2, 1, 25873297, 83],"bool"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([2, 1, 26188825, 41],"int64"), list[2,1,1,41,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2147483648, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 26188825, 41],"int64"), list[2,1,41,41,], )
paddle.Tensor.expand(Tensor([2, 1, 26188825, 82],"bool"), list[2,1,1,82,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2147483648, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.Tensor.expand(Tensor([2, 1, 26188825, 82],"bool"), list[2,1,82,82,], )
paddle.Tensor.expand(Tensor([2, 1, 26512144, 81],"bool"), list[2,1,1,81,], )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2147483648, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.Tensor.expand(Tensor([2, 1, 268435456, 8],"float32"), list[2,1,8,8,], )
paddle.Tensor.expand(Tensor([2, 1, 26843546, 40],"int64"), list[2,1,1,40,], )
paddle.Tensor.expand(Tensor([2, 1, 26843546, 40],"int64"), list[2,1,40,40,], )
paddle.Tensor.expand(Tensor([2, 1, 26843546, 80],"bool"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([2, 1, 26843546, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([2, 1, 27183338, 79],"bool"), list[2,1,1,79,], )
paddle.Tensor.expand(Tensor([2, 1, 27183338, 79],"bool"), list[2,1,79,79,], )
paddle.Tensor.expand(Tensor([2, 1, 27531842, 39],"int64"), list[2,1,1,39,], )
paddle.Tensor.expand(Tensor([2, 1, 27531842, 39],"int64"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([2, 1, 27531842, 78],"bool"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([2, 1, 27889399, 77],"bool"), list[2,1,1,77,], )
paddle.Tensor.expand(Tensor([2, 1, 28256364, 38],"int64"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([2, 1, 28256364, 38],"int64"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 1, 28256364, 76],"bool"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([2, 1, 28633116, 75],"bool"), list[2,1,1,75,], )
paddle.Tensor.expand(Tensor([2, 1, 29020050, 37],"int64"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([2, 1, 29020050, 37],"int64"), list[2,1,37,37,], )
paddle.Tensor.expand(Tensor([2, 1, 29020050, 74],"bool"), list[2,1,1,74,], )
paddle.Tensor.expand(Tensor([2, 1, 29020050, 74],"bool"), list[2,1,74,74,], )
paddle.Tensor.expand(Tensor([2, 1, 29417585, 73],"bool"), list[2,1,1,73,], )
paddle.Tensor.expand(Tensor([2, 1, 29826162, 36],"int64"), list[2,1,1,36,], )
paddle.Tensor.expand(Tensor([2, 1, 29826162, 72],"bool"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([2, 1, 3, 715827883],"bool"), list[2,8,3,23,], )
paddle.Tensor.expand(Tensor([2, 1, 30246249, 71],"bool"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([2, 1, 306783379, 7],"bool"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([2, 1, 30678338, 35],"int64"), list[2,1,35,35,], )
paddle.Tensor.expand(Tensor([2, 1, 30678338, 70],"bool"), list[2,1,1,70,], )
paddle.Tensor.expand(Tensor([2, 1, 31122952, 69],"bool"), list[2,1,1,69,], )
paddle.Tensor.expand(Tensor([2, 1, 31580642, 68],"bool"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([2, 1, 32051995, 67],"bool"), list[2,1,1,67,], )
paddle.Tensor.expand(Tensor([2, 1, 32537632, 66],"bool"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([2, 1, 33038210, 65],"bool"), list[2,1,1,65,], )
paddle.Tensor.expand(Tensor([2, 1, 33554432, 64],"bool"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([2, 1, 34087043, 63],"bool"), list[2,1,1,63,], )
paddle.Tensor.expand(Tensor([2, 1, 34636834, 62],"bool"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([2, 1, 35204650, 61],"bool"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([2, 1, 357913942, 6],"bool"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([2, 1, 35791395, 60],"bool"), list[2,1,1,60,], )
paddle.Tensor.expand(Tensor([2, 1, 36, 59652324],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([2, 1, 36398028, 59],"bool"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([2, 1, 36398028, 59],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([2, 1, 37025581, 58],"bool"), list[2,1,1,58,], )
paddle.Tensor.expand(Tensor([2, 1, 37675152, 57],"bool"), list[2,1,1,57,], )
paddle.Tensor.expand(Tensor([2, 1, 38, 56512728],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 1, 38347923, 56],"bool"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([2, 1, 39, 55063684],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([2, 1, 39045158, 55],"bool"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([2, 1, 39768216, 54],"bool"), list[2,1,1,54,], )
paddle.Tensor.expand(Tensor([2, 1, 40518560, 53],"bool"), list[2,1,1,53,], )
paddle.Tensor.expand(Tensor([2, 1, 41297763, 52],"bool"), list[2,1,1,52,], )
paddle.Tensor.expand(Tensor([2, 1, 41297763, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 1, 42107523, 51],"bool"), list[2,1,1,51,], )
paddle.Tensor.expand(Tensor([2, 1, 42107523, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 1, 42949673, 50],"bool"), list[2,1,1,50,], )
paddle.Tensor.expand(Tensor([2, 1, 42949673, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([2, 1, 429496730, 5],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([2, 1, 429496730, 5],"float32"), list[2,1,1,5,], )
paddle.Tensor.expand(Tensor([2, 1, 43826197, 49],"bool"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([2, 1, 44739243, 48],"bool"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([2, 1, 45691142, 47],"bool"), list[2,1,1,47,], )
paddle.Tensor.expand(Tensor([2, 1, 45691142, 47],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 1, 46684428, 46],"bool"), list[2,1,1,46,], )
paddle.Tensor.expand(Tensor([2, 1, 47, 45691142],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 1, 47721859, 45],"bool"), list[2,1,1,45,], )
paddle.Tensor.expand(Tensor([2, 1, 48806447, 44],"bool"), list[2,1,1,44,], )
paddle.Tensor.expand(Tensor([2, 1, 49941481, 43],"bool"), list[2,1,1,43,], )
paddle.Tensor.expand(Tensor([2, 1, 50, 42949673],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([2, 1, 51, 42107523],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 1, 51130564, 42],"bool"), list[2,1,1,42,], )
paddle.Tensor.expand(Tensor([2, 1, 52, 41297763],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 1, 52377650, 41],"bool"), list[2,1,1,41,], )
paddle.Tensor.expand(Tensor([2, 1, 536870912, 4],"float32"), list[2,1,1,4,], )
paddle.Tensor.expand(Tensor([2, 1, 53687092, 40],"bool"), list[2,1,1,40,], )
paddle.Tensor.expand(Tensor([2, 1, 55063684, 39],"bool"), list[2,1,1,39,], )
paddle.Tensor.expand(Tensor([2, 1, 55063684, 39],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([2, 1, 56512728, 38],"bool"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([2, 1, 56512728, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 1, 58040099, 37],"bool"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([2, 1, 59, 36398028],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([2, 1, 59652324, 36],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([2, 1, 6206601, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([2, 1, 7064091, 304],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([2, 1, 7110874, 302],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([2, 1, 715827883, 3],"float32"), list[2,1,3,3,], )
paddle.Tensor.expand(Tensor([2, 1, 7456541, 288],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([2, 1, 7482522, 287],"bool"), list[2,1,1,287,], )
paddle.Tensor.expand(Tensor([2, 1, 7508685, 286],"bool"), list[2,1,1,286,], )
paddle.Tensor.expand(Tensor([2, 1, 7535031, 285],"bool"), list[2,1,1,285,], )
paddle.Tensor.expand(Tensor([2, 1, 7561563, 284],"bool"), list[2,1,1,284,], )
paddle.Tensor.expand(Tensor([2, 1, 7588282, 283],"bool"), list[2,1,1,283,], )
paddle.Tensor.expand(Tensor([2, 1, 7615191, 282],"bool"), list[2,1,1,282,], )
paddle.Tensor.expand(Tensor([2, 1, 7642291, 281],"bool"), list[2,1,1,281,], )
paddle.Tensor.expand(Tensor([2, 1, 7669585, 280],"bool"), list[2,1,1,280,], )
paddle.Tensor.expand(Tensor([2, 1, 7697075, 279],"bool"), list[2,1,1,279,], )
paddle.Tensor.expand(Tensor([2, 1, 7724762, 278],"bool"), list[2,1,1,278,], )
paddle.Tensor.expand(Tensor([2, 1, 7752649, 277],"bool"), list[2,1,1,277,], )
paddle.Tensor.expand(Tensor([2, 1, 7780738, 276],"bool"), list[2,1,1,276,], )
paddle.Tensor.expand(Tensor([2, 1, 7809032, 275],"bool"), list[2,1,1,275,], )
paddle.Tensor.expand(Tensor([2, 1, 7837532, 274],"bool"), list[2,1,1,274,], )
paddle.Tensor.expand(Tensor([2, 1, 7866241, 273],"bool"), list[2,1,1,273,], )
paddle.Tensor.expand(Tensor([2, 1, 7895161, 272],"bool"), list[2,1,1,272,], )
paddle.Tensor.expand(Tensor([2, 1, 7924294, 271],"bool"), list[2,1,1,271,], )
paddle.Tensor.expand(Tensor([2, 1, 7953644, 270],"bool"), list[2,1,1,270,], )
paddle.Tensor.expand(Tensor([2, 1, 7983211, 269],"bool"), list[2,1,1,269,], )
paddle.Tensor.expand(Tensor([2, 1, 8, 268435456],"float32"), list[2,1,8,8,], )
paddle.Tensor.expand(Tensor([2, 1, 8012999, 268],"bool"), list[2,1,1,268,], )
paddle.Tensor.expand(Tensor([2, 1, 8043010, 267],"bool"), list[2,1,1,267,], )
paddle.Tensor.expand(Tensor([2, 1, 8073247, 266],"bool"), list[2,1,1,266,], )
paddle.Tensor.expand(Tensor([2, 1, 8103712, 265],"bool"), list[2,1,1,265,], )
paddle.Tensor.expand(Tensor([2, 1, 8134408, 264],"bool"), list[2,1,1,264,], )
paddle.Tensor.expand(Tensor([2, 1, 8165338, 263],"bool"), list[2,1,1,263,], )
paddle.Tensor.expand(Tensor([2, 1, 8196503, 262],"bool"), list[2,1,1,262,], )
paddle.Tensor.expand(Tensor([2, 1, 8227907, 261],"bool"), list[2,1,1,261,], )
paddle.Tensor.expand(Tensor([2, 1, 8259553, 260],"bool"), list[2,1,1,260,], )
paddle.Tensor.expand(Tensor([2, 1, 8291443, 259],"bool"), list[2,1,1,259,], )
paddle.Tensor.expand(Tensor([2, 1, 8323581, 258],"bool"), list[2,1,1,258,], )
paddle.Tensor.expand(Tensor([2, 1, 8355968, 257],"bool"), list[2,1,1,257,], )
paddle.Tensor.expand(Tensor([2, 1, 8388608, 256],"bool"), list[2,1,1,256,], )
paddle.Tensor.expand(Tensor([2, 1, 8421505, 255],"bool"), list[2,1,1,255,], )
paddle.Tensor.expand(Tensor([2, 1, 8454661, 254],"bool"), list[2,1,1,254,], )
paddle.Tensor.expand(Tensor([2, 1, 8488078, 253],"bool"), list[2,1,1,253,], )
paddle.Tensor.expand(Tensor([2, 1, 8521761, 252],"bool"), list[2,1,1,252,], )
paddle.Tensor.expand(Tensor([2, 1, 8555712, 251],"bool"), list[2,1,1,251,], )
paddle.Tensor.expand(Tensor([2, 1, 8589935, 250],"bool"), list[2,1,1,250,], )
paddle.Tensor.expand(Tensor([2, 1, 8624433, 249],"bool"), list[2,1,1,249,], )
paddle.Tensor.expand(Tensor([2, 1, 8659209, 248],"bool"), list[2,1,1,248,], )
paddle.Tensor.expand(Tensor([2, 1, 8694266, 247],"bool"), list[2,1,1,247,], )
paddle.Tensor.expand(Tensor([2, 1, 8729609, 246],"bool"), list[2,1,1,246,], )
paddle.Tensor.expand(Tensor([2, 1, 8765240, 245],"bool"), list[2,1,1,245,], )
paddle.Tensor.expand(Tensor([2, 1, 8801163, 244],"bool"), list[2,1,1,244,], )
paddle.Tensor.expand(Tensor([2, 1, 8837382, 243],"bool"), list[2,1,1,243,], )
paddle.Tensor.expand(Tensor([2, 1, 8873900, 242],"bool"), list[2,1,1,242,], )
paddle.Tensor.expand(Tensor([2, 1, 8910721, 241],"bool"), list[2,1,1,241,], )
paddle.Tensor.expand(Tensor([2, 1, 8947849, 240],"bool"), list[2,1,1,240,], )
paddle.Tensor.expand(Tensor([2, 1, 8947849, 240],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([2, 1, 8985288, 239],"bool"), list[2,1,1,239,], )
paddle.Tensor.expand(Tensor([2, 1, 8985288, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([2, 1, 9023041, 238],"bool"), list[2,1,1,238,], )
paddle.Tensor.expand(Tensor([2, 1, 9023041, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([2, 1, 9061113, 237],"bool"), list[2,1,1,237,], )
paddle.Tensor.expand(Tensor([2, 1, 9061113, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([2, 1, 9099507, 236],"bool"), list[2,1,1,236,], )
paddle.Tensor.expand(Tensor([2, 1, 9138229, 235],"bool"), list[2,1,1,235,], )
paddle.Tensor.expand(Tensor([2, 1, 9138229, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([2, 1, 9177281, 234],"bool"), list[2,1,1,234,], )
paddle.Tensor.expand(Tensor([2, 1, 9216669, 233],"bool"), list[2,1,1,233,], )
paddle.Tensor.expand(Tensor([2, 1, 9256396, 232],"bool"), list[2,1,1,232,], )
paddle.Tensor.expand(Tensor([2, 1, 9296467, 231],"bool"), list[2,1,1,231,], )
paddle.Tensor.expand(Tensor([2, 1, 93368855, 23],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([2, 1, 93368855, 23],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([2, 1, 93368855, 23],"bool"), list[2,8,23,23,], )
paddle.Tensor.expand(Tensor([2, 1, 93368855, 23],"bool"), list[2,8,3,23,], )
paddle.Tensor.expand(Tensor([2, 1, 9336886, 230],"bool"), list[2,1,1,230,], )
paddle.Tensor.expand(Tensor([2, 1, 9377658, 229],"bool"), list[2,1,1,229,], )
paddle.Tensor.expand(Tensor([2, 1, 9418788, 228],"bool"), list[2,1,1,228,], )
paddle.Tensor.expand(Tensor([2, 1, 9460281, 227],"bool"), list[2,1,1,227,], )
paddle.Tensor.expand(Tensor([2, 1, 9502141, 226],"bool"), list[2,1,1,226,], )
paddle.Tensor.expand(Tensor([2, 1, 9544372, 225],"bool"), list[2,1,1,225,], )
paddle.Tensor.expand(Tensor([2, 1, 9586981, 224],"bool"), list[2,1,1,224,], )
paddle.Tensor.expand(Tensor([2, 1, 9629972, 223],"bool"), list[2,1,1,223,], )
paddle.Tensor.expand(Tensor([2, 1, 9673350, 222],"bool"), list[2,1,1,222,], )
paddle.Tensor.expand(Tensor([2, 1, 9717121, 221],"bool"), list[2,1,1,221,], )
paddle.Tensor.expand(Tensor([2, 1, 9761290, 220],"bool"), list[2,1,1,220,], )
paddle.Tensor.expand(Tensor([2, 1, 9805862, 219],"bool"), list[2,1,1,219,], )
paddle.Tensor.expand(Tensor([2, 1, 9805862, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([2, 1, 9850843, 218],"bool"), list[2,1,1,218,], )
paddle.Tensor.expand(Tensor([2, 1, 9896239, 217],"bool"), list[2,1,1,217,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 2, 2],"float32"), Tensor([524288, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1, 9942054, 216],"bool"), list[2,1,1,216,], )
paddle.Tensor.expand(Tensor([2, 1, 9988297, 215],"bool"), list[2,1,1,215,], )
paddle.Tensor.expand(Tensor([2, 10034971, 1, 214],"bool"), list[2,1,1,214,], )
paddle.Tensor.expand(Tensor([2, 10082083, 1, 213],"bool"), list[2,1,1,213,], )
paddle.Tensor.expand(Tensor([2, 10129640, 1, 212],"bool"), list[2,1,1,212,], )
paddle.Tensor.expand(Tensor([2, 10177648, 1, 211],"bool"), list[2,1,1,211,], )
paddle.Tensor.expand(Tensor([2, 102261127, 1, 21],"bool"), list[2,1,1,21,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 2097152, 2],"float32"), Tensor([1024, 512, 2097152, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 102261127, 1, 21],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([2, 102261127, 1, 21],"bool"), list[2,8,1,21,], )
paddle.Tensor.expand(Tensor([2, 10226113, 1, 210],"bool"), list[2,1,1,210,], )
paddle.Tensor.expand(Tensor([2, 10226113, 1, 210],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([2, 10275042, 1, 209],"bool"), list[2,1,1,209,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 2097152, 2],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 262144, 16],"float32"), Tensor([1024, 256, 262144, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 10324441, 1, 104],"int64"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([2, 10324441, 1, 208],"bool"), list[2,1,1,208,], )
paddle.Tensor.expand(Tensor([2, 10324441, 1, 208],"bool"), list[2,1,80,208,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 262144, 16],"float32"), Tensor([1024, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 10374318, 1, 207],"bool"), list[2,1,1,207,], )
paddle.Tensor.expand(Tensor([2, 10374318, 1, 207],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([2, 10424678, 1, 103],"int64"), list[2,1,1,103,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 32768, 128],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2, 10424678, 1, 206],"bool"), list[2,1,1,206,], )
paddle.Tensor.expand(Tensor([2, 10475530, 1, 205],"bool"), list[2,1,1,205,], )
paddle.Tensor.expand(Tensor([2, 10526881, 1, 102],"int64"), list[2,1,1,102,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 32768, 128],"float32"), Tensor([1024, 128, 32768, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2, 10526881, 1, 204],"bool"), list[2,1,1,204,], )
paddle.Tensor.expand(Tensor([2, 10578738, 1, 203],"bool"), list[2,1,1,203,], )
paddle.Tensor.expand(Tensor([2, 10631108, 1, 101],"int64"), list[2,1,1,101,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 4, 1048576],"float32"), Tensor([1024, 512, 4, 1048576],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 10631108, 1, 202],"bool"), list[2,1,74,202,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 4, 1048576],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 1073741824, 2],"float32"), tuple(2,1,2,), )
paddle.Tensor.expand(Tensor([2, 1073741824, 2],"float32"), tuple(2,2,2,), )
paddle.Tensor.expand(Tensor([2, 1073741825],"float64"), list[2,2,], )
paddle.Tensor.expand(Tensor([2, 1073741825],"float64"), tuple(10000,2,3,), )
paddle.Tensor.expand(Tensor([2, 1073741825],"float64"), tuple(2,3,), )
paddle.Tensor.expand(Tensor([2, 107374183, 1, 20],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([2, 10737419, 1, 100],"int64"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([2, 10845878, 1, 99],"int64"), list[2,1,1,99,], )
paddle.Tensor.expand(Tensor([2, 10956550, 1, 98],"int64"), list[2,1,1,98,], )
paddle.Tensor.expand(Tensor([2, 11069504, 1, 97],"int64"), list[2,1,1,97,], )
paddle.Tensor.expand(Tensor([2, 11184811, 1, 96],"int64"), list[2,1,1,96,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([2, 11302546, 1, 95],"int64"), list[2,1,1,95,], )
paddle.Tensor.expand(Tensor([2, 11422786, 1, 94],"int64"), list[2,1,1,94,], )
paddle.Tensor.expand(Tensor([2, 11545612, 1, 93],"int64"), list[2,1,1,93,], )
paddle.Tensor.expand(Tensor([2, 11671107, 1, 92],"int64"), list[2,1,1,92,], )
paddle.Tensor.expand(Tensor([2, 11799361, 1, 91],"int64"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([2, 11930465, 1, 90],"int64"), list[2,1,1,90,], )
paddle.Tensor.expand(Tensor([2, 12064515, 1, 89],"int64"), list[2,1,1,89,], )
paddle.Tensor.expand(Tensor([2, 12201612, 1, 88],"int64"), list[2,1,1,88,], )
paddle.Tensor.expand(Tensor([2, 12341861, 1, 87],"int64"), list[2,1,1,87,], )
paddle.Tensor.expand(Tensor([2, 12485371, 1, 86],"int64"), list[2,1,1,86,], )
paddle.Tensor.expand(Tensor([2, 12632257, 1, 85],"int64"), list[2,1,1,85,], )
paddle.Tensor.expand(Tensor([2, 12782641, 1, 84],"int64"), list[2,1,1,84,], )
paddle.Tensor.expand(Tensor([2, 12936649, 1, 83],"int64"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([2, 13094413, 1, 82],"int64"), list[2,1,1,82,], )
paddle.Tensor.expand(Tensor([2, 13256072, 1, 81],"int64"), list[2,1,1,81,], )
paddle.Tensor.expand(Tensor([2, 13421773, 1, 80],"int64"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([2, 13506187, 1, 159],"bool"), list[2,1,1,159,], )
paddle.Tensor.expand(Tensor([2, 13591669, 1, 158],"bool"), list[2,1,1,158,], )
paddle.Tensor.expand(Tensor([2, 13591669, 1, 79],"int64"), list[2,1,1,79,], )
paddle.Tensor.expand(Tensor([2, 13678240, 1, 157],"bool"), list[2,1,1,157,], )
paddle.Tensor.expand(Tensor([2, 13765921, 1, 156],"bool"), list[2,1,1,156,], )
paddle.Tensor.expand(Tensor([2, 13765921, 1, 78],"int64"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([2, 13854734, 1, 155],"bool"), list[2,1,1,155,], )
paddle.Tensor.expand(Tensor([2, 13944700, 1, 154],"bool"), list[2,1,1,154,], )
paddle.Tensor.expand(Tensor([2, 13944700, 1, 77],"int64"), list[2,1,1,77,], )
paddle.Tensor.expand(Tensor([2, 14, 76695845],"int64"), list[-1,-1,64,], )
paddle.Tensor.expand(Tensor([2, 14, 76695845],"int64"), list[-1,-1,768,], )
paddle.Tensor.expand(Tensor([2, 14035841, 1, 153],"bool"), list[2,1,1,153,], )
paddle.Tensor.expand(Tensor([2, 1411890, 39, 39],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([2, 14128182, 1, 152],"bool"), list[2,1,1,152,], )
paddle.Tensor.expand(Tensor([2, 14128182, 1, 76],"int64"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([2, 14221747, 1, 151],"bool"), list[2,1,1,151,], )
paddle.Tensor.expand(Tensor([2, 14316558, 1, 150],"bool"), list[2,1,1,150,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 4, 4],"float32"), Tensor([524288, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 14316558, 1, 75],"int64"), list[2,1,1,75,], )
paddle.Tensor.expand(Tensor([2, 14412642, 1, 149],"bool"), list[2,1,1,149,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 524288, 8],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 14510025, 1, 148],"bool"), list[2,1,1,148,], )
paddle.Tensor.expand(Tensor([2, 14510025, 1, 74],"int64"), list[2,1,1,74,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 524288, 8],"float32"), Tensor([1024, 512, 524288, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 14608733, 1, 147],"bool"), list[2,1,1,147,], )
paddle.Tensor.expand(Tensor([2, 14708793, 1, 146],"bool"), list[2,1,1,146,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 8, 524288],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 14708793, 1, 73],"int64"), list[2,1,1,73,], )
paddle.Tensor.expand(Tensor([2, 14810233, 1, 145],"bool"), list[2,1,1,145,], )
paddle.Tensor.expand(Tensor([2, 1487178, 38, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 14913081, 1, 144],"bool"), list[2,1,1,144,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 8, 524288],"float32"), Tensor([1024, 512, 4, 524288],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 14913081, 1, 72],"int64"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([2, 15017369, 1, 143],"bool"), list[2,1,1,143,], )
paddle.Tensor.expand(Tensor([2, 15123125, 1, 142],"bool"), list[2,1,1,142,], )
paddle.Tensor.expand(Tensor([2, 15123125, 1, 71],"int64"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([2, 15230381, 1, 141],"bool"), list[2,1,1,141,], )
paddle.Tensor.expand(Tensor([2, 15339169, 1, 140],"bool"), list[2,1,1,140,], )
paddle.Tensor.expand(Tensor([2, 15339169, 1, 70],"int64"), list[2,1,1,70,], )
paddle.Tensor.expand(Tensor([2, 153391690, 1, 7],"int64"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([2, 15449523, 1, 139],"bool"), list[2,1,1,139,], )
paddle.Tensor.expand(Tensor([2, 15561476, 1, 138],"bool"), list[2,1,1,138,], )
paddle.Tensor.expand(Tensor([2, 15561476, 1, 69],"int64"), list[2,1,1,69,], )
paddle.Tensor.expand(Tensor([2, 15675064, 1, 137],"bool"), list[2,1,1,137,], )
paddle.Tensor.expand(Tensor([2, 15790321, 1, 136],"bool"), list[2,1,1,136,], )
paddle.Tensor.expand(Tensor([2, 15790321, 1, 68],"int64"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([2, 15907287, 1, 135],"bool"), list[2,1,1,135,], )
paddle.Tensor.expand(Tensor([2, 16025998, 1, 134],"bool"), list[2,1,1,134,], )
paddle.Tensor.expand(Tensor([2, 16025998, 1, 67],"int64"), list[2,1,1,67,], )
paddle.Tensor.expand(Tensor([2, 16146494, 1, 133],"bool"), list[2,1,1,133,], )
paddle.Tensor.expand(Tensor([2, 16268816, 1, 132],"bool"), list[2,1,1,132,], )
paddle.Tensor.expand(Tensor([2, 16268816, 1, 66],"int64"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([2, 16393005, 1, 131],"bool"), list[2,1,1,131,], )
paddle.Tensor.expand(Tensor([2, 16519105, 1, 130],"bool"), list[2,1,1,130,], )
paddle.Tensor.expand(Tensor([2, 16519105, 1, 65],"int64"), list[2,1,1,65,], )
paddle.Tensor.expand(Tensor([2, 1657009, 36, 36],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([2, 16647161, 1, 129],"bool"), list[2,1,1,129,], )
paddle.Tensor.expand(Tensor([2, 16777216, 1, 128],"bool"), list[2,1,1,128,], )
paddle.Tensor.expand(Tensor([2, 16777217, 1, 64],"int64"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([2, 16909321, 1, 127],"bool"), list[2,1,1,127,], )
paddle.Tensor.expand(Tensor([2, 17043522, 1, 126],"bool"), list[2,1,1,126,], )
paddle.Tensor.expand(Tensor([2, 17043522, 1, 63],"int64"), list[2,1,1,63,], )
paddle.Tensor.expand(Tensor([2, 17179870, 1, 125],"bool"), list[2,1,1,125,], )
paddle.Tensor.expand(Tensor([2, 17318417, 1, 124],"bool"), list[2,1,1,124,], )
paddle.Tensor.expand(Tensor([2, 17318417, 1, 62],"int64"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([2, 17459217, 1, 123],"bool"), list[2,1,1,123,], )
paddle.Tensor.expand(Tensor([2, 17602325, 1, 122],"bool"), list[2,1,1,122,], )
paddle.Tensor.expand(Tensor([2, 17602325, 1, 61],"int64"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([2, 17747799, 1, 121],"bool"), list[2,1,1,121,], )
paddle.Tensor.expand(Tensor([2, 178956971, 1, 12],"bool"), list[2,8,1,12,], )
paddle.Tensor.expand(Tensor([2, 178956971, 1, 6],"int64"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([2, 178956971, 1, 6],"int64"), list[2,1,6,6,], )
paddle.Tensor.expand(Tensor([2, 17895698, 1, 120],"bool"), list[2,1,1,120,], )
paddle.Tensor.expand(Tensor([2, 17895698, 1, 60],"int64"), list[2,1,1,60,], )
paddle.Tensor.expand(Tensor([2, 18046082, 1, 119],"bool"), list[2,1,1,119,], )
paddle.Tensor.expand(Tensor([2, 18199014, 1, 118],"bool"), list[2,1,1,118,], )
paddle.Tensor.expand(Tensor([2, 18199014, 1, 59],"int64"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([2, 18354562, 1, 117],"bool"), list[2,1,1,117,], )
paddle.Tensor.expand(Tensor([2, 18512791, 1, 116],"bool"), list[2,1,1,116,], )
paddle.Tensor.expand(Tensor([2, 18512791, 1, 58],"int64"), list[2,1,1,58,], )
paddle.Tensor.expand(Tensor([2, 18673771, 1, 115],"bool"), list[2,1,1,115,], )
paddle.Tensor.expand(Tensor([2, 18837576, 1, 114],"bool"), list[2,1,1,114,], )
paddle.Tensor.expand(Tensor([2, 18837576, 1, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([2, 18837576, 1, 57],"int64"), list[2,1,1,57,], )
paddle.Tensor.expand(Tensor([2, 18837576, 1, 57],"int64"), list[2,1,57,57,], )
paddle.Tensor.expand(Tensor([2, 19004281, 1, 113],"bool"), list[2,1,1,113,], )
paddle.Tensor.expand(Tensor([2, 19173962, 1, 112],"bool"), list[2,1,1,112,], )
paddle.Tensor.expand(Tensor([2, 19173962, 1, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([2, 19173962, 1, 56],"int64"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([2, 19346700, 1, 111],"bool"), list[2,1,1,111,], )
paddle.Tensor.expand(Tensor([2, 19346700, 1, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([2, 195225787, 1, 11],"bool"), list[2,8,1,11,], )
paddle.Tensor.expand(Tensor([2, 19522579, 1, 110],"bool"), list[2,1,1,110,], )
paddle.Tensor.expand(Tensor([2, 19522579, 1, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([2, 19522579, 1, 55],"int64"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([2, 19701685, 1, 109],"bool"), list[2,1,1,109,], )
paddle.Tensor.expand(Tensor([2, 19701685, 1, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([2, 19884108, 1, 108],"bool"), list[2,1,1,108,], )
paddle.Tensor.expand(Tensor([2, 19884108, 1, 54],"int64"), list[2,1,1,54,], )
paddle.Tensor.expand(Tensor([2, 19884108, 1, 54],"int64"), list[2,1,54,54,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.Tensor.expand(Tensor([2, 2, 1073741824],"float32"), tuple(2,2,2,), )
paddle.Tensor.expand(Tensor([2, 20069941, 1, 107],"bool"), list[2,1,1,107,], )
paddle.Tensor.expand(Tensor([2, 20069941, 1, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([2, 20259280, 1, 106],"bool"), list[2,1,1,106,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([2, 20259280, 1, 53],"int64"), list[2,1,1,53,], )
paddle.Tensor.expand(Tensor([2, 20259280, 1, 53],"int64"), list[2,1,53,53,], )
paddle.Tensor.expand(Tensor([2, 20452226, 1, 105],"bool"), list[2,1,1,105,], )
paddle.Tensor.expand(Tensor([2, 20648882, 1, 104],"bool"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([2, 20648882, 1, 52],"int64"), list[2,1,1,52,], )
paddle.Tensor.expand(Tensor([2, 20648882, 1, 52],"int64"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 20849356, 1, 103],"bool"), list[2,1,1,103,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.Tensor.expand(Tensor([2, 21053762, 1, 102],"bool"), list[2,1,1,102,], )
paddle.Tensor.expand(Tensor([2, 21053762, 1, 51],"int64"), list[2,1,1,51,], )
paddle.Tensor.expand(Tensor([2, 21053762, 1, 51],"int64"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 21262215, 1, 101],"bool"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([2, 2147483648, 1],"bool"), list[2,60,2,], )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), list[2,2,], )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(10000,2,3,), )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(2,2,), )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(2,2,2,2,), )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(2,3,), )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(3,2,2,3,), )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(30000,2,2,), )
paddle.Tensor.expand(Tensor([2, 2147483648],"float32"), tuple(30000,2,3,), )
paddle.Tensor.expand(Tensor([2, 214748365, 1, 10],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([2, 214748365, 1, 10],"int32"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([2, 214748365, 1, 5],"int64"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([2, 21474837, 1, 100],"bool"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([2, 21474837, 1, 50],"int64"), list[2,1,1,50,], )
paddle.Tensor.expand(Tensor([2, 21474837, 1, 50],"int64"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([2, 21474837, 10, 10],"bool"), list[2,8,10,10,], )
paddle.Tensor.expand(Tensor([2, 21691755, 1, 99],"bool"), list[2,1,1,99,], )
paddle.Tensor.expand(Tensor([2, 21913099, 1, 49],"int64"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([2, 21913099, 1, 98],"bool"), list[2,1,1,98,], )
paddle.Tensor.expand(Tensor([2, 22139007, 1, 97],"bool"), list[2,1,1,97,], )
paddle.Tensor.expand(Tensor([2, 22369622, 1, 48],"int64"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([2, 22369622, 1, 96],"bool"), list[2,1,1,96,], )
paddle.Tensor.expand(Tensor([2, 22605092, 1, 95],"bool"), list[2,1,1,95,], )
paddle.Tensor.expand(Tensor([2, 22845571, 1, 47],"int64"), list[2,1,1,47,], )
paddle.Tensor.expand(Tensor([2, 22845571, 1, 47],"int64"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 22845571, 1, 94],"bool"), list[2,1,1,94,], )
paddle.Tensor.expand(Tensor([2, 23091223, 1, 93],"bool"), list[2,1,1,93,], )
paddle.Tensor.expand(Tensor([2, 23342214, 1, 46],"int64"), list[2,1,1,46,], )
paddle.Tensor.expand(Tensor([2, 23342214, 1, 92],"bool"), list[2,1,1,92,], )
paddle.Tensor.expand(Tensor([2, 23598722, 1, 91],"bool"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([2, 23598722, 1, 91],"bool"), list[2,1,91,91,], )
paddle.Tensor.expand(Tensor([2, 23860930, 1, 45],"int64"), list[2,1,1,45,], )
paddle.Tensor.expand(Tensor([2, 23860930, 1, 45],"int64"), list[2,1,45,45,], )
paddle.Tensor.expand(Tensor([2, 23860930, 1, 90],"bool"), list[2,1,1,90,], )
paddle.Tensor.expand(Tensor([2, 24129030, 1, 89],"bool"), list[2,1,1,89,], )
paddle.Tensor.expand(Tensor([2, 24403224, 1, 44],"int64"), list[2,1,1,44,], )
paddle.Tensor.expand(Tensor([2, 24403224, 1, 88],"bool"), list[2,1,1,88,], )
paddle.Tensor.expand(Tensor([2, 24683721, 1, 87],"bool"), list[2,1,1,87,], )
paddle.Tensor.expand(Tensor([2, 24970741, 1, 43],"int64"), list[2,1,1,43,], )
paddle.Tensor.expand(Tensor([2, 24970741, 1, 86],"bool"), list[2,1,1,86,], )
paddle.Tensor.expand(Tensor([2, 25264514, 1, 85],"bool"), list[2,1,1,85,], )
paddle.Tensor.expand(Tensor([2, 25565282, 1, 42],"int64"), list[2,1,1,42,], )
paddle.Tensor.expand(Tensor([2, 25565282, 1, 84],"bool"), list[2,1,1,84,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 8, 8],"float32"), Tensor([524288, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 25873297, 1, 83],"bool"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([2, 26188825, 1, 41],"int64"), list[2,1,1,41,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([2048, 1048576, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2, 26188825, 1, 41],"int64"), list[2,1,41,41,], )
paddle.Tensor.expand(Tensor([2, 26188825, 1, 82],"bool"), list[2,1,1,82,], )
paddle.Tensor.expand(Tensor([2, 26188825, 1, 82],"bool"), list[2,1,82,82,], )
paddle.Tensor.expand(Tensor([2, 26512144, 1, 81],"bool"), list[2,1,1,81,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2, 26843546, 1, 40],"int64"), list[2,1,1,40,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 26843546, 1, 40],"int64"), list[2,1,40,40,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([4096, 1048576, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2, 26843546, 1, 80],"bool"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([2, 26843546, 1, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([2, 27183338, 1, 79],"bool"), list[2,1,1,79,], )
paddle.Tensor.expand(Tensor([2, 27183338, 1, 79],"bool"), list[2,1,79,79,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([4096, 256, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([512, 1048576, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2, 27531842, 1, 39],"int64"), list[2,1,1,39,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([512, 256, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2, 27531842, 1, 39],"int64"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([2, 27531842, 1, 78],"bool"), list[2,1,1,78,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1024, 1073741824, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 27889399, 1, 77],"bool"), list[2,1,1,77,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 2796203, 1, 6, 128],"float32"), list[2,8,4,6,128,], )
paddle.Tensor.expand(Tensor([2, 28256364, 1, 38],"int64"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([2, 28256364, 1, 38],"int64"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 28256364, 1, 76],"bool"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([2, 28633116, 1, 75],"bool"), list[2,1,1,75,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 3, 2796203, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 29020050, 1, 37],"int64"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([2, 29020050, 1, 37],"int64"), list[2,1,37,37,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 3, 4, 2796203],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 29020050, 1, 74],"bool"), list[2,1,1,74,], )
paddle.Tensor.expand(Tensor([2, 29020050, 1, 74],"bool"), list[2,1,74,74,], )
paddle.Tensor.expand(Tensor([2, 29417585, 1, 73],"bool"), list[2,1,1,73,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([4294967295],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 29826162, 1, 36],"int64"), list[2,1,1,36,], )
paddle.Tensor.expand(Tensor([2, 29826162, 1, 72],"bool"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([2, 30246249, 1, 71],"bool"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([2, 306783379, 1, 7],"bool"), list[2,1,1,7,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 131072, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 174763, 3],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 306783379, 7],"int32"), list[-1,3,-1,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 3, 174763],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 306783379, 7],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([2, 30678338, 1, 35],"int64"), list[2,1,35,35,], )
paddle.Tensor.expand(Tensor([2, 30678338, 1, 70],"bool"), list[2,1,1,70,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 31122952, 1, 69],"bool"), list[2,1,1,69,], )
paddle.Tensor.expand(Tensor([2, 31122952, 3, 23],"bool"), list[2,8,3,23,], )
paddle.Tensor.expand(Tensor([2, 31580642, 1, 68],"bool"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([2, 32051995, 1, 67],"bool"), list[2,1,1,67,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 4, 131072],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 32537632, 1, 66],"bool"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([2, 33038210, 1, 65],"bool"), list[2,1,1,65,], )
paddle.Tensor.expand(Tensor([2, 33554432, 1, 64],"bool"), list[2,1,1,64,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([4194304, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([7456541, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 33554432, 8, 8],"float32"), list[2,1,8,8,], )
paddle.Tensor.expand(Tensor([2, 34087043, 1, 63],"bool"), list[2,1,1,63,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([89478486, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 34636834, 1, 62],"bool"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([2, 35204650, 1, 61],"bool"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([2, 357913942, 1, 6],"bool"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([2, 35791395, 1, 60],"bool"), list[2,1,1,60,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 262144],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 36398028, 1, 59],"bool"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([2, 36398028, 1, 59],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([2, 37025581, 1, 58],"bool"), list[2,1,1,58,], )
paddle.Tensor.expand(Tensor([2, 37675152, 1, 57],"bool"), list[2,1,1,57,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 262144],"float32"), Tensor([128, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 38347923, 1, 56],"bool"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([2, 39045158, 1, 55],"bool"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([2, 39768216, 1, 54],"bool"), list[2,1,1,54,], )
paddle.Tensor.expand(Tensor([2, 40518560, 1, 53],"bool"), list[2,1,1,53,], )
paddle.Tensor.expand(Tensor([2, 4059516, 23, 23],"bool"), list[2,8,23,23,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 262144],"float32"), Tensor([128, 64, 4, 262144],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 41297763, 1, 52],"bool"), list[2,1,1,52,], )
paddle.Tensor.expand(Tensor([2, 41297763, 1, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 42107523, 1, 51],"bool"), list[2,1,1,51,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 262144],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 42107523, 1, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 42949673, 1, 50],"bool"), list[2,1,1,50,], )
paddle.Tensor.expand(Tensor([2, 42949673, 1, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([2, 429496730, 1, 5],"bool"), list[2,1,5,5,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 262144, 128],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 262144, 128],"float32"), Tensor([128, 64, 262144, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 429496730, 1, 5],"float32"), list[2,1,1,5,], )
paddle.Tensor.expand(Tensor([2, 43826197, 1, 49],"bool"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([2, 44739243, 1, 48],"bool"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([2, 45691142, 1, 47],"bool"), list[2,1,1,47,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 262144, 128],"float32"), Tensor([128, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 45691142, 1, 47],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 46684428, 1, 46],"bool"), list[2,1,1,46,], )
paddle.Tensor.expand(Tensor([2, 47721859, 1, 45],"bool"), list[2,1,1,45,], )
paddle.Tensor.expand(Tensor([2, 4869578, 21, 21],"bool"), list[2,8,21,21,], )
paddle.Tensor.expand(Tensor([2, 48806447, 1, 44],"bool"), list[2,1,1,44,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 262144, 128],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 49941481, 1, 43],"bool"), list[2,1,1,43,], )
paddle.Tensor.expand(Tensor([2, 5, 214748365],"float64"), tuple(2,3,2,5,2,), )
paddle.Tensor.expand(Tensor([2, 5, 214748365],"float64"), tuple(2,5,2,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 80, 80],"float32"), Tensor([128, 128, 131072, 2],"float32"), bias=Tensor([128],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 51130564, 1, 42],"bool"), list[2,1,1,42,], )
paddle.Tensor.expand(Tensor([2, 52377650, 1, 41],"bool"), list[2,1,1,41,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 80, 80],"float32"), Tensor([128, 128, 2, 131072],"float32"), bias=Tensor([128],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 536870912, 1, 4],"float32"), list[2,1,1,4,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 80, 80],"float32"), Tensor([128, 128, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 536870913, 2],"float64"), tuple(2,3,2,5,2,), )
paddle.Tensor.expand(Tensor([2, 536870913, 2],"float64"), tuple(2,5,2,), )
paddle.Tensor.expand(Tensor([2, 53687092, 1, 40],"bool"), list[2,1,1,40,], )
paddle.Tensor.expand(Tensor([2, 5368710, 20, 20],"bool"), list[2,8,20,20,], )
paddle.Tensor.expand(Tensor([2, 55063684, 1, 39],"bool"), list[2,1,1,39,], )
paddle.Tensor.expand(Tensor([2, 55063684, 1, 39],"bool"), list[2,1,39,39,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 80, 80],"float32"), Tensor([8388608, 128, 2, 2],"float32"), bias=Tensor([128],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 56512728, 1, 38],"bool"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([2, 56512728, 1, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 58040099, 1, 37],"bool"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([2, 59652324, 1, 36],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([2, 60, 35791395],"bool"), list[2,60,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([1024, 16777216, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 616916, 59, 59],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([2, 6206601, 1, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([2, 7064091, 1, 304],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([2, 7110874, 1, 302],"bool"), list[2,1,302,302,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([1024, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2, 715827883, 1, 3],"float32"), list[2,1,3,3,], )
paddle.Tensor.expand(Tensor([2, 7456541, 1, 288],"bool"), list[2,1,288,288,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([2048, 16777216, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2, 7482522, 1, 287],"bool"), list[2,1,1,287,], )
paddle.Tensor.expand(Tensor([2, 7508685, 1, 286],"bool"), list[2,1,1,286,], )
paddle.Tensor.expand(Tensor([2, 7535031, 1, 285],"bool"), list[2,1,1,285,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2, 7561563, 1, 284],"bool"), list[2,1,1,284,], )
paddle.Tensor.expand(Tensor([2, 7588282, 1, 283],"bool"), list[2,1,1,283,], )
paddle.Tensor.expand(Tensor([2, 7615191, 1, 282],"bool"), list[2,1,1,282,], )
paddle.Tensor.expand(Tensor([2, 7642291, 1, 281],"bool"), list[2,1,1,281,], )
paddle.Tensor.expand(Tensor([2, 7669585, 1, 280],"bool"), list[2,1,1,280,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([4096, 16777216, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2, 7697075, 1, 279],"bool"), list[2,1,1,279,], )
paddle.Tensor.expand(Tensor([2, 7724762, 1, 278],"bool"), list[2,1,1,278,], )
paddle.Tensor.expand(Tensor([2, 7752649, 1, 277],"bool"), list[2,1,1,277,], )
paddle.Tensor.expand(Tensor([2, 7780738, 1, 276],"bool"), list[2,1,1,276,], )
paddle.Tensor.expand(Tensor([2, 7809032, 1, 275],"bool"), list[2,1,1,275,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2, 7837532, 1, 274],"bool"), list[2,1,1,274,], )
paddle.Tensor.expand(Tensor([2, 7866241, 1, 273],"bool"), list[2,1,1,273,], )
paddle.Tensor.expand(Tensor([2, 7895161, 1, 272],"bool"), list[2,1,1,272,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([512, 16777216, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2, 7924294, 1, 271],"bool"), list[2,1,1,271,], )
paddle.Tensor.expand(Tensor([2, 794188, 52, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([2, 7953644, 1, 270],"bool"), list[2,1,1,270,], )
paddle.Tensor.expand(Tensor([2, 7983211, 1, 269],"bool"), list[2,1,1,269,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2, 8, 1, 2097152, 128],"float32"), list[2,8,4,6,128,], )
paddle.Tensor.expand(Tensor([2, 8, 1, 6, 44739243],"float32"), list[2,8,4,6,128,], )
paddle.Tensor.expand(Tensor([2, 8, 349526, 6, 128],"float32"), list[2,8,4,6,128,], )
paddle.Tensor.expand(Tensor([2, 8012999, 1, 268],"bool"), list[2,1,1,268,], )
paddle.Tensor.expand(Tensor([2, 8043010, 1, 267],"bool"), list[2,1,1,267,], )
paddle.Tensor.expand(Tensor([2, 8073247, 1, 266],"bool"), list[2,1,1,266,], )
paddle.Tensor.expand(Tensor([2, 8103712, 1, 265],"bool"), list[2,1,1,265,], )
paddle.Tensor.expand(Tensor([2, 8134408, 1, 264],"bool"), list[2,1,1,264,], )
paddle.Tensor.expand(Tensor([2, 8165338, 1, 263],"bool"), list[2,1,1,263,], )
paddle.Tensor.expand(Tensor([2, 8196503, 1, 262],"bool"), list[2,1,1,262,], )
paddle.Tensor.expand(Tensor([2, 8227907, 1, 261],"bool"), list[2,1,1,261,], )
paddle.Tensor.expand(Tensor([2, 825638, 51, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([2, 8259553, 1, 260],"bool"), list[2,1,1,260,], )
paddle.Tensor.expand(Tensor([2, 8291443, 1, 259],"bool"), list[2,1,1,259,], )
paddle.Tensor.expand(Tensor([2, 8323581, 1, 258],"bool"), list[2,1,1,258,], )
paddle.Tensor.expand(Tensor([2, 8355968, 1, 257],"bool"), list[2,1,1,257,], )
paddle.Tensor.expand(Tensor([2, 8388608, 1, 256],"bool"), list[2,1,1,256,], )
paddle.Tensor.expand(Tensor([2, 8421505, 1, 255],"bool"), list[2,1,1,255,], )
paddle.Tensor.expand(Tensor([2, 8454661, 1, 254],"bool"), list[2,1,1,254,], )
paddle.Tensor.expand(Tensor([2, 8488078, 1, 253],"bool"), list[2,1,1,253,], )
paddle.Tensor.expand(Tensor([2, 8521761, 1, 252],"bool"), list[2,1,1,252,], )
paddle.Tensor.expand(Tensor([2, 8555712, 1, 251],"bool"), list[2,1,1,251,], )
paddle.Tensor.expand(Tensor([2, 8589935, 1, 250],"bool"), list[2,1,1,250,], )
paddle.Tensor.expand(Tensor([2, 858994, 50, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([2, 8624433, 1, 249],"bool"), list[2,1,1,249,], )
paddle.Tensor.expand(Tensor([2, 8659209, 1, 248],"bool"), list[2,1,1,248,], )
paddle.Tensor.expand(Tensor([2, 8694266, 1, 247],"bool"), list[2,1,1,247,], )
paddle.Tensor.expand(Tensor([2, 8729609, 1, 246],"bool"), list[2,1,1,246,], )
paddle.Tensor.expand(Tensor([2, 8765240, 1, 245],"bool"), list[2,1,1,245,], )
paddle.Tensor.expand(Tensor([2, 8801163, 1, 244],"bool"), list[2,1,1,244,], )
paddle.Tensor.expand(Tensor([2, 8837382, 1, 243],"bool"), list[2,1,1,243,], )
paddle.Tensor.expand(Tensor([2, 8873900, 1, 242],"bool"), list[2,1,1,242,], )
paddle.Tensor.expand(Tensor([2, 8910721, 1, 241],"bool"), list[2,1,1,241,], )
paddle.Tensor.expand(Tensor([2, 8947849, 1, 240],"bool"), list[2,1,1,240,], )
paddle.Tensor.expand(Tensor([2, 8947849, 1, 240],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([2, 8985288, 1, 239],"bool"), list[2,1,1,239,], )
paddle.Tensor.expand(Tensor([2, 8985288, 1, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([2, 9023041, 1, 238],"bool"), list[2,1,1,238,], )
paddle.Tensor.expand(Tensor([2, 9023041, 1, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([2, 9061113, 1, 237],"bool"), list[2,1,1,237,], )
paddle.Tensor.expand(Tensor([2, 9061113, 1, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([2, 9099507, 1, 236],"bool"), list[2,1,1,236,], )
paddle.Tensor.expand(Tensor([2, 9138229, 1, 235],"bool"), list[2,1,1,235,], )
paddle.Tensor.expand(Tensor([2, 9138229, 1, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([2, 9177281, 1, 234],"bool"), list[2,1,1,234,], )
paddle.Tensor.expand(Tensor([2, 9216669, 1, 233],"bool"), list[2,1,1,233,], )
paddle.Tensor.expand(Tensor([2, 9256396, 1, 232],"bool"), list[2,1,1,232,], )
paddle.Tensor.expand(Tensor([2, 9296467, 1, 231],"bool"), list[2,1,1,231,], )
paddle.Tensor.expand(Tensor([2, 93368855, 1, 23],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([2, 93368855, 1, 23],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([2, 9336886, 1, 230],"bool"), list[2,1,1,230,], )
paddle.Tensor.expand(Tensor([2, 9377658, 1, 229],"bool"), list[2,1,1,229,], )
paddle.Tensor.expand(Tensor([2, 9418788, 1, 228],"bool"), list[2,1,1,228,], )
paddle.Tensor.expand(Tensor([2, 9460281, 1, 227],"bool"), list[2,1,1,227,], )
paddle.Tensor.expand(Tensor([2, 9502141, 1, 226],"bool"), list[2,1,1,226,], )
paddle.Tensor.expand(Tensor([2, 9544372, 1, 225],"bool"), list[2,1,1,225,], )
paddle.Tensor.expand(Tensor([2, 9586981, 1, 224],"bool"), list[2,1,1,224,], )
paddle.Tensor.expand(Tensor([2, 9629972, 1, 223],"bool"), list[2,1,1,223,], )
paddle.Tensor.expand(Tensor([2, 9673350, 1, 222],"bool"), list[2,1,1,222,], )
paddle.Tensor.expand(Tensor([2, 9717121, 1, 221],"bool"), list[2,1,1,221,], )
paddle.Tensor.expand(Tensor([2, 972152, 47, 47],"bool"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([2, 9761290, 1, 220],"bool"), list[2,1,1,220,], )
paddle.Tensor.expand(Tensor([2, 9805862, 1, 219],"bool"), list[2,1,1,219,], )
paddle.Tensor.expand(Tensor([2, 9805862, 1, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([2, 9850843, 1, 218],"bool"), list[2,1,1,218,], )
paddle.Tensor.expand(Tensor([2, 9896239, 1, 217],"bool"), list[2,1,1,217,], )
paddle.Tensor.expand(Tensor([2, 9942054, 1, 216],"bool"), list[2,1,1,216,], )
paddle.Tensor.expand(Tensor([2, 9988297, 1, 215],"bool"), list[2,1,1,215,], )
paddle.Tensor.expand(Tensor([20, 214748365, 1],"bool"), list[20,60,20,], )
paddle.Tensor.expand(Tensor([20, 60, 3579140],"bool"), list[20,60,20,], )
paddle.Tensor.expand(Tensor([20069941, 1, 1, 214],"bool"), list[2,1,1,214,], )
paddle.Tensor.expand(Tensor([20164166, 1, 1, 213],"bool"), list[2,1,1,213,], )
paddle.Tensor.expand(Tensor([20259280, 1, 1, 212],"bool"), list[2,1,1,212,], )
paddle.Tensor.expand(Tensor([20355296, 1, 1, 211],"bool"), list[2,1,1,211,], )
paddle.Tensor.expand(Tensor([204522253, 1, 1, 21],"bool"), list[1,1,1,21,], )
paddle.Tensor.expand(Tensor([204522253, 1, 1, 21],"bool"), list[2,1,1,21,], )
paddle.Tensor.expand(Tensor([204522253, 1, 1, 21],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([204522253, 1, 1, 21],"bool"), list[2,8,1,21,], )
paddle.Tensor.expand(Tensor([20452226, 1, 1, 210],"bool"), list[2,1,1,210,], )
paddle.Tensor.expand(Tensor([20452226, 1, 1, 210],"bool"), list[2,1,82,210,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 128, 128],"float32"), Tensor([3728271, 128, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([20550083, 1, 1, 209],"bool"), list[2,1,1,209,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 128, 16384],"float32"), Tensor([2048, 128, 3, 16384],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([20648882, 1, 1, 104],"int64"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([20648882, 1, 1, 208],"bool"), list[2,1,1,208,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 128, 16384],"float32"), Tensor([2048, 128, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([20648882, 1, 1, 208],"bool"), list[2,1,80,208,], )
paddle.Tensor.expand(Tensor([20748635, 1, 1, 207],"bool"), list[2,1,1,207,], )
paddle.Tensor.expand(Tensor([20748635, 1, 1, 207],"bool"), list[2,1,79,207,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 131072, 16],"float32"), Tensor([2048, 512, 131072, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([20849356, 1, 1, 103],"int64"), list[2,1,1,103,], )
paddle.Tensor.expand(Tensor([20849356, 1, 1, 206],"bool"), list[2,1,1,206,], )
paddle.Tensor.expand(Tensor([20951060, 1, 1, 205],"bool"), list[2,1,1,205,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 131072],"float32"), Tensor([2048, 512, 3, 131072],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2097152, 1, 1, 2048],"float32"), list[1,-1,-1,-1,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 16],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16384, 128],"float32"), Tensor([2048, 128, 16384, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16384, 128],"float32"), Tensor([2048, 128, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 32, 32],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 32, 32],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 32, 65536],"float32"), Tensor([2048, 512, 3, 65536],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 32768, 64],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 32768, 64],"float32"), Tensor([2048, 256, 32768, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2097152, 2048, 1, 1],"float16"), list[1,2048,1,64,], )
paddle.Tensor.expand(Tensor([21053762, 1, 1, 102],"int64"), list[2,1,1,102,], )
paddle.Tensor.expand(Tensor([21053762, 1, 1, 204],"bool"), list[2,1,1,204,], )
paddle.Tensor.expand(Tensor([21157475, 1, 1, 203],"bool"), list[2,1,1,203,], )
paddle.Tensor.expand(Tensor([2125, 2021162],"float32"), list[16,2125,1,], )
paddle.Tensor.expand(Tensor([2125, 2021162],"float32"), list[16,2125,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 4, 4],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2125, 2021162],"float32"), list[64,2125,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 4, 524288],"float32"), Tensor([2048, 512, 3, 524288],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2125, 2021162],"float32"), list[64,2125,2,], )
paddle.Tensor.expand(Tensor([21262215, 1, 1, 101],"int64"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([21262215, 1, 1, 202],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([2147483648, 1, 1, 2],"bool"), list[1,1,1,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 524288, 4],"float32"), Tensor([2048, 512, 524288, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483648, 1, 1, 2],"bool"), list[1,8,1,2,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 64, 32768],"float32"), Tensor([2048, 256, 3, 32768],"float32"), padding=0, stride=2, groups=4, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.Tensor.expand(Tensor([2147483648, 1, 1, 2],"float32"), list[1,1,1,2,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 64, 32768],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483648, 1, 2],"float32"), tuple(1,1,2,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 64, 64],"float32"), Tensor([1864136, 256, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483648, 1, 2],"float32"), tuple(2,1,2,), )
paddle.Tensor.any(Tensor([389, 300, 192, 192],"bool"), axis=list[2,3,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 64, 64],"float32"), Tensor([2048, 233017, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,10285,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,3598,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,4165,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,4789,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,5440,2,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,6150,2,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,6885,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,7681,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,8500,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 65536, 32],"float32"), Tensor([2048, 512, 65536, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[1,9382,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 21913099, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[16,2125,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[16,3060,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,10285,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,3598,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,4165,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,4789,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,5440,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,6150,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,6885,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,7681,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,8500,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[2,9382,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[4,2577,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[4,3060,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[4,3598,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[4,4165,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[4,4789,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[64,1360,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[64,1726,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[64,2125,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[64,2577,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[64,3060,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[8,10285,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[8,6885,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[8,7681,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[8,8500,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), list[8,9382,2,], )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), tuple(1,2,), )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), tuple(2,2,), )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), tuple(2,2,2,2,), )
paddle.Tensor.expand(Tensor([2147483648, 2],"float32"), tuple(30000,2,2,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.Tensor.expand(Tensor([2147483649, 1],"int64"), list[13,3,], )
paddle.Tensor.expand(Tensor([2147483649],"float64"), tuple(2,3,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), list[13,49,], )
paddle.Tensor.expand(Tensor([2147483649],"int64"), list[7,7,], )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,1,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,10,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,100,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,101,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 128, 128],"float32"), Tensor([3728271, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,102,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 128, 131072],"float32"), Tensor([256, 128, 3, 131072],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,1024,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 128, 131072],"float32"), Tensor([256, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,103,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 131072, 128],"float32"), Tensor([256, 128, 131072, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,11,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 131072, 128],"float32"), Tensor([256, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,12,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,13,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,14,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,15,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,16,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,17,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,18,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,19,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,2,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,20,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,21,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,22,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,23,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,24,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,25,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,26,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,27,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,28,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,29,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,3,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,30,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,31,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,32,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,33,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,34,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,35,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,36,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,37,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,38,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,39,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,4,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,40,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,4096,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,41,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,42,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,43,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,44,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,45,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,46,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,47,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,48,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,49,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,5,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,50,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,51,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,52,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,53,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,54,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,55,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,56,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,57,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 14, 14],"float32"), Tensor([256, 4194304, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,58,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 14, 14],"float32"), Tensor([4194304, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,59,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 262144, 64],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,6,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,60,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 262144],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,61,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([256, 128, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,62,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,63,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,64,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,65,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,66,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,67,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,68,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,69,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,7,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,70,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,71,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,72,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,73,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,74,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,75,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,76,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,77,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,78,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,79,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,8,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,80,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,81,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,82,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,83,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,84,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,85,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,86,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,87,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,88,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,89,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,9,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,90,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,91,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,92,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,93,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,94,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,95,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,96,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,97,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,98,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(1,99,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(12,24,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(13,7,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([3728271, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,10,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,100,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,101,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([1024, 262144, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,102,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([128, 262144, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,103,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([128, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,104,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,105,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([2048, 128, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,106,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,107,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([2048, 262144, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,108,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([256, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,109,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([256, 262144, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([1024, 268435456, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,110,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,111,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([2048, 268435456, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,112,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,113,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,114,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,115,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([4096, 268435456, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,116,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,117,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([512, 268435456, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,118,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,119,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 268435456, 4, 4],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,120,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,121,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,122,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,123,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,124,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16, 16],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,125,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16, 65536],"float32"), Tensor([4096, 512, 3, 65536],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,126,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16384, 64],"float32"), Tensor([4096, 256, 16384, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,127,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 16384, 64],"float32"), Tensor([4096, 256, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,128,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,129,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 262144, 4],"float32"), Tensor([4096, 512, 262144, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,130,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,131,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 32, 32768],"float32"), Tensor([4096, 512, 3, 32768],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.any(Tensor([463, 300, 176, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,132,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 32, 32],"float32"), Tensor([4096, 116509, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,133,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,134,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,135,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,136,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 32, 32],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,137,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,138,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 32768, 32],"float32"), Tensor([4096, 512, 32768, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,139,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 4, 262144],"float32"), Tensor([4096, 512, 3, 262144],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,140,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,141,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,142,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,143,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,144,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,145,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 4, 4],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 64, 16384],"float32"), Tensor([4096, 256, 3, 16384],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,146,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 64, 16384],"float32"), Tensor([4096, 256, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,147,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,148,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 64, 64],"float32"), Tensor([1864136, 256, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,149,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 64, 64],"float32"), Tensor([4096, 116509, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,150,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,151,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,152,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,153,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,154,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,155,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,156,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,157,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,158,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,159,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,3,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,4,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 65536, 16],"float32"), Tensor([4096, 512, 65536, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,5,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,6,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4194304, 32, 32],"float32"), Tensor([2048, 4194304, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,7,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4194304, 32, 32],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,74,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4194304, 32, 32],"float32"), Tensor([4096, 4194304, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,75,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4194304, 32, 32],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,76,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4194304, 32, 32],"float32"), Tensor([512, 4194304, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,77,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4194304, 32, 32],"float32"), Tensor([512, 512, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,78,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 131072, 64],"float32"), Tensor([512, 256, 131072, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,79,), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 131072, 64],"float32"), Tensor([512, 256, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,80,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,81,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,82,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,83,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,84,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,85,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,86,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,87,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,88,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,89,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,90,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,91,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,92,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,93,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,94,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,95,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,96,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,97,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,98,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(2,99,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,10,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,11,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,12,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,13,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,14,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,148,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,15,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,164,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,172,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,198,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 1, 2147483648],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,3,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 1, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,4,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,5,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,6,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,7,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,8,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(4,9,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(5,10,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(6,3,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(6,4,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(6,5,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(6,6,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(6,7,), )
paddle.Tensor.expand(Tensor([2147483649],"int64"), tuple(8,512,), )
paddle.Tensor.expand(Tensor([214748365, 1, 1, 20],"bool"), list[1,1,1,20,], )
paddle.Tensor.expand(Tensor([214748365, 1, 1, 20],"bool"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([214748365, 1, 1, 20],"bool"), list[2,1,20,20,], )
paddle.Tensor.expand(Tensor([214748365, 1, 1, 20],"float32"), list[1,1,20,20,], )
paddle.Tensor.expand(Tensor([214748365, 10],"int64"), tuple(2,10,), )
paddle.Tensor.expand(Tensor([214748365, 5, 2],"float64"), tuple(2,3,2,5,2,), )
paddle.Tensor.expand(Tensor([214748365, 5, 2],"float64"), tuple(2,5,2,), )
paddle.Tensor.expand(Tensor([21474837, 1, 1, 100],"int64"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([215514, 1, 91, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([216034, 1, 141, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([21691755, 1, 1, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([21691755, 1, 1, 99],"int64"), list[2,1,1,99,], )
paddle.Tensor.expand(Tensor([21913099, 1, 1, 98],"int64"), list[2,1,1,98,], )
paddle.Tensor.expand(Tensor([21913099, 4, 7, 7],"float32"), shape=tuple(13,4,7,7,), )
paddle.Tensor.expand(Tensor([21913099, 4, 7, 7],"float32"), shape=tuple(52,4,7,7,), )
paddle.Tensor.expand(Tensor([22139007, 1, 1, 97],"int64"), list[2,1,1,97,], )
paddle.Tensor.expand(Tensor([22369622, 1, 1, 96],"int64"), list[2,1,1,96,], )
paddle.Tensor.expand(Tensor([22369622, 1, 192],"float16"), tuple(128,-1,-1,), )
paddle.Tensor.expand(Tensor([22369622, 1, 192],"float32"), shape=list[128,-1,-1,], )
paddle.Tensor.expand(Tensor([22369622, 1, 192],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([22369622, 1, 192],"float32"), shape=list[2,256,-1,], )
paddle.Tensor.expand(Tensor([22369622, 1, 192],"float32"), shape=list[80,-1,-1,], )
paddle.Tensor.expand(Tensor([22369622, 1, 192],"float32"), tuple(128,-1,-1,), )
paddle.Tensor.expand(Tensor([226050911, 1, 1, 19],"bool"), list[1,1,1,19,], )
paddle.Tensor.expand(Tensor([22605092, 1, 1, 95],"int64"), list[2,1,1,95,], )
paddle.Tensor.expand(Tensor([22698, 1, 435, 435],"float32"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([22845571, 1, 1, 94],"int64"), list[2,1,1,94,], )
paddle.Tensor.expand(Tensor([23091223, 1, 1, 93],"int64"), list[2,1,1,93,], )
paddle.Tensor.expand(Tensor([23342214, 1, 1, 92],"int64"), list[2,1,1,92,], )
paddle.Tensor.expand(Tensor([23598722, 1, 1, 91],"int64"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([238609295, 1, 1, 18],"bool"), list[1,1,1,18,], )
paddle.Tensor.expand(Tensor([23860930, 1, 1, 90],"int64"), list[2,1,1,90,], )
paddle.Tensor.expand(Tensor([24, 1, 178956971],"float32"), shape=tuple(24,24,32,), )
paddle.Tensor.expand(Tensor([24, 5592406, 32],"float32"), shape=tuple(24,24,32,), )
paddle.Tensor.expand(Tensor([24129030, 1, 1, 89],"int64"), list[2,1,1,89,], )
paddle.Tensor.expand(Tensor([24403224, 1, 1, 88],"int64"), list[2,1,1,88,], )
paddle.Tensor.expand(Tensor([24683721, 1, 1, 87],"int64"), list[2,1,1,87,], )
paddle.Tensor.expand(Tensor([249418, 1, 82, 210],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([24970741, 1, 1, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([24970741, 1, 1, 86],"int64"), list[2,1,1,86,], )
paddle.Tensor.expand(Tensor([252645135, 1, 1, 17],"bool"), list[1,1,1,17,], )
paddle.Tensor.expand(Tensor([252645135, 1, 1, 17],"float32"), list[12,1,17,17,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 16, 16],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([25264514, 1, 1, 85],"int64"), list[2,1,1,85,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 16, 524288],"float32"), Tensor([512, 512, 3, 524288],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([25565282, 1, 1, 84],"int64"), list[2,1,1,84,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 2097152, 4],"float32"), Tensor([512, 512, 2097152, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([2577, 1666654],"float32"), list[4,2577,1,], )
paddle.Tensor.expand(Tensor([2577, 1666654],"float32"), list[4,2577,2,], )
paddle.Tensor.expand(Tensor([2577, 1666654],"float32"), list[64,2577,1,], )
paddle.Tensor.expand(Tensor([2577, 1666654],"float32"), list[64,2577,2,], )
paddle.Tensor.expand(Tensor([258112, 1, 80, 208],"bool"), list[2,1,80,208,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 262144, 32],"float32"), Tensor([512, 512, 262144, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([25873297, 1, 1, 83],"int64"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([26188825, 1, 1, 164],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([26188825, 1, 1, 82],"int64"), list[2,1,1,82,], )
paddle.Tensor.expand(Tensor([262641, 1, 79, 207],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([26512144, 1, 1, 81],"int64"), list[2,1,1,81,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 32, 262144],"float32"), Tensor([512, 512, 3, 262144],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([266289, 1, 127, 127],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([266570, 2, 1, 1007, 8],"float32"), list[13,2,2,1007,8,], )
paddle.Tensor.expand(Tensor([268435456, 1, 1, 16],"bool"), list[1,1,1,16,], )
paddle.Tensor.expand(Tensor([268435456, 1, 16],"float32"), shape=list[13,4,8,16,], )
paddle.Tensor.expand(Tensor([268435456, 1, 4, 4],"bool"), list[1,1,4,4,], )
paddle.Tensor.expand(Tensor([268435456, 16],"float32"), list[256,-1,], )
paddle.Tensor.expand(Tensor([268435456, 16],"float32"), list[64,-1,], )
paddle.Tensor.expand(Tensor([268435457, 8],"int64"), tuple(13,8,), )
paddle.Tensor.expand(Tensor([26843546, 1, 1, 80],"int64"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([26843546, 10, 8, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483648],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.Tensor.expand(Tensor([26843546, 16, 1, 10],"float32"), list[2,-1,-1,-1,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 33554432, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([26843546, 2, 1, 10, 8],"float32"), list[13,2,2,10,8,], )
paddle.Tensor.expand(Tensor([27012373, 1, 1, 159],"bool"), list[2,1,1,159,], )
paddle.Tensor.expand(Tensor([27183338, 1, 1, 158],"bool"), list[2,1,1,158,], )
paddle.Tensor.expand(Tensor([27183338, 1, 1, 79],"int64"), list[2,1,1,79,], )
paddle.Tensor.expand(Tensor([27356480, 1, 1, 157],"bool"), list[2,1,1,157,], )
paddle.Tensor.expand(Tensor([27389, 1, 396, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([27531842, 1, 1, 156],"bool"), list[2,1,1,156,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.Tensor.expand(Tensor([27531842, 1, 1, 78],"int64"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([27709467, 1, 1, 155],"bool"), list[2,1,1,155,], )
paddle.Tensor.expand(Tensor([27889399, 1, 1, 154],"bool"), list[2,1,1,154,], )
paddle.Tensor.expand(Tensor([27889399, 1, 1, 77],"int64"), list[2,1,1,77,], )
paddle.Tensor.expand(Tensor([28071682, 1, 1, 153],"bool"), list[2,1,1,153,], )
paddle.Tensor.expand(Tensor([2823779, 1, 39, 39],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([28256364, 1, 1, 152],"bool"), list[2,1,1,152,], )
paddle.Tensor.expand(Tensor([28256364, 1, 1, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([28256364, 1, 1, 152],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([28256364, 1, 1, 76],"int64"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([28256364, 1, 152],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([28388, 197, 768],"float16"), list[16,-1,-1,], )
paddle.Tensor.expand(Tensor([28388, 197, 768],"float32"), list[16,-1,-1,], )
paddle.Tensor.expand(Tensor([28443493, 1, 1, 151],"bool"), list[2,1,1,151,], )
paddle.Tensor.expand(Tensor([286331153, 1, 1, 15],"bool"), list[1,1,1,15,], )
paddle.Tensor.expand(Tensor([28633116, 1, 1, 150],"bool"), list[2,1,1,150,], )
paddle.Tensor.expand(Tensor([28633116, 1, 1, 75],"int64"), list[2,1,1,75,], )
paddle.Tensor.expand(Tensor([287328, 1, 74, 202],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([28825284, 1, 1, 149],"bool"), list[2,1,1,149,], )
paddle.Tensor.expand(Tensor([29020050, 1, 1, 148],"bool"), list[2,1,1,148,], )
paddle.Tensor.expand(Tensor([29020050, 1, 1, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([29020050, 1, 1, 74],"int64"), list[2,1,1,74,], )
paddle.Tensor.expand(Tensor([29217465, 1, 1, 147],"bool"), list[2,1,1,147,], )
paddle.Tensor.expand(Tensor([29217465, 1, 1, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([29217465, 1, 1, 147],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([29217465, 1, 147],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([29417585, 1, 1, 146],"bool"), list[2,1,1,146,], )
paddle.Tensor.expand(Tensor([29417585, 1, 1, 73],"int64"), list[2,1,1,73,], )
paddle.Tensor.expand(Tensor([29620465, 1, 1, 145],"bool"), list[2,1,1,145,], )
paddle.Tensor.expand(Tensor([2974355, 1, 38, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([29826162, 1, 1, 144],"bool"), list[2,1,1,144,], )
paddle.Tensor.expand(Tensor([29826162, 1, 1, 72],"int64"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([3, 715827883],"float64"), list[2,3,3,], )
paddle.Tensor.expand(Tensor([30, 143165577, 1],"bool"), list[30,60,30,], )
paddle.Tensor.expand(Tensor([30, 60, 2386093],"bool"), list[30,60,30,], )
paddle.Tensor.expand(Tensor([30034737, 1, 1, 143],"bool"), list[2,1,1,143,], )
paddle.Tensor.expand(Tensor([30219, 1, 377, 377],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([30246249, 1, 1, 142],"bool"), list[2,1,1,142,], )
paddle.Tensor.expand(Tensor([30246249, 1, 1, 71],"int64"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([30460761, 1, 1, 141],"bool"), list[2,1,1,141,], )
paddle.Tensor.expand(Tensor([30460761, 1, 1, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([3050403, 1, 1408],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([3060, 1403585],"float32"), list[16,3060,1,], )
paddle.Tensor.expand(Tensor([3060, 1403585],"float32"), list[16,3060,2,], )
paddle.Tensor.expand(Tensor([3060, 1403585],"float32"), list[4,3060,1,], )
paddle.Tensor.expand(Tensor([3060, 1403585],"float32"), list[4,3060,2,], )
paddle.Tensor.expand(Tensor([3060, 1403585],"float32"), list[64,3060,1,], )
paddle.Tensor.expand(Tensor([3060, 1403585],"float32"), list[64,3060,2,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 14],"bool"), list[1,1,1,14,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 14],"bool"), list[13,1,1024,14,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 14],"bool"), list[13,1,14,14,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 14],"bool"), list[13,1,7,14,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 7],"int64"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 7],"int64"), list[4,1,1,7,], )
paddle.Tensor.any(Tensor([775, 300, 136, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.expand(Tensor([306783379, 1, 1, 7],"int64"), list[6,1,1,7,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 32, 32],"float32"), Tensor([512, 932068, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 32, 32],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 4, 2097152],"float32"), Tensor([512, 512, 3, 2097152],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([306783379, 7],"int64"), list[12,7,], )
paddle.Tensor.expand(Tensor([306783379, 7],"int64"), list[13,7,], )
paddle.Tensor.expand(Tensor([306783379, 7],"int64"), list[52,7,], )
paddle.Tensor.expand(Tensor([30678338, 1, 1, 140],"bool"), list[2,1,1,140,], )
paddle.Tensor.expand(Tensor([30678338, 1, 1, 70],"int64"), list[2,1,1,70,], )
paddle.Tensor.expand(Tensor([30899046, 1, 1, 139],"bool"), list[2,1,1,139,], )
paddle.Tensor.expand(Tensor([31122952, 1, 1, 138],"bool"), list[2,1,1,138,], )
paddle.Tensor.expand(Tensor([31122952, 1, 1, 69],"int64"), list[2,1,1,69,], )
paddle.Tensor.expand(Tensor([31350127, 1, 1, 137],"bool"), list[2,1,1,137,], )
paddle.Tensor.expand(Tensor([31580642, 1, 1, 136],"bool"), list[2,1,1,136,], )
paddle.Tensor.expand(Tensor([31580642, 1, 1, 68],"int64"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([31814573, 1, 1, 135],"bool"), list[2,1,1,135,], )
paddle.Tensor.expand(Tensor([32051995, 1, 1, 134],"bool"), list[2,1,1,134,], )
paddle.Tensor.expand(Tensor([32051995, 1, 1, 67],"int64"), list[2,1,1,67,], )
paddle.Tensor.expand(Tensor([32292988, 1, 1, 133],"bool"), list[2,1,1,133,], )
paddle.Tensor.expand(Tensor([324762, 1, 115, 115],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([32537632, 1, 1, 132],"bool"), list[2,1,1,132,], )
paddle.Tensor.expand(Tensor([32537632, 1, 1, 66],"int64"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([32786010, 1, 1, 131],"bool"), list[2,1,1,131,], )
paddle.Tensor.expand(Tensor([328086, 13, 1007, 1, 1],"float32"), tuple(2,13,1007,2,16,), )
paddle.Tensor.expand(Tensor([328086, 13, 1007, 1],"float32"), tuple(2,13,1007,16,), )
paddle.Tensor.expand(Tensor([33038210, 1, 1, 130],"bool"), list[2,1,1,130,], )
paddle.Tensor.expand(Tensor([33038210, 1, 1, 65],"int64"), list[2,1,1,65,], )
paddle.Tensor.expand(Tensor([330382100, 1, 1, 13],"bool"), list[1,1,1,13,], )
paddle.Tensor.expand(Tensor([330484, 1, 114, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([3314018, 1, 36, 36],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([33294321, 1, 1, 129],"bool"), list[2,1,1,129,], )
paddle.Tensor.expand(Tensor([33554432, 1, 1, 128],"bool"), list[2,1,1,128,], )
paddle.Tensor.expand(Tensor([33554432, 128],"float32"), list[16,16,128,128,], )
paddle.Tensor.expand(Tensor([33554432, 8, 16],"float32"), shape=list[13,4,8,16,], )
paddle.Tensor.expand(Tensor([33554432, 8, 8, 2],"float32"), shape=list[2,8,8,2,], )
paddle.Tensor.expand(Tensor([33554433, 1, 1, 64],"int64"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([33554433, 1, 8, 1, 8],"int64"), shape=list[13,2,8,4,8,], )
paddle.Tensor.expand(Tensor([33818641, 1, 1, 127],"bool"), list[2,1,1,127,], )
paddle.Tensor.expand(Tensor([33818641, 1, 1, 127],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([33818641, 1, 1, 127],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([33818641, 1, 127],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([34087043, 1, 1, 126],"bool"), list[2,1,1,126,], )
paddle.Tensor.expand(Tensor([34087043, 1, 1, 63],"int64"), list[2,1,1,63,], )
paddle.Tensor.expand(Tensor([342393, 1, 112, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([34359739, 1, 1, 125],"bool"), list[2,1,1,125,], )
paddle.Tensor.expand(Tensor([34636834, 1, 1, 124],"bool"), list[2,1,1,124,], )
paddle.Tensor.expand(Tensor([34636834, 1, 1, 62],"int64"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([348590, 1, 111, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([34918434, 1, 1, 123],"bool"), list[2,1,1,123,], )
paddle.Tensor.expand(Tensor([35204650, 1, 1, 122],"bool"), list[2,1,1,122,], )
paddle.Tensor.expand(Tensor([35204650, 1, 1, 61],"int64"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([35495598, 1, 1, 121],"bool"), list[2,1,1,121,], )
paddle.Tensor.expand(Tensor([35495598, 11, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([354956, 1, 110, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 12],"bool"), list[1,1,1,12,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 12],"bool"), list[2,8,1,12,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 12],"bool"), list[4,8,1,12,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 12],"bool"), list[6,8,1,12,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 6],"int64"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 6],"int64"), list[2,1,6,6,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 6],"int64"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([357913942, 1, 1, 6],"int64"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([357913942, 6],"int64"), tuple(2,6,), )
paddle.Tensor.expand(Tensor([35791395, 1, 1, 120],"bool"), list[2,1,1,120,], )
paddle.Tensor.expand(Tensor([35791395, 1, 1, 60],"int64"), list[2,1,1,60,], )
paddle.Tensor.expand(Tensor([35792, 400, 300],"float32"), list[1,400,300,], )
paddle.Tensor.expand(Tensor([35877, 1, 346, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([35877, 1, 346, 346],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([3598, 1193710],"float32"), list[1,3598,1,], )
paddle.Tensor.expand(Tensor([3598, 1193710],"float32"), list[1,3598,2,], )
paddle.Tensor.expand(Tensor([3598, 1193710],"float32"), list[2,3598,1,], )
paddle.Tensor.expand(Tensor([3598, 1193710],"float32"), list[2,3598,2,], )
paddle.Tensor.expand(Tensor([3598, 1193710],"float32"), list[4,3598,1,], )
paddle.Tensor.expand(Tensor([3598, 1193710],"float32"), list[4,3598,2,], )
paddle.Tensor.expand(Tensor([36092163, 1, 1, 119],"bool"), list[2,1,1,119,], )
paddle.Tensor.expand(Tensor([361499, 1, 109, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([36398028, 1, 1, 118],"bool"), list[2,1,1,118,], )
paddle.Tensor.expand(Tensor([36398028, 1, 1, 59],"int64"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([36709123, 1, 1, 117],"bool"), list[2,1,1,117,], )
paddle.Tensor.expand(Tensor([37025581, 1, 1, 116],"bool"), list[2,1,1,116,], )
paddle.Tensor.expand(Tensor([37025581, 1, 1, 58],"int64"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([37025581, 1, 1, 58],"int64"), list[2,1,1,58,], )
paddle.Tensor.expand(Tensor([37025581, 2, 1, 58],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([37347542, 1, 1, 115],"bool"), list[2,1,1,115,], )
paddle.Tensor.expand(Tensor([37347542, 1, 1, 115],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([37347542, 1, 1, 115],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([37347542, 1, 115],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([375140, 1, 107, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([37675152, 1, 1, 114],"bool"), list[2,1,1,114,], )
paddle.Tensor.expand(Tensor([37675152, 1, 1, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([37675152, 1, 1, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([37675152, 1, 1, 57],"int64"), list[2,1,1,57,], )
paddle.Tensor.expand(Tensor([37675152, 1, 1, 57],"int64"), list[2,1,57,57,], )
paddle.Tensor.expand(Tensor([37675152, 1, 114],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([38008561, 1, 1, 113],"bool"), list[2,1,1,113,], )
paddle.Tensor.expand(Tensor([38347923, 1, 1, 112],"bool"), list[2,1,1,112,], )
paddle.Tensor.expand(Tensor([38347923, 1, 1, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([38347923, 1, 1, 56],"int64"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([38347923, 2, 1, 7, 8],"float32"), list[13,2,2,7,8,], )
paddle.Tensor.expand(Tensor([38693400, 1, 1, 111],"bool"), list[2,1,1,111,], )
paddle.Tensor.expand(Tensor([38693400, 1, 1, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([390451573, 1, 1, 11],"bool"), list[1,1,1,11,], )
paddle.Tensor.expand(Tensor([390451573, 1, 1, 11],"bool"), list[2,8,1,11,], )
paddle.Tensor.expand(Tensor([390451573, 1, 1, 11],"bool"), list[4,8,1,11,], )
paddle.Tensor.expand(Tensor([390451573, 1, 1, 11],"bool"), list[6,8,1,11,], )
paddle.Tensor.expand(Tensor([390451573, 1, 1, 11],"float32"), list[1,1,11,11,], )
paddle.Tensor.expand(Tensor([39045158, 1, 1, 110],"bool"), list[2,1,1,110,], )
paddle.Tensor.expand(Tensor([39045158, 1, 1, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([39045158, 1, 1, 55],"int64"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([39403370, 1, 1, 109],"bool"), list[2,1,1,109,], )
paddle.Tensor.expand(Tensor([39403370, 1, 1, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([39768216, 1, 1, 108],"bool"), list[2,1,1,108,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.Tensor.expand(Tensor([39768216, 1, 1, 54],"int64"), list[2,1,1,54,], )
paddle.Tensor.expand(Tensor([39768216, 1, 1, 54],"int64"), list[2,1,54,54,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,148,148,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 74051161],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,8,1,11,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"bool"), list[4,8,1,12,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"float32"), list[4,1,1,4,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"float32"), list[4,1,1,5,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 1073741824],"float32"), list[4,1,3,3,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,132,132,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,134,134,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 4, 4],"float32"), Tensor([932068, 512, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,145,145,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,156,156,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 524288, 16],"float32"), Tensor([512, 512, 524288, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,158,158,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 64, 131072],"float32"), Tensor([512, 256, 3, 131072],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,168,168,], )
paddle.linalg.svd(Tensor([2147483649, 1],"float64"), )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 64, 131072],"float32"), Tensor([512, 256, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,182,182,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 536870913],"int64"), list[4,1,5,5,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 64, 64],"float32"), Tensor([1864136, 256, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4, 1, 10, 107374183],"bool"), list[4,8,10,10,], )
paddle.Tensor.expand(Tensor([4, 1, 1073741824],"float32"), shape=list[13,4,8,16,], )
paddle.Tensor.expand(Tensor([4, 1, 107374183, 10],"bool"), list[4,8,10,10,], )
paddle.Tensor.expand(Tensor([4, 1, 107374183, 5],"int64"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([4, 1, 141, 7615191],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([4, 1, 153391690, 7],"bool"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([4, 1, 178956971, 6],"bool"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([4, 1, 214748365, 5],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([4, 1, 214748365, 5],"float32"), list[4,1,1,5,], )
paddle.Tensor.expand(Tensor([4, 1, 268435456, 4],"float32"), list[4,1,1,4,], )
paddle.Tensor.expand(Tensor([4, 1, 2711470, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([4, 1, 2848122, 377],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([4, 1, 2949841, 182],"int64"), list[4,1,182,182,], )
paddle.Tensor.expand(Tensor([4, 1, 3103301, 346],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([4, 1, 3195661, 168],"int64"), list[4,1,168,168,], )
paddle.Tensor.expand(Tensor([4, 1, 3397918, 158],"int64"), list[4,1,158,158,], )
paddle.Tensor.expand(Tensor([4, 1, 3441481, 156],"int64"), list[4,1,156,156,], )
paddle.Tensor.expand(Tensor([4, 1, 3532046, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([4, 1, 357913942, 3],"float32"), list[4,1,3,3,], )
paddle.Tensor.expand(Tensor([4, 1, 3627507, 148],"int64"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([4, 1, 3702559, 145],"int64"), list[4,1,145,145,], )
paddle.Tensor.expand(Tensor([4, 1, 4006500, 134],"int64"), list[4,1,134,134,], )
paddle.Tensor.expand(Tensor([4, 1, 4067204, 132],"int64"), list[4,1,132,132,], )
paddle.Tensor.expand(Tensor([4, 1, 5422939, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([4, 1, 6242686, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([4, 1, 6547207, 164],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([4, 1, 7064091, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([4, 1, 7255013, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([4, 1, 7304367, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([4, 1, 7615191, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([4, 1, 76695845, 7],"int64"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([4, 1, 8454661, 127],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([4, 1, 89478486, 12],"bool"), list[4,8,1,12,], )
paddle.Tensor.expand(Tensor([4, 1, 89478486, 6],"int64"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([4, 1, 9336886, 115],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([4, 1, 97612894, 11],"bool"), list[4,8,1,11,], )
paddle.Tensor.expand(Tensor([4, 1073741824, 1],"bool"), list[4,60,4,], )
paddle.Tensor.expand(Tensor([4, 107374183, 1, 5],"int64"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([4, 10737419, 10, 10],"bool"), list[4,8,10,10,], )
paddle.Tensor.expand(Tensor([4, 153391690, 1, 7],"bool"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([4, 178956971, 1, 6],"bool"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([4, 214748365, 1, 5],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([4, 214748365, 1, 5],"float32"), list[4,1,1,5,], )
paddle.Tensor.expand(Tensor([4, 268435456, 1, 4],"float32"), list[4,1,1,4,], )
paddle.Tensor.expand(Tensor([4, 2711470, 1, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([4, 2848122, 1, 377],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([4, 2949841, 1, 182],"int64"), list[4,1,182,182,], )
paddle.Tensor.expand(Tensor([4, 3103301, 1, 346],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([4, 3195661, 1, 168],"int64"), list[4,1,168,168,], )
paddle.Tensor.expand(Tensor([4, 3397918, 1, 158],"int64"), list[4,1,158,158,], )
paddle.Tensor.expand(Tensor([4, 3441481, 1, 156],"int64"), list[4,1,156,156,], )
paddle.Tensor.expand(Tensor([4, 3532046, 1, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([4, 357913942, 1, 3],"float32"), list[4,1,3,3,], )
paddle.Tensor.expand(Tensor([4, 3627507, 1, 148],"int64"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([4, 3702559, 1, 145],"int64"), list[4,1,145,145,], )
paddle.Tensor.expand(Tensor([4, 4006500, 1, 134],"int64"), list[4,1,134,134,], )
paddle.Tensor.expand(Tensor([4, 4067204, 1, 132],"int64"), list[4,1,132,132,], )
paddle.Tensor.expand(Tensor([4, 54009, 141, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([4, 5422939, 1, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([4, 60, 17895698],"bool"), list[4,60,4,], )
paddle.Tensor.expand(Tensor([4, 6242686, 1, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([4, 6547207, 1, 164],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([4, 67108864, 16],"float32"), shape=list[13,4,8,16,], )
paddle.Tensor.expand(Tensor([4, 7064091, 1, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([4, 7255013, 1, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([4, 7304367, 1, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([4, 7615191, 1, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([4, 76695845, 1, 7],"int64"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([4, 8454661, 1, 127],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([4, 89478486, 1, 12],"bool"), list[4,8,1,12,], )
paddle.Tensor.expand(Tensor([4, 89478486, 1, 6],"int64"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([4, 9336886, 1, 115],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([4, 97612894, 1, 11],"bool"), list[4,8,1,11,], )
paddle.Tensor.expand(Tensor([40139882, 1, 1, 107],"bool"), list[2,1,1,107,], )
paddle.Tensor.expand(Tensor([40139882, 1, 1, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([40518560, 1, 1, 106],"bool"), list[2,1,1,106,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.Tensor.expand(Tensor([40518560, 1, 1, 53],"int64"), list[2,1,1,53,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.Tensor.expand(Tensor([40518560, 1, 1, 53],"int64"), list[2,1,53,53,], )
paddle.Tensor.expand(Tensor([40904451, 1, 1, 105],"bool"), list[2,1,1,105,], )
paddle.Tensor.expand(Tensor([4096, 1, 1024, 1024],"float32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([41297763, 1, 1, 104],"bool"), list[2,1,1,104,], )
paddle.Tensor.expand(Tensor([41297763, 1, 1, 52],"int64"), list[2,1,1,52,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.Tensor.expand(Tensor([41297763, 1, 1, 52],"int64"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([4165, 1031205],"float32"), list[1,4165,1,], )
paddle.Tensor.expand(Tensor([4165, 1031205],"float32"), list[1,4165,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 512, 64, 64],"float32"), Tensor([512, 932068, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4165, 1031205],"float32"), list[2,4165,1,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 67108864, 8, 8],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4165, 1031205],"float32"), list[2,4165,2,], )
paddle.Tensor.expand(Tensor([4165, 1031205],"float32"), list[4,4165,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 67108864, 8, 8],"float32"), Tensor([1024, 67108864, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4165, 1031205],"float32"), list[4,4165,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([1, 671089, 80, 80],"float32"), Tensor([128, 128, 2, 2],"float32"), bias=Tensor([128],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([41698712, 1, 1, 103],"bool"), list[1,1,1,103,], )
paddle.Tensor.expand(Tensor([41698712, 1, 1, 103],"bool"), list[2,1,1,103,], )
paddle.nn.functional.conv2d_transpose(Tensor([10, 2191310, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4194304, 1, 1, 1024],"int32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([4194304, 1, 1024],"float32"), shape=list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([4194304, 1, 1024],"float32"), tuple(124,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([10, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4194304, 1, 1024],"float32"), tuple(128,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([10, 256, 14, 14],"float32"), Tensor([256, 256, 2, 32768],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4194304, 1, 1024],"float32"), tuple(16,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([10, 256, 14, 14],"float32"), Tensor([256, 256, 32768, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4194304, 1, 32, 32],"float32"), tuple(1,128,32,32,), )
paddle.Tensor.expand(Tensor([42107523, 1, 1, 102],"bool"), list[1,1,1,102,], )
paddle.Tensor.expand(Tensor([42107523, 1, 1, 102],"bool"), list[2,1,1,102,], )
paddle.nn.functional.conv2d_transpose(Tensor([10, 256, 14, 14],"float32"), Tensor([4194304, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([42107523, 1, 1, 51],"int64"), list[2,1,1,51,], )
paddle.nn.functional.conv2d_transpose(Tensor([10199, 256, 47, 35],"float32"), Tensor([10199, 128, 4, 4],"float32"), bias=None, padding=0, output_padding=0, stride=list[4,4,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([42107523, 1, 1, 51],"int64"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([4236, 1, 1007, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([42524429, 1, 1, 101],"bool"), list[1,1,1,101,], )
paddle.Tensor.expand(Tensor([42524429, 1, 1, 101],"bool"), list[2,1,1,101,], )
paddle.Tensor.expand(Tensor([4265112, 1, 1, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"bool"), list[1,1,1,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"bool"), list[1,8,1,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([1024, 256, 128, 128],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"float16"), list[2,1,1,64,], )
paddle.nn.functional.conv2d_transpose(Tensor([1024, 256, 128, 128],"float32"), Tensor([256, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([1024, 4096, 32, 32],"float32"), Tensor([1024, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"float32"), list[1,1,4,8,], )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"float32"), list[2,1,4,8,], )
paddle.nn.functional.conv2d_transpose(Tensor([1048576, 1024, 2, 2],"float32"), Tensor([1024, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"float32"), list[4,1,4,8,], )
paddle.nn.functional.conv2d_transpose(Tensor([1048576, 1024, 2, 2],"float32"), Tensor([1048576, 512, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1, 1, 1],"float32"), list[6,1,4,8,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float16"), list[-1,4,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,10285,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,3598,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,4165,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,4789,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,5440,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,6150,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,6885,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,7681,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,8500,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[1,9382,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[16,2125,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[16,3060,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,10285,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,3598,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,4165,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 206728, 14, 14],"float16"), Tensor([256, 256, 2, 2],"float16"), bias=Tensor([256],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,4789,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,5440,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 206728, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,6150,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 11306, 14],"float16"), Tensor([256, 256, 2, 2],"float16"), bias=Tensor([256],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,6885,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,7681,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 11306],"float16"), Tensor([256, 256, 2, 2],"float16"), bias=Tensor([256],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,8500,1,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[2,9382,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 14],"float16"), Tensor([256, 256, 2, 2],"float16"), bias=Tensor([4294967295],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[4,2577,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 14],"float16"), Tensor([256, 256, 2, 32768],"float16"), bias=Tensor([256],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[4,3060,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 14],"float16"), Tensor([256, 256, 32768, 2],"float16"), bias=Tensor([256],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[4,3598,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 14],"float16"), Tensor([4194304, 256, 2, 2],"float16"), bias=Tensor([256],"float16"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[4,4165,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[4,4789,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[64,1360,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[64,1726,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[64,2125,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([106, 256, 14, 14],"float32"), Tensor([4194304, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[64,2577,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[64,3060,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[8,10285,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[8,6885,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[8,7681,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[8,8500,1,], )
paddle.Tensor.expand(Tensor([4294967295, 1],"float32"), list[8,9382,1,], )
paddle.Tensor.expand(Tensor([4294967295],"float16"), list[2,2,], )
paddle.Tensor.expand(Tensor([4294967295],"float16"), list[3,3,], )
paddle.Tensor.expand(Tensor([4294967295],"float16"), list[4,4,], )
paddle.Tensor.expand(Tensor([4294967295],"float16"), list[7,7,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), list[2,2,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), list[3,3,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), list[4,1024,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), list[4,4,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), list[7,7,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(100,1,), )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(100,1,2,), )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(100,1,2,2,), )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(100,2,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(100,2,1,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(100,2,3,1,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(2,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(2,2,2,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(2,3,2,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(3,2,2,), )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 3, 3, 2],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.Tensor.expand(Tensor([4294967295],"float32"), tuple(30000,2,), )
paddle.Tensor.expand(Tensor([42949673, 1, 1, 100],"bool"), list[1,1,1,100,], )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 3, 3, 2],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.Tensor.expand(Tensor([42949673, 1, 1, 100],"bool"), list[2,1,1,100,], )
paddle.Tensor.expand(Tensor([42949673, 1, 1, 50],"int64"), list[2,1,1,50,], )
paddle.nn.functional.conv2d_transpose(Tensor([1253, 256, 124, 108],"float32"), Tensor([1253, 128, 2, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([42949673, 1, 1, 50],"int64"), list[2,1,50,50,], )
paddle.nn.functional.conv2d_transpose(Tensor([1253, 256, 124, 108],"float32"), Tensor([256, 128, 2, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[2,8,10,10,], )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[4,1,10,10,], )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[4,8,10,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([1253, 64, 248, 216],"float32"), Tensor([1253, 128, 1, 1],"float32"), bias=None, padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[6,1,10,10,], )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"bool"), list[6,8,10,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([1253, 64, 248, 216],"float32"), Tensor([64, 128, 1, 1],"float32"), bias=None, padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"float32"), list[13,1,10,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([128, 2048, 128, 128],"float32"), Tensor([128, 128, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([42949673, 1, 10, 10],"float32"), list[2,1,10,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([128, 2048, 128, 128],"float32"), Tensor([2048, 128, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.Tensor.expand(Tensor([42949673, 10, 10],"float32"), list[14,1,10,10,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"bool"), list[1,1,1,10,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"bool"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"bool"), list[13,1,3,10,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"bool"), list[2,1,10,10,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"float32"), list[14,1,10,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([12986, 128, 38, 68],"float32"), Tensor([12986, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=128, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"float32"), list[14,1,3,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([131072, 2048, 4, 4],"float32"), Tensor([131072, 512, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"int32"), list[13,1,10,10,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"int32"), list[13,1,3,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([16384, 1024, 16, 16],"float32"), Tensor([1024, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 10],"int32"), list[2,1,10,10,], )
paddle.nn.functional.conv2d_transpose(Tensor([16384, 1024, 16, 16],"float32"), Tensor([16384, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1024, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([16384, 1024, 16, 16],"float32"), Tensor([16384, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 5],"int64"), list[2,1,5,5,], )
paddle.nn.functional.conv2d_transpose(Tensor([16384, 256, 32, 32],"float32"), Tensor([16384, 1, 8, 8],"float32"), bias=None, padding=2, output_padding=0, stride=list[4,4,], dilation=list[1,1,], groups=256, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 5],"int64"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([429496730, 1, 1, 5],"int64"), list[6,1,5,5,], )
paddle.nn.functional.conv2d_transpose(Tensor([16384, 64, 64, 64],"float32"), Tensor([16384, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=64, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([429496730, 1, 10],"float32"), list[16,-1,-1,], )
paddle.Tensor.expand(Tensor([43383509, 1, 1, 99],"bool"), list[1,1,1,99,], )
paddle.Tensor.expand(Tensor([43383509, 1, 1, 99],"bool"), list[2,1,1,99,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 2, 2, 6],"float32"), Tensor([178956971, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([43826197, 1, 1, 49],"int64"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([43826197, 1, 1, 98],"bool"), list[1,1,1,98,], )
paddle.Tensor.expand(Tensor([43826197, 1, 1, 98],"bool"), list[2,1,1,98,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 2, 2, 6],"float32"), Tensor([178956971, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([43827, 280, 350],"float32"), list[1,280,350,], )
paddle.Tensor.expand(Tensor([44278014, 1, 1, 97],"bool"), list[1,1,1,97,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([44278014, 1, 1, 97],"bool"), list[2,1,1,97,], )
paddle.Tensor.expand(Tensor([44739243, 1, 1, 48],"int64"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([44739243, 1, 1, 96],"bool"), list[1,1,1,96,], )
paddle.Tensor.expand(Tensor([44739243, 1, 1, 96],"bool"), list[2,1,1,96,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([45210183, 1, 1, 95],"bool"), list[1,1,1,95,], )
paddle.Tensor.expand(Tensor([45210183, 1, 1, 95],"bool"), list[2,1,1,95,], )
paddle.Tensor.expand(Tensor([45691142, 1, 1, 47],"int64"), list[2,1,1,47,], )
paddle.Tensor.expand(Tensor([45691142, 1, 1, 47],"int64"), list[2,1,47,47,], )
paddle.Tensor.expand(Tensor([45691142, 1, 1, 94],"bool"), list[1,1,1,94,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 3, 2, 2],"float64"), Tensor([3, 1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([45691142, 1, 1, 94],"bool"), list[2,1,1,94,], )
paddle.Tensor.expand(Tensor([46182445, 1, 1, 93],"bool"), list[1,1,1,93,], )
paddle.Tensor.expand(Tensor([46182445, 1, 1, 93],"bool"), list[2,1,1,93,], )
paddle.Tensor.expand(Tensor([46475, 1, 304, 304],"bool"), list[2,1,304,304,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 3, 2, 2],"float64"), Tensor([3, 1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([46475, 1, 304, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([46684428, 1, 1, 46],"int64"), list[2,1,1,46,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 3, 2, 2],"float64"), Tensor([3, 1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([46684428, 1, 1, 92],"bool"), list[1,1,1,92,], )
paddle.Tensor.expand(Tensor([46684428, 1, 1, 92],"bool"), list[2,1,1,92,], )
paddle.Tensor.expand(Tensor([47092, 1, 302, 302],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([47197443, 1, 1, 91],"bool"), list[1,1,1,91,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 3, 2, 2],"float64"), Tensor([3, 1, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([47197443, 1, 1, 91],"bool"), list[2,1,1,91,], )
paddle.Tensor.expand(Tensor([47197443, 1, 1, 91],"bool"), list[2,1,91,91,], )
paddle.Tensor.expand(Tensor([47197443, 13, 1, 7],"float32"), tuple(2,13,7,7,), )
paddle.Tensor.expand(Tensor([47197443, 13, 7, 1, 1],"float32"), tuple(2,13,7,2,16,), )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 6, 2, 2],"float32"), Tensor([178956971, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 6, 2, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([47197443, 13, 7, 1],"float32"), tuple(2,13,7,16,), )
paddle.Tensor.expand(Tensor([477218589, 1, 1, 9],"bool"), list[1,1,1,9,], )
paddle.nn.functional.conv2d_transpose(Tensor([178956971, 6, 2, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([477218589, 3, 3],"float32"), list[13,3,3,], )
paddle.Tensor.expand(Tensor([477218589, 3, 3],"float32"), list[2,1,3,3,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 119304648, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64103990],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.Tensor.expand(Tensor([477218589, 3, 3],"float32"), list[4,1,3,3,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 119304648, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.Tensor.expand(Tensor([477218589, 3, 3],"float32"), list[6,1,3,3,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 119304648, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.Tensor.expand(Tensor([47721859, 1, 1, 45],"int64"), list[2,1,1,45,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.Tensor.expand(Tensor([47721859, 1, 1, 45],"int64"), list[2,1,45,45,], )
paddle.Tensor.expand(Tensor([47721859, 1, 1, 90],"bool"), list[1,1,1,90,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.Tensor.expand(Tensor([47721859, 1, 1, 90],"bool"), list[2,1,1,90,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.Tensor.expand(Tensor([4772186, 18, 25, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([4, 119304648, 1, 1],"float64"), groups=1, )
paddle.Tensor.expand(Tensor([4789, 896841],"float32"), list[1,4789,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([4, 2, 1, 1],"float64"), groups=1, )
paddle.Tensor.expand(Tensor([4789, 896841],"float32"), list[1,4789,2,], )
paddle.Tensor.expand(Tensor([4789, 896841],"float32"), list[2,4789,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 128, 124, 108],"float32"), Tensor([128, 128, 131072, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.Tensor.expand(Tensor([4789, 896841],"float32"), list[2,4789,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 128, 124, 108],"float32"), Tensor([128, 128, 2, 131072],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.Tensor.expand(Tensor([4789, 896841],"float32"), list[4,4789,1,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.Tensor.expand(Tensor([4789, 896841],"float32"), list[4,4789,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 128, 124, 108],"float32"), Tensor([8388608, 128, 2, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([48258060, 1, 1, 89],"bool"), list[1,1,1,89,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 64],"float16"), )
paddle.Tensor.expand(Tensor([48258060, 1, 1, 89],"bool"), list[2,1,1,89,], )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 64],"float16"), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 128, 124, 135301],"float32"), Tensor([128, 128, 2, 135301],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108864, 64],"float16"), )
paddle.Tensor.expand(Tensor([48806447, 1, 1, 44],"int64"), list[2,1,1,44,], )
paddle.Tensor.expand(Tensor([48806447, 1, 1, 88],"bool"), list[1,1,1,88,], )
paddle.Tensor.expand(Tensor([48806447, 1, 1, 88],"bool"), list[2,1,1,88,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 128, 155345, 108],"float32"), Tensor([128, 128, 155345, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([49, 43826197],"int64"), list[13,49,4,], )
paddle.Tensor.expand(Tensor([49367441, 1, 1, 87],"bool"), list[1,1,1,87,], )
paddle.Tensor.expand(Tensor([49367441, 1, 1, 87],"bool"), list[2,1,1,87,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 160356, 124, 108],"float32"), Tensor([128, 128, 2, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([4936745, 1, 1, 435],"int64"), list[7,1,435,435,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 160356, 124, 108],"float32"), Tensor([128, 160356, 2, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.Tensor.expand(Tensor([49941481, 1, 1, 43],"int64"), list[2,1,1,43,], )
paddle.Tensor.expand(Tensor([49941481, 1, 1, 86],"bool"), list[1,1,1,86,], )
paddle.Tensor.expand(Tensor([49941481, 1, 1, 86],"bool"), list[2,1,1,86,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 2, 6],"float32"), Tensor([6, 178956971, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 2, 6],"float32"), Tensor([6, 178956971, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5, 1, 47721859, 18],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([5, 1, 50529027, 17],"float32"), tuple(-1,-1,17,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 3, 2],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.Tensor.expand(Tensor([5, 1, 53687092, 16],"float32"), tuple(-1,-1,16,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.Tensor.expand(Tensor([5, 1, 57266231, 15],"float32"), tuple(-1,-1,15,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 178956971, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 178956971, 1],"float64"), groups=1, padding="VALID", )
paddle.linalg.svdvals(Tensor([100, 21474837],"float64"), )
paddle.Tensor.expand(Tensor([50529027, 1, 1, 85],"bool"), list[1,1,1,85,], )
paddle.Tensor.expand(Tensor([50529027, 1, 1, 85],"bool"), list[2,1,1,85,], )
paddle.Tensor.expand(Tensor([51130564, 1, 1, 42],"int64"), list[2,1,1,42,], )
paddle.Tensor.expand(Tensor([51130564, 1, 1, 84],"bool"), list[1,1,1,84,], )
paddle.Tensor.expand(Tensor([51130564, 1, 1, 84],"bool"), list[2,1,1,84,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([512, 8388608],"float32"), list[16,16,512,512,], )
paddle.Tensor.expand(Tensor([51746594, 1, 1, 83],"bool"), list[1,1,1,83,], )
paddle.Tensor.expand(Tensor([51746594, 1, 1, 83],"bool"), list[2,1,1,83,], )
paddle.Tensor.expand(Tensor([51782, 1, 288, 288],"bool"), list[2,1,288,288,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([518654, 1, 91, 91],"bool"), list[2,1,91,91,], )
paddle.Tensor.expand(Tensor([52377650, 1, 1, 41],"int64"), list[2,1,1,41,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([52377650, 1, 1, 41],"int64"), list[2,1,41,41,], )
paddle.Tensor.expand(Tensor([52377650, 1, 1, 82],"bool"), list[1,1,1,82,], )
paddle.Tensor.expand(Tensor([52377650, 1, 1, 82],"bool"), list[2,1,1,82,], )
paddle.Tensor.expand(Tensor([52377650, 1, 1, 82],"bool"), list[2,1,82,82,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([52509, 1, 286, 286],"float32"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([53024288, 1, 1, 81],"bool"), list[1,1,1,81,], )
paddle.Tensor.expand(Tensor([53024288, 1, 1, 81],"bool"), list[2,1,1,81,], )
paddle.Tensor.expand(Tensor([536870912, 1, 1, 8],"bool"), list[1,1,1,8,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 268435457],"float64"), Tensor([6, 1, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([536870912, 1, 1, 8],"float32"), list[14,1,1,8,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 268435457],"float64"), Tensor([6, 1, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([536870912, 1, 1, 8],"float32"), list[14,1,8,8,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 536870912],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 536870912],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 536870912],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([536870913, 1, 4, 1],"int64"), shape=list[13,2,4,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 536870912],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 536870912],"float32"), Tensor([6, 1, 3, 536870912],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([536870913, 4],"int64"), list[13,49,4,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 536870912],"float32"), Tensor([6, 1, 3, 536870912],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([53687092, 1, 1, 40],"int64"), list[2,1,1,40,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([53687092, 1, 1, 40],"int64"), list[2,1,40,40,], )
paddle.Tensor.expand(Tensor([53687092, 1, 1, 80],"bool"), list[1,1,1,80,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([53687092, 1, 1, 80],"bool"), list[2,1,1,80,], )
paddle.Tensor.expand(Tensor([53687092, 1, 1, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([54366675, 1, 1, 79],"bool"), list[1,1,1,79,], )
paddle.Tensor.expand(Tensor([54366675, 1, 1, 79],"bool"), list[2,1,1,79,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([54366675, 1, 1, 79],"bool"), list[2,1,79,79,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5440, 789517],"float32"), list[1,5440,1,], )
paddle.Tensor.expand(Tensor([5440, 789517],"float32"), list[1,5440,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5440, 789517],"float32"), list[2,5440,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5440, 789517],"float32"), list[2,5440,2,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5478275, 28, 28],"float32"), list[1,28,28,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([55063684, 1, 1, 39],"int64"), list[2,1,1,39,], )
paddle.Tensor.expand(Tensor([55063684, 1, 1, 39],"int64"), list[2,1,39,39,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([55063684, 1, 1, 78],"bool"), list[1,1,1,78,], )
paddle.Tensor.expand(Tensor([55063684, 1, 1, 78],"bool"), list[2,1,1,78,], )
paddle.Tensor.expand(Tensor([55778797, 1, 1, 77],"bool"), list[1,1,1,77,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([55778797, 1, 1, 77],"bool"), list[2,1,1,77,], )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float16"), list[16,-1,-1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float16"), tuple(112,-1,-1,), )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float16"), tuple(128,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float16"), tuple(64,-1,-1,), )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), list[16,-1,-1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(112,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(128,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(32,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(4,-1,-1,), )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(60,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(64,-1,-1,), )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(7,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float64"), Tensor([238609295, 1, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 1, 768],"float32"), tuple(8,-1,-1,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float64"), Tensor([238609295, 1, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([5592406, 24, 32],"float32"), shape=tuple(24,24,32,), )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float64"), Tensor([6, 1, 119304648, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 2, 6],"float64"), Tensor([6, 1, 119304648, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,], output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.Tensor.expand(Tensor([56512728, 1, 1, 38],"int64"), list[2,1,1,38,], )
paddle.Tensor.expand(Tensor([56512728, 1, 1, 38],"int64"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([56512728, 1, 1, 76],"bool"), list[1,1,1,76,], )
paddle.Tensor.expand(Tensor([56512728, 1, 1, 76],"bool"), list[2,1,1,76,], )
paddle.Tensor.expand(Tensor([57266231, 1, 1, 75],"bool"), list[1,1,1,75,], )
paddle.Tensor.expand(Tensor([57266231, 1, 1, 75],"bool"), list[2,1,1,75,], )
paddle.Tensor.expand(Tensor([58040099, 1, 1, 37],"int64"), list[2,1,1,37,], )
paddle.Tensor.expand(Tensor([58040099, 1, 1, 37],"int64"), list[2,1,37,37,], )
paddle.Tensor.expand(Tensor([58040099, 1, 1, 74],"bool"), list[1,1,1,74,], )
paddle.Tensor.expand(Tensor([58040099, 1, 1, 74],"bool"), list[2,1,1,74,], )
paddle.Tensor.expand(Tensor([58040099, 1, 1, 74],"bool"), list[2,1,74,74,], )
paddle.Tensor.expand(Tensor([58835169, 1, 1, 73],"bool"), list[1,1,1,73,], )
paddle.Tensor.expand(Tensor([58835169, 1, 1, 73],"bool"), list[2,1,1,73,], )
paddle.Tensor.expand(Tensor([59652324, 1, 1, 36],"int64"), list[2,1,1,36,], )
paddle.Tensor.expand(Tensor([59652324, 1, 1, 72],"bool"), list[1,1,1,72,], )
paddle.Tensor.expand(Tensor([59652324, 1, 1, 72],"bool"), list[2,1,1,72,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 357913942],"int64"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 357913942],"int64"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 357913942],"int64"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"bool"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"bool"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"bool"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"bool"), list[6,8,1,11,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"bool"), list[6,8,1,12,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"float32"), list[6,1,1,4,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"float32"), list[6,1,1,5,], )
paddle.Tensor.expand(Tensor([6, 1, 1, 715827883],"float32"), list[6,1,3,3,], )
paddle.Tensor.expand(Tensor([6, 1, 10, 71582789],"bool"), list[6,8,10,10,], )
paddle.Tensor.expand(Tensor([6, 1, 102261127, 7],"bool"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([6, 1, 119304648, 6],"bool"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([6, 1, 143165577, 5],"bool"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([6, 1, 143165577, 5],"float32"), list[6,1,1,5,], )
paddle.Tensor.expand(Tensor([6, 1, 178956971, 4],"float32"), list[6,1,1,4,], )
paddle.Tensor.expand(Tensor([6, 1, 238609295, 3],"float32"), list[6,1,3,3,], )
paddle.Tensor.expand(Tensor([6, 1, 51130564, 7],"int64"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([6, 1, 59652324, 12],"bool"), list[6,8,1,12,], )
paddle.Tensor.expand(Tensor([6, 1, 59652324, 6],"int64"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([6, 1, 65075263, 11],"bool"), list[6,8,1,11,], )
paddle.Tensor.expand(Tensor([6, 1, 71582789, 10],"bool"), list[6,8,10,10,], )
paddle.Tensor.astype(Tensor([1, 128, 219, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 128, 219, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.expand(Tensor([6, 1, 71582789, 5],"int64"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([6, 102261127, 1, 7],"bool"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([6, 119304648, 1, 6],"bool"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([6, 143165577, 1, 5],"bool"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([6, 143165577, 1, 5],"float32"), list[6,1,1,5,], )
paddle.Tensor.expand(Tensor([6, 178956971, 1, 4],"float32"), list[6,1,1,4,], )
paddle.Tensor.expand(Tensor([6, 238609295, 1, 3],"float32"), list[6,1,3,3,], )
paddle.Tensor.expand(Tensor([6, 51130564, 1, 7],"int64"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([6, 59652324, 1, 12],"bool"), list[6,8,1,12,], )
paddle.Tensor.expand(Tensor([6, 59652324, 1, 6],"int64"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([6, 60, 11930465],"bool"), list[6,60,6,], )
paddle.Tensor.expand(Tensor([6, 65075263, 1, 11],"bool"), list[6,8,1,11,], )
paddle.Tensor.expand(Tensor([6, 715827883, 1],"bool"), list[6,60,6,], )
paddle.Tensor.expand(Tensor([6, 71582789, 1, 5],"int64"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([6, 7158279, 10, 10],"bool"), list[6,8,10,10,], )
paddle.Tensor.expand(Tensor([60492498, 1, 1, 71],"bool"), list[1,1,1,71,], )
paddle.Tensor.expand(Tensor([60492498, 1, 1, 71],"bool"), list[2,1,1,71,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"bool"), list[1,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"bool"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"bool"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"bool"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"bool"), shape=tuple(13,1,7,7,), )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"float32"), list[14,1,7,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"float32"), list[2,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"float32"), list[4,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"float32"), list[6,1,1,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"int32"), list[12,1,7,-1,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"int32"), list[12,1,7,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"int32"), list[13,1,1024,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 1, 7],"int32"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([613566757, 1, 7],"int32"), list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([613566757, 1, 7],"int32"), list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([613566757, 1, 7],"int32"), shape=list[-1,2,-1,], )
paddle.Tensor.astype(Tensor([1, 144, 195, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1, 144, 195, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.expand(Tensor([613566757, 1, 7],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([613566757, 7, 1, 1],"float32"), list[13,7,4,8,], )
paddle.Tensor.expand(Tensor([61356676, 1, 1, 35],"int64"), list[2,1,35,35,], )
paddle.Tensor.expand(Tensor([61356676, 1, 1, 70],"bool"), list[1,1,1,70,], )
paddle.Tensor.expand(Tensor([61356676, 1, 1, 70],"bool"), list[2,1,1,70,], )
paddle.Tensor.expand(Tensor([6150, 698369],"float32"), list[1,6150,1,], )
paddle.Tensor.expand(Tensor([6150, 698369],"float32"), list[1,6150,2,], )
paddle.Tensor.expand(Tensor([6150, 698369],"float32"), list[2,6150,1,], )
paddle.Tensor.expand(Tensor([6150, 698369],"float32"), list[2,6150,2,], )
paddle.Tensor.expand(Tensor([62245903, 1, 1, 69],"bool"), list[1,1,1,69,], )
paddle.Tensor.expand(Tensor([62245903, 1, 1, 69],"bool"), list[2,1,1,69,], )
paddle.Tensor.expand(Tensor([62245903, 1, 3, 23],"bool"), list[2,1,3,23,], )
paddle.Tensor.expand(Tensor([62245903, 1, 3, 23],"bool"), list[2,8,3,23,], )
paddle.Tensor.expand(Tensor([63161284, 1, 1, 68],"bool"), list[1,1,1,68,], )
paddle.Tensor.expand(Tensor([63161284, 1, 1, 68],"bool"), list[2,1,1,68,], )
paddle.Tensor.expand(Tensor([638752, 1, 82, 82],"bool"), list[2,1,82,82,], )
paddle.Tensor.expand(Tensor([64103990, 1, 1, 67],"bool"), list[1,1,1,67,], )
paddle.Tensor.expand(Tensor([64103990, 1, 1, 67],"bool"), list[2,1,1,67,], )
paddle.Tensor.expand(Tensor([65075263, 1, 1, 66],"bool"), list[1,1,1,66,], )
paddle.Tensor.expand(Tensor([65075263, 1, 1, 66],"bool"), list[2,1,1,66,], )
paddle.Tensor.expand(Tensor([66076420, 1, 1, 65],"bool"), list[1,1,1,65,], )
paddle.Tensor.expand(Tensor([66076420, 1, 1, 65],"bool"), list[2,1,1,65,], )
paddle.Tensor.expand(Tensor([67108864, 1, 1, 64],"bool"), list[1,1,1,64,], )
paddle.Tensor.expand(Tensor([67108864, 1, 1, 64],"bool"), list[2,1,1,64,], )
paddle.Tensor.expand(Tensor([67108864, 1, 8, 8],"float32"), list[2,1,8,8,], )
paddle.Tensor.expand(Tensor([67108864, 8, 8],"float32"), list[1,8,8,], )
paddle.Tensor.expand(Tensor([67108864, 8, 8],"float32"), list[14,1,8,8,], )
paddle.Tensor.expand(Tensor([671089, 1, 80, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([68174085, 1, 1, 63],"bool"), list[1,1,1,63,], )
paddle.Tensor.expand(Tensor([68174085, 1, 1, 63],"bool"), list[2,1,1,63,], )
paddle.Tensor.expand(Tensor([688186, 1, 79, 79],"bool"), list[2,1,79,79,], )
paddle.Tensor.expand(Tensor([6885, 623816],"float32"), list[1,6885,1,], )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.expand(Tensor([6885, 623816],"float32"), list[1,6885,2,], )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.expand(Tensor([6885, 623816],"float32"), list[2,6885,1,], )
paddle.Tensor.expand(Tensor([6885, 623816],"float32"), list[2,6885,2,], )
paddle.Tensor.expand(Tensor([6885, 623816],"float32"), list[8,6885,1,], )
paddle.Tensor.expand(Tensor([6885, 623816],"float32"), list[8,6885,2,], )
paddle.Tensor.expand(Tensor([69273667, 1, 1, 62],"bool"), list[1,1,1,62,], )
paddle.Tensor.expand(Tensor([69273667, 1, 1, 62],"bool"), list[2,1,1,62,], )
paddle.Tensor.expand(Tensor([699051, 8, 1, 6, 128],"float32"), list[2,8,4,6,128,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 306783379],"int64"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([7, 1, 1072670, 286],"int64"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([7, 1, 1394470, 220],"int64"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([7, 1, 1467864, 209],"int64"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([7, 1, 1489240, 206],"int64"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([7, 1, 1649374, 186],"int64"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([7, 1, 1859294, 165],"int64"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([7, 1, 705250, 435],"int64"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([7, 1072670, 1, 286],"int64"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([7, 1394470, 1, 220],"int64"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([7, 1467864, 1, 209],"int64"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([7, 1489240, 1, 206],"int64"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([7, 1649374, 1, 186],"int64"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([7, 1859294, 1, 165],"int64"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([7, 705250, 1, 435],"int64"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([70409300, 1, 1, 61],"bool"), list[1,1,1,61,], )
paddle.Tensor.expand(Tensor([70409300, 1, 1, 61],"bool"), list[2,1,1,61,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"bool"), list[1,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"bool"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"bool"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"bool"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"float32"), list[2,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"float32"), list[4,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 1, 1, 6],"float32"), list[6,1,1,6,], )
paddle.Tensor.expand(Tensor([715827883, 3],"float64"), list[2,-1,], )
paddle.Tensor.expand(Tensor([715827883, 3],"float64"), list[2,3,3,], )
paddle.Tensor.expand(Tensor([715827883, 3],"float64"), tuple(10000,2,3,), )
paddle.Tensor.expand(Tensor([715827883, 3],"float64"), tuple(2,3,), )
paddle.Tensor.expand(Tensor([71582789, 1, 1, 60],"bool"), list[1,1,1,60,], )
paddle.Tensor.expand(Tensor([71582789, 1, 1, 60],"bool"), list[2,1,1,60,], )
paddle.Tensor.expand(Tensor([71582789, 60, 1],"bool"), list[10,60,10,], )
paddle.Tensor.expand(Tensor([71582789, 60, 1],"bool"), list[2,60,2,], )
paddle.Tensor.expand(Tensor([71582789, 60, 1],"bool"), list[20,60,20,], )
paddle.Tensor.expand(Tensor([71582789, 60, 1],"bool"), list[30,60,30,], )
paddle.Tensor.expand(Tensor([71582789, 60, 1],"bool"), list[4,60,4,], )
paddle.Tensor.expand(Tensor([71582789, 60, 1],"bool"), list[6,60,6,], )
paddle.Tensor.expand(Tensor([72796056, 1, 1, 59],"bool"), list[1,1,1,59,], )
paddle.Tensor.expand(Tensor([72796056, 1, 1, 59],"bool"), list[2,1,1,59,], )
paddle.Tensor.expand(Tensor([72796056, 1, 1, 59],"bool"), list[2,1,59,59,], )
paddle.Tensor.expand(Tensor([74051161, 1, 1, 58],"bool"), list[1,1,1,58,], )
paddle.Tensor.expand(Tensor([74051161, 1, 1, 58],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([74051161, 1, 1, 58],"bool"), list[2,1,1,58,], )
paddle.linalg.svdvals(Tensor([2147483649, 1],"float64"), )
paddle.Tensor.expand(Tensor([74051161, 1, 58],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([74051161, 1, 58],"float32"), list[8,-1,-1,], )
paddle.Tensor.expand(Tensor([74566, 144, 200, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([7508685, 1, 1, 286],"int64"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([75350304, 1, 1, 57],"bool"), list[1,1,1,57,], )
paddle.Tensor.expand(Tensor([75350304, 1, 1, 57],"bool"), list[2,1,1,57,], )
paddle.Tensor.expand(Tensor([75350304, 57, 1, 1],"float16"), list[2,57,1,64,], )
paddle.Tensor.expand(Tensor([76695845, 1, 1, 56],"bool"), list[1,1,1,56,], )
paddle.Tensor.expand(Tensor([76695845, 1, 1, 56],"bool"), list[13,4,56,56,], )
paddle.Tensor.expand(Tensor([76695845, 1, 1, 56],"bool"), list[2,1,1,56,], )
paddle.Tensor.expand(Tensor([7681, 559168],"float32"), list[1,7681,1,], )
paddle.Tensor.expand(Tensor([7681, 559168],"float32"), list[1,7681,2,], )
paddle.Tensor.expand(Tensor([7681, 559168],"float32"), list[2,7681,1,], )
paddle.nn.functional.group_norm(Tensor([1, 1024, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.Tensor.expand(Tensor([7681, 559168],"float32"), list[2,7681,2,], )
paddle.nn.functional.group_norm(Tensor([1, 1024, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.Tensor.expand(Tensor([7681, 559168],"float32"), list[8,7681,1,], )
paddle.Tensor.expand(Tensor([7681, 559168],"float32"), list[8,7681,2,], )
paddle.Tensor.expand(Tensor([77673, 192, 144, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([78090315, 1, 1, 55],"bool"), list[1,1,1,55,], )
paddle.Tensor.expand(Tensor([78090315, 1, 1, 55],"bool"), list[2,1,1,55,], )
paddle.Tensor.expand(Tensor([784326, 1, 74, 74],"bool"), list[2,1,74,74,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.expand(Tensor([79536432, 1, 1, 54],"bool"), list[1,1,1,54,], )
paddle.Tensor.expand(Tensor([79536432, 1, 1, 54],"bool"), list[2,1,1,54,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8, 1, 1, 536870912],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([8, 1, 1048576, 512],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([8, 1048576, 1, 512],"bool"), list[8,1,512,512,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([3072],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8, 7, 38347923],"int64"), list[-1,-1,768,], )
paddle.Tensor.expand(Tensor([81037119, 1, 1, 53],"bool"), list[1,1,1,53,], )
paddle.Tensor.expand(Tensor([81037119, 1, 1, 53],"bool"), list[2,1,1,53,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([4096],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8119031, 1, 23, 23],"bool"), list[2,1,23,23,], )
paddle.Tensor.expand(Tensor([8119031, 1, 23, 23],"bool"), list[2,8,23,23,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1048576, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.Tensor.expand(Tensor([82595525, 1, 1, 52],"bool"), list[1,1,1,52,], )
paddle.Tensor.expand(Tensor([82595525, 1, 1, 52],"bool"), list[2,1,1,52,], )
paddle.Tensor.expand(Tensor([82595525, 1, 1, 52],"bool"), list[2,1,52,52,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.Tensor.expand(Tensor([82595525, 52, 1, 1],"float16"), list[2,52,1,64,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8388608, 1, 1, 512],"bool"), list[8,1,512,512,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4096, 1024],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4096, 1048576],"float16"), Tensor([1024],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8388608, 16, 32],"float32"), shape=tuple(16,16,32,), )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8388608, 512],"float32"), list[16,16,512,512,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float16"), Tensor([1, 1, 4294967295],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([4096, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8388609, 2, 16, 1, 8],"int64"), shape=list[13,2,16,4,8,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float16"), Tensor([1, 4294968, 1000],"float16"), )
paddle.Tensor.expand(Tensor([84215045, 1, 1, 51],"bool"), list[1,1,1,51,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float16"), Tensor([4294968, 1, 1000],"float16"), )
paddle.Tensor.expand(Tensor([84215045, 1, 1, 51],"bool"), list[2,1,1,51,], )
paddle.Tensor.expand(Tensor([84215045, 1, 1, 51],"bool"), list[2,1,51,51,], )
paddle.Tensor.expand(Tensor([84215045, 51, 1, 1],"float16"), list[2,51,1,64,], )
paddle.Tensor.expand(Tensor([8500, 505291],"float32"), list[1,8500,1,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194304, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194304, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8500, 505291],"float32"), list[1,8500,2,], )
paddle.Tensor.expand(Tensor([8500, 505291],"float32"), list[2,8500,1,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1016801, 132, 32],"float16"), Tensor([32, 64],"float16"), None, )
paddle.Tensor.expand(Tensor([8500, 505291],"float32"), list[2,8500,2,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8500, 505291],"float32"), list[8,8500,1,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([11184811, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.Tensor.expand(Tensor([8500, 505291],"float32"), list[8,8500,2,], )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 262144],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"bool"), list[1,1,1,5,], )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"bool"), list[2,1,5,5,], )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"bool"), list[4,1,5,5,], )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"bool"), list[6,1,5,5,], )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"float32"), list[2,1,1,5,], )
paddle.incubate.nn.functional.fused_linear(Tensor([10700, 3136, 128],"float16"), Tensor([128, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"float32"), list[4,1,1,5,], )
paddle.Tensor.expand(Tensor([858993459, 1, 1, 5],"float32"), list[6,1,1,5,], )
paddle.Tensor.expand(Tensor([85899346, 1, 1, 50],"bool"), list[1,1,1,50,], )
paddle.Tensor.expand(Tensor([85899346, 1, 1, 50],"bool"), list[2,1,1,50,], )
paddle.Tensor.expand(Tensor([85899346, 1, 1, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([85899346, 50, 1, 1],"float16"), list[2,50,1,64,], )
paddle.Tensor.expand(Tensor([87652394, 1, 1, 49],"bool"), list[1,1,1,49,], )
paddle.Tensor.expand(Tensor([87652394, 1, 1, 49],"bool"), list[2,1,1,49,], )
paddle.Tensor.expand(Tensor([87652394, 1, 7, 7],"bool"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([87652394, 1, 7, 7],"bool"), shape=tuple(13,1,7,7,), )
paddle.Tensor.expand(Tensor([87652394, 1, 7, 7],"float32"), list[13,1,7,7,], )
paddle.Tensor.expand(Tensor([87652394, 7, 7],"float32"), list[14,1,7,7,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([1, 4294968, 1000],"float32"), )
paddle.Tensor.expand(Tensor([88739, 1, 220, 220],"float32"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([89478486, 1, 1, 48],"bool"), list[1,1,1,48,], )
paddle.Tensor.expand(Tensor([89478486, 1, 1, 48],"bool"), list[2,1,1,48,], )
paddle.Tensor.expand(Tensor([91382283, 1, 1, 47],"bool"), list[1,1,1,47,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([4294968, 1, 1000],"float32"), )
paddle.Tensor.expand(Tensor([91382283, 1, 1, 47],"bool"), list[2,1,1,47,], )
paddle.Tensor.expand(Tensor([91382283, 1, 1, 47],"bool"), list[2,1,47,47,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float16"), Tensor([1, 1, 4294967295],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float16"), Tensor([1, 390168, 11008],"float16"), )
paddle.Tensor.expand(Tensor([9256396, 8, 1, 58],"float32"), list[1,-1,-1,-1,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float16"), Tensor([390168, 1, 11008],"float16"), )
paddle.Tensor.expand(Tensor([93368855, 1, 1, 46],"bool"), list[1,1,1,46,], )
paddle.Tensor.expand(Tensor([93368855, 1, 1, 46],"bool"), list[2,1,1,46,], )
paddle.Tensor.expand(Tensor([9382, 457789],"float32"), list[1,9382,1,], )
paddle.Tensor.expand(Tensor([9382, 457789],"float32"), list[1,9382,2,], )
paddle.Tensor.expand(Tensor([9382, 457789],"float32"), list[2,9382,1,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.expand(Tensor([9382, 457789],"float32"), list[2,9382,2,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([1, 390168, 11008],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, )
paddle.Tensor.expand(Tensor([9382, 457789],"float32"), list[8,9382,1,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([390168, 1, 11008],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.Tensor.expand(Tensor([9382, 457789],"float32"), list[8,9382,2,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 18],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.Tensor.expand(Tensor([95443718, 1, 1, 45],"bool"), list[1,1,1,45,], )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, )
paddle.Tensor.expand(Tensor([95443718, 1, 1, 45],"bool"), list[2,1,1,45,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 18],"float32"), Tensor([1, 238609295, 18],"float32"), )
paddle.Tensor.expand(Tensor([95443718, 45, 1, 1],"float16"), list[2,45,1,64,], )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.Tensor.expand(Tensor([9739155, 1, 21, 21],"bool"), list[2,1,21,21,], )
paddle.Tensor.expand(Tensor([9739155, 1, 21, 21],"bool"), list[2,8,21,21,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 18],"float32"), Tensor([238609295, 1, 18],"float32"), )
paddle.Tensor.expand(Tensor([97612894, 1, 1, 44],"bool"), list[1,1,1,44,], )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([1024, 1000],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.Tensor.expand(Tensor([97612894, 1, 1, 44],"bool"), list[2,1,1,44,], )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float16"), Tensor([1, 1, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float16"), Tensor([1, 1, 11008],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([4294968, 1000],"float16"), Tensor([1000],"float16"), False, None, )
paddle.Tensor.expand(Tensor([9761290, 1, 1, 220],"int64"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([98326, 1, 209, 209],"float32"), list[14,1,209,209,], )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 171197],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 171197],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([512],"float16"), False, None, )
paddle.Tensor.expand(Tensor([98326, 1, 209, 209],"float32"), list[7,1,209,209,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.Tensor.expand(Tensor([99882961, 1, 1, 43],"bool"), list[1,1,1,43,], )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.Tensor.expand(Tensor([99882961, 1, 1, 43],"bool"), list[2,1,1,43,], )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([8388608, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([2097152, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 18],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([512, 8388608],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 262144, 128],"float16"), Tensor([128, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 11, 390451573],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 10700],"float16"), Tensor([128, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 10700],"float16"), Tensor([512, 128],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 128],"float16"), Tensor([128, 33554432],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 128],"float16"), Tensor([128, 512],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 128],"float16"), Tensor([8388608, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 238609295, 18],"float32"), Tensor([1, 1, 18],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 512],"float16"), Tensor([33554432, 128],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 512],"float16"), Tensor([512, 128],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 512],"float16"), Tensor([512, 8388608],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 390168, 11008],"float16"), Tensor([1, 1, 11008],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 33554432],"float16"), Tensor([1024, 1000],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 1024],"float16"), Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 684785],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 390168, 11008],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 65536, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([262144, 16, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.nn.functional.conv3d(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([2796203, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.linalg.svdvals(Tensor([53687092, 40],"float64"), )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([12, 2097152, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4294968, 1000],"float16"), Tensor([1, 1, 1000],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.nn.functional.conv3d(Tensor([4, 3, 5592406, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2147483648],"float32"), Tensor([1, 2, 1],"float32"), upper=False, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4294968, 1000],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 5592406, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 5592406],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([107374183, 40],"float32"), Tensor([50],"float32"), True, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2147483648],"float32"), Tensor([1, 2, 2147483648],"float32"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([107374183, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([1, 2, 2147483648],"float32"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 107374183],"float32"), Tensor([50],"float32"), False, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([1, 4294967295, 1],"float32"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 107374183],"float32"), Tensor([50],"float32"), False, None, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([2147483648, 2, 1],"float32"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), False, )
paddle.linalg.triangular_solve(Tensor([1, 2147483648, 2],"float32"), Tensor([1, 2, 1],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([1, 2147483648, 2],"float32"), Tensor([1, 2147483648, 1],"float32"), upper=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), False, None, )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1048576, 4096],"float32"), Tensor([300, 4096],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), True, )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), True, None, )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.trapezoid(y=Tensor([715827883, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 85899346],"float32"), Tensor([50],"float32"), True, )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 85899346],"float32"), Tensor([50],"float32"), True, None, )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([85899346, 50],"float32"), Tensor([50],"float32"), False, )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([85899346, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.nn.functional.group_norm(Tensor([1, 11184811, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([368731, 182, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.nn.functional.group_norm(Tensor([1, 16519105, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 2796203, 8, 8],"float32"), Tensor([12, 1, 2796203, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 115, 64],"float16"), Tensor([64, 67108864],"float16"), None, )
paddle.nn.functional.group_norm(Tensor([1, 59652324, 2, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 2796203, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 115, 64],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.nn.functional.conv3d(Tensor([4, 6, 2796203, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([1, 63161284, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 115, 9336886],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 127, 64],"float16"), Tensor([64, 67108864],"float16"), None, )
paddle.nn.functional.group_norm(Tensor([1, 67108864, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 2796203, 8],"float32"), Tensor([12, 1, 3, 2796203, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 127, 64],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 127, 8454661],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 32],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 2796203, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([134217728, 32],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 2796203, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([64, 67108864],"float16"), None, )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 2796203],"float32"), Tensor([12, 1, 3, 3, 2796203],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 2796203],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([32, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 2796203],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([64, 32],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([64, 64],"float16"), None, )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 39768216],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 39768216, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 7255013],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 39768216, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 13256072, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 6882961],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 16777216, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 19884108, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 5899681],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([21262215, 101],"float64"), Tensor([4, 101],"float64"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 33554432, 32],"float16"), Tensor([32, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4096, 1024, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4096, 1024, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([42800, 196, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([430186, 156, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([453439, 148, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([238609295, 1, 18],"float32"), Tensor([1, 1, 18],"float32"), )
paddle.incubate.nn.functional.fused_linear(Tensor([508401, 132, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 14316558],"float32"), Tensor([300, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 4096],"float32"), Tensor([1048576, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 4096],"float32"), Tensor([300, 14316558],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float16"), Tensor([1, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.linalg.triangular_solve(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), upper=False, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float16"), Tensor([4, 1073741824],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float16"), Tensor([42524429, 101],"float16"), )
paddle.linalg.triangular_solve(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), upper=False, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float32"), Tensor([42524429, 101],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float64"), Tensor([21262215, 101],"float64"), )
paddle.linalg.triangular_solve(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), upper=False, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float64"), Tensor([4, 536870913],"float64"), )
paddle.linalg.triangular_solve(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), upper=False, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float16"), Tensor([4, 101],"float16"), )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 268435457],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 268435457],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float32"), Tensor([4, 101],"float32"), )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 268435457],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([16777217, 128],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([16777217, 128],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([16777217, 128],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.swiglu(Tensor([4, 536870913],"float64"), None, )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([2147483649],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.swiglu(Tensor([4, 536870913],"float64"), Tensor([4, 101],"float64"), )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([2147483649],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([2147483649],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.swiglu(Tensor([42524429, 101],"float16"), Tensor([4, 101],"float16"), )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.swiglu(Tensor([42524429, 101],"float32"), Tensor([4, 101],"float32"), )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([1073741824, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([1073741824, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([5, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([7, 5],"float16"), None, True, False, )
paddle.linalg.triangular_solve(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), upper=False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.linalg.triangular_solve(Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), upper=False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([143165577, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.swiglu(Tensor([42949673, 100],"float16"), Tensor([8, 100],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4294968, 1, 1000],"float16"), Tensor([1, 1, 1000],"float16"), )
paddle.linalg.triangular_solve(Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), upper=False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([143165577, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([40, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), True, True, )
paddle.unfold(Tensor([429496730, 5],"float64"), 0, 5, 1, )
paddle.incubate.nn.functional.swiglu(Tensor([4294968, 1, 1000],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([50, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.unfold(Tensor([429496730, 5],"int64"), 0, 5, 1, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([40, 143165577],"float32"), None, False, True, )
paddle.incubate.nn.functional.swiglu(Tensor([48, 4096, 22016],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 100],"float16"), Tensor([8, 536870912],"float16"), )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.swiglu(Tensor([8, 536870912],"float16"), Tensor([8, 100],"float16"), )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([50, 143165577],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([107374183, 40],"float32"), None, False, False, )
paddle.unfold(Tensor([5, 858993459],"float16"), 0, 5, 1, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([107374183, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 107374183],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 107374183],"float32"), Tensor([40],"float32"), False, True, )
paddle.unfold(Tensor([5, 858993459],"float32"), 0, 5, 1, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.unfold(Tensor([5, 858993459],"int32"), 0, 5, 1, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 85899346],"float32"), Tensor([40],"float32"), False, False, )
paddle.unfold(Tensor([858993459, 5],"float16"), 0, 5, 1, )
paddle.unfold(Tensor([858993459, 5],"float32"), 0, 5, 1, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 138547333],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.unfold(Tensor([858993459, 5],"int32"), 0, 5, 1, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([85899346, 50],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 138547333],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([5, 1073741824],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([5, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([7, 1073741824],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([7, 5],"float16"), None, False, False, )
paddle.unique(Tensor([2147483649],"int64"), return_index=True, return_inverse=True, return_counts=True, dtype="int32", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([5, 7],"float16"), Tensor([4294967295],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([5, 858993459],"float16"), None, False, True, )
paddle.linalg.triangular_solve(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), upper=False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([5, 858993459],"float16"), Tensor([5],"float16"), False, True, )
paddle.nn.functional.group_norm(Tensor([2, 178956971, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([613566757, 7],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 5],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 613566757],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([858993459, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([858993459, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([107374183, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([107374183, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 107374183],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 107374183],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 85899346],"float32"), Tensor([40],"float32"), True, False, )
paddle.linalg.triangular_solve(Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.linalg.triangular_solve(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), upper=False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([85899346, 50],"float32"), Tensor([40],"float32"), True, True, )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([40, 85899346],"float32"), None, True, True, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 178956971],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 89478486],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([613566757, 5],"float16"), None, False, False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([5, 7],"float16"), Tensor([4294967295],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([5, 858993459],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([5, 858993459],"float16"), Tensor([5],"float16"), True, True, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([613566757, 7],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 5],"float16"), Tensor([4294967295],"float16"), True, False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 85899346],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 85899346, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1717987, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 613566757],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1717987, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([858993459, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([858993459, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([5, 613566757],"float16"), None, True, True, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 4294967295],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([4294967295, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 4294967295],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([4294967295, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 67108864, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 2164803, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([2164803, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 67108864, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 2164803, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([2164803, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 67108864, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 2164803, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2164803, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.linalg.triangular_solve(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.linalg.triangular_solve(Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.linalg.triangular_solve(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), upper=False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.linalg.triangular_solve(Tensor([715827883, 3],"float64"), Tensor([3, 2],"float64"), upper=False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([85899346, 40],"float32"), None, False, False, )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.linalg.triangular_solve(Tensor([715827883, 3],"float64"), Tensor([715827883, 2],"float64"), upper=False, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 1, 4294967295],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 1, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 4294967295],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NHWC", )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 67108864, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([100, 42949673],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.nn.functional.group_norm(Tensor([2, 3, 357913942],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([100, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([101, 42524429],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([101, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([104, 41297763],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([104, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([123, 34918434],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([123, 768],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([131, 32786010],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([131, 768],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([136, 31580642],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([136, 768],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([134217729, 4, 4],"float64"), Tensor([4, 2],"float64"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([134217729, 4, 4],"int64"), Tensor([4, 2],"int64"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655765, 3],"float32"), Tensor([1],"float32"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655765, 3],"float32"), Tensor([2],"float32"), -1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([1431655765, 3],"float32"), y=Tensor([1431655765, 1],"float32"), )
paddle.linalg.triangular_solve(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 1],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 134217728, 32],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.linalg.triangular_solve(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.linalg.triangular_solve(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.linalg.triangular_solve(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([1, 1, 8, 536870912],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.linalg.triangular_solve(x=Tensor([3, 3],"float32"), y=Tensor([4294967295, 1],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([1, 16777216, 8, 32],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([16777216, 1, 8, 32],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.linalg.triangular_solve(x=Tensor([3, 3],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 536870912],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655765, 3],"int32"), Tensor([1],"int32"), -2, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.linalg.triangular_solve(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655765, 3],"int32"), Tensor([2],"int32"), -1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 1],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 536870912],"float32"), Tensor([1, 1, 8, 536870912],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.linalg.triangular_solve(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.group_norm(Tensor([2, 3, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.group_norm(Tensor([2, 3, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NLC", )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([4, 536870913],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([11184811, 3, 4, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.incubate.softmax_mask_fuse(Tensor([1, 16777216, 8, 32],"float32"), Tensor([1, 16777216, 8, 32],"float32"), )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([4, 536870913],"float64"), upper=False, )
paddle.nn.functional.conv3d(x=Tensor([11184811, 4, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.incubate.softmax_mask_fuse(Tensor([16777216, 1, 8, 32],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([4, 536870913],"float64"), upper=False, transpose=True, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.linalg.triangular_solve(x=Tensor([4, 4],"float64"), y=Tensor([4, 536870913],"float64"), upper=False, transpose=True, unitriangular=True, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([153391690, 4, 7],"float32"), Tensor([2, 4],"float32"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([153391690, 4, 7],"int32"), Tensor([2, 4],"int32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.fill_diagonal_tensor(Tensor([178956971, 4, 3, 2],"float32"), Tensor([2, 2, 3],"float32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([178956971, 4, 3, 2],"int32"), Tensor([2, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 153391690, 7],"float64"), Tensor([2, 4],"float64"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 16777217, 4, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 22369622, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 153391690, 7],"int64"), Tensor([2, 4],"int64"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 22369622, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 2147483648],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 2147483648],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 2147483648],"float16"), Tensor([256],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 306783379, 7],"float32"), Tensor([2, 4],"float32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 306783379, 7],"int32"), Tensor([2, 4],"int32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 22369622, 4],"float64"), weight=Tensor([6, 1, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 134217729, 2],"float64"), Tensor([2, 2, 3],"float64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 134217729, 2],"int64"), Tensor([2, 2, 3],"int64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 268435456, 2],"float32"), Tensor([2, 2, 3],"float32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.group_norm(Tensor([2, 357913942, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 268435456, 2],"int32"), Tensor([2, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 268435457],"float64"), Tensor([4, 2],"float64"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 2147483648],"float32"), Tensor([256],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 256],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 22369622],"float64"), weight=Tensor([6, 1, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 268435457],"int64"), Tensor([4, 2],"int64"), 0, 0, 1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 256],"float32"), Tensor([4294967295],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 33554432, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 178956971],"float32"), Tensor([2, 2, 3],"float32"), offset=0, dim1=1, dim2=2, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 4194304, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 178956971],"int32"), Tensor([2, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"float32"), Tensor([2, 2, 1073741824],"float32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"float32"), Tensor([2, 715827883, 3],"float32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"float32"), Tensor([715827883, 2, 3],"float32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"float64"), Tensor([2, 2, 536870913],"float64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"float64"), Tensor([2, 357913942, 3],"float64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"float64"), Tensor([357913942, 2, 3],"float64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int32"), Tensor([2, 2, 1073741824],"int32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int32"), Tensor([2, 715827883, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 263173, 8, 1020],"float16"), mask=Tensor([2, 263173, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 263173, 1020],"float16"), mask=Tensor([2, 1, 263173, 1020],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int32"), Tensor([715827883, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 263173, 1020],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float32"), weight=Tensor([6, 1, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([2, 1, 2105377, 1020],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int64"), Tensor([2, 2, 536870913],"int64"), offset=0, dim1=1, dim2=2, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([2, 1, 8, 268435456],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([2, 263173, 8, 1020],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int64"), Tensor([2, 357913942, 3],"int64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([526345, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([16777216, 1, 8, 32],"float16"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int64"), Tensor([357913942, 2, 3],"int64"), offset=0, dim1=1, dim2=2, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([2, 1, 67108864, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([2, 1, 8, 268435456],"float16"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([2, 8388608, 8, 32],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 89478486],"float64"), Tensor([2, 2, 3],"float64"), offset=0, dim1=1, dim2=2, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 33554432],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 33554432],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 89478486],"int64"), Tensor([2, 2, 3],"int64"), offset=0, dim1=1, dim2=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 33554432],"float16"), mask=Tensor([2, 1, 8, 33554432],"float16"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8388608, 32],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"float32"), Tensor([2147483648, 2],"float32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"float32"), Tensor([4, 1073741824],"float32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 159072863, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"float64"), Tensor([1073741825, 2],"float64"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"float64"), Tensor([4, 536870913],"float64"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"int32"), Tensor([2147483648, 2],"int32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"int32"), Tensor([4, 1073741824],"int32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"int64"), Tensor([1073741825, 2],"int64"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"int64"), Tensor([4, 536870913],"int64"), 0, 0, 1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([64, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([64, 67108864],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 536870912],"float32"), Tensor([4, 2],"float32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 357913942],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 536870912],"int32"), Tensor([4, 2],"int32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 357913942, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"float32"), Tensor([1073741824, 4],"float32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"float32"), Tensor([2, 2147483648],"float32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"float64"), Tensor([2, 1073741825],"float64"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"float64"), Tensor([536870913, 4],"float64"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"int32"), Tensor([1073741824, 4],"int32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"int32"), Tensor([2, 2147483648],"int32"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"int64"), Tensor([2, 1073741825],"int64"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"int64"), Tensor([536870913, 4],"int64"), 0, 1, 2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([268435456, 4, 4],"float32"), Tensor([4, 2],"float32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.fill_diagonal_tensor(Tensor([268435456, 4, 4],"int32"), Tensor([4, 2],"int32"), 0, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=2, padding=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 1431655765],"float32"), Tensor([2],"float32"), 1, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 357913942, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([1, 536870912, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 1431655765],"int32"), Tensor([2],"int32"), 1, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([178956971, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCDHW", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([178956971, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float32"), Tensor([4294967295],"float32"), -1, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 79536432],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float32"), Tensor([4294967295],"float32"), -2, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 1],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 79536432, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float32"), Tensor([4294967295],"float32"), 0, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 4],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 79536432, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float32"), Tensor([4294967295],"float32"), 1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 4],"float64"), upper=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([2, 79536432, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([3, 178956971, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float64"), Tensor([2147483649],"float64"), -1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 4],"float64"), upper=False, transpose=True, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([3, 3, 119304648, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float64"), Tensor([2147483649],"float64"), -2, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 4],"float64"), upper=False, transpose=True, unitriangular=True, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([3, 3, 2, 119304648, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float64"), Tensor([2147483649],"float64"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"float64"), Tensor([2147483649],"float64"), 1, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([3, 3, 2, 2, 119304648],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 536870913],"float64"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([4294967295],"int32"), -1, 0, 1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([4294967295],"int32"), -2, 0, 1, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8388608, 8, 32],"float16"), mask=Tensor([2, 8388608, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2097152, 8, 8, 32],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 536870913],"float64"), upper=False, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([4294967295],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([4294967295],"int32"), 1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 536870913],"float64"), upper=False, transpose=True, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([2147483649],"int64"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([2147483649],"int64"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([2147483649],"int64"), 0, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 536870913],"float64"), upper=False, transpose=True, unitriangular=True, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([2147483649],"int64"), 1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([4, 1],"float64"), )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([4, 4],"float64"), )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([4, 4],"float64"), upper=False, )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([4, 4],"float64"), upper=False, transpose=True, )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([4, 4],"float64"), upper=False, transpose=True, unitriangular=True, )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([536870913, 1],"float64"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 715827883],"float64"), Tensor([2],"float64"), 1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([536870913, 4],"float64"), )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([536870913, 4],"float64"), upper=False, )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([536870913, 4],"float64"), upper=False, transpose=True, )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCHW", )
paddle.linalg.triangular_solve(x=Tensor([536870913, 4],"float64"), y=Tensor([536870913, 4],"float64"), upper=False, transpose=True, unitriangular=True, )
paddle.linalg.triangular_solve(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 1],"float64"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 715827883],"int64"), Tensor([2],"int64"), 1, 0, 1, )
paddle.linalg.triangular_solve(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 1],"float64"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2097152, 8, 8, 32],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 1073741824],"float32"), Tensor([2],"float32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 1073741824],"float32"), Tensor([3],"float32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 1073741824],"int32"), Tensor([2],"int32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 1073741824],"int32"), Tensor([3],"int32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"float32"), Tensor([4294967295],"float32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"float32"), Tensor([4294967295],"float32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"float32"), Tensor([4294967295],"float32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"float64"), Tensor([2147483649],"float64"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"float64"), Tensor([2147483649],"float64"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"float64"), Tensor([2147483649],"float64"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int32"), Tensor([4294967295],"int32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int32"), Tensor([4294967295],"int32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int32"), Tensor([4294967295],"int32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int64"), Tensor([2147483649],"int64"), offset=-1, dim1=0, dim2=1, )
paddle.incubate.softmax_mask_fuse(x=Tensor([2796203, 3, 16, 32],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int64"), Tensor([2147483649],"int64"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int64"), Tensor([2147483649],"int64"), offset=1, dim1=0, dim2=1, )
paddle.linspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([4294967295],"int32"), dtype="float32", )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 536870913],"float64"), Tensor([2],"float64"), offset=1, dim1=0, dim2=1, )
paddle.linspace(Tensor([1],"float32"), Tensor([4294967295],"float32"), Tensor([1],"int32"), dtype="float32", )
paddle.linspace(Tensor([4294967295],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), dtype="float32", )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 536870913],"float64"), Tensor([3],"float64"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 536870913],"int64"), Tensor([2],"int64"), offset=1, dim1=0, dim2=1, )
paddle.linspace(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), Tensor([4294967295],"int32"), dtype="float32", )
paddle.linspace(start=4.5, stop=8, num=Tensor([4294967295],"int32"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 536870913],"int64"), Tensor([3],"int64"), offset=0, dim1=0, dim2=1, )
paddle.linspace(start=Tensor([1],"float64"), stop=Tensor([2147483649],"float64"), num=2, dtype="float64", )
paddle.Tensor.fill_diagonal_tensor(Tensor([5, 3],"float32"), Tensor([4294967295],"float32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([5, 858993459],"float32"), Tensor([3],"float32"), 0, 0, 1, )
paddle.linspace(start=Tensor([1],"int32"), stop=Tensor([4294967295],"int32"), num=2, )
paddle.linspace(start=Tensor([2147483649],"float64"), stop=9.6, num=5, dtype="float64", )
paddle.Tensor.fill_diagonal_tensor(Tensor([715827883, 3],"float64"), Tensor([1],"float64"), -2, 0, 1, )
paddle.linspace(start=Tensor([2147483649],"float64"), stop=Tensor([1],"float64"), num=2, dtype="float64", )
paddle.Tensor.fill_diagonal_tensor(Tensor([715827883, 3],"float64"), Tensor([2],"float64"), -1, 0, 1, )
paddle.nn.functional.group_norm(Tensor([2, 4, 3],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCL", )
paddle.linspace(start=Tensor([2147483649],"float64"), stop=Tensor([2147483649],"float64"), num=2, dtype="float64", )
paddle.linspace(start=Tensor([4294967295],"int32"), stop=Tensor([1],"int32"), num=2, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 2796203, 8, 32],"float16"), mask=Tensor([6, 2796203, 8, 32],"float16"), )
paddle.linspace(start=Tensor([4294967295],"int32"), stop=Tensor([4294967295],"int32"), num=2, )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 2796203, 32],"float16"), mask=Tensor([6, 1, 2796203, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 2796203, 32],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 11184811],"float16"), mask=Tensor([6, 1, 8, 11184811],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 11184811],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.logaddexp(Tensor([1, 178956971, 3, 4],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([16777216, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([6, 1, 22369622, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([6, 1, 8, 89478486],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([6, 2796203, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([65794, 8, 8, 1020],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.logaddexp(Tensor([1, 2, 268435457, 4],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([715827883, 3],"int64"), Tensor([1],"int64"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([715827883, 3],"int64"), Tensor([2],"int64"), -1, 0, 1, )
paddle.logaddexp(Tensor([1, 2, 3, 357913942],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 1431655765, 3, 1],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 2147483648, 1],"float32"), )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 3, 715827883],"float32"), )
paddle.unique_consecutive(x=Tensor([2147483649, 1],"float64"), dtype="int32", )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float64"), Tensor([1, 178956971, 3, 4],"float64"), )
paddle.unique_consecutive(x=Tensor([4, 536870913],"float64"), dtype="int32", )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float64"), Tensor([1, 2, 268435457, 4],"float64"), )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float64"), Tensor([1, 2, 3, 357913942],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.Tensor.fill_diagonal_tensor(Tensor([76695845, 4, 7],"float64"), Tensor([2, 4],"float64"), 0, 1, 2, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.Tensor.fill_diagonal_tensor(Tensor([76695845, 4, 7],"int64"), Tensor([2, 4],"int64"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([89478486, 4, 3, 2],"float64"), Tensor([2, 2, 3],"float64"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([89478486, 4, 3, 2],"int64"), Tensor([2, 2, 3],"int64"), offset=0, dim1=1, dim2=2, )
paddle.logaddexp(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1, 2, 3, 1],"float32"), )
paddle.logaddexp(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1, 2, 3, 1],"float32"), )
paddle.logaddexp(Tensor([10, 1431656, 300],"float32"), Tensor([10, 200, 300],"float32"), )
paddle.logaddexp(Tensor([10, 200, 2147484],"float32"), Tensor([10, 200, 300],"float32"), )
paddle.logaddexp(Tensor([10, 200, 300],"float32"), Tensor([10, 1431656, 300],"float32"), )
paddle.logaddexp(Tensor([10, 200, 300],"float32"), Tensor([10, 200, 2147484],"float32"), )
paddle.logaddexp(Tensor([10, 200, 300],"float32"), Tensor([71583, 200, 300],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.group_norm(Tensor([2, 89478486, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 2147483649],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.group_norm(Tensor([44739243, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 1198373, 16, 32],"float16"), mask=Tensor([7, 1198373, 16, 32],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 12782641],"float16"), mask=Tensor([7, 1, 16, 12782641],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 12782641],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([7, 1, 16, 38347923],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([7, 1, 19173962, 32],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([7, 1198373, 16, 32],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([8388608, 1, 16, 32],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 6391321, 32],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 6391321, 32],"float16"), mask=Tensor([7, 1, 6391321, 32],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 1024, 262144],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 262144, 1024],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 33554432],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.logaddexp(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.logaddexp(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.logaddexp(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.logaddexp(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.logaddexp(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.logaddexp(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 33554432],"float32"), )
paddle.logaddexp(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 33554432, 32],"float16"), )
paddle.logaddexp(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 33554432, 32],"float32"), )
paddle.logaddexp(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4194304, 32, 32],"float16"), )
paddle.logaddexp(Tensor([4, 536870912, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.logaddexp(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.logaddexp(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1048576, 4, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 1024, 131072],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 131072, 1024],"float16"), )
paddle.logaddexp(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.logaddexp(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.logaddexp(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 1024, 2097152],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 2097152, 1024],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.logaddexp(Tensor([715827883, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 134217728, 32],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.logaddexp(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.logaddexp(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 134217728, 32],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 134217728],"float16"), )
paddle.Tensor.inverse(Tensor([119304648, 4, 3, 3],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 134217728],"float32"), )
paddle.Tensor.inverse(Tensor([1431655765, 3],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 4194304, 32, 32],"float16"), )
paddle.logaddexp(Tensor([71583, 200, 300],"float32"), Tensor([10, 200, 300],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 224, 6391321],"float32"), )
paddle.Tensor.inverse(Tensor([2, 238609295, 3, 3],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 6391321, 224],"float32"), )
paddle.Tensor.inverse(Tensor([2, 4, 178956971, 3],"float32"), )
paddle.Tensor.inverse(Tensor([2, 4, 3, 178956971],"float32"), )
paddle.Tensor.inverse(Tensor([2, 4, 536870912],"float32"), )
paddle.Tensor.inverse(Tensor([2, 536870912, 4],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([4194304, 1, 32, 32],"float16"), )
paddle.Tensor.inverse(Tensor([268435456, 4, 4],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 224, 547828],"float32"), )
paddle.Tensor.inverse(Tensor([3, 119304648, 6],"float64"), )
paddle.Tensor.inverse(Tensor([3, 1431655765],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 547828, 224],"float32"), )
paddle.Tensor.inverse(Tensor([3, 6, 119304648],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([53024288, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.Tensor.inverse(Tensor([4, 2, 4, 67108865],"float64"), )
paddle.Tensor.inverse(Tensor([4, 2, 67108865, 4],"float64"), )
paddle.Tensor.inverse(Tensor([4, 536870913],"float64"), )
paddle.Tensor.inverse(Tensor([5, 858993459],"float32"), )
paddle.Tensor.inverse(Tensor([536870913, 4],"float64"), )
paddle.Tensor.inverse(Tensor([858993459, 5],"float32"), )
paddle.Tensor.astype(Tensor([160, 12, 1500, 1500],"float32"), VarType(float32), )
paddle.nn.functional.group_norm(Tensor([89478486, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3, 79536432],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([6, 1, 3, 79536432, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([6, 1, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float32"), weight=Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 268435457, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 178956971, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 2, 178956971, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.Tensor.isnan(Tensor([1431655765, 3],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 2, 2, 178956971],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 2, 2, 2],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=0, )
paddle.Tensor.isnan(Tensor([178956971, 3, 4],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=2, padding=0, )
paddle.Tensor.isnan(Tensor([2, 1073741825],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=2, padding=1, )
paddle.Tensor.isnan(Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.isnan(Tensor([2, 268435457, 4],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.isnan(Tensor([2, 3, 357913942],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([2147483649],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([238609295, 3, 3],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.Tensor.isnan(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.Tensor.isnan(Tensor([3, 238609295, 3],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.isnan(Tensor([3, 3, 238609295],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.astype(Tensor([195, 144, 1, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([195, 144, 1, 392, 392],"float32"), Dtype(float32), )
paddle.Tensor.isnan(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.Tensor.isnan(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), )
paddle.Tensor.isnan(Tensor([306783379, 7],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.isnan(Tensor([4, 1073741824],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([4, 536870913],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([4, 7, 76695845],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([4, 89478486, 6],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.Tensor.isnan(Tensor([4294967295],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.isnan(Tensor([5, 107374183, 4],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.isnan(Tensor([5, 3, 143165577],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([51130564, 42],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 3, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.isnan(Tensor([51130564, 7, 6],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.Tensor.isnan(Tensor([715827883, 3],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.Tensor.item(Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.item(Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.Tensor.item(Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([1, 79536432, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=0, )
paddle.Tensor.item(Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.Tensor.item(Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=2, padding=1, )
paddle.Tensor.item(Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3, 39768216],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([6, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([6, 1, 3, 39768216, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.Tensor.item(Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([6, 1, 39768216, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([6, 13256072, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.Tensor.item(Tensor([2147483649],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([6],"float64"), stride=2, padding=0, groups=3, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.Tensor.item(Tensor([2147483649],"int64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 4],"float64"), weight=Tensor([89478486, 3, 2, 2, 2],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.Tensor.item(Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.Tensor.item(Tensor([4294967295],"bool"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.Tensor.item(Tensor([4294967295],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.Tensor.item(Tensor([4294967295],"int32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.Tensor.less(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.Tensor.less(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.Tensor.less(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float32"), weight=Tensor([6, 1, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.Tensor.less(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 33554432, 4, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 22369622, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 22369622, 3],"float64"), weight=Tensor([2, 3, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 16777217],"float64"), weight=Tensor([2, 3, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 33554432],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 21474837],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 79536432],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 79536432, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 79536432, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="none", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float32"), weight=Tensor([2, 79536432, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 21474837],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 42949673, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([42949673, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 42949673, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3, 39768216],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float64"), weight=Tensor([2, 3, 3, 39768216, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float64"), weight=Tensor([2, 3, 39768216, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float64"), weight=Tensor([2, 39768216, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 4, 3],"float64"), weight=Tensor([26512144, 3, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), stride=1, padding=0, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655765, 3],"float32"), Tensor([3, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 44739243, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 44739243, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.hinge_embedding_loss(Tensor([238609295, 3, 3],"float64"), Tensor([4, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([2, 44739243, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float32"), Tensor([3, 1431655765],"float32"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), stride=1, padding=0, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float32"), weight=Tensor([6, 1, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), stride=2, padding=0, groups=3, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([178956971, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([178956971, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([178956971, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([178956971, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 178956971, 3],"float64"), Tensor([4, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 134217729, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 178956971],"float64"), Tensor([4, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 134217729, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 134217729, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 134217729, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 3, 59652324],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 134217729, 2, 2, 2],"float64"), Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 178956971, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 178956971, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 178956971, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([4, 44739243, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 134217729],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 134217729],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 4],"float64"), Tensor([59652324, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 268435456],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 268435456],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 59652324],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3],"float64"), Tensor([238609295, 3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3],"float64"), Tensor([4, 178956971, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3],"float64"), Tensor([4, 3, 178956971],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 44739243, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float64"), Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,1,1,], output_padding=1, stride=list[2,2,2,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 89478486, 2, 3],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.isin(Tensor([4, 1073741824],"bfloat16"), Tensor([2, 1073741824],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 1073741824],"bfloat16"), Tensor([2, 1073741824],"bfloat16"), False, True, )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([42949673, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 178956971, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 178956971, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 178956971, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 178956971, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 178956971, 2, 2],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 19884108, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 178956971, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 178956971, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 178956971, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 178956971, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 178956971, 2],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 178956971],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="none", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 178956971],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([59652324, 3, 3, 4],"float64"), Tensor([4, 3, 3, 4],"float64"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 178956971],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 178956971],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 178956971],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([207127, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), reduction="none", margin=1.0, name=None, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.instance_norm(Tensor([1048576, 32, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([10737419, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1073742, 100, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1431656, 100, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.Tensor.astype(Tensor([219, 128, 1, 392, 392],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([219, 128, 1, 392, 392],"float32"), Dtype(float32), )
paddle.nn.functional.instance_norm(Tensor([2, 100, 21474837],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 2147484, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 3579140],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([2147483649],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float64"), None, None, Tensor([2147483649],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 7158279],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 2684355],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5368710],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([2147483649],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float64"), None, None, Tensor([2147483649],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4294968, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 107374183, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 143165577, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 16777216, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 2147483648],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 32, 67108864],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 536870912, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 53687092, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 71582789, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2147484, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 2147483648],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 2147483648],"bfloat16"), False, True, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2863312, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([33554432, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([4, 100, 10737419],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 16],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 2684355, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 2684355, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 2684355],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 2684355],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float16"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100],"float32"), None, None, Tensor([100],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 100],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([4, 1073741824],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108864, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108864, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108864, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([65536, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([8, 262144, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 828505],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([8, 32, 262144, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 828505, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 524288],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 828505, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([4294967295],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 2, 3, 3, 79536432],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 64],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 2, 3, 79536432, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.isin(Tensor([536870912, 8],"bfloat16"), Tensor([536870912, 3],"bfloat16"), False, False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 2, 79536432, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.instance_norm(x=Tensor([178956971, 2, 2, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([178956971, 2, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.isin(Tensor([536870912, 8],"bfloat16"), Tensor([536870912, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, False, )
paddle.nn.functional.instance_norm(x=Tensor([178956971, 2, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 1, 1073741825],"float64"), )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 178956971, 2, 3],"float64"), )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([67108864, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([67108864, 256],"bfloat16"), False, True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 178956971, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 256],"bfloat16"), False, False, )
paddle.nn.functional.instance_norm(x=Tensor([2, 178956971, 2, 3],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 256],"bfloat16"), False, True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 178956971, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 178956971, 3],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 536870912],"bfloat16"), False, False, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 178956971, 3],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 536870912],"bfloat16"), False, True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 268435457],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 268435457],"float64"), weight=None, bias=None, data_format="NCHW", )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([16777216, 256],"bfloat16"), False, False, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 268435457],"float64"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([16777216, 256],"bfloat16"), False, True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870912],"float32"), )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 1073741824],"bfloat16"), False, False, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float32"), )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 1073741824],"bfloat16"), False, True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 3],"float64"), )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([715827883, 1, 3],"float64"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 828505, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([79536432, 2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.unstack(Tensor([2147483648, 2],"float32"), 1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.Tensor.astype(Tensor([389, 300, 192, 192],"bool"), type(bool), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.logsumexp(Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 2, 3, 3, 39768216],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 2, 3, 39768216, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 2, 39768216, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 2147483649],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([39768216, 2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float64"), Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 89478486],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 89478486],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 89478486],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 89478486],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 89478486],"float64"), Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 89478486, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 89478486, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 89478486, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 89478486, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 89478486, 2],"float64"), Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 19884108, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 19884108],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([178956971, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([107374183, 40],"float16"), Tensor([3, 1],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 11184811, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 11184811],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.Tensor.astype(Tensor([463, 300, 176, 176],"bool"), type(bool), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([79536432, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 89478486, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 89478486, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 89478486, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 89478486, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 89478486, 2, 2],"float64"), Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([2],"float64"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([107374183, 40],"float32"), Tensor([3, 1],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([4294967295],"float32"), )
paddle.masked_fill(Tensor([120],"float32"), Tensor([300, 14316558],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([1431655765, 3],"float32"), Tensor([50, 3],"bool"), Tensor([1],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.masked_fill(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([4294967295],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 5592406, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.masked_fill(Tensor([168],"float16"), Tensor([4294967295],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 5592406, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.masked_fill(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([4294967295],"float32"), )
paddle.masked_fill(Tensor([168],"float32"), Tensor([4294967295],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([3, 1431655765],"float32"), Tensor([1, 3],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([4294967295],"float32"), )
paddle.masked_fill(Tensor([3, 3],"float32"), Tensor([1, 4294967295],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([39768216, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([536870912, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 89478486],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([3, 40],"float16"), Tensor([3, 1431655765],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([4294967295],"float16"), )
paddle.masked_fill(Tensor([3, 40],"float16"), Tensor([4294967295, 1],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([3, 40],"float32"), Tensor([3, 1431655765],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.masked_fill(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.masked_fill(Tensor([3, 40],"float32"), Tensor([4294967295, 1],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.masked_fill(Tensor([300, 14316558],"float16"), Tensor([300, 40],"bool"), Tensor([1],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.masked_fill(Tensor([300, 14316558],"float32"), Tensor([40],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([107374183, 40],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 5592406, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 5592406, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 5592406, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 5592406, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 4194304],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 4194304],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([4294967295],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 89478486, 2, 2, 3],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 9942054, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([4294967295],"float32"), )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([4294967295],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.masked_fill(Tensor([3314018, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.masked_fill(Tensor([3314018, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.masked_fill(Tensor([4294967295, 1],"float16"), Tensor([300, 40],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([4294967295],"float16"), Tensor([168],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([2097152, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2796203, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 5592406, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 5592406, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 5592406],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.Tensor.astype(Tensor([775, 300, 136, 136],"bool"), type(bool), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([31814573, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([39768216, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.masked_fill(Tensor([4294967295],"float32"), Tensor([168],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.masked_fill(Tensor([4294967295],"float32"), Tensor([300, 120],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([50, 3],"float32"), Tensor([1431655765, 3],"bool"), Tensor([1],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.masked_fill(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([4294967295],"float32"), )
paddle.masked_fill(Tensor([50, 3],"float32"), Tensor([50, 85899346],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([50, 85899346],"float32"), Tensor([50, 3],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 29826162, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 29826162, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 29826162],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_fill(Tensor([6, 4418691, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 4418691, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.masked_fill(Tensor([6, 8, 4971027, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 4971027, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([3314018, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 4418691, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 4971027, 18],"bool"), Tensor([1],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([4294967295],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 9942054],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([3314018, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 4418691, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 4971027, 18],"bool"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([4294967295],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 9942054],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 9942054],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 9942054],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_scatter(Tensor([107374183, 40],"float16"), Tensor([107374183, 1],"bool"), Tensor([107374183, 300],"float16"), )
paddle.masked_scatter(Tensor([107374183, 40],"float16"), Tensor([3, 1],"bool"), Tensor([300, 300],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.masked_scatter(Tensor([107374183, 40],"float32"), Tensor([107374183, 1],"bool"), Tensor([107374183, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.masked_scatter(Tensor([107374183, 40],"float32"), Tensor([3, 1],"bool"), Tensor([300, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([14316558, 300],"float32"), )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([300, 14316558],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 14316558],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 1],"bool"), Tensor([1431655765, 30],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.masked_scatter(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"bool"), Tensor([1431655765, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.masked_scatter(Tensor([1431655765, 3],"float32"), Tensor([30, 1],"bool"), Tensor([30, 30],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.masked_scatter(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([168],"float16"), Tensor([4294967295],"bool"), Tensor([300, 300],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 2097152],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([14316558, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([300, 14316558],"float32"), )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([4294967295],"bool"), Tensor([300, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([3, 1431655765],"float16"), Tensor([3, 1431655765],"bool"), Tensor([300, 1431655765],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([3, 1431655765],"float32"), Tensor([1, 1431655765],"bool"), Tensor([300, 1431655765],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.masked_scatter(Tensor([3, 1431655765],"float32"), Tensor([1, 3],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"bool"), Tensor([300, 1431655765],"float32"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([14316558, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([31814573, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([300, 14316558],"float32"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 4294967295],"bool"), Tensor([300, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 40],"float16"), Tensor([3, 1431655765],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float16"), Tensor([4294967295, 1],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1431655765],"bool"), Tensor([300, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([14316558, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([300, 14316558],"float32"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([4294967295, 1],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 143165577],"bool"), Tensor([30, 30],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([143165577, 30],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([30, 143165577],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([4294967295, 1],"bool"), Tensor([30, 30],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.masked_scatter(Tensor([300, 14316558],"float16"), Tensor([300, 40],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([300, 14316558],"float32"), Tensor([40],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([300, 1],"float16"), Tensor([107374183, 40],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([14316558, 300],"float32"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([300, 14316558],"float32"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([4294967295],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([3314018, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([3314018, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([4294967295, 1],"float16"), Tensor([300, 40],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([4294967295, 1],"float16"), Tensor([4294967295, 40],"bool"), Tensor([4294967295, 300],"float16"), )
paddle.masked_scatter(Tensor([4294967295],"float16"), Tensor([168],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([4294967295],"float32"), Tensor([168],"bool"), Tensor([300, 300],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.masked_scatter(Tensor([4294967295],"float32"), Tensor([300, 120],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 4418691, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([6, 4418691, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([6, 8, 4971027, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 4971027, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([3314018, 8, 9, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 4418691, 9, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 4971027, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([14316558, 300],"float16"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 9942054],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([3314018, 8, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 4418691, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 4971027, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([14316558, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 14316558],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 9942054],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 9942054],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 9942054],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 25],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 26],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 32],"float32"), Tensor([1, 1, 186737709, 23],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 23, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 23, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 24, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 24, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 25, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 25, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 26, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 26, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 32, 23],"float32"), )
paddle.matmul(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 32, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 1, 1024],"float32"), Tensor([50304, 85381],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 134217728, 32],"float32"), Tensor([1, 1, 134217728, 23],"float32"), )
paddle.matmul(Tensor([1, 1, 165191050, 26],"float32"), Tensor([1, 1, 165191050, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.matmul(Tensor([1, 1, 165191050, 26],"float32"), Tensor([1, 1, 26, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.matmul(Tensor([1, 1, 171798692, 25],"float32"), Tensor([1, 1, 171798692, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.matmul(Tensor([1, 1, 171798692, 25],"float32"), Tensor([1, 1, 25, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.matmul(Tensor([1, 1, 178956971, 24],"float32"), Tensor([1, 1, 178956971, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(Tensor([6628036, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.matmul(Tensor([1, 1, 178956971, 24],"float32"), Tensor([1, 1, 24, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 186737709, 23],"float32"), Tensor([1, 1, 186737709, 32],"float32"), )
paddle.matmul(Tensor([1, 1, 186737709, 23],"float32"), Tensor([1, 1, 23, 32],"float32"), )
paddle.kthvalue(Tensor([4294967295],"float32"), 1, )
paddle.matmul(Tensor([1, 1, 32],"float32"), Tensor([100, 42949673],"float32"), transpose_y=True, )
paddle.kthvalue(Tensor([4294967295],"float32"), k=2, )
paddle.matmul(Tensor([1, 1, 32],"float32"), Tensor([21474837, 200],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 32],"float32"), Tensor([43383509, 99],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 32],"float32"), Tensor([99, 43383509],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 4294967295],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.matmul(Tensor([1, 1, 4294967295],"float16"), Tensor([64, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 4294967295],"float16"), Tensor([768, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([100, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([30000, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([32, 200],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([32, 99],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([50304, 1024],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([64, 32000],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 4294967295],"float32"), Tensor([99, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 1, 64],"float16"), Tensor([134218, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 64],"float16"), Tensor([192, 22369622],"float16"), False, True, )
paddle.nn.functional.conv3d_transpose(Tensor([89478486, 2, 2, 2, 3],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.matmul(Tensor([1, 1, 64],"float32"), Tensor([134218, 32000],"float32"), transpose_y=False, )
paddle.nn.functional.conv3d_transpose(Tensor([89478486, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([89478486, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.matmul(Tensor([1, 1, 768],"float16"), Tensor([134218, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 1, 8],"float32"), Tensor([30000, 143166],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(Tensor([89478486, 3, 2, 2, 2],"float64"), Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.matmul(Tensor([1, 10, 32],"float32"), Tensor([99, 43383509],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([178956971, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 10, 429496730],"float32"), Tensor([99, 32],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([178956971, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([178956971, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([178956971, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1, 134217728, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1, 429496730, 10],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 134217729, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 134217729, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 134217729, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 134217729, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 134217729, 2, 2, 2],"float64"), weight=Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 178956971, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 178956971, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 178956971, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 178956971, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 178956971, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 178956971, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 134217729],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 134217729],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 134217729],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 268435456],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 268435456],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 268435456],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 12],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 21474837],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 8],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([4, 2],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([40, 12],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([40, 6],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([40, 8],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 32],"float32"), Tensor([429496730, 10],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 178956971, 12],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 268435457, 8],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 357913942, 6],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 40, 53687092],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([178956971, 12],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([268435457, 8],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([40, 53687092],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([4473925, 40, 12],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([6710887, 40, 8],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([8947849, 40, 6],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 10],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 79536432, 3],"float64"), bias=Tensor([3],"float64"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 42949673],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 79536432, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([32, 10],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 107374183, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 10],"float32"), Tensor([214748365, 20],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([1, 134217728, 1, 32],"float32"), Tensor([1, 134217728, 32, 23],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_padding=1, stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 134217728, 32],"float32"), Tensor([32, 99],"float32"), transpose_y=False, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 89478486, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 134217728, 32],"float32"), Tensor([99, 32],"float32"), transpose_y=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 143165577, 5, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([1, 143165577, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 89478486, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 165191050, 1, 26],"float32"), Tensor([1, 1, 26, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 89478486, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 165191050, 1, 26],"float32"), Tensor([1, 165191050, 26, 32],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 171798692, 1, 25],"float32"), Tensor([1, 1, 25, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 268435456, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 171798692, 1, 25],"float32"), Tensor([1, 171798692, 25, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 268435456, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 178956971, 1, 24],"float32"), Tensor([1, 1, 24, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 268435456, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 268435456, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 178956971, 1, 24],"float32"), Tensor([1, 178956971, 24, 32],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 186737709, 1, 23],"float32"), Tensor([1, 1, 23, 32],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 268435456, 2, 2, 2],"float32"), weight=Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 186737709, 1, 23],"float32"), Tensor([1, 186737709, 23, 32],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 178956971, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.matmul(Tensor([1, 18],"float32"), Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 178956971, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([1, 18],"float32"), Tensor([4294967295],"float32"), transpose_x=True, transpose_y=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 178956971, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 18],"float64"), Tensor([119304648, 18],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 178956971, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 178956971, 2, 2],"float32"), weight=Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 178956971, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.matmul(Tensor([1, 18],"float64"), Tensor([238609295, 9],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 178956971, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 178956971, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([18, 18],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 178956971, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([18, 2147483649],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([18, 9],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 178956971, 2],"float32"), weight=Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 178956971],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 178956971],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 178956971],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 178956971],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([2, 2147483649],"float64"), )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([2, 2],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 178956971],"float32"), weight=Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([12, 357913942],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([159072863, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([16, 268435456],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([2147483648, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([3, 1431655765],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([4, 1073741824],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([9, 477218589],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 143165577, 5],"float16"), Tensor([1, 3, 2, 143165577, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 143165577, 5],"float32"), Tensor([1, 3, 2, 143165577, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 178956971, 4],"float32"), Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float16"), Tensor([1, 3, 2, 5, 143165577],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 4, 143165577],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 5, 143165577],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 134217728, 2, 4, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 178956971],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 89478486, 4, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 159072863, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([44739243, 3, 2, 4, 4],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 107374183, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 3, 2, 178956971, 4],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 3, 71582789, 5, 4],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 107374183, 2, 5, 4],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 3, 71582789, 5, 4],"float32"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.matmul(Tensor([1, 3, 238609295, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.matmul(Tensor([1, 3, 238609295, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 286331153],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([1, 3, 5, 286331153],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float16"), Tensor([536870912, 8],"float16"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float16"), Tensor([6, 715827883],"float16"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float32"), Tensor([536870912, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float32"), Tensor([6, 715827883],"float32"), )
paddle.matmul(Tensor([1, 3, 57266231, 5, 5],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 57266231, 5, 5],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 159072863, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 3, 71582789, 5, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 2, 1073741824],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 2, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 3, 1073741824],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 3, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 4, 1073741824],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 5, 1073741824],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 1073741824],"float32"), Tensor([1, 4, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 107374183, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 134217728, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 178956971, 3, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 4, 1, 1073741824],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 4, 2, 536870912],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 4, 3, 357913942],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 159072863],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 4, 4, 268435456],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=1, dilation=1, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 4, 5, 214748365],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([1, 4, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), transpose_y=True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 3, 3, 79536432],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 3, 79536432, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 79536432, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([79536432, 2, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([1, 4294967295],"float16"), Tensor([64, 151936],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 4294967295],"float16"), Tensor([64, 4294967295],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([10, 20],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([10, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([12, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([12, 4294967295],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([16, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([16, 4294967295],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([18],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([2, 4294967295],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([2, 4],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([3, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([3, 4294967295],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([4, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([4, 4294967295],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([9, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([9, 4294967295],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 42949673, 100],"float32"), Tensor([1, 42949673, 10],"float32"), )
paddle.matmul(Tensor([1, 42949673, 100],"float32"), Tensor([1, 42949673, 32],"float32"), )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 4, 1, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 4, 2, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 4, 3, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 4, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 4, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 536870912, 2, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 536870912, 3, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 536870912, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 536870912, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 53687092, 12],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 53687092, 6],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 53687092, 8],"float64"), )
paddle.matmul(Tensor([1, 64],"float16"), Tensor([28269, 151936],"float16"), transpose_y=False, )
paddle.matmul(Tensor([1, 67108864, 64],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.matmul(Tensor([1, 85899346, 2, 5, 5],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.ldexp(Tensor([10, 20, 1],"float32"), Tensor([4294967295],"int32"), )
paddle.matmul(Tensor([1, 85899346, 2, 5, 5],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.ldexp(Tensor([207],"float32"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([209],"int64"), Tensor([4294967295],"int32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 79536432],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.ldexp(Tensor([210],"int32"), Tensor([4294967295],"int32"), )
paddle.matmul(Tensor([100, 42949673],"float16"), Tensor([1024, 42949673],"float16"), False, True, )
paddle.matmul(Tensor([100, 42949673],"float16"), Tensor([1024, 512],"float16"), False, True, )
paddle.matmul(Tensor([100, 512],"float16"), Tensor([1024, 4194304],"float16"), False, True, )
paddle.matmul(Tensor([101, 42524429],"float16"), Tensor([192, 42524429],"float16"), False, True, )
paddle.matmul(Tensor([101, 42524429],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.matmul(Tensor([101, 64],"float16"), Tensor([192, 22369622],"float16"), False, True, )
paddle.matmul(Tensor([101, 64],"float16"), Tensor([67108864, 64],"float16"), False, True, )
paddle.matmul(Tensor([104, 41297763],"float16"), Tensor([1024, 41297763],"float16"), False, True, )
paddle.matmul(Tensor([104, 41297763],"float16"), Tensor([1024, 512],"float16"), False, True, )
paddle.matmul(Tensor([104, 512],"float16"), Tensor([1024, 4194304],"float16"), False, True, )
paddle.matmul(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([10],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([10],"float32"), Tensor([4294967295],"float32"), True, True, )
paddle.matmul(Tensor([119304648, 18],"float64"), Tensor([119304648, 18],"float64"), )
paddle.matmul(Tensor([119304648, 18],"float64"), Tensor([119304648, 9],"float64"), )
paddle.ldexp(Tensor([2147483649],"float64"), Tensor([247],"int32"), )
paddle.ldexp(Tensor([2147483649],"int64"), Tensor([209],"int32"), )
paddle.matmul(Tensor([119304648, 36],"float32"), Tensor([3],"float32"), transpose_x=True, transpose_y=False, )
paddle.ldexp(Tensor([2147483649],"int64"), Tensor([4294967295],"int32"), )
paddle.matmul(Tensor([12, 32],"float16"), Tensor([12, 357913942],"float16"), transpose_x=True, )
paddle.matmul(Tensor([12, 32],"float16"), Tensor([33554432, 128],"float16"), transpose_x=True, )
paddle.matmul(Tensor([12, 32],"float32"), Tensor([12, 357913942],"float32"), transpose_x=True, )
paddle.ldexp(Tensor([247],"float64"), Tensor([4294967295],"int32"), )
paddle.matmul(Tensor([12, 32],"float32"), Tensor([33554432, 128],"float32"), transpose_x=True, )
paddle.ldexp(Tensor([4294967295],"float32"), Tensor([207],"int32"), )
paddle.ldexp(Tensor([4294967295],"int32"), Tensor([210],"int32"), )
paddle.matmul(Tensor([123, 34918434],"float16"), Tensor([2304, 34918434],"float16"), False, True, )
paddle.matmul(Tensor([123, 34918434],"float16"), Tensor([2304, 768],"float16"), False, True, )
paddle.matmul(Tensor([123, 768],"float16"), Tensor([2304, 1864136],"float16"), False, True, )
paddle.ldexp(Tensor([5, 6, 6],"float64"), Tensor([4294967295],"int32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float16"), Tensor([128, 1, 16, 32, 65536],"float16"), )
paddle.ldexp(Tensor([5, 6, 71582789],"float64"), Tensor([6],"int32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float16"), Tensor([128, 1, 16, 42800, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float16"), Tensor([128, 1, 21400, 32, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float16"), Tensor([128, 1338, 16, 32, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float16"), Tensor([171197, 1, 16, 32, 49],"float16"), )
paddle.less(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.less(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float32"), Tensor([128, 1, 16, 32, 65536],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float32"), Tensor([128, 1, 16, 42800, 49],"float32"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float32"), Tensor([128, 1, 21400, 32, 49],"float32"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float32"), Tensor([128, 1338, 16, 32, 49],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 32],"float32"), Tensor([171197, 1, 16, 32, 49],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 42800],"float16"), Tensor([128, 1, 16, 32, 42800],"float16"), )
paddle.less(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 42800],"float16"), Tensor([128, 1, 16, 32, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 16, 49, 42800],"float32"), Tensor([128, 1, 16, 32, 42800],"float32"), )
paddle.less(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 49, 42800],"float32"), Tensor([128, 1, 16, 32, 49],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 65536, 32],"float16"), Tensor([128, 1, 16, 32, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 16, 65536, 32],"float16"), Tensor([128, 1, 16, 65536, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 16, 65536, 32],"float32"), Tensor([128, 1, 16, 32, 49],"float32"), )
paddle.less(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.matmul(Tensor([128, 1, 16, 65536, 32],"float32"), Tensor([128, 1, 16, 65536, 49],"float32"), )
paddle.matmul(Tensor([128, 1, 21400, 49, 32],"float16"), Tensor([128, 1, 16, 32, 49],"float16"), )
paddle.matmul(Tensor([128, 1, 21400, 49, 32],"float16"), Tensor([128, 1, 21400, 32, 49],"float16"), )
paddle.less(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.matmul(Tensor([128, 1, 21400, 49, 32],"float32"), Tensor([128, 1, 16, 32, 49],"float32"), )
paddle.matmul(Tensor([128, 1, 21400, 49, 32],"float32"), Tensor([128, 1, 21400, 32, 49],"float32"), )
paddle.matmul(Tensor([128, 1338, 16, 49, 32],"float16"), Tensor([128, 1, 16, 32, 49],"float16"), )
paddle.matmul(Tensor([128, 1338, 16, 49, 32],"float16"), Tensor([128, 1338, 16, 32, 49],"float16"), )
paddle.less(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.matmul(Tensor([128, 1338, 16, 49, 32],"float32"), Tensor([128, 1, 16, 32, 49],"float32"), )
paddle.less(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 79536432, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([128, 1338, 16, 49, 32],"float32"), Tensor([128, 1338, 16, 32, 49],"float32"), )
paddle.matmul(Tensor([13, 2, 16, 4, 16],"float32"), Tensor([1048576, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.less(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.matmul(Tensor([13, 2, 16, 4, 16],"float32"), Tensor([13, 161320, 16, 8, 16],"float32"), transpose_y=True, )
paddle.less(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.matmul(Tensor([13, 2, 16, 4, 16],"float32"), Tensor([13, 2, 1290556, 8, 16],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.matmul(Tensor([13, 2, 16, 4, 16],"float32"), Tensor([13, 2, 16, 8, 1290556],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.matmul(Tensor([13, 2, 16, 4, 2581111],"float32"), Tensor([13, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 16, 4, 2581111],"float32"), Tensor([13, 2, 16, 8, 2581111],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.matmul(Tensor([13, 2, 2581111, 4, 16],"float32"), Tensor([13, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 2581111, 4, 16],"float32"), Tensor([13, 2, 2581111, 8, 16],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([1],"int32"), Tensor([4294967295],"int32"), )
paddle.matmul(Tensor([13, 2, 2581111, 4, 16],"float32"), Tensor([13, 2, 8, 8, 16],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.less_equal(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.matmul(Tensor([13, 2, 8, 4, 16],"float32"), Tensor([13, 2, 1290556, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 8, 4, 16],"float32"), Tensor([13, 2, 8, 8, 2581111],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 8, 4, 16],"float32"), Tensor([13, 322639, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 8, 4, 16],"float32"), Tensor([2097152, 2, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 8, 4, 5162221],"float32"), Tensor([13, 2, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 2, 8, 4, 5162221],"float32"), Tensor([13, 2, 8, 8, 5162221],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 322639, 16, 4, 16],"float32"), Tensor([13, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 322639, 16, 4, 16],"float32"), Tensor([13, 322639, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 645278, 8, 4, 16],"float32"), Tensor([13, 2, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 645278, 8, 4, 16],"float32"), Tensor([13, 645278, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 7, 128],"float32"), Tensor([13, 7, 47197443],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 7, 128],"float32"), Tensor([4793491, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 7, 1],"float32"), Tensor([13, 14, 23598722],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.matmul(Tensor([13, 7, 1],"float32"), Tensor([306783379, 14, 1],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.matmul(Tensor([13, 7, 47197443],"float32"), Tensor([13, 14, 1],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.matmul(Tensor([13, 7, 47197443],"float32"), Tensor([13, 14, 47197443],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.matmul(Tensor([13, 7, 47197443],"float32"), Tensor([13, 7, 128],"float32"), transpose_y=True, )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.matmul(Tensor([131, 32786010],"float16"), Tensor([2304, 32786010],"float16"), False, True, )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.matmul(Tensor([131, 32786010],"float16"), Tensor([2304, 768],"float16"), False, True, )
paddle.matmul(Tensor([131, 768],"float16"), Tensor([2304, 1864136],"float16"), False, True, )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.matmul(Tensor([134217728, 1, 1, 32],"float32"), Tensor([134217728, 1, 32, 23],"float32"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.matmul(Tensor([134217728, 32],"float16"), Tensor([12, 128],"float16"), transpose_x=True, )
paddle.matmul(Tensor([134217728, 32],"float16"), Tensor([134217728, 128],"float16"), transpose_x=True, )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.matmul(Tensor([134217728, 32],"float32"), Tensor([12, 128],"float32"), transpose_x=True, )
paddle.matmul(Tensor([134217728, 32],"float32"), Tensor([134217728, 128],"float32"), transpose_x=True, )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.less_equal(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.less_equal(Tensor([4294967295],"int32"), Tensor([1],"int32"), )
paddle.less_equal(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.less_equal(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.less_equal(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.less_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_equal(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.less_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.less_equal(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.less_equal(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.less_equal(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 79536432, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 2, 3, 3, 39768216],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([2147483649],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 2, 3, 39768216, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.less_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 2, 39768216, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.less_equal(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.less_equal(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.less_equal(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.less_equal(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.less_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.less_equal(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([1, 128, 33554432],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([1, 33554432, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([1, 128, 16777217],"int64"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([1, 16777217, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 16777217],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 16777217],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([1, 128, 33554432],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([1, 16777216, 256],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([1, 128, 16777217],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([1, 8388609, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 33554432],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 33554432],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 16777216, 256],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 16777217, 128],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 33554432, 128],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 8388609, 256],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less_than(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_than(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.less_than(Tensor([1],"int64"), Tensor([2147483649],"int64"), )
paddle.less_than(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.less_than(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.matmul(Tensor([134217728, 4, 1, 8],"float32"), Tensor([134217728, 4, 2, 8],"float32"), transpose_y=True, )
paddle.less_than(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.matmul(Tensor([134217728, 4, 1, 8],"float32"), Tensor([134217728, 4, 3, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([134217728, 4, 1, 8],"float32"), Tensor([134217728, 4, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([134217728, 4, 1, 8],"float32"), Tensor([134217728, 4, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13421773, 10, 32],"float32"), Tensor([99, 32],"float32"), transpose_y=True, )
paddle.less_than(Tensor([262144, 1, 128, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), False, False, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.less_than(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([3, 26512144, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.less_than(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([39768216, 2, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.less_than(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.less_than(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float64"), weight=Tensor([79536432, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.less_than(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 89478486],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 89478486],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([16, 10, 104858, 64, 2, 2],"float32"), Tensor([16, 10, 64, 64, 2, 1],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 89478486],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 89478486],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.less_than(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([262144, 1, 128, 128],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 89478486],"float64"), weight=Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.matmul(Tensor([16, 10, 64, 104858, 2, 2],"float32"), Tensor([16, 10, 64, 64, 2, 1],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 89478486, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 1, 128, 4194304],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 89478486, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 2],"float32"), Tensor([16, 10, 209716, 64, 2, 1],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 1, 4194304, 128],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 89478486, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 2],"float32"), Tensor([16, 10, 64, 209716, 2, 1],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 89478486, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.less_than(Tensor([8, 1, 128, 4194304],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 89478486, 2],"float64"), weight=Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 89478486, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 2],"float32"), Tensor([16, 10, 64, 64, 6554, 1],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 89478486, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 2],"float32"), Tensor([16, 32768, 64, 64, 2, 1],"float32"), )
paddle.less_than(Tensor([8, 1, 4194304, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 89478486, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 2],"float32"), Tensor([52429, 10, 64, 64, 2, 1],"float32"), )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 3277],"float32"), Tensor([16, 10, 64, 64, 2, 1],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 89478486, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 89478486, 2, 2],"float64"), weight=Tensor([3, 2, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=0, dilation=1, )
paddle.matmul(Tensor([16, 10, 64, 64, 2, 3277],"float32"), Tensor([16, 10, 64, 64, 2, 3277],"float32"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 89478486, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), output_size=list[4,4,4,], stride=2, padding=list[1,1,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.less_than(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 89478486, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.matmul(Tensor([16, 10, 64, 64, 3277, 2],"float32"), Tensor([16, 10, 64, 64, 3277, 1],"float32"), )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([16, 16, 128, 65537],"float64"), False, True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([89478486, 2, 2, 2, 3],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([89478486, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=1, dilation=1, )
paddle.less_than(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.nn.functional.conv3d_transpose(x=Tensor([89478486, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([1],"float64"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([16, 65537, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([65537, 16, 128, 16],"float64"), False, True, )
paddle.nn.functional.conv3d_transpose(x=Tensor([89478486, 3, 2, 2, 2],"float64"), weight=Tensor([3, 1, 3, 3, 3],"float64"), bias=Tensor([3],"float64"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([16, 16, 128, 65537],"float64"), False, True, )
paddle.less_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([16, 32769, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([32769, 16, 128, 32],"float64"), False, True, )
paddle.less_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.less_than(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.less_than(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_than(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.less_than(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.less_than(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.less_than(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.less_than(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.less_than(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.less_than(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.less_than(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.less_than(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.less_than(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16, 16385, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16385, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([16, 8193, 512, 32],"float64"), False, True, )
paddle.less_than(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([8193, 16, 512, 32],"float64"), False, True, )
paddle.less_than(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.nn.functional.cosine_embedding_loss(Tensor([10, 3],"float32"), Tensor([10, 3],"float32"), Tensor([2147483649],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.linalg.corrcoef(Tensor([2147483649],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([16, 4097, 512, 64],"float64"), False, True, )
paddle.linalg.corrcoef(Tensor([2147483649],"float64"), rowvar=False, )
paddle.nn.functional.cosine_embedding_loss(Tensor([10, 3],"float32"), Tensor([10, 429496730],"float32"), Tensor([10],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([4097, 16, 512, 64],"float64"), False, True, )
paddle.nn.functional.cosine_embedding_loss(Tensor([10, 3],"float32"), Tensor([1431655765, 3],"float32"), Tensor([10],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.nn.functional.cosine_embedding_loss(Tensor([10, 429496730],"float32"), Tensor([10, 3],"float32"), Tensor([10],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.nn.functional.cosine_embedding_loss(Tensor([10],"float32"), Tensor([10],"float32"), Tensor([2147483649],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.nn.functional.cosine_embedding_loss(Tensor([10],"float32"), Tensor([4294967295],"float32"), Tensor([1],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.nn.functional.cosine_embedding_loss(Tensor([1431655765, 3],"float32"), Tensor([10, 3],"float32"), Tensor([10],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.linalg.corrcoef(Tensor([4294967295],"float32"), )
paddle.nn.functional.cosine_embedding_loss(Tensor([4294967295],"float32"), Tensor([10],"float32"), Tensor([1],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.matmul(Tensor([16, 16384, 64, 64, 2, 2],"float32"), Tensor([16, 10, 64, 64, 2, 1],"float32"), )
paddle.linalg.corrcoef(Tensor([4294967295],"float32"), rowvar=False, )
paddle.nn.functional.cosine_embedding_loss(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), Tensor([2147483649],"int64"), margin=0.5, reduction="mean", name=None, )
paddle.matmul(Tensor([16, 16385, 512, 16],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 32769, 128, 32],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 4097, 512, 64],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([5, 3],"float64"), Tensor([4294967295],"int32"), margin=0.5, reduction="mean", )
paddle.matmul(Tensor([16, 65537, 128, 16],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([5, 3],"float64"), Tensor([4294967295],"int32"), margin=0.5, reduction="none", )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([5, 3],"float64"), Tensor([4294967295],"int32"), margin=0.5, reduction="sum", )
paddle.matmul(Tensor([16, 8193, 512, 32],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([5, 429496730],"float64"), Tensor([5],"int32"), margin=0.5, reduction="mean", )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([5, 429496730],"float64"), Tensor([5],"int32"), margin=0.5, reduction="none", )
paddle.matmul(Tensor([16385, 16, 512, 16],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([5, 429496730],"float64"), Tensor([5],"int32"), margin=0.5, reduction="sum", )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([715827883, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="mean", )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([715827883, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="none", )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 3],"float64"), Tensor([715827883, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="sum", )
paddle.matmul(Tensor([165191050, 1, 1, 26],"float32"), Tensor([1, 1, 26, 32],"float32"), )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 429496730],"float64"), Tensor([5, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="mean", )
paddle.matmul(Tensor([165191050, 1, 1, 26],"float32"), Tensor([165191050, 1, 26, 32],"float32"), )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 429496730],"float64"), Tensor([5, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="none", )
paddle.matmul(Tensor([171197, 1, 16, 49, 32],"float16"), Tensor([128, 1, 16, 32, 49],"float16"), )
paddle.nn.functional.cosine_embedding_loss(Tensor([5, 429496730],"float64"), Tensor([5, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="sum", )
paddle.linalg.eig(Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([171197, 1, 16, 49, 32],"float16"), Tensor([171197, 1, 16, 32, 49],"float16"), )
paddle.nn.functional.cosine_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([5, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="mean", )
paddle.nn.functional.cosine_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([5, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="none", )
paddle.matmul(Tensor([171197, 1, 16, 49, 32],"float32"), Tensor([128, 1, 16, 32, 49],"float32"), )
paddle.nn.functional.cosine_embedding_loss(Tensor([715827883, 3],"float64"), Tensor([5, 3],"float64"), Tensor([5],"int32"), margin=0.5, reduction="sum", )
paddle.matmul(Tensor([171197, 1, 16, 49, 32],"float32"), Tensor([171197, 1, 16, 32, 49],"float32"), )
paddle.linalg.eig(Tensor([2, 1073741825],"float64"), )
paddle.matmul(Tensor([171798692, 1, 1, 25],"float32"), Tensor([1, 1, 25, 32],"float32"), )
paddle.matmul(Tensor([171798692, 1, 1, 25],"float32"), Tensor([171798692, 1, 25, 32],"float32"), )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([2147483649],"int64"), 0, "none", norm_by_times=False, )
paddle.matmul(Tensor([178956971, 1, 1, 24],"float32"), Tensor([1, 1, 24, 32],"float32"), )
paddle.linalg.eig(Tensor([3, 715827883],"float64"), )
paddle.matmul(Tensor([178956971, 1, 1, 24],"float32"), Tensor([178956971, 1, 24, 32],"float32"), )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([2147483649],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.linalg.eig(Tensor([715827883, 3],"float64"), )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([128, 33554432],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.linalg.eigh(Tensor([1073741824, 4],"float32"), "U", )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([171798692, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.linalg.eigh(Tensor([134217728, 32],"float32"), "L", )
paddle.matmul(Tensor([178956971, 3, 4],"float64"), Tensor([2, 5, 4],"float64"), False, True, )
paddle.linalg.eigh(Tensor([134217729, 4, 4],"float64"), "L", )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 838861],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.linalg.eigh(Tensor([171798692, 5, 5],"float32"), )
paddle.linalg.eigh(Tensor([2, 429496730, 5],"float32"), )
paddle.nn.functional.ctc_loss(Tensor([40, 16208, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.linalg.eigh(Tensor([2, 5, 429496730],"float32"), )
paddle.nn.functional.ctc_loss(Tensor([5065, 128, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.linalg.eigh(Tensor([268435456, 4, 4],"float32"), "L", )
paddle.linalg.eigh(Tensor([32, 134217728],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 1073741824],"float32"), "U", )
paddle.linalg.eigh(Tensor([4, 134217729, 4],"float64"), "L", )
paddle.linalg.eigh(Tensor([4, 268435456, 4],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 4, 134217729],"float64"), "L", )
paddle.matmul(Tensor([178956971, 4, 3],"float64"), Tensor([2, 4, 5],"float64"), True, False, )
paddle.linalg.eigh(Tensor([4, 4, 268435456],"float32"), "L", )
paddle.matmul(Tensor([178956971, 4, 3],"float64"), Tensor([2, 5, 4],"float64"), True, True, )
paddle.linalg.eigh(Tensor([4, 536870913],"float64"), "U", )
paddle.linalg.eigh(Tensor([5, 858993459],"float32"), )
paddle.linalg.eigh(Tensor([536870913, 4],"float64"), "U", )
paddle.linalg.eigh(Tensor([858993459, 5],"float32"), )
paddle.linalg.lu(Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([18, 238609295],"float32"), Tensor([18, 6],"float32"), transpose_x=False, transpose_y=True, )
paddle.linalg.lu(Tensor([1431655765, 3],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([1431655765, 3],"float32"), pivot=True, get_infos=True, )
paddle.matmul(Tensor([18, 6],"float32"), Tensor([18, 238609295],"float32"), transpose_x=False, transpose_y=True, )
paddle.matmul(Tensor([18, 6],"float32"), Tensor([715827883, 6],"float32"), transpose_x=False, transpose_y=True, )
paddle.matmul(Tensor([186737709, 1, 1, 23],"float32"), Tensor([1, 1, 23, 32],"float32"), )
paddle.matmul(Tensor([186737709, 1, 1, 23],"float32"), Tensor([186737709, 1, 23, 32],"float32"), )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), startend_row_indices=Tensor([1, 1, 21846, 1],"int32"), causal=True, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 262144],"float16"), startend_row_indices=Tensor([1, 1, 2048, 262144],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float16"), Tensor([1, 3, 1073741824, 4],"float16"), False, False, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float32"), Tensor([1, 3, 1073741824, 4],"float32"), False, False, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 262144],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 2147483648],"float16"), Tensor([1024, 512],"float16"), False, True, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 2097152],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 2147483648],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 4294967295, 1],"int32"), causal=True, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 2097152, 2048, 1],"int32"), causal=True, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([2097152, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 5, 214748365],"float64"), Tensor([1, 3, 2, 214748365],"float64"), False, False, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.nn.functional.flashmask_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([2731, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 5, 214748365],"float64"), Tensor([1, 3, 2, 4],"float64"), False, False, )
paddle.nn.functional.flashmask_attention(Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), startend_row_indices=Tensor([1, 1, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([1, 3, 2, 715827883],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([1, 3, 357913942, 4],"float16"), False, False, )
paddle.nn.functional.flashmask_attention(Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), startend_row_indices=Tensor([1, 5592406, 2048, 1],"int32"), causal=True, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([178956971, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([1, 3, 357913942, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([178956971, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float64"), Tensor([1, 3, 178956971, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float64"), Tensor([89478486, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float16"), Tensor([1, 3, 2, 429496730],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float32"), Tensor([1, 3, 2, 429496730],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float32"), Tensor([1, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 512],"float16"), Tensor([1024, 4194304],"float16"), False, True, )
paddle.matmul(Tensor([2, 1, 536870913, 2],"float64"), Tensor([1, 3, 536870913, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 64],"float16"), Tensor([192, 22369622],"float16"), False, True, )
paddle.matmul(Tensor([2, 1073741825],"float64"), Tensor([3],"float64"), False, False, )
paddle.matmul(Tensor([2, 107374183, 5, 2],"float64"), Tensor([1, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float16"), Tensor([2, 3, 1073741824],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float16"), Tensor([2, 3, 2],"float16"), False, False, )
paddle.nn.functional.fold(Tensor([3, 12, 59652324],"float64"), output_sizes=list[4,5,], kernel_sizes=list[2,2,], strides=list[1,1,], paddings=list[0,0,0,0,], dilations=list[1,1,], name=None, )
paddle.matmul(Tensor([2, 2, 1073741824],"float32"), Tensor([2, 3, 1073741824],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float32"), Tensor([2, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float16"), Tensor([2, 1073741824, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float16"), Tensor([715827883, 3, 2],"float16"), False, False, )
paddle.nn.functional.interpolate(Tensor([1, 116320, 181, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.matmul(Tensor([2, 2, 3],"float32"), Tensor([2, 1073741824, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float32"), Tensor([715827883, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([1, 1073741825, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([2, 536870913, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([357913942, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([1, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([1, 3, 536870913],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([2, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([2, 3, 536870913],"float64"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([3],"float16"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([64, 151936],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([64, 2147483648],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([64, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([768, 2147483648],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([768, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([1],"float32"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([3],"float32"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([50000, 2, 1],"float32"), )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float16"), Tensor([1, 214748365, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float32"), Tensor([1, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([2147483648, 2, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([50000, 85900, 1],"float32"), )
paddle.matmul(Tensor([2, 3, 1, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([2, 3, 1, 10],"float32"), Tensor([4294968, 1000],"float32"), )
paddle.matmul(Tensor([2, 3, 1, 715827883],"float32"), Tensor([10, 1000],"float32"), )
paddle.matmul(Tensor([2, 3, 1, 715827883],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([2, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([4],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([2, 429496730, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([2, 5, 429496730],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([214748365, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([214748365, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([2, 5, 429496730],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([214748365, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([107374183, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2, 5, 214748365],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 4, 715827883],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 5, 715827883],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([4],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([2, 5, 715827883],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([2, 33554432, 64],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([1, 357913942, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 357913942, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 357913942, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 3],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([2, 3],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([2, 3],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([2, 429496730, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([2, 5, 429496730],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([214748365, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([214748365, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 429496730, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 5, 429496730],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([214748365, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([214748365, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([107374183, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([107374183, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([2, 214748365, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([2, 5, 214748365],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 5, 536870912],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.Tensor.divide(Tensor([4294967295],"float32"), Tensor([42],"float32"), )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.Tensor.divide(Tensor([42],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 5, 536870912],"float32"), True, True, )
paddle.matmul(Tensor([2, 4194304, 512],"float16"), Tensor([1024, 512],"float16"), False, True, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 536870912, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.nn.functional.interpolate(Tensor([1, 146576, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.matmul(Tensor([2, 64],"float16"), Tensor([134218, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2, 64],"float16"), Tensor([28269, 151936],"float16"), transpose_y=False, )
paddle.nn.functional.interpolate(Tensor([1, 16519105, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 715827883, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 715827883, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 715827883, 5],"float16"), True, False, )
paddle.nn.functional.interpolate(Tensor([1, 16777216, 16, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 17388532, 13, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 715827883, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 715827883, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 715827883, 5],"float32"), True, False, )
paddle.nn.functional.interpolate(Tensor([1, 17388532, 19, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.matmul(Tensor([2, 768],"float16"), Tensor([134218, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([2097152, 2, 16, 4, 16],"float32"), Tensor([13, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2097152, 2, 16, 4, 16],"float32"), Tensor([2097152, 2, 16, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([12, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([16, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2, 4],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 4],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([3, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([4, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([50000, 2, 1],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([9, 2],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2, 3],"float64"), False, False, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2],"float64"), False, False, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([3, 2],"float64"), False, True, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([4],"float64"), )
paddle.matmul(Tensor([214748365, 1, 5, 2],"float64"), Tensor([214748365, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([23, 186737709],"float16"), Tensor([512, 23, 2],"float16"), )
paddle.matmul(Tensor([23, 186737709],"float32"), Tensor([512, 23, 2],"float32"), )
paddle.matmul(Tensor([23, 23],"float16"), Tensor([512, 4194304, 2],"float16"), )
paddle.matmul(Tensor([23, 23],"float32"), Tensor([512, 4194304, 2],"float32"), )
paddle.matmul(Tensor([238609295, 18],"float32"), Tensor([1],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([26215, 10, 64, 64, 2, 2],"float32"), Tensor([16, 10, 64, 64, 2, 1],"float32"), )
paddle.matmul(Tensor([2],"float16"), Tensor([1431655765, 3],"float16"), False, False, )
paddle.matmul(Tensor([2],"float16"), Tensor([2147483648, 2],"float16"), False, True, )
paddle.matmul(Tensor([2],"float16"), Tensor([3, 1431655765],"float16"), False, True, )
paddle.matmul(Tensor([2],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([2],"float32"), Tensor([1431655765, 3],"float32"), False, False, )
paddle.matmul(Tensor([2],"float32"), Tensor([2147483648, 2],"float32"), False, True, )
paddle.matmul(Tensor([2],"float32"), Tensor([3, 1431655765],"float32"), False, True, )
paddle.matmul(Tensor([2],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([2],"float64"), Tensor([2, 1073741825],"float64"), False, False, )
paddle.matmul(Tensor([2],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([2],"float64"), Tensor([3, 715827883],"float64"), False, True, )
paddle.matmul(Tensor([2],"float64"), Tensor([715827883, 3],"float64"), False, False, )
paddle.matmul(Tensor([3, 12],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([3, 12],"float32"), Tensor([4294967295],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([12],"float32"), )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([1],"float32"), False, False, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), False, False, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), False, False, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([36],"float32"), )
paddle.matmul(Tensor([3, 1],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([3, 36],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([3, 36],"float32"), Tensor([4294967295],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"float32"), False, False, )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([2, 1073741825, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([50000, 2, 21475, 1],"float64"), )
paddle.matmul(Tensor([3, 6],"float32"), Tensor([4294967295],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([3, 715827883],"float64"), Tensor([2, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 715827883],"float64"), Tensor([50000, 2, 3, 1],"float64"), )
paddle.matmul(Tensor([3200, 1342178],"float16"), Tensor([512, 23, 2],"float16"), )
paddle.matmul(Tensor([3200, 23],"float16"), Tensor([512, 4194304, 2],"float16"), )
paddle.matmul(Tensor([32769, 16, 128, 32],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([357913942, 12],"float32"), Tensor([3],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([357913942, 2, 3],"float64"), Tensor([2, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([2, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([2, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([357913942, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([357913942, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([357913942, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([2, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([2, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([357913942, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([357913942, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([357913942, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([357913942, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([3],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([4097, 16, 512, 64],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([4194304, 2, 8, 4, 16],"float32"), Tensor([13, 2, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4194304, 2, 8, 4, 16],"float32"), Tensor([4194304, 2, 8, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([2, 3],"float16"), False, False, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([2],"float16"), False, False, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([3, 2],"float16"), False, True, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([10],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([10],"float32"), True, True, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([2, 3],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([2],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([3, 2],"float32"), False, True, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([3],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), True, True, )
paddle.nn.functional.interpolate(Tensor([1, 19434242, 13, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.matmul(Tensor([429496730, 1, 5, 2],"float16"), Tensor([429496730, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([429496730, 1, 5, 2],"float32"), Tensor([429496730, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([10, 20],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([429496730, 20],"float32"), )
paddle.matmul(Tensor([47721859, 3, 5, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([47721859, 3, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([4793491, 7, 128],"float32"), Tensor([13, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4793491, 7, 128],"float32"), Tensor([52, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4],"float64"), Tensor([2147483649],"float64"), )
paddle.matmul(Tensor([52, 7, 11799361],"float32"), Tensor([52, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([52, 7, 128],"float32"), Tensor([4793491, 7, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([52, 7, 128],"float32"), Tensor([52, 7, 11799361],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([536870912, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([8, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([5592406, 768],"float16"), Tensor([2304, 768],"float16"), False, True, )
paddle.matmul(Tensor([5592406, 768],"float16"), Tensor([5592406, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([613566757, 7, 1],"float32"), Tensor([13, 14, 1],"float32"), transpose_y=True, )
paddle.matmul(Tensor([613566757, 7, 1],"float32"), Tensor([613566757, 14, 1],"float32"), transpose_y=True, )
paddle.matmul(Tensor([65537, 16, 128, 16],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([67108864, 1, 64],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.matmul(Tensor([67108864, 64],"float16"), Tensor([192, 64],"float16"), False, True, )
paddle.matmul(Tensor([67108864, 64],"float16"), Tensor([67108864, 151936],"float16"), transpose_y=False, )
paddle.matmul(Tensor([67108864, 64],"float16"), Tensor([67108864, 32000],"float16"), transpose_y=False, )
paddle.matmul(Tensor([715827883, 2, 3],"float16"), Tensor([2, 3, 2],"float16"), False, False, )
paddle.matmul(Tensor([715827883, 2, 3],"float32"), Tensor([2, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([715827883, 6],"float32"), Tensor([18, 6],"float32"), transpose_x=False, transpose_y=True, )
paddle.matmul(Tensor([715827883, 6],"float32"), Tensor([3],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 4, 536870912],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([134217728, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([8, 4, 134217728],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8193, 16, 512, 32],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([8388608, 1, 512],"float16"), Tensor([1024, 512],"float16"), False, True, )
paddle.matmul(Tensor([8388608, 512],"float16"), Tensor([1024, 512],"float16"), False, True, )
paddle.matmul(x=Tensor([1, 12, 5592406, 64],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 4648234],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([1, 12, 5592406, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([1, 12, 77, 4648234],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([1, 871544, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([72629, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 100, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 101, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 102, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 103, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 268435456],"float32"), y=Tensor([1, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 100, 2684355],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 101, 2657777],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 102, 2631721],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 103, 2606170],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 651543, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 657931, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 664445, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 671089, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 4194304, 64],"float32"), y=Tensor([1, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 4194304, 64],"float32"), y=Tensor([1, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 4194304, 64],"float32"), y=Tensor([1, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 4194304, 64],"float32"), y=Tensor([1, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16384, 2048, 128],"float16"), y=Tensor([1, 2, 2048, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([1, 2, 2048, 1048576],"float16"), y=Tensor([1, 2, 2048, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([1, 2, 2048, 128],"float16"), y=Tensor([1, 16384, 2048, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([1, 2, 2048, 128],"float16"), y=Tensor([1, 2, 2048, 1048576],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 67108864, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 67108864, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 67108864, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 67108864, 1, 64],"float32"), y=Tensor([1, 67108864, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 871544, 77, 64],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 871544, 77, 64],"float32"), y=Tensor([1, 871544, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 1, 107374183, 2],"float64"), y=Tensor([1, 3, 107374183, 5],"float64"), )
paddle.matmul(x=Tensor([10, 1, 5, 2],"float64"), y=Tensor([1, 3, 143165577, 5],"float64"), )
paddle.matmul(x=Tensor([10, 1, 5, 2],"float64"), y=Tensor([71582789, 3, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 1, 5, 42949673],"float64"), y=Tensor([1, 3, 2, 42949673],"float64"), )
paddle.matmul(x=Tensor([10, 1, 5, 42949673],"float64"), y=Tensor([1, 3, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 107374183, 2],"float64"), y=Tensor([10, 107374183, 5],"float64"), )
paddle.matmul(x=Tensor([10, 107374183, 2],"float64"), y=Tensor([10, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 16],"float32"), y=Tensor([10, 429496730],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 214748365],"float64"), y=Tensor([5],"float64"), )
paddle.matmul(x=Tensor([10, 21474837, 5, 2],"float64"), y=Tensor([1, 21474837, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 21474837, 5, 2],"float64"), y=Tensor([1, 3, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 429496730],"float32"), y=Tensor([10, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 5, 2],"float64"), y=Tensor([10, 2, 107374183],"float64"), )
paddle.matmul(x=Tensor([10, 5, 2],"float64"), y=Tensor([10, 42949673, 5],"float64"), )
paddle.matmul(x=Tensor([10, 5, 2],"float64"), y=Tensor([2147483649],"float64"), )
paddle.matmul(x=Tensor([10, 5, 2],"float64"), y=Tensor([214748365, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 5, 42949673],"float64"), y=Tensor([10, 2, 42949673],"float64"), )
paddle.matmul(x=Tensor([10, 5, 42949673],"float64"), y=Tensor([10, 2, 5],"float64"), )
paddle.matmul(x=Tensor([10, 5, 42949673],"float64"), y=Tensor([2],"float64"), )
paddle.matmul(x=Tensor([10, 5],"float64"), y=Tensor([2147483649],"float64"), )
paddle.matmul(x=Tensor([104, 28, 1474921],"float32"), y=Tensor([33712, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 28, 512],"float32"), y=Tensor([33712, 127402],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 29, 1424061],"float32"), y=Tensor([33712, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 29, 512],"float32"), y=Tensor([33712, 127402],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 30, 1376593],"float32"), y=Tensor([33712, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 30, 512],"float32"), y=Tensor([33712, 127402],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 31, 1332186],"float32"), y=Tensor([33712, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 31, 512],"float32"), y=Tensor([33712, 127402],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 32, 1290556],"float32"), y=Tensor([33712, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 32, 512],"float32"), y=Tensor([33712, 127402],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10],"float32"), y=Tensor([4294967295],"float32"), )
paddle.matmul(x=Tensor([10],"float64"), y=Tensor([2147483649],"float64"), )
paddle.matmul(x=Tensor([128, 33554432],"float32"), y=Tensor([10000, 33554432],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 33554432],"float32"), y=Tensor([10000, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 512],"float32"), y=Tensor([10000, 429497],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([13, 2294321, 12, 12],"float32"), y=Tensor([13, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 12],"float32"), y=Tensor([13, 4, 20648882, 4],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 12],"float32"), y=Tensor([13, 6882961, 12, 4],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 12],"float32"), y=Tensor([22369622, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 4],"float32"), y=Tensor([13, 4, 6882961, 12],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 4],"float32"), y=Tensor([13, 6882961, 4, 12],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 4],"float32"), y=Tensor([22369622, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 6882961],"float32"), y=Tensor([13, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 6882961],"float32"), y=Tensor([13, 4, 12, 6882961],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 6882961],"float32"), y=Tensor([13, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([13, 4, 12, 6882961],"float32"), y=Tensor([13, 4, 4, 6882961],"float32"), )
paddle.matmul(x=Tensor([13, 4, 20648882, 4],"float32"), y=Tensor([13, 4, 20648882, 12],"float32"), )
paddle.matmul(x=Tensor([13, 4, 6882961, 12],"float32"), y=Tensor([13, 4, 6882961, 4],"float32"), )
paddle.Tensor.min(Tensor([389, 300, 36864],"float32"), -1, )
paddle.matmul(x=Tensor([13, 6882961, 12, 4],"float32"), y=Tensor([13, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([16, 1864136, 12, 12],"float32"), y=Tensor([16, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 12],"float32"), y=Tensor([16, 4, 16777216, 4],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 12],"float32"), y=Tensor([16, 5592406, 12, 4],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 12],"float32"), y=Tensor([22369622, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 4],"float32"), y=Tensor([16, 4, 5592406, 12],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 4],"float32"), y=Tensor([16, 5592406, 4, 12],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 4],"float32"), y=Tensor([22369622, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 5592406],"float32"), y=Tensor([16, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 5592406],"float32"), y=Tensor([16, 4, 12, 5592406],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 5592406],"float32"), y=Tensor([16, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([16, 4, 12, 5592406],"float32"), y=Tensor([16, 4, 4, 5592406],"float32"), )
paddle.matmul(x=Tensor([16, 4, 16777216, 4],"float32"), y=Tensor([16, 4, 16777216, 12],"float32"), )
paddle.matmul(x=Tensor([16, 4, 5592406, 12],"float32"), y=Tensor([16, 4, 5592406, 4],"float32"), )
paddle.matmul(x=Tensor([16, 5592406, 12, 4],"float32"), y=Tensor([16, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([16384, 2, 1024, 128],"float16"), y=Tensor([2, 2, 1024, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([178956971, 24],"float32"), y=Tensor([178956971, 32],"float32"), )
paddle.matmul(x=Tensor([178956971, 24],"float32"), y=Tensor([24, 32],"float32"), )
paddle.matmul(x=Tensor([2, 16384, 1024, 128],"float16"), y=Tensor([2, 2, 1024, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 1048576],"float16"), y=Tensor([2, 2, 1024, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 1048576],"float16"), y=Tensor([2, 2, 1024, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 128],"float16"), y=Tensor([16384, 2, 1024, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 128],"float16"), y=Tensor([2, 16384, 1024, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 128],"float16"), y=Tensor([2, 2, 1024, 1048576],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 128],"float16"), y=Tensor([2, 2, 8388608, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 64],"float16"), y=Tensor([2, 2, 1024, 1048576],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 64],"float16"), y=Tensor([2, 32768, 1024, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 1024, 64],"float16"), y=Tensor([32768, 2, 1024, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 2, 8388608, 128],"float16"), y=Tensor([2, 2, 1024, 128],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([2, 32768, 1024, 64],"float16"), y=Tensor([2, 2, 1024, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.Tensor.min(Tensor([463, 300, 30976],"float32"), -1, )
paddle.matmul(x=Tensor([2, 8, 16],"float32"), y=Tensor([2, 8, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 16],"float32"), y=Tensor([33554432, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 268435456],"float32"), y=Tensor([2, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2147483649],"float64"), y=Tensor([10],"float64"), )
paddle.matmul(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.matmul(x=Tensor([214748365, 1, 5, 2],"float64"), y=Tensor([214748365, 3, 2, 5],"float64"), )
paddle.matmul(x=Tensor([214748365, 20],"float32"), y=Tensor([20, 40],"float32"), )
paddle.matmul(x=Tensor([214748365, 20],"float32"), y=Tensor([214748365, 40],"float32"), )
paddle.Tensor.min(Tensor([775, 300, 18496],"float32"), -1, )
paddle.matmul(x=Tensor([214748365, 5, 2],"float64"), y=Tensor([10, 2, 5],"float64"), )
paddle.matmul(x=Tensor([214748365, 5, 2],"float64"), y=Tensor([214748365, 2, 5],"float64"), )
paddle.matmul(x=Tensor([22369622, 4, 12, 4],"float32"), y=Tensor([13, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([22369622, 4, 12, 4],"float32"), y=Tensor([16, 4, 4, 12],"float32"), )
paddle.matmul(x=Tensor([268435456, 16],"float32"), y=Tensor([16, 32],"float32"), )
paddle.matmul(x=Tensor([268435456, 16],"float32"), y=Tensor([268435456, 32],"float32"), )
paddle.matmul(x=Tensor([30678338, 140, 1],"float32"), y=Tensor([58, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32768, 2, 1024, 64],"float16"), y=Tensor([2, 2, 1024, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([33554432, 8, 16],"float32"), y=Tensor([2, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4, 1073741824],"float32"), y=Tensor([20, 1073741824],"float32"), )
paddle.matmul(x=Tensor([4, 1073741824],"float32"), y=Tensor([20, 40],"float32"), )
paddle.matmul(x=Tensor([4, 20],"float32"), y=Tensor([107374183, 40],"float32"), )
paddle.matmul(x=Tensor([4, 3],"float64"), y=Tensor([2147483649],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([4, 536870913],"float64"), y=Tensor([3],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([1, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([1, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([1, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([1, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([4194304, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([4194304, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([4194304, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([4194304, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4294967295],"float32"), y=Tensor([10],"float32"), )
paddle.matmul(x=Tensor([4294967295],"float32"), y=Tensor([4294967295],"float32"), )
paddle.matmul(x=Tensor([43691, 12, 128, 64],"float16"), y=Tensor([43691, 12, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([43691, 12, 128, 64],"float16"), y=Tensor([8, 12, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 1],"float32"), y=Tensor([30678338, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 1],"float32"), y=Tensor([58, 140, 528937],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 528937],"float32"), y=Tensor([58, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([715827883, 3],"float64"), y=Tensor([3],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([72629, 12, 77, 64],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([72629, 12, 77, 64],"float32"), y=Tensor([72629, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([7456541, 4, 12, 12],"float32"), y=Tensor([13, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([7456541, 4, 12, 12],"float32"), y=Tensor([16, 4, 12, 4],"float32"), )
paddle.matmul(x=Tensor([8, 12, 128, 349526],"float16"), y=Tensor([8, 12, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([8, 12, 128, 64],"float16"), y=Tensor([43691, 12, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([8, 12, 128, 64],"float16"), y=Tensor([8, 12, 128, 349526],"float16"), transpose_x=False, transpose_y=True, )
paddle.Tensor.multiply(Tensor([1398102, 3072],"float16"), Tensor([160, 1],"float32"), )
paddle.matmul(x=Tensor([8, 12, 128, 64],"float16"), y=Tensor([8, 12, 699051, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([8, 12, 128, 64],"float16"), y=Tensor([8, 65536, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([8, 12, 699051, 64],"float16"), y=Tensor([8, 12, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([8, 16],"float32"), y=Tensor([134217728, 32],"float32"), )
paddle.Tensor.multiply(Tensor([1398102, 3072],"float32"), Tensor([16, 1],"float32"), )
paddle.matmul(x=Tensor([8, 24],"float32"), y=Tensor([134217728, 32],"float32"), )
paddle.Tensor.multiply(Tensor([1398102, 3072],"float32"), Tensor([160, 1],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([16, 32],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([16, 536870912],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([24, 32],"float32"), )
paddle.Tensor.multiply(Tensor([16, 3072],"float32"), Tensor([16, 268435456],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([24, 536870912],"float32"), )
paddle.Tensor.multiply(Tensor([16, 3072],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.matmul(x=Tensor([8, 65536, 128, 64],"float16"), y=Tensor([8, 12, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.Tensor.multiply(Tensor([16, 768],"float32"), Tensor([16, 268435456],"float32"), )
paddle.matmul(x=Tensor([8, 65536, 128, 64],"float16"), y=Tensor([8, 65536, 128, 64],"float16"), transpose_x=False, transpose_y=True, )
paddle.Tensor.multiply(Tensor([16, 768],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.multiply(Tensor([160, 3072],"float16"), Tensor([160, 26843546],"float32"), )
paddle.Tensor.multiply(Tensor([160, 3072],"float16"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.multiply(Tensor([160, 3072],"float32"), Tensor([160, 26843546],"float32"), )
paddle.Tensor.multiply(Tensor([160, 3072],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.multiply(Tensor([4294967295],"float32"), Tensor([42],"float32"), )
paddle.Tensor.multiply(Tensor([42],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.multiply(Tensor([512, 768],"float16"), Tensor([4294967295, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 768],"float16"), Tensor([512, 8388608],"float32"), )
paddle.Tensor.multiply(Tensor([5592406, 768],"float16"), Tensor([512, 1],"float32"), )
paddle.Tensor.multiply(Tensor([5592406, 768],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.norm(Tensor([1, 2147483648, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 2147483648, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([2147483648, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.not_equal(Tensor([12, 7],"int32"), Tensor([4294967295],"int32"), )
paddle.Tensor.not_equal(Tensor([12, 7],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.not_equal(Tensor([128, 128],"int64"), Tensor([128, 16777217],"int64"), )
paddle.Tensor.not_equal(Tensor([128, 128],"int64"), Tensor([16777217, 128],"int64"), )
paddle.Tensor.not_equal(Tensor([128, 16777217],"int64"), Tensor([128, 128],"int64"), )
paddle.Tensor.not_equal(Tensor([13, 10],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.not_equal(Tensor([13, 14],"bool"), Tensor([4294967295],"bool"), )
paddle.Tensor.not_equal(Tensor([13, 14],"int64"), Tensor([2147483649],"int64"), )
paddle.Tensor.not_equal(Tensor([16777217, 128],"int64"), Tensor([128, 128],"int64"), )
paddle.Tensor.outer(x=Tensor([1, 2147483649],"float64"), y=Tensor([1, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([1, 4294967295],"float32"), y=Tensor([1, 4294967295],"float32"), )
paddle.Tensor.outer(x=Tensor([1, 4294967295],"float32"), y=Tensor([1, 4],"float32"), )
paddle.Tensor.outer(x=Tensor([1, 4],"float32"), y=Tensor([1, 4294967295],"float32"), )
paddle.Tensor.outer(x=Tensor([1, 4],"float32"), y=Tensor([1073741824, 4],"float32"), )
paddle.Tensor.outer(x=Tensor([1, 4],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.Tensor.outer(x=Tensor([1, 4],"float64"), y=Tensor([536870913, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([1073741824, 4],"float32"), y=Tensor([1, 4],"float32"), )
paddle.Tensor.outer(x=Tensor([1073741824, 4],"float32"), y=Tensor([1073741824, 4],"float32"), )
paddle.Tensor.outer(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([107374183, 2, 5, 2],"float64"), y=Tensor([107374183, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([107374183, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([2147483649, 1],"float64"), y=Tensor([4, 1],"float64"), )
paddle.Tensor.outer(x=Tensor([357913942, 2, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 178956971, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 1],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 1],"float64"), y=Tensor([4, 536870913],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 134217729, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 268435457],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 178956971, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 2, 268435457],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 89478486],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 89478486, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 67108865, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([44739243, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 53687092],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 53687092],"float64"), y=Tensor([2, 3, 4, 53687092],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2],"float64"), y=Tensor([178956971, 3, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 268435457, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 3, 357913942],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 536870913],"float64"), y=Tensor([4, 1],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 53687092, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 53687092, 5, 2],"float64"), y=Tensor([2, 53687092, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([536870913, 4],"float64"), y=Tensor([1, 4],"float64"), )
paddle.Tensor.quantile(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([2982617, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 5965233, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 2982617, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 3976822, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 1988411, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 4971027],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.set_(Tensor([3, 1431655765],"float16"), Tensor([6, 1431655765],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.slice_scatter(Tensor([357913942, 6],"float64"), Tensor([8, 3],"float64"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.slice_scatter(Tensor([8, 268435457],"float64"), Tensor([8, 268435457],"float64"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.slice_scatter(Tensor([8, 6],"float64"), Tensor([715827883, 3],"float64"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.slice_scatter(Tensor([8, 6],"float64"), Tensor([8, 268435457],"float64"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.split(Tensor([1, 1, 4294967295],"float32"), list[32,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[5184,1296,324,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[7744,1936,484,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[8464,2116,529,], axis=1, )
paddle.Tensor.split(Tensor([1, 16777216, 8, 32],"float32"), list[9216,2304,576,], axis=1, )
paddle.Tensor.split(Tensor([1, 18, 238609295],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 192, 22369622],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 196, 21913099],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 2, 2147483648],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1, 2, 2147483648],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([1, 200, 21474837],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 21, 204522253],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 22, 195225787],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 25, 85899346, 2],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([1, 300, 14316558],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 4, 1073741824],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([1, 4294967295],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 4294967295],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 6, 715827883],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([1, 9, 477218589],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([10, 2, 214748365],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([100, 42949673],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([100, 42949673],"float32"), list[1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([101, 42524429],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([101, 42524429],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([102, 42107523],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([107, 40139882],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1073741824, 4],"float32"), list[512,512,512,512,], )
paddle.Tensor.split(Tensor([1073741824, 4],"float32"), list[512,], )
paddle.Tensor.split(Tensor([13, 32, 10324441],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([13, 7, 47197443],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([134, 4, 8012999],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([145, 4, 7405117],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([158, 4, 6795835],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([16, 1048576, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([16, 176, 1525202],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([16, 349526, 768],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([16, 87382, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([160, 8739, 3072],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([160, 8739, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([168, 4, 6391321],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([2, 8388608, 8, 32],"float16"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 8388608, 8, 32],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([2, 8388608, 8, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([2, 8388608, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([2, 8388608, 8, 32],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([20, 1, 214748365],"float32"), list[32,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([2147483649],"float64"), list[1,1,2,1,], )
paddle.Tensor.split(Tensor([2147483649],"float64"), list[3,4,9,], )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[1,1,1,1,1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[1,1,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[1,2,2,5,8,22,5,5,18,3,9,4,1,2,11,3,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[1,3,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[1,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[12,4,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[2,2,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[5,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[7,], -1, )
paddle.Tensor.split(Tensor([300, 14316558],"float32"), list[8,], -1, )
paddle.Tensor.split(Tensor([4, 4194304, 8, 32],"float32"), list[4096,1024,256,], axis=1, )
paddle.Tensor.split(Tensor([4, 4194304, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([4294967295],"float32"), list[2,3,7,], )
paddle.Tensor.split(Tensor([438, 38367, 8, 32],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([5, 2, 429496730],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([512, 10923, 768],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([58, 1, 74051161],"float32"), list[64,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([8, 2097152, 8, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([900, 4772186],"float32"), list[2,2,], -1, )
paddle.Tensor.subtract(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.subtract(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.Tensor.subtract(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.Tensor.subtract(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.Tensor.subtract(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.subtract(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.subtract(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.subtract(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.Tensor.subtract(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.Tensor.subtract(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.Tensor.subtract(Tensor([4294967295],"float32"), Tensor([42],"float32"), )
paddle.Tensor.subtract(Tensor([42],"float32"), Tensor([4294967295],"float32"), )
paddle.Tensor.tile(Tensor([1, 1, 2, 1, 2147483648],"float32"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,101,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,102,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,103,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,105,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,106,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,107,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,108,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,109,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,112,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,113,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,116,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,117,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,119,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,122,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,123,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,124,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,126,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,127,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,129,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,131,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,132,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,138,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,139,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,140,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,142,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,145,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,146,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,149,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,15,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,150,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,156,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,168,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,169,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,172,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,18,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,19,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,190,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,20,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,209,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,210,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,215,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,218,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,22,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,225,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,227,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,23,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,24,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,249,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,25,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,252,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,255,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,26,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,27,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,28,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,29,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,296,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,30,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,303,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,31,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,32,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,329,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,33,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,333,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,34,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,35,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,36,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,37,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,38,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,39,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,40,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,400,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,41,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,42,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,43,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,44,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,45,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,46,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,47,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,48,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,49,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,50,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,51,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,52,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,53,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,54,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,55,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,56,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,57,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,58,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,59,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,60,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,61,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,62,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,63,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,64,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,65,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,66,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,67,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,68,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,69,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,70,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,71,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,72,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,73,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,74,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,75,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,76,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,77,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,78,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,79,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,80,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,81,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,83,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,84,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,85,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,86,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,87,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,88,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,91,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,92,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,93,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,96,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,97,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"bool"), list[1,99,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[1,100,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[1,200,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[106,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[107,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[109,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[114,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[117,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[122,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[123,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[131,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[1376,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[140,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[144,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[150,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[155,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[156,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[171,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[176,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[182,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[187,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[193,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[223,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[230,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[284,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[328,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[345,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[394,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[395,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[45,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[50,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[504,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[505,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[516,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[57,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[576,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[60,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[62,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[66,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[70,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[744,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[75,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[781,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[80,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[81,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[83,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[835,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[86,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[87,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[92,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[947,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[99,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), list[993,1,1,], )
paddle.Tensor.tile(Tensor([1, 1, 4294967295],"float32"), tuple(1,14,1,), )
paddle.Tensor.tile(Tensor([1, 1024, 2, 1, 2097152],"float16"), list[1,1,1,4,1,], )
paddle.Tensor.tile(Tensor([1, 1024, 2, 131072, 16],"float16"), list[1,1,1,4,1,], )
paddle.Tensor.tile(Tensor([1, 1024, 262144, 1, 16],"float16"), list[1,1,1,4,1,], )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 16],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 268435456, 16],"float32"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 33554432, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 33554432, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 4294967295, 1, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 43827, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.median(Tensor([1073741824, 4],"float16"), None, False, )
paddle.median(Tensor([1073741824, 4],"float16"), None, False, mode="min", )
paddle.median(Tensor([1073741824, 4],"float16"), None, True, )
paddle.median(Tensor([1073741824, 4],"float16"), None, True, mode="min", )
paddle.nn.functional.interpolate(Tensor([1, 6391321, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.median(Tensor([1073741824, 4],"float32"), None, False, )
paddle.median(Tensor([1073741824, 4],"float32"), None, False, mode="min", )
paddle.median(Tensor([1073741824, 4],"float32"), None, True, )
paddle.median(Tensor([1073741824, 4],"float32"), None, True, mode="min", )
paddle.median(Tensor([107374183, 4, 5],"float64"), mode="avg", )
paddle.median(Tensor([107374183, 4, 5],"float64"), mode="min", )
paddle.median(Tensor([107374183, 4, 5],"int64"), mode="avg", )
paddle.median(Tensor([107374183, 4, 5],"int64"), mode="min", )
paddle.median(Tensor([2, 214748365, 5],"float64"), mode="avg", )
paddle.median(Tensor([2, 214748365, 5],"float64"), mode="min", )
paddle.nn.functional.interpolate(Tensor([1, 67108864, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.median(Tensor([2, 214748365, 5],"int64"), mode="avg", )
paddle.median(Tensor([2, 214748365, 5],"int64"), mode="min", )
paddle.nn.functional.interpolate(Tensor([1, 67108864, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.median(Tensor([2, 4, 268435457],"float64"), mode="avg", )
paddle.median(Tensor([2, 4, 268435457],"float64"), mode="min", )
paddle.nn.functional.interpolate(Tensor([1, 68553, 227, 276],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.median(Tensor([2, 4, 268435457],"int64"), mode="avg", )
paddle.median(Tensor([2, 4, 268435457],"int64"), mode="min", )
paddle.median(Tensor([2, 4, 536870912],"float32"), mode="avg", )
paddle.median(Tensor([2, 4, 536870912],"float32"), mode="min", )
paddle.median(Tensor([2, 4, 536870912],"int32"), mode="avg", )
paddle.median(Tensor([2, 4, 536870912],"int32"), mode="min", )
paddle.median(Tensor([2, 429496730, 5],"float32"), mode="avg", )
paddle.median(Tensor([2, 429496730, 5],"float32"), mode="min", )
paddle.median(Tensor([2, 429496730, 5],"int32"), mode="avg", )
paddle.median(Tensor([2, 429496730, 5],"int32"), mode="min", )
paddle.median(Tensor([214748365, 4, 5],"float32"), mode="avg", )
paddle.median(Tensor([214748365, 4, 5],"float32"), mode="min", )
paddle.median(Tensor([214748365, 4, 5],"int32"), mode="avg", )
paddle.median(Tensor([214748365, 4, 5],"int32"), mode="min", )
paddle.nn.functional.interpolate(Tensor([1, 73939, 212, 274],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 84881, 200, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.median(Tensor([268435457, 4, 2],"float64"), None, False, )
paddle.median(Tensor([268435457, 4, 2],"float64"), None, True, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([10226113, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([10486, 256, 40, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([10486, 64, 80, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([10486, 64, 80, 80],"float16"), size=tuple(160,160,), )
paddle.median(Tensor([268435457, 4, 2],"int64"), None, False, )
paddle.median(Tensor([268435457, 4, 2],"int64"), None, True, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.median(Tensor([3, 1431655765],"float16"), None, False, )
paddle.median(Tensor([3, 1431655765],"float16"), None, False, mode="min", )
paddle.median(Tensor([3, 1431655765],"float16"), None, True, )
paddle.median(Tensor([3, 1431655765],"float16"), None, True, mode="min", )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.median(Tensor([3, 1431655765],"float32"), None, False, )
paddle.median(Tensor([3, 1431655765],"float32"), None, True, )
paddle.median(Tensor([3, 1431655765],"float32"), axis=None, )
paddle.median(Tensor([3, 1431655765],"float32"), keepdim=True, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.median(Tensor([3, 357913942, 2],"float64"), None, False, )
paddle.median(Tensor([3, 357913942, 2],"float64"), None, True, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.linalg.matrix_rank(Tensor([1, 4294967295],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([10737419, 200],"float64"), None, True, )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([10737419, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 10737419],"float64"), None, True, )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 1],"bool"), Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 10737419],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([10737419, 200],"float64"), Tensor([200, 200],"float64"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 10737419],"float64"), Tensor([200, 200],"float64"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([10737419, 200],"float64"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 10737419],"float64"), )
paddle.linalg.matrix_rank(Tensor([2147483649, 1],"float64"), None, False, Tensor([2147483649, 4],"float64"), Tensor([2147483649, 4],"float64"), )
paddle.linalg.matrix_rank(Tensor([3, 12782641, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 12782641, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, )
paddle.where(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([1073741824, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 1431655765],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 25],"bool"), Tensor([1, 1, 1, 25],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1, 1, 25],"bool"), Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 25],"float32"), )
paddle.where(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 1, 1, 26],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 26],"float32"), )
paddle.vision.ops.yolo_box(Tensor([2, 14, 8, 8],"float32"), img_size=Tensor([2, 2147483648],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_box(Tensor([2, 14, 8, 8],"float32"), img_size=Tensor([2147483648, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 1, 4294967295],"bool"), 0.0, -65504.0, )
paddle.where(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 23],"float32"), Tensor([1, 1, 1, 23],"float32"), )
paddle.where(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 24],"float32"), Tensor([1, 1, 1, 24],"float32"), )
paddle.where(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 25],"float32"), Tensor([1, 1, 1, 25],"float32"), )
paddle.where(Tensor([1, 1, 1, 4294967295],"bool"), Tensor([1, 1, 1, 26],"float32"), Tensor([1, 1, 1, 26],"float32"), )
paddle.where(Tensor([1, 1, 10285],"bool"), Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1, 10285],"bool"), Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.vision.ops.yolo_box(Tensor([2, 16, 8, 8],"float32"), img_size=Tensor([2, 2147483648],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, iou_aware=True, iou_aware_factor=0.5, )
paddle.vision.ops.yolo_box(Tensor([2, 16, 8, 8],"float32"), img_size=Tensor([2147483648, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, iou_aware=True, iou_aware_factor=0.5, )
paddle.vision.ops.yolo_box(Tensor([2, 33554432, 8, 8],"float32"), img_size=Tensor([2, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_box(Tensor([2, 33554432, 8, 8],"float32"), img_size=Tensor([2, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, iou_aware=True, iou_aware_factor=0.5, )
paddle.vision.ops.yolo_box(Tensor([4194304, 16, 8, 8],"float32"), img_size=Tensor([2, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, iou_aware=True, iou_aware_factor=0.5, )
paddle.vision.ops.yolo_box(Tensor([4793491, 14, 8, 8],"float32"), img_size=Tensor([2, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 24276],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 19173962, 8],"float32"), gt_box=Tensor([2, 10, 4],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.linalg.lu(Tensor([2, 3, 715827883],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 27216],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.linalg.lu(Tensor([2, 3, 715827883],"float32"), pivot=True, get_infos=True, )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 19173962],"float32"), gt_box=Tensor([2, 10, 4],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 8],"float32"), gt_box=Tensor([107374183, 10, 4],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 30324],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 8],"float32"), gt_box=Tensor([2, 10, 214748365],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 33600],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 8],"float32"), gt_box=Tensor([2, 10, 4],"float32"), gt_label=Tensor([2, 2147483648],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 8],"float32"), gt_box=Tensor([2, 10, 4],"float32"), gt_label=Tensor([429496730, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 30324],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 33600],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 8],"float32"), gt_box=Tensor([2, 536870912, 4],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([2, 33554432, 8, 8],"float32"), gt_box=Tensor([2, 10, 4],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([1, 1, 4294967295, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 10285],"float32"), Tensor([1, 1, 10285],"float32"), )
paddle.where(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 24276],"float32"), Tensor([1, 1, 24276],"float32"), )
paddle.where(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 27216],"float32"), Tensor([1, 1, 27216],"float32"), )
paddle.where(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 30324],"float32"), Tensor([1, 1, 30324],"float32"), )
paddle.where(Tensor([1, 1, 4294967295],"bool"), Tensor([1, 1, 33600],"float32"), Tensor([1, 1, 33600],"float32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([1, 1001],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([1, 1001],"int32"), Tensor([1, 4294967295],"int32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([1, 4294967295],"float32"), Tensor([1, 1001],"float32"), )
paddle.where(Tensor([1, 1001],"bool"), Tensor([1, 4294967295],"int32"), Tensor([1, 1001],"int32"), )
paddle.linalg.matrix_rank(Tensor([3, 47721859, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.where(Tensor([1, 1002],"bool"), Tensor([1, 1002],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.where(Tensor([1, 1002],"bool"), Tensor([1, 1002],"int32"), Tensor([1, 4294967295],"int32"), )
paddle.where(Tensor([1, 1002],"bool"), Tensor([1, 4294967295],"float32"), Tensor([1, 1002],"float32"), )
paddle.where(Tensor([1, 1002],"bool"), Tensor([1, 4294967295],"int32"), Tensor([1, 1002],"int32"), )
paddle.where(Tensor([1, 1003],"bool"), Tensor([1, 1003],"int32"), Tensor([1, 4294967295],"int32"), )
paddle.where(Tensor([1, 1003],"bool"), Tensor([1, 4294967295],"int32"), Tensor([1, 1003],"int32"), )
paddle.where(Tensor([1, 3],"bool"), Tensor([3, 1431655765],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([1, 3],"bool"), Tensor([3, 3],"float32"), Tensor([4294967295],"float32"), )
paddle.where(Tensor([1, 4294967295, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([1, 4294967295, 1],"bool"), Tensor([1, 4294967295, 24276],"float32"), Tensor([1, 4294967295, 24276],"float32"), )
paddle.where(Tensor([1, 4294967295, 1],"bool"), Tensor([1, 4294967295, 27216],"float32"), Tensor([1, 4294967295, 27216],"float32"), )
paddle.where(Tensor([1, 4294967295, 1],"bool"), Tensor([1, 4294967295, 30324],"float32"), Tensor([1, 4294967295, 30324],"float32"), )
paddle.where(Tensor([1, 4294967295, 1],"bool"), Tensor([1, 4294967295, 33600],"float32"), Tensor([1, 4294967295, 33600],"float32"), )
paddle.where(Tensor([1, 4294967295],"bool"), 1, 0, )
paddle.where(Tensor([1, 4294967295],"bool"), 1.0, 0.0, )
paddle.where(Tensor([1, 4294967295],"bool"), Tensor([1, 1001],"float32"), Tensor([1, 1001],"float32"), )
paddle.where(Tensor([1, 4294967295],"bool"), Tensor([1, 1001],"int32"), Tensor([1, 1001],"int32"), )
paddle.where(Tensor([1, 4294967295],"bool"), Tensor([1, 1002],"float32"), Tensor([1, 1002],"float32"), )
paddle.where(Tensor([1, 4294967295],"bool"), Tensor([1, 1002],"int32"), Tensor([1, 1002],"int32"), )
paddle.where(Tensor([1, 4294967295],"bool"), Tensor([1, 1003],"int32"), Tensor([1, 1003],"int32"), )
paddle.where(Tensor([1, 4294967295],"bool"), Tensor([3, 3],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([10, 10, 42949673],"bool"), Tensor([10, 10, 5],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([10, 10, 5],"bool"), Tensor([10, 10, 21474837],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([10, 10, 5],"bool"), Tensor([10, 10, 5],"float64"), Tensor([2147483649],"float64"), )
paddle.where(Tensor([10, 10, 5],"bool"), Tensor([10, 42949673, 5],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([10, 10, 5],"bool"), Tensor([42949673, 10, 5],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([10, 85899346, 5],"bool"), Tensor([10, 10, 5],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([1001],"bool"), Tensor([1001],"int32"), Tensor([4294967295],"int32"), )
paddle.where(Tensor([1001],"bool"), Tensor([4294967295],"int32"), Tensor([1001],"int32"), )
paddle.where(Tensor([1002],"bool"), Tensor([1002],"int32"), Tensor([4294967295],"int32"), )
paddle.where(Tensor([1002],"bool"), Tensor([4294967295],"int32"), Tensor([1002],"int32"), )
paddle.where(Tensor([1003],"bool"), Tensor([1003],"int32"), Tensor([4294967295],"int32"), )
paddle.where(Tensor([1003],"bool"), Tensor([4294967295],"int32"), Tensor([1003],"int32"), )
paddle.where(Tensor([1004],"bool"), Tensor([1004],"int32"), Tensor([4294967295],"int32"), )
paddle.where(Tensor([1004],"bool"), Tensor([4294967295],"int32"), Tensor([1004],"int32"), )
paddle.where(Tensor([1005],"bool"), Tensor([1005],"int32"), Tensor([4294967295],"int32"), )
paddle.where(Tensor([1005],"bool"), Tensor([4294967295],"int32"), Tensor([1005],"int32"), )
paddle.where(Tensor([1073741824, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([119304648, 3, 3, 4],"bool"), Tensor([4, 3, 3, 4],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([11930465, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([11930465, 6, 3, 4, 1, 5],"bool"), Tensor([5965233, 6, 3, 4, 1, 5],"float64"), Tensor([5965233, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([128, 1],"bool"), 9.99999993922529e-09, Tensor([4294967295, 1],"float32"), )
paddle.where(Tensor([13, 330382100],"bool"), Tensor([1],"int32"), Tensor([13, 9],"int32"), )
paddle.where(Tensor([13, 9],"bool"), Tensor([1],"int32"), Tensor([13, 330382100],"int32"), )
paddle.where(Tensor([13, 9],"bool"), Tensor([1],"int32"), Tensor([477218589, 9],"int32"), )
paddle.where(Tensor([13, 9],"bool"), Tensor([4294967295],"int32"), Tensor([13, 9],"int32"), )
paddle.where(Tensor([1431655765, 3],"bool"), Tensor([3, 3],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([1431655765, 3],"bool"), Tensor([3, 3],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([1632, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([17895698, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([17895698, 2, 3, 4, 5, 1, 2],"bool"), Tensor([8947849, 2, 3, 4, 5, 1, 2],"float64"), Tensor([8947849, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([2, 1],"bool"), Tensor([2, 2, 1073741824],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([2, 1],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 1073741824],"float32"), )
paddle.where(Tensor([2, 1],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.where(Tensor([2, 1],"bool"), Tensor([2, 2, 4],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.where(Tensor([2, 1],"bool"), Tensor([2, 536870912, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([2, 1],"bool"), Tensor([536870912, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([35791395, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([429496730, 10],"float32"), None, False, )
paddle.where(Tensor([2, 2147483648],"bool"), 0, 1, )
paddle.where(Tensor([2, 2147483648],"bool"), 1, 0, )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 2147483649],"float64"), Tensor([1, 4],"float64"), )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 4],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.where(Tensor([2, 2147483648],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([9586981, 4, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([9586981, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 67108865],"float64"), tol=None, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 67108865, 4],"float64"), tol=None, hermitian=True, )
paddle.where(Tensor([2, 4],"bool"), Tensor([2, 2, 1073741824],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 1073741824],"float32"), )
paddle.where(Tensor([2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.where(Tensor([2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.where(Tensor([2, 4],"bool"), Tensor([2, 536870912, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([2, 4],"bool"), Tensor([536870912, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([23860930, 6, 3, 1, 2, 5],"bool"), Tensor([11930465, 6, 3, 1, 2, 5],"float64"), Tensor([11930465, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([23860930, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([29826162, 6, 3, 4, 2, 1],"bool"), Tensor([14913081, 6, 3, 4, 2, 1],"float64"), Tensor([14913081, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([29826162, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 11930465, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 11930465, 3, 4, 5, 1, 2],"bool"), Tensor([3, 5965233, 3, 4, 5, 1, 2],"float64"), Tensor([3, 5965233, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 1431655765],"bool"), Tensor([3, 3],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([3, 1431655765],"bool"), Tensor([3, 3],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([3, 1431655765],"bool"), Tensor([3, 40],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([3, 1431655765],"bool"), Tensor([3, 40],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([3, 178956971, 2, 4],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([3, 178956971, 2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([3, 1],"bool"), Tensor([107374183, 40],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([3, 1],"bool"), Tensor([107374183, 40],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([3, 1],"bool"), Tensor([3, 40],"float16"), Tensor([4294967295],"float16"), )
paddle.where(Tensor([3, 1],"bool"), Tensor([3, 40],"float32"), Tensor([4294967295],"float32"), )
paddle.where(Tensor([3, 2, 178956971, 4],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([3, 2, 178956971, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([3, 2, 17895698, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 17895698, 4, 5, 1, 2],"bool"), Tensor([3, 2, 8947849, 4, 5, 1, 2],"float64"), Tensor([3, 2, 8947849, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 2, 357913942],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 1073741824],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 1073741824],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2, 2, 1073741824],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2, 2147483648, 1],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 1],"float32"), Tensor([2147483648, 2, 1],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 1073741824],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2, 4],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 2147483648, 1],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2, 536870912, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([2147483648, 2, 1],"float32"), Tensor([2, 2, 1],"float32"), )
paddle.where(Tensor([3, 2, 2, 4],"bool"), Tensor([536870912, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([3, 2, 3, 23860930, 5, 1, 2],"bool"), Tensor([3, 2, 3, 11930465, 5, 1, 2],"float64"), Tensor([3, 2, 3, 11930465, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 23860930, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 29826162, 1, 2],"bool"), Tensor([3, 2, 3, 4, 14913081, 1, 2],"float64"), Tensor([3, 2, 3, 4, 14913081, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 29826162, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 11930465],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 11930465],"bool"), Tensor([3, 2, 3, 4, 5, 1, 5965233],"float64"), Tensor([3, 2, 3, 4, 5, 1, 5965233],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 11930465, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 14913081, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 11930465, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 14913081, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 5965233],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 8947849, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 5965233, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), Tensor([8947849, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 3, 4, 5, 1, 5965233],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 2, 8947849, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([3, 5965233, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 1, 2],"bool"), Tensor([8947849, 2, 3, 4, 5, 1, 2],"float64"), Tensor([3, 2, 3, 4, 5, 1, 2],"float64"), )
paddle.where(Tensor([3, 2, 3, 4, 5, 5965233, 2],"bool"), Tensor([3, 2, 3, 4, 5, 2982617, 2],"float64"), Tensor([3, 2, 3, 4, 5, 2982617, 2],"float64"), )
paddle.where(Tensor([3, 23860930, 3, 4, 1, 5],"bool"), Tensor([3, 11930465, 3, 4, 1, 5],"float64"), Tensor([3, 11930465, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 23860930, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 3],"bool"), Tensor([1431655765, 3],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([3, 3],"bool"), Tensor([3, 1431655765],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([3, 3],"bool"), Tensor([3, 3],"float32"), Tensor([4294967295],"float32"), )
paddle.where(Tensor([3, 3],"bool"), Tensor([3, 3],"float64"), Tensor([2147483649],"float64"), )
paddle.where(Tensor([3, 3],"bool"), Tensor([3, 715827883],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([3, 3],"bool"), Tensor([715827883, 3],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([3, 47721859, 3, 1, 2, 5],"bool"), Tensor([3, 23860930, 3, 1, 2, 5],"float64"), Tensor([3, 23860930, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 47721859, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 59652324, 3, 4, 2, 1],"bool"), Tensor([3, 29826162, 3, 4, 2, 1],"float64"), Tensor([3, 29826162, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 59652324, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 11930465, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 11930465, 4, 1, 5],"bool"), Tensor([3, 6, 5965233, 4, 1, 5],"float64"), Tensor([3, 6, 5965233, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 23860930, 1, 2, 5],"bool"), Tensor([3, 6, 11930465, 1, 2, 5],"float64"), Tensor([3, 6, 11930465, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 23860930, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 29826162, 4, 2, 1],"bool"), Tensor([3, 6, 14913081, 4, 2, 1],"float64"), Tensor([3, 6, 14913081, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 29826162, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 15907287, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 15907287, 5],"bool"), Tensor([3, 6, 3, 1, 7953644, 5],"float64"), Tensor([3, 6, 3, 1, 7953644, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 39768216],"bool"), Tensor([3, 6, 3, 1, 2, 19884108],"float64"), Tensor([3, 6, 3, 1, 2, 19884108],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 39768216],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([11930465, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 23860930, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 11930465, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 19884108],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([11930465, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 23860930, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 11930465, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 19884108],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 7953644, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 1, 2, 5],"bool"), Tensor([3, 6, 3, 1, 7953644, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 15907287, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 15907287, 1, 5],"bool"), Tensor([3, 6, 3, 7953644, 1, 5],"float64"), Tensor([3, 6, 3, 7953644, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 39768216, 2, 1],"bool"), Tensor([3, 6, 3, 19884108, 2, 1],"float64"), Tensor([3, 6, 3, 19884108, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 39768216, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 19884108],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 19884108],"bool"), Tensor([3, 6, 3, 4, 1, 9942054],"float64"), Tensor([3, 6, 3, 4, 1, 9942054],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 11930465, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 11930465, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 9942054],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 7953644, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 5965233, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([5965233, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 4, 1, 9942054],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 3, 7953644, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([3, 6, 5965233, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 1, 5],"bool"), Tensor([5965233, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 19884108, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 19884108, 1],"bool"), Tensor([3, 6, 3, 4, 9942054, 1],"float64"), Tensor([3, 6, 3, 4, 9942054, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([14913081, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 29826162, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 14913081, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 19884108, 2, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([14913081, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 29826162, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 14913081, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 19884108, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 2, 1],"float64"), Tensor([3, 6, 3, 4, 9942054, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 1],"bool"), Tensor([3, 6, 3, 4, 9942054, 1],"float64"), Tensor([3, 6, 3, 4, 2, 1],"float64"), )
paddle.where(Tensor([3, 6, 3, 4, 2, 9942054],"bool"), Tensor([3, 6, 3, 4, 2, 4971027],"float64"), Tensor([3, 6, 3, 4, 2, 4971027],"float64"), )
paddle.linalg.matrix_rank(x=Tensor([858993459, 5],"float32"), tol=None, hermitian=False, )
paddle.where(Tensor([3, 6, 3, 4, 3976822, 5],"bool"), Tensor([3, 6, 3, 4, 1988411, 5],"float64"), Tensor([3, 6, 3, 4, 1988411, 5],"float64"), )
paddle.where(Tensor([3, 6, 3, 7953644, 2, 5],"bool"), Tensor([3, 6, 3, 3976822, 2, 5],"float64"), Tensor([3, 6, 3, 3976822, 2, 5],"float64"), )
paddle.where(Tensor([300, 120],"bool"), Tensor([120],"float32"), Tensor([300, 14316558],"float32"), )
paddle.where(Tensor([300, 120],"bool"), Tensor([120],"float32"), Tensor([35791395, 120],"float32"), )
paddle.where(Tensor([300, 120],"bool"), Tensor([120],"float32"), Tensor([4294967295],"float32"), )
paddle.where(Tensor([300, 120],"bool"), Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([300, 120],"bool"), Tensor([4294967295],"float32"), Tensor([300, 120],"float32"), )
paddle.where(Tensor([300, 14316558],"bool"), Tensor([120],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([300, 14316558],"bool"), Tensor([120],"float32"), Tensor([300, 120],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 28633116, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 28633116, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 28633116, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 28633116, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 4772186, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 4772186, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 4772186, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 4772186, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 4772186],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 4772186],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 4772186],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 4772186],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([107374183, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([107374183, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([107374183, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([3314018, 8, 9, 18],"bool"), Tensor([6, 8, 9, 18],"float16"), Tensor([1],"float16"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([107374183, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 178956971, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 178956971, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.where(Tensor([3314018, 8, 9, 18],"bool"), Tensor([6, 8, 9, 18],"float32"), Tensor([1],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 178956971, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([35791395, 120],"bool"), Tensor([120],"float32"), Tensor([300, 120],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 178956971, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.where(Tensor([4, 114228, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 143165577],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 153392, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 143165577],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 376, 10199, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([1632, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 114228, 376, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 143165577],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 153392, 25, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 10199, 1],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([1632, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 114228, 376, 25, 1],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 153392, 25, 1],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 143165577],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 1],"float32"), Tensor([4, 280, 376, 10199, 1],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 1431655765],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 408],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 3400, 3],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 1431655765],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 51131, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 38076, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([544, 280, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 408],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 1431655765],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 3400, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 280, 51131, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([4, 38076, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 3],"bool"), Tensor([544, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 1431655765],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.where(Tensor([4, 280, 376, 25, 408],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 715827883],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.where(Tensor([4, 280, 376, 3400, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.where(Tensor([4, 280, 51131, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 715827883],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 715827883],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([429496730, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([429496730, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([429496730, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.where(Tensor([4, 3, 3, 119304648],"bool"), Tensor([4, 3, 3, 4],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 3, 4],"bool"), Tensor([4, 3, 3, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.where(Tensor([4, 3, 3, 4],"bool"), Tensor([4, 3, 3, 59652324],"float64"), Tensor([1],"float64"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([858993459, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([4, 3, 3, 4],"bool"), Tensor([4, 3, 44739243, 4],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 3, 4],"bool"), Tensor([4, 44739243, 3, 4],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 3, 4],"bool"), Tensor([59652324, 3, 3, 4],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 357913942],"bool"), Tensor([4, 3, 3],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 3],"bool"), Tensor([238609295, 3, 3],"float64"), Tensor([1],"float64"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([858993459, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.where(Tensor([4, 3, 3],"bool"), Tensor([4, 178956971, 3],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 3],"bool"), Tensor([4, 3, 178956971],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 3, 3],"bool"), Tensor([4, 3, 3],"float64"), Tensor([2147483649],"float64"), )
paddle.where(Tensor([4, 3, 89478486, 4],"bool"), Tensor([4, 3, 3, 4],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 357913942, 3],"bool"), Tensor([4, 3, 3],"float64"), Tensor([1],"float64"), )
paddle.where(Tensor([4, 38076, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([858993459, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.where(Tensor([4, 89478486, 3, 4],"bool"), Tensor([4, 3, 3, 4],"float64"), Tensor([1],"float64"), )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([858993459, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.where(Tensor([40],"bool"), Tensor([300, 14316558],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([40],"bool"), Tensor([300, 40],"float32"), Tensor([4294967295],"float32"), )
paddle.where(Tensor([4294967295, 1, 1, 1],"bool"), Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.where(Tensor([4294967295, 1, 1],"bool"), Tensor([4294967295, 1, 24276],"float32"), Tensor([4294967295, 1, 24276],"float32"), )
paddle.where(Tensor([4294967295, 1, 1],"bool"), Tensor([4294967295, 1, 27216],"float32"), Tensor([4294967295, 1, 27216],"float32"), )
paddle.where(Tensor([4294967295, 1, 1],"bool"), Tensor([4294967295, 1, 30324],"float32"), Tensor([4294967295, 1, 30324],"float32"), )
paddle.where(Tensor([4294967295, 1, 1],"bool"), Tensor([4294967295, 1, 33600],"float32"), Tensor([4294967295, 1, 33600],"float32"), )
paddle.where(Tensor([4294967295, 1],"bool"), 9.99999993922529e-09, Tensor([128, 1],"float32"), )
paddle.where(Tensor([4294967295, 1],"bool"), 9.99999993922529e-09, Tensor([4294967295, 1],"float32"), )
paddle.where(Tensor([4294967295, 1],"bool"), Tensor([2, 2, 4],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.where(Tensor([4294967295, 1],"bool"), Tensor([3, 40],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([4294967295, 1],"bool"), Tensor([3, 40],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([4294967295],"bool"), 1.0, 2.0, )
paddle.where(Tensor([4294967295],"bool"), Tensor([1001],"int32"), Tensor([1001],"int32"), )
paddle.where(Tensor([4294967295],"bool"), Tensor([1002],"int32"), Tensor([1002],"int32"), )
paddle.where(Tensor([4294967295],"bool"), Tensor([1003],"int32"), Tensor([1003],"int32"), )
paddle.where(Tensor([4294967295],"bool"), Tensor([1004],"int32"), Tensor([1004],"int32"), )
paddle.where(Tensor([4294967295],"bool"), Tensor([1005],"int32"), Tensor([1005],"int32"), )
paddle.where(Tensor([4294967295],"bool"), Tensor([300, 40],"float32"), Tensor([1],"float32"), )
paddle.vision.ops.prior_box(Tensor([13982, 48, 80, 80],"float32"), Tensor([13982, 3, 640, 640],"float32"), list[16.0,24.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[8.0,8.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(Tensor([27963, 96, 40, 40],"float32"), Tensor([27963, 3, 640, 640],"float32"), list[32.0,48.0,64.0,80.0,96.0,128.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[16.0,16.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(Tensor([4, 167773, 80, 80],"float32"), Tensor([4, 167773, 640, 640],"float32"), list[16.0,24.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[8.0,8.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(Tensor([4, 671089, 40, 40],"float32"), Tensor([4, 671089, 640, 640],"float32"), list[32.0,48.0,64.0,80.0,96.0,128.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[16.0,16.0,], 0.5, False, None, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 185898, 76, 76],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=80, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 110810, 38],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vision.ops.prior_box(Tensor([55925, 48, 40, 40],"float32"), Tensor([55925, 3, 640, 640],"float32"), list[32.0,48.0,64.0,80.0,96.0,128.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[16.0,16.0,], 0.5, False, None, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([1073741824, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.prior_box(Tensor([6991, 96, 80, 80],"float32"), Tensor([6991, 3, 640, 640],"float32"), list[16.0,24.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[8.0,8.0,], 0.5, False, None, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 1, 1073741824],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.prior_box(input=Tensor([2, 10, 32, 6710887],"float32"), image=Tensor([2, 10, 40, 6710887],"float32"), min_sizes=list[2.0,4.0,], clip=True, flip=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1073741824],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.prior_box(input=Tensor([2, 10, 6710887, 32],"float32"), image=Tensor([2, 10, 6710887, 40],"float32"), min_sizes=list[2.0,4.0,], clip=True, flip=True, )
paddle.vision.ops.prior_box(input=Tensor([2, 2097152, 32, 32],"float32"), image=Tensor([2, 2097152, 40, 40],"float32"), min_sizes=list[2.0,4.0,], clip=True, flip=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1073741824],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.prior_box(input=Tensor([419431, 10, 32, 32],"float32"), image=Tensor([419431, 10, 40, 40],"float32"), min_sizes=list[2.0,4.0,], clip=True, flip=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4294967295, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4294967295, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 268435456, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 221619],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 221619, 19],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 110810],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([1073741824, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 1, 1073741824],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.where(Tensor([477218589, 3, 3],"bool"), Tensor([4, 3, 3],"float64"), Tensor([1],"float64"), )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1073741824],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1073741824],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vander(Tensor([4294967295],"float32"), None, False, )
paddle.where(Tensor([477218589, 9],"bool"), Tensor([1],"int32"), Tensor([13, 9],"int32"), )
paddle.where(Tensor([544, 280, 376, 25, 3],"bool"), Tensor([4, 280, 376, 25, 3],"float32"), Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4294967295, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vecdot(Tensor([1073741824, 4],"float32"), Tensor([3, 4],"float32"), axis=-1, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4294967295, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 268435456, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vecdot(Tensor([107374183, 4, 5],"float64"), Tensor([3, 4, 5],"float64"), axis=1, )
paddle.where(Tensor([6, 4418691, 9, 18],"bool"), Tensor([6, 8, 9, 18],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([6, 4418691, 9, 18],"bool"), Tensor([6, 8, 9, 18],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([6, 8, 4971027, 18],"bool"), Tensor([6, 8, 9, 18],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([6, 8, 4971027, 18],"bool"), Tensor([6, 8, 9, 18],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([3314018, 8, 9, 18],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([3314018, 8, 9, 18],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 4418691, 9, 18],"float16"), Tensor([1],"float16"), )
paddle.vecdot(Tensor([178956971, 3, 4],"float64"), Tensor([2, 3, 4],"float64"), axis=-1, )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 4418691, 9, 18],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 8, 4971027, 18],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 8, 4971027, 18],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 8, 9, 18],"float16"), Tensor([4294967295],"float16"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 8, 9, 18],"float32"), Tensor([4294967295],"float32"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 8, 9, 9942054],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([6, 8, 9, 18],"bool"), Tensor([6, 8, 9, 9942054],"float32"), Tensor([1],"float32"), )
paddle.where(Tensor([6, 8, 9, 9942054],"bool"), Tensor([6, 8, 9, 18],"float16"), Tensor([1],"float16"), )
paddle.where(Tensor([6, 8, 9, 9942054],"bool"), Tensor([6, 8, 9, 18],"float32"), Tensor([1],"float32"), )
paddle.vecdot(Tensor([2, 2147483648],"float32"), Tensor([2],"float32"), axis=-1, )
paddle.where(Tensor([85899346, 10, 5],"bool"), Tensor([10, 10, 5],"float64"), Tensor([1],"float64"), )
paddle.vision.ops.matrix_nms(Tensor([1, 1073741824, 4],"float32"), Tensor([1, 1073741824, 64],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vecdot(Tensor([2, 268435457, 4],"float64"), Tensor([2, 3, 4],"float64"), axis=-1, )
paddle.vecdot(Tensor([2, 2],"float32"), Tensor([1073741825, 2],"float64"), axis=-1, )
paddle.vecdot(Tensor([2, 2],"float32"), Tensor([2, 1073741825],"float64"), axis=-1, )
paddle.vecdot(Tensor([2, 2],"float32"), Tensor([4294967295],"float32"), axis=-1, )
paddle.vision.ops.matrix_nms(Tensor([1, 1073741824, 4],"float32"), Tensor([1, 4, 64],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vecdot(Tensor([2, 3, 357913942],"float64"), Tensor([2, 3, 4],"float64"), axis=-1, )
paddle.vision.ops.matrix_nms(Tensor([1, 64, 4],"float32"), Tensor([1, 4, 1073741824],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vecdot(Tensor([2, 3, 4],"float64"), Tensor([178956971, 3, 4],"float64"), axis=-1, )
paddle.vecdot(Tensor([2, 3, 4],"float64"), Tensor([2, 268435457, 4],"float64"), axis=-1, )
paddle.vecdot(Tensor([2, 3, 4],"float64"), Tensor([2, 3, 357913942],"float64"), axis=-1, )
paddle.vision.ops.box_coder(Tensor([1073741824, 4],"float32"), list[0.12371375411748886,0.7415851950645447,0.40236398577690125,0.6756224632263184,], Tensor([30, 81, 4],"float32"), "decode_center_size", False, axis=1, )
paddle.vecdot(Tensor([2147483648, 2],"float32"), Tensor([2],"float32"), axis=-1, )
paddle.vision.ops.box_coder(Tensor([30, 143165577],"float32"), list[0.12371375411748886,0.7415851950645447,0.40236398577690125,0.6756224632263184,], Tensor([30, 81, 4],"float32"), "decode_center_size", False, axis=1, )
paddle.vecdot(Tensor([2],"float32"), Tensor([2, 2147483648],"float32"), axis=-1, )
paddle.vision.ops.box_coder(Tensor([30, 4],"float32"), list[0.12371375411748886,0.7415851950645447,0.40236398577690125,0.6756224632263184,], Tensor([13256072, 81, 4],"float32"), "decode_center_size", False, axis=1, )
paddle.vecdot(Tensor([2],"float32"), Tensor([2147483648, 2],"float32"), axis=-1, )
paddle.vecdot(Tensor([3, 1431655765],"float32"), Tensor([3, 4],"float32"), axis=-1, )
paddle.vision.ops.matrix_nms(Tensor([1, 64, 4],"float32"), Tensor([16777216, 4, 64],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vecdot(Tensor([3, 143165577, 5],"float64"), Tensor([3, 4, 5],"float64"), axis=1, )
paddle.vision.ops.matrix_nms(Tensor([1, 64, 67108864],"float32"), Tensor([1, 4, 64],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vision.ops.generate_proposals(Tensor([1, 16777216, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vecdot(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 5],"float64"), axis=1, )
paddle.vecdot(Tensor([3, 4, 5],"float64"), Tensor([107374183, 4, 5],"float64"), axis=1, )
paddle.vecdot(Tensor([3, 4, 5],"float64"), Tensor([3, 143165577, 5],"float64"), axis=1, )
paddle.vision.ops.matrix_nms(Tensor([1, 64, 67108864],"float32"), Tensor([1, 4, 67108864],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vecdot(Tensor([3, 4, 5],"float64"), Tensor([3, 4, 178956971],"float64"), axis=1, )
paddle.vecdot(Tensor([3, 4],"float32"), Tensor([1073741824, 4],"float32"), axis=-1, )
paddle.vecdot(Tensor([3, 4],"float32"), Tensor([3, 1431655765],"float32"), axis=-1, )
paddle.vecdot(Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.vecdot(Tensor([4294967295],"float32"), Tensor([2, 2],"float32"), axis=-1, )
paddle.vecdot(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.view(Tensor([10, 10, 10, 4294968],"float32"), list[10,10,10,10,-1,], )
paddle.view(Tensor([10, 10, 10, 4294968],"float32"), list[10,100,20,], )
paddle.vision.ops.box_coder(Tensor([30, 4],"float32"), list[0.12371375411748886,0.7415851950645447,0.40236398577690125,0.6756224632263184,], Tensor([30, 81, 1767477],"float32"), "decode_center_size", False, axis=1, )
paddle.vision.ops.box_coder(prior_box=Tensor([1073741824, 4],"float32"), prior_box_var=Tensor([80, 4],"float32"), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.box_coder(prior_box=Tensor([1073741824, 4],"float32"), prior_box_var=tuple(1,2,3,4,), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.view(Tensor([10, 10, 2147484, 20],"float32"), list[10,10,10,10,-1,], )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=Tensor([1073741824, 4],"float32"), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.view(Tensor([10, 10, 2147484, 20],"float32"), list[10,100,20,], )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([170436, 21, 1200],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.view(Tensor([10, 2147484, 10, 20],"float32"), list[10,10,10,10,-1,], )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([170436, 21, 1200],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.view(Tensor([10, 2147484, 10, 20],"float32"), list[10,100,20,], )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([170436, 21, 1200],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.view(Tensor([2147484, 10, 10, 20],"float32"), list[10,10,10,10,-1,], )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([7, 21, 29217465],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.view(Tensor([2147484, 10, 10, 20],"float32"), list[10,100,20,], )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([7, 21, 29217465],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.view_as(Tensor([10, 10, 10, 20],"float32"), Tensor([10, 100, 4294968],"float32"), )
paddle.view_as(Tensor([10, 10, 10, 20],"float32"), Tensor([10, 21474837, 20],"float32"), )
paddle.view_as(Tensor([10, 10, 10, 20],"float32"), Tensor([2147484, 100, 20],"float32"), )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([7, 21, 29217465],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.view_as(Tensor([10, 10, 10, 4294968],"float32"), Tensor([10, 100, 20],"float32"), )
paddle.view_as(Tensor([10, 10, 2147484, 20],"float32"), Tensor([10, 100, 20],"float32"), )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=Tensor([80, 4],"float32"), target_box=Tensor([20, 53687092, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.view_as(Tensor([10, 2147484, 10, 20],"float32"), Tensor([10, 100, 20],"float32"), )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=Tensor([80, 4],"float32"), target_box=Tensor([20, 80, 2684355],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.view_as(Tensor([2147484, 10, 10, 20],"float32"), Tensor([10, 100, 20],"float32"), )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=Tensor([80, 53687092],"float32"), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=tuple(1,2,3,4,), target_box=Tensor([20, 53687092, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=tuple(1,2,3,4,), target_box=Tensor([20, 80, 2684355],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 53687092],"float32"), prior_box_var=Tensor([80, 4],"float32"), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 53687092],"float32"), prior_box_var=tuple(1,2,3,4,), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 67108864],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 67108864, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.distribute_fpn_proposals(Tensor([1073741824, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([1073741824, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([8],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([4096, 1048576],"float32"), 2, 5, 4, 224, rois_num=Tensor([8],"int64"), )
paddle.vision.ops.generate_proposals(Tensor([2, 134217728, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 178956971],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 511306],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 511306],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 511306],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 511306],"float32"), Tensor([7, 21, 511306],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 511306],"float32"), Tensor([7, 21, 511306],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 511306],"float32"), Tensor([7, 21, 511306],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 153391690, 4],"float32"), Tensor([7, 153391690, 1200],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 153391690, 4],"float32"), Tensor([7, 153391690, 1200],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 153391690, 4],"float32"), Tensor([7, 153391690, 1200],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 153391690, 4],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 153391690, 4],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 153391690, 4],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([894785, 1200, 4],"float32"), Tensor([894785, 21, 1200],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([894785, 1200, 4],"float32"), Tensor([894785, 21, 1200],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([894785, 1200, 4],"float32"), Tensor([894785, 21, 1200],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
