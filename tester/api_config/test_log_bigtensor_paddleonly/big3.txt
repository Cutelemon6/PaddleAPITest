paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 2684355, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 53687092, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10737419, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1073742, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 1048576, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 16, 1048576],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 131072, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 131072, 128, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 131072, 128, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 131072, 128, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 134217728, 4, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 17895698, 6, 10],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 107374183],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 53687092],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 5],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 107374183, 5],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 8388608],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 8388608],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 8388608],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 8388608],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 16, 67108864],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 16, 67108864],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 178956971, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 178956971, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 17895698, 5, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 256, 4194304],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 29826162, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 29826162, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 32, 33554432],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 33554432, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 134217729],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 134217729],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 134217729],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 22369622, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 5, 26843546],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4194304, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 4194304, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 53687092, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 178956971],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 178956971],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 29826162, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 29826162, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 6, 29826162],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 6, 29826162],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 64, 16777216],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 67108864, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 67108864, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 8388608, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 8388608, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 8388608, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 8388608, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2097152, 32, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2097152, 32, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2147483648, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2147483648, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2147483648, 1, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2147483648, 1, 1],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 21474837, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2147484, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2386093, 30, 30],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 8388608],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 8388608],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 8388608],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 8388608],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 1048576, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 128, 65536],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 256, 131072, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 131072, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 2, 4194304],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 2097152, 4],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 262144, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 256, 32, 262144],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 256, 4, 2097152],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 4194304, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 64, 131072],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 64, 131072],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 64, 131072],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 65536, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 65536, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 256, 8, 1048576],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 8388608, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 8388608, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 8388608, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 8388608, 1],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 262144, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 262144, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 268435457, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2684355, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 119304648, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 143165577, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 143165577, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 16, 44739243],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 16, 44739243],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 22369622, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 32, 22369622],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 35791395, 10],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 44739243],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 44739243],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 44739243, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 44739243, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 143165577],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 143165577],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 119304648],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 119304648],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 59652324],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 71582789, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 320, 223697, 30],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 320, 30, 223697],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 32768, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 33554432, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 33554432, 4, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 33554432, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 35791395, 6, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2684355],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 5368710],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2684355, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 5368710, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2684355, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 33554432],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 33554432],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 44739243, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 44739243, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 44739243, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 44739243, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 5368710, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 44739243, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 44739243, 4, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 464422, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 524288, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 524288, 64, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870912, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 53687092, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 59652324, 6, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 59652324, 6, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 59652324, 6, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 64, 493448, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 64, 68, 493448],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 65536, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 8388608, 16, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 8388608, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 85899346, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 85899346, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 8947849, 4, 5, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 9942054, 6, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 9942054, 6, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([20452226, 5, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2048, 128, 128, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2048, 128, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2048, 128, 128, 128],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([2048, 256, 64, 128],"float16"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2048, 256, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2069, 192, 104, 104],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2097152, 128, 16],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([2097152, 128, 16],"float32"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([2097152, 128, 4, 4],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2097152, 2, 32, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([20972, 512, 20, 20],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([20972, 512, 20, 20],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2130441, 3, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2151, 128, 100, 156],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2167, 256, 88, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([21846, 768, 16, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([21846, 768, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2208, 128, 100, 152],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2208, 128, 152, 100],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 4, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([22369622, 4, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([22369622, 4, 4, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2236963, 160, 4, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2236963, 160, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2236963, 40, 8, 6],"float16"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2236963, 40, 8, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2236963, 40, 8, 6],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2237, 192, 100, 100],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([22851, 3, 227, 276],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([23432, 3, 235, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([23860930, 3, 6, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([24, 174763, 32, 32],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([24, 32, 16, 349526],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([24, 32, 16, 349526],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([24, 32, 174763, 32],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([24, 32, 32, 174763],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([24, 32, 349526, 16],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([24, 32, 349526, 16],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([24, 699051, 16, 16],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([24, 699051, 16, 16],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([24647, 3, 212, 274],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2468, 128, 100, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([262144, 1024, 4, 4],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([262144, 2, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([262144, 256, 8, 8],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([269, 256, 200, 312],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([27270, 3, 250, 210],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([27595, 19, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([276, 256, 200, 304],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([276, 256, 304, 200],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([2796203, 32, 8, 6],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([2796203, 32, 8, 6],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([279621, 80, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([27963, 3, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([28294, 3, 200, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([28533, 768, 14, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([3, 1, 1398102, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 256, 5592406],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 5592406, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 686, 2086962],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 12319, 256, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 14564, 256, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 15034, 256, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 16449, 256, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 17811, 256, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 2039, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 21846, 256, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 29128, 256, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 699051],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 394179, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 466034, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 481068, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 526345, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 569927, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 932068, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([309, 256, 200, 272],"float16"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([309, 256, 200, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([31581, 1, 80, 1700],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([32768, 128, 32, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([32768, 128, 32, 32],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([32768, 128, 32, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([32768, 128, 32, 32],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([32768, 128, 32, 32],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([32768, 2, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([32768, 64, 32, 64],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([32768, 64, 32, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([33554432, 128, 1, 1],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([33554432, 128, 1, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([33554432, 128, 1, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([33554432, 128, 1, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([33554432, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([33554432, 32, 2, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([3450, 19, 256, 256],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3450, 19, 256, 256],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3450, 19, 256, 256],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3450, 19, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([349526, 192, 8, 8],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([349526, 192, 8, 8],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([349526, 3, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([349526, 3, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([349526, 3, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([349526, 3, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([3496, 3, 640, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([3728271, 128, 3, 3],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([3728271, 32, 6, 6],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([38044, 256, 21, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([38044, 256, 21, 21],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([38774, 3, 181, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([3965, 128, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([39768216, 3, 6, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([39946, 256, 20, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([39946, 256, 20, 21],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([39946, 256, 21, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([39946, 256, 21, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([39946, 256, 21, 20],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 1048576, 32, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 1048576, 32, 32],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 1048576, 32, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 1048576, 32, 32],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 10486, 320, 320],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 10486, 320, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 1073741824, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 1263226, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 1263226, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 12782641, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 12782641, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 12782641, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 12782641, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 1, 8388608],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 1, 8388608],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 1, 8388608],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 128, 65536],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 128, 65536],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524288],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524288],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524288],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524288],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524288],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 524288],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 262144, 32],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 262144],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 262144],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 262144],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 262144],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 524288, 16],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 524288, 16],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 65536, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 65536, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 8388608, 1],"float16"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 8388608, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 8388608, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 131072, 64, 128],"float16"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 131072, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 1342178, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 150, 111849, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 150, 111849, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 150, 64, 111849],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 150, 64, 111849],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 16384, 256, 256],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 16384, 256, 256],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 16384, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 16777216, 8, 8],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 16777216, 8, 8],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 441506],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 441506],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 441506],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 441506],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 19, 16, 3532046],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 16, 3532046],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 1766023, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 1766023, 32],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 220753, 256],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 220753, 256],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 19, 220753, 256],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 220753, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 19, 220753, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 256, 220753],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 256, 220753],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 256, 220753],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 32, 1766023],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 441506, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 441506, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 883012, 64],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 192, 699051, 8],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 699051, 8],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 8, 699051],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 8, 699051],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 19738, 200, 272],"float16"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 2, 128, 4194304],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 2, 4194304, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 2097152, 16, 32],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 2097152, 16, 32],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 2097152, 16, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 2097152, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 2097152, 16, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 2097152, 16, 32],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 2434789, 21, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2434789, 21, 21],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 25565282, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 2556529, 20, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2556529, 20, 21],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2556529, 21, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2556529, 21, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2556529, 21, 20],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 1, 4194304],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 1, 4194304],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 1, 4194304],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 299594],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 279621],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15421, 272],"float16"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262144],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 233017],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 220753],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 199729, 21],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 200, 20972],"float16"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 199729],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 220753, 19],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 246724, 17],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 262144, 16],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 262144, 16],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 299594, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 299594, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 299594, 14],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 322639, 13],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 32768, 128],"float16"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 32768, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 4194304, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 4194304, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 4194304, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 64, 65536],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 64, 65536],"float16"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 64, 65536],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 65536, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 258, 100, 41618],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 122406, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 122406, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 166472],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 166472],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 30602, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 50, 83236],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 61203, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 262144, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 262144, 64, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 262144, 64, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 262144, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 2684355, 20, 20],"float16"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 19, 21],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 21, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 21, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 21, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 21, 19],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 21, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2691083, 21, 19],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 19, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 19, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 19, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 19, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 20, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 20, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 20, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 20, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 20, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2825637, 20, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2840587, 18, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2840587, 18, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2840587, 18, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2840587, 18, 21],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2840587, 18, 21],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2840587, 21, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2974355, 19, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2974355, 19, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2974355, 19, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2974355, 19, 19],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2974355, 19, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2974355, 19, 19],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2982617, 18, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 2982617, 18, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3, 5592406, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 3, 64, 5592406],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 17, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 17, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 17, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 17, 21],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 17, 21],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 17, 21],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 21, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 21, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3007681, 21, 17],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 18, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 18, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 18, 19],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 18, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 19, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 19, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 19, 18],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3139596, 19, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 17, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 17, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 17, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 17, 20],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 17, 20],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 17, 20],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 20, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 20, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 20, 17],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3158065, 20, 17],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 315807, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3195661, 16, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3195661, 16, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3195661, 16, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3195661, 16, 21],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 32, 1, 33554432],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32, 33554432, 1],"float16"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 32768, 128, 256],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 32768, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 3314018, 18, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3314018, 18, 18],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 17, 19],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 19, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 19, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 19, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 19, 17],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3324279, 19, 17],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 17, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 17, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 17, 18],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 18, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 18, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 18, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3508961, 18, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3532046, 16, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3532046, 16, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3532046, 16, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3532046, 16, 19],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3579140, 15, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3579140, 15, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3715370, 17, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3715370, 17, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3767516, 15, 19],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3767516, 15, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3767516, 15, 19],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3767516, 15, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3834793, 14, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 13, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 21, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 21, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3933121, 21, 13],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3947581, 16, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3947581, 16, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3947581, 16, 17],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3947581, 16, 17],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4036624, 14, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4036624, 14, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4036624, 14, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4036624, 14, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4036624, 14, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4036624, 19, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4129777, 13, 20],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4129777, 13, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4129777, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4129777, 13, 20],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4194304, 16, 16],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 4194304, 16, 16],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 4194304, 16, 16],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 4194304, 16, 16],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 13, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 13, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 13, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 13, 19],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 13, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 13, 19],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 19, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4347133, 19, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4511521, 17, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4511521, 17, 14],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4588641, 13, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4588641, 13, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4588641, 13, 18],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4588641, 13, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4858561, 13, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4858561, 13, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4858561, 13, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4858561, 17, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 4858561, 17, 13],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 5, 15339169, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 15339169, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 15339169, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 15339169, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 20, 5368710],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 30678338, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 5368710, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 17895698],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 17895698],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 17895698],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 17895698],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 35791395],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 524288, 32, 64],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 524288, 32, 64],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 524288, 32, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 262144, 64],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 262144, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 32, 524288],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 32, 524288],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 320, 52429],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 320, 52429],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 52429, 320],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 52429, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 65536, 128, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 65536, 128, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 65536, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 65536, 128, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 65536, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 78952, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4096, 256, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4096, 256, 64, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4096, 256, 64, 64],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4096, 256, 64, 64],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4194304, 1, 32, 32],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4194304, 256, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([41944, 256, 20, 20],"float16"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([41944, 64, 40, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([41944, 64, 40, 40],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([41944, 64, 40, 40],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([41944, 64, 40, 40],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 19, 21],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 21, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 21, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 21, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 21, 19],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 21, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([42049, 256, 21, 19],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4229, 256, 62, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4229, 256, 62, 64],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4269, 258, 50, 78],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4381, 258, 50, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4381, 258, 76, 50],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([441506, 19, 16, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([441506, 19, 16, 32],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 19, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 19, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 19, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 19, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 20, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 20, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 20, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 20, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 20, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44151, 256, 20, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44385, 256, 18, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44385, 256, 18, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44385, 256, 18, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44385, 256, 18, 21],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44385, 256, 18, 21],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([44385, 256, 21, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4473925, 80, 4, 3],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4620, 8, 256, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([46475, 256, 19, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46475, 256, 19, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46475, 256, 19, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46475, 256, 19, 19],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46475, 256, 19, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46475, 256, 19, 19],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46604, 256, 18, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46604, 256, 18, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 17, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 17, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 17, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 17, 21],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 17, 21],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 17, 21],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 21, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 21, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([46996, 256, 21, 17],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([48859, 3, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4897, 258, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 18, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 18, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 18, 19],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 18, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 19, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 19, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 19, 18],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49057, 256, 19, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 17, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 17, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 17, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 17, 20],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 17, 20],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 17, 20],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 20, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 20, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 20, 17],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49345, 256, 20, 17],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49933, 256, 16, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49933, 256, 16, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49933, 256, 16, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([49933, 256, 16, 21],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([512, 160, 17477, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 160, 17477, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 160, 4, 13108],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 160, 4, 13108],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 174763, 8, 6],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 174763, 8, 6],"float16"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 174763, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 10923, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 64, 43691],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 16, 13108],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 16, 13108],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 17477, 12],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 17477, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 40, 34953, 6],"float16"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 40, 4, 52429],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 40, 4, 52429],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 40, 69906, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 40, 69906, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 40, 8, 26215],"float16"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 43691, 16, 12],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 43691, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 512, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 699051, 4, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 699051, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 699051, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 699051, 4, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 80, 17477, 6],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 80, 17477, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 80, 8, 13108],"float16"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 80, 8, 13108],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([51782, 256, 18, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51782, 256, 18, 18],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 17, 19],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 19, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 19, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 19, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 19, 17],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([51942, 256, 19, 17],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([524288, 2, 64, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([524288, 2, 64, 64],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([524288, 2, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([524288, 32, 16, 16],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([524288, 32, 16, 16],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 10, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 2, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 2, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([53687092, 2, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 10, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([536871, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([541201, 2, 62, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 768, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5462, 8, 256, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 17, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 17, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 17, 18],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 18, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 18, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 18, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([54828, 256, 18, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([55189, 256, 16, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([55189, 256, 16, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([55189, 256, 16, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([55189, 256, 16, 19],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([55462, 160, 22, 22],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([5592406, 3, 16, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5592406, 3, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([559241, 160, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([559241, 40, 16, 12],"float16"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([559241, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([559241, 40, 16, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([55925, 256, 15, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([55925, 256, 15, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([56, 18725, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 2, 16, 2396746],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 2396746, 16],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 2, 599187, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 2, 64, 599187],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 299594, 16, 16],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 3, 399458, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 3, 64, 399458],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 768, 31, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5638, 8, 256, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([57266231, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([57266231, 3, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([58053, 256, 17, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([58053, 256, 17, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([58868, 256, 15, 19],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([58868, 256, 15, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([58868, 256, 15, 19],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([58868, 256, 15, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([59652324, 2, 6, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([59652324, 2, 6, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([59919, 256, 14, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([60870, 160, 21, 21],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([6115, 1, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 13, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 21, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 21, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61456, 256, 21, 13],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61681, 256, 16, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61681, 256, 16, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61681, 256, 16, 17],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([61681, 256, 16, 17],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6169, 8, 256, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([63073, 256, 14, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([63073, 256, 14, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([63073, 256, 14, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([63073, 256, 14, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([63073, 256, 14, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([63073, 256, 19, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([631613, 1, 80, 85],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([63430, 128, 23, 23],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 16384, 64, 64],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 16384, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 3, 349526, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 3, 64, 349526],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 64, 16384, 64],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 64, 32, 32768],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 64, 32768, 32],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 64, 64, 16384],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 65536, 32, 32],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64528, 256, 13, 20],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([64528, 256, 13, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([64528, 256, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([64528, 256, 13, 20],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([65536, 1, 256, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([65536, 1024, 8, 8],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([65536, 128, 16, 32],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([65536, 128, 16, 32],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([65536, 128, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([65536, 128, 16, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([65536, 2, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([65536, 256, 16, 16],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([65536, 256, 16, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([65536, 256, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([65536, 256, 16, 16],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([65536, 64, 32, 32],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([656, 64, 320, 320],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([656, 64, 320, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6679, 8, 256, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([67109, 160, 20, 20],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 13, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 13, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 13, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 13, 19],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 13, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 13, 19],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 19, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([67924, 256, 19, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([6899, 19, 128, 256],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([6899, 19, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([699051, 32, 16, 12],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([699051, 32, 16, 12],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([6991, 150, 64, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([6991, 150, 64, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([70493, 256, 17, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([70493, 256, 17, 14],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([71698, 256, 13, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([71698, 256, 13, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([71698, 256, 13, 18],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([71698, 256, 13, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([7257, 2, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([7282, 1, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([7282, 64, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([73, 100, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([73, 200, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([74359, 160, 19, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([75916, 256, 13, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([75916, 256, 13, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([75916, 256, 13, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([75916, 256, 17, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([75916, 256, 17, 13],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([7929, 1, 736, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([7929, 64, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 1311, 640, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 1342178, 20, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 1342178, 20, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 1342178, 20, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 1342178, 20, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 3, 279621, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 3, 640, 279621],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 335545, 40, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 335545, 40, 40],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 335545, 40, 40],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 335545, 40, 40],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 5243, 320, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 64, 104858, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 104858, 80],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 104858, 80],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 419431],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 419431],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 419431],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 419431],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 209716, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 209716, 40],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 209716, 40],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 209716, 40],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 26215, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 64, 320, 26215],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 209716],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 209716],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 209716],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 209716],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 419431, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 419431, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 419431, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 419431, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 80, 104858],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 80, 104858],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 80, 104858],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 83887, 80, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 83887, 80, 80],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 83887, 80, 80],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([80, 100, 736, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([82851, 160, 18, 18],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8388608, 128, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8388608, 128, 2, 2],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8388608, 2, 16, 16],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8388608, 2, 16, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8388608, 2, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8666, 1, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([87, 100, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([87382, 192, 16, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([87382, 3, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8947849, 2, 4, 5, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8947849, 40, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8947849, 40, 4, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([932068, 128, 6, 6],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([9345, 1, 576, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([9345, 1, 576, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([9345, 1, 576, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([9345, 1, 576, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([9345, 1, 576, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([9710, 1, 768, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([9710, 1, 768, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([9710, 1, 768, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([9710, 1, 768, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([9710, 1, 768, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([9942054, 2, 6, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([9942054, 2, 6, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([178956971, 1, 3, 4],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([178956971, 1, 3, 4],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 268435457, 4],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 268435457, 4],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 357913942],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 357913942],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 715827883],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 536870912, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 178956971, 3, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 102261127, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 119304648, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 14608733, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 20452226, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 20452226],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 119304648],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 102261127],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 43826197, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 59652324, 6, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 8765240, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 89478486, 3, 4],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 89478486, 3, 4],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([29217465, 3, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([357913942, 1, 3, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([39768216, 3, 6, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([5843493, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.kl_div(input=Tensor([262144, 128, 128],"float32"), label=Tensor([262144, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([262144, 128, 128],"float32"), label=Tensor([32, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 1048576, 128],"float32"), label=Tensor([32, 1048576, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 1048576, 128],"float32"), label=Tensor([32, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 1048576],"float32"), label=Tensor([32, 128, 1048576],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 1048576],"float32"), label=Tensor([32, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 128],"float32"), label=Tensor([262144, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 128],"float32"), label=Tensor([32, 1048576, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 128],"float32"), label=Tensor([32, 128, 1048576],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([1073741825, 2],"float64"), Tensor([5, 2],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([107374183, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([107374183, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([107374183, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([107374183, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([107374183, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([214748365, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([5, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([5, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([5, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([5, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([107374183, 20],"float64"), Tensor([5, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([2147483648, 2],"float32"), label=Tensor([2147483648, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([2147483648, 2],"float32"), label=Tensor([5, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([214748365, 20],"float32"), Tensor([107374183, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([214748365, 20],"float32"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 20, 5368710],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 20, 5368710],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 20, 5368710],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 2147484, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 2147484, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 2147484, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([4294968, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([4294968, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([4294968, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 5368710],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 5368710],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 5368710],"float32"), Tensor([40, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 5368710],"float32"), Tensor([40, 20, 5368710],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 5368710],"float32"), Tensor([40, 20, 5368710],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 5368710],"float32"), Tensor([40, 20, 5368710],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 2147484, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 2147484, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 2147484, 50],"float32"), Tensor([40, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 2147484, 50],"float32"), Tensor([40, 2147484, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 2147484, 50],"float32"), Tensor([40, 2147484, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 2147484, 50],"float32"), Tensor([40, 2147484, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([4294968, 20, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([4294968, 20, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([4294968, 20, 50],"float32"), Tensor([40, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([4294968, 20, 50],"float32"), Tensor([4294968, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([4294968, 20, 50],"float32"), Tensor([4294968, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([4294968, 20, 50],"float32"), Tensor([4294968, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 2],"float32"), label=Tensor([2147483648, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 2],"float32"), label=Tensor([5, 858993459],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 2],"float64"), Tensor([1073741825, 2],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 2],"float64"), Tensor([5, 429496730],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float32"), Tensor([107374183, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float32"), Tensor([5, 429496730],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([107374183, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([107374183, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([107374183, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([107374183, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([107374183, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([214748365, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 429496730],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 429496730],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 429496730],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 429496730],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 429496730],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 858993459],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 2],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 429496730],"float64"), Tensor([5, 858993459],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 858993459],"float32"), label=Tensor([5, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 858993459],"float32"), label=Tensor([5, 858993459],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 858993459],"float32"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 858993459],"float32"), Tensor([5, 429496730],"float64"), "mean", False, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 256, 5592406],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 5592406, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 65536, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([21846, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 5592406],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 5592406],"float32"), Tensor([1, 3, 256, 5592406],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 5592406, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 5592406, 256],"float32"), Tensor([1, 3, 5592406, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([1, 4294967295],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 4294967295],"float32"), Tensor([1, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4294967295],"float32"), Tensor([1, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 4294967295],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4294967295],"float32"), Tensor([1, 4294967295],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 65536, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 65536, 256, 256],"float32"), Tensor([1, 65536, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 42949673],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 42949673],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 42949673],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 42949673],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 42949673],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 42949673],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 42949673],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 42949673],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 42949673],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 42949673],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 42949673],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 42949673],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 42949673],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 85899346, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 85899346, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 85899346, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 85899346, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 85899346, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 85899346, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 214748365, 2],"float32"), Tensor([10, 214748365, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 214748365, 2],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 4],"float32"), Tensor([10, 429496730],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 429496730],"float32"), Tensor([10, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([10, 214748365, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([10, 499, 860715],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([4303575, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 860715],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 860715],"float32"), Tensor([10, 499, 860715],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 85899346, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 85899346, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 85899346, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 85899346, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 85899346, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 85899346, 5],"float32"), Tensor([10, 85899346, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 4],"float32"), Tensor([100, 42949673],"float32"), )
paddle.nn.functional.l1_loss(Tensor([100, 4],"float32"), Tensor([100, 42949673],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([100, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), )
paddle.nn.functional.l1_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([101, 4],"float32"), Tensor([101, 42524429],"float32"), )
paddle.nn.functional.l1_loss(Tensor([101, 4],"float32"), Tensor([101, 42524429],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([101, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([101, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([101, 42524429],"float32"), Tensor([101, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([101, 42524429],"float32"), Tensor([101, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([101, 42524429],"float32"), Tensor([101, 42524429],"float32"), )
paddle.nn.functional.l1_loss(Tensor([101, 42524429],"float32"), Tensor([101, 42524429],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([102, 4],"float32"), Tensor([102, 42107523],"float32"), )
paddle.nn.functional.l1_loss(Tensor([102, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([102, 42107523],"float32"), Tensor([102, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([102, 42107523],"float32"), Tensor([102, 42107523],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([1, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([1, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([10, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([100, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([100, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([101, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([101, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([102, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([128, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1073741824, 4],"float32"), Tensor([132, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1073741825, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1073741825, 2],"float64"), label=Tensor([2, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1073742, 500, 8],"float32"), Tensor([1073742, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([1073742, 500, 8],"float32"), Tensor([4, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([128, 33554432],"float32"), Tensor([128, 33554432],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([128, 33554432],"float32"), Tensor([128, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([128, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([128, 4],"float32"), Tensor([128, 33554432],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([132, 32537632],"float32"), Tensor([132, 32537632],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([132, 32537632],"float32"), Tensor([132, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([132, 4],"float32"), Tensor([1073741824, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([132, 4],"float32"), Tensor([132, 32537632],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1398102, 3, 32, 32],"float32"), Tensor([1398102, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1398102, 3, 32, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([16, 1044496, 257],"float32"), Tensor([16, 1044496, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 1044496, 257],"float32"), Tensor([16, 511, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([16, 107, 2508743],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([16, 261889, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([39161, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 2508743],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 2508743],"float32"), Tensor([16, 107, 2508743],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 213, 1260261],"float32"), Tensor([16, 213, 1260261],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 213, 1260261],"float32"), Tensor([16, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 213, 513],"float32"), Tensor([16, 213, 1260261],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 213, 513],"float32"), Tensor([16, 523266, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 213, 513],"float32"), Tensor([39307, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 261889, 1025],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 261889, 1025],"float32"), Tensor([16, 261889, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 511, 257],"float32"), Tensor([16, 1044496, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 511, 257],"float32"), Tensor([16, 511, 525315],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 511, 257],"float32"), Tensor([32705, 511, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 511, 525315],"float32"), Tensor([16, 511, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 511, 525315],"float32"), Tensor([16, 511, 525315],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 523266, 513],"float32"), Tensor([16, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 523266, 513],"float32"), Tensor([16, 523266, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([2, 1073741825],"float64"), label=Tensor([2, 1073741825],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 1073741825],"float64"), label=Tensor([2, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), label=Tensor([2, 1073741825],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2097152, 32, 32],"float32"), Tensor([2, 2097152, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2097152, 32, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 22369622, 32],"float32"), Tensor([2, 3, 22369622, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 22369622, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 22369622],"float32"), Tensor([2, 3, 32, 22369622],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 22369622],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([1398102, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 2097152, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 3, 22369622, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 3, 32, 22369622],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([20, 107374183, 2],"float16"), Tensor([20, 107374183, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 107374183, 2],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 107374183, 2],"float32"), Tensor([20, 107374183, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 107374183, 2],"float32"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([20, 107374183, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([20, 500, 429497],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([4294968, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float32"), Tensor([20, 107374183, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float32"), Tensor([20, 500, 429497],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float32"), Tensor([4294968, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float16"), Tensor([20, 500, 429497],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float16"), Tensor([20, 53687092, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float16"), Tensor([2147484, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float32"), Tensor([20, 500, 429497],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float32"), Tensor([20, 53687092, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float32"), Tensor([2147484, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 429497],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 429497],"float16"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 429497],"float16"), Tensor([20, 500, 429497],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 429497],"float32"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 429497],"float32"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 429497],"float32"), Tensor([20, 500, 429497],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 53687092, 4],"float16"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 53687092, 4],"float16"), Tensor([20, 53687092, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 53687092, 4],"float32"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 53687092, 4],"float32"), Tensor([20, 53687092, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([2147484, 500, 4],"float16"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([2147484, 500, 4],"float16"), Tensor([2147484, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([2147484, 500, 4],"float32"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([2147484, 500, 4],"float32"), Tensor([2147484, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([21846, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([21846, 3, 256, 256],"float32"), Tensor([21846, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3, 1431655765],"float32"), Tensor([3, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3, 5],"float32"), Tensor([3, 1431655765],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3, 5],"float32"), Tensor([858993459, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([32705, 511, 257],"float32"), Tensor([16, 511, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([32705, 511, 257],"float32"), Tensor([32705, 511, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([39161, 107, 1025],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([39161, 107, 1025],"float32"), Tensor([39161, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([39307, 213, 513],"float32"), Tensor([16, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([39307, 213, 513],"float32"), Tensor([39307, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 107374183, 10],"float32"), Tensor([4, 107374183, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 107374183, 10],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 134217728, 8],"float32"), Tensor([4, 134217728, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 134217728, 8],"float32"), Tensor([4, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([4, 107374183, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([4, 500, 2147484],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([858994, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 2147484],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 2147484],"float32"), Tensor([4, 500, 2147484],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 2147484],"float32"), Tensor([4, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 8],"float32"), Tensor([1073742, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 8],"float32"), Tensor([4, 134217728, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 8],"float32"), Tensor([4, 500, 2147484],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4294968, 500, 2],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([4294968, 500, 2],"float16"), Tensor([4294968, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([4294968, 500, 2],"float32"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([4294968, 500, 2],"float32"), Tensor([4294968, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([4303575, 499, 2],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([4303575, 499, 2],"float32"), Tensor([4303575, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 128],"float32"), Tensor([64, 3, 128, 174763],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 128],"float32"), Tensor([64, 3, 174763, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 128],"float32"), Tensor([64, 4096, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 128],"float32"), Tensor([87382, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 174763],"float32"), Tensor([64, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 174763],"float32"), Tensor([64, 3, 128, 174763],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 174763, 128],"float32"), Tensor([64, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 174763, 128],"float32"), Tensor([64, 3, 174763, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 4096, 128, 128],"float32"), Tensor([64, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 4096, 128, 128],"float32"), Tensor([64, 4096, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.l1_loss(Tensor([8, 500, 10],"float32"), Tensor([8, 500, 1073742],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 500, 10],"float32"), Tensor([8, 53687092, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 500, 10],"float32"), Tensor([858994, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 500, 1073742],"float32"), Tensor([8, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 500, 1073742],"float32"), Tensor([8, 500, 1073742],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 53687092, 10],"float32"), Tensor([8, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 53687092, 10],"float32"), Tensor([8, 53687092, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([858993459, 5],"float32"), Tensor([3, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([858993459, 5],"float32"), Tensor([858993459, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([85899346, 10, 5],"float32"), Tensor([85899346, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([858994, 500, 10],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([858994, 500, 10],"float32"), Tensor([8, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([858994, 500, 10],"float32"), Tensor([858994, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([87382, 3, 128, 128],"float32"), Tensor([64, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([87382, 3, 128, 128],"float32"), Tensor([87382, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.label_smooth(label=Tensor([104, 1226, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 28, 1474921],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 29, 1424061],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 30, 1376593],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 31, 1332186],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 32, 1290556],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([128, 33554432],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([3982, 32, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([4110, 31, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([4247, 30, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([429497, 10000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([4394, 29, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([4551, 28, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1024, 1, 4194304],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1024, 4195, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([107374183, 2, 2, 5],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([107374183, 2, 2, 5],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([12, 357913942],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([124, 34636834],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 1, 33554432],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 175, 192612],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 211035, 159],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 328966, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 33554432],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 33555, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1431655765, 3, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1431655765, 3],"float32"), epsilon=0.1858912794612338, )
paddle.nn.functional.label_smooth(Tensor([1431655765, 3],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(Tensor([144, 29826162],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2, 2147483648, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2, 3, 715827883],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([20, 214748365],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([214748365, 2, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([214748365, 2, 2, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([22299, 1, 192612],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([27012373, 1, 159],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([3, 143165577, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 143165577, 2, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 143165577, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 143165577, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 178956971],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 178956971],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 357913942],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 357913942],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 71582789, 5],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 71582789, 5],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 71582789, 2, 5],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 71582789, 2, 5],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([4, 1073741824],"float32"), epsilon=0.1858912794612338, )
paddle.nn.functional.label_smooth(Tensor([4, 1073741824],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(Tensor([4, 536870913],"float64"), epsilon=0.5986189939413826, )
paddle.nn.functional.label_smooth(Tensor([4, 536870913],"float64"), epsilon=0.8211263365048883, )
paddle.nn.functional.label_smooth(Tensor([42107523, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([42107523, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4294967295, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4294968, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4294968, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([715827883, 3],"float64"), epsilon=0.5986189939413826, )
paddle.nn.functional.label_smooth(Tensor([715827883, 3],"float64"), epsilon=0.8211263365048883, )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([4294967295],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2147483648],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2147483648],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2147483648, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([1, 2147483648, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([4294967295],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 429496730],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([102262, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([1073741824, 2, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([1073741824, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([14, 209, 1467864],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([4294967295],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 798916, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14316558, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([19066, 220, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([19884108, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([19884108, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([19884108, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 119304648, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 119304648, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 119304648, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 21474837, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([4294967295],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 71582789],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 71582789, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 59652324, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 59652324, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 59652324, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 119304648, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 119304648, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 119304648, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 59652324, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 59652324, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 59652324, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 29826162],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 29826162],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 29826162],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([4294967295],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([4294967295],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([2147483649],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([2147483649],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([2147483649],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([2147483649],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 59652324],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 59652324],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 59652324],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 306784, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([4294967295],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 357914],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 357914],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4294967295],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 715828, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 119305, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 51131, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20069, 209, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20361, 206, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([214748365, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([22551, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([238610, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([25421, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([26843546, 10, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 26843546, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 4, 26843546],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([4, 67108864, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([524288, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([53516, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([64, 524288, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 1048576],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([4294967295],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 165, 3718587],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 3298747],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 2978480],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 2935727],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([4294967295],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 1024],"float32"), 1024, weight=Tensor([4294967295],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 2788940],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 599187, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.linear(Tensor([1, 1073741824, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([1073741824, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 2147483648],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 2147483648],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2147483648, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2, 2147483648],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2, 2147483648],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([2147483648, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([4, 1073741824],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2147483648, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2147483648, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 4294967295],"float32"), Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([33554432, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 512],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([8388608, 512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.linear(Tensor([10, 429496730],"float32"), Tensor([64, 429496730],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 429496730],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 64],"float32"), Tensor([64, 67108864],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([100, 17],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.linear(Tensor([100, 17],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([100, 42949673],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.linear(Tensor([100, 42949673],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.linear(Tensor([100, 42949673],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(Tensor([100, 8],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1000, 17],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.linear(Tensor([1000, 17],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([1000, 4294968],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.linear(Tensor([1000, 4294968],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.linear(Tensor([1073741824, 2, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1073741824, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1073741825, 2],"float64"), Tensor([2, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([131072, 128, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([14123, 396, 768],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([14123, 396, 768],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([1971, 396, 5504],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([2, 2147483648],"float32"), Tensor([64, 2147483648],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 2147483648],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([3072, 1398102],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([4294967295],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 33554432],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64],"float32"), Tensor([64, 67108864],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 699051, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([20, 214748365],"float32"), Tensor([64, 214748365],"float32"), None, )
paddle.nn.functional.linear(Tensor([20, 214748365],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([20, 64],"float32"), Tensor([64, 67108864],"float32"), None, )
paddle.nn.functional.linear(Tensor([20, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([2048, 1024, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([2048, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([2048, 1024, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([2147483648, 1, 2],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([2147483648, 2],"float32"), Tensor([2, 4],"float32"), )
paddle.nn.functional.linear(Tensor([2147483648, 2],"float32"), Tensor([2, 4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 4],"float32"), )
paddle.nn.functional.linear(Tensor([21846, 64, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([252645135, 17],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.linear(Tensor([252645135, 17],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.linear(Tensor([28245, 396, 384],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([3, 1, 1431655765],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2, 2147483648],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1431655765],"float32"), Tensor([2, 1431655765],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1431655765],"float32"), Tensor([2, 4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1431655765],"float32"), Tensor([2, 4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 2147483648],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([2, 1073741825],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([2, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([536870913, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([3, 715827883, 2],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 715827883],"float64"), Tensor([2, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([30, 143165577],"float32"), Tensor([64, 143165577],"float32"), None, )
paddle.nn.functional.linear(Tensor([30, 143165577],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([30, 64],"float32"), Tensor([64, 67108864],"float32"), None, )
paddle.nn.functional.linear(Tensor([30, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 1073741824],"float32"), )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([64, 1073741824],"float32"), None, )
paddle.nn.functional.linear(Tensor([4, 1073741824],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([4, 1398102, 768],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 1398102, 768],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 195084, 5504],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 2796203, 384],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 2711470],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 384],"float16"), Tensor([384, 11184811],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 384],"float16"), Tensor([5592406, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 5504],"float16"), Tensor([5504, 780336],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 5504],"float16"), Tensor([5592406, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([11184811, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([768, 5592406],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([780336, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([33554432, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 8388608],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 8388608],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.nn.functional.linear(Tensor([4, 64],"float32"), Tensor([64, 67108864],"float32"), None, )
paddle.nn.functional.linear(Tensor([4, 64],"float32"), Tensor([71582789, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([512, 1024, 8192],"float16"), Tensor([8192, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([524288, 8192],"float32"), Tensor([524288, 512],"float32"), )
paddle.nn.functional.linear(Tensor([524288, 8192],"float32"), Tensor([8192, 512],"float32"), )
paddle.nn.functional.linear(Tensor([536870912, 2, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([536870912, 8],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(Tensor([67108864, 64],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([67108864, 64],"float32"), Tensor([67108864, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2097152, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([524288, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([699051, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 524288],"float16"), Tensor([8192, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([2097152, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([8192, 2048],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 8192],"float16"), Tensor([8192, 524288],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([256, 16777216],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(Tensor([8, 128, 4194304],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 2097152, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 262144, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 262144, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 262144, 2048],"float16"), Tensor([2048, 8192],"float16"), Tensor([8192],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 512],"float32"), Tensor([512, 8388608],"float32"), )
paddle.nn.functional.linear(Tensor([8, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([512, 536870912],"float32"), )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([8192, 512],"float32"), )
paddle.nn.functional.linear(Tensor([8, 536870912],"float32"), Tensor([8192, 536870912],"float32"), )
paddle.nn.functional.linear(Tensor([8, 65536, 8192],"float16"), Tensor([8192, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 8192],"float32"), Tensor([8192, 524288],"float32"), )
paddle.nn.functional.linear(Tensor([8, 8192],"float32"), Tensor([8388608, 512],"float32"), )
paddle.nn.functional.linear(Tensor([8388608, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([8388608, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8388608, 512],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([8388608, 512],"float32"), Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.linear(Tensor([8388608, 512],"float32"), Tensor([8388608, 512],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1, 10],"float64"), weight=Tensor([10, 20],"float64"), bias=Tensor([2147483649],"float64"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 10],"float64"), weight=Tensor([10, 214748365],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 10],"float64"), weight=Tensor([107374183, 20],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float16"), weight=Tensor([1000, 4294968],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float16"), weight=Tensor([67108864, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float32"), weight=Tensor([1000, 4294968],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float32"), weight=Tensor([67108864, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1048576, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1398102, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 11008],"float16"), weight=Tensor([11008, 390168],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 11008],"float16"), weight=Tensor([5592406, 768],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 11008],"float32"), weight=Tensor([11008, 390168],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 11008],"float32"), weight=Tensor([5592406, 768],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 2147483649],"float64"), weight=Tensor([10, 20],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float16"), weight=Tensor([11008, 768],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 1024],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 4294967295],"float32"), weight=Tensor([11008, 768],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 429496730],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([429496730, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([10, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024, 4194304],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 64],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 768],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([4294968, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([5592406, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([67108864, 64],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([85899346, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([256, 16777216],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 11, 390451573],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1100, 256],"float32"), weight=Tensor([16777216, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1100, 256],"float32"), weight=Tensor([256, 16777216],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1100, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1100, 3904516],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1156, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1156, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1156, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1156, 3715370],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 120],"float32"), weight=Tensor([120, 35791395],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 120],"float32"), weight=Tensor([120, 84],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 120],"float32"), weight=Tensor([51130564, 84],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1296, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1296, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1296, 1024],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1296, 3314018],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 13316, 14, 15, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 14267, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 14267, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 11651, 15, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 12484, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 12484, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 12484, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 12484, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1369569],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([11184811, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 2796203],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([11184811, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 2796203],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float16"), weight=Tensor([2796203, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float16"), weight=Tensor([384, 11184811],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float32"), weight=Tensor([2796203, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float32"), weight=Tensor([384, 11184811],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 384],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float16"), weight=Tensor([11184811, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float16"), weight=Tensor([768, 5592406],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float32"), weight=Tensor([11184811, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float32"), weight=Tensor([768, 5592406],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1278265],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1278265],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1278265],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1536],"float16"), weight=Tensor([11184811, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1536],"float16"), weight=Tensor([1536, 2796203],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float16"), weight=Tensor([11184811, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float16"), weight=Tensor([768, 5592406],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float32"), weight=Tensor([11184811, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 15, 768],"float32"), weight=Tensor([768, 5592406],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 16, 1198373],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 16, 768],"float16"), weight=Tensor([11184811, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 16, 768],"float16"), weight=Tensor([768, 5592406],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 24967, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 24967, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 49933, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 49933, 384],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 21846, 16, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 23302, 15, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 23302, 15, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 24967, 14, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 24967, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 49933, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 49933, 14, 384],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16777216, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 214748365, 10],"float64"), weight=Tensor([10, 20],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 24967, 14, 16, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 26631, 14, 15, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 26631, 14, 15, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 268435456, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 28533, 14, 14, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 28533, 14, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 286331153, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 286331153, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 477218589],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([4294967295, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 858993459],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 390168, 11008],"float16"), weight=Tensor([11008, 768],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 390168, 11008],"float32"), weight=Tensor([11008, 768],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4194304, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4194304, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 4194304, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4194304, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4194304, 1024],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4194304, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float16"), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float16"), weight=Tensor([10, 4294967295],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([10, 4294967295],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 64],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([1024, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294967295],"float32"), weight=Tensor([120, 84],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294968, 1000],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4294968, 1000],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 57066, 14, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 57066, 14, 14, 384],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 178956971, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 178956971],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([1073741824, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([4, 1073741824],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1],"float32"), weight=Tensor([1, 10240],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1],"float32"), weight=Tensor([1, 4294967295],"float32"), bias=Tensor([10240],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1],"float32"), weight=Tensor([419431, 10240],"float32"), bias=Tensor([10240],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 10],"float32"), weight=Tensor([10, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 14336],"float32"), weight=Tensor([14336, 299594],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 14336],"float32"), weight=Tensor([67108864, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 16],"float32"), weight=Tensor([16, 268435456],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 16],"float32"), weight=Tensor([268435456, 16],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([10, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([14336, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([16, 16],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 429496730],"float32"), weight=Tensor([16, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 1],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 10],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 3],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 429496730],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 429496730],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 429496730],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([1431655765, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([4294967295, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 1024],"float32"), weight=Tensor([1024, 4194304],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 1024],"float32"), weight=Tensor([1048576, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 240534],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 240534],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 4096],"float32"), weight=Tensor([4096, 1048576],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 4096],"float32"), weight=Tensor([4194304, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 2819, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 705, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 1536],"float32"), weight=Tensor([11184811, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 1536],"float32"), weight=Tensor([1536, 2796203],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 14, 14, 176719],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 14, 1611, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 1611, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 2819, 12, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 705, 12, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([2796203, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 8388608],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([2796203, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 8388608],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 684785],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 684785],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 9363, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 9363, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 9363, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 9363, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1338, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1338, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1338, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1338, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1338, 2, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1338, 2, 7, 7, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1338, 4, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 16],"float32"), weight=Tensor([16, 268435456],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 16],"float32"), weight=Tensor([536870912, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 1338, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 1338, 7, 7, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 4682, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 4682, 7, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 4682, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 4682, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 171197],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 171197],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float16"), weight=Tensor([256, 16777216],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float16"), weight=Tensor([5592406, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float32"), weight=Tensor([256, 16777216],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 256],"float32"), weight=Tensor([5592406, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 33554432],"float32"), weight=Tensor([16, 33554432],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 33554432],"float32"), weight=Tensor([16, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 1338, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 2341, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 2341, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 128],"float16"), weight=Tensor([11184811, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 128],"float16"), weight=Tensor([128, 33554432],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([4294967295],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 4, 4, 7, 7, 42800],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128],"float32"), weight=Tensor([128, 100],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128],"float32"), weight=Tensor([128, 33554432],"float32"), bias=Tensor([100],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128],"float32"), weight=Tensor([42949673, 100],"float32"), bias=Tensor([100],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 1474921, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 184366, 56, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 5162221, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 23598722],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 32],"float32"), weight=Tensor([32, 134217728],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 32],"float32"), weight=Tensor([43383509, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 184366, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 105352],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 105352],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 32],"float32"), weight=Tensor([1073741824, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 32],"float32"), weight=Tensor([32, 134217728],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 64],"float32"), weight=Tensor([1073741824, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 64],"float32"), weight=Tensor([64, 67108864],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 92183, 64],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 92183, 56, 64],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([14267, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([14336],"float32"), weight=Tensor([14336, 299594],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([14336],"float32"), weight=Tensor([67108864, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1525202, 11, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([15253, 1100, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1561, 16, 14, 16, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1665, 16, 14, 15, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1665, 16, 14, 15, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([171197, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([171197, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1784, 16, 14, 14, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1784, 16, 14, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([21400, 56, 56, 64],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2147483648, 2],"float32"), weight=Tensor([2, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([2147483648, 2],"float32"), weight=Tensor([2147483648, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([214748365, 1, 10],"float64"), weight=Tensor([10, 20],"float64"), bias=Tensor([20],"float64"), name=None, )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([16, 16],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([16, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([16, 4],"float32"), )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([16, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([16, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 16],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 4],"float32"), )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([268435456, 16],"float32"), weight=Tensor([268435456, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([16, 153391690],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([16, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([8, 153391690],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 153391690],"float32"), weight=Tensor([8, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([16, 268435456],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([536870912, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 8],"float32"), weight=Tensor([8, 536870912],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 8],"float32"), weight=Tensor([858993459, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([29128, 12, 12, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([299594, 14336],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([299594, 14336],"float32"), weight=Tensor([299594, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([16, 143165577],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([16, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([2, 143165577],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 143165577],"float32"), weight=Tensor([2, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 16],"float32"), weight=Tensor([16, 268435456],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 16],"float32"), weight=Tensor([2147483648, 2],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 2],"float32"), weight=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.linear(x=Tensor([30, 2],"float32"), weight=Tensor([858993459, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([3237, 1296, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([3567, 16, 14, 14, 384],"float16"), weight=Tensor([384, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([3567, 16, 14, 14, 384],"float32"), weight=Tensor([384, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([35791395, 120],"float32"), weight=Tensor([120, 84],"float32"), bias=Tensor([84],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3629, 1156, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([38, 113025456],"float32"), weight=Tensor([16, 113025456],"float32"), )
paddle.nn.functional.linear(x=Tensor([38, 113025456],"float32"), weight=Tensor([16, 4],"float32"), )
paddle.nn.functional.linear(x=Tensor([38, 16],"float32"), weight=Tensor([1073741824, 4],"float32"), )
paddle.nn.functional.linear(x=Tensor([38, 16],"float32"), weight=Tensor([16, 268435456],"float32"), )
paddle.nn.functional.linear(x=Tensor([390168, 1, 11008],"float16"), weight=Tensor([11008, 768],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([390168, 1, 11008],"float32"), weight=Tensor([11008, 768],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 1073741824],"float32"), weight=Tensor([8, 1073741824],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 1073741824],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 1073741824],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([1431655765, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([715827883, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 536870912],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 536870912],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([4294967295],"float32"), )
paddle.nn.functional.linear(x=Tensor([4096, 1024, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([4194304, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1, 1024],"float32"), weight=Tensor([1024, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1024],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1024],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1024],"float32"), weight=Tensor([1024, 64],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4194304, 1024],"float32"), weight=Tensor([1024, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([42800, 4, 4, 7, 7, 128],"float16"), weight=Tensor([128, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([42800, 56, 56, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([1, 10240],"float32"), bias=Tensor([10240],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([10, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([10, 10],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([10, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([128, 100],"float32"), bias=Tensor([100],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4294967295],"float32"), weight=Tensor([64, 14336],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([429496730, 10],"float16"), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([429496730, 10],"float16"), weight=Tensor([429496730, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([429496730, 10],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([429496730, 10],"float32"), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4294968, 1, 1000],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4294968, 1, 1000],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([44739243, 6, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([536870912, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([536870912, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([8, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([536870912, 8],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([64],"float32"), weight=Tensor([299594, 14336],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([64],"float32"), weight=Tensor([64, 67108864],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7282, 12, 12, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 536870912],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([8, 536870912],"float32"), weight=Tensor([8, 536870912],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([8, 8],"float32"), weight=Tensor([1431655765, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([8, 8],"float32"), weight=Tensor([8, 536870912],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([833, 16, 14, 15, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([85599, 2, 2, 7, 7, 256],"float16"), weight=Tensor([256, 768],"float16"), bias=Tensor([768],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([85599, 2, 2, 7, 7, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([892, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([892, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([95443718, 3, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9586981, 2, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 10],"float32"),), weight=Tensor([10, 429496730],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 10],"float32"),), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 4294967295],"float32"),), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 4294967295],"float32"),), weight=Tensor([10, 4294967295],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 10324441, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 10324441, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([134217728, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 134217728],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 330382100],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 11799361, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 11799361],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([134217728, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 134217728],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([4294967295],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 6742492, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([134217728, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([21913099, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([19173962, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([19173962, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([429496730, 10],"float32"),), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([429496730, 10],"float32"),), weight=Tensor([429496730, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.local_response_norm(Tensor([3, 11930465, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 11930465, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 40, 11930465],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 11930465, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 40, 894785],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 894785, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([894785, 3, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([894785, 40, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(x=Tensor([2684355, 40, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([2684355, 40, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([298262, 3, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([298262, 3, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 11930465, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 298262, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 298262, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 11930465, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 298262, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 3976822, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 40, 3976822],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3976822, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 11930465],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 3976822, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 40, 298262],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 35791395, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 35791395, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 11930465, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 35791395],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 35791395],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40, 894785],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 894785, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([894785, 3, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([894785, 40, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([10, 429496730],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([4294967295, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 429496730],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 429496730],"float32"), label=Tensor([10, 429496730],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([128, 33554432],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 33554432],"float32"), Tensor([128, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 33554432],"float32"), Tensor([128, 33554432],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([400, 10737419],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 10737419],"float32"), Tensor([400, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 10737419],"float32"), Tensor([400, 10737419],"float32"), )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), label=Tensor([4294967295, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), Tensor([128, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), Tensor([400, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1, 1048576, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1, 300, 14316558],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1, 4294967295],"float16"), )
paddle.nn.functional.log_softmax(Tensor([100000, 14317, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 2, 21475],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 42950],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1024, 4194304],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1024, 4194304],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1073741825, 2, 1],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([12, 357913942],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([124, 34636834],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 33554432],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 33554432],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([134218, 32000],"float16"), )
paddle.nn.functional.log_softmax(Tensor([1431655765, 3],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([178956971, 3, 2, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([178956971, 3, 4],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([178956971, 3, 4],"float64"), 1, )
paddle.nn.functional.log_softmax(Tensor([178956971, 3, 4],"float64"), -1, )
paddle.nn.functional.log_softmax(Tensor([178956971, 3, 4],"float64"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 1073741825, 1],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 107374183, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 107374183, 4, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 107374183, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 107374183, 4, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 107374183, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 2, 1073741824],"float32"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 2, 536870913],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 2147483648, 1],"float32"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 268435457, 4],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 268435457, 4],"float64"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 268435457, 4],"float64"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 268435457, 4],"float64"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 143165577, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 3, 143165577, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 143165577, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 143165577, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 143165577, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 357913942],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 357913942],"float64"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 357913942],"float64"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 357913942],"float64"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 178956971],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 178956971],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 178956971],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 178956971],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 178956971],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([20, 214748365],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2112, 2033602],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2147483648, 2, 1],"float32"), 0, )
paddle.nn.functional.log_softmax(Tensor([2147483648, 2],"float32"), )
paddle.nn.functional.log_softmax(Tensor([28, 153391690],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2944, 1458889],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([3496, 300, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([42107523, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([4294968, 1000],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([4294968, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([5, 107374183, 2, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 3, 2, 143165577],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 3, 71582789, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 858993459],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 858993459],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([536870912, 8],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([647906, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([715827883, 2, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([71582789, 3, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([71582789, 3, 4, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([71582789, 3, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([71582789, 3, 4, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([71582789, 3, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([82811, 51865],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([858993459, 5],"float32"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([1073741825, 2, 1],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=2, dtype="float64", )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([178956971, 3, 4],"float64"), axis=2, dtype=type(numpy.float64), )
paddle.nn.functional.log_softmax(x=Tensor([2, 1073741825, 1],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 2, 1073741824],"float32"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 2, 536870913],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 2147483648, 1],"float32"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=2, dtype="float64", )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([2, 268435457, 4],"float64"), axis=2, dtype=type(numpy.float64), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=2, dtype="float64", )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 357913942],"float64"), axis=2, dtype=type(numpy.float64), )
paddle.nn.functional.log_softmax(x=Tensor([2147483648, 2, 1],"float32"), axis=0, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 357913942],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 357913942],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 67108864],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 67108864],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([2, 33554433, 32],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 33554433, 32],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 715827883, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 715827883, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([22369622, 3, 32],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([22369622, 3, 32],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 32, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 32, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 32, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 32, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1048577, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1048577, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 22369622, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 22369622, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11184811, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11184811, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11184811],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11184811],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 22369622, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 22369622, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 2097152],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 2097152],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([699051, 3, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([699051, 3, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([2147483649],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([1073741825, 2],"float64"), other=Tensor([1073741825, 2],"float64"), label=Tensor([1073741825, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([1073741825, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float16"), Tensor([128],"float16"), Tensor([4294967295],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float16"), Tensor([4294967295],"float16"), Tensor([128],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float32"), Tensor([128],"float32"), Tensor([4294967295],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float32"), Tensor([4294967295],"float32"), Tensor([128],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 1073741825],"float64"), other=Tensor([2, 1073741825],"float64"), label=Tensor([2, 1073741825],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 1073741825],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([1073741825, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 1073741825],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([1073741825, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 1073741825],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float16"), Tensor([128],"float16"), Tensor([128],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), 0.5, "mean", None, )
paddle.nn.functional.max_pool1d(Tensor([1, 1, 2147483649],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 1073741825, 2],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 134217729, 16],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 134217729, 16],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 268435456, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 1431655765],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 1431655765],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 715827883],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 715827883],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 715827883, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1073741825, 1, 2],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([178956971, 3, 8],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([19173962, 32, 7],"float32"), 7, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 134217729, 8],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 268435456, 8],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 357913942],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([238609295, 3, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 16],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 16],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 8],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([91, 32, 1474921],"float32"), 7, )
paddle.nn.functional.max_pool1d(Tensor([91, 6742492, 7],"float32"), 7, )
paddle.nn.functional.max_pool1d(x=Tensor([1, 1, 2147483649],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(x=Tensor([1, 1073741825, 2],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(x=Tensor([1073741825, 1, 2],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(x=Tensor([178956971, 3, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 134217729, 8],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 268435456, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 357913942],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([89478486, 3, 8],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 1073741824, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 1073741824, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 1073741824],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 1073741824],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 858993459, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 119304648, 6, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 40, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 838861, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 10, 26843546],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 12, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 22369622, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 26843546, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 1118482, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 1118482, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 1118482, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 1118482],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 1118482],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 1118482],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 32, 67108864],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 220, 976129],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 976129, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 214748365, 4, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 368, 486297],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 384, 466034],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 40, 4473925],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 4473925, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 466034, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 486297, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 25363, 336, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 838861],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 21, 798916],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 508401, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 524288, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 541201, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 559241, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 621379, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 838861, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 262144, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 268435456, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 268435456, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 2684355, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2684355, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 27061, 320, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 27963, 320, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 29128, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2974355, 38, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2974355, 38, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2974355, 38, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 29826162, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 6391321],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 6391321],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 6391321],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 238609295, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6, 238609295],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6391321, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6391321, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6391321, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 31069, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 31715, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 32, 364723, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 32, 368, 364723],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3314018, 36, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3314018, 36, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3314018, 36, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 342393, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3715370, 34, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3715370, 34, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3715370, 34, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 37377, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 294338, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 294338, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 294338, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 310690, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 310690, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 310690, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 349526],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 349526],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 349526],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 328966, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 328966, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 328966, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 328966],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 328966],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 328966],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 349526, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 349526, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 349526, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 310690],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 310690],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 310690],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 294338],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 294338],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 294338],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 41944, 320, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 42949673, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 279621, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 288, 310690],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 310690, 288],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 48, 320, 279621],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 51782, 288, 288],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6197645, 21, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 6391321, 21, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 112, 599187],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 128, 524288],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 133153, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 135301, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 139811, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 155345, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 168193, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 3947581],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 199137, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 232211, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 245821, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 248, 270601],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 256, 262144],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 261124, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 262144, 256],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 262144, 256],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 288, 233017],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 320, 209716],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 336, 199729],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 1369569],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 520224, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 524288, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 599187, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 65536, 256, 256],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 67651, 248, 256],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 679476, 49, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 6927367, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 7158279, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 749689, 17, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 7953644, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 85599, 224, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 85599, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 85599, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 874205, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 88739, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 925441, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 983055, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1024, 64, 256, 256],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1058, 64, 248, 256],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10617, 64, 49, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1073741824, 1, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1079, 48, 288, 288],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10923, 384, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10923, 384, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10923, 384, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([11093, 128, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([111849, 24, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([11714, 64, 17, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 40, 69906],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 40, 69906],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 69906, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 69906, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 223697, 40, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 223697, 40, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 20, 69906],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 20, 69906],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 69906, 20],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 256, 69906, 20],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 3579140, 10, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 10, 69906],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 69906, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 894785, 20, 20],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 894785, 20, 20],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([1214, 24, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 330382100, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 4, 82595525],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 7, 47197443],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 184366, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 7, 184366],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 47197443, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 6742492, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 82595525, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1314652, 3, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1322, 24, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([13660, 64, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([14461, 64, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([15361, 64, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1748, 24, 320, 320],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1864136, 16, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 305041, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 305041],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 203361, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 215093, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 414253],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 414253],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 414253, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 414253, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 52, 215093],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 55, 203361],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1971978, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 22369622, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 244, 36071],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 4400582, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 13, 645278],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 310690],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 310690, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 645278, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2945794, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2945794, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 21691755, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 224, 3195661],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 3195661, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 33, 21691755],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 22369622, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 32, 2097152],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 33554432, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 6710887],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 6710887, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 42800, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 4400582, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 13, 344149],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 344149, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 13, 322639],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 322639, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 13, 312862],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 312862, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 17, 1973791],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 1973791, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 671089, 40, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 709912, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 7430740, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 794188, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 16, 16777216],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 16777216, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 4, 67108864],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 4194304, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 8, 33554432],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 8388608, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8388608, 8, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([207127, 64, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2097152, 2, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2097152, 8, 8, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([209716, 512, 1, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([209716, 512, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([214748365, 1, 4, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([23015, 256, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([232211, 64, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([24210, 256, 21, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([24967, 256, 21, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([256, 112, 112, 1338],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([256, 112, 2341, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([256, 2341, 112, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([268435456, 1, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([268435456, 1, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2684355, 16, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([27061, 256, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([27963, 256, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([3, 4418691, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 1242757, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 18, 1242757],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30686, 192, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30686, 192, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([31069, 256, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([335545, 4, 40, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([335545, 4, 40, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([335545, 4, 40, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([335545, 4, 40, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([342393, 256, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([36071, 244, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([397, 64, 336, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([39768216, 3, 6, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([4, 10486, 320, 320],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 24, 139811, 320],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 24, 320, 139811],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 4, 67108864],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 67108864, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 67108864, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4096, 64, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([423, 64, 320, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([437, 64, 320, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4437, 20, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([48133, 528, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([486, 64, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([49637, 512, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([524288, 8, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([52946, 480, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 112, 112, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([55925, 192, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([55925, 192, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([55925, 192, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([585, 64, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([613566757, 1, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([64, 1677722, 1, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 1677722, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 1, 131072],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 1, 131072],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 3277, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 3277, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([67108864, 4, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7395, 192, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 13421773, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 1, 1048576],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 26215, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8273, 192, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8388608, 8, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([83887, 512, 10, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([874, 48, 320, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([992, 32, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([99274, 256, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([16777216, 4, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 24, 44739243],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 44739243, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 33554432, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3728271, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 67108864, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 8, 67108864],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([3728271, 2, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 1971978, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 10845878, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 33, 10845878],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 22369622, 4, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 22369622, 4, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 26512144, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 29826162, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 29826162, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 29826162, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 44739243],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 44739243],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 89478486],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 59652324, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 59652324, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 44739243, 4, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 35791395, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 47721859, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 8, 17895698],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 39768216, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 26512144, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 6, 13256072],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 657326, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([11184811, 3, 4, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([13256072, 3, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([14913081, 3, 4, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 11362348, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 16777217, 4, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 19884108, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 22369622, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 39768216, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 22369622, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 4, 22369622],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 39768216, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 6, 19884108],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 32, 65536],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 699051, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 699051, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 13256072, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 17043522, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9, 5681174],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 699051, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([328663, 2, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([335, 64, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([3787450, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 32, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([4418691, 6, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([5965233, 5, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([7456541, 3, 4, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([7456541, 3, 4, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([8, 2675, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 112, 4682],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 4682, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 669, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([1070, 320, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 32, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 64, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 8, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 10700, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 1338, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 56, 9363],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 9363, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 5350, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 56, 7490],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 7490, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 535, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 42800, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 5350, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 112, 18725],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 18725, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 669, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 112, 18725],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 18725, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 5350, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1073741825, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1073741825, 2],"int64"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1073741825],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1073741825],"int64"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1073741825, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1073741825],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 536870913, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([536870913, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 1073741825],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 1073741825, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 536870913, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 536870913, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 536870913, 2, 2],"int64"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([536870913, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 38347923, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 67108864, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 76695845],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([19173962, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 38347923, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 67108864, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 76695845],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([536870913, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([536870913, 1, 2, 2],"int64"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([19173962, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 107374183],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 107374183],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 89478486, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 71582789, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([17895698, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 89478486, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 71582789, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"int64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"int64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"int64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"int64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 178956971, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 119304648, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 119304648, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 178956971],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([59652324, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 357913942],"float32"), Tensor([1, 3, 2, 2, 178956971],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 357913942],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 238609295, 3],"float32"), Tensor([1, 3, 2, 119304648, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 238609295, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 238609295, 2, 3],"float32"), Tensor([1, 3, 119304648, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 238609295, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 357913942, 2, 2, 3],"float32"), Tensor([1, 178956971, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 357913942, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([119304648, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([119304648, 3, 2, 2, 3],"float32"), Tensor([59652324, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([17895698, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"int64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.maxout(Tensor([10, 23860930, 3, 3],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([10, 9, 3, 7953644],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([10, 9, 7953644, 3],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 2386093, 3, 3],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 1789570, 3],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 1789570],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3579140],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3579140, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4772186, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([119304648, 4, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([17895698, 6, 5, 4],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([17895698, 6, 5, 4],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([17895698, 6, 5, 4],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 53687092, 5, 4],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 53687092, 5, 4],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 53687092, 5, 4],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 44739243, 4],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 6, 44739243, 4],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 6, 44739243, 4],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 35791395],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 35791395],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 35791395],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([26512144, 9, 3, 3],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([59652324, 4, 3, 3],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([89478486, 2, 2, 6],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 19884108, 2, 6],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 19884108, 6],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 2, 59652324],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(x=Tensor([10, 23860930, 3, 3],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 3, 7953644],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 7953644, 3],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([100, 2386093, 3, 3],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 1789570, 3],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 1789570],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3579140],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3579140, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4772186, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([119304648, 4, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([26512144, 9, 3, 3],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([59652324, 4, 3, 3],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([89478486, 2, 2, 6],"float64"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 19884108, 2, 6],"float64"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 19884108, 6],"float64"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 2, 59652324],"float64"), groups=2, axis=3, )
paddle.nn.functional.mse_loss(input=Tensor([2, 1],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 2147483648],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 2147483648],"float32"), label=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([4294967295, 1],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([4294967295, 1],"float32"), label=Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([4, 1073741824],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 4294967295],"float32"), Tensor([4, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 4294967295],"float32"), Tensor([4, 4294967295],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([100, 1],"float32"), Tensor([100, 42949673],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([100, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([100, 42949673],"float32"), Tensor([100, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10240, 1],"float32"), Tensor([10240, 419431],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10240, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10240, 419431],"float32"), Tensor([10240, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10240, 419431],"float32"), Tensor([10240, 419431],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1073741825, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([1073741825, 2],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([14316558, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([16, 134217728, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 134217728, 2],"float32"), Tensor([16, 134217728, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 134217728, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 134217728, 2],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 268435456, 1],"float32"), Tensor([16, 268435456, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 268435456, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 268435456, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 134217728, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 134217728, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2796203],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 2796203],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([1820, 1],"float32"), Tensor([1820, 2359873],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1820, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1820, 2359873],"float32"), Tensor([1820, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1820, 2359873],"float32"), Tensor([1820, 2359873],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 10, 214748365],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 214748365],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 214748365],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 214748365],"float32"), Tensor([2, 10, 214748365],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 1073741824, 2],"float32"), Tensor([2, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 214748365, 10],"float32"), Tensor([2, 214748365, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 1073741824, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 96, 22369622],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([2, 96, 22369622],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 22369622],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 96, 22369622],"float32"), Tensor([2, 96, 22369622],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2143198, 501, 4],"float32"), Tensor([2143198, 501, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2143198, 501, 4],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([2, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([2, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([22369622, 96, 2],"float32"), Tensor([22369622, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([3, 1431655765, 1],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 1431655765, 1],"float32"), Tensor([3, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 14316558, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([14316558, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 14316558, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 47721859],"float32"), Tensor([3, 3, 10, 47721859],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 47721859, 10],"float32"), Tensor([3, 3, 47721859, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 96, 1],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 96, 1],"float32"), Tensor([3, 96, 14913081],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 96, 14913081],"float32"), Tensor([3, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 96, 14913081],"float32"), Tensor([3, 96, 14913081],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 33554432, 4],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 33554432, 4],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 501, 267900],"float32"), Tensor([32, 501, 267900],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 501, 267900],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([2143198, 501, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([32, 501, 267900],"float32"), )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([100, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([10240, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([1820, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([4, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.mse_loss(Tensor([4294967295],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([2, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([42949673, 10, 10],"float32"), Tensor([42949673, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([429496730, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([429496730, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([429496730, 10],"float32"), Tensor([429496730, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([44739243, 96, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([44739243, 96, 1],"float32"), Tensor([3, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([44739243, 96, 1],"float32"), Tensor([44739243, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([5, 2],"float64"), label=Tensor([1073741825, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([5, 2],"float64"), label=Tensor([5, 429496730],"float64"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([5, 429496730],"float64"), label=Tensor([5, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([5, 429496730],"float64"), label=Tensor([5, 429496730],"float64"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([8],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", weight=Tensor([429496730, 5],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), weight=Tensor([429496730, 5],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", weight=Tensor([5, 429496730],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), weight=Tensor([5, 429496730],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="mean", weight=Tensor([5, 5],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), weight=Tensor([5, 5],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([429496730, 5],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), reduction="mean", weight=Tensor([5, 429496730],"float64"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), weight=Tensor([429496730, 5],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), weight=Tensor([5, 429496730],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(input=Tensor([1073741825, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", )
paddle.nn.functional.multi_margin_loss(input=Tensor([1073741825, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="none", )
paddle.nn.functional.multi_margin_loss(input=Tensor([1073741825, 2],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="sum", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="mean", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="none", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 2],"float64"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="sum", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 429496730],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 429496730],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="none", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 429496730],"float64"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="sum", )
paddle.nn.functional.multi_margin_loss(Tensor([1073741825, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([1073741825, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([1073741825, 2],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 2],"float64"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="sum", name=None, )
paddle.nn.functional.npair_loss(Tensor([18, 238609295],"float32"), positive=Tensor([18, 6],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.nn.functional.npair_loss(Tensor([18, 6],"float32"), positive=Tensor([18, 238609295],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.nn.functional.npair_loss(Tensor([18, 6],"float32"), positive=Tensor([18, 6],"float32"), labels=Tensor([4294967295],"float32"), l2_reg=0.002, )
paddle.nn.functional.npair_loss(Tensor([18, 6],"float32"), positive=Tensor([715827883, 6],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.nn.functional.npair_loss(Tensor([715827883, 6],"float32"), positive=Tensor([18, 6],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.nn.functional.pad(Tensor([1, 1, 1, 4294967295],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 1, 4294967295],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 10, 429496730],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 10, 429496730],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 42949673],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 42949673],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 101, 42524429],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 102, 42107523],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 103, 41698712],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 1073741824, 2, 2],"float32"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 1073741825, 2],"float64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 195225787, 22],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 1073741824, 2],"float32"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 1073741825],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 1073741825],"float64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2, 1073741824],"float32"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2, 536870913],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2, 536870913],"float64"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2147483648],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 2147483648],"float32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 3, 357913942],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 3, 357913942],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 3, 357913942],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 357913942, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2, 536870913, 2],"float64"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 204522253, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2147483648, 2],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 2147483648, 2],"float32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 3, 1431655765],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 330382100, 13],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 2, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 357913942, 3, 2],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 37675152, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 38008561, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 38347923, 112],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 38347923, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 38693400, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 4294967295, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 4294967295, 1],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 4294967295, 1],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 536870913, 2, 2],"float64"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 715827883, 3],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 10, 214748365],"float64"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 1048576, 64, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1073741824, 2, 2],"float32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 11749, 56, 68, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13097, 61, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13316, 56, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13316, 60, 56, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13541, 56, 59, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13541, 59, 56, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 13775, 56, 58, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 14017, 57, 56, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=5, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=6, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 1431655765, 3],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 14701, 292155],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 155345, 144, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 155345, 18, 1536],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 155345, 36, 768],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 155345, 72, 384],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 14, 1369569],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 14, 1369569],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 1278265],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 16, 1198373],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 16, 1198373],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 17, 1127881],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 18, 1065221],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 18, 1065221],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 1009156],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 1009156],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 1009156],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 1278265],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 46604, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 14, 1198373],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 14, 1198373],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 43691, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 16, 43691, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 14, 1065221],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 14, 1065221],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 38837, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 18, 38837, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 28, 342393],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 28, 342393],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 29, 330586],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 29, 330586],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 30, 319567],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 30, 319567],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 32, 299594],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 32, 299594],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 33, 290515],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 33, 290515],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 36, 266306],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 38, 252289],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 38, 252289],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 49933, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 28, 330586],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 29, 48211, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 28, 319567],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 28, 319567],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 46604, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 46604, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 309258],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 309258],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 309258],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 45101, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 45101, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 45101, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 28, 299594],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 28, 299594],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 43691, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 32, 43691, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 35, 28, 273914],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 35, 39946, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 19, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 19, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 38, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 36793, 38, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 38837, 18, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 38837, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 38837, 36, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 41121, 68, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 42367, 33, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 42367, 33, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 16, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 32, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 43691, 32, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 30, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 30, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 46604, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 47394, 59, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 48211, 29, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 48211, 29, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 48211, 58, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 28, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 56, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 56, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 56, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 7, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 49933, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 49933, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 49933, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 49933, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 58, 82647],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 59, 81246],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 60, 79892],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 68, 70493],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 57, 49057, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 57, 56, 84097],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 59, 47394, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 59, 56, 81246],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 60, 46604, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 60, 56, 79892],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 61, 45840, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 61, 56, 78582],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 9, 38837, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 9, 7, 4260881],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 160, 120, 223697],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 160, 279621, 96],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 160000, 13422],"float64"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 178956971, 2, 2, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 2, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 2, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 2, 3, 2],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 3, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 178956971, 3, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 17980, 238875],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 192, 116509, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 192, 144, 155345],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 19522579, 10, 22],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 19780, 217137],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825, 1],"float64"), pad=list[1,1,1,0,], mode="reflect", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[1,1,], mode="reflect", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[2,1,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 1073741825],"float64"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([1, 2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,7,8,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2, 2, 2, 268435457],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 2, 268435457, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 2147483648],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.nn.functional.pad(Tensor([1, 2, 2147483648],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 2147483648],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 2147483648],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 2147483648],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 268435457, 2, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 268435457, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 268435457, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3, 143165577, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([1, 2, 3, 143165577, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2, 3, 143165577, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2, 3, 143165577, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,7,8,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2, 3, 357913942],"float64"), pad=list[1,1,1,0,], mode="reflect", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3, 357913942],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3, 357913942],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 2, 3, 4, 178956971],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([1, 2, 3, 4, 178956971],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2, 3, 4, 178956971],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2, 3, 4, 178956971],"float32"), pad=list[1,2,1,1,3,4,5,6,7,8,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 20, 15, 14316558],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 20, 279621, 768],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 2018, 32, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 20452226, 10, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 20524, 209266],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 21025, 28, 38, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 21025, 28, 38, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2118, 32, 224, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2147483648, 2, 1],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 2147483649, 1],"float64"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 21955, 195626],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 22071, 194598],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 2212, 32, 224, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 22193, 28, 36, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 22827, 35, 28, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2323, 32, 224, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 24, 116509, 1536],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 24, 18, 9942054],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 24210, 28, 33, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24210, 28, 33, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2446, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2476, 32, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 24967, 28, 32, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24967, 28, 32, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24967, 32, 28, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 24967, 32, 28, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2508, 32, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 2518, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 25565282, 14, 12],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 256, 262144, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 256, 64, 262144],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 25757, 166750],"float32"), list[1,0,], value=5, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 25772, 31, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 25772, 31, 28, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 25772, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2594, 32, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 26631, 28, 30, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26631, 28, 30, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26631, 30, 28, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26631, 30, 28, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 268435457, 2, 2, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 268435457, 2, 2, 2],"float64"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 27549, 28, 29, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 28, 29, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27549, 29, 28, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 27860, 154163],"float32"), list[1,0,], value=6, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 28533, 28, 28, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 28533, 28, 28, 192],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 3, 1398102, 1024],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([1, 3, 140, 5113057],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 140, 5113057],"float64"), pad=list[40,40,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 180, 3976822],"float64"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 184, 3890369],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 184, 3890369],"float64"), pad=list[52,52,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 200, 3579140],"float64"), pad=list[1,1,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 200, 3579140],"float64"), pad=list[10,10,10,10,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 204, 3508961],"float64"), pad=list[1,3,2,4,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 210, 3408705],"float64"), pad=list[1,1,1,1,], mode="replicate", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 21520, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 224, 6391321],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 3, 22585, 224, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 2324117, 308],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 23585, 224, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 24773, 224, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 256, 5592406],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 3, 26088, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 26411, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 26742, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 26855, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 27669, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 28, 51130564],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 28, 51130564],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 280, 5113057],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 2982617, 240],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 150638, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 158090, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 165090, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 173408, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 187981, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 193677, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 199729, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 199729, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 199729, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 224, 199729],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 224, 199729],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 224, 199729],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 239, 187194],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 242, 184873],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 32, 245, 182610],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 3, 3508961, 204],"float64"), pad=list[52,52,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 3579140, 200],"float64"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 400, 3579140],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4090446, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4473925, 160],"float64"), pad=list[40,40,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4588641, 156],"float64"), pad=list[1,1,1,1,], mode="replicate", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4709394, 152],"float64"), pad=list[1,3,2,4,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4772186, 150],"float64"), pad=list[1,1,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4772186, 150],"float64"), pad=list[10,10,10,10,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 4772186, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 5592406, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 3, 59652324, 24],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 59652324, 24],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 6391321, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 3, 686, 2086962],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([1, 330382100, 1, 13],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 357913942, 2, 3],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 35792, 400, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 365779, 103, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 372633, 102, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 372828, 120, 96],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 372828, 15, 768],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 372828, 30, 384],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 372828, 60, 192],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 37894, 184, 308],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 379683, 101, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 383480, 100, 112],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 386934, 100, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 40, 279621, 384],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 40, 30, 3579140],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 42049, 14, 19, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 42049, 14, 19, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 42049, 14, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1, 1],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.nn.functional.pad(Tensor([1, 4294967295, 1],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 43827, 280, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 4410, 973916],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 44385, 14, 18, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 44385, 14, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 44385, 18, 14, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 44385, 18, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 46996, 14, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 48, 116509, 768],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 48, 36, 2485514],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 14, 16, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 14, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 16, 14, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 49933, 16, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 14, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 53262, 15, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 536870912, 2, 2, 2],"float32"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 536870913, 2, 2],"float64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 5551, 773729],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 57066, 14, 14, 384],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 57066, 14, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 57212, 184, 204],"float64"), pad=list[52,52,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 59653, 180, 200],"float64"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 6115, 686, 1024],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([1, 6391321, 28, 24],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 6391321, 28, 24],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 63914, 140, 240],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 64, 256, 262144],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 64, 262144, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 65536, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 65553, 210, 156],"float64"), pad=list[1,1,1,1,], mode="replicate", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 67108865, 32],"float64"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 69256, 204, 152],"float64"), pad=list[1,3,2,4,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 715827883, 3, 1],"float64"), pad=list[1,1,1,0,], mode="reflect", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3, 2],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[1,1,], mode="reflect", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[2,1,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 715827883, 3],"float64"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 71582789, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([1, 71582789, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 71582789, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 71582789, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,7,8,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 71583, 200, 150],"float64"), pad=list[1,1,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 71583, 200, 150],"float64"), pad=list[10,10,10,10,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 7485, 573810],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 7974, 538622],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 79949, 53722],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1, 8, 14, 38347923],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 8, 44739243, 12],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 80, 279621, 192],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 80, 60, 894785],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 8141, 527573],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 85599, 224, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([1, 88769, 9, 7, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 95870, 140, 160],"float64"), pad=list[40,40,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 96, 116509, 384],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 96, 72, 621379],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([10, 128, 104858, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 104],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 128],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 136],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 209716],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 32],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 40],"float32"), Tensor([4294967295],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 24673, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 26215, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 32264, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 83887, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 139811, 16, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 167773, 16, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 186414, 16, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 197380, 16, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 209716, 16, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 209716, 16, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 239675, 16, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 258112, 16, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 112],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 128],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 144],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 160],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 192],"float32"), Tensor([4294967295],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 419431],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 34953, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 41944, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 46604, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 52429, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 59919, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 671089, 16, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 838861, 16, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1024, 1, 1, 4194304],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 1, 129, 32514],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 1398102, 3],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 16321, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 16384, 256],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 16384, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 1, 256, 16384],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 256, 16384],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 1, 257, 16321],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 3, 1398102],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 32514, 129],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 1, 4194304, 1],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 253, 129, 129],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 4194304, 1, 1],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 466034, 3, 3],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 64, 256, 256],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1024, 64, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1024, 64, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1024, 64, 257, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1048576, 1, 1, 4096],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1048576, 1, 32, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1048576, 1, 4096, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1048576, 1, 64, 64],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([1048576, 4, 4, 256],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1048576, 4096, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1073741824, 1, 2, 2],"float32"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([11184811, 3, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([11184811, 3, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([11184811, 3, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1183744, 1, 1, 3629],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1183744, 1, 3629, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1183744, 3629, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1189, 224, 168, 96],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([119304648, 6, 6],"float32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([11931, 3, 400, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([12, 1, 11184811, 32],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 128, 2796203],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 1398102, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 16, 22369622],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 22369622, 16],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 256, 1398102],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 2796203, 128],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 32, 11184811],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 5592406, 64],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1, 64, 5592406],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 1398102, 16, 16],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 16, 16, 1398102],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 16, 349526, 64],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 21846, 128, 128],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 32, 32, 349526],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 32, 349526, 32],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 349526, 16, 64],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 349526, 32, 32],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 349526, 32, 32],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 349526, 4, 256],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 349526, 8, 128],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 4, 349526, 256],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 4, 4, 22369622],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 5462, 256, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([12, 8, 349526, 128],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 8, 8, 5592406],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([12, 87382, 64, 64],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([120, 120, 1, 298262],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([120, 120, 298262, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([120, 35791395, 1, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([12288, 1, 1, 349526],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([12288, 1, 349526, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([12288, 349526, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([12632, 3, 184, 308],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([13, 1, 330382100],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([13, 10324441, 32],"float32"), list[0,0,0,1,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([13, 10324441, 32],"float32"), list[0,0,0,3,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([13, 10324441, 32],"float32"), list[0,0,1,0,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([13, 110127367, 3],"float32"), tuple(1,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([13, 20648882, 16],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([13, 3441481, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([13, 4, 82595525],"float32"), list[0,0,0,3,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([13, 47197443, 7],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([13, 6, 55063684],"float32"), list[0,0,0,1,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([13, 6, 55063684],"float32"), list[0,0,1,0,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([13, 64, 5162221],"float32"), tuple(1,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([13, 64, 5162221],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([13, 7, 47197443],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([131072, 32, 32, 32],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1315, 16, 28, 38, 192],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1315, 16, 28, 38, 192],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([134217729, 2, 2, 2, 2],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([13422, 160000, 1],"float64"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1388, 16, 28, 36, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1398102, 3, 32, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1398102, 48, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([14, 43826197, 7],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([14, 64, 4793491],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([1427, 16, 35, 28, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([143166, 3, 100, 100],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.nn.functional.pad(Tensor([14609, 3, 280, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([147968, 1, 1, 29027],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([147968, 1, 29027, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([147968, 29027, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([1514, 16, 28, 33, 192],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1514, 16, 28, 33, 192],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1536, 1, 1, 2796203],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([1536, 1, 2796203, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([1536, 2796203, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([15421, 128, 16, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1561, 16, 28, 32, 192],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1561, 16, 28, 32, 192],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1561, 16, 32, 28, 192],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1561, 16, 32, 28, 192],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([16, 1, 268435456],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([16, 2, 134217728],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([16, 25500, 10527],"float32"), pad=list[1024,1024,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 25500, 10527],"float32"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 25500, 10527],"float32"), pad=list[512,512,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 268435456, 1],"float32"), pad=list[1024,1024,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 268435456, 1],"float32"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 268435456, 1],"float32"), pad=list[512,512,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([16, 2796203, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([16, 3, 256, 349526],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([16, 3, 256, 349526],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16, 3, 256, 349526],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([16, 3, 349526, 256],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([16, 3, 349526, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16, 3, 349526, 256],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([16, 4096, 256, 256],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([16, 4096, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16, 4096, 256, 256],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([1611, 16, 31, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1611, 16, 31, 28, 192],"float16"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1611, 16, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1619, 96, 72, 384],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([16384, 128, 16, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([165888, 1, 1, 25891],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([165888, 1, 25891, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([165888, 25891, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([16645, 12, 42, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([1665, 16, 28, 30, 192],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1665, 16, 28, 30, 192],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1665, 16, 30, 28, 192],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1665, 16, 30, 28, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([16777216, 1, 1, 256],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([16777216, 1, 16, 16],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([16777216, 1, 16, 16],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([16777216, 1, 256, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([16777216, 256, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([168431, 25500, 1],"float32"), pad=list[1024,1024,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([168431, 25500, 1],"float32"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([168431, 25500, 1],"float32"), pad=list[512,512,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([1722, 16, 28, 29, 192],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 28, 29, 192],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1722, 16, 29, 28, 192],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([175858, 8141, 3],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1784, 16, 28, 28, 192],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1784, 16, 28, 28, 192],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([178956971, 1, 2, 2, 3],"float64"), pad=list[1,1,1,0,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([178956971, 1, 2, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([178956971, 1, 2, 3, 2],"float64"), pad=list[1,0,1,0,0,1,], mode="replicate", value=0.0, data_format="NDHWC", name=None, )
paddle.nn.functional.pad(Tensor([178956971, 1, 2, 3, 2],"float64"), pad=list[1,0,1,2,1,0,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([178956971, 3, 4],"float64"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([178956971, 3, 4],"float64"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([178956971, 3, 4],"float64"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([179541, 7974, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([18642, 20, 15, 768],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([18725, 128, 16, 112],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([19071, 3, 184, 204],"float64"), pad=list[52,52,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([191270, 7485, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([192, 1, 1, 22369622],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([192, 1, 22369622, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([192, 22369622, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([19522579, 1, 10, 22],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([196608, 1, 1, 21846],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([196608, 1, 21846, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([196608, 21846, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([19885, 3, 180, 200],"float64"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 1, 2, 1073741824],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 1, 3, 715827883],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 1, 536870912, 4],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 1, 715827883, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 107374183, 4, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,], mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 112, 84, 228262],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 112, 99865, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 133153, 168, 96],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 133153, 84, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 134217728, 4, 4],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 16777217, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 16777217, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 16777217, 4, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 178956971, 3, 4],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 2, 1073741824],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.nn.functional.pad(Tensor([2, 2, 1073741824],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([2, 2097152, 32, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([2, 2147483648, 1],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.nn.functional.pad(Tensor([2, 214749, 100, 100],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.nn.functional.pad(Tensor([2, 22369622, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([2, 224, 168, 57066],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 224, 99865, 96],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 268435457, 4],"float64"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 268435457, 4],"float64"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 268435457, 4],"float64"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 100, 7158279],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.nn.functional.pad(Tensor([2, 3, 143165577, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,], mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 178956971, 4],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 178956971, 4],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 178956971, 4],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 32],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 22369622, 4, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 32, 22369622],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([2, 3, 357913942],"float64"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 357913942],"float64"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 357913942],"float64"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 178956971],"float32"), pad=list[1,2,1,1,3,4,5,6,], mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 22369622, 4],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 22369622, 4],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 22369622, 4],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 22369622],"float64"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 22369622],"float64"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 22369622],"float64"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 44739243],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 44739243],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 4, 44739243],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 44739243, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 44739243, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 44739243, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 89478486],"float64"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 89478486],"float64"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 4, 89478486],"float64"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 44739243, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 44739243, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 44739243, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 3, 715827883],"float32"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 715827883],"float32"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 715827883],"float32"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 3, 7158279, 100],"float32"), pad=list[1,2,3,4,], mode="reflect", value=0.0, data_format="NCHW", name="shape", )
paddle.nn.functional.pad(Tensor([2, 3, 89478486, 4],"float64"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 89478486, 4],"float64"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 3, 89478486, 4],"float64"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 33554432, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 33554432, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 33554432, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([2, 33554432, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 357913942, 2, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 48, 5592406, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 48, 8, 5592406],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 536870912, 4],"float32"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 536870912, 4],"float32"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 536870912, 4],"float32"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([2, 64, 16, 2097152],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 64, 2097152, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 67108865, 4, 4],"float64"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 67108865, 4, 4],"float64"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 67108865, 4, 4],"float64"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2, 8388608, 16, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 96, 4, 5592406],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 96, 5592406, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([20165, 128, 16, 104],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([20165, 128, 16, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2039, 3, 686, 1024],"float32"), tuple(0,0,0,338,), )
paddle.nn.functional.pad(Tensor([20452226, 1, 10, 21],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2048, 1, 128, 16384],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([2048, 1, 16384, 128],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([2048, 128, 128, 128],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([2130441, 3, 28, 24],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2130441, 3, 28, 24],"float32"), pad=list[1,1,2,2,], mode="reflect", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([21305, 3, 140, 240],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2147483648, 1, 2, 1],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2147483648, 2, 1],"float32"), pad=list[0,0,0,0,1,0,], mode="constant", value=1.0, )
paddle.nn.functional.pad(Tensor([2147483649],"float64"), list[0,1,], value=1, )
paddle.nn.functional.pad(Tensor([2147483649],"float64"), list[1,0,], value=1, )
paddle.nn.functional.pad(Tensor([2147483649],"float64"), pad=list[106,107,], mode="constant", )
paddle.nn.functional.pad(Tensor([2147483649],"float64"), pad=list[6,7,], mode="constant", )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,1,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="circular", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([214748365, 4, 5],"float32"), pad=list[3,4,5,6,7,8,], mode="constant", value=100, data_format="NCL", )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), list[14,14,14,14,], )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), list[6,6,6,6,], )
paddle.nn.functional.pad(Tensor([21846, 3, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([21846, 64, 16, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([21851, 3, 210, 156],"float64"), pad=list[1,1,1,1,], mode="replicate", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([22369622, 2, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([22369622, 3, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="circular", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([22369622, 3, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([22369622, 3, 4, 4, 4],"float32"), list[1,1,1,1,1,1,], mode="replicate", data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([22369622, 6, 32],"float32"), list[0,0,0,1,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([22369622, 6, 32],"float32"), list[0,0,1,0,0,0,], value=0, )
paddle.nn.functional.pad(Tensor([22369622, 64, 3],"float32"), tuple(1,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([23086, 3, 204, 152],"float64"), pad=list[1,3,2,4,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2331, 160, 120, 96],"float32"), list[0,0,0,1,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2378, 112, 84, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([23861, 3, 200, 150],"float64"), pad=list[1,1,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([23861, 3, 200, 150],"float64"), pad=list[10,10,10,10,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2428, 48, 48, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([24576, 1, 1, 174763],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([24576, 1, 174763, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([24576, 174763, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([2550, 64, 188, 140],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([257910, 5551, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([258096, 1, 129, 129],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([262144, 1, 128, 128],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([262144, 1, 128, 128],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([262144, 16, 16, 64],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([262144, 64, 16, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([262144, 64, 16, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([262144, 64, 16, 16],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([26215, 64, 16, 160],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([26215, 64, 16, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2629, 16, 14, 19, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2629, 16, 14, 19, 384],"float16"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2629, 16, 14, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([268435457, 1, 2, 2, 2],"float64"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([2684355, 1, 40, 40],"float32"), pad=list[0,0,2,2,], )
paddle.nn.functional.pad(Tensor([2684355, 1, 40, 40],"float32"), pad=list[2,2,0,0,], )
paddle.nn.functional.pad(Tensor([2775, 16, 14, 18, 384],"float16"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2775, 16, 14, 18, 384],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2775, 16, 18, 14, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2775, 16, 18, 14, 384],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2796203, 6, 16, 16],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2796203, 6, 16, 16],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2796203, 6, 16, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([2796203, 96, 4, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([28533, 3, 224, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([29128, 64, 16, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([29128, 64, 16, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([2938, 16, 14, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([298262, 1, 3, 1600, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([298262, 1, 3, 3, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 11930465, 40, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 1431655765],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 1, 298262, 1600, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 298262, 3, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 11930465, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 159072863, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 1600, 298262],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 298262, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 3, 159072863],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 3, 40, 11930465],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 35791395, 40],"float32"), pad=list[0,0,2,2,], )
paddle.nn.functional.pad(Tensor([3, 1, 35791395, 40],"float32"), pad=list[2,2,0,0,], )
paddle.nn.functional.pad(Tensor([3, 1, 40, 11930465, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 40, 35791395],"float32"), pad=list[0,0,2,2,], )
paddle.nn.functional.pad(Tensor([3, 1, 40, 35791395],"float32"), pad=list[2,2,0,0,], )
paddle.nn.functional.pad(Tensor([3, 1, 40, 40, 894785],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 1, 894785, 40, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 14913081, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,1,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="circular", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 286331153, 5],"float32"), pad=list[3,4,5,6,7,8,], mode="constant", value=100, data_format="NCL", )
paddle.nn.functional.pad(Tensor([3, 298262, 3, 40, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 298262, 40, 40, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 4, 357913942],"float32"), pad=list[1,1,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 357913942],"float32"), pad=list[1,2,], mode="circular", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 357913942],"float32"), pad=list[1,2,], mode="constant", value=100, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 357913942],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 357913942],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 357913942],"float32"), pad=list[3,4,5,6,7,8,], mode="constant", value=100, data_format="NCL", )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 10226113, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 6, 11930465],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 5, 71582789],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 59652324, 6],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 4, 8521761, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 47721859, 5, 6],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 5592406, 16, 16],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 64, 1398102, 16],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 64, 16, 1398102],"float32"), pad=tuple(1,1,1,1,), mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 6817409, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([3, 894785, 40, 40],"float32"), pad=list[0,0,2,2,], )
paddle.nn.functional.pad(Tensor([3, 894785, 40, 40],"float32"), pad=list[2,2,0,0,], )
paddle.nn.functional.pad(Tensor([3, 99421, 3, 1600, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([3, 99421, 3, 3, 1600],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([30, 1, 1118482, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 4473925],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 639133, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 745655, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 894785, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 10755, 104],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 16, 69906],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 9987, 112],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 19973, 32, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 23302, 32, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 27963, 32, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 34953, 32, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 559241, 16, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 55925, 16, 160],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 62138, 16, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 139811, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 13982, 160],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 15535, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 16, 139811],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 17477, 128],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 19973, 112],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 69906, 16, 128],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 79892, 16, 112],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 79892, 16, 112],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 86038, 16, 104],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([3121, 16, 14, 16, 384],"float16"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3121, 16, 14, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3121, 16, 16, 14, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3121, 16, 16, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3195661, 8, 14, 12],"float32"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([31957, 3, 140, 160],"float64"), pad=list[40,40,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([3237, 48, 36, 768],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([32768, 64, 16, 128],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([32768, 64, 16, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([330382100, 1, 1, 13],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([3314018, 3, 6, 6, 6],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([33289, 6, 21, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float16"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float16"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 14, 15, 384],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float16"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float16"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3329, 16, 15, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([33554432, 4, 32],"float32"), list[0,0,0,3,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([3567, 16, 14, 14, 384],"float16"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([3567, 16, 14, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([357913942, 1, 2, 3],"float64"), pad=list[1,0,1,2,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 1, 3, 4],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3, 1],"float64"), pad=list[1,1,1,0,], mode="reflect", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[1,1,], mode="reflect", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NLC", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[2,1,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 2, 3],"float64"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([357913942, 3, 4],"float32"), list[1,1,], mode="circular", data_format="NCL", )
paddle.nn.functional.pad(Tensor([357913942, 3, 4],"float32"), list[1,1,], mode="reflect", data_format="NCL", )
paddle.nn.functional.pad(Tensor([357913942, 3, 4],"float32"), list[1,1,], mode="replicate", data_format="NCL", )
paddle.nn.functional.pad(Tensor([35791395, 120, 1, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([35791395, 2, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, )
paddle.nn.functional.pad(Tensor([35791395, 2, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([35791395, 2, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,], mode="constant", value=100, data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([35791395, 2, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,7,8,], mode="constant", value=100, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,1,1,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="circular", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="constant", value=100, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([35791395, 4, 5, 6],"float32"), pad=list[1,2,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([365779, 1, 103, 114],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([372633, 1, 102, 113],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([37450, 64, 16, 112],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([37450, 64, 16, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([379683, 1, 101, 112],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([38347923, 7, 16],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([383480, 1, 100, 112],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([386934, 1, 100, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 1, 2, 536870912],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 1, 357913942, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 10199, 376, 280],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 128, 119838, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 128, 94, 89241],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 163183, 94, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 178956971, 2, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 178956971, 6],"float32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 2485514, 6, 6, 6],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 4971027, 6, 6],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 4971027, 6],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 4971027],"float64"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 6, 9942054],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 6, 9942054, 6],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 3, 9942054, 6, 6],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 32, 32, 1048576],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([4, 32, 43691, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([4, 40796, 188, 140],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 4194304, 16, 16],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 4194304, 16, 16],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 4194304, 16, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 43691, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([4, 4971027, 6, 6, 6],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 11184811, 16],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 11184811, 16],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 11184811, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 16, 11184811],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 16, 11184811],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 16, 11184811],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4, 6, 178956971],"float32"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 6, 89478486],"float64"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 119838, 140],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 188, 89241],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 376, 44621],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 59919, 280],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 89478486, 6],"float64"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([4096, 1, 16, 65536],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4096, 1, 65536, 16],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4096, 256, 64, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4096, 4096, 16, 16],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4162, 48, 168, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([4194304, 1, 32, 32],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([421120, 25, 408],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.nn.functional.pad(Tensor([421120, 3400, 3],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([4294967295, 1, 1, 1],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4294967295],"float32"), list[0,1,], value=1, )
paddle.nn.functional.pad(Tensor([4294967295],"float32"), list[1,0,], value=1, )
paddle.nn.functional.pad(Tensor([4294967295],"float32"), pad=list[136,136,], mode="constant", )
paddle.nn.functional.pad(Tensor([4294967295],"float32"), pad=list[212,212,], mode="constant", )
paddle.nn.functional.pad(Tensor([4294967295],"float32"), pad=list[424,424,], mode="constant", )
paddle.nn.functional.pad(Tensor([44739243, 1, 96],"float32"), pad=tuple(0,8,), mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([44739243, 3, 4, 4],"float64"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([44739243, 3, 4, 4],"float64"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([44739243, 3, 4, 4],"float64"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([4661, 80, 60, 192],"float32"), list[0,0,0,4,0,3,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([477218589, 1, 3, 3],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([499, 8607149],"float32"), list[0,2501,0,0,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([5, 23302, 48, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([5, 48, 23302, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([5, 48, 48, 372828],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([5100, 128, 94, 70],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,1,1,1,1,1,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="circular", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="constant", value=100, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="reflect", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([5113057, 4, 5, 6, 7],"float32"), pad=list[1,2,2,1,1,0,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([51388, 27860, 3],"float32"), list[1,0,], value=6, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([52, 5162221, 16],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([52, 7, 11799361],"float32"), pad=list[1,1,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([524288, 8, 8, 128],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([52429, 128, 16, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([536870912, 1, 2, 2, 2],"float32"), pad=list[2,2,2,2,2,2,], mode="replicate", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([536870913, 1, 2, 2],"float64"), pad=list[2,2,2,2,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([53687092, 80],"float32"), list[0,2501,0,0,], data_format="NLC", )
paddle.nn.functional.pad(Tensor([53722, 79949, 1],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([5462, 32, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([5549, 16, 9, 7, 768],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([55584, 25757, 3],"float32"), list[1,0,], value=5, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([57266231, 25, 3],"float32"), list[0,1,], "constant", 1.0, data_format="NCL", )
paddle.nn.functional.pad(Tensor([59652324, 6, 6],"float64"), pad=list[2,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([599187, 1, 32, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([6, 715827883],"float32"), list[1,0,1,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([638, 64, 376, 280],"float32"), pad=list[1,1,1,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([6473, 24, 18, 1536],"float32"), list[0,0,0,0,0,6,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([64866, 22071, 3],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([65027, 1, 257, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([65209, 21955, 3],"float32"), list[1,0,], value=0, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([65536, 1, 256, 256],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([65536, 1, 256, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([65536, 1, 256, 256],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([65536, 128, 16, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6628036, 3, 6, 6, 6],"float32"), pad=list[2,2,2,2,2,2,], mode="constant", value=0.0, data_format="NCDHW", name=None, )
paddle.nn.functional.pad(Tensor([6710887, 10, 32],"float64"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([673, 3, 32, 224, 297],"float32"), tuple(0,3,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([69756, 20524, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([699051, 1, 32, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([7, 12, 42, 1217395],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 12, 99865, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 24, 84, 304349],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 24, 99865, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 168, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 21, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 42, 512],"float32"), tuple(0,0,0,3,0,3,0,0,), )
paddle.nn.functional.pad(Tensor([7, 28533, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([7, 48, 168, 76088],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 48, 99865, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([7, 6, 21, 4869578],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([7, 6, 99865, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([706, 3, 32, 224, 283],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([715827883, 1, 2, 3],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 1, 3, 2],"float32"), pad=list[0,1,0,0,], mode="constant", value=-1000000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[1,2,], mode="reflect", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 2, 3],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([715827883, 6],"float32"), list[1,0,1,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([71582789, 3, 4, 5],"float32"), pad=list[1,2,1,1,3,4,5,6,], mode="constant", value=100, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([72379, 19780, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([735, 16, 56, 68, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([738, 3, 32, 224, 271],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([775, 3, 32, 224, 258],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([79625, 17980, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([8, 21846, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([8, 32, 21846, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([8, 32, 32, 524288],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([810, 192, 144, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([816, 3, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([819, 16, 61, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([826, 3, 32, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([8323, 24, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([833, 16, 56, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([833, 16, 60, 56, 96],"float32"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([836, 3, 32, 239, 224],"float32"), tuple(0,0,0,1,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([838861, 1, 32, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([840, 3, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([847, 16, 56, 59, 96],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([847, 16, 59, 56, 96],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([861, 16, 56, 58, 96],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([865, 3, 32, 224, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([877, 16, 57, 56, 96],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([89478486, 2, 3, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([89478486, 2, 3, 4],"float64"), pad=list[2,1,2,1,], mode="replicate", value=0.0, data_format="NHWC", name=None, )
paddle.nn.functional.pad(Tensor([89478486, 3, 4, 4],"float32"), list[1,1,1,1,], mode="circular", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([89478486, 3, 4, 4],"float32"), list[1,1,1,1,], mode="reflect", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([89478486, 3, 4, 4],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([894785, 1, 3, 40, 40],"float32"), pad=list[0,0,0,0,2,2,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([894785, 1, 40, 40, 3],"float32"), pad=list[2,2,0,0,0,0,], data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([9321, 40, 30, 384],"float32"), list[0,0,0,2,0,5,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([9586981, 64, 7],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([97385, 14701, 3],"float32"), list[1,0,], value=4, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([973916, 4410, 1],"float32"), pad=list[200,200,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([1],"float64"), )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=tuple(0,1,1,1,2,0,), mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=tuple(2,1,3,0,2,0,), mode="replicate", data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([2147483649],"float64"), )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([1],"float64"), )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=tuple(2,1,3,0,2,0,), mode="replicate", data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 715827883, 3],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([1],"float64"), )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(2,1,3,0,2,0,), mode="replicate", data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 1, 357913942, 2, 3],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([1],"float64"), )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=tuple(2,1,3,0,2,0,), mode="replicate", data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([1, 357913942, 1, 2, 3],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([238609295, 3, 3],"float64"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([3, 2, 1, 357913942],"float64"), pad=list[1,1,2,3,], mode="constant", value=2.0, data_format="NCHW", )
paddle.nn.functional.pad(x=Tensor([3, 2, 178956971, 2],"float64"), pad=list[1,1,2,3,], mode="constant", value=2.0, data_format="NCHW", )
paddle.nn.functional.pad(x=Tensor([3, 238609295, 3],"float64"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([3, 3, 238609295],"float64"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([3, 3, 477218589],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([3, 357913942, 1, 2],"float64"), pad=list[1,1,2,3,], mode="constant", value=2.0, data_format="NCHW", )
paddle.nn.functional.pad(x=Tensor([3, 477218589, 3],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=list[0,0,0,0,0,0,1,1,0,0,], mode="constant", value=Tensor([1],"float64"), )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="circular", value=0, data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=tuple(0,1,1,1,2,0,), mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=tuple(2,1,3,0,2,0,), mode="replicate", data_format="NDHWC", )
paddle.nn.functional.pad(x=Tensor([357913942, 1, 1, 2, 3],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.pad(x=Tensor([477218589, 3, 3],"float32"), pad=list[1,1,], mode="constant", value=0.0, data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([536870913, 2, 1, 2],"float64"), pad=list[1,1,2,3,], mode="constant", value=2.0, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([1024, 256, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 4, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 4, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 9, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 9, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1657009, 81, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217728, 4, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 29826162, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 29826162, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 29826162, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 29826162, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 29826162, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 29826162, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 29826162],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 29826162],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 59652324],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 59652324, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2048, 128, 128, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2048, 128, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 9, 4, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 128, 65536],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 128, 65536],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 131072, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 131072, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 64, 131072],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 64, 131072],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 65536, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 65536, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 128, 32768],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 32768, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 262144, 64, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 262144, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 33554433, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 65536, 128, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 65536, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 1657009, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 4, 1657009],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 9, 14913081, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 9, 4, 14913081],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([8192, 128, 64, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([8192, 128, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([14913081, 4, 4, 9],"float64"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([14913081, 9, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([1657009, 81, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 29826162, 4, 9],"float64"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 29826162, 9],"float64"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 4, 67108865],"float64"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 67108865, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 9, 29826162, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 9, 4, 29826162],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 33554433, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 1657009, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 4, 1657009],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 9, 14913081, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 9, 4, 14913081],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 1, 12, 12],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 1, 12, 12],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 12, 12, 1],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 12, 12, 1],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 178956971],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 178956971],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 89478486],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 89478486],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 178956971, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 178956971, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 89478486, 12],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 89478486, 12],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 7456541],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 7456541],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 89478486, 1],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 89478486, 1],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 7456541, 12, 12],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 7456541, 12, 12],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 89478486, 12, 1],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 89478486, 12, 1],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([2147483648, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float16"), Tensor([2147483648, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float16"), Tensor([10, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float16"), Tensor([2147483648, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float16"), Tensor([2147483648, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), log_input=True, full=True, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 4],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 11523, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 28, 11523],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 28, 28],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 56, 56],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 56, 5762],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 5762, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 13169, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 210703, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 11523, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 14, 11523],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 14, 14],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 52676, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([10700, 128, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([42800, 128, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([85599, 256, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 178956971, 3, 4],"float64"), weight=Tensor([1],"float64"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 268435457, 4],"float64"), weight=Tensor([1],"float64"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 357913942],"float64"), weight=Tensor([1],"float64"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 4],"float32"), weight=Tensor([4294967295],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 4],"float64"), weight=Tensor([2147483649],"float64"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 715827883],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 2, 536870912, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([1, 357913942, 3, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([178956971, 2, 3, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([238609295, 3, 3],"float64"), weight=Tensor([3],"float64"), )
paddle.nn.functional.prelu(x=Tensor([3, 238609295, 3],"float64"), weight=Tensor([3],"float64"), )
paddle.nn.functional.prelu(x=Tensor([3, 3, 238609295],"float64"), weight=Tensor([3],"float64"), )
paddle.nn.functional.prelu(x=Tensor([3, 3, 3],"float64"), weight=Tensor([2147483649],"float64"), )
paddle.nn.functional.prelu(x=Tensor([89478486, 2, 3, 4],"float64"), weight=Tensor([1],"float64"), )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 2796203, 12, 64],"float16"), key=Tensor([2, 2796203, 12, 64],"float16"), value=Tensor([2, 2796203, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 2796203, 12, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 2796203],"float16"), key=Tensor([2, 64, 12, 2796203],"float16"), value=Tensor([2, 64, 12, 2796203],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 2796203],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 2796203, 12, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 64, 12, 2796203],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 2796203, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 64, 12, 2796203],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 64, 524288, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([87382, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([2, 64, 524288, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 12, 64],"float16"), key=Tensor([87382, 64, 12, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 524288, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([2, 64, 524288, 64],"float16"), key=Tensor([2, 64, 524288, 64],"float16"), value=Tensor([2, 64, 524288, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([87382, 64, 12, 64],"float16"), key=Tensor([2, 64, 12, 64],"float16"), value=Tensor([2, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(query=Tensor([87382, 64, 12, 64],"float16"), key=Tensor([87382, 64, 12, 64],"float16"), value=Tensor([87382, 64, 12, 64],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 107374183, 40],"float16"), Tensor([1, 1, 107374183, 40],"float16"), Tensor([1, 1, 107374183, 40],"float16"), attn_mask=Tensor([1, 2, 107374183, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 107374183, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 2147483648],"float16"), Tensor([1, 1, 2, 2147483648],"float16"), Tensor([1, 1, 2, 2147483648],"float16"), attn_mask=Tensor([1, 2, 1, 2147483648],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 2147483648],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 107374183, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 2147483648],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 107374183, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 2147483648],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 2147483648],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 2147483648, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 4294967295, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([2147483648, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 53687092, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([53687092, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([1, 53687092, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1, 2, 40],"float16"), Tensor([53687092, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32768, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1048576, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1024, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32768, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1048576, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1024, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32768, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32768, 128],"bfloat16"), Tensor([1, 1024, 32768, 128],"bfloat16"), Tensor([1, 1024, 32768, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 43691, 96],"bfloat16"), Tensor([1, 1024, 43691, 96],"bfloat16"), Tensor([1, 1024, 43691, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 43691, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 2097152],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 134217728, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([131072, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 2097152],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([1, 134217728, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 16],"bfloat16"), Tensor([131072, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 2, 524288],"bfloat16"), Tensor([1, 1024, 2, 524288],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 43691, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 43691, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 524288],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 5592406, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([5462, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 5592406, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([5462, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1048576, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1048576, 32, 128],"bfloat16"), Tensor([1, 1048576, 32, 128],"bfloat16"), Tensor([1, 1048576, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 2097152],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), attn_mask=Tensor([1, 1, 131072, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), attn_mask=Tensor([1, 1, 16384, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), attn_mask=Tensor([1, 1, 16384, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), attn_mask=Tensor([1, 1, 21846, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), attn_mask=Tensor([1, 1, 32768, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), Tensor([1, 2048, 32768, 64],"float16"), attn_mask=Tensor([1, 1, 32768, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 16384, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 524288],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 524288],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 134217728, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 1048576],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 134217728, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 131072, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 1048576],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([65536, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 16],"float16"), Tensor([65536, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 2, 262144],"float16"), Tensor([1, 2048, 2, 262144],"float16"), attn_mask=Tensor([1, 1, 2048, 262144],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 262144],"float16"), attn_mask=Tensor([1, 1, 2048, 262144],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 21846, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 262144],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2097152],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2097152, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1024, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1024, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([2731, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 96],"float16"), Tensor([2731, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 33554432, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 33554432, 8, 16],"bfloat16"), Tensor([1, 33554432, 2, 16],"bfloat16"), Tensor([1, 33554432, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 33554432, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 33554432, 8, 16],"float16"), Tensor([1, 33554432, 2, 16],"float16"), Tensor([1, 33554432, 2, 16],"float16"), attn_mask=Tensor([1, 33554432, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 53687092, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 53687092, 2, 40],"float16"), Tensor([1, 53687092, 2, 40],"float16"), Tensor([1, 53687092, 2, 40],"float16"), attn_mask=Tensor([1, 53687092, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 5592406, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 5592406, 8, 96],"bfloat16"), Tensor([1, 5592406, 8, 96],"bfloat16"), Tensor([1, 5592406, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), Tensor([1, 5592406, 8, 96],"float16"), attn_mask=Tensor([1, 5592406, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), attn_mask=Tensor([1, 67108864, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), Tensor([1, 67108864, 1, 64],"float16"), attn_mask=Tensor([1, 67108864, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), attn_mask=Tensor([1, 8388608, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), Tensor([1, 8388608, 4, 128],"float16"), attn_mask=Tensor([1, 8388608, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1024, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1024, 1024, 32, 128],"bfloat16"), Tensor([1024, 1024, 32, 128],"bfloat16"), Tensor([1024, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([16384, 2048, 8, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([16384, 2048, 8, 16],"float16"), Tensor([16384, 2048, 2, 16],"float16"), Tensor([16384, 2048, 2, 16],"float16"), attn_mask=Tensor([16384, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 100, 1, 2147483648],"float16"), Tensor([2, 100, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 100, 1, 2147483648],"float16"), Tensor([2, 100, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 101, 1, 2147483648],"float16"), Tensor([2, 101, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 101, 1, 2147483648],"float16"), Tensor([2, 101, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 102, 1, 2147483648],"float16"), Tensor([2, 102, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 102, 1, 2147483648],"float16"), Tensor([2, 102, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 103, 1, 2147483648],"float16"), Tensor([2, 103, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 103, 1, 2147483648],"float16"), Tensor([2, 103, 1, 2147483648],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 2147483648],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 21474837],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 21474837],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 21474837],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 21474837],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 21474837, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 21474837, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 21474837, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 21474837, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([42949673, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([42949673, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 335545, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 335545, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([671089, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([671089, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 335545, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 100, 335545, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 21262215],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 21262215],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 21262215],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 21262215],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 21262215, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 21262215, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 21262215, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 21262215, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([42524429, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([42524429, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 332223, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 332223, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([664445, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([664445, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 332223, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 101, 332223, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 21053762],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 21053762],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 21053762],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 21053762],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 21053762, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 21053762, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 21053762, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 21053762, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([42107523, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([42107523, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 328966, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 328966, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([657931, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([657931, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 328966, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 102, 328966, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 20849356],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 20849356],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 20849356],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 20849356],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 2147483648],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 20849356, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 20849356, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 20849356, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 20849356, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([41698712, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([41698712, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 325772, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 325772, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([651543, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([651543, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 325772, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 103, 325772, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([651543, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([651543, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([657931, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([657931, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([664445, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([664445, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([671089, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 1, 64],"float16"), Tensor([671089, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 100, 22369622, 96],"float16"), Tensor([2, 100, 22369622, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 101, 22369622, 96],"float16"), Tensor([2, 101, 22369622, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 102, 22369622, 96],"float16"), Tensor([2, 102, 22369622, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 103, 22369622, 96],"float16"), Tensor([2, 103, 22369622, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 104, 22369622, 96],"float16"), Tensor([2, 104, 22369622, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 22369622, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 100, 33554432, 64],"float16"), Tensor([2, 100, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 100, 33554432, 64],"float16"), Tensor([2, 100, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 101, 33554432, 64],"float16"), Tensor([2, 101, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 101, 33554432, 64],"float16"), Tensor([2, 101, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 102, 33554432, 64],"float16"), Tensor([2, 102, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 102, 33554432, 64],"float16"), Tensor([2, 102, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 103, 33554432, 64],"float16"), Tensor([2, 103, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 33554432, 64],"float16"), Tensor([2, 103, 33554432, 64],"float16"), Tensor([2, 103, 33554432, 64],"float16"), attn_mask=Tensor([2, 1, 33554432, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 100, 8, 268435456],"float16"), Tensor([2, 100, 8, 268435456],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 101, 8, 268435456],"float16"), Tensor([2, 101, 8, 268435456],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 102, 8, 268435456],"float16"), Tensor([2, 102, 8, 268435456],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 103, 8, 268435456],"float16"), Tensor([2, 103, 8, 268435456],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 104, 8, 268435456],"float16"), Tensor([2, 104, 8, 268435456],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 268435456],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 100, 223697, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 100, 8, 2684355],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 100, 223697, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 100, 8, 2684355],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([55925, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 101, 221482, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 101, 8, 2657777],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 101, 221482, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 101, 8, 2657777],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([55371, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 102, 219311, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 102, 8, 2631721],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 102, 219311, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 102, 8, 2631721],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([54828, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 103, 217181, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 103, 8, 2606170],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 103, 217181, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 103, 8, 2606170],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([54296, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 104, 215093, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 104, 8, 2581111],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 104, 215093, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 104, 8, 2581111],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([53774, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([53774, 104, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([54296, 103, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([54828, 102, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([55371, 101, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 1, 8, 96],"float16"), Tensor([55925, 100, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 209062, 96],"float16"), Tensor([2, 107, 209062, 96],"float16"), Tensor([2, 107, 209062, 96],"float16"), attn_mask=Tensor([2, 1, 209062, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 209062, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 2508743],"float16"), Tensor([2, 107, 8, 2508743],"float16"), Tensor([2, 107, 8, 2508743],"float16"), attn_mask=Tensor([2, 1, 107, 2508743],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 2508743],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 209062, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 2508743],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 209062, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 2508743],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 20069941],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 20069941, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 187570, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([375140, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([52266, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 107, 8, 96],"float16"), Tensor([52266, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 205226, 96],"float16"), Tensor([2, 109, 205226, 96],"float16"), Tensor([2, 109, 205226, 96],"float16"), attn_mask=Tensor([2, 1, 205226, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 205226, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 2462711],"float16"), Tensor([2, 109, 8, 2462711],"float16"), Tensor([2, 109, 8, 2462711],"float16"), attn_mask=Tensor([2, 1, 109, 2462711],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 2462711],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 205226, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 2462711],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 205226, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 2462711],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 19701685],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 19701685, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 180750, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([361499, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([51307, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 109, 8, 96],"float16"), Tensor([51307, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=Tensor([2, 2796203, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), Tensor([2, 2796203, 8, 96],"float16"), attn_mask=Tensor([2, 2796203, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 1, 64],"float16"), attn_mask=Tensor([2, 33554432, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2731, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), Tensor([1, 2048, 8, 96],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([2731, 2048, 8, 96],"float16"), Tensor([2731, 2048, 8, 96],"float16"), Tensor([2731, 2048, 8, 96],"float16"), attn_mask=Tensor([2731, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([32768, 1024, 8, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([32768, 1024, 8, 16],"bfloat16"), Tensor([32768, 1024, 2, 16],"bfloat16"), Tensor([32768, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([32768, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([32768, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), Tensor([1, 2048, 1, 64],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([32768, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), attn_mask=Tensor([32768, 1, 2048, 2048],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([32768, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), Tensor([32768, 2048, 1, 64],"float16"), attn_mask=Tensor([32768, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([239194, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 8012999],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 8012999, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 59799, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 2003250],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 62602, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([62602, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 2003250],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 62602, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 128],"float16"), Tensor([62602, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 2003250],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 4, 2003250],"float16"), Tensor([4, 134, 4, 2003250],"float16"), Tensor([4, 134, 4, 2003250],"float16"), attn_mask=Tensor([4, 1, 134, 2003250],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 62602, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 134, 62602, 128],"float16"), Tensor([4, 134, 62602, 128],"float16"), Tensor([4, 134, 62602, 128],"float16"), attn_mask=Tensor([4, 1, 62602, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([204280, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 7405117],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 7405117, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 51070, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 1851280],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 57853, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([57853, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 1851280],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 57853, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 128],"float16"), Tensor([57853, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 1851280],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 4, 1851280],"float16"), Tensor([4, 145, 4, 1851280],"float16"), Tensor([4, 145, 4, 1851280],"float16"), attn_mask=Tensor([4, 1, 145, 1851280],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 57853, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 145, 57853, 128],"float16"), Tensor([4, 145, 57853, 128],"float16"), Tensor([4, 145, 57853, 128],"float16"), attn_mask=Tensor([4, 1, 57853, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([172047, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 6795835],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 6795835, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 43012, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 1698959],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 53093, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([53093, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 1698959],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 53093, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 128],"float16"), Tensor([53093, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 1698959],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 4, 1698959],"float16"), Tensor([4, 158, 4, 1698959],"float16"), Tensor([4, 158, 4, 1698959],"float16"), attn_mask=Tensor([4, 1, 158, 1698959],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 53093, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 158, 53093, 128],"float16"), Tensor([4, 158, 53093, 128],"float16"), Tensor([4, 158, 53093, 128],"float16"), attn_mask=Tensor([4, 1, 53093, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([152175, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 6391321],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 6391321, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 38044, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 1597831],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 49933, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([49933, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 1597831],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 49933, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 128],"float16"), Tensor([49933, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 1597831],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 4, 1597831],"float16"), Tensor([4, 168, 4, 1597831],"float16"), Tensor([4, 168, 4, 1597831],"float16"), attn_mask=Tensor([4, 1, 168, 1597831],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 49933, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 168, 49933, 128],"float16"), Tensor([4, 168, 49933, 128],"float16"), Tensor([4, 168, 49933, 128],"float16"), attn_mask=Tensor([4, 1, 49933, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 2097152, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 2097152, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 2097152, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), Tensor([4, 2097152, 4, 128],"float16"), attn_mask=Tensor([4, 2097152, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4096, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4096, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), Tensor([1, 2048, 4, 128],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4096, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), attn_mask=Tensor([4096, 1, 2048, 2048],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([4096, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), Tensor([4096, 2048, 4, 128],"float16"), attn_mask=Tensor([4096, 1, 2048, 2048],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([49933, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), Tensor([4, 168, 4, 128],"float16"), attn_mask=Tensor([4, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([49933, 168, 4, 128],"float16"), Tensor([49933, 168, 4, 128],"float16"), Tensor([49933, 168, 4, 128],"float16"), attn_mask=Tensor([49933, 1, 168, 168],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([51307, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), Tensor([2, 109, 8, 96],"float16"), attn_mask=Tensor([2, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([51307, 109, 8, 96],"float16"), Tensor([51307, 109, 8, 96],"float16"), Tensor([51307, 109, 8, 96],"float16"), attn_mask=Tensor([51307, 1, 109, 109],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([52266, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), Tensor([2, 107, 8, 96],"float16"), attn_mask=Tensor([2, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([52266, 107, 8, 96],"float16"), Tensor([52266, 107, 8, 96],"float16"), Tensor([52266, 107, 8, 96],"float16"), attn_mask=Tensor([52266, 1, 107, 107],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([53093, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), Tensor([4, 158, 4, 128],"float16"), attn_mask=Tensor([4, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([53093, 158, 4, 128],"float16"), Tensor([53093, 158, 4, 128],"float16"), Tensor([53093, 158, 4, 128],"float16"), attn_mask=Tensor([53093, 1, 158, 158],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([53687092, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), Tensor([1, 1, 2, 40],"float16"), attn_mask=Tensor([1, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([53687092, 1, 2, 40],"float16"), Tensor([53687092, 1, 2, 40],"float16"), Tensor([53687092, 1, 2, 40],"float16"), attn_mask=Tensor([53687092, 2, 1, 1],"float16"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5462, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5462, 1024, 8, 96],"bfloat16"), Tensor([5462, 1024, 8, 96],"bfloat16"), Tensor([5462, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), Tensor([2, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), Tensor([2, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), Tensor([2, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), Tensor([2, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), Tensor([2, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([5592406, 100, 8, 96],"float16"), Tensor([5592406, 100, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([5592406, 101, 8, 96],"float16"), Tensor([5592406, 101, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([5592406, 102, 8, 96],"float16"), Tensor([5592406, 102, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([5592406, 103, 8, 96],"float16"), Tensor([5592406, 103, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([5592406, 1, 8, 96],"float16"), Tensor([5592406, 104, 8, 96],"float16"), Tensor([5592406, 104, 8, 96],"float16"), attn_mask=None, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([57853, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), Tensor([4, 145, 4, 128],"float16"), attn_mask=Tensor([4, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([57853, 145, 4, 128],"float16"), Tensor([57853, 145, 4, 128],"float16"), Tensor([57853, 145, 4, 128],"float16"), attn_mask=Tensor([57853, 1, 145, 145],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([62602, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), Tensor([4, 134, 4, 128],"float16"), attn_mask=Tensor([4, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([62602, 134, 4, 128],"float16"), Tensor([62602, 134, 4, 128],"float16"), Tensor([62602, 134, 4, 128],"float16"), attn_mask=Tensor([62602, 1, 134, 134],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), Tensor([2, 100, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), Tensor([2, 101, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), Tensor([2, 102, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), Tensor([2, 103, 1, 64],"float16"), attn_mask=Tensor([2, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 100, 1, 64],"float16"), Tensor([67108864, 100, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 100],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 100, 1, 64],"float16"), Tensor([67108864, 100, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 100],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 101, 1, 64],"float16"), Tensor([67108864, 101, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 101],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 101, 1, 64],"float16"), Tensor([67108864, 101, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 101],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 102, 1, 64],"float16"), Tensor([67108864, 102, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 102],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 102, 1, 64],"float16"), Tensor([67108864, 102, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 102],"float16"), is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 103, 1, 64],"float16"), Tensor([67108864, 103, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 103],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([67108864, 1, 1, 64],"float16"), Tensor([67108864, 103, 1, 64],"float16"), Tensor([67108864, 103, 1, 64],"float16"), attn_mask=Tensor([67108864, 1, 1, 103],"float16"), is_causal=False, )
paddle.nn.functional.selu(Tensor([1073741825, 2],"float64"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([2, 1073741825],"float64"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([2, 2147483648],"float32"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([2147483648, 2],"float32"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([238609295, 3, 3],"float64"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([238609295, 3, 3],"float64"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 14316558, 5, 10],"float64"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 14316558, 5, 10],"float64"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([3, 238609295, 3],"float64"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([3, 238609295, 3],"float64"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 3, 238609295],"float64"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([3, 3, 238609295],"float64"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 5, 14316558, 10],"float64"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 5, 14316558, 10],"float64"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([3, 5, 5, 28633116],"float64"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 5, 5, 28633116],"float64"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([8589935, 5, 5, 10],"float64"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([8589935, 5, 5, 10],"float64"), 1.5, 2.0, None, )
paddle.nn.functional.selu(x=Tensor([1073741825, 2],"float64"), )
paddle.nn.functional.selu(x=Tensor([2, 1073741825],"float64"), )
paddle.nn.functional.selu(x=Tensor([2, 2147483648],"float32"), )
paddle.nn.functional.selu(x=Tensor([2147483648, 2],"float32"), )
paddle.nn.functional.selu(x=Tensor([238609295, 3, 3],"float64"), )
paddle.nn.functional.selu(x=Tensor([238609295, 3, 3],"float64"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(x=Tensor([3, 238609295, 3],"float64"), )
paddle.nn.functional.selu(x=Tensor([3, 238609295, 3],"float64"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(x=Tensor([3, 3, 238609295],"float64"), )
paddle.nn.functional.selu(x=Tensor([3, 3, 238609295],"float64"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=-1, dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=10, dtype=VarType(bool), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=10, dtype=VarType(float32), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=10, dtype=VarType(float64), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=10, dtype=VarType(int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=10, dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([2, 1073741825],"int64"), maxlen=10, dtype=VarType(uint8), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float16"), Tensor([1, 1, 4294967295],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float16"), Tensor([1, 4294968, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float16"), Tensor([4294968, 1, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([1, 4294968, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([4294968, 1, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float16"), Tensor([1, 1, 4294967295],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float16"), Tensor([1, 390168, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float16"), Tensor([390168, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([1, 390168, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([390168, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 18],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 18],"float32"), Tensor([1, 238609295, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 18],"float32"), Tensor([238609295, 1, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float16"), Tensor([1, 1, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float16"), Tensor([1, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float16"), Tensor([1, 1, 4294967295],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 11, 390451573],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 195084, 22016],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 238609295, 18],"float32"), Tensor([1, 1, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 238609295, 18],"float32"), Tensor([1, 238609295, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 390168, 11008],"float16"), Tensor([1, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 390168, 11008],"float16"), Tensor([1, 390168, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 390168, 11008],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 390168, 11008],"float32"), Tensor([1, 390168, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4096, 1048576],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4194304, 1024],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4294968, 1000],"float16"), Tensor([1, 1, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4294968, 1000],"float16"), Tensor([1, 4294968, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4294968, 1000],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4294968, 1000],"float32"), Tensor([1, 4294968, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1048576, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1048576, 4096],"float32"), Tensor([1048576, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1048576, 4096],"float32"), Tensor([300, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([10631108, 202],"float64"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([21262215, 101],"float64"), Tensor([21262215, 101],"float64"), )
paddle.incubate.nn.functional.swiglu(Tensor([21262215, 101],"float64"), Tensor([4, 101],"float64"), )
paddle.incubate.nn.functional.swiglu(Tensor([21262215, 202],"float16"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([21262215, 202],"float32"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([21474837, 200],"float16"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([21474837, 200],"float32"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([238609295, 1, 18],"float32"), Tensor([1, 1, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([238609295, 1, 18],"float32"), Tensor([238609295, 1, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 14316558],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 14316558],"float32"), Tensor([300, 14316558],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 14316558],"float32"), Tensor([300, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 4096],"float32"), Tensor([1048576, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 4096],"float32"), Tensor([300, 14316558],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([381301, 11, 1024],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float16"), Tensor([1, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float16"), Tensor([390168, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float32"), Tensor([390168, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float16"), Tensor([4, 1073741824],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float16"), Tensor([42524429, 101],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float32"), Tensor([42524429, 101],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float64"), Tensor([21262215, 101],"float64"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 101],"float64"), Tensor([4, 536870913],"float64"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float16"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float16"), Tensor([4, 101],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float16"), Tensor([4, 1073741824],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float32"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float32"), Tensor([4, 101],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1073741824],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 536870913],"float64"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([4, 536870913],"float64"), Tensor([4, 101],"float64"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 536870913],"float64"), Tensor([4, 536870913],"float64"), )
paddle.incubate.nn.functional.swiglu(Tensor([42524429, 101],"float16"), Tensor([4, 101],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([42524429, 101],"float16"), Tensor([42524429, 101],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([42524429, 101],"float32"), Tensor([4, 101],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([42524429, 101],"float32"), Tensor([42524429, 101],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([42949673, 100],"float16"), Tensor([8, 100],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4294968, 1, 1000],"float16"), Tensor([1, 1, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4294968, 1, 1000],"float16"), Tensor([4294968, 1, 1000],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([4294968, 1, 1000],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4294968, 1, 1000],"float32"), Tensor([4294968, 1, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([48, 4096, 22016],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 100],"float16"), Tensor([8, 536870912],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 536870912],"float16"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([8, 536870912],"float16"), Tensor([8, 100],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 536870912],"float16"), Tensor([8, 536870912],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 536870912],"float32"), None, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 138547333],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 138547333],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 138547333],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 85899346],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 85899346, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1717987, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1717987, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 4294967295],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([4294967295, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 4294967295],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([4294967295, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 67108864, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 2164803, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([2164803, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 67108864, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([1, 2164803, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 31, 64],"float16"), Tensor([2164803, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 67108864, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 2164803, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2164803, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 134217728, 32],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 134217728, 32],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([1, 1, 134217728, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([1, 1, 8, 536870912],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([1, 16777216, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 32],"float32"), Tensor([16777216, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 536870912],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 1, 8, 536870912],"float32"), Tensor([1, 1, 8, 536870912],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 16777216, 8, 32],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([1, 16777216, 8, 32],"float32"), Tensor([1, 16777216, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([16777216, 1, 8, 32],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([16777216, 1, 8, 32],"float32"), Tensor([16777216, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 263173, 8, 1020],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 263173, 8, 1020],"float16"), mask=Tensor([2, 263173, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 263173, 1020],"float16"), mask=Tensor([2, 1, 263173, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 263173, 1020],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([2, 1, 2105377, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([2, 1, 8, 268435456],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([2, 263173, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 1020],"float16"), mask=Tensor([526345, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([16777216, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([2, 1, 67108864, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([2, 1, 8, 268435456],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 32],"float16"), mask=Tensor([2, 8388608, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 33554432],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 33554432],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8, 33554432],"float16"), mask=Tensor([2, 1, 8, 33554432],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8388608, 32],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8, 8388608, 32],"float16"), mask=Tensor([2, 1, 8388608, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8388608, 8, 32],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8388608, 8, 32],"float16"), mask=Tensor([2, 8388608, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2097152, 8, 8, 32],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2097152, 8, 8, 32],"float16"), mask=Tensor([2097152, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2097152, 8, 8, 32],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2796203, 3, 16, 32],"float16"), mask=Tensor([2796203, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2796203, 3, 16, 32],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 2796203, 8, 32],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 2796203, 8, 32],"float16"), mask=Tensor([6, 2796203, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 2796203, 32],"float16"), mask=Tensor([6, 1, 2796203, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 2796203, 32],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 11184811],"float16"), mask=Tensor([6, 1, 8, 11184811],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 11184811],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([16777216, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([6, 1, 22369622, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([6, 1, 8, 89478486],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 8, 8, 32],"float16"), mask=Tensor([6, 2796203, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([65794, 8, 8, 1020],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([65794, 8, 8, 1020],"float16"), mask=Tensor([65794, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 1198373, 16, 32],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 1198373, 16, 32],"float16"), mask=Tensor([7, 1198373, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 12782641],"float16"), mask=Tensor([7, 1, 16, 12782641],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 12782641],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([7, 1, 16, 38347923],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([7, 1, 19173962, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([7, 1198373, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 16, 32],"float16"), mask=Tensor([8388608, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 6391321, 32],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 3, 6391321, 32],"float16"), mask=Tensor([7, 1, 6391321, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 1024, 262144],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 262144, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 33554432],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 33554432],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 33554432, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 33554432, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4096, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4194304, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4194304, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1048576, 4, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1048576, 4, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 1024, 131072],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 131072, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 256, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 1024, 2097152],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 2097152, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 2048, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2048, 2, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([256, 16, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([4096, 1, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 134217728, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 134217728, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 134217728],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 134217728],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 4194304, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 4194304, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([12229, 7, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 224, 6391321],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 6391321, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 28533, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([4194304, 1, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([4194304, 1, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 17120, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 224, 547828],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 547828, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([85599, 1, 224, 224],"float32"), )
paddle.index_fill(Tensor([107374183, 40],"float32"), Tensor([2],"int64"), 1, -1, )
paddle.index_fill(Tensor([128],"int64"), Tensor([2147483649],"int64"), 0, 5, )
paddle.index_fill(Tensor([128],"int64"), Tensor([2147483649],"int64"), 0, 6, )
paddle.index_fill(Tensor([128],"int64"), Tensor([2147483649],"int64"), 0, 7, )
paddle.index_fill(Tensor([20, 214748365],"float32"), Tensor([2],"int64"), 1, -1, )
paddle.index_fill(Tensor([20, 40],"float32"), Tensor([2147483649],"int64"), 1, -1, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), 0, 2, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), 0, 5, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), 0, 6, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), 0, 7, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([28],"int64"), 0, 5, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([30],"int64"), 0, 7, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([38],"int64"), 0, 6, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([4],"int64"), 0, 2, )
paddle.index_fill(Tensor([2147483649],"int64"), Tensor([5],"int64"), 0, 2, )
paddle.index_fill(Tensor([4],"int64"), Tensor([2147483649],"int64"), 0, 2, )
paddle.index_fill(Tensor([8],"int64"), Tensor([2147483649],"int64"), 0, 2, )
paddle.is_empty(Tensor([1431655765, 3],"float32"), )
paddle.is_empty(Tensor([2, 2147483648],"float32"), )
paddle.is_empty(Tensor([2147483649],"int64"), )
paddle.is_empty(Tensor([3, 1431655765],"float32"), )
paddle.is_empty(Tensor([4294967295],"float32"), )
paddle.is_empty(Tensor([858993459, 5],"float32"), )
paddle.is_empty(x=Tensor([4, 32, 33554432],"float32"), )
paddle.is_empty(x=Tensor([4, 33554432, 32],"float32"), )
paddle.is_empty(x=Tensor([4194304, 32, 32],"float32"), )
paddle.isin(Tensor([2, 214748365, 10],"bfloat16"), Tensor([100],"bfloat16"), True, False, )
paddle.isin(Tensor([2, 214748365, 10],"bfloat16"), Tensor([100],"bfloat16"), True, True, )
paddle.isin(Tensor([2, 5, 10],"bfloat16"), Tensor([4294967295],"bfloat16"), True, False, )
paddle.isin(Tensor([2, 5, 10],"bfloat16"), Tensor([4294967295],"bfloat16"), True, True, )
paddle.isin(Tensor([2, 5, 429496730],"bfloat16"), Tensor([100],"bfloat16"), True, False, )
paddle.isin(Tensor([2, 5, 429496730],"bfloat16"), Tensor([100],"bfloat16"), True, True, )
paddle.isin(Tensor([4, 1073741824],"bfloat16"), Tensor([2, 1073741824],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 1073741824],"bfloat16"), Tensor([2, 1073741824],"bfloat16"), False, True, )
paddle.isin(Tensor([4, 1073741824],"bfloat16"), Tensor([2, 3],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 1073741824],"bfloat16"), Tensor([2, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([1431655765, 3],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([1431655765, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 2147483648],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 2147483648],"bfloat16"), False, True, )
paddle.isin(Tensor([536870912, 8],"bfloat16"), Tensor([2, 3],"bfloat16"), False, False, )
paddle.isin(Tensor([536870912, 8],"bfloat16"), Tensor([2, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([536870912, 8],"bfloat16"), Tensor([536870912, 3],"bfloat16"), False, False, )
paddle.isin(Tensor([536870912, 8],"bfloat16"), Tensor([536870912, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, True, )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([67108864, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([67108864, 64],"bfloat16"), Tensor([67108864, 256],"bfloat16"), False, True, )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 256],"bfloat16"), False, True, )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 536870912],"bfloat16"), False, False, )
paddle.isin(Tensor([8, 536870912],"bfloat16"), Tensor([4, 536870912],"bfloat16"), False, True, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([16777216, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([16777216, 256],"bfloat16"), False, True, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 1073741824],"bfloat16"), False, False, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 1073741824],"bfloat16"), False, True, )
paddle.isin(Tensor([85899346, 5, 10],"bfloat16"), Tensor([100],"bfloat16"), True, False, )
paddle.isin(Tensor([85899346, 5, 10],"bfloat16"), Tensor([100],"bfloat16"), True, True, )
paddle.kthvalue(Tensor([1677722, 128, 10],"float64"), 2, -1, )
paddle.kthvalue(Tensor([1677722, 128, 10],"float64"), 2, 2, )
paddle.kthvalue(Tensor([2, 107374183, 10],"float64"), 2, -1, )
paddle.kthvalue(Tensor([2, 107374183, 10],"float64"), 2, 2, )
paddle.kthvalue(Tensor([2, 128, 8388609],"float64"), 2, -1, )
paddle.kthvalue(Tensor([2, 128, 8388609],"float64"), 2, 2, )
paddle.kthvalue(Tensor([2, 30, 35791395],"float64"), 244, -1, )
paddle.kthvalue(Tensor([2, 30, 35791395],"float64"), 244, 2, )
paddle.kthvalue(Tensor([2, 4294968, 250],"float64"), 244, -1, )
paddle.kthvalue(Tensor([2, 4294968, 250],"float64"), 244, 2, )
paddle.kthvalue(Tensor([286332, 30, 250],"float64"), 244, -1, )
paddle.kthvalue(Tensor([286332, 30, 250],"float64"), 244, 2, )
paddle.kthvalue(Tensor([30, 200, 715828],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([30, 200, 715828],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([30, 200, 715828],"float32"), k=2, )
paddle.kthvalue(Tensor([30, 3579140, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([30, 3579140, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([30, 3579140, 40],"float32"), k=2, )
paddle.kthvalue(Tensor([4294967295],"float32"), 1, )
paddle.kthvalue(Tensor([4294967295],"float32"), k=2, )
paddle.kthvalue(Tensor([536871, 200, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([536871, 200, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([536871, 200, 40],"float32"), k=2, )
paddle.kthvalue(x=Tensor([268435457, 2, 4],"float64"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([268435457, 2, 4],"float64"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([268435457, 2, 4],"float64"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(x=Tensor([3, 178956971, 4],"float64"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 178956971, 4],"float64"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([3, 178956971, 4],"float64"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(x=Tensor([3, 2, 357913942],"float64"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 2, 357913942],"float64"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([3, 2, 357913942],"float64"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float32"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float32"), k=3, axis=0, )
paddle.kthvalue(x=Tensor([536870912, 2, 4],"float32"), k=3, axis=0, )
paddle.ldexp(Tensor([10, 20, 1],"float32"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([10, 20, 21474837],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([10, 429496730, 1],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([207],"float32"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([209],"int64"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([210],"int32"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([2147483649],"float64"), Tensor([247],"int32"), )
paddle.ldexp(Tensor([2147483649],"float64"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([2147483649],"int64"), Tensor([209],"int32"), )
paddle.ldexp(Tensor([2147483649],"int64"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([214748365, 20, 1],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([247],"float64"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([4294967295],"float32"), Tensor([207],"int32"), )
paddle.ldexp(Tensor([4294967295],"float32"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([4294967295],"int32"), Tensor([210],"int32"), )
paddle.ldexp(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([5, 6, 6],"float64"), Tensor([4294967295],"int32"), )
paddle.ldexp(Tensor([5, 6, 71582789],"float64"), Tensor([6],"int32"), )
paddle.ldexp(Tensor([5, 71582789, 6],"float64"), Tensor([6],"int32"), )
paddle.ldexp(Tensor([59652324, 6, 6],"float64"), Tensor([6],"int32"), )
paddle.less(Tensor([10, 1024],"float32"), Tensor([10, 429496730],"float32"), )
paddle.less(Tensor([10, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.less(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less(Tensor([10, 429496730],"float32"), Tensor([10, 1024],"float32"), )
paddle.less(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.less(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less(Tensor([4194304, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.less(Tensor([4194304, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.less(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.less(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.less(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.less(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.less(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less_equal(Tensor([1],"int32"), Tensor([4294967295],"int32"), )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less_equal(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_equal(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.less_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less_equal(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.less_equal(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.less_equal(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_equal(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.less_equal(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.less_equal(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.less_equal(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.less_equal(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.less_equal(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.less_equal(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.less_equal(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.less_equal(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.less_equal(Tensor([4294967295],"int32"), Tensor([1],"int32"), )
paddle.less_equal(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), )
paddle.less_equal(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 715827883, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.less_equal(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.less_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.less_equal(x=Tensor([1, 715827883, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.less_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.less_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.less_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.less_equal(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.less_equal(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.less_equal(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less_equal(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.less_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.less_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.less_equal(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.less_equal(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.less_equal(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.less_equal(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.less_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.less_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.less_equal(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less_equal(x=Tensor([357913942, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.less_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([1, 128, 33554432],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([1, 33554432, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([262144, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([1, 128, 16777217],"int64"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([1, 16777217, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([131073, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 16777217],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 16777217],"int64"), Tensor([1, 128, 16777217],"int64"), )
paddle.less_than(Tensor([1, 128, 16777217],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([1, 128, 33554432],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([1, 16777216, 256],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([131072, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([1, 128, 16777217],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([1, 8388609, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([65537, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 33554432],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 33554432],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 128, 33554432],"float32"), Tensor([1, 128, 33554432],"float32"), )
paddle.less_than(Tensor([1, 16777216, 256],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 16777216, 256],"float32"), Tensor([1, 16777216, 256],"float32"), )
paddle.less_than(Tensor([1, 16777217, 128],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 16777217, 128],"int64"), Tensor([1, 16777217, 128],"int64"), )
paddle.less_than(Tensor([1, 33554432, 128],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 33554432, 128],"float32"), Tensor([1, 33554432, 128],"float32"), )
paddle.less_than(Tensor([1, 8388609, 256],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 8388609, 256],"int64"), Tensor([1, 8388609, 256],"int64"), )
paddle.less_than(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.less_than(Tensor([1],"int64"), Tensor([2147483649],"int64"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less_than(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_than(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.less_than(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_than(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.less_than(Tensor([131072, 128, 256],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([131072, 128, 256],"float32"), Tensor([131072, 128, 256],"float32"), )
paddle.less_than(Tensor([131073, 128, 128],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([131073, 128, 128],"int64"), Tensor([131073, 128, 128],"int64"), )
paddle.less_than(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.less_than(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.less_than(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.less_than(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_than(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.less_than(Tensor([262144, 1, 128, 128],"float32"), Tensor([262144, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([262144, 1, 128, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([262144, 128, 128],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([262144, 128, 128],"float32"), Tensor([262144, 128, 128],"float32"), )
paddle.less_than(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.less_than(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.less_than(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.less_than(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.less_than(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.less_than(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.less_than(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.less_than(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.less_than(Tensor([65537, 128, 256],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([65537, 128, 256],"int64"), Tensor([65537, 128, 256],"int64"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([262144, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 1, 128, 4194304],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 1, 4194304, 128],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 32768, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 4194304],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 4194304],"float32"), Tensor([8, 1, 128, 4194304],"float32"), )
paddle.less_than(Tensor([8, 1, 4194304, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 1, 4194304, 128],"float32"), Tensor([8, 1, 4194304, 128],"float32"), )
paddle.less_than(Tensor([8, 32768, 128, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([8, 32768, 128, 128],"float32"), Tensor([8, 32768, 128, 128],"float32"), )
paddle.less_than(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 715827883, 3],"float64"), )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.less_than(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_than(x=Tensor([1, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.less_than(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.less_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.less_than(x=Tensor([1, 715827883, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_than(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.less_than(x=Tensor([1073741825, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.less_than(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.less_than(x=Tensor([1431655765, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.less_than(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.less_than(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.less_than(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.less_than(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less_than(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.less_than(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.less_than(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.less_than(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.less_than(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.less_than(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.less_than(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.less_than(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.less_than(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.less_than(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.less_than(x=Tensor([357913942, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.less_than(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.less_than(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.linalg.corrcoef(Tensor([2147483649],"float64"), )
paddle.linalg.corrcoef(Tensor([2147483649],"float64"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([4, 1073741824],"float32"), )
paddle.linalg.corrcoef(Tensor([4, 1073741824],"float32"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([4, 536870913],"float64"), )
paddle.linalg.corrcoef(Tensor([4, 536870913],"float64"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([4294967295],"float32"), )
paddle.linalg.corrcoef(Tensor([4294967295],"float32"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([429496730, 5],"float64"), )
paddle.linalg.corrcoef(Tensor([429496730, 5],"float64"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([858993459, 5],"float32"), )
paddle.linalg.corrcoef(Tensor([858993459, 5],"float32"), rowvar=False, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(x=Tensor([178956971, 12],"float64"), rowvar=True, )
paddle.linalg.cov(x=Tensor([178956971, 12],"float64"), rowvar=True, ddof=True, )
paddle.linalg.cov(x=Tensor([4, 536870913],"float64"), rowvar=True, )
paddle.linalg.cov(x=Tensor([4, 536870913],"float64"), rowvar=True, ddof=True, )
paddle.linalg.eig(Tensor([1073741825, 2],"float64"), )
paddle.linalg.eig(Tensor([2, 1073741825],"float64"), )
paddle.linalg.eig(Tensor([3, 715827883],"float64"), )
paddle.linalg.eig(Tensor([715827883, 3],"float64"), )
paddle.linalg.eigh(Tensor([1073741824, 4],"float32"), "U", )
paddle.linalg.eigh(Tensor([134217728, 32],"float32"), "L", )
paddle.linalg.eigh(Tensor([134217729, 4, 4],"float64"), "L", )
paddle.linalg.eigh(Tensor([171798692, 5, 5],"float32"), )
paddle.linalg.eigh(Tensor([2, 429496730, 5],"float32"), )
paddle.linalg.eigh(Tensor([2, 5, 429496730],"float32"), )
paddle.linalg.eigh(Tensor([268435456, 4, 4],"float32"), "L", )
paddle.linalg.eigh(Tensor([32, 134217728],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 1073741824],"float32"), "U", )
paddle.linalg.eigh(Tensor([4, 134217729, 4],"float64"), "L", )
paddle.linalg.eigh(Tensor([4, 268435456, 4],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 4, 134217729],"float64"), "L", )
paddle.linalg.eigh(Tensor([4, 4, 268435456],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 536870913],"float64"), "U", )
paddle.linalg.eigh(Tensor([5, 858993459],"float32"), )
paddle.linalg.eigh(Tensor([536870913, 4],"float64"), "U", )
paddle.linalg.eigh(Tensor([858993459, 5],"float32"), )
paddle.linalg.lu(Tensor([1431655765, 3],"float32"), )
paddle.linalg.lu(Tensor([1431655765, 3],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([1431655765, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([143165577, 3, 5],"float64"), )
paddle.linalg.lu(Tensor([143165577, 3, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([171798692, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([171798692, 5, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([17179870, 5, 5, 5],"float64"), )
paddle.linalg.lu(Tensor([17179870, 5, 5, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([178956971, 3, 2, 2],"float64"), )
paddle.linalg.lu(Tensor([2, 143165577, 3, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 143165577, 3, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 214748365, 5],"float64"), )
paddle.linalg.lu(Tensor([2, 214748365, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 3, 357913942],"float64"), )
paddle.linalg.lu(Tensor([2, 3, 357913942],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 3, 715827883],"float32"), )
paddle.linalg.lu(Tensor([2, 3, 715827883],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 429496730, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 429496730, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 3, 143165577],"float32"), )
paddle.linalg.lu(Tensor([2, 5, 3, 143165577],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 3, 71582789],"float64"), )
paddle.linalg.lu(Tensor([2, 5, 3, 71582789],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 42949673, 5],"float64"), )
paddle.linalg.lu(Tensor([2, 5, 42949673, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 85899346, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 5, 85899346, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 71582789, 3, 5],"float64"), )
paddle.linalg.lu(Tensor([2, 71582789, 3, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([238609295, 3, 3],"float64"), )
paddle.linalg.lu(Tensor([238609295, 3, 3],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([286331153, 3, 5],"float32"), )
paddle.linalg.lu(Tensor([286331153, 3, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([286331153, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([28633116, 5, 3, 5],"float64"), )
paddle.linalg.lu(Tensor([28633116, 5, 3, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 1431655765],"float32"), )
paddle.linalg.lu(Tensor([3, 1431655765],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([3, 1431655765],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 143165577, 5],"float64"), )
paddle.linalg.lu(Tensor([3, 143165577, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 238609295, 3],"float64"), )
paddle.linalg.lu(Tensor([3, 238609295, 3],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([3, 286331153, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 286331153, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 28633116, 5, 5],"float64"), )
paddle.linalg.lu(Tensor([3, 28633116, 5, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 3, 238609295],"float64"), )
paddle.linalg.lu(Tensor([3, 3, 238609295],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([3, 5, 143165577],"float64"), )
paddle.linalg.lu(Tensor([3, 5, 143165577],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 286331153],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 286331153],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 28633116, 5],"float64"), )
paddle.linalg.lu(Tensor([3, 5, 28633116, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 5, 28633116],"float64"), )
paddle.linalg.lu(Tensor([3, 5, 5, 28633116],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 5, 57266231],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 5, 57266231],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 57266231, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 57266231, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 57266231, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 57266231, 5, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 715827883],"float64"), )
paddle.linalg.lu(Tensor([3, 715827883],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([3, 715827883],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([34359739, 5, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([34359739, 5, 5, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 134217729, 2, 2],"float64"), )
paddle.linalg.lu(Tensor([4, 3, 2, 89478486],"float64"), )
paddle.linalg.lu(Tensor([4, 3, 89478486, 2],"float64"), )
paddle.linalg.lu(Tensor([4, 357913942, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 214748365],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 5, 42949673],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 71582789, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 71582789, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([429496730, 5],"float64"), )
paddle.linalg.lu(Tensor([429496730, 5],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([5, 3, 3, 47721859],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([5, 3, 47721859, 3],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([5, 429496730],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([5, 47721859, 3, 3],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([5, 858993459],"float32"), )
paddle.linalg.lu(Tensor([5, 858993459],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([57266231, 5, 3, 5],"float32"), )
paddle.linalg.lu(Tensor([57266231, 5, 3, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([57266231, 5, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([715827883, 3],"float64"), )
paddle.linalg.lu(Tensor([715827883, 3],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([715827883, 3],"float64"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([79536432, 3, 3, 3],"float64"), get_infos=False, )
paddle.linalg.lu(Tensor([858993459, 5],"float32"), )
paddle.linalg.lu(Tensor([858993459, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([85899346, 5, 5],"float64"), )
paddle.linalg.lu(Tensor([85899346, 5, 5],"float64"), pivot=True, get_infos=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 1478984, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 149131, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 1789570, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 1193047, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 1789570],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 119305],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 119305],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 4294967295],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([2147483648, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 60],"float32"), Tensor([29827, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 40, 7158279],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 1623193, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 1136235, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 1704353],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 108213],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 108213],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 4294967295],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([2147483648, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float32"), Tensor([27054, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 1597831, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 1118482, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 1704353],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 106523],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 106523],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 4294967295],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([2147483648, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float32"), Tensor([26631, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 6817409],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 6817409],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 4338351, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 1654456, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 1213268, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 1626882],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 110298],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 110298],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 4294967295],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([2147483648, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float32"), Tensor([27575, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 6507527],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 6507527],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 1478984, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 1084588, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 1626882],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 98599],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 98599],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 4294967295],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([2147483648, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float32"), Tensor([24650, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 4473925, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 4544939, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 4772186, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 4853071, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 155345, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 1597831, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 1623193, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 1654456, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 16777216, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 1789570, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 26843546, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 28633116, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 10226113],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 10226113],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 4294967295],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([2147483648, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 10, 35791395],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 12, 25565282, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([1, 30678338, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 14],"float32"), Tensor([2556529, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 143165577],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 143165577],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 143165577],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 9544372],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 9544372],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 4294967295],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([2147483648, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 10, 35791395],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 12, 23860930, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([1, 28633116, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 15],"float32"), Tensor([2386093, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 8947849],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 8947849],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 4294967295],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([2147483648, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 10, 35791395],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 12, 22369622, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([1, 26843546, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 10, 16],"float32"), Tensor([2236963, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 119305],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 119305],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 4294967295],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([2147483648, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 100, 3579140],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 12, 2982617, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([1, 357914, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float32"), Tensor([29827, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 115457],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 115457],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 4294967295],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([2147483648, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 100, 3579140],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 12, 2886403, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([1, 346369, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float32"), Tensor([28865, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 14316558],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 14316558],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 102261127, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11545612, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11930465, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 89478486, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 95443718, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 30678338, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 346369, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 357914, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 39768216, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4194304],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4194304, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16777216, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16777216, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4194304],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4194304, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16777216, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16777216, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 4294967295],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([2147483648, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16777216],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16, 16777216, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1, 16777216, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 16],"float32"), Tensor([1048576, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 16, 67108864],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 4, 67108864, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 53687092, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 47721859],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 11930465],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 5965233],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 5965233],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 4294967295],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([2147483648, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 36, 14913081, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1, 53687092, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 10, 8],"float32"), Tensor([1491309, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 39768216],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4418691],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4418691],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 4294967295],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([2147483648, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9942054],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 36, 13256072, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1, 39768216, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 12, 9],"float32"), Tensor([1104673, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 149131, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 16571],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 16571],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 4294967295],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([2147483648, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 144, 828505],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([1, 36, 596524, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 200],"float32"), Tensor([4143, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 144, 3314018],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 1060486],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 1060486],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 4294967295],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([2147483648, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 18, 6628036],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 36, 4772186, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([1, 9544372, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 25],"float32"), Tensor([265122, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 18, 26512144],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 19088744, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 155345, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 17261],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([1073741824, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 17261],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 4294967295],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([2147483648, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 192, 621379],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([1, 36, 828505, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 144],"float32"), Tensor([4316, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 192, 2485514],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 2386093, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 3314018, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 53024288, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9, 59652324, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 9544372, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([10226113, 3, 10, 14],"float32"), Tensor([1, 12, 10, 14],"float32"), Tensor([1, 2],"float32"), Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1060486, 9, 18, 25],"float32"), Tensor([1, 36, 18, 25],"float32"), Tensor([1, 2],"float32"), Tensor([4050, 4],"float32"), Tensor([4050, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([106523, 15, 42, 64],"float32"), Tensor([1, 60, 42, 64],"float32"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([108213, 15, 42, 63],"float32"), Tensor([1, 60, 42, 63],"float32"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([110298, 15, 44, 59],"float32"), Tensor([1, 60, 44, 59],"float32"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([115457, 3, 100, 124],"float32"), Tensor([1, 12, 100, 124],"float32"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([119305, 15, 40, 60],"float32"), Tensor([1, 60, 40, 60],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([119305, 3, 100, 120],"float32"), Tensor([1, 12, 100, 120],"float32"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([16571, 9, 144, 200],"float32"), Tensor([1, 36, 144, 200],"float32"), Tensor([1, 2],"float32"), Tensor([259200, 4],"float32"), Tensor([259200, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([17261, 9, 192, 144],"float32"), Tensor([1, 36, 192, 144],"float32"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 134217728, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 178956971],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([1431655765, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 2147483648],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 89478486],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 67108864, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 89478486, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([89478486, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 89478486],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 67108864, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 89478486, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([89478486, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 4, 44739243],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 12, 44739243, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([2, 134217728, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([2, 3, 4, 4],"float32"), Tensor([22369622, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([4194304, 4, 16, 16],"float32"), Tensor([1, 16, 16, 16],"float32"), Tensor([1, 2],"float32"), Tensor([16, 16, 4, 4],"float32"), Tensor([16, 16, 4, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=5000, nms_thresh=0.7, min_size=3.0, eta=1.0, pixel_offset=True, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([4418691, 9, 12, 9],"float32"), Tensor([1, 36, 12, 9],"float32"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([5965233, 9, 10, 8],"float32"), Tensor([1, 36, 10, 8],"float32"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=4000, post_nms_top_n=4000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([89478486, 3, 4, 4],"float32"), Tensor([2, 12, 4, 4],"float32"), Tensor([2, 3],"float32"), Tensor([4, 4, 3, 4],"float32"), Tensor([4, 4, 3, 4],"float32"), pre_nms_top_n=10, post_nms_top_n=5, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([8947849, 3, 10, 16],"float32"), Tensor([1, 12, 10, 16],"float32"), Tensor([1, 2],"float32"), Tensor([480, 4],"float32"), Tensor([480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([9544372, 3, 10, 15],"float32"), Tensor([1, 12, 10, 15],"float32"), Tensor([1, 2],"float32"), Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([98599, 15, 44, 66],"float32"), Tensor([1, 60, 44, 66],"float32"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
