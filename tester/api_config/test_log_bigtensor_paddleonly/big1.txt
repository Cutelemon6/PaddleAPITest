paddle.add(Tensor([1, 1, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.add(Tensor([1, 1, 4294967295],"float16"), Tensor([192],"float16"), )
paddle.add(Tensor([1, 1024, 32768, 128],"float32"), Tensor([1, 1024, 32768, 128],"float32"), None, )
paddle.add(Tensor([1, 1024, 32768, 128],"float32"), Tensor([1, 1024, 64, 128],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 64],"float32"), Tensor([1, 1024, 62, 67651],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 64],"float32"), Tensor([1, 1024, 65536, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 64],"float32"), Tensor([1, 1082402, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 64],"float32"), Tensor([1058, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 67651],"float32"), Tensor([1, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 62, 67651],"float32"), Tensor([1, 1024, 62, 67651],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 128],"float32"), Tensor([1, 1024, 32768, 128],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 128],"float32"), Tensor([1, 1024, 64, 65536],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 128],"float32"), Tensor([1, 524288, 64, 128],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 128],"float32"), Tensor([512, 1024, 64, 128],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float16"), Tensor([1, 1024, 64, 65536],"float16"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float16"), Tensor([1, 1024, 65536, 64],"float16"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float16"), Tensor([1, 1048576, 64, 64],"float16"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float16"), Tensor([1024, 1024, 64, 64],"float16"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float32"), Tensor([1, 1024, 64, 65536],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float32"), Tensor([1, 1024, 65536, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float32"), Tensor([1, 1048576, 64, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 64],"float32"), Tensor([1024, 1024, 64, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 65536],"float16"), Tensor([1, 1024, 64, 64],"float16"), None, )
paddle.add(Tensor([1, 1024, 64, 65536],"float16"), Tensor([1, 1024, 64, 65536],"float16"), None, )
paddle.add(Tensor([1, 1024, 64, 65536],"float32"), Tensor([1, 1024, 64, 128],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 65536],"float32"), Tensor([1, 1024, 64, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 64, 65536],"float32"), Tensor([1, 1024, 64, 65536],"float32"), None, )
paddle.add(Tensor([1, 1024, 65536, 64],"float16"), Tensor([1, 1024, 64, 64],"float16"), None, )
paddle.add(Tensor([1, 1024, 65536, 64],"float16"), Tensor([1, 1024, 65536, 64],"float16"), None, )
paddle.add(Tensor([1, 1024, 65536, 64],"float32"), Tensor([1, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 65536, 64],"float32"), Tensor([1, 1024, 64, 64],"float32"), None, )
paddle.add(Tensor([1, 1024, 65536, 64],"float32"), Tensor([1, 1024, 65536, 64],"float32"), None, )
paddle.add(Tensor([1, 1048576, 64, 64],"float16"), Tensor([1, 1024, 64, 64],"float16"), None, )
paddle.add(Tensor([1, 1048576, 64, 64],"float16"), Tensor([1, 1048576, 64, 64],"float16"), None, )
paddle.add(Tensor([1, 1048576, 64, 64],"float32"), Tensor([1, 1024, 64, 64],"float32"), None, )
paddle.add(Tensor([1, 1048576, 64, 64],"float32"), Tensor([1, 1048576, 64, 64],"float32"), None, )
paddle.add(Tensor([1, 1073741824, 4],"float32"), Tensor([8, 4],"float32"), )
paddle.add(Tensor([1, 1082402, 62, 64],"float32"), Tensor([1, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 1082402, 62, 64],"float32"), Tensor([1, 1082402, 62, 64],"float32"), None, )
paddle.add(Tensor([1, 112, 32, 1198373],"float32"), Tensor([1, 112, 32, 1198373],"float32"), )
paddle.add(Tensor([1, 112, 32, 1198373],"float32"), Tensor([1, 112, 32, 64],"float32"), )
paddle.add(Tensor([1, 112, 32, 64],"float32"), Tensor([1, 112, 32, 1198373],"float32"), )
paddle.add(Tensor([1, 112, 32, 64],"float32"), Tensor([1, 112, 599187, 64],"float32"), )
paddle.add(Tensor([1, 112, 32, 64],"float32"), Tensor([1, 2097152, 32, 64],"float32"), )
paddle.add(Tensor([1, 112, 32, 64],"float32"), Tensor([18725, 112, 32, 64],"float32"), )
paddle.add(Tensor([1, 112, 599187, 64],"float32"), Tensor([1, 112, 32, 64],"float32"), )
paddle.add(Tensor([1, 112, 599187, 64],"float32"), Tensor([1, 112, 599187, 64],"float32"), )
paddle.add(Tensor([1, 128, 107547, 312],"float32"), Tensor([1, 128, 107547, 312],"float32"), )
paddle.add(Tensor([1, 128, 107547, 312],"float32"), Tensor([1, 128, 200, 312],"float32"), )
paddle.add(Tensor([1, 128, 110377, 304],"float32"), Tensor([1, 128, 110377, 304],"float32"), )
paddle.add(Tensor([1, 128, 110377, 304],"float32"), Tensor([1, 128, 200, 304],"float32"), )
paddle.add(Tensor([1, 128, 123362, 272],"float32"), Tensor([1, 128, 123362, 272],"float32"), )
paddle.add(Tensor([1, 128, 123362, 272],"float32"), Tensor([1, 128, 200, 272],"float32"), )
paddle.add(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 128, 128, 262144],"float32"), None, )
paddle.add(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 128, 262144, 128],"float32"), None, )
paddle.add(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 262144, 128, 128],"float32"), None, )
paddle.add(Tensor([1, 128, 128, 128],"float32"), Tensor([2048, 128, 128, 128],"float32"), None, )
paddle.add(Tensor([1, 128, 128, 262144],"float32"), Tensor([1, 128, 128, 128],"float32"), None, )
paddle.add(Tensor([1, 128, 128, 262144],"float32"), Tensor([1, 128, 128, 262144],"float32"), None, )
paddle.add(Tensor([1, 128, 167773, 200],"float32"), Tensor([1, 128, 167773, 200],"float32"), )
paddle.add(Tensor([1, 128, 167773, 200],"float32"), Tensor([1, 128, 304, 200],"float32"), )
paddle.add(Tensor([1, 128, 200, 167773],"float32"), Tensor([1, 128, 200, 167773],"float32"), )
paddle.add(Tensor([1, 128, 200, 167773],"float32"), Tensor([1, 128, 200, 272],"float32"), )
paddle.add(Tensor([1, 128, 200, 167773],"float32"), Tensor([1, 128, 200, 304],"float32"), )
paddle.add(Tensor([1, 128, 200, 167773],"float32"), Tensor([1, 128, 200, 312],"float32"), )
paddle.add(Tensor([1, 128, 200, 272],"float32"), Tensor([1, 128, 123362, 272],"float32"), )
paddle.add(Tensor([1, 128, 200, 272],"float32"), Tensor([1, 128, 200, 167773],"float32"), )
paddle.add(Tensor([1, 128, 200, 272],"float32"), Tensor([1, 78952, 200, 272],"float32"), )
paddle.add(Tensor([1, 128, 200, 272],"float32"), Tensor([617, 128, 200, 272],"float32"), )
paddle.add(Tensor([1, 128, 200, 304],"float32"), Tensor([1, 128, 110377, 304],"float32"), )
paddle.add(Tensor([1, 128, 200, 304],"float32"), Tensor([1, 128, 200, 167773],"float32"), )
paddle.add(Tensor([1, 128, 200, 304],"float32"), Tensor([1, 70641, 200, 304],"float32"), )
paddle.add(Tensor([1, 128, 200, 304],"float32"), Tensor([552, 128, 200, 304],"float32"), )
paddle.add(Tensor([1, 128, 200, 312],"float32"), Tensor([1, 128, 107547, 312],"float32"), )
paddle.add(Tensor([1, 128, 200, 312],"float32"), Tensor([1, 128, 200, 167773],"float32"), )
paddle.add(Tensor([1, 128, 200, 312],"float32"), Tensor([1, 68830, 200, 312],"float32"), )
paddle.add(Tensor([1, 128, 200, 312],"float32"), Tensor([538, 128, 200, 312],"float32"), )
paddle.add(Tensor([1, 128, 262144, 128],"float32"), Tensor([1, 128, 128, 128],"float32"), None, )
paddle.add(Tensor([1, 128, 262144, 128],"float32"), Tensor([1, 128, 262144, 128],"float32"), None, )
paddle.add(Tensor([1, 128, 304, 110377],"float32"), Tensor([1, 128, 304, 110377],"float32"), )
paddle.add(Tensor([1, 128, 304, 110377],"float32"), Tensor([1, 128, 304, 200],"float32"), )
paddle.add(Tensor([1, 128, 304, 200],"float32"), Tensor([1, 128, 167773, 200],"float32"), )
paddle.add(Tensor([1, 128, 304, 200],"float32"), Tensor([1, 128, 304, 110377],"float32"), )
paddle.add(Tensor([1, 128, 304, 200],"float32"), Tensor([1, 70641, 304, 200],"float32"), )
paddle.add(Tensor([1, 128, 304, 200],"float32"), Tensor([552, 128, 304, 200],"float32"), )
paddle.add(Tensor([1, 2097152, 32, 64],"float32"), Tensor([1, 112, 32, 64],"float32"), )
paddle.add(Tensor([1, 2097152, 32, 64],"float32"), Tensor([1, 2097152, 32, 64],"float32"), )
paddle.add(Tensor([1, 2147483649],"int64"), Tensor([3, 2147483649],"int64"), )
paddle.add(Tensor([1, 2147483649],"int64"), Tensor([3, 3],"int64"), )
paddle.add(Tensor([1, 22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.add(Tensor([1, 262144, 128, 128],"float32"), Tensor([1, 128, 128, 128],"float32"), None, )
paddle.add(Tensor([1, 262144, 128, 128],"float32"), Tensor([1, 262144, 128, 128],"float32"), None, )
paddle.add(Tensor([1, 3],"int64"), Tensor([3, 715827883],"int64"), )
paddle.add(Tensor([1, 3],"int64"), Tensor([715827883, 3],"int64"), )
paddle.add(Tensor([1, 524288, 64, 128],"float32"), Tensor([1, 1024, 64, 128],"float32"), None, )
paddle.add(Tensor([1, 524288, 64, 128],"float32"), Tensor([1, 524288, 64, 128],"float32"), None, )
paddle.add(Tensor([1, 68830, 200, 312],"float32"), Tensor([1, 128, 200, 312],"float32"), )
paddle.add(Tensor([1, 68830, 200, 312],"float32"), Tensor([1, 68830, 200, 312],"float32"), )
paddle.add(Tensor([1, 70641, 200, 304],"float32"), Tensor([1, 128, 200, 304],"float32"), )
paddle.add(Tensor([1, 70641, 200, 304],"float32"), Tensor([1, 70641, 200, 304],"float32"), )
paddle.add(Tensor([1, 70641, 304, 200],"float32"), Tensor([1, 128, 304, 200],"float32"), )
paddle.add(Tensor([1, 70641, 304, 200],"float32"), Tensor([1, 70641, 304, 200],"float32"), )
paddle.add(Tensor([1, 78952, 200, 272],"float32"), Tensor([1, 128, 200, 272],"float32"), )
paddle.add(Tensor([1, 78952, 200, 272],"float32"), Tensor([1, 78952, 200, 272],"float32"), )
paddle.add(Tensor([1, 8, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.add(Tensor([1, 8, 4],"float32"), Tensor([8, 536870912],"float32"), )
paddle.add(Tensor([1, 8, 536870912],"float32"), Tensor([8, 4],"float32"), )
paddle.add(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([1],"float32"), Tensor([4294967295],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.add(Tensor([1],"int64"), Tensor([2147483649],"int64"), )
paddle.add(Tensor([10, 12],"float32"), Tensor([10, 429496730],"float32"), )
paddle.add(Tensor([10, 12],"float32"), Tensor([357913942, 12],"float32"), )
paddle.add(Tensor([10, 12],"float64"), Tensor([10, 214748365],"float64"), )
paddle.add(Tensor([10, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.add(Tensor([10, 214748365],"float64"), Tensor([10, 12],"float64"), )
paddle.add(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), )
paddle.add(Tensor([10, 429496730],"float32"), Tensor([10, 12],"float32"), )
paddle.add(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 1, 2, 21474837],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 1, 2, 21474837],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 1, 21474837, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 1, 21474837, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 10737419, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([100, 10737419, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 21474837],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 21474837],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2, 21474837],"float32"), Tensor([100, 1, 2, 21474837],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2, 21474837],"float32"), Tensor([100, 1, 2, 21474837],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([100, 1, 42949673],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([100, 1, 42949673],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([100, 21474837, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([100, 21474837, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([2147483648, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 2],"float32"), Tensor([2147483648, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 21474837, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 21474837, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 21474837, 2],"float32"), Tensor([100, 1, 21474837, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 21474837, 2],"float32"), Tensor([100, 1, 21474837, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 42949673],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 42949673],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1, 42949673],"float32"), Tensor([100, 1, 42949673],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1, 42949673],"float32"), Tensor([100, 1, 42949673],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1],"float32"), Tensor([100, 42949673],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1],"float32"), Tensor([100, 42949673],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1],"float32"), Tensor([4294967295, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1],"float32"), Tensor([4294967295, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1],"float64"), Tensor([100, 21474837],"float64"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1],"float64"), Tensor([100, 21474837],"float64"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1],"float64"), Tensor([2147483649, 1],"float64"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 1],"float64"), Tensor([2147483649, 1],"float64"), name="Cauchy_sample", )
paddle.add(Tensor([100, 1024],"float16"), Tensor([4294967295],"float16"), )
paddle.add(Tensor([100, 10737419, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 10737419, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 10737419, 2, 2],"float32"), Tensor([100, 10737419, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 10737419, 2, 2],"float32"), Tensor([100, 10737419, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 14316558, 3, 1],"float32"), Tensor([100, 14316558, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 14316558, 3, 1],"float32"), Tensor([100, 14316558, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 14316558, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 14316558, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 14316558, 3],"float32"), Tensor([100, 14316558, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 14316558, 3],"float32"), Tensor([100, 14316558, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 14316558, 3],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 14316558, 3],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 1],"float32"), Tensor([100, 2, 21474837],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 1],"float32"), Tensor([100, 2, 21474837],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 1],"float32"), Tensor([100, 42949673, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 1],"float32"), Tensor([100, 42949673, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 1],"float32"), Tensor([2147483648, 2, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 1],"float32"), Tensor([2147483648, 2, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 21474837, 1],"float32"), Tensor([100, 2, 21474837, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 21474837, 1],"float32"), Tensor([100, 2, 21474837, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 21474837, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 21474837, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 21474837],"float32"), Tensor([100, 2, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 21474837],"float32"), Tensor([100, 2, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 21474837],"float32"), Tensor([100, 2, 21474837],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 21474837],"float32"), Tensor([100, 2, 21474837],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 21474837],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 21474837],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 14316558, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 14316558, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 21474837, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 21474837, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 3, 7158279],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 3, 7158279],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([715827883, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([715827883, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3, 7158279],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3, 7158279],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3, 7158279],"float32"), Tensor([100, 2, 3, 7158279],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3, 7158279],"float32"), Tensor([100, 2, 3, 7158279],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([100, 14316558, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([100, 14316558, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([100, 2, 21474837],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([100, 2, 21474837],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2],"float32"), Tensor([100, 42949673],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2],"float32"), Tensor([100, 42949673],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 2],"float32"), Tensor([2147483648, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 2],"float32"), Tensor([2147483648, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 21474837, 2],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 21474837, 2],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 21474837, 2],"float32"), Tensor([100, 21474837, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 21474837, 2],"float32"), Tensor([100, 21474837, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 21474837],"float64"), Tensor([100, 1],"float64"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 21474837],"float64"), Tensor([100, 1],"float64"), name="Cauchy_sample", )
paddle.add(Tensor([100, 21474837],"float64"), Tensor([100, 21474837],"float64"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 21474837],"float64"), Tensor([100, 21474837],"float64"), name="Cauchy_sample", )
paddle.add(Tensor([100, 42949673, 1],"float32"), Tensor([100, 2, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 42949673, 1],"float32"), Tensor([100, 2, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 42949673, 1],"float32"), Tensor([100, 42949673, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 42949673, 1],"float32"), Tensor([100, 42949673, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 42949673],"float16"), Tensor([1024],"float16"), )
paddle.add(Tensor([100, 42949673],"float32"), Tensor([100, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 42949673],"float32"), Tensor([100, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 42949673],"float32"), Tensor([100, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 42949673],"float32"), Tensor([100, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 42949673],"float32"), Tensor([100, 42949673],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([100],"float32"), Tensor([4294967295],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100],"float32"), Tensor([4294967295],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([10000, 214749],"float64"), Tensor([4],"float64"), name="Uniform_sample", )
paddle.add(Tensor([10000, 4],"float64"), Tensor([2147483649],"float64"), name="Uniform_sample", )
paddle.add(Tensor([10000, 5, 3],"float64"), Tensor([5, 429496730],"float64"), name="Uniform_sample", )
paddle.add(Tensor([10000, 5, 3],"float64"), Tensor([715827883, 3],"float64"), name="Uniform_sample", )
paddle.add(Tensor([10000, 5, 42950],"float64"), Tensor([5, 3],"float64"), name="Uniform_sample", )
paddle.add(Tensor([10000, 71583, 3],"float64"), Tensor([5, 3],"float64"), name="Uniform_sample", )
paddle.add(Tensor([100000, 21475],"float64"), Tensor([4],"float64"), name="Normal_sample", )
paddle.add(Tensor([100000, 4],"float64"), Tensor([2147483649],"float64"), name="Normal_sample", )
paddle.add(Tensor([1000000, 2148],"float64"), Tensor([4],"float64"), name="Normal_sample", )
paddle.add(Tensor([1000000, 4],"float64"), Tensor([2147483649],"float64"), name="Normal_sample", )
paddle.add(Tensor([101, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.add(Tensor([101, 42524429],"float16"), Tensor([192],"float16"), )
paddle.add(Tensor([1024, 1024, 64, 64],"float16"), Tensor([1, 1024, 64, 64],"float16"), None, )
paddle.add(Tensor([1024, 1024, 64, 64],"float16"), Tensor([1024, 1024, 64, 64],"float16"), None, )
paddle.add(Tensor([1024, 1024, 64, 64],"float32"), Tensor([1, 1024, 64, 64],"float32"), None, )
paddle.add(Tensor([1024, 1024, 64, 64],"float32"), Tensor([1024, 1024, 64, 64],"float32"), None, )
paddle.add(Tensor([104, 1024],"float16"), Tensor([4294967295],"float16"), )
paddle.add(Tensor([104, 41297763],"float16"), Tensor([1024],"float16"), )
paddle.add(Tensor([1058, 1024, 62, 64],"float32"), Tensor([1, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1058, 1024, 62, 64],"float32"), Tensor([1058, 1024, 62, 64],"float32"), None, )
paddle.add(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([100, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([107374183, 40],"bfloat16"), Tensor([107374183, 40],"bfloat16"), name=None, )
paddle.add(Tensor([107374183, 40],"bfloat16"), Tensor([40, 40],"bfloat16"), name=None, )
paddle.add(Tensor([107374183, 40],"float32"), Tensor([107374183, 40],"float32"), name=None, )
paddle.add(Tensor([107374183, 40],"float32"), Tensor([40, 40],"float32"), name=None, )
paddle.add(Tensor([11184811, 16, 24],"float16"), Tensor([11184811, 16, 24],"float16"), )
paddle.add(Tensor([11184811, 16, 24],"float16"), Tensor([12544, 16, 24],"float16"), )
paddle.add(Tensor([11184811, 16, 24],"float32"), Tensor([11184811, 16, 24],"float32"), )
paddle.add(Tensor([11184811, 16, 24],"float32"), Tensor([12544, 16, 24],"float32"), )
paddle.add(Tensor([119304648, 3, 3, 4],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([119304648, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.add(Tensor([12544, 14267, 24],"float16"), Tensor([12544, 14267, 24],"float16"), )
paddle.add(Tensor([12544, 14267, 24],"float16"), Tensor([12544, 16, 24],"float16"), )
paddle.add(Tensor([12544, 14267, 24],"float32"), Tensor([12544, 14267, 24],"float32"), )
paddle.add(Tensor([12544, 14267, 24],"float32"), Tensor([12544, 16, 24],"float32"), )
paddle.add(Tensor([12544, 16, 21400],"float16"), Tensor([12544, 16, 21400],"float16"), )
paddle.add(Tensor([12544, 16, 21400],"float16"), Tensor([12544, 16, 24],"float16"), )
paddle.add(Tensor([12544, 16, 21400],"float32"), Tensor([12544, 16, 21400],"float32"), )
paddle.add(Tensor([12544, 16, 21400],"float32"), Tensor([12544, 16, 24],"float32"), )
paddle.add(Tensor([12544, 16, 24],"float16"), Tensor([11184811, 16, 24],"float16"), )
paddle.add(Tensor([12544, 16, 24],"float16"), Tensor([12544, 14267, 24],"float16"), )
paddle.add(Tensor([12544, 16, 24],"float16"), Tensor([12544, 16, 21400],"float16"), )
paddle.add(Tensor([12544, 16, 24],"float32"), Tensor([11184811, 16, 24],"float32"), )
paddle.add(Tensor([12544, 16, 24],"float32"), Tensor([12544, 14267, 24],"float32"), )
paddle.add(Tensor([12544, 16, 24],"float32"), Tensor([12544, 16, 21400],"float32"), )
paddle.add(Tensor([13, 3337193, 99],"float32"), Tensor([99],"float32"), )
paddle.add(Tensor([13, 7, 47197443],"float32"), Tensor([99],"float32"), )
paddle.add(Tensor([13, 7, 99],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([134217728, 8, 4],"float32"), Tensor([8, 4],"float32"), )
paddle.add(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_entropy", )
paddle.add(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_kl_divergence", )
paddle.add(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), name=None, )
paddle.add(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_entropy", )
paddle.add(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_kl_divergence", )
paddle.add(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name=None, )
paddle.add(Tensor([143165577, 3, 1, 10],"float32"), Tensor([10],"float32"), )
paddle.add(Tensor([143165577, 5, 3],"float64"), Tensor([5, 3],"float64"), name="Uniform_sample", )
paddle.add(Tensor([143165577, 5, 6],"float32"), Tensor([5, 6],"float32"), name="Uniform_sample", )
paddle.add(Tensor([1431656, 10, 15, 20],"float32"), Tensor([1431656, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([1431656, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([1431656, 3, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([16, 1, 128],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([16, 1, 25, 1],"float32"), Tensor([4294967295],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 1, 25, 10737419],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 1, 268435456, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 1, 268435456],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([16, 10737419, 25, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 2, 134217728, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 2, 3, 1],"float32"), Tensor([4294967295],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 2, 3, 44739243],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([16, 2097152, 128],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([16, 89478486, 3, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([168],"int64"), Tensor([2147483649],"int64"), )
paddle.add(Tensor([171798692, 1, 25, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([178956971, 12],"float64"), Tensor([10, 12],"float64"), )
paddle.add(Tensor([178956971, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.add(Tensor([17895698, 120],"int64"), Tensor([120],"int64"), )
paddle.add(Tensor([18725, 112, 32, 64],"float32"), Tensor([1, 112, 32, 64],"float32"), )
paddle.add(Tensor([18725, 112, 32, 64],"float32"), Tensor([18725, 112, 32, 64],"float32"), )
paddle.add(Tensor([2, 1, 1024],"float16"), Tensor([4294967295],"float16"), )
paddle.add(Tensor([2, 1, 128],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([2, 1, 2147483648],"float16"), Tensor([1024],"float16"), )
paddle.add(Tensor([2, 1, 2147483648],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 16777216, 128],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([2, 178956971, 3, 4],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([2, 178956971, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.add(Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 2097152, 1024],"float16"), Tensor([1024],"float16"), )
paddle.add(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_entropy", )
paddle.add(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), name=None, )
paddle.add(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name="Normal_entropy", )
paddle.add(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name=None, )
paddle.add(Tensor([2, 214748365, 1, 10],"float32"), Tensor([10],"float32"), )
paddle.add(Tensor([2, 2147484, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([2, 268435456, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.add(Tensor([2, 268435456, 8],"float32"), Tensor([2, 8, 8],"float32"), )
paddle.add(Tensor([2, 3, 1, 10],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([2, 3, 1, 1000],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([2, 3, 1, 715827883],"float32"), Tensor([10],"float32"), )
paddle.add(Tensor([2, 3, 1, 715827883],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([2, 3, 178956971, 4],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([2, 3, 178956971, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.add(Tensor([2, 3, 3, 238609295],"float32"), Tensor([3, 1, 1],"float32"), )
paddle.add(Tensor([2, 3, 3, 238609295],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.add(Tensor([2, 3, 3, 4],"float32"), Tensor([1073741824, 1, 4],"float32"), )
paddle.add(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.add(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 1431655765, 1],"float32"), )
paddle.add(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 357913942, 4],"float32"), )
paddle.add(Tensor([2, 3, 3, 4],"float32"), Tensor([4294967295, 1, 1],"float32"), )
paddle.add(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.add(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.add(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.add(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.add(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.add(Tensor([2, 3, 71582789, 10],"float32"), Tensor([10],"float32"), )
paddle.add(Tensor([2, 3, 715828, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_entropy", )
paddle.add(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name=None, )
paddle.add(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_entropy", )
paddle.add(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name=None, )
paddle.add(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.add(Tensor([2, 536870912, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.add(Tensor([2, 8, 268435456],"float32"), Tensor([2, 8, 268435456],"float32"), )
paddle.add(Tensor([2, 8, 268435456],"float32"), Tensor([2, 8, 8],"float32"), )
paddle.add(Tensor([2, 8, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.add(Tensor([2, 8, 8],"float32"), Tensor([2, 8, 268435456],"float32"), )
paddle.add(Tensor([2, 8, 8],"float32"), Tensor([67108864, 8, 8],"float32"), )
paddle.add(Tensor([2],"float64"), Tensor([2147483649],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2],"float64"), Tensor([2147483649],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2048, 128, 128, 128],"float32"), Tensor([1, 128, 128, 128],"float32"), None, )
paddle.add(Tensor([2048, 128, 128, 128],"float32"), Tensor([2048, 128, 128, 128],"float32"), None, )
paddle.add(Tensor([209716, 1, 512, 1, 40],"float16"), Tensor([209716, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([209716, 1, 512, 1, 40],"float16"), Tensor([64, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([209716, 1, 512, 1, 40],"float32"), Tensor([209716, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([209716, 1, 512, 1, 40],"float32"), Tensor([64, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([209716, 1, 512, 1, 40],"float32"), Tensor([8, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([2147483648, 1, 2],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483648, 1, 2],"float32"), Tensor([100, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2147483648, 1, 2],"float32"), Tensor([2147483648, 1, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483648, 1, 2],"float32"), Tensor([2147483648, 1, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2147483648, 2, 1],"float32"), Tensor([100, 2, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483648, 2, 1],"float32"), Tensor([100, 2, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2147483648, 2, 1],"float32"), Tensor([2147483648, 2, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483648, 2, 1],"float32"), Tensor([2147483648, 2, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2147483648, 2],"float32"), Tensor([100, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483648, 2],"float32"), Tensor([100, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([2147483649, 1],"float64"), Tensor([100, 1],"float64"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483649, 1],"float64"), Tensor([100, 1],"float64"), name="Cauchy_sample", )
paddle.add(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), name="Cauchy_rsample", )
paddle.add(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), name="Cauchy_sample", )
paddle.add(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.add(Tensor([2147483649],"float64"), Tensor([2],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2147483649],"float64"), Tensor([2],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.add(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), name="Normal_entropy", )
paddle.add(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.add(Tensor([2147483649],"int64"), Tensor([168],"int64"), )
paddle.add(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.add(Tensor([2147483649],"int64"), Tensor([300, 40],"int64"), )
paddle.add(Tensor([22369622, 1, 192],"float16"), Tensor([192],"float16"), )
paddle.add(Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.add(Tensor([24, 256, 256],"float32"), Tensor([16777216, 1, 256],"float32"), )
paddle.add(Tensor([24, 256, 256],"float32"), Tensor([24, 1, 178956971],"float32"), )
paddle.add(Tensor([24, 256, 256],"float32"), Tensor([24, 699051, 256],"float32"), )
paddle.add(Tensor([24, 256, 699051],"float32"), Tensor([24, 1, 256],"float32"), )
paddle.add(Tensor([24, 256, 699051],"float32"), Tensor([24, 1, 699051],"float32"), )
paddle.add(Tensor([24, 699051, 256],"float32"), Tensor([24, 1, 256],"float32"), )
paddle.add(Tensor([24, 699051, 256],"float32"), Tensor([24, 699051, 256],"float32"), )
paddle.add(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), name="Normal_entropy", )
paddle.add(Tensor([3, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([3, 715827883],"float64"), Tensor([3, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), name="Normal_entropy", )
paddle.add(Tensor([3],"float32"), Tensor([4294967295],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([300, 120],"int64"), Tensor([2147483649],"int64"), )
paddle.add(Tensor([300, 7158279],"int64"), Tensor([120],"int64"), )
paddle.add(Tensor([31, 138547333],"float16"), Tensor([192],"float16"), )
paddle.add(Tensor([31, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.add(Tensor([32],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([33554432, 1, 128],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([357913942, 12],"float32"), Tensor([10, 12],"float32"), )
paddle.add(Tensor([357913942, 12],"float32"), Tensor([357913942, 12],"float32"), )
paddle.add(Tensor([357913942, 2, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_sample", )
paddle.add(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.add(Tensor([357913942, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.add(Tensor([4, 1073742, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([4, 3, 1, 1000],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([4, 3, 1, 357913942],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([4, 3, 357914, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([40, 107374183],"bfloat16"), Tensor([40, 107374183],"bfloat16"), name=None, )
paddle.add(Tensor([40, 107374183],"bfloat16"), Tensor([40, 40],"bfloat16"), name=None, )
paddle.add(Tensor([40, 107374183],"float32"), Tensor([40, 107374183],"float32"), name=None, )
paddle.add(Tensor([40, 107374183],"float32"), Tensor([40, 40],"float32"), name=None, )
paddle.add(Tensor([40, 40],"bfloat16"), Tensor([107374183, 40],"bfloat16"), name=None, )
paddle.add(Tensor([40, 40],"bfloat16"), Tensor([40, 107374183],"bfloat16"), name=None, )
paddle.add(Tensor([40, 40],"float32"), Tensor([107374183, 40],"float32"), name=None, )
paddle.add(Tensor([40, 40],"float32"), Tensor([40, 107374183],"float32"), name=None, )
paddle.add(Tensor([40],"int64"), Tensor([300, 7158279],"int64"), )
paddle.add(Tensor([40],"int64"), Tensor([53687092, 40],"int64"), )
paddle.add(Tensor([4194304, 1, 1024],"float16"), Tensor([1024],"float16"), )
paddle.add(Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), )
paddle.add(Tensor([4294967295, 1],"float32"), Tensor([100, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([4294967295, 1],"float32"), Tensor([100, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.add(Tensor([4294967295],"float32"), Tensor([1],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([4294967295],"float32"), Tensor([100],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([4294967295],"float32"), Tensor([100],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([4294967295],"float32"), Tensor([3],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([4294967295],"float32"), Tensor([32],"float32"), )
paddle.add(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.add(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), name="Cauchy_entropy", )
paddle.add(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([5, 10, 15, 20],"float32"), Tensor([1431656, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 5726624],"float32"), name=None, )
paddle.add(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 4294968, 20],"float32"), name=None, )
paddle.add(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 2863312, 15, 20],"float32"), name=None, )
paddle.add(Tensor([5, 10, 15, 5726624],"float32"), Tensor([5, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([5, 10, 15, 5726624],"float32"), Tensor([5, 10, 15, 5726624],"float32"), name=None, )
paddle.add(Tensor([5, 10, 4294968, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([5, 10, 4294968, 20],"float32"), Tensor([5, 10, 4294968, 20],"float32"), name=None, )
paddle.add(Tensor([5, 2863312, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([5, 2863312, 15, 20],"float32"), Tensor([5, 2863312, 15, 20],"float32"), name=None, )
paddle.add(Tensor([512, 1024, 64, 128],"float32"), Tensor([1, 1024, 64, 128],"float32"), None, )
paddle.add(Tensor([512, 1024, 64, 128],"float32"), Tensor([512, 1024, 64, 128],"float32"), None, )
paddle.add(Tensor([536870913, 4],"float64"), Tensor([4],"float64"), name="Normal_sample", )
paddle.add(Tensor([536870913, 4],"float64"), Tensor([4],"float64"), name="Uniform_sample", )
paddle.add(Tensor([538, 128, 200, 312],"float32"), Tensor([1, 128, 200, 312],"float32"), )
paddle.add(Tensor([538, 128, 200, 312],"float32"), Tensor([538, 128, 200, 312],"float32"), )
paddle.add(Tensor([552, 128, 200, 304],"float32"), Tensor([1, 128, 200, 304],"float32"), )
paddle.add(Tensor([552, 128, 200, 304],"float32"), Tensor([552, 128, 200, 304],"float32"), )
paddle.add(Tensor([552, 128, 304, 200],"float32"), Tensor([1, 128, 304, 200],"float32"), )
paddle.add(Tensor([552, 128, 304, 200],"float32"), Tensor([552, 128, 304, 200],"float32"), )
paddle.add(Tensor([617, 128, 200, 272],"float32"), Tensor([1, 128, 200, 272],"float32"), )
paddle.add(Tensor([617, 128, 200, 272],"float32"), Tensor([617, 128, 200, 272],"float32"), )
paddle.add(Tensor([6197645, 7, 99],"float32"), Tensor([99],"float32"), )
paddle.add(Tensor([64, 1, 1677722, 1, 40],"float16"), Tensor([64, 26, 1677722, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 1677722, 1, 40],"float16"), Tensor([64, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 1677722, 1, 40],"float32"), Tensor([64, 26, 1677722, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 1677722, 1, 40],"float32"), Tensor([64, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 131072],"float16"), Tensor([64, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 131072],"float16"), Tensor([64, 26, 512, 1, 131072],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 131072],"float32"), Tensor([64, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 131072],"float32"), Tensor([64, 26, 512, 1, 131072],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([322639, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([64, 131072, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([64, 26, 2581111, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([64, 26, 512, 1, 5042],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float16"), Tensor([64, 26, 512, 5042, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([322639, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([64, 131072, 512, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([64, 26, 2581111, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([64, 26, 512, 1, 5042],"float32"), )
paddle.add(Tensor([64, 1, 512, 1, 40],"float32"), Tensor([64, 26, 512, 5042, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 3277, 40],"float16"), Tensor([64, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 3277, 40],"float16"), Tensor([64, 26, 512, 3277, 1],"float16"), )
paddle.add(Tensor([64, 1, 512, 3277, 40],"float32"), Tensor([64, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([64, 1, 512, 3277, 40],"float32"), Tensor([64, 26, 512, 3277, 1],"float32"), )
paddle.add(Tensor([64, 3277, 512, 1, 40],"float16"), Tensor([64, 26, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 3277, 512, 1, 40],"float16"), Tensor([64, 3277, 512, 1, 1],"float16"), )
paddle.add(Tensor([64, 3277, 512, 1, 40],"float32"), Tensor([64, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([64, 3277, 512, 1, 40],"float32"), Tensor([64, 3277, 512, 1, 1],"float32"), )
paddle.add(Tensor([65536, 256, 256],"float32"), Tensor([24, 1, 256],"float32"), )
paddle.add(Tensor([65536, 256, 256],"float32"), Tensor([65536, 1, 256],"float32"), )
paddle.add(Tensor([67108864, 8, 8],"float32"), Tensor([2, 8, 8],"float32"), )
paddle.add(Tensor([67108864, 8, 8],"float32"), Tensor([67108864, 8, 8],"float32"), )
paddle.add(Tensor([7, 102261127, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_sample", )
paddle.add(Tensor([7, 102261127, 6],"float32"), Tensor([5, 6],"float32"), name="Uniform_sample", )
paddle.add(Tensor([7, 2, 153391690],"float64"), Tensor([2, 3],"float64"), name="Normal_sample", )
paddle.add(Tensor([7, 2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_sample", )
paddle.add(Tensor([7, 2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_sample", )
paddle.add(Tensor([7, 2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_sample", )
paddle.add(Tensor([7, 2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_sample", )
paddle.add(Tensor([7, 2, 306783379],"float32"), Tensor([2, 3],"float32"), name="Normal_sample", )
paddle.add(Tensor([7, 204522253, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_sample", )
paddle.add(Tensor([7, 5, 122713352],"float32"), Tensor([5, 6],"float32"), name="Uniform_sample", )
paddle.add(Tensor([7, 5, 6],"float32"), Tensor([5, 858993459],"float32"), name="Uniform_sample", )
paddle.add(Tensor([7, 5, 6],"float32"), Tensor([715827883, 6],"float32"), name="Uniform_sample", )
paddle.add(Tensor([7, 5, 6],"float64"), Tensor([357913942, 6],"float64"), name="Uniform_sample", )
paddle.add(Tensor([7, 5, 6],"float64"), Tensor([5, 429496730],"float64"), name="Uniform_sample", )
paddle.add(Tensor([7, 5, 61356676],"float64"), Tensor([5, 6],"float64"), name="Uniform_sample", )
paddle.add(Tensor([7, 51130564, 6],"float64"), Tensor([5, 6],"float64"), name="Uniform_sample", )
paddle.add(Tensor([715827883, 2, 3, 1],"float32"), Tensor([1],"float32"), name="Normal_sample", )
paddle.add(Tensor([715827883, 2, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([715827883, 2, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([715827883, 2, 3, 1],"float32"), Tensor([715827883, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([715827883, 2, 3, 1],"float32"), Tensor([715827883, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([715827883, 2, 3],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([715827883, 2, 3],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([715827883, 2, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_sample", )
paddle.add(Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([715827883, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([715827883, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([715827883, 3],"float64"), Tensor([3, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_entropy", )
paddle.add(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_kl_divergence", )
paddle.add(Tensor([715827883, 3],"int64"), Tensor([3, 3],"int64"), )
paddle.add(Tensor([715827883, 3],"int64"), Tensor([715827883, 3],"int64"), )
paddle.add(Tensor([71582789, 5, 6],"float64"), Tensor([5, 6],"float64"), name="Uniform_sample", )
paddle.add(Tensor([8, 1, 13421773, 1, 40],"float32"), Tensor([8, 26, 13421773, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 13421773, 1, 40],"float32"), Tensor([8, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 1048576],"float32"), Tensor([8, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 1048576],"float32"), Tensor([8, 26, 512, 1, 1048576],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([322639, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 1048576, 512, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 26, 20648882, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 26, 512, 1, 40330],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 26, 512, 40330, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 26215, 40],"float32"), Tensor([8, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([8, 1, 512, 26215, 40],"float32"), Tensor([8, 26, 512, 26215, 1],"float32"), )
paddle.add(Tensor([8, 26215, 512, 1, 40],"float32"), Tensor([8, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([8, 26215, 512, 1, 40],"float32"), Tensor([8, 26215, 512, 1, 1],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 14],"float32"), y=Tensor([1, 1024, 14, 299594],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 14],"float32"), y=Tensor([1, 1024, 299594, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 14],"float32"), y=Tensor([1, 21913099, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 14],"float32"), y=Tensor([21400, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 299594],"float32"), y=Tensor([1, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 299594],"float32"), y=Tensor([1, 1024, 14, 299594],"float32"), )
paddle.add(x=Tensor([1, 1024, 299594, 14],"float32"), y=Tensor([1, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 299594, 14],"float32"), y=Tensor([1, 1024, 299594, 14],"float32"), )
paddle.add(x=Tensor([1, 1024, 36, 116509],"float32"), y=Tensor([1, 1024, 36, 116509],"float32"), )
paddle.add(x=Tensor([1, 1024, 36, 116509],"float32"), y=Tensor([1, 1024, 36, 50],"float32"), )
paddle.add(x=Tensor([1, 1024, 36, 50],"float32"), y=Tensor([1, 1024, 36, 116509],"float32"), )
paddle.add(x=Tensor([1, 1024, 36, 50],"float32"), y=Tensor([1, 1024, 83887, 50],"float32"), )
paddle.add(x=Tensor([1, 1024, 36, 50],"float32"), y=Tensor([1, 2386093, 36, 50],"float32"), )
paddle.add(x=Tensor([1, 1024, 36, 50],"float32"), y=Tensor([2331, 1024, 36, 50],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 104858],"float32"), y=Tensor([1, 1024, 40, 104858],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 104858],"float32"), y=Tensor([1, 1024, 40, 54],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 104858],"float32"), y=Tensor([1, 1024, 40, 60],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 104858],"float32"), y=Tensor([1, 1024, 40, 62],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 54],"float32"), y=Tensor([1, 1024, 40, 104858],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 54],"float32"), y=Tensor([1, 1024, 77673, 54],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 54],"float32"), y=Tensor([1, 1988411, 40, 54],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 54],"float32"), y=Tensor([1942, 1024, 40, 54],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 60],"float32"), y=Tensor([1, 1024, 40, 104858],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 60],"float32"), y=Tensor([1, 1024, 69906, 60],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 60],"float32"), y=Tensor([1, 1789570, 40, 60],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 60],"float32"), y=Tensor([1748, 1024, 40, 60],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 62],"float32"), y=Tensor([1, 1024, 40, 104858],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 62],"float32"), y=Tensor([1, 1024, 67651, 62],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 62],"float32"), y=Tensor([1, 1731842, 40, 62],"float32"), )
paddle.add(x=Tensor([1, 1024, 40, 62],"float32"), y=Tensor([1692, 1024, 40, 62],"float32"), )
paddle.add(x=Tensor([1, 1024, 67651, 62],"float32"), y=Tensor([1, 1024, 40, 62],"float32"), )
paddle.add(x=Tensor([1, 1024, 67651, 62],"float32"), y=Tensor([1, 1024, 67651, 62],"float32"), )
paddle.add(x=Tensor([1, 1024, 69906, 60],"float32"), y=Tensor([1, 1024, 40, 60],"float32"), )
paddle.add(x=Tensor([1, 1024, 69906, 60],"float32"), y=Tensor([1, 1024, 69906, 60],"float32"), )
paddle.add(x=Tensor([1, 1024, 77673, 54],"float32"), y=Tensor([1, 1024, 40, 54],"float32"), )
paddle.add(x=Tensor([1, 1024, 77673, 54],"float32"), y=Tensor([1, 1024, 77673, 54],"float32"), )
paddle.add(x=Tensor([1, 1024, 83887, 50],"float32"), y=Tensor([1, 1024, 36, 50],"float32"), )
paddle.add(x=Tensor([1, 1024, 83887, 50],"float32"), y=Tensor([1, 1024, 83887, 50],"float32"), )
paddle.add(x=Tensor([1, 1731842, 40, 62],"float32"), y=Tensor([1, 1024, 40, 62],"float32"), )
paddle.add(x=Tensor([1, 1731842, 40, 62],"float32"), y=Tensor([1, 1731842, 40, 62],"float32"), )
paddle.add(x=Tensor([1, 1789570, 40, 60],"float32"), y=Tensor([1, 1024, 40, 60],"float32"), )
paddle.add(x=Tensor([1, 1789570, 40, 60],"float32"), y=Tensor([1, 1789570, 40, 60],"float32"), )
paddle.add(x=Tensor([1, 1988411, 40, 54],"float32"), y=Tensor([1, 1024, 40, 54],"float32"), )
paddle.add(x=Tensor([1, 1988411, 40, 54],"float32"), y=Tensor([1, 1988411, 40, 54],"float32"), )
paddle.add(x=Tensor([1, 21913099, 14, 14],"float32"), y=Tensor([1, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 21913099, 14, 14],"float32"), y=Tensor([1, 21913099, 14, 14],"float32"), )
paddle.add(x=Tensor([1, 2386093, 36, 50],"float32"), y=Tensor([1, 1024, 36, 50],"float32"), )
paddle.add(x=Tensor([1, 2386093, 36, 50],"float32"), y=Tensor([1, 2386093, 36, 50],"float32"), )
paddle.add(x=Tensor([10700, 2048, 4, 7, 7],"float32"), y=Tensor([10700, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([10700, 2048, 4, 7, 7],"float32"), y=Tensor([8, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([10700, 256, 32, 7, 7],"float32"), y=Tensor([10700, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([10700, 256, 32, 7, 7],"float32"), y=Tensor([8, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([1338, 256, 4, 56, 56],"float32"), y=Tensor([1338, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([1338, 256, 4, 56, 56],"float32"), y=Tensor([8, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([1692, 1024, 40, 62],"float32"), y=Tensor([1, 1024, 40, 62],"float32"), )
paddle.add(x=Tensor([1692, 1024, 40, 62],"float32"), y=Tensor([1692, 1024, 40, 62],"float32"), )
paddle.add(x=Tensor([1748, 1024, 40, 60],"float32"), y=Tensor([1, 1024, 40, 60],"float32"), )
paddle.add(x=Tensor([1748, 1024, 40, 60],"float32"), y=Tensor([1748, 1024, 40, 60],"float32"), )
paddle.add(x=Tensor([178956971, 24],"float32"), y=Tensor([178956971, 24],"float32"), )
paddle.add(x=Tensor([178956971, 24],"float32"), y=Tensor([2, 24],"float32"), )
paddle.add(x=Tensor([1942, 1024, 40, 54],"float32"), y=Tensor([1, 1024, 40, 54],"float32"), )
paddle.add(x=Tensor([1942, 1024, 40, 54],"float32"), y=Tensor([1942, 1024, 40, 54],"float32"), )
paddle.add(x=Tensor([2, 2147483648],"float32"), y=Tensor([2, 2147483648],"float32"), )
paddle.add(x=Tensor([2, 2147483648],"float32"), y=Tensor([2, 24],"float32"), )
paddle.add(x=Tensor([2, 24],"float32"), y=Tensor([178956971, 24],"float32"), )
paddle.add(x=Tensor([2, 24],"float32"), y=Tensor([2, 2147483648],"float32"), )
paddle.add(x=Tensor([21400, 1024, 14, 14],"float32"), y=Tensor([1, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([21400, 1024, 14, 14],"float32"), y=Tensor([21400, 1024, 14, 14],"float32"), )
paddle.add(x=Tensor([2331, 1024, 36, 50],"float32"), y=Tensor([1, 1024, 36, 50],"float32"), )
paddle.add(x=Tensor([2331, 1024, 36, 50],"float32"), y=Tensor([2331, 1024, 36, 50],"float32"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([1, 3, 3],"float64"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([238609295, 1, 3],"float64"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([238609295, 3, 1],"float64"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([238609295, 3, 3],"float64"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([3, 1, 3],"float64"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([3, 3, 1],"float64"), )
paddle.add(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([3, 3, 3],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([1, 238609295, 3],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([1, 3, 3],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 1, 3],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 238609295, 1],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 238609295, 3],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 3, 1],"float64"), )
paddle.add(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 3, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([1, 3, 238609295],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([1, 3, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 1, 238609295],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 1, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 3, 1],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 3, 238609295],"float64"), )
paddle.add(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 3, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 3, 477218589],"float32"), )
paddle.add(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 477218589, 3],"float32"), )
paddle.add(x=Tensor([3, 3, 3],"float32"), y=Tensor([477218589, 3, 3],"float32"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([1, 3, 715827883],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([1, 715827883, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([238609295, 3, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 1, 715827883],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 238609295, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 3, 238609295],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 715827883, 1],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([715827883, 1, 3],"float64"), )
paddle.add(x=Tensor([3, 3, 3],"float64"), y=Tensor([715827883, 3, 1],"float64"), )
paddle.add(x=Tensor([3, 3, 477218589],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.add(x=Tensor([3, 3, 477218589],"float32"), y=Tensor([3, 3, 477218589],"float32"), )
paddle.add(x=Tensor([3, 477218589, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.add(x=Tensor([3, 477218589, 3],"float32"), y=Tensor([3, 477218589, 3],"float32"), )
paddle.add(x=Tensor([477218589, 3, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.add(x=Tensor([477218589, 3, 3],"float32"), y=Tensor([477218589, 3, 3],"float32"), )
paddle.add(x=Tensor([5350, 1024, 4, 14, 14],"float32"), y=Tensor([5350, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([5350, 1024, 4, 14, 14],"float32"), y=Tensor([8, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([5350, 128, 32, 14, 14],"float32"), y=Tensor([5350, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([5350, 128, 32, 14, 14],"float32"), y=Tensor([8, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 2675, 14, 14],"float32"), y=Tensor([8, 1024, 2675, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 2675, 14, 14],"float32"), y=Tensor([8, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 14],"float32"), y=Tensor([5350, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 14],"float32"), y=Tensor([8, 1024, 2675, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 14],"float32"), y=Tensor([8, 1024, 4, 14, 9363],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 14],"float32"), y=Tensor([8, 1024, 4, 9363, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 14],"float32"), y=Tensor([8, 684785, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 9363],"float32"), y=Tensor([8, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 14, 9363],"float32"), y=Tensor([8, 1024, 4, 14, 9363],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 9363, 14],"float32"), y=Tensor([8, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 1024, 4, 9363, 14],"float32"), y=Tensor([8, 1024, 4, 9363, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 21400, 14, 14],"float32"), y=Tensor([8, 128, 21400, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 21400, 14, 14],"float32"), y=Tensor([8, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 14],"float32"), y=Tensor([5350, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 14],"float32"), y=Tensor([8, 128, 21400, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 14],"float32"), y=Tensor([8, 128, 32, 14, 9363],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 14],"float32"), y=Tensor([8, 128, 32, 9363, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 14],"float32"), y=Tensor([8, 85599, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 9363],"float32"), y=Tensor([8, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 14, 9363],"float32"), y=Tensor([8, 128, 32, 14, 9363],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 9363, 14],"float32"), y=Tensor([8, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 128, 32, 9363, 14],"float32"), y=Tensor([8, 128, 32, 9363, 14],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 7],"float32"), y=Tensor([10700, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 7],"float32"), y=Tensor([8, 2048, 4, 7, 9363],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 7],"float32"), y=Tensor([8, 2048, 4, 9363, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 7],"float32"), y=Tensor([8, 2048, 5350, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 7],"float32"), y=Tensor([8, 2739138, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 9363],"float32"), y=Tensor([8, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 7, 9363],"float32"), y=Tensor([8, 2048, 4, 7, 9363],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 9363, 7],"float32"), y=Tensor([8, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 4, 9363, 7],"float32"), y=Tensor([8, 2048, 4, 9363, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 5350, 7, 7],"float32"), y=Tensor([8, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2048, 5350, 7, 7],"float32"), y=Tensor([8, 2048, 5350, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 7],"float32"), y=Tensor([10700, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 7],"float32"), y=Tensor([8, 256, 32, 7, 9363],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 7],"float32"), y=Tensor([8, 256, 32, 9363, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 7],"float32"), y=Tensor([8, 256, 42800, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 7],"float32"), y=Tensor([8, 342393, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 9363],"float32"), y=Tensor([8, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 7, 9363],"float32"), y=Tensor([8, 256, 32, 7, 9363],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 9363, 7],"float32"), y=Tensor([8, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 32, 9363, 7],"float32"), y=Tensor([8, 256, 32, 9363, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 56],"float32"), y=Tensor([1338, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 56],"float32"), y=Tensor([8, 256, 4, 56, 9363],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 56],"float32"), y=Tensor([8, 256, 4, 9363, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 56],"float32"), y=Tensor([8, 256, 669, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 56],"float32"), y=Tensor([8, 42800, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 9363],"float32"), y=Tensor([8, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 56, 9363],"float32"), y=Tensor([8, 256, 4, 56, 9363],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 9363, 56],"float32"), y=Tensor([8, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 4, 9363, 56],"float32"), y=Tensor([8, 256, 4, 9363, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 42800, 7, 7],"float32"), y=Tensor([8, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 42800, 7, 7],"float32"), y=Tensor([8, 256, 42800, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 256, 669, 56, 56],"float32"), y=Tensor([8, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 256, 669, 56, 56],"float32"), y=Tensor([8, 256, 669, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 2739138, 4, 7, 7],"float32"), y=Tensor([8, 2048, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 2739138, 4, 7, 7],"float32"), y=Tensor([8, 2739138, 4, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 342393, 32, 7, 7],"float32"), y=Tensor([8, 256, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 342393, 32, 7, 7],"float32"), y=Tensor([8, 342393, 32, 7, 7],"float32"), )
paddle.add(x=Tensor([8, 42800, 4, 56, 56],"float32"), y=Tensor([8, 256, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 42800, 4, 56, 56],"float32"), y=Tensor([8, 42800, 4, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 684785, 4, 14, 14],"float32"), y=Tensor([8, 1024, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 684785, 4, 14, 14],"float32"), y=Tensor([8, 684785, 4, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 85599, 32, 14, 14],"float32"), y=Tensor([8, 128, 32, 14, 14],"float32"), )
paddle.add(x=Tensor([8, 85599, 32, 14, 14],"float32"), y=Tensor([8, 85599, 32, 14, 14],"float32"), )
paddle.add_n(inputs=Tensor([134217729, 4, 4],"float64"), )
paddle.add_n(inputs=Tensor([2147483649],"float64"), )
paddle.add_n(inputs=Tensor([2147483649],"int64"), )
paddle.add_n(inputs=Tensor([33554433, 4, 4, 4],"float64"), )
paddle.add_n(inputs=Tensor([4, 134217729, 4],"float64"), )
paddle.add_n(inputs=Tensor([4, 33554433, 4, 4],"float64"), )
paddle.add_n(inputs=Tensor([4, 4, 134217729],"float64"), )
paddle.add_n(inputs=Tensor([4, 4, 33554433, 4],"float64"), )
paddle.add_n(inputs=Tensor([4, 4, 4, 33554433],"float64"), )
paddle.add_n(inputs=Tensor([4, 536870913],"float64"), )
paddle.add_n(inputs=Tensor([4294967295],"float32"), )
paddle.add_n(inputs=Tensor([4294967295],"int32"), )
paddle.add_n(inputs=Tensor([536870913, 4],"float64"), )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 8589935],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 8589935, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 17179870, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1717987, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([17179870, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 8589935],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 8589935, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 17179870, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1717987, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([17179870, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 8589935],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 8589935],"float32"),Tensor([10, 1, 10, 5, 8589935],"float32"),Tensor([10, 1, 10, 5, 8589935],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 8589935, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 8589935, 5],"float32"),Tensor([10, 1, 10, 8589935, 5],"float32"),Tensor([10, 1, 10, 8589935, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 17179870, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 17179870, 5, 5],"float32"),Tensor([10, 1, 17179870, 5, 5],"float32"),Tensor([10, 1, 17179870, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1717987, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([10, 1717987, 10, 5, 5],"float32"),Tensor([10, 1717987, 10, 5, 5],"float32"),Tensor([10, 1717987, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([100, 200],"int32"),Tensor([100, 42949673],"int32"),], )
paddle.add_n(list[Tensor([100, 200],"int32"),Tensor([21474837, 200],"int32"),], )
paddle.add_n(list[Tensor([100, 42949673],"int32"),Tensor([100, 200],"int32"),], )
paddle.add_n(list[Tensor([100, 42949673],"int32"),Tensor([100, 42949673],"int32"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 268435456],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),], )
paddle.add_n(list[Tensor([16, 268435456],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 268435456],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),Tensor([16, 268435456],"float16"),], )
paddle.add_n(list[Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),Tensor([16, 268435456],"float32"),], )
paddle.add_n(list[Tensor([16777216, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),], )
paddle.add_n(list[Tensor([16777216, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16777216, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),Tensor([16777216, 256],"float16"),], )
paddle.add_n(list[Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),Tensor([16777216, 256],"float32"),], )
paddle.add_n(list[Tensor([17179870, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([17179870, 1, 10, 5, 5],"float32"),Tensor([17179870, 1, 10, 5, 5],"float32"),Tensor([17179870, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([4294967295],"float32"),Tensor([2],"float32"),], )
paddle.add_n(list[Tensor([2],"float32"),Tensor([2],"float32"),Tensor([4294967295],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),], )
paddle.add_n(list[Tensor([2],"float32"),Tensor([4294967295],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),], )
paddle.add_n(list[Tensor([21474837, 200],"int32"),Tensor([100, 200],"int32"),], )
paddle.add_n(list[Tensor([21474837, 200],"int32"),Tensor([21474837, 200],"int32"),], )
paddle.add_n(list[Tensor([3, 40],"float64"),Tensor([3, 40],"float64"),Tensor([3, 715827883],"float64"),], )
paddle.add_n(list[Tensor([3, 40],"float64"),Tensor([3, 40],"float64"),Tensor([53687092, 40],"float64"),], )
paddle.add_n(list[Tensor([3, 40],"float64"),Tensor([3, 715827883],"float64"),Tensor([3, 40],"float64"),], )
paddle.add_n(list[Tensor([3, 40],"float64"),Tensor([53687092, 40],"float64"),Tensor([3, 40],"float64"),], )
paddle.add_n(list[Tensor([3, 715827883],"float64"),Tensor([3, 40],"float64"),Tensor([3, 40],"float64"),], )
paddle.add_n(list[Tensor([3, 715827883],"float64"),Tensor([3, 715827883],"float64"),Tensor([3, 715827883],"float64"),], )
paddle.add_n(list[Tensor([3],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([32768, 128, 32, 32],"float16"),Tensor([32768, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([32768, 128, 32, 32],"float16"),Tensor([64, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([32768, 128, 32, 32],"float32"),Tensor([32768, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([32768, 128, 32, 32],"float32"),Tensor([64, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 536870913],"float64"),], )
paddle.add_n(list[Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([536870913, 4],"float64"),], )
paddle.add_n(list[Tensor([4, 4],"float64"),Tensor([4, 536870913],"float64"),], )
paddle.add_n(list[Tensor([4, 4],"float64"),Tensor([4, 536870913],"float64"),Tensor([4, 4],"float64"),], )
paddle.add_n(list[Tensor([4, 4],"float64"),Tensor([536870913, 4],"float64"),], )
paddle.add_n(list[Tensor([4, 4],"float64"),Tensor([536870913, 4],"float64"),Tensor([4, 4],"float64"),], )
paddle.add_n(list[Tensor([4, 536870913],"float64"),Tensor([4, 4],"float64"),], )
paddle.add_n(list[Tensor([4, 536870913],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),], )
paddle.add_n(list[Tensor([4, 536870913],"float64"),Tensor([4, 536870913],"float64"),], )
paddle.add_n(list[Tensor([4, 536870913],"float64"),Tensor([4, 536870913],"float64"),Tensor([4, 536870913],"float64"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([3],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.add_n(list[Tensor([536870913, 4],"float64"),Tensor([4, 4],"float64"),], )
paddle.add_n(list[Tensor([536870913, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),], )
paddle.add_n(list[Tensor([536870913, 4],"float64"),Tensor([536870913, 4],"float64"),], )
paddle.add_n(list[Tensor([536870913, 4],"float64"),Tensor([536870913, 4],"float64"),Tensor([536870913, 4],"float64"),], )
paddle.add_n(list[Tensor([53687092, 40],"float64"),Tensor([3, 40],"float64"),Tensor([3, 40],"float64"),], )
paddle.add_n(list[Tensor([53687092, 40],"float64"),Tensor([53687092, 40],"float64"),Tensor([53687092, 40],"float64"),], )
paddle.add_n(list[Tensor([64, 128, 16384, 32],"float16"),Tensor([64, 128, 16384, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 16384, 32],"float16"),Tensor([64, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 16384, 32],"float32"),Tensor([64, 128, 16384, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 16384, 32],"float32"),Tensor([64, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 16384],"float16"),Tensor([64, 128, 32, 16384],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 16384],"float16"),Tensor([64, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 16384],"float32"),Tensor([64, 128, 32, 16384],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 16384],"float32"),Tensor([64, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float16"),Tensor([32768, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float16"),Tensor([64, 128, 16384, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float16"),Tensor([64, 128, 32, 16384],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float16"),Tensor([64, 65536, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float32"),Tensor([32768, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float32"),Tensor([64, 128, 16384, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float32"),Tensor([64, 128, 32, 16384],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float32"),Tensor([64, 65536, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float16"),Tensor([64, 128, 64, 8192],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float16"),Tensor([64, 128, 8192, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float16"),Tensor([64, 16384, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float16"),Tensor([8192, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float32"),Tensor([64, 128, 64, 8192],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float32"),Tensor([64, 128, 8192, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float32"),Tensor([64, 16384, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float32"),Tensor([8192, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 8192],"float16"),Tensor([64, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 8192],"float16"),Tensor([64, 128, 64, 8192],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 8192],"float32"),Tensor([64, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 8192],"float32"),Tensor([64, 128, 64, 8192],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 8192, 64],"float16"),Tensor([64, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 8192, 64],"float16"),Tensor([64, 128, 8192, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 8192, 64],"float32"),Tensor([64, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 8192, 64],"float32"),Tensor([64, 128, 8192, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 16384, 64, 64],"float16"),Tensor([64, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 16384, 64, 64],"float16"),Tensor([64, 16384, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 16384, 64, 64],"float32"),Tensor([64, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 16384, 64, 64],"float32"),Tensor([64, 16384, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16],"float16"),Tensor([64, 256, 16, 16384],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16],"float16"),Tensor([64, 256, 16384, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16],"float16"),Tensor([64, 262144, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16],"float16"),Tensor([65536, 256, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16384],"float16"),Tensor([64, 256, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16384],"float16"),Tensor([64, 256, 16, 16384],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16384, 16],"float16"),Tensor([64, 256, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 256, 16384, 16],"float16"),Tensor([64, 256, 16384, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 262144, 16, 16],"float16"),Tensor([64, 256, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 262144, 16, 16],"float16"),Tensor([64, 262144, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 65536, 32, 32],"float16"),Tensor([64, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 65536, 32, 32],"float16"),Tensor([64, 65536, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([64, 65536, 32, 32],"float32"),Tensor([64, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 65536, 32, 32],"float32"),Tensor([64, 65536, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([65536, 256, 16, 16],"float16"),Tensor([64, 256, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([65536, 256, 16, 16],"float16"),Tensor([65536, 256, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([8192, 128, 64, 64],"float16"),Tensor([64, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([8192, 128, 64, 64],"float16"),Tensor([8192, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([8192, 128, 64, 64],"float32"),Tensor([64, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([8192, 128, 64, 64],"float32"),Tensor([8192, 128, 64, 64],"float32"),], )
paddle.add_n(Tensor([2, 13, 165191050],"float32"), )
paddle.add_n(Tensor([2, 195225787, 11],"float32"), )
paddle.add_n(Tensor([30034737, 13, 11],"float32"), )
paddle.allclose(Tensor([1, 134217728, 32],"float32"), Tensor([1, 134217728, 32],"float32"), )
paddle.allclose(Tensor([1, 134217728, 32],"float32"), Tensor([1, 134217728, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 134217728, 32],"float32"), Tensor([1, 20, 32],"float32"), )
paddle.allclose(Tensor([1, 134217728, 32],"float32"), Tensor([1, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 20, 200],"float32"), Tensor([1, 20, 214748365],"float32"), )
paddle.allclose(Tensor([1, 20, 200],"float32"), Tensor([1, 21474837, 200],"float32"), )
paddle.allclose(Tensor([1, 20, 200],"float32"), Tensor([1073742, 20, 200],"float32"), )
paddle.allclose(Tensor([1, 20, 214748365],"float32"), Tensor([1, 20, 200],"float32"), )
paddle.allclose(Tensor([1, 20, 214748365],"float32"), Tensor([1, 20, 214748365],"float32"), )
paddle.allclose(Tensor([1, 20, 214748365],"float32"), Tensor([1, 20, 32],"float32"), )
paddle.allclose(Tensor([1, 20, 32],"float32"), Tensor([1, 134217728, 32],"float32"), )
paddle.allclose(Tensor([1, 20, 32],"float32"), Tensor([1, 20, 214748365],"float32"), )
paddle.allclose(Tensor([1, 20, 32],"float32"), Tensor([6710887, 20, 32],"float32"), )
paddle.allclose(Tensor([1, 21474837, 200],"float32"), Tensor([1, 20, 200],"float32"), )
paddle.allclose(Tensor([1, 21474837, 200],"float32"), Tensor([1, 21474837, 200],"float32"), )
paddle.allclose(Tensor([1, 4294967295],"float32"), Tensor([1, 4294967295],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([1, 4294967295],"float32"), Tensor([1, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([1, 5, 32],"float32"), Tensor([1, 134217728, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 5, 32],"float32"), Tensor([1, 5, 858993459],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 5, 32],"float32"), Tensor([26843546, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 5, 858993459],"float32"), Tensor([1, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 5, 858993459],"float32"), Tensor([1, 5, 858993459],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 8],"float32"), Tensor([1, 4294967295],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([1, 8],"float32"), Tensor([536870912, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([1],"bool"), Tensor([4294967295],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([1],"float32"), Tensor([4294967295],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([1],"float64"), Tensor([2147483649],"float64"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([1],"float64"), Tensor([2147483649],"float64"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([1],"int32"), Tensor([4294967295],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([1],"int32"), Tensor([4294967295],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([1],"int64"), Tensor([2147483649],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([1],"int64"), Tensor([2147483649],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([10, 10],"float64"), Tensor([10, 214748365],"float64"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([10, 10],"float64"), Tensor([214748365, 10],"float64"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([10, 214748365],"float64"), Tensor([10, 10],"float64"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([10324441, 13, 32],"float32"), Tensor([10324441, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([10324441, 13, 32],"float32"), Tensor([13, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), atol=0.001, )
paddle.allclose(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1073741824, 4],"float32"), Tensor([13, 4],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1073741824, 4],"float32"), Tensor([2, 4],"float32"), atol=0.001, )
paddle.allclose(Tensor([1073742, 20, 200],"float32"), Tensor([1, 20, 200],"float32"), )
paddle.allclose(Tensor([1073742, 20, 200],"float32"), Tensor([1073742, 20, 200],"float32"), )
paddle.allclose(Tensor([1124, 32],"float32"), Tensor([1124, 3821146],"float32"), )
paddle.allclose(Tensor([1124, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.allclose(Tensor([1124, 3821146],"float32"), Tensor([1124, 32],"float32"), )
paddle.allclose(Tensor([1124, 3821146],"float32"), Tensor([1124, 3821146],"float32"), )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 10324441, 32],"float32"), )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 10324441, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 10324441, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 7, 32],"float32"), )
paddle.allclose(Tensor([13, 10324441, 32],"float32"), Tensor([13, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 13, 128],"float32"), Tensor([13, 13, 25414008],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 128],"float32"), Tensor([13, 2581111, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 128],"float32"), Tensor([2581111, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 25414008],"float32"), Tensor([13, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 25414008],"float32"), Tensor([13, 13, 25414008],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 25414008],"float32"), Tensor([13, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 32],"float32"), Tensor([10324441, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 32],"float32"), Tensor([13, 10324441, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13, 32],"float32"), Tensor([13, 13, 25414008],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13],"float32"), Tensor([13, 330382100],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 13],"float32"), Tensor([330382100, 13],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 2],"float32"), Tensor([13, 330382100],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 2],"float32"), Tensor([2147483648, 2],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 20648882, 16],"float32"), Tensor([13, 20648882, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 20648882, 16],"float32"), Tensor([13, 7, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 2581111, 128],"float32"), Tensor([13, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 2581111, 128],"float32"), Tensor([13, 2581111, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 3],"float32"), Tensor([13, 330382100],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 3],"float32"), Tensor([13, 330382100],"float32"), atol=0.01, )
paddle.allclose(Tensor([13, 3],"float32"), Tensor([13, 330382100],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.01, )
paddle.allclose(Tensor([13, 3],"float32"), Tensor([1431655765, 3],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 10324441],"float32"), Tensor([13, 32, 10324441],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 10324441],"float32"), Tensor([13, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 10324441],"float32"), Tensor([13, 32, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 32],"float32"), Tensor([13, 10324441, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 32],"float32"), Tensor([13, 32, 10324441],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 32],"float32"), Tensor([4194304, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 64],"float32"), Tensor([13, 32, 10324441],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 64],"float32"), Tensor([13, 5162221, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32],"float32"), Tensor([13, 330382100],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32],"float32"), Tensor([134217728, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 13],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 2],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 3],"float32"), atol=0.01, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 3],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 330382100],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 330382100],"float32"), atol=0.01, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 330382100],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 330382100],"float32"), Tensor([13, 4],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 4],"float32"), Tensor([1073741824, 4],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 4],"float32"), Tensor([13, 330382100],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 5162221, 64],"float32"), Tensor([13, 32, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 5162221, 64],"float32"), Tensor([13, 5162221, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 16],"float32"), Tensor([13, 20648882, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 16],"float32"), Tensor([13, 7, 47197443],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 16],"float32"), Tensor([38347923, 7, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 32],"float32"), Tensor([13, 10324441, 32],"float32"), )
paddle.allclose(Tensor([13, 7, 32],"float32"), Tensor([13, 7, 47197443],"float32"), )
paddle.allclose(Tensor([13, 7, 32],"float32"), Tensor([19173962, 7, 32],"float32"), )
paddle.allclose(Tensor([13, 7, 47197443],"float32"), Tensor([13, 7, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 47197443],"float32"), Tensor([13, 7, 32],"float32"), )
paddle.allclose(Tensor([13, 7, 47197443],"float32"), Tensor([13, 7, 47197443],"float32"), )
paddle.allclose(Tensor([13, 7, 47197443],"float32"), Tensor([13, 7, 47197443],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 8, 32],"float32"), Tensor([13, 10324441, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 8, 32],"float32"), Tensor([13, 8, 41297763],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 8, 32],"float32"), Tensor([16777216, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 8, 41297763],"float32"), Tensor([13, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 8, 41297763],"float32"), Tensor([13, 8, 41297763],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13],"float32"), Tensor([4294967295],"float32"), atol=0.001, )
paddle.allclose(Tensor([134217728, 32],"float32"), Tensor([1124, 32],"float32"), )
paddle.allclose(Tensor([134217728, 32],"float32"), Tensor([13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([134217728, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.allclose(Tensor([134217728, 32],"float32"), Tensor([134217728, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([134217728, 32],"float32"), Tensor([16, 32],"float32"), )
paddle.allclose(Tensor([134217728, 4, 8],"float32"), Tensor([134217728, 4, 8],"float32"), )
paddle.allclose(Tensor([134217728, 4, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.allclose(Tensor([14, 19173962, 16],"float32"), Tensor([14, 19173962, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 19173962, 16],"float32"), Tensor([14, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 3],"float32"), Tensor([14, 306783379],"float32"), atol=0.001, )
paddle.allclose(Tensor([14, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([14, 306783379],"float32"), Tensor([14, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([14, 306783379],"float32"), Tensor([14, 306783379],"float32"), atol=0.001, )
paddle.allclose(Tensor([14, 3098823, 99],"float32"), Tensor([14, 3098823, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 3098823, 99],"float32"), Tensor([14, 7, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 16],"float32"), Tensor([14, 19173962, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 16],"float32"), Tensor([14, 64, 4793491],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 16],"float32"), Tensor([4194304, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 4],"float32"), Tensor([14, 64, 4793491],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 4],"float32"), Tensor([14, 76695845, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 4],"float32"), Tensor([16777216, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 4793491],"float32"), Tensor([14, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 4793491],"float32"), Tensor([14, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 64, 4793491],"float32"), Tensor([14, 64, 4793491],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 32],"float32"), Tensor([14, 7, 43826197],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 32],"float32"), Tensor([14, 9586981, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 32],"float32"), Tensor([19173962, 7, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 43826197],"float32"), Tensor([14, 7, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 43826197],"float32"), Tensor([14, 7, 43826197],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 43826197],"float32"), Tensor([14, 7, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 99],"float32"), Tensor([14, 3098823, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 99],"float32"), Tensor([14, 7, 43826197],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 7, 99],"float32"), Tensor([6197645, 7, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 76695845, 4],"float32"), Tensor([14, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 76695845, 4],"float32"), Tensor([14, 76695845, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 9586981, 32],"float32"), Tensor([14, 7, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14, 9586981, 32],"float32"), Tensor([14, 9586981, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([14],"float16"), Tensor([4294967295],"float16"), atol=0.001, )
paddle.allclose(Tensor([14],"float32"), Tensor([4294967295],"float32"), atol=0.001, )
paddle.allclose(Tensor([14],"float32"), Tensor([4294967295],"float32"), atol=0.5, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([13, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([13, 3],"float32"), atol=0.01, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([13, 3],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([14, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.0001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.01, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), atol=0.0001, )
paddle.allclose(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([16, 16],"float32"), Tensor([16, 268435456],"float32"), )
paddle.allclose(Tensor([16, 16],"float32"), Tensor([268435456, 16],"float32"), )
paddle.allclose(Tensor([16, 268435456],"float32"), Tensor([16, 16],"float32"), )
paddle.allclose(Tensor([16, 268435456],"float32"), Tensor([16, 268435456],"float32"), )
paddle.allclose(Tensor([16, 268435456],"float32"), Tensor([16, 32],"float32"), )
paddle.allclose(Tensor([16, 268435456],"float32"), Tensor([16, 8],"float32"), )
paddle.allclose(Tensor([16, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.allclose(Tensor([16, 32],"float32"), Tensor([16, 268435456],"float32"), )
paddle.allclose(Tensor([16, 8],"float32"), Tensor([16, 268435456],"float32"), )
paddle.allclose(Tensor([16, 8],"float32"), Tensor([536870912, 8],"float32"), )
paddle.allclose(Tensor([16777216, 64, 4],"float32"), Tensor([14, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([16777216, 64, 4],"float32"), Tensor([16777216, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([16777216, 8, 32],"float32"), Tensor([13, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([16777216, 8, 32],"float32"), Tensor([16777216, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([19173962, 7, 32],"float32"), Tensor([13, 7, 32],"float32"), )
paddle.allclose(Tensor([19173962, 7, 32],"float32"), Tensor([14, 7, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([19173962, 7, 32],"float32"), Tensor([19173962, 7, 32],"float32"), )
paddle.allclose(Tensor([19173962, 7, 32],"float32"), Tensor([19173962, 7, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([2, 134217728, 16],"float32"), Tensor([2, 134217728, 16],"float32"), )
paddle.allclose(Tensor([2, 134217728, 16],"float32"), Tensor([2, 4, 16],"float32"), )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), atol=1e-06, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 4],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 5],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 2147483648],"float32"), Tensor([2, 8],"float32"), atol=1e-06, )
paddle.allclose(Tensor([2, 268435456, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.allclose(Tensor([2, 268435456, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 8],"float32"), Tensor([2, 3, 8, 89478486],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 8],"float32"), Tensor([2, 3, 89478486, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 8],"float32"), Tensor([2, 33554432, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 8],"float32"), Tensor([22369622, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 89478486],"float32"), Tensor([2, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 8, 89478486],"float32"), Tensor([2, 3, 8, 89478486],"float32"), )
paddle.allclose(Tensor([2, 3, 89478486, 8],"float32"), Tensor([2, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 3, 89478486, 8],"float32"), Tensor([2, 3, 89478486, 8],"float32"), )
paddle.allclose(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.allclose(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.allclose(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 33554432, 8, 8],"float32"), Tensor([2, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 33554432, 8, 8],"float32"), Tensor([2, 33554432, 8, 8],"float32"), )
paddle.allclose(Tensor([2, 4, 16],"float32"), Tensor([2, 134217728, 16],"float32"), )
paddle.allclose(Tensor([2, 4, 16],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.allclose(Tensor([2, 4, 16],"float32"), Tensor([67108864, 4, 16],"float32"), )
paddle.allclose(Tensor([2, 4, 536870912],"float32"), Tensor([2, 4, 16],"float32"), )
paddle.allclose(Tensor([2, 4, 536870912],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.allclose(Tensor([2, 4, 536870912],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.allclose(Tensor([2, 4, 8],"float32"), Tensor([134217728, 4, 8],"float32"), )
paddle.allclose(Tensor([2, 4, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.allclose(Tensor([2, 4, 8],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.allclose(Tensor([2, 4],"float32"), Tensor([1073741824, 4],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 4],"float32"), Tensor([2, 2147483648],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 5],"float32"), Tensor([2, 2147483648],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 5],"float32"), Tensor([858993459, 5],"float32"), atol=0.001, )
paddle.allclose(Tensor([2, 8],"float32"), Tensor([2, 2147483648],"float32"), atol=1e-06, )
paddle.allclose(Tensor([2, 8],"float32"), Tensor([536870912, 8],"float32"), atol=1e-06, )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), atol=0.001, )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_1", )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_3", )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_5", )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_2", )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_4", )
paddle.allclose(Tensor([2],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_6", )
paddle.allclose(Tensor([20],"float32"), Tensor([4294967295],"float32"), atol=0.001, )
paddle.allclose(Tensor([2097152, 32, 64],"float32"), Tensor([13, 32, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2097152, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2147483648, 2],"float32"), Tensor([13, 2],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2147483649],"float64"), Tensor([1],"float64"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([2147483649],"float64"), Tensor([1],"float64"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([2147483649],"float64"), Tensor([512],"float64"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([2147483649],"int64"), Tensor([1],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([2147483649],"int64"), Tensor([1],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([214748365, 10],"float64"), Tensor([10, 10],"float64"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([214748365, 10],"float64"), Tensor([214748365, 10],"float64"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([22369622, 3, 8, 8],"float32"), Tensor([2, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([22369622, 3, 8, 8],"float32"), Tensor([22369622, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([2581111, 13, 128],"float32"), Tensor([13, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2581111, 13, 128],"float32"), Tensor([2581111, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([268435456, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.allclose(Tensor([268435456, 16],"float32"), Tensor([268435456, 16],"float32"), )
paddle.allclose(Tensor([268435456, 16],"float32"), Tensor([268435456, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([268435456, 16],"float32"), Tensor([64, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([26843546, 5, 32],"float32"), Tensor([1, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([26843546, 5, 32],"float32"), Tensor([26843546, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([30],"float32"), Tensor([4294967295],"float32"), atol=0.0001, )
paddle.allclose(Tensor([30],"float32"), Tensor([4294967295],"float32"), atol=1e-06, )
paddle.allclose(Tensor([30],"float32"), Tensor([4294967295],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([3072],"float32"), Tensor([4294967295],"float32"), )
paddle.allclose(Tensor([32],"float32"), Tensor([4294967295],"float32"), )
paddle.allclose(Tensor([330382100, 13],"float32"), Tensor([13, 13],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([330382100, 13],"float32"), Tensor([330382100, 13],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([37],"float32"), Tensor([4294967295],"float32"), )
paddle.allclose(Tensor([38347923, 7, 16],"float32"), Tensor([13, 7, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([38347923, 7, 16],"float32"), Tensor([38347923, 7, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([4, 1073741824],"float32"), Tensor([4, 1073741824],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4, 1073741824],"float32"), Tensor([4, 5],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4, 5],"float32"), Tensor([4, 1073741824],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4, 5],"float32"), Tensor([858993459, 5],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4],"float32"), Tensor([4294967295],"float32"), )
paddle.allclose(Tensor([4194304, 32, 32],"float32"), Tensor([13, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([4194304, 32, 32],"float32"), Tensor([4194304, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([4194304, 64, 16],"float32"), Tensor([14, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([4194304, 64, 16],"float32"), Tensor([4194304, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([4294967295],"bool"), Tensor([1],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([4294967295],"bool"), Tensor([4294967295],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([4294967295],"float16"), Tensor([14],"float16"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([1],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([13],"float32"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([14],"float32"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([14],"float32"), atol=0.5, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_1", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_3", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_5", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_2", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_4", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([2],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_6", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([20],"float32"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([30],"float32"), atol=0.0001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([30],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([30],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([3072],"float32"), )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([32],"float32"), )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([37],"float32"), )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4],"float32"), )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), atol=0.0001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), atol=0.001, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), atol=0.5, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), atol=1e-06, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_1", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_3", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_5", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_2", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_4", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_6", )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([64],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([4294967295],"float32"), Tensor([768],"float32"), )
paddle.allclose(Tensor([4294967295],"int32"), Tensor([1],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([4294967295],"int32"), Tensor([1],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([512],"float64"), Tensor([2147483649],"float64"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([536870912, 8],"float32"), Tensor([1, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([536870912, 8],"float32"), Tensor([16, 8],"float32"), )
paddle.allclose(Tensor([536870912, 8],"float32"), Tensor([2, 8],"float32"), atol=1e-06, )
paddle.allclose(Tensor([536870912, 8],"float32"), Tensor([536870912, 8],"float32"), )
paddle.allclose(Tensor([536870912, 8],"float32"), Tensor([536870912, 8],"float32"), atol=1e-06, )
paddle.allclose(Tensor([536870912, 8],"float32"), Tensor([536870912, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([6197645, 7, 99],"float32"), Tensor([14, 7, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([6197645, 7, 99],"float32"), Tensor([6197645, 7, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([64, 16],"float32"), Tensor([268435456, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([64, 16],"float32"), Tensor([64, 67108864],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([64, 67108864],"float32"), Tensor([64, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([64, 67108864],"float32"), Tensor([64, 67108864],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([64],"float32"), Tensor([4294967295],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([67108864, 4, 16],"float32"), Tensor([2, 4, 16],"float32"), )
paddle.allclose(Tensor([67108864, 4, 16],"float32"), Tensor([67108864, 4, 16],"float32"), )
paddle.allclose(Tensor([6710887, 20, 32],"float32"), Tensor([1, 20, 32],"float32"), )
paddle.allclose(Tensor([6710887, 20, 32],"float32"), Tensor([6710887, 20, 32],"float32"), )
paddle.allclose(Tensor([768],"float32"), Tensor([4294967295],"float32"), )
paddle.allclose(Tensor([858993459, 5],"float32"), Tensor([2, 5],"float32"), atol=0.001, )
paddle.allclose(Tensor([858993459, 5],"float32"), Tensor([4, 5],"float32"), atol=1e-06, )
paddle.allclose(Tensor([858993459, 5],"float32"), Tensor([858993459, 5],"float32"), atol=0.001, )
paddle.allclose(Tensor([858993459, 5],"float32"), Tensor([858993459, 5],"float32"), atol=1e-06, )
paddle.allclose(tuple(Tensor([13, 20648882, 16],"float32"),Tensor([13, 20648882, 16],"float32"),), tuple(Tensor([13, 20648882, 16],"float32"),Tensor([13, 20648882, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 20648882, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 330382100],"float32"),Tensor([13, 330382100],"float32"),), tuple(Tensor([13, 330382100],"float32"),Tensor([13, 330382100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 330382100],"float32"),Tensor([13, 7],"float32"),), tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 20648882, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 20648882, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 20648882, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 47197443],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([38347923, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([38347923, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 47197443],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 16],"float32"),Tensor([38347923, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 7, 47197443],"float32"),), tuple(Tensor([13, 7, 47197443],"float32"),Tensor([13, 7, 47197443],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7],"float32"),Tensor([13, 330382100],"float32"),), tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), tuple(Tensor([13, 330382100],"float32"),Tensor([13, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), tuple(Tensor([13, 7],"float32"),Tensor([13, 330382100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), tuple(Tensor([13, 7],"float32"),Tensor([613566757, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), tuple(Tensor([613566757, 7],"float32"),Tensor([13, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([13, 7],"float32"),Tensor([613566757, 7],"float32"),), tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([1431655765, 3],"float32"),), tuple(Tensor([1431655765, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([1431655765, 3],"float32"),), tuple(Tensor([2, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 100],"float32"),), tuple(Tensor([2, 20, 107374183],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 100],"float32"),), tuple(Tensor([2, 21474837, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 100],"float32"),), tuple(Tensor([2147484, 20, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 107374183],"float32"),), tuple(Tensor([2, 20, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 107374183],"float32"),), tuple(Tensor([2, 20, 107374183],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 107374183],"float32"),), tuple(Tensor([2, 20, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 107374183],"float32"),), tuple(Tensor([2, 20, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 3],"float32"),), tuple(Tensor([2, 20, 107374183],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 3],"float32"),), tuple(Tensor([2, 715827883, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 3],"float32"),), tuple(Tensor([71582789, 20, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 32],"float32"),), tuple(Tensor([2, 20, 107374183],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 32],"float32"),), tuple(Tensor([2, 67108864, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 20, 32],"float32"),), tuple(Tensor([6710887, 20, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 2147483648],"float32"),), tuple(Tensor([2, 2147483648],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 2147483648],"float32"),), tuple(Tensor([2, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 21474837, 100],"float32"),), tuple(Tensor([2, 20, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 21474837, 100],"float32"),), tuple(Tensor([2, 21474837, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 3],"float32"),), tuple(Tensor([1431655765, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 3],"float32"),), tuple(Tensor([2, 2147483648],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 67108864, 32],"float32"),), tuple(Tensor([2, 20, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 67108864, 32],"float32"),), tuple(Tensor([2, 67108864, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 715827883, 3],"float32"),), tuple(Tensor([2, 20, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2, 715827883, 3],"float32"),), tuple(Tensor([2, 715827883, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2147484, 20, 100],"float32"),), tuple(Tensor([2, 20, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([2147484, 20, 100],"float32"),), tuple(Tensor([2147484, 20, 100],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([38347923, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), tuple(Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([38347923, 7, 16],"float32"),Tensor([38347923, 7, 16],"float32"),), tuple(Tensor([38347923, 7, 16],"float32"),Tensor([38347923, 7, 16],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([613566757, 7],"float32"),Tensor([13, 7],"float32"),), tuple(Tensor([13, 7],"float32"),Tensor([13, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([613566757, 7],"float32"),Tensor([613566757, 7],"float32"),), tuple(Tensor([613566757, 7],"float32"),Tensor([613566757, 7],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([6710887, 20, 32],"float32"),), tuple(Tensor([2, 20, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([6710887, 20, 32],"float32"),), tuple(Tensor([6710887, 20, 32],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([71582789, 20, 3],"float32"),), tuple(Tensor([2, 20, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(tuple(Tensor([71582789, 20, 3],"float32"),), tuple(Tensor([71582789, 20, 3],"float32"),), rtol=0.0001, atol=0.0001, )
paddle.allclose(x=Tensor([1],"float32"), y=Tensor([4294967295],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.allclose(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-05, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([178956971, 2, 2, 3],"float64"), y=Tensor([178956971, 2, 2, 3],"float64"), )
paddle.allclose(x=Tensor([178956971, 2, 2, 3],"float64"), y=Tensor([178956971, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([178956971, 2, 2, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), )
paddle.allclose(x=Tensor([178956971, 2, 2, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 178956971, 2, 3],"float64"), y=Tensor([2, 178956971, 2, 3],"float64"), )
paddle.allclose(x=Tensor([2, 178956971, 2, 3],"float64"), y=Tensor([2, 178956971, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 178956971, 2, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), )
paddle.allclose(x=Tensor([2, 178956971, 2, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 178956971, 3],"float64"), y=Tensor([2, 2, 178956971, 3],"float64"), )
paddle.allclose(x=Tensor([2, 2, 178956971, 3],"float64"), y=Tensor([2, 2, 178956971, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 178956971, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), )
paddle.allclose(x=Tensor([2, 2, 178956971, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 2, 268435457],"float64"), y=Tensor([2, 2, 2, 268435457],"float64"), )
paddle.allclose(x=Tensor([2, 2, 2, 268435457],"float64"), y=Tensor([2, 2, 2, 268435457],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 2, 268435457],"float64"), y=Tensor([2, 2, 2, 3],"float64"), )
paddle.allclose(x=Tensor([2, 2, 2, 268435457],"float64"), y=Tensor([2, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([178956971, 2, 2, 3],"float64"), )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([178956971, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 178956971, 2, 3],"float64"), )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 178956971, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 2, 178956971, 3],"float64"), )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 2, 178956971, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 2, 2, 268435457],"float64"), )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 2, 2, 268435457],"float64"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([1],"float64"), )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([1],"float64"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([1],"float64"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([1],"float64"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([1],"float64"), rtol=1e-05, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([1],"float64"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-05, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-06, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([2147483649],"float64"), y=Tensor([3],"float64"), rtol=1e-06, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([3],"float64"), y=Tensor([2147483649],"float64"), rtol=1e-06, atol=0.001, equal_nan=True, )
paddle.allclose(x=Tensor([4294967295],"float32"), y=Tensor([1],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(x=Tensor([4294967295],"float32"), y=Tensor([4294967295],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.argmax(Tensor([1, 16384, 512, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 16913, 496, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 1024, 2097152],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 2012637, 1067],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 2070862, 1037],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 2097152, 1024],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 4194304, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 496, 4329605],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 512, 4194304],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 2684355],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 4096, 1024, 1024],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 5032, 800, 1067],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 5178, 800, 1037],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([10, 429496730],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([2048, 2, 1024, 1024],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([2516, 2, 800, 1067],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([2589, 2, 800, 1037],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([429496730, 10],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([8192, 2, 512, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([8457, 2, 496, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(x=Tensor([143165577, 3, 5],"float64"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(x=Tensor([2147483649, 1],"int64"), keepdim=None, )
paddle.argmax(x=Tensor([3, 143165577, 5],"float64"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(x=Tensor([3, 3, 2, 119304648],"float64"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([3, 3, 238609295, 1],"float64"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([3, 3, 238609295],"float64"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(x=Tensor([3, 357913942, 2, 1],"float64"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([3, 715827883],"float64"), axis=0, dtype=type(numpy.int32), keepdim=False, )
paddle.argmax(x=Tensor([3, 715827883],"int64"), dtype="int32", )
paddle.argmax(x=Tensor([3, 715827883],"int64"), keepdim=None, )
paddle.argmax(x=Tensor([357913942, 3, 2, 1],"float64"), axis=-1, dtype="int64", )
paddle.argmax(x=Tensor([715827883, 3],"float64"), axis=0, dtype=type(numpy.int32), keepdim=False, )
paddle.argmax(x=Tensor([715827883, 3],"int64"), dtype="int32", )
paddle.argmin(Tensor([10, 429496730],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmin(Tensor([429496730, 10],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmin(x=Tensor([143165577, 3, 5],"float64"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(x=Tensor([2147483649, 1],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([3, 143165577, 5],"float64"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(x=Tensor([3, 3, 2, 119304648],"float64"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 3, 238609295, 1],"float64"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 3, 238609295],"float64"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(x=Tensor([3, 357913942, 2, 1],"float64"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 715827883],"float64"), axis=0, dtype=type(numpy.int32), keepdim=False, )
paddle.argmin(x=Tensor([3, 715827883],"int64"), dtype="int32", )
paddle.argmin(x=Tensor([3, 715827883],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([357913942, 3, 2, 1],"float64"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([715827883, 3],"float64"), axis=0, dtype=type(numpy.int32), keepdim=False, )
paddle.argmin(x=Tensor([715827883, 3],"int64"), dtype="int32", )
paddle.as_strided(Tensor([134217728, 32],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217728, 32],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([134217728, 32],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217728, 32],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([134217728, 32],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217728, 32],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([178956971, 4, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([2, 357913942, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([2, 4, 536870912],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([32, 134217728],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217728],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 134217728],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217728],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 134217728],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217728],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 67108865],"float64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 67108865],"float64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 67108865],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 67108865],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([67108865, 32],"float64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([67108865, 32],"float64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([67108865, 32],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([67108865, 32],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.assign(0.0, Tensor([4294967295],"float32"), )
paddle.assign(0.005, Tensor([4294967295],"float32"), )
paddle.assign(0.04380856, Tensor([4294967295],"float32"), )
paddle.assign(0.05, Tensor([4294967295],"float32"), )
paddle.assign(1.0, Tensor([4294967295],"float32"), )
paddle.assign(list[Tensor([100, 21474837],"float64"),], )
paddle.assign(list[Tensor([214748365, 10],"float64"),], )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([1, 1, 390451573, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([1, 390451573, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 11],"float32"), Tensor([390451573, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([1, 1, 613566757, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([1, 613566757, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 7],"float32"), Tensor([613566757, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 1, 477218589, 9],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 477218589, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([477218589, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 390451573, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 390451573, 11],"float32"), Tensor([1, 1, 390451573, 11],"float32"), )
paddle.assign(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 1, 4294967295],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([1, 1, 477218589, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 1, 477218589, 9],"float32"), Tensor([1, 1, 477218589, 9],"float32"), )
paddle.assign(Tensor([1, 1, 613566757, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 1, 613566757, 7],"float32"), Tensor([1, 1, 613566757, 7],"float32"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([1, 1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([1, 5592406, 768],"float32"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([5592406, 1, 768],"float32"), )
paddle.assign(Tensor([1, 1431655765, 3],"float32"), Tensor([1, 1431655765, 3],"float32"), )
paddle.assign(Tensor([1, 1431655765, 3],"float32"), Tensor([1, 64, 3],"float32"), )
paddle.assign(Tensor([1, 197, 21801865],"float32"), Tensor([1, 197, 21801865],"float32"), )
paddle.assign(Tensor([1, 197, 21801865],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([1, 197, 21801865],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([1, 5592406, 768],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([28388, 197, 768],"float32"), )
paddle.assign(Tensor([1, 2147483649],"int64"), )
paddle.assign(Tensor([1, 286331153, 3, 5],"float32"), )
paddle.assign(Tensor([1, 3, 286331153, 5],"float32"), )
paddle.assign(Tensor([1, 3, 3, 477218589],"float32"), )
paddle.assign(Tensor([1, 390451573, 1, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 390451573, 1, 11],"float32"), Tensor([1, 390451573, 1, 11],"float32"), )
paddle.assign(Tensor([1, 4294967295, 1],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.assign(Tensor([1, 4294967295, 1],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([1, 4294967295],"float32"), )
paddle.assign(Tensor([1, 477218589, 1, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([1, 477218589, 1, 9],"float32"), Tensor([1, 477218589, 1, 9],"float32"), )
paddle.assign(Tensor([1, 5592406, 768],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([1, 5592406, 768],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([1, 5592406, 768],"float32"), Tensor([1, 5592406, 768],"float32"), )
paddle.assign(Tensor([1, 613566757, 1, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 613566757, 1, 7],"float32"), Tensor([1, 613566757, 1, 7],"float32"), )
paddle.assign(Tensor([1, 64, 1],"float32"), Tensor([1, 4294967295, 1],"float32"), )
paddle.assign(Tensor([1, 64, 1],"float32"), Tensor([1, 64, 67108864],"float32"), )
paddle.assign(Tensor([1, 64, 1],"float32"), Tensor([67108864, 64, 1],"float32"), )
paddle.assign(Tensor([1, 64, 3],"float32"), Tensor([1, 1431655765, 3],"float32"), )
paddle.assign(Tensor([1, 64, 3],"float32"), Tensor([1, 64, 67108864],"float32"), )
paddle.assign(Tensor([1, 64, 3],"float32"), Tensor([22369622, 64, 3],"float32"), )
paddle.assign(Tensor([1, 64, 67108864],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([1, 64, 67108864],"float32"), Tensor([1, 64, 3],"float32"), )
paddle.assign(Tensor([1, 64, 67108864],"float32"), Tensor([1, 64, 67108864],"float32"), )
paddle.assign(Tensor([10, 20],"float32"), Tensor([10, 429496730],"float32"), )
paddle.assign(Tensor([10, 20],"float32"), Tensor([214748365, 20],"float32"), )
paddle.assign(Tensor([10, 429496730],"float32"), )
paddle.assign(Tensor([10, 429496730],"float32"), Tensor([10, 20],"float32"), )
paddle.assign(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.assign(Tensor([100],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.assign(Tensor([100],"float16"), Tensor([4294967295],"float16"), )
paddle.assign(Tensor([100],"float32"), Tensor([4294967295],"float32"), )
paddle.assign(Tensor([100],"float64"), Tensor([2147483649],"float64"), )
paddle.assign(Tensor([1000],"float32"), Tensor([4294967295],"float32"), )
paddle.assign(Tensor([1024, 102],"float32"), output=Tensor([1024, 4194304],"float32"), )
paddle.assign(Tensor([1024, 102],"float32"), output=Tensor([42107523, 102],"float32"), )
paddle.assign(Tensor([1024, 1024],"float32"), output=Tensor([1024, 4194304],"float32"), )
paddle.assign(Tensor([1024, 1024],"float32"), output=Tensor([4194304, 1024],"float32"), )
paddle.assign(Tensor([1024, 21400, 14, 14],"float32"), output=Tensor([1024, 21400, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 21400, 14, 14],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 1],"float32"), Tensor([1024, 256, 1, 16384],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 1],"float32"), Tensor([1024, 256, 16384, 1],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 1],"float32"), Tensor([1024, 4194304, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 1],"float32"), Tensor([16777216, 256, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 16384],"float32"), Tensor([1024, 256, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 16384],"float32"), Tensor([1024, 256, 1, 16384],"float32"), )
paddle.assign(Tensor([1024, 256, 16384, 1],"float32"), Tensor([1024, 256, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 256, 16384, 1],"float32"), Tensor([1024, 256, 16384, 1],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([1024, 21400, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([1024, 3, 14, 99865],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([1024, 3, 99865, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([7304367, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 99865],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 99865],"float32"), output=Tensor([1024, 3, 14, 99865],"float32"), )
paddle.assign(Tensor([1024, 3, 99865, 14],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([1024, 3, 99865, 14],"float32"), output=Tensor([1024, 3, 99865, 14],"float32"), )
paddle.assign(Tensor([1024, 3072],"float32"), output=Tensor([1024, 4194304],"float32"), )
paddle.assign(Tensor([1024, 3072],"float32"), output=Tensor([1398102, 3072],"float32"), )
paddle.assign(Tensor([1024, 4096],"float32"), output=Tensor([1024, 4194304],"float32"), )
paddle.assign(Tensor([1024, 4096],"float32"), output=Tensor([1048576, 4096],"float32"), )
paddle.assign(Tensor([1024, 4194304, 1, 1],"float32"), Tensor([1024, 256, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 4194304, 1, 1],"float32"), Tensor([1024, 4194304, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 4194304, 1, 1],"float32"), Tensor([1024, 512, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 4194304],"float32"), output=Tensor([1024, 102],"float32"), )
paddle.assign(Tensor([1024, 4194304],"float32"), output=Tensor([1024, 1024],"float32"), )
paddle.assign(Tensor([1024, 4194304],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([1024, 4194304],"float32"), output=Tensor([1024, 4096],"float32"), )
paddle.assign(Tensor([1024, 4194304],"float32"), output=Tensor([1024, 4194304],"float32"), )
paddle.assign(Tensor([1024, 512, 1, 1],"float32"), Tensor([1024, 4194304, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 512, 1, 1],"float32"), Tensor([1024, 512, 1, 8192],"float32"), )
paddle.assign(Tensor([1024, 512, 1, 1],"float32"), Tensor([1024, 512, 8192, 1],"float32"), )
paddle.assign(Tensor([1024, 512, 1, 1],"float32"), Tensor([8388608, 512, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 512, 1, 8192],"float32"), Tensor([1024, 512, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 512, 1, 8192],"float32"), Tensor([1024, 512, 1, 8192],"float32"), )
paddle.assign(Tensor([1024, 512, 8192, 1],"float32"), Tensor([1024, 512, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 512, 8192, 1],"float32"), Tensor([1024, 512, 8192, 1],"float32"), )
paddle.assign(Tensor([1048576, 4096],"float32"), output=Tensor([1024, 4096],"float32"), )
paddle.assign(Tensor([1048576, 4096],"float32"), output=Tensor([1048576, 4096],"float32"), )
paddle.assign(Tensor([1073741825, 2],"int64"), Tensor([1073741825, 2],"int64"), )
paddle.assign(Tensor([1073741825, 2],"int64"), Tensor([2, 2],"int64"), )
paddle.assign(Tensor([11184811, 384],"float32"), Tensor([11184811, 384],"float32"), )
paddle.assign(Tensor([11184811, 384],"float32"), Tensor([1536, 384],"float32"), )
paddle.assign(Tensor([119304648, 3, 3, 2],"float64"), )
paddle.assign(Tensor([128, 11184811, 3],"float32"), Tensor([128, 11184811, 3],"float32"), )
paddle.assign(Tensor([128, 11184811, 3],"float32"), Tensor([128, 64, 3],"float32"), )
paddle.assign(Tensor([128, 64, 3],"float32"), Tensor([128, 11184811, 3],"float32"), )
paddle.assign(Tensor([128, 64, 3],"float32"), Tensor([128, 64, 524288],"float32"), )
paddle.assign(Tensor([128, 64, 3],"float32"), Tensor([22369622, 64, 3],"float32"), )
paddle.assign(Tensor([128, 64, 524288],"float32"), Tensor([128, 64, 3],"float32"), )
paddle.assign(Tensor([128, 64, 524288],"float32"), Tensor([128, 64, 524288],"float32"), )
paddle.assign(Tensor([13, 1, 330382100],"float32"), )
paddle.assign(Tensor([13, 165191050],"int64"), Tensor([13, 165191050],"int64"), )
paddle.assign(Tensor([13, 165191050],"int64"), Tensor([13, 8],"int64"), )
paddle.assign(Tensor([13, 330382100, 1],"float32"), )
paddle.assign(Tensor([13, 330382100],"float32"), )
paddle.assign(Tensor([13, 8],"int64"), Tensor([13, 165191050],"int64"), )
paddle.assign(Tensor([13, 8],"int64"), Tensor([268435457, 8],"int64"), )
paddle.assign(Tensor([1398102, 3072],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([1398102, 3072],"float32"), output=Tensor([1398102, 3072],"float32"), )
paddle.assign(Tensor([1536, 2796203],"float32"), Tensor([1536, 2796203],"float32"), )
paddle.assign(Tensor([1536, 2796203],"float32"), Tensor([1536, 384],"float32"), )
paddle.assign(Tensor([1536, 384],"float32"), Tensor([11184811, 384],"float32"), )
paddle.assign(Tensor([1536, 384],"float32"), Tensor([1536, 2796203],"float32"), )
paddle.assign(Tensor([16, 1, 268435456],"float32"), )
paddle.assign(Tensor([16, 268435456, 1],"float32"), )
paddle.assign(Tensor([165191050, 13],"int64"), )
paddle.assign(Tensor([16777216, 256, 1, 1],"float32"), Tensor([1024, 256, 1, 1],"float32"), )
paddle.assign(Tensor([16777216, 256, 1, 1],"float32"), Tensor([16777216, 256, 1, 1],"float32"), )
paddle.assign(Tensor([16777216, 4, 4, 4, 4],"float32"), Tensor([16777216, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([16777216, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([178956971, 3, 4],"float64"), )
paddle.assign(Tensor([192, 22369622],"float32"), Tensor([192, 22369622],"float32"), )
paddle.assign(Tensor([192, 22369622],"float32"), Tensor([192, 768],"float32"), )
paddle.assign(Tensor([192, 768],"float32"), Tensor([192, 22369622],"float32"), )
paddle.assign(Tensor([192, 768],"float32"), Tensor([5592406, 768],"float32"), )
paddle.assign(Tensor([2, 10, 214748365],"float32"), )
paddle.assign(Tensor([2, 10, 3, 71582789],"float32"), )
paddle.assign(Tensor([2, 10, 71582789, 3],"float32"), )
paddle.assign(Tensor([2, 1073741825],"int64"), Tensor([2, 1073741825],"int64"), )
paddle.assign(Tensor([2, 1073741825],"int64"), Tensor([2, 2],"int64"), )
paddle.assign(Tensor([2, 178956971, 3, 2],"float64"), )
paddle.assign(Tensor([2, 2],"int64"), Tensor([1073741825, 2],"int64"), )
paddle.assign(Tensor([2, 2],"int64"), Tensor([2, 1073741825],"int64"), )
paddle.assign(Tensor([2, 238609295, 3, 3],"float32"), )
paddle.assign(Tensor([2, 268435457, 4],"float64"), )
paddle.assign(Tensor([2, 3, 178956971, 2],"float64"), )
paddle.assign(Tensor([2, 3, 3, 119304648],"float64"), )
paddle.assign(Tensor([2, 3, 357913942],"float64"), )
paddle.assign(Tensor([2, 429496730, 5],"float32"), )
paddle.assign(Tensor([2147483649],"float64"), Tensor([100],"float64"), )
paddle.assign(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.assign(Tensor([214748365, 20],"float32"), Tensor([10, 20],"float32"), )
paddle.assign(Tensor([214748365, 20],"float32"), Tensor([214748365, 20],"float32"), )
paddle.assign(Tensor([22369622, 64, 3],"float32"), Tensor([1, 64, 3],"float32"), )
paddle.assign(Tensor([22369622, 64, 3],"float32"), Tensor([128, 64, 3],"float32"), )
paddle.assign(Tensor([22369622, 64, 3],"float32"), Tensor([22369622, 64, 3],"float32"), )
paddle.assign(Tensor([268435456, 16],"float32"), )
paddle.assign(Tensor([268435457, 8],"int64"), Tensor([13, 8],"int64"), )
paddle.assign(Tensor([268435457, 8],"int64"), Tensor([268435457, 8],"int64"), )
paddle.assign(Tensor([28388, 197, 768],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([28388, 197, 768],"float32"), Tensor([28388, 197, 768],"float32"), )
paddle.assign(Tensor([3, 1, 1431655765],"float32"), )
paddle.assign(Tensor([3, 1431655765, 1],"float32"), )
paddle.assign(Tensor([3072, 1398102],"float32"), output=Tensor([3072, 1398102],"float32"), )
paddle.assign(Tensor([3072, 1398102],"float32"), output=Tensor([3072, 768],"float32"), )
paddle.assign(Tensor([3072, 768],"float32"), output=Tensor([3072, 1398102],"float32"), )
paddle.assign(Tensor([3072, 768],"float32"), output=Tensor([5592406, 768],"float32"), )
paddle.assign(Tensor([390451573, 1, 1, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([390451573, 1, 1, 11],"float32"), Tensor([390451573, 1, 1, 11],"float32"), )
paddle.assign(Tensor([4194304, 1024],"float32"), output=Tensor([1024, 1024],"float32"), )
paddle.assign(Tensor([4194304, 1024],"float32"), output=Tensor([4194304, 1024],"float32"), )
paddle.assign(Tensor([42107523, 102],"float32"), output=Tensor([1024, 102],"float32"), )
paddle.assign(Tensor([42107523, 102],"float32"), output=Tensor([42107523, 102],"float32"), )
paddle.assign(Tensor([4294967295, 1, 1],"float32"), )
paddle.assign(Tensor([4294967295, 1],"float32"), )
paddle.assign(Tensor([4294967295],"bfloat16"), Tensor([100],"bfloat16"), )
paddle.assign(Tensor([4294967295],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.assign(Tensor([4294967295],"float16"), )
paddle.assign(Tensor([4294967295],"float16"), Tensor([100],"float16"), )
paddle.assign(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.assign(Tensor([4294967295],"float32"), )
paddle.assign(Tensor([4294967295],"float32"), Tensor([100],"float32"), )
paddle.assign(Tensor([4294967295],"float32"), Tensor([1000],"float32"), )
paddle.assign(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.assign(Tensor([4294967295],"int32"), )
paddle.assign(Tensor([477218589, 1, 1, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([477218589, 1, 1, 9],"float32"), Tensor([477218589, 1, 1, 9],"float32"), )
paddle.assign(Tensor([47721859, 10, 3, 3],"float32"), )
paddle.assign(Tensor([4971027, 4, 6, 6, 6],"float32"), Tensor([4971027, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([4971027, 4, 6, 6, 6],"float32"), Tensor([5, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 13421773, 4, 4, 4],"float32"), Tensor([5, 13421773, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 13421773, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), )
paddle.assign(Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), )
paddle.assign(Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), )
paddle.assign(Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 3976822, 6, 6, 6],"float32"), Tensor([5, 3976822, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 3976822, 6, 6, 6],"float32"), Tensor([5, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 13421773, 4, 4],"float32"), Tensor([5, 4, 13421773, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 13421773, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 13421773, 4],"float32"), Tensor([5, 4, 4, 13421773, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 13421773, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 13421773],"float32"), Tensor([5, 4, 4, 4, 13421773],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 13421773],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([16777216, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 13421773, 4, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 13421773, 4, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 13421773, 4],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 13421773],"float32"), )
paddle.assign(Tensor([5, 4, 5965233, 6, 6],"float32"), Tensor([5, 4, 5965233, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 5965233, 6, 6],"float32"), Tensor([5, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 5965233, 6],"float32"), Tensor([5, 4, 6, 5965233, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 5965233, 6],"float32"), Tensor([5, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 5965233],"float32"), Tensor([5, 4, 6, 6, 5965233],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 5965233],"float32"), Tensor([5, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 6],"float32"), Tensor([4971027, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 6],"float32"), Tensor([5, 3976822, 6, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 6],"float32"), Tensor([5, 4, 5965233, 6, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 6],"float32"), Tensor([5, 4, 6, 5965233, 6],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 6],"float32"), Tensor([5, 4, 6, 6, 5965233],"float32"), )
paddle.assign(Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5592406, 1, 768],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([5592406, 1, 768],"float32"), Tensor([5592406, 1, 768],"float32"), )
paddle.assign(Tensor([5592406, 3, 16, 16],"float32"), output=Tensor([5592406, 3, 16, 16],"float32"), )
paddle.assign(Tensor([5592406, 3, 16, 16],"float32"), output=Tensor([768, 3, 16, 16],"float32"), )
paddle.assign(Tensor([5592406, 768],"float32"), output=Tensor([3072, 768],"float32"), )
paddle.assign(Tensor([5592406, 768],"float32"), output=Tensor([5592406, 768],"float32"), )
paddle.assign(Tensor([5592406, 768],"float32"), Tensor([192, 768],"float32"), )
paddle.assign(Tensor([5592406, 768],"float32"), Tensor([5592406, 768],"float32"), )
paddle.assign(Tensor([613566757, 1, 1, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([613566757, 1, 1, 7],"float32"), Tensor([613566757, 1, 1, 7],"float32"), )
paddle.assign(Tensor([67108864, 64, 1],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([67108864, 64, 1],"float32"), Tensor([67108864, 64, 1],"float32"), )
paddle.assign(Tensor([7304367, 3, 14, 14],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([7304367, 3, 14, 14],"float32"), output=Tensor([7304367, 3, 14, 14],"float32"), )
paddle.assign(Tensor([768, 21846, 16, 16],"float32"), output=Tensor([768, 21846, 16, 16],"float32"), )
paddle.assign(Tensor([768, 21846, 16, 16],"float32"), output=Tensor([768, 3, 16, 16],"float32"), )
paddle.assign(Tensor([768, 3, 116509, 16],"float32"), output=Tensor([768, 3, 116509, 16],"float32"), )
paddle.assign(Tensor([768, 3, 116509, 16],"float32"), output=Tensor([768, 3, 16, 16],"float32"), )
paddle.assign(Tensor([768, 3, 16, 116509],"float32"), output=Tensor([768, 3, 16, 116509],"float32"), )
paddle.assign(Tensor([768, 3, 16, 116509],"float32"), output=Tensor([768, 3, 16, 16],"float32"), )
paddle.assign(Tensor([768, 3, 16, 16],"float32"), output=Tensor([5592406, 3, 16, 16],"float32"), )
paddle.assign(Tensor([768, 3, 16, 16],"float32"), output=Tensor([768, 21846, 16, 16],"float32"), )
paddle.assign(Tensor([768, 3, 16, 16],"float32"), output=Tensor([768, 3, 116509, 16],"float32"), )
paddle.assign(Tensor([768, 3, 16, 16],"float32"), output=Tensor([768, 3, 16, 116509],"float32"), )
paddle.assign(Tensor([8388608, 512, 1, 1],"float32"), Tensor([1024, 512, 1, 1],"float32"), )
paddle.assign(Tensor([8388608, 512, 1, 1],"float32"), Tensor([8388608, 512, 1, 1],"float32"), )
paddle.assign(Tensor([85381, 50304],"float32"), )
paddle.assign(Tensor([858993459, 5],"float32"), )
paddle.assign(Tensor([85899346, 10, 5],"float32"), )
paddle.assign(Tensor([95443718, 3, 3, 5],"float32"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 2147483649],"float64"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1],"float64"), Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1],"float64"), Tensor([2147483649, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649],"float64"), Tensor([1, 2147483649],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([1, 2147483649],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([1],"float64"), Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([1],"float64"), Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.atleast_1d(Tensor([1073741825, 2],"float64"), )
paddle.atleast_1d(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_1d(Tensor([1073741825, 2],"float64"), Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_1d(Tensor([1073741825, 2],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([2, 1073741825, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_1d(Tensor([2, 1073741825, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2, 1073741825],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float64"), Tensor([715827883, 3],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 357913942],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2],"float32"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1],"float64"), Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.atleast_1d(Tensor([2147483649, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([2147483649],"float64"), Tensor([1],"float64"), Tensor([1],"float64"), )
paddle.atleast_1d(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([2147483649],"float64"), Tensor([5],"float64"), Tensor([5],"float64"), )
paddle.atleast_1d(Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([268435457, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([268435457, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), Tensor([3, 715827883],"float64"), )
paddle.atleast_1d(Tensor([3, 2],"float64"), Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 357913942, 2],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 357913942, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 715827883],"float64"), )
paddle.atleast_1d(Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), )
paddle.atleast_1d(Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([4294967295],"float32"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([4294967295],"float32"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([5],"float64"), Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.atleast_1d(Tensor([5],"float64"), Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_1d(Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([53687092, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([53687092, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([715827883, 3, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_1d(Tensor([715827883, 3, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 2147483649],"float64"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1],"float64"), Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1],"float64"), Tensor([2147483649, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649],"float64"), Tensor([1, 2147483649],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([1, 2147483649],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([1],"float64"), Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([1],"float64"), Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.atleast_2d(Tensor([1073741825, 2],"float64"), )
paddle.atleast_2d(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_2d(Tensor([1073741825, 2],"float64"), Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_2d(Tensor([1073741825, 2],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([2, 1073741825, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_2d(Tensor([2, 1073741825, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2, 1073741825],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float64"), Tensor([715827883, 3],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 357913942],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2],"float32"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_2d(Tensor([2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1],"float64"), Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.atleast_2d(Tensor([2147483649, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([2147483649],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_2d(Tensor([2147483649],"float64"), Tensor([1],"float64"), Tensor([1],"float64"), )
paddle.atleast_2d(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([2147483649],"float64"), Tensor([5],"float64"), Tensor([5],"float64"), )
paddle.atleast_2d(Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([268435457, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([268435457, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), Tensor([3, 715827883],"float64"), )
paddle.atleast_2d(Tensor([3, 2],"float64"), Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 357913942, 2],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 357913942, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 715827883],"float64"), )
paddle.atleast_2d(Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), )
paddle.atleast_2d(Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([4294967295],"float32"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([4294967295],"float32"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([5],"float64"), Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.atleast_2d(Tensor([5],"float64"), Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_2d(Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([53687092, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([53687092, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([715827883, 3, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_2d(Tensor([715827883, 3, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), Tensor([1, 1, 1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), Tensor([1, 1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 2147483649],"float64"), Tensor([1, 1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 2147483649],"float64"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1],"float64"), Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1],"float64"), Tensor([2147483649, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), Tensor([1, 2147483649, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649],"float64"), Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649],"float64"), Tensor([1, 2147483649],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([1, 2147483649],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([1],"float64"), Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([1],"float64"), Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.atleast_3d(Tensor([1073741825, 2],"float64"), )
paddle.atleast_3d(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_3d(Tensor([1073741825, 2],"float64"), Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_3d(Tensor([1073741825, 2],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([2, 1073741825, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_3d(Tensor([2, 1073741825, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2, 1073741825],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float64"), Tensor([715827883, 3],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 357913942],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 357913942],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2],"float32"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1, 2, 1073741825],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1, 2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1073741825, 2, 1],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), Tensor([2147483649, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), Tensor([2147483649, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1],"float64"), Tensor([1, 1],"float64"), Tensor([1, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([2147483649],"float64"), Tensor([1, 2, 1],"float64"), )
paddle.atleast_3d(Tensor([2147483649],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_3d(Tensor([2147483649],"float64"), Tensor([1],"float64"), Tensor([1],"float64"), )
paddle.atleast_3d(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([2147483649],"float64"), Tensor([5],"float64"), Tensor([5],"float64"), )
paddle.atleast_3d(Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([268435457, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([268435457, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), Tensor([3, 715827883],"float64"), )
paddle.atleast_3d(Tensor([3, 2],"float64"), Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 357913942, 2],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 357913942, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 89478486],"float64"), Tensor([3, 4, 2, 89478486],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 178956971],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), Tensor([3, 4, 2],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), Tensor([3, 4, 35791395, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 715827883],"float64"), )
paddle.atleast_3d(Tensor([3, 715827883],"float64"), Tensor([3, 2],"float64"), Tensor([3, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), )
paddle.atleast_3d(Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), Tensor([3, 71582789, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([4294967295],"float32"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([4294967295],"float32"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([5],"float64"), Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.atleast_3d(Tensor([5],"float64"), Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.atleast_3d(Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([53687092, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([53687092, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), Tensor([53687092, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([715827883, 3, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_3d(Tensor([715827883, 3, 1],"float64"), Tensor([3],"float64"), )
paddle.autograd.hessian(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 2],"float32"), batch_axis=0, )
paddle.autograd.hessian(Tensor([4294967295, 1],"float32"), Tensor([5, 2],"float32"), batch_axis=0, )
paddle.autograd.hessian(Tensor([5, 1],"float32"), Tensor([2147483648, 2],"float32"), batch_axis=0, )
paddle.autograd.hessian(Tensor([5, 1],"float32"), Tensor([5, 858993459],"float32"), batch_axis=0, )
paddle.autograd.hessian(Tensor([5, 858993459],"float32"), Tensor([5, 2],"float32"), batch_axis=0, )
paddle.autograd.hessian(Tensor([5, 858993459],"float32"), Tensor([5, 858993459],"float32"), batch_axis=0, )
paddle.autograd.jacobian(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), batch_axis=0, )
paddle.autograd.jacobian(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), batch_axis=0, )
paddle.autograd.jacobian(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), batch_axis=0, )
paddle.autograd.jacobian(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), batch_axis=0, )
paddle.autograd.jacobian(Tensor([2],"float64"), Tensor([2147483649],"float64"), batch_axis=None, )
paddle.autograd.jacobian(Tensor([2147483649],"float64"), Tensor([2],"float64"), batch_axis=None, )
paddle.autograd.jacobian(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), batch_axis=None, )
paddle.autograd.jacobian(Tensor([2147483649],"float64"), Tensor([6],"float64"), batch_axis=None, )
paddle.autograd.jacobian(Tensor([6],"float64"), Tensor([2147483649],"float64"), batch_axis=None, )
paddle.autograd.jacobian(Tensor([715827883, 3],"float64"), Tensor([2, 3],"float64"), batch_axis=0, )
paddle.autograd.jacobian(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), batch_axis=0, )
paddle.bincount(x=Tensor([4294967295],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([143165577, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 357913942],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 89478486],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 71582789, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 53687092, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([35791395, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3, 715827883, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_invert(Tensor([1073741824, 4, 1],"int32"), )
paddle.bitwise_invert(Tensor([2, 107374183, 4, 5],"int32"), )
paddle.bitwise_invert(Tensor([2, 3, 143165577, 5],"int32"), )
paddle.bitwise_invert(Tensor([2, 3, 4, 178956971],"int32"), )
paddle.bitwise_invert(Tensor([3, 1431655765, 1],"int32"), )
paddle.bitwise_invert(Tensor([3, 4, 357913942],"int32"), )
paddle.bitwise_invert(Tensor([71582789, 3, 4, 5],"int32"), )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 286331153, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 286331153, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 357913942],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 357913942],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 286331153, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 286331153, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 4, 357913942],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 4, 357913942],"int32"), True, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([1],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([3, 4, 178956971],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([3, 715827883, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([536870913, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 178956971],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 4, 178956971],"int64"), out=Tensor([3, 4, 178956971],"int64"), )
paddle.bitwise_not(Tensor([3, 715827883, 1],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([3, 715827883, 1],"int64"), out=Tensor([3, 715827883, 1],"int64"), )
paddle.bitwise_not(Tensor([536870913, 4, 1],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([536870913, 4, 1],"int64"), out=Tensor([536870913, 4, 1],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([143165577, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 357913942],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 89478486],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 71582789, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 53687092, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([35791395, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 715827883, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([1],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([143165577, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 214748365, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 357913942],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 89478486],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 71582789, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 53687092, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([35791395, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 71582789, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 178956971],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([3, 715827883, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([536870913, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 5],"int64"), )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"bool"),Tensor([1, 119304648, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"float32"),Tensor([1, 119304648, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"int32"),Tensor([1, 119304648, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 119304648, 6, 6, 1],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 178956971, 2, 6, 1],"float64"),Tensor([1, 178956971, 1, 1, 3],"float64"),Tensor([1, 178956971, 1, 6, 3],"float64"),Tensor([1, 178956971, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 178956971, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 178956971, 2, 6, 1],"int64"),Tensor([1, 178956971, 1, 1, 3],"int64"),Tensor([1, 178956971, 1, 6, 3],"int64"),Tensor([1, 178956971, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 178956971, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"bool"),Tensor([1, 357913942, 1, 1, 3],"bool"),Tensor([1, 357913942, 1, 6, 3],"bool"),Tensor([1, 357913942, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"float32"),Tensor([1, 357913942, 1, 1, 3],"float32"),Tensor([1, 357913942, 1, 6, 3],"float32"),Tensor([1, 357913942, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"int32"),Tensor([1, 357913942, 1, 1, 3],"int32"),Tensor([1, 357913942, 1, 6, 3],"int32"),Tensor([1, 357913942, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 357913942, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 59652324, 6, 6, 1],"float64"),Tensor([1, 59652324, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 59652324, 6, 6, 1],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 59652324, 6, 6, 1],"int64"),Tensor([1, 59652324, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 59652324, 6, 6, 1],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 119304648, 1, 3],"bool"),Tensor([1, 1, 119304648, 6, 3],"bool"),Tensor([1, 6, 119304648, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"bool"),Tensor([1, 6, 119304648, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"float32"),Tensor([1, 6, 119304648, 1, 3],"float32"),Tensor([1, 1, 119304648, 6, 3],"float32"),Tensor([1, 6, 119304648, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"float32"),Tensor([1, 6, 119304648, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"int32"),Tensor([1, 6, 119304648, 1, 3],"int32"),Tensor([1, 1, 119304648, 6, 3],"int32"),Tensor([1, 6, 119304648, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 119304648, 6, 1],"int32"),Tensor([1, 6, 119304648, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 178956971, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 178956971, 1],"float64"),Tensor([1, 6, 1, 178956971, 3],"float64"),Tensor([1, 1, 1, 178956971, 3],"float64"),Tensor([1, 6, 1, 178956971, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 178956971, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 178956971, 1],"int64"),Tensor([1, 6, 1, 178956971, 3],"int64"),Tensor([1, 1, 1, 178956971, 3],"int64"),Tensor([1, 6, 1, 178956971, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"bool"),Tensor([1, 6, 1, 357913942, 3],"bool"),Tensor([1, 1, 1, 357913942, 3],"bool"),Tensor([1, 6, 1, 357913942, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"float32"),Tensor([1, 6, 1, 357913942, 3],"float32"),Tensor([1, 1, 1, 357913942, 3],"float32"),Tensor([1, 6, 1, 357913942, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 357913942, 1],"int32"),Tensor([1, 6, 1, 357913942, 3],"int32"),Tensor([1, 1, 1, 357913942, 3],"int32"),Tensor([1, 6, 1, 357913942, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 1431655765, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 1431655765, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 238609295, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 238609295, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 119304648],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 39768216, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([39768216, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 715827883],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 238609295, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 238609295, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([238609295, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 715827883],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 238609295, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 238609295, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([238609295, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 1431655765, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 1431655765, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 238609295, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 238609295, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 119304648],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 39768216, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([39768216, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 715827883],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 238609295, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 238609295, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([238609295, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 715827883],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 238609295, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([1, 6, 238609295, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float32"),Tensor([238609295, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 119304648, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 119304648, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 59652324],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 19884108, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([19884108, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 357913942],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 715827883, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 119304648, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 119304648, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([119304648, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 357913942],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 119304648, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 6, 119304648, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([1, 715827883, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"float64"),Tensor([119304648, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 1431655765, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 1431655765, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 238609295, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 238609295, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 119304648],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 39768216, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([39768216, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 715827883],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 238609295, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 238609295, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([238609295, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 715827883],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 238609295, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([1, 6, 238609295, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int32"),Tensor([238609295, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 119304648, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 119304648, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 59652324],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 19884108, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([19884108, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 357913942],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 715827883, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 119304648, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 119304648, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([119304648, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 357913942],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 119304648, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 6, 119304648, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([1, 715827883, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"int64"),Tensor([119304648, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 29826162],"float64"),Tensor([1, 6, 1, 1, 29826162],"float64"),Tensor([1, 1, 1, 6, 29826162],"float64"),Tensor([1, 6, 1, 6, 29826162],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 29826162],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 29826162],"int64"),Tensor([1, 6, 1, 1, 29826162],"int64"),Tensor([1, 1, 1, 6, 29826162],"int64"),Tensor([1, 6, 1, 6, 29826162],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 29826162],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"bool"),Tensor([1, 6, 1, 1, 59652324],"bool"),Tensor([1, 1, 1, 6, 59652324],"bool"),Tensor([1, 6, 1, 6, 59652324],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"float32"),Tensor([1, 6, 1, 1, 59652324],"float32"),Tensor([1, 1, 1, 6, 59652324],"float32"),Tensor([1, 6, 1, 6, 59652324],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 59652324],"int32"),Tensor([1, 6, 1, 1, 59652324],"int32"),Tensor([1, 1, 1, 6, 59652324],"int32"),Tensor([1, 6, 1, 6, 59652324],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"float64"),Tensor([1, 6, 59652324, 1, 3],"float64"),Tensor([1, 1, 59652324, 6, 3],"float64"),Tensor([1, 6, 59652324, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"float64"),Tensor([1, 6, 59652324, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"int64"),Tensor([1, 6, 59652324, 1, 3],"int64"),Tensor([1, 1, 59652324, 6, 3],"int64"),Tensor([1, 6, 59652324, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 59652324, 6, 1],"int64"),Tensor([1, 6, 59652324, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"bool"),Tensor([1, 6, 1, 119304648, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"float32"),Tensor([1, 6, 1, 119304648, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"int32"),Tensor([1, 6, 1, 119304648, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 119304648, 1],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 59652324, 1],"float64"),Tensor([1, 6, 1, 59652324, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 59652324, 1],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 59652324, 1],"int64"),Tensor([1, 6, 1, 59652324, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 59652324, 1],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 238609295, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 238609295, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 119304648],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 39768216, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([39768216, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 238609295, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 6, 1, 238609295, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 6, 1, 6, 119304648],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([1, 6, 39768216, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float32"),Tensor([39768216, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 119304648, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 6, 1, 119304648, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 6, 1, 6, 59652324],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([1, 6, 19884108, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"float64"),Tensor([19884108, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 238609295, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 6, 1, 238609295, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 6, 1, 6, 119304648],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([1, 6, 39768216, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int32"),Tensor([39768216, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 119304648, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 6, 1, 119304648, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 6, 1, 6, 59652324],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([1, 6, 19884108, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"int64"),Tensor([19884108, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"bool"),Tensor([1, 6, 1, 6, 19884108],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"float32"),Tensor([1, 6, 1, 6, 19884108],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"int32"),Tensor([1, 6, 1, 6, 19884108],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 19884108],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 9942054],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 9942054],"float64"),Tensor([1, 6, 1, 6, 9942054],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 9942054],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 9942054],"int64"),Tensor([1, 6, 1, 6, 9942054],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"bool"),Tensor([119304648, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"float32"),Tensor([119304648, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"int32"),Tensor([119304648, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6, 1],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"bool"),Tensor([119304648, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"float32"),Tensor([119304648, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"int32"),Tensor([119304648, 1, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([119304648, 6, 6],"int32"),Tensor([6, 1, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"bool"),Tensor([19884108, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"float32"),Tensor([19884108, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([19884108, 6, 6, 6, 1],"int32"),Tensor([19884108, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([29826162, 6, 2, 6, 1],"float64"),Tensor([1, 6, 1, 1, 3],"float64"),Tensor([1, 1, 1, 6, 3],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([29826162, 6, 2, 6, 1],"float64"),Tensor([29826162, 6, 1, 1, 3],"float64"),Tensor([29826162, 1, 1, 6, 3],"float64"),Tensor([29826162, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([29826162, 6, 2, 6, 1],"int64"),Tensor([1, 6, 1, 1, 3],"int64"),Tensor([1, 1, 1, 6, 3],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([29826162, 6, 2, 6, 1],"int64"),Tensor([29826162, 6, 1, 1, 3],"int64"),Tensor([29826162, 1, 1, 6, 3],"int64"),Tensor([29826162, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([357913942, 6],"float64"),Tensor([357913942, 1],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([357913942, 6],"float64"),Tensor([6, 1],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([357913942, 6],"int64"),Tensor([357913942, 1],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([357913942, 6],"int64"),Tensor([6, 1],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"bool"),Tensor([59652324, 6, 1, 1, 3],"bool"),Tensor([59652324, 1, 1, 6, 3],"bool"),Tensor([59652324, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"float32"),Tensor([1, 6, 1, 1, 3],"float32"),Tensor([1, 1, 1, 6, 3],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"float32"),Tensor([59652324, 6, 1, 1, 3],"float32"),Tensor([59652324, 1, 1, 6, 3],"float32"),Tensor([59652324, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"int32"),Tensor([1, 6, 1, 1, 3],"int32"),Tensor([1, 1, 1, 6, 3],"int32"),Tensor([1, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 2, 6, 1],"int32"),Tensor([59652324, 6, 1, 1, 3],"int32"),Tensor([59652324, 1, 1, 6, 3],"int32"),Tensor([59652324, 6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6, 1],"float64"),Tensor([59652324, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6, 1],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6, 1],"int64"),Tensor([59652324, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6, 1],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6],"float64"),Tensor([59652324, 1, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6],"float64"),Tensor([6, 1, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6],"int64"),Tensor([59652324, 1, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([59652324, 6, 6],"int64"),Tensor([6, 1, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"bool"),Tensor([6, 119304648, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"float32"),Tensor([6, 119304648, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6, 1],"int32"),Tensor([6, 119304648, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6],"bool"),Tensor([6, 119304648, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6],"float32"),Tensor([6, 119304648, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6],"int32"),Tensor([6, 1, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 119304648, 6],"int32"),Tensor([6, 119304648, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 357913942],"float64"),Tensor([6, 1],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 357913942],"float64"),Tensor([6, 357913942],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 357913942],"int64"),Tensor([6, 1],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 357913942],"int64"),Tensor([6, 357913942],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6, 1],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6, 1],"float64"),Tensor([6, 59652324, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6, 1],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6, 1],"int64"),Tensor([6, 59652324, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6],"float64"),Tensor([6, 1, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6],"float64"),Tensor([6, 59652324, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6],"int64"),Tensor([6, 1, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 59652324, 6],"int64"),Tensor([6, 59652324, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"bool"),Tensor([6, 1, 119304648, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"float32"),Tensor([6, 1, 119304648, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"int32"),Tensor([6, 1, 119304648, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648, 1],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"bool"),Tensor([6, 1, 119304648],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"float32"),Tensor([6, 1, 119304648],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"int32"),Tensor([6, 1, 119304648],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 119304648],"int32"),Tensor([6, 1, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324, 1],"float64"),Tensor([6, 1, 59652324, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324, 1],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324, 1],"int64"),Tensor([6, 1, 59652324, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324, 1],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324],"float64"),Tensor([6, 1, 59652324],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324],"float64"),Tensor([6, 1, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324],"int64"),Tensor([6, 1, 59652324],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 59652324],"int64"),Tensor([6, 1, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([238609295, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 1, 238609295, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 1, 6, 119304648],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 39768216, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([238609295, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([6, 1, 238609295, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([6, 1, 6, 119304648],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float32"),Tensor([6, 39768216, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([119304648, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([6, 1, 119304648, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([6, 1, 6, 59652324],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"float64"),Tensor([6, 19884108, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([238609295, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([6, 1, 238609295, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([6, 1, 6, 119304648],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int32"),Tensor([6, 39768216, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([119304648, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([6, 1, 119304648, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([6, 1, 6, 59652324],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"int64"),Tensor([6, 19884108, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"bool"),Tensor([6, 1, 6, 19884108],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"float32"),Tensor([6, 1, 6, 19884108],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"int32"),Tensor([6, 1, 6, 19884108],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 19884108],"int32"),Tensor([6, 1, 6, 3],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 9942054],"float64"),Tensor([6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 9942054],"float64"),Tensor([6, 1, 6, 9942054],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 9942054],"int64"),Tensor([6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 9942054],"int64"),Tensor([6, 1, 6, 9942054],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"bool"),Tensor([6, 1, 715827883],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"bool"),Tensor([6, 119304648, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"bool"),Tensor([715827883, 1, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float32"),Tensor([6, 1, 715827883],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float32"),Tensor([6, 119304648, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float32"),Tensor([715827883, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float64"),Tensor([357913942, 1, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float64"),Tensor([6, 1, 357913942],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"float64"),Tensor([6, 59652324, 6],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int32"),Tensor([6, 1, 715827883],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int32"),Tensor([6, 119304648, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int32"),Tensor([715827883, 1, 6],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int64"),Tensor([357913942, 1, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int64"),Tensor([6, 1, 357913942],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6],"int64"),Tensor([6, 59652324, 6],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"bool"),Tensor([4294967295, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"bool"),Tensor([6, 715827883],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float32"),Tensor([6, 715827883],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float64"),Tensor([2147483649, 1],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"float64"),Tensor([6, 357913942],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int32"),Tensor([4294967295, 1],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int32"),Tensor([6, 715827883],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int64"),Tensor([2147483649, 1],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6],"int64"),Tensor([6, 357913942],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 715827883],"bool"),Tensor([6, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 715827883],"bool"),Tensor([6, 715827883],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 715827883],"float32"),Tensor([6, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 715827883],"float32"),Tensor([6, 715827883],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 715827883],"int32"),Tensor([6, 1],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 715827883],"int32"),Tensor([6, 715827883],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"bool"),Tensor([6, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"bool"),Tensor([715827883, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"float32"),Tensor([6, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"float32"),Tensor([715827883, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"int32"),Tensor([6, 1],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([715827883, 6],"int32"),Tensor([715827883, 1],"int32"),], )
paddle.broadcast_tensors(input=list[Tensor([9942054, 6, 6, 6, 1],"float64"),Tensor([1, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([9942054, 6, 6, 6, 1],"float64"),Tensor([9942054, 6, 1, 6, 3],"float64"),], )
paddle.broadcast_tensors(input=list[Tensor([9942054, 6, 6, 6, 1],"int64"),Tensor([1, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(input=list[Tensor([9942054, 6, 6, 6, 1],"int64"),Tensor([9942054, 6, 1, 6, 3],"int64"),], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2],"float32"),Tensor([2147483648, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2147483649],"float64"),Tensor([1, 2147483649],"float64"),], )
paddle.broadcast_tensors(list[Tensor([1, 2147483649],"float64"),Tensor([1, 4],"float64"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"bool"),Tensor([3, 1431655765],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"bool"),Tensor([4294967295, 1],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1073741824, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([3, 1431655765],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1431655765],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([3, 1431655765],"float32"),Tensor([3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float32"),Tensor([4294967295, 1],"float32"),Tensor([3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float64"),Tensor([1, 2147483649],"float64"),], )
paddle.broadcast_tensors(list[Tensor([1, 4],"float64"),Tensor([536870913, 4],"float64"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"bool"),Tensor([3, 1],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"bool"),Tensor([3, 4294967295],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([1, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([1, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 1],"float32"),Tensor([3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 4294967295],"float32"),Tensor([3, 4294967295],"float32"),Tensor([3, 4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float64"),Tensor([2147483649],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([10, 10, 21474837],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([10, 21474837, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([21474837, 10, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 10, 21474837],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 10, 21474837],"float64"),Tensor([10, 10, 21474837],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 21474837, 10],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 21474837, 10],"float64"),Tensor([10, 21474837, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 1, 4, 1],"float32"),Tensor([1, 4, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 1, 4, 1],"float32"),Tensor([1073741824, 4, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"bool"),Tensor([1073741824, 1],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"bool"),Tensor([3, 1],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"float32"),Tensor([1073741824, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"float32"),Tensor([1073741824, 1],"float32"),Tensor([1073741824, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"float32"),Tensor([3, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1073741824, 4],"float32"),Tensor([3, 1],"float32"),Tensor([3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float64"),Tensor([12, 1, 10, 17895698],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float64"),Tensor([12, 1, 178956971, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float64"),Tensor([12, 17895698, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float64"),Tensor([214748365, 1, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 17895698],"float64"),Tensor([12, 1, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 17895698],"float64"),Tensor([12, 1, 10, 17895698],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 178956971, 1],"float64"),Tensor([12, 1, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 178956971, 1],"float64"),Tensor([12, 1, 178956971, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 17895698, 10, 1],"float64"),Tensor([12, 1, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([12, 17895698, 10, 1],"float64"),Tensor([12, 17895698, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 1, 2],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 1, 2147483648],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 1073741824, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 1073741825, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 1073741825, 1],"float64"),Tensor([6, 2, 1, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 2],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 2147483648],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([107374183, 2, 1, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 1073741825, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 17895698],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 35791395, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([17895698, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 1, 536870913],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 2, 17895698, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([2, 35791395, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([35791395, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([6, 2, 1, 178956971],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([6, 2, 17895698, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 1],"float64"),Tensor([6, 35791395, 1, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 17895698],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2, 60, 17895698],"float64"),Tensor([6, 2, 1, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([1, 4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([2, 2147483648],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([2147483648, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2],"float64"),Tensor([1073741825, 2],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2],"float64"),Tensor([2, 1073741825],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2],"float64"),Tensor([2147483649],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2147483649],"float64"),Tensor([2, 2],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2],"float64"),Tensor([2147483649],"float64"),Tensor([2],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2147483648, 1, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2147483648, 2],"float32"),Tensor([1, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2147483648, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2147483648, 2],"float32"),Tensor([2147483648, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2],"float64"),Tensor([2, 2],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2],"float64"),Tensor([2],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),], )
paddle.broadcast_tensors(list[Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),], )
paddle.broadcast_tensors(list[Tensor([214748365, 1, 10, 1],"float64"),Tensor([12, 1, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([214748365, 1, 10, 1],"float64"),Tensor([214748365, 1, 10, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([21474837, 10, 10],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([21474837, 10, 10],"float64"),Tensor([21474837, 10, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([3],"float32"),Tensor([3],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([3],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([35791395, 60, 1],"float64"),Tensor([2, 2, 1, 30],"float64"),Tensor([1, 2, 60, 1],"float64"),], )
paddle.broadcast_tensors(list[Tensor([35791395, 60, 1],"float64"),Tensor([6, 2, 1, 10],"float64"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 1073741824, 1],"float32"),Tensor([1, 4, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 1073741824, 1],"float32"),Tensor([1, 4, 1073741824, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 1],"float32"),Tensor([1, 1073741824, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 1],"float32"),Tensor([1, 4, 1, 1073741824],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 1],"float32"),Tensor([1, 4, 268435456, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 1],"float32"),Tensor([268435456, 4, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 268435456],"float32"),Tensor([1, 4, 1, 268435456],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 1, 4, 268435456],"float32"),Tensor([1, 4, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 1073741824, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 1431655765],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([357913942, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([3, 1431655765],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 4],"float32"),Tensor([4294967295, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 1, 536870912],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 2, 134217728, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 268435456, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 268435456, 4, 1],"float32"),Tensor([1, 268435456, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4, 268435456, 4, 1],"float32"),Tensor([1, 4, 1, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295, 1],"float32"),Tensor([1, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295, 1],"float32"),Tensor([4294967295, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([1, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([2, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([3],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([3],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.broadcast_tensors(list[Tensor([536870912, 2, 1, 4],"float32"),Tensor([3, 1],"float32"),Tensor([1, 3, 4],"float32"),], )
paddle.broadcast_tensors(list[Tensor([536870913, 4],"float64"),Tensor([1, 4],"float64"),], )
paddle.broadcast_tensors(list[Tensor([536870913, 4],"float64"),Tensor([536870913, 4],"float64"),], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([1431655765, 3],"float32"),Tensor([2, 3],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([2, 2147483648],"float32"),Tensor([2, 3],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([2, 3],"float32"),Tensor([1431655765, 3],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float32"),Tensor([2, 3],"float32"),Tensor([2, 2147483648],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 1],"float64"),Tensor([2, 1073741825],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 1],"float64"),Tensor([2147483649, 1],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 1073741825],"float64"),Tensor([2, 1],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 1073741825],"float64"),Tensor([2, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 3],"float64"),Tensor([2, 1073741825],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2, 3],"float64"),Tensor([715827883, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([2147483649, 1],"float64"),Tensor([2, 1],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float64"),Tensor([715827883, 3],"float64"),Tensor([2, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1073741825],"float64"),Tensor([2, 1],"float64"),Tensor([2, 1],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1073741825],"float64"),Tensor([2, 1073741825],"float64"),Tensor([2, 1073741825],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1073741825],"float64"),Tensor([2, 3],"float64"),Tensor([2, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483648],"float32"),Tensor([2, 2147483648],"float32"),Tensor([2, 2147483648],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483648],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2, 1],"float64"),Tensor([2, 1],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2, 3],"float64"),Tensor([2, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2147483649, 1],"float64"),Tensor([2147483649, 1],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([2147483649, 1],"float64"),Tensor([2147483649, 3],"float64"),Tensor([2147483649, 3],"float64"),), )
paddle.broadcast_tensors(tuple(Tensor([4294967295, 1],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),), )
paddle.broadcast_tensors(tuple(Tensor([4294967295, 1],"float32"),Tensor([4294967295, 3],"float32"),Tensor([4294967295, 3],"float32"),), )
paddle.cartesian_prod(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([4294967295],"float32"),], )
paddle.cartesian_prod(list[Tensor([1],"float32"),Tensor([4294967295],"float32"),Tensor([1],"float32"),], )
paddle.cartesian_prod(list[Tensor([2],"float16"),Tensor([2],"float16"),Tensor([4294967295],"float16"),], )
paddle.cartesian_prod(list[Tensor([2],"float16"),Tensor([4294967295],"float16"),Tensor([1],"float16"),], )
paddle.cartesian_prod(list[Tensor([2],"float64"),Tensor([2147483649],"float64"),Tensor([3],"float64"),], )
paddle.cartesian_prod(list[Tensor([2],"float64"),Tensor([4],"float64"),Tensor([2147483649],"float64"),], )
paddle.cartesian_prod(list[Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2147483649],"int64"),], )
paddle.cartesian_prod(list[Tensor([2],"int64"),Tensor([2147483649],"int64"),Tensor([1],"int64"),], )
paddle.cartesian_prod(list[Tensor([2147483649],"float64"),], )
paddle.cartesian_prod(list[Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),Tensor([2147483649],"float64"),], )
paddle.cartesian_prod(list[Tensor([2147483649],"float64"),Tensor([4],"float64"),Tensor([3],"float64"),], )
paddle.cartesian_prod(list[Tensor([2147483649],"int64"),], )
paddle.cartesian_prod(list[Tensor([2147483649],"int64"),Tensor([2],"int64"),Tensor([1],"int64"),], )
paddle.cartesian_prod(list[Tensor([2147483649],"int64"),Tensor([2147483649],"int64"),Tensor([2147483649],"int64"),], )
paddle.cartesian_prod(list[Tensor([4294967295],"float16"),], )
paddle.cartesian_prod(list[Tensor([4294967295],"float16"),Tensor([2],"float16"),Tensor([1],"float16"),], )
paddle.cartesian_prod(list[Tensor([4294967295],"float16"),Tensor([4294967295],"float16"),Tensor([4294967295],"float16"),], )
paddle.cartesian_prod(list[Tensor([4294967295],"float32"),], )
paddle.cartesian_prod(list[Tensor([4294967295],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.cartesian_prod(list[Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),Tensor([4294967295],"float32"),], )
paddle.cast(Tensor([1, 1, 1, 2147483649],"int64"), "bool", )
paddle.cast(Tensor([1, 1, 1, 4294967295],"bool"), "bool", )
paddle.cast(Tensor([1, 1, 1, 4294967295],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 1, 4294967295],"float16"), "float32", )
paddle.cast(Tensor([1, 1, 1, 4294967295],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1, 1, 1, 4294967295],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1, 1, 4294967295],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 1, 1073741825, 2],"int64"), "bool", )
paddle.cast(Tensor([1, 1, 153391690, 28],"float32"), "float32", )
paddle.cast(Tensor([1, 1, 2097152, 2048],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1, 2147483648, 2],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 2147483649, 1],"int64"), "bool", )
paddle.cast(Tensor([1, 1, 214748365, 20],"bool"), "bool", )
paddle.cast(Tensor([1, 1, 214748365, 20],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 214748365, 20],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 1, 28, 153391690],"float32"), "float32", )
paddle.cast(Tensor([1, 1, 390451573, 11],"bool"), "bool", )
paddle.cast(Tensor([1, 1, 390451573, 11],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 4294967295, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 1, 4294967295, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 1, 4294967295],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1, 1, 4294967295],"bool"), "float32", )
paddle.cast(Tensor([1, 1, 4294967295],"float16"), "float32", )
paddle.cast(Tensor([1, 1, 4294967295],"float32"), "float32", )
paddle.cast(Tensor([1, 1, 4294967295],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1, 4294967295],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 1, 50, 85899346],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1, 1, 715827883, 3],"int64"), "bool", )
paddle.cast(Tensor([1, 1, 85899346, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1, 1024, 4194304],"bool"), "int64", )
paddle.cast(Tensor([1, 1024, 4194304],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 1024, 4194304],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1, 1024, 4194304],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 1073741824, 4],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 1073741825, 1, 2],"int64"), "bool", )
paddle.cast(Tensor([1, 1073741825, 2],"float64"), dtype="float64", )
paddle.cast(Tensor([1, 1073741825, 2],"int64"), dtype="float32", )
paddle.cast(Tensor([1, 128, 33554432],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 128, 33554432],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([1, 128, 33554432],"int32"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 14, 21913099, 14],"bool"), "int64", )
paddle.cast(Tensor([1, 14, 5, 61356676],"bool"), "int64", )
paddle.cast(Tensor([1, 153391690, 28],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([1, 157811, 27216],"bool"), "float32", )
paddle.cast(Tensor([1, 16, 268435456],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 16777216, 256],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 16777216, 256],"float32"), "float32", )
paddle.cast(Tensor([1, 16777216, 256],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([1, 16777216, 256],"int32"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 1717987, 50, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1, 176923, 24276],"bool"), "float32", )
paddle.cast(Tensor([1, 192, 11184811],"int64"), VarType(float32), )
paddle.cast(Tensor([1, 196, 10956550],"int64"), VarType(float32), )
paddle.cast(Tensor([1, 2, 1, 2147483648],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 2, 2, 536870913],"float64"), Dtype(float32), )
paddle.cast(Tensor([1, 2, 37025581, 58],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 2, 536870913, 2],"float64"), Dtype(float32), )
paddle.cast(Tensor([1, 200, 10737419],"int64"), VarType(float32), )
paddle.cast(Tensor([1, 2048, 2097152],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 2048, 2097152],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 2097152, 1, 2048],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 2147483648, 1, 2],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 2147483648, 2],"float32"), "float32", )
paddle.cast(Tensor([1, 2147483648, 2],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 2147483648, 2],"int32"), dtype="float32", )
paddle.cast(Tensor([1, 2147483649, 1, 1],"int64"), "bool", )
paddle.cast(Tensor([1, 2147483649],"float64"), dtype="float64", )
paddle.cast(Tensor([1, 2147483649],"int64"), "bool", )
paddle.cast(Tensor([1, 2147483649],"int64"), "int64", )
paddle.cast(Tensor([1, 214748365, 1, 20],"bool"), "bool", )
paddle.cast(Tensor([1, 214748365, 1, 20],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 214748365, 1, 20],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 214748365, 20],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 21913099, 14, 14],"float32"), VarType(float32), )
paddle.cast(Tensor([1, 22369622, 192],"float16"), "float32", )
paddle.cast(Tensor([1, 22369622, 192],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 256, 1, 16777216],"float16"), "float32", )
paddle.cast(Tensor([1, 256, 16777216, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 256, 3, 5592406],"float16"), "float32", )
paddle.cast(Tensor([1, 256, 5592406, 3],"float16"), "float32", )
paddle.cast(Tensor([1, 28, 153391690],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([1, 3, 1, 1431655765],"float16"), "float32", )
paddle.cast(Tensor([1, 3, 1431655765, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 3, 280, 5113057],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3, 298, 4804214],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3, 32, 44739243],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3, 3933121, 364],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3, 4090446, 350],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3, 55063684, 26],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3050403, 1408],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1, 31, 138547333],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 33554432, 128],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 33554432, 128],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1, 33554432, 128],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 33554432, 128],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([1, 33554432, 128],"int32"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 390451573, 1, 11],"bool"), "bool", )
paddle.cast(Tensor([1, 390451573, 1, 11],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 39596, 298, 364],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 4, 1073741824],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 4, 1073741824],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 4, 1073741824],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 4, 1073741824],"int32"), dtype="float32", )
paddle.cast(Tensor([1, 4, 536870913],"float64"), dtype="float64", )
paddle.cast(Tensor([1, 4, 536870913],"int64"), dtype="float32", )
paddle.cast(Tensor([1, 4025274, 1067],"bool"), "int64", )
paddle.cast(Tensor([1, 4096, 1048576],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 4141724, 1037],"bool"), "int64", )
paddle.cast(Tensor([1, 4194304, 1024],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1, 4194304, 1024],"bool"), "int64", )
paddle.cast(Tensor([1, 4294967295, 1, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 4294967295, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 4294967295, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 4294967295, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 4294967295, 1],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 4294967295],"bool"), "int32", )
paddle.cast(Tensor([1, 4294967295],"bool"), "int64", )
paddle.cast(Tensor([1, 4294967295],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 4294967295],"bool"), dtype="int", )
paddle.cast(Tensor([1, 4294967295],"bool"), dtype="int64", )
paddle.cast(Tensor([1, 4294967295],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 4294967295],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 4294967295],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 4294967295],"float16"), dtype="float32", )
paddle.cast(Tensor([1, 4294967295],"float32"), "float32", )
paddle.cast(Tensor([1, 4294967295],"float32"), dtype="float32", )
paddle.cast(Tensor([1, 4294967295],"float32"), dtype="int64", )
paddle.cast(Tensor([1, 4294967295],"int32"), Dtype(int64), )
paddle.cast(Tensor([1, 43827, 280, 350],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 477218589, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([1, 496, 8659209],"bool"), "int64", )
paddle.cast(Tensor([1, 512, 8388608],"bool"), "int64", )
paddle.cast(Tensor([1, 5162221, 32, 26],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 536870912, 8],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 536870913, 2, 2],"float64"), Dtype(float32), )
paddle.cast(Tensor([1, 536870913, 4],"int64"), VarType(float32), )
paddle.cast(Tensor([1, 5478275, 28, 28],"float32"), "float32", )
paddle.cast(Tensor([1, 5592406, 768],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1, 5592406, 768],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 58, 74051161],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1, 61356676, 5, 14],"bool"), "int64", )
paddle.cast(Tensor([1, 67108864, 64],"float16"), Dtype(float32), )
paddle.cast(Tensor([1, 67108864, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 7, 613566757],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 715827883, 1, 3],"int64"), "bool", )
paddle.cast(Tensor([1, 74051161, 1, 58],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 768, 14, 399458],"float32"), VarType(float32), )
paddle.cast(Tensor([1, 768, 399458, 14],"float32"), VarType(float32), )
paddle.cast(Tensor([1, 8, 536870912],"float32"), Dtype(float32), )
paddle.cast(Tensor([1, 800, 5368710],"bool"), "int64", )
paddle.cast(Tensor([1, 8388608, 512],"bool"), "int64", )
paddle.cast(Tensor([1, 85899346, 1, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([10, 20, 10737419],"float64"), "float64", )
paddle.cast(Tensor([10, 20, 21474837],"float32"), "float64", )
paddle.cast(Tensor([10, 214748365, 1],"float64"), "float64", )
paddle.cast(Tensor([10, 214748365],"float64"), type(numpy.float32), )
paddle.cast(Tensor([10, 214748365],"int64"), Dtype(bool), )
paddle.cast(Tensor([10, 214748365],"int64"), Dtype(float16), )
paddle.cast(Tensor([10, 214748365],"int64"), Dtype(float32), )
paddle.cast(Tensor([10, 214748365],"int64"), Dtype(float64), )
paddle.cast(Tensor([10, 214748365],"int64"), Dtype(int32), )
paddle.cast(Tensor([10, 214748365],"int64"), Dtype(int64), )
paddle.cast(Tensor([10, 4, 107374183],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([10, 429496730, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([10, 429496730, 1],"float32"), "float64", )
paddle.cast(Tensor([10, 429496730],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([10, 429496730],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([10, 429496730],"float16"), VarType(float32), )
paddle.cast(Tensor([10, 429496730],"float32"), "float32", )
paddle.cast(Tensor([10, 429496730],"float32"), Dtype(float16), )
paddle.cast(Tensor([10, 429496730],"float32"), type(numpy.float32), )
paddle.cast(Tensor([10, 429496730],"float32"), type(numpy.float64), )
paddle.cast(Tensor([10, 429496730],"float32"), VarType(bfloat16), )
paddle.cast(Tensor([10, 429496730],"float32"), VarType(float16), )
paddle.cast(Tensor([10, 429496730],"float32"), VarType(float32), )
paddle.cast(Tensor([10, 429496730],"float32"), VarType(float64), )
paddle.cast(Tensor([100, 21474837],"float64"), Dtype(float64), )
paddle.cast(Tensor([100, 4, 10737419],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([100, 4, 10737419],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([100, 42949673, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([100, 42949673, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([100, 42949673],"bool"), Dtype(float64), )
paddle.cast(Tensor([100, 42949673],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([100, 42949673],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([100, 42949673],"float16"), VarType(float32), )
paddle.cast(Tensor([100, 42949673],"float32"), Dtype(float16), )
paddle.cast(Tensor([1000, 4294968],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1000, 4294968],"float16"), Dtype(float32), )
paddle.cast(Tensor([1000, 4294968],"float32"), Dtype(float16), )
paddle.cast(Tensor([1000, 4294968],"float32"), Dtype(float32), )
paddle.cast(Tensor([10008, 429154],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([10080, 426089],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([101, 4, 10631108],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([101, 42524429, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([101, 42524429],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([10170, 422318],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([102, 4, 10526881],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([102, 42107523, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([102, 42107523],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([1020, 4210753],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1024, 21400, 14, 14],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1024, 256, 1, 1, 16384],"float16"), "float32", )
paddle.cast(Tensor([1024, 256, 1, 16384, 1],"float16"), "float32", )
paddle.cast(Tensor([1024, 256, 128, 128],"float32"), VarType(float32), )
paddle.cast(Tensor([1024, 256, 16384, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1024, 3, 14, 99865],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1024, 3, 99865, 14],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1024, 4194304, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1024, 4194304],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1024, 640, 1, 1, 6554],"float16"), "float32", )
paddle.cast(Tensor([1024, 640, 1, 6554, 1],"float16"), "float32", )
paddle.cast(Tensor([1024, 640, 6554, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([103884, 4, 76, 136],"bool"), dtype="int64", )
paddle.cast(Tensor([104, 1, 1, 41297763],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 1, 1877172, 22],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 1, 1966561, 21],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 1, 2294321, 18],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 1, 3176751, 13],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 1877172, 1, 22],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 1966561, 1, 21],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 2294321, 1, 18],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 3176751, 1, 13],"float32"), Dtype(float16), )
paddle.cast(Tensor([104, 41297763],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([104, 41297763],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([1040, 4129777],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([1048576, 1, 1, 4096],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1048576, 4096, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1048576, 4096],"float16"), Dtype(int8), )
paddle.cast(Tensor([105, 40904451],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([1073741824, 1, 2, 2],"bool"), Dtype(float64), )
paddle.cast(Tensor([1073741824, 1, 2, 2],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1073741824, 2, 2, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([1073741824, 2, 2, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1073741824, 4, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([1073741824, 4, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1073741824, 4],"bool"), Dtype(int64), )
paddle.cast(Tensor([1073741824, 4],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([1073741824, 4],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([1073741824, 4],"float16"), dtype="float32", )
paddle.cast(Tensor([1073741824, 4],"float32"), "complex64", )
paddle.cast(Tensor([1073741824, 4],"float32"), "float64", )
paddle.cast(Tensor([1073741824, 4],"float32"), dtype="float32", )
paddle.cast(Tensor([1073741825, 1, 1, 2],"int64"), "bool", )
paddle.cast(Tensor([1073741825, 1, 2],"float64"), dtype="float64", )
paddle.cast(Tensor([1073741825, 2],"float64"), dtype="float64", )
paddle.cast(Tensor([1073741825, 2],"int64"), "int64", )
paddle.cast(Tensor([107374183, 20, 1],"float64"), "float64", )
paddle.cast(Tensor([107374183, 20, 2],"bool"), dtype="bool", )
paddle.cast(Tensor([107374183, 40],"bool"), dtype="int", )
paddle.cast(Tensor([10737419, 20, 20],"int32"), "bool", )
paddle.cast(Tensor([10737419, 400],"float32"), "float32", )
paddle.cast(Tensor([11, 17, 22967740],"bool"), dtype="bool", )
paddle.cast(Tensor([11, 390451573],"bool"), dtype="bool", )
paddle.cast(Tensor([11, 39045158, 10],"bool"), dtype="bool", )
paddle.cast(Tensor([11008, 390168],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([11184811, 192],"int64"), "int32", )
paddle.cast(Tensor([1124, 3821146],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([1124, 3821146],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([114, 18837576],"float64"), dtype="float64", )
paddle.cast(Tensor([117, 36709123],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([12, 10, 35791395],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([12, 138512, 38, 68],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 178956971, 2],"bool"), dtype="bool", )
paddle.cast(Tensor([12, 178956971],"float64"), "int", )
paddle.cast(Tensor([12, 20, 17895698],"bool"), dtype="bool", )
paddle.cast(Tensor([12, 22369622, 16],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([12, 34628, 76, 136],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 357913942],"bool"), "bool", )
paddle.cast(Tensor([12, 357913942],"bool"), "float", )
paddle.cast(Tensor([12, 357913942],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([12, 357913942],"float32"), "int", )
paddle.cast(Tensor([12, 4, 1315861, 68],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 19, 4709394],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 2631721, 34],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 38, 2354697],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 657931, 136],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 4, 76, 1177349],"bool"), dtype="int64", )
paddle.cast(Tensor([12, 554047, 19, 34],"bool"), dtype="int64", )
paddle.cast(Tensor([1203073, 17, 5, 6, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([125696, 34170],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([128, 128, 1, 3, 87382],"float16"), "float32", )
paddle.cast(Tensor([128, 128, 1, 87382, 3],"float16"), "float32", )
paddle.cast(Tensor([128, 128, 29128, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([128, 32, 1, 1, 1048576],"float16"), "float32", )
paddle.cast(Tensor([128, 32, 1, 1048576, 1],"float16"), "float32", )
paddle.cast(Tensor([128, 32, 1048576, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([128, 320, 1, 1, 104858],"float16"), "float32", )
paddle.cast(Tensor([128, 320, 1, 104858, 1],"float16"), "float32", )
paddle.cast(Tensor([128, 320, 104858, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([128, 33554432, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([128, 3728271, 1, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([13, 330382100, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([13, 330382100],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([13, 330382100],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([13, 7, 47197443],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([131072, 1, 1, 32768],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([131072, 128, 256],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([131072, 128, 256],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([131072, 128, 256],"int32"), dtype=Dtype(int32), )
paddle.cast(Tensor([13199, 3, 298, 364],"bool"), Dtype(float32), )
paddle.cast(Tensor([134217728, 32, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([134217728, 32],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([134217728, 32],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([13421773, 320, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([134218, 32000],"bool"), dtype="int64", )
paddle.cast(Tensor([14, 306783379],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([14, 306783379],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1408, 15564, 14, 14],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1408, 3, 14, 72629],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1408, 3, 72629, 14],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([1431655765, 3, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1431655765, 3],"bool"), dtype="int", )
paddle.cast(Tensor([1431655765, 3],"float32"), "float16", )
paddle.cast(Tensor([1431655765, 3],"float32"), "float32", )
paddle.cast(Tensor([1431655765, 3],"float32"), "float64", )
paddle.cast(Tensor([1431655765, 3],"float32"), "int32", )
paddle.cast(Tensor([1431655765, 3],"float32"), "uint8", )
paddle.cast(Tensor([1431655765, 3],"float32"), dtype="float64", )
paddle.cast(Tensor([1431655765, 3],"float32"), dtype=Dtype(float64), )
paddle.cast(Tensor([14316558, 300],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([143166, 30000],"bool"), dtype="int64", )
paddle.cast(Tensor([14609, 3, 280, 350],"bool"), Dtype(float32), )
paddle.cast(Tensor([153391690, 28, 1],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([153391690, 28],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([157811, 1, 27216],"bool"), "float32", )
paddle.cast(Tensor([16, 134217729],"float64"), Dtype(int8), )
paddle.cast(Tensor([16, 268435456],"bfloat16"), VarType(bfloat16), )
paddle.cast(Tensor([16, 268435456],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([16, 268435456],"float16"), Dtype(int8), )
paddle.cast(Tensor([16, 268435456],"float32"), "bool", )
paddle.cast(Tensor([16384, 2048, 128],"float32"), Dtype(float16), )
paddle.cast(Tensor([16384, 512, 512, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([16384, 512, 512, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([16384, 512, 512],"bool"), "int64", )
paddle.cast(Tensor([1662140, 4, 19, 34],"bool"), dtype="int64", )
paddle.cast(Tensor([16777216, 1, 256],"float32"), "float32", )
paddle.cast(Tensor([16777216, 128, 2],"int32"), dtype=VarType(float32), )
paddle.cast(Tensor([16777216, 256, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([16777216, 256, 1, 1],"bool"), VarType(float32), )
paddle.cast(Tensor([16777216, 256, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([16777216, 256],"float16"), Dtype(int8), )
paddle.cast(Tensor([16913, 496, 512],"bool"), "int64", )
paddle.cast(Tensor([1717987, 1, 50, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([1720741, 3, 32, 26],"bool"), Dtype(float32), )
paddle.cast(Tensor([176923, 1, 24276],"bool"), "float32", )
paddle.cast(Tensor([178956971, 12],"int64"), Dtype(bool), )
paddle.cast(Tensor([178956971, 12],"int64"), Dtype(float16), )
paddle.cast(Tensor([178956971, 12],"int64"), Dtype(float32), )
paddle.cast(Tensor([178956971, 12],"int64"), Dtype(float64), )
paddle.cast(Tensor([178956971, 12],"int64"), Dtype(int32), )
paddle.cast(Tensor([178956971, 12],"int64"), Dtype(int64), )
paddle.cast(Tensor([17895698, 120],"int64"), "int32", )
paddle.cast(Tensor([1821, 3, 1024, 768],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([18518, 302, 768],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([1864136, 256, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([192, 22369622],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([192, 22369622],"float16"), "int8", )
paddle.cast(Tensor([195225787, 1, 1, 22],"float32"), Dtype(float16), )
paddle.cast(Tensor([195225787, 22],"bool"), dtype="float32", )
paddle.cast(Tensor([195225787, 22],"bool"), dtype="int64", )
paddle.cast(Tensor([2, 1, 1, 1, 2147483648],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1, 1, 2147483648],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 2, 1073741824],"float32"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1, 2, 536870913],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 2147483648, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1, 2147483648, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 2147483648],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 2147483648],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 1, 1, 2147483648],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 1, 1, 357913942, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1, 715827883, 3],"float32"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 1073741824, 2],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 1073741824, 2],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 1, 178956971, 2, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 18837576, 114],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 1, 2, 1073741824],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 2, 1073741824],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 1, 2, 536870913],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 2147483648, 1, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 2147483648, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 2147483648, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 2147483648],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 1, 32768, 65536],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 1, 357913942, 2, 3],"float32"), Dtype(float32), )
paddle.cast(Tensor([2, 1, 357913942, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 524288, 4096],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 1, 536870913, 2],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1, 65536, 32768],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 1024, 1024, 2048],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 1024, 2097152, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 1073741824, 2, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 1073741824, 2, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 1073741825],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 1073741825],"float64"), dtype="float64", )
paddle.cast(Tensor([2, 1073741825],"int64"), "bool", )
paddle.cast(Tensor([2, 1073741825],"int64"), "int32", )
paddle.cast(Tensor([2, 107374183, 20],"int32"), "bool", )
paddle.cast(Tensor([2, 107374183, 4, 5],"bool"), "int64", )
paddle.cast(Tensor([2, 107374183, 4, 5],"bool"), dtype="bool", )
paddle.cast(Tensor([2, 114, 18837576],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 131072, 128, 128],"float32"), VarType(float32), )
paddle.cast(Tensor([2, 178956971, 1, 2, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 178956971, 2, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 18837576, 1, 114],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 2, 1073741824, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 2, 1073741824, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 2, 2, 536870912],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 2, 2, 536870912],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 2, 32768, 32768],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 20, 107374183],"int32"), "bool", )
paddle.cast(Tensor([2, 20648882, 104],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 20849356, 103],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 2097152, 1024, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 21053762, 102],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 21262215, 101],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 2147483648, 1, 1, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 2147483648, 1, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 2147483648, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 2147483648, 1, 1],"bool"), VarType(float32), )
paddle.cast(Tensor([2, 2147483648],"bool"), "int32", )
paddle.cast(Tensor([2, 2147483648],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 2147483648],"bool"), dtype="int32", )
paddle.cast(Tensor([2, 2147483648],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([2, 2147483648],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 2147483648],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([2, 2147483648],"float16"), Dtype(int8), )
paddle.cast(Tensor([2, 2147483648],"float32"), "float16", )
paddle.cast(Tensor([2, 2147483648],"float32"), "float64", )
paddle.cast(Tensor([2, 2147483648],"float32"), "int32", )
paddle.cast(Tensor([2, 2147483648],"float32"), "uint8", )
paddle.cast(Tensor([2, 2147483648],"float32"), dtype="float64", )
paddle.cast(Tensor([2, 2147483648],"float32"), dtype=Dtype(bfloat16), )
paddle.cast(Tensor([2, 2147483648],"float32"), dtype=Dtype(float64), )
paddle.cast(Tensor([2, 21474837, 100],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 21913099, 7, 14],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 256, 1, 8388608],"bool"), VarType(float32), )
paddle.cast(Tensor([2, 256, 128, 65536],"float32"), VarType(float32), )
paddle.cast(Tensor([2, 256, 65536, 128],"float32"), VarType(float32), )
paddle.cast(Tensor([2, 256, 8388608, 1],"bool"), VarType(float32), )
paddle.cast(Tensor([2, 268435457, 2, 2],"float64"), Dtype(float64), )
paddle.cast(Tensor([2, 2796203, 768],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 3, 143165577, 5],"bool"), "int64", )
paddle.cast(Tensor([2, 3, 143165577, 5],"bool"), dtype="bool", )
paddle.cast(Tensor([2, 3, 4, 178956971],"bool"), "int64", )
paddle.cast(Tensor([2, 3, 4, 178956971],"bool"), dtype="bool", )
paddle.cast(Tensor([2, 3, 715827883],"float32"), "float64", )
paddle.cast(Tensor([2, 302, 7110874],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 32, 32, 2097152],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 32, 32, 2097152],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 32, 32, 2097152],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 32, 67108864, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 32, 67108864, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 32, 67108864, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 33554432, 64],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 357913942, 1, 2, 3],"float32"), Dtype(float32), )
paddle.cast(Tensor([2, 4194304, 512, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 4194304, 512, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 512, 1024, 4096],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 512, 4194304, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 512, 4194304, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 512, 512, 8192],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 512, 512, 8192],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([2, 52, 2949841, 14],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 52, 7, 5899681],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 524288, 1, 4096],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 536870912, 2, 2],"bool"), Dtype(float64), )
paddle.cast(Tensor([2, 536870912, 2, 2],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 536870912, 4],"float32"), "float64", )
paddle.cast(Tensor([2, 65536, 1, 32768],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([2, 67108864, 32, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([2, 67108864, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 67108864, 32, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([20, 107374183, 2],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([20, 500, 429497],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([20, 53687092, 4],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([204522253, 1, 1, 21],"float32"), Dtype(float16), )
paddle.cast(Tensor([2097152, 1, 1, 2048],"float32"), Dtype(float16), )
paddle.cast(Tensor([2097152, 2048, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([21262215, 101],"int64"), "bool", )
paddle.cast(Tensor([2147483648, 1, 1, 2],"bool"), dtype="float32", )
paddle.cast(Tensor([2147483648, 1, 2],"float32"), "float32", )
paddle.cast(Tensor([2147483648, 2],"float32"), dtype=Dtype(bfloat16), )
paddle.cast(Tensor([2147483649, 1, 1, 1],"int64"), "bool", )
paddle.cast(Tensor([2147483649, 1],"float64"), Dtype(float64), )
paddle.cast(Tensor([2147483649, 1],"float64"), dtype="float64", )
paddle.cast(Tensor([2147483649, 1],"int64"), "int64", )
paddle.cast(Tensor([2147483649],"float64"), dtype="float64", )
paddle.cast(Tensor([2147483649],"float64"), dtype="int32", )
paddle.cast(Tensor([2147483649],"float64"), dtype=Dtype(float64), )
paddle.cast(Tensor([2147483649],"float64"), type(numpy.float16), )
paddle.cast(Tensor([2147483649],"float64"), type(numpy.float32), )
paddle.cast(Tensor([2147483649],"float64"), type(numpy.float64), )
paddle.cast(Tensor([2147483649],"float64"), type(numpy.int32), )
paddle.cast(Tensor([2147483649],"float64"), type(numpy.int64), )
paddle.cast(Tensor([2147483649],"int64"), "bool", )
paddle.cast(Tensor([2147483649],"int64"), "int32", )
paddle.cast(Tensor([2147483649],"int64"), "int64", )
paddle.cast(Tensor([2147483649],"int64"), Dtype(float64), )
paddle.cast(Tensor([2147483649],"int64"), Dtype(int32), )
paddle.cast(Tensor([2147483649],"int64"), dtype="float32", )
paddle.cast(Tensor([2147483649],"int64"), dtype="int32", )
paddle.cast(Tensor([2147483649],"int64"), dtype="int64", )
paddle.cast(Tensor([2147483649],"int64"), dtype=Dtype(float16), )
paddle.cast(Tensor([2147483649],"int64"), dtype=Dtype(float32), )
paddle.cast(Tensor([2147483649],"int64"), VarType(int32), )
paddle.cast(Tensor([214748365, 1, 1, 20],"bool"), "bool", )
paddle.cast(Tensor([214748365, 1, 1, 20],"bool"), dtype="float32", )
paddle.cast(Tensor([214748365, 1, 1, 20],"float32"), dtype="float32", )
paddle.cast(Tensor([214748365, 10],"float64"), "int", )
paddle.cast(Tensor([214748365, 10],"float64"), type(numpy.float32), )
paddle.cast(Tensor([214748365, 20, 1],"float32"), "float64", )
paddle.cast(Tensor([214748365, 20],"bool"), "int64", )
paddle.cast(Tensor([214748365, 20],"bool"), dtype="float32", )
paddle.cast(Tensor([214748365, 20],"float32"), "float32", )
paddle.cast(Tensor([214748365, 20],"float32"), "float64", )
paddle.cast(Tensor([21474837, 100],"int64"), "bool", )
paddle.cast(Tensor([2147484, 500, 4],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([2164803, 31, 64],"float16"), Dtype(float32), )
paddle.cast(Tensor([22016, 195084],"float16"), "int8", )
paddle.cast(Tensor([2218475, 1, 44, 44],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([22369622, 1, 192],"float16"), "float32", )
paddle.cast(Tensor([22369622, 1, 192],"float32"), dtype="float32", )
paddle.cast(Tensor([224, 224, 85599],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([224, 6391321, 3],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([238609295, 1, 1, 18],"float32"), Dtype(float16), )
paddle.cast(Tensor([25, 1, 3904516, 44],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([25, 1, 44, 3904516],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([25, 88739, 44, 44],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([252645135, 17],"bool"), dtype="bool", )
paddle.cast(Tensor([25264514, 17, 10],"bool"), dtype="bool", )
paddle.cast(Tensor([262144, 128, 128],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([262144, 128, 128],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([262144, 128, 128],"int32"), dtype=Dtype(int32), )
paddle.cast(Tensor([268435456, 16],"bfloat16"), VarType(bfloat16), )
paddle.cast(Tensor([268435456, 4, 4],"float32"), dtype="float32", )
paddle.cast(Tensor([268435457, 2, 2, 2],"float64"), Dtype(float32), )
paddle.cast(Tensor([268435457, 4, 2],"float64"), dtype="float64", )
paddle.cast(Tensor([268435457, 4, 2],"int64"), dtype="float32", )
paddle.cast(Tensor([26843546, 10, 16],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([2684355, 200, 4],"int64"), VarType(float32), )
paddle.cast(Tensor([2739138, 196, 4],"int64"), VarType(float32), )
paddle.cast(Tensor([2796203, 192, 4],"int64"), VarType(float32), )
paddle.cast(Tensor([28, 153391690, 1],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([28, 153391690],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([28, 24, 6391321],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([28, 28, 5478275],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([28, 51130564, 3],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([28269, 151936],"float16"), Dtype(float32), )
paddle.cast(Tensor([28533, 768, 14, 14],"float32"), VarType(float32), )
paddle.cast(Tensor([3, 1, 715827883],"float64"), dtype="float64", )
paddle.cast(Tensor([3, 128, 11184811],"float32"), dtype="int32", )
paddle.cast(Tensor([3, 1431655765],"bool"), dtype="int", )
paddle.cast(Tensor([3, 1431655765],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([3, 14913081, 96],"float32"), dtype="int32", )
paddle.cast(Tensor([3, 357913942, 2],"float64"), dtype="float64", )
paddle.cast(Tensor([3, 4, 178956971],"float64"), dtype="float64", )
paddle.cast(Tensor([3, 4, 357913942],"bool"), dtype="float64", )
paddle.cast(Tensor([3, 4, 357913942],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([3, 715827883, 1],"float64"), dtype="float64", )
paddle.cast(Tensor([3, 715827883, 2],"bool"), dtype="float64", )
paddle.cast(Tensor([3, 715827883, 2],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([3, 715827883],"float64"), dtype="float64", )
paddle.cast(Tensor([30, 143165577],"bool"), dtype="int", )
paddle.cast(Tensor([300, 14316558],"bool"), dtype="int", )
paddle.cast(Tensor([3050403, 1, 1408],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([32, 134217728],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([32, 134217728],"float16"), Dtype(int8), )
paddle.cast(Tensor([32, 171, 1024, 768],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([32, 3, 1024, 43691],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([32, 3, 58255, 768],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([32768, 1024, 128],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([32768, 1024, 128],"float32"), Dtype(float16), )
paddle.cast(Tensor([32768, 2048, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([330382100, 1, 1, 13],"float32"), Dtype(float16), )
paddle.cast(Tensor([3314018, 8, 9, 18],"bool"), dtype="int", )
paddle.cast(Tensor([349526, 12288],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([349526, 128, 96],"float32"), dtype="int32", )
paddle.cast(Tensor([357913942, 1, 1, 2, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([357913942, 1, 2, 3],"float64"), Dtype(float64), )
paddle.cast(Tensor([357913942, 3, 4],"float32"), "float64", )
paddle.cast(Tensor([35791395, 120],"bool"), dtype="int", )
paddle.cast(Tensor([3579140, 1200],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([3579140, 1200],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([37025581, 2, 1, 58],"float32"), Dtype(float32), )
paddle.cast(Tensor([37025581, 58],"int64"), "bool", )
paddle.cast(Tensor([3728271, 128, 1, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([37675152, 1, 1, 114],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([390168, 11008],"float16"), "int8", )
paddle.cast(Tensor([390451573, 1, 1, 11],"bool"), "bool", )
paddle.cast(Tensor([390451573, 1, 1, 11],"bool"), dtype="float32", )
paddle.cast(Tensor([390451573, 11],"bool"), "int64", )
paddle.cast(Tensor([3965806, 1083],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([397683, 10800],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([4, 1, 32768, 32768],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([4, 1073741824],"bool"), Dtype(int64), )
paddle.cast(Tensor([4, 1073741824],"float32"), "complex64", )
paddle.cast(Tensor([4, 128, 8388608],"int32"), dtype=VarType(float32), )
paddle.cast(Tensor([4, 536870912, 2],"int32"), dtype=VarType(float32), )
paddle.cast(Tensor([4096, 1024, 1024, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([4096, 1024, 1024],"bool"), "int64", )
paddle.cast(Tensor([41297763, 1, 104],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([415535, 4, 38, 68],"bool"), dtype="int64", )
paddle.cast(Tensor([41698712, 1, 103],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([4194304, 1, 1024],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([4194304, 1024, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([4194304, 1024],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([4194304, 1024],"float32"), "bool", )
paddle.cast(Tensor([4194304, 16, 64],"float16"), Dtype(float32), )
paddle.cast(Tensor([4194304, 32, 32, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([4194304, 32, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([4194304, 32, 32, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([42107523, 1, 102],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([42524429, 1, 101],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([4294967295, 1, 1, 1, 1],"bool"), Dtype(float32), )
paddle.cast(Tensor([4294967295, 1, 1, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([4294967295, 1, 1, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([4294967295, 1, 1, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([4294967295, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([4294967295, 1],"bool"), "int32", )
paddle.cast(Tensor([4294967295, 1],"bool"), "int64", )
paddle.cast(Tensor([4294967295, 1],"bool"), Dtype(float64), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype="int", )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=VarType(float32), )
paddle.cast(Tensor([4294967295, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([4294967295, 1],"float32"), dtype="float32", )
paddle.cast(Tensor([4294967295, 1],"float32"), dtype="int64", )
paddle.cast(Tensor([4294967295, 1],"int32"), Dtype(int64), )
paddle.cast(Tensor([4294967295],"bfloat16"), Dtype(float16), )
paddle.cast(Tensor([4294967295],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([4294967295],"bool"), "float32", )
paddle.cast(Tensor([4294967295],"bool"), "int64", )
paddle.cast(Tensor([4294967295],"bool"), Dtype(float32), )
paddle.cast(Tensor([4294967295],"bool"), Dtype(int64), )
paddle.cast(Tensor([4294967295],"bool"), dtype="bool", )
paddle.cast(Tensor([4294967295],"bool"), dtype="float32", )
paddle.cast(Tensor([4294967295],"bool"), dtype="float64", )
paddle.cast(Tensor([4294967295],"bool"), dtype="int", )
paddle.cast(Tensor([4294967295],"bool"), dtype="int32", )
paddle.cast(Tensor([4294967295],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([4294967295],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([4294967295],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([4294967295],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([4294967295],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([4294967295],"bool"), type(numpy.float16), )
paddle.cast(Tensor([4294967295],"bool"), type(numpy.float32), )
paddle.cast(Tensor([4294967295],"bool"), type(numpy.float64), )
paddle.cast(Tensor([4294967295],"bool"), type(numpy.int32), )
paddle.cast(Tensor([4294967295],"bool"), type(numpy.int64), )
paddle.cast(Tensor([4294967295],"bool"), VarType(float32), )
paddle.cast(Tensor([4294967295],"float16"), "float32", )
paddle.cast(Tensor([4294967295],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([4294967295],"float16"), Dtype(float32), )
paddle.cast(Tensor([4294967295],"float16"), type(numpy.float16), )
paddle.cast(Tensor([4294967295],"float16"), type(numpy.float32), )
paddle.cast(Tensor([4294967295],"float16"), type(numpy.float64), )
paddle.cast(Tensor([4294967295],"float16"), type(numpy.int32), )
paddle.cast(Tensor([4294967295],"float16"), type(numpy.int64), )
paddle.cast(Tensor([4294967295],"float16"), VarType(float32), )
paddle.cast(Tensor([4294967295],"float32"), "bool", )
paddle.cast(Tensor([4294967295],"float32"), "float16", )
paddle.cast(Tensor([4294967295],"float32"), "float32", )
paddle.cast(Tensor([4294967295],"float32"), "float64", )
paddle.cast(Tensor([4294967295],"float32"), "int64", )
paddle.cast(Tensor([4294967295],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([4294967295],"float32"), Dtype(float16), )
paddle.cast(Tensor([4294967295],"float32"), Dtype(float32), )
paddle.cast(Tensor([4294967295],"float32"), Dtype(float64), )
paddle.cast(Tensor([4294967295],"float32"), Dtype(int64), )
paddle.cast(Tensor([4294967295],"float32"), dtype="float16", )
paddle.cast(Tensor([4294967295],"float32"), dtype="float32", )
paddle.cast(Tensor([4294967295],"float32"), dtype="int32", )
paddle.cast(Tensor([4294967295],"float32"), dtype="int64", )
paddle.cast(Tensor([4294967295],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([4294967295],"float32"), type(numpy.float16), )
paddle.cast(Tensor([4294967295],"float32"), type(numpy.float32), )
paddle.cast(Tensor([4294967295],"float32"), type(numpy.float64), )
paddle.cast(Tensor([4294967295],"float32"), type(numpy.int32), )
paddle.cast(Tensor([4294967295],"float32"), type(numpy.int64), )
paddle.cast(Tensor([4294967295],"int32"), "int64", )
paddle.cast(Tensor([4294967295],"int32"), dtype="float64", )
paddle.cast(Tensor([4294967295],"int32"), dtype=Dtype(float64), )
paddle.cast(Tensor([4294967295],"int32"), type(numpy.float16), )
paddle.cast(Tensor([4294967295],"int32"), type(numpy.float32), )
paddle.cast(Tensor([4294967295],"int32"), type(numpy.float64), )
paddle.cast(Tensor([4294967295],"int32"), type(numpy.int32), )
paddle.cast(Tensor([4294967295],"int32"), type(numpy.int64), )
paddle.cast(Tensor([42949673, 1, 100],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([42949673, 100],"float16"), VarType(float32), )
paddle.cast(Tensor([42949673, 100],"float32"), Dtype(float16), )
paddle.cast(Tensor([429496730, 10],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([429496730, 10],"bool"), "bool", )
paddle.cast(Tensor([429496730, 10],"bool"), "float", )
paddle.cast(Tensor([429496730, 10],"bool"), dtype="int32", )
paddle.cast(Tensor([429496730, 10],"float16"), Dtype(float32), )
paddle.cast(Tensor([429496730, 10],"float16"), VarType(float32), )
paddle.cast(Tensor([429496730, 10],"float32"), "float32", )
paddle.cast(Tensor([429496730, 10],"float32"), "int", )
paddle.cast(Tensor([429496730, 10],"float32"), Dtype(float16), )
paddle.cast(Tensor([429496730, 10],"float32"), Dtype(float32), )
paddle.cast(Tensor([429496730, 10],"float32"), type(numpy.float32), )
paddle.cast(Tensor([429496730, 10],"float32"), type(numpy.float64), )
paddle.cast(Tensor([429496730, 10],"float32"), VarType(bfloat16), )
paddle.cast(Tensor([429496730, 10],"float32"), VarType(float16), )
paddle.cast(Tensor([429496730, 10],"float32"), VarType(float32), )
paddle.cast(Tensor([429496730, 10],"float32"), VarType(float64), )
paddle.cast(Tensor([4294968, 1000],"float16"), Dtype(float32), )
paddle.cast(Tensor([4294968, 500, 2],"int32"), dtype=Dtype(float32), )
paddle.cast(Tensor([43826197, 7, 14],"bool"), dtype="int64", )
paddle.cast(Tensor([4382620, 14, 5, 14],"bool"), "int64", )
paddle.cast(Tensor([5, 6, 71582789],"float64"), dtype=Dtype(float64), )
paddle.cast(Tensor([5, 71582789, 6],"float64"), dtype=Dtype(float64), )
paddle.cast(Tensor([5, 858993459],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([5, 858993459],"float32"), "float64", )
paddle.cast(Tensor([5, 858993459],"float32"), dtype=Dtype(float64), )
paddle.cast(Tensor([50000, 2, 42950],"float32"), dtype="float64", )
paddle.cast(Tensor([50000, 28634, 3],"float32"), dtype="float64", )
paddle.cast(Tensor([5032, 800, 1067],"bool"), "int64", )
paddle.cast(Tensor([51130564, 28, 3],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([5178, 800, 1037],"bool"), "int64", )
paddle.cast(Tensor([536870912, 4, 2],"bool"), dtype="float64", )
paddle.cast(Tensor([536870912, 4, 2],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([536870912, 4, 2],"float32"), dtype="float32", )
paddle.cast(Tensor([536870912, 4, 2],"int32"), dtype="float32", )
paddle.cast(Tensor([536870912, 8, 1],"float32"), Dtype(float32), )
paddle.cast(Tensor([536870912, 8],"bool"), Dtype(int64), )
paddle.cast(Tensor([536870913, 1, 2, 2],"float64"), Dtype(float64), )
paddle.cast(Tensor([536870913, 4, 1],"float64"), dtype="float64", )
paddle.cast(Tensor([536870913, 4],"float64"), dtype="float64", )
paddle.cast(Tensor([53687092, 4, 20],"float32"), Dtype(float32), )
paddle.cast(Tensor([5462, 1024, 768],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([5478275, 1, 28, 28],"float32"), "float32", )
paddle.cast(Tensor([5478275, 28, 28],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([5592406, 1, 768],"float32"), Dtype(float16), )
paddle.cast(Tensor([5592406, 768],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([588675, 114, 64],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([59652324, 24, 3],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([59652324, 6, 6],"float64"), dtype=Dtype(float64), )
paddle.cast(Tensor([6, 4418691, 9, 18],"bool"), dtype="int", )
paddle.cast(Tensor([6, 8, 4971027, 18],"bool"), dtype="int", )
paddle.cast(Tensor([6, 8, 9, 9942054],"bool"), dtype="int", )
paddle.cast(Tensor([613566757, 7, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([6391321, 224, 3],"uint8"), type(numpy.float32), )
paddle.cast(Tensor([64, 67108864],"float16"), "int8", )
paddle.cast(Tensor([67108864, 1, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([67108864, 64],"float16"), "int8", )
paddle.cast(Tensor([67108864, 64],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([67108864, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([6710887, 640, 1, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([7, 43826197, 14],"bool"), dtype="int64", )
paddle.cast(Tensor([7, 7, 87652394],"bool"), dtype="int64", )
paddle.cast(Tensor([715827883, 1, 1, 2, 3],"float32"), Dtype(float32), )
paddle.cast(Tensor([715827883, 1, 1, 3],"int64"), "bool", )
paddle.cast(Tensor([715827883, 2, 3],"float32"), dtype="float64", )
paddle.cast(Tensor([715827883, 6],"float32"), dtype=Dtype(float64), )
paddle.cast(Tensor([71582789, 3, 4, 5],"bool"), "int64", )
paddle.cast(Tensor([71582789, 3, 4, 5],"bool"), dtype="bool", )
paddle.cast(Tensor([7304367, 3, 14, 14],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([74051161, 58, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([76695845, 7, 8],"float32"), Dtype(float32), )
paddle.cast(Tensor([8, 16, 33554432],"float32"), "float64", )
paddle.cast(Tensor([8, 16777216, 32],"float32"), "float64", )
paddle.cast(Tensor([8, 17, 5, 6, 1052689],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 17, 5, 902305, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 17, 751921, 6, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 2556529, 5, 6, 7],"bool"), dtype="bool", )
paddle.cast(Tensor([8, 536870912],"bool"), Dtype(int64), )
paddle.cast(Tensor([8, 536870912],"bool"), dtype=Dtype(float64), )
paddle.cast(Tensor([8, 536870912],"float32"), "float64", )
paddle.cast(Tensor([8192, 512, 1024, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([8388608, 16, 32],"float32"), "float64", )
paddle.cast(Tensor([8388609, 256],"float64"), Dtype(int8), )
paddle.cast(Tensor([842812, 52, 7, 14],"float32"), dtype=Dtype(float32), )
paddle.cast(Tensor([85381, 50304],"bool"), dtype="int64", )
paddle.cast(Tensor([85899346, 1, 1, 50],"float16"), dtype=Dtype(float16), )
paddle.cast(Tensor([894785, 4800],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([104, 41297763],"bool"), dtype="float32", )
paddle.cast(x=Tensor([1242, 1729053],"int64"), dtype="int32", )
paddle.cast(x=Tensor([128, 33554432],"bool"), dtype="float32", )
paddle.cast(x=Tensor([16, 268435456],"bool"), dtype="float32", )
paddle.cast(x=Tensor([2147483649, 1],"int64"), dtype="int32", )
paddle.cast(x=Tensor([238609295, 3, 3],"float64"), dtype="float64", )
paddle.cast(x=Tensor([27012373, 159],"bool"), dtype="float32", )
paddle.cast(x=Tensor([3, 238609295, 3],"float64"), dtype="float64", )
paddle.cast(x=Tensor([3, 3, 238609295],"float64"), dtype="float64", )
paddle.cast(x=Tensor([3, 3, 477218589],"float32"), dtype="float64", )
paddle.cast(x=Tensor([3, 477218589, 3],"float32"), dtype="float64", )
paddle.cast(x=Tensor([32, 134217728],"bool"), dtype="float32", )
paddle.cast(x=Tensor([40, 107374183],"bool"), dtype="float32", )
paddle.cast(x=Tensor([4294967295],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([4294967295],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([429497, 100, 100],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([429497, 100, 100],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([4316551, 995],"bool"), dtype="float32", )
paddle.cast(x=Tensor([45970, 93431],"bool"), dtype="float32", )
paddle.cast(x=Tensor([477218589, 3, 3],"float32"), dtype="float64", )
paddle.cast(x=Tensor([8, 100, 5368710],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([8, 100, 5368710],"bool"), dtype=Dtype(float32), )
paddle.cast(x=Tensor([8, 5368710, 100],"bool"), dtype=Dtype(float16), )
paddle.cast(x=Tensor([8, 5368710, 100],"bool"), dtype=Dtype(float32), )
paddle.clip(x=Tensor([2147483649],"float64"), )
paddle.count_nonzero(Tensor([1, 14, 10956550, 14],"float64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([1, 14, 10956550, 14],"float64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([1, 14, 5, 30678338],"float64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([1, 14, 5, 30678338],"float64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([1, 30678338, 5, 14],"float64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([1, 30678338, 5, 14],"float64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 107374183, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 143165577, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 178956971],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2191310, 14, 5, 14],"float64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([2191310, 14, 5, 14],"float64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([3, 1431655765],"float32"), keepdim=True, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([71582789, 3, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([858993459, 5],"float32"), keepdim=True, )
paddle.crop(x=Tensor([1431655765, 3],"float32"), shape=list[2,2,], )
paddle.crop(x=Tensor([1431655765, 3],"int32"), shape=list[2,2,], )
paddle.crop(x=Tensor([2, 119304648, 3, 3],"float64"), shape=list[2,1,-1,2,], offsets=list[0,0,1,1,], )
paddle.crop(x=Tensor([2, 3, 119304648, 3],"float64"), shape=list[2,1,-1,2,], offsets=list[0,0,1,1,], )
paddle.crop(x=Tensor([2, 3, 3, 119304648],"float64"), shape=list[2,1,-1,2,], offsets=list[0,0,1,1,], )
paddle.crop(x=Tensor([3, 1431655765],"float32"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 1431655765],"int32"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 715827883],"float64"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 715827883],"float64"), shape=list[2,2,], offsets=list[1,0,], )
paddle.crop(x=Tensor([3, 715827883],"float64"), shape=list[2,2,], offsets=tuple(0,0,), )
paddle.crop(x=Tensor([3, 715827883],"float64"), shape=list[2,2,], offsets=tuple(0,1,), )
paddle.crop(x=Tensor([3, 715827883],"float64"), shape=list[2,2,], offsets=tuple(1,1,), )
paddle.crop(x=Tensor([3, 715827883],"int64"), shape=list[2,2,], )
paddle.crop(x=Tensor([715827883, 3],"float64"), shape=list[2,2,], )
paddle.crop(x=Tensor([715827883, 3],"float64"), shape=list[2,2,], offsets=list[1,0,], )
paddle.crop(x=Tensor([715827883, 3],"float64"), shape=list[2,2,], offsets=tuple(0,0,), )
paddle.crop(x=Tensor([715827883, 3],"float64"), shape=list[2,2,], offsets=tuple(0,1,), )
paddle.crop(x=Tensor([715827883, 3],"float64"), shape=list[2,2,], offsets=tuple(1,1,), )
paddle.crop(x=Tensor([715827883, 3],"int64"), shape=list[2,2,], )
paddle.crop(x=Tensor([79536432, 3, 3, 3],"float64"), shape=list[2,1,-1,2,], offsets=list[0,0,1,1,], )
paddle.cummax(Tensor([100, 42949673],"float32"), )
paddle.cummax(Tensor([100, 42949673],"float32"), axis=0, )
paddle.cummax(Tensor([100, 42949673],"float32"), axis=-1, )
paddle.cummax(Tensor([100, 42949673],"float32"), axis=-2, )
paddle.cummax(Tensor([100, 42949673],"float32"), axis=-2, dtype="int32", )
paddle.cummax(Tensor([100, 42949673],"int32"), axis=0, )
paddle.cummax(Tensor([42949673, 100],"float32"), )
paddle.cummax(Tensor([42949673, 100],"float32"), axis=0, )
paddle.cummax(Tensor([42949673, 100],"float32"), axis=-1, )
paddle.cummax(Tensor([42949673, 100],"float32"), axis=-2, )
paddle.cummax(Tensor([42949673, 100],"float32"), axis=-2, dtype="int32", )
paddle.cummax(Tensor([42949673, 100],"int32"), axis=0, )
paddle.cummin(Tensor([100, 42949673],"float32"), )
paddle.cummin(Tensor([100, 42949673],"float32"), axis=0, )
paddle.cummin(Tensor([100, 42949673],"float32"), axis=-1, )
paddle.cummin(Tensor([100, 42949673],"float32"), axis=-2, )
paddle.cummin(Tensor([100, 42949673],"float32"), axis=-2, dtype="int32", )
paddle.cummin(Tensor([100, 42949673],"int32"), axis=0, )
paddle.cummin(Tensor([42949673, 100],"float32"), )
paddle.cummin(Tensor([42949673, 100],"float32"), axis=0, )
paddle.cummin(Tensor([42949673, 100],"float32"), axis=-1, )
paddle.cummin(Tensor([42949673, 100],"float32"), axis=-2, )
paddle.cummin(Tensor([42949673, 100],"float32"), axis=-2, dtype="int32", )
paddle.cummin(Tensor([42949673, 100],"int32"), axis=0, )
paddle.cumsum(Tensor([1, 4294967295],"int32"), )
paddle.cumsum(Tensor([10, 20, 21474837],"float32"), dtype="float32", )
paddle.cumsum(Tensor([10, 429496730, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([10, 429496730],"float16"), dtype="float16", )
paddle.cumsum(Tensor([10, 429496730],"float32"), dtype="float32", )
paddle.cumsum(Tensor([2, 2147483648],"int32"), )
paddle.cumsum(Tensor([214748365, 20, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([3, 715827883],"int64"), )
paddle.cumsum(Tensor([3, 715827883],"int64"), dtype="float64", )
paddle.cumsum(Tensor([3, 715827883],"int64"), dtype=type(numpy.int32), )
paddle.cumsum(Tensor([357913942, 12],"float16"), dtype="float16", )
paddle.cumsum(Tensor([357913942, 12],"float32"), dtype="float32", )
paddle.cumsum(Tensor([4294967295, 1],"int32"), )
paddle.cumsum(Tensor([4294967295],"float32"), dtype="float32", )
paddle.cumsum(Tensor([4294967295],"int32"), )
paddle.cumsum(Tensor([536870913, 4],"int64"), )
paddle.cumsum(Tensor([536870913, 4],"int64"), dtype="float64", )
paddle.cumsum(Tensor([536870913, 4],"int64"), dtype=type(numpy.int32), )
paddle.cumsum(x=Tensor([1, 2, 1, 1073741825],"float64"), axis=Tensor([1],"float64"), )
paddle.cumsum(x=Tensor([1, 2, 1, 3],"float64"), axis=Tensor([2147483649],"float64"), )
paddle.cumsum(x=Tensor([1, 2, 357913942, 3],"float64"), axis=Tensor([1],"float64"), )
paddle.cumsum(x=Tensor([1, 715827883, 1, 3],"float64"), axis=Tensor([1],"float64"), )
paddle.cumsum(x=Tensor([2147483649],"float64"), )
paddle.cumsum(x=Tensor([357913942, 2, 1, 3],"float64"), axis=Tensor([1],"float64"), )
paddle.cumsum(x=Tensor([4294967295],"float32"), )
paddle.cumulative_trapezoid(y=Tensor([1431655765, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([1431655765, 3],"float32"), x=Tensor([1431655765, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([1431655765, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 1073741825],"float64"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 1073741825],"float64"), x=Tensor([2, 1073741825],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 1073741825],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 2147483648],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 2147483648],"float32"), x=Tensor([2, 2147483648],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 2147483648],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([1431655765, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 2147483648],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 1073741825],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([715827883, 3],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([4294967295],"float32"), dx=None, axis=1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 477218589],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.cumulative_trapezoid(y=Tensor([3, 357913942, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.cumulative_trapezoid(y=Tensor([357913942, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.cumulative_trapezoid(y=Tensor([715827883, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([715827883, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([715827883, 3],"float64"), x=Tensor([715827883, 3],"float64"), dx=None, axis=-1, )
paddle.diag(Tensor([2147483649],"float64"), padding_value=8, )
paddle.diag(Tensor([2147483649],"int64"), padding_value=-8, )
paddle.diag(Tensor([2147483649],"int64"), padding_value=8.0, )
paddle.diag(x=Tensor([2147483649],"float64"), offset=-1, padding_value=-0.001, )
paddle.diag(x=Tensor([2147483649],"float64"), offset=1, padding_value=1.1, )
paddle.diag(x=Tensor([2147483649],"float64"), offset=-2, padding_value=0, )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 4294967295],"float32"), Tensor([1, 1, 1, 4294967295],"float32"), )
paddle.divide(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1, 4294967295, 1],"float32"), Tensor([1, 1, 4294967295, 1],"float32"), )
paddle.divide(Tensor([1, 1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.divide(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.divide(Tensor([1, 3],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.divide(Tensor([1, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.divide(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 1, 1],"float32"), )
paddle.divide(Tensor([1, 4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.divide(Tensor([1, 4294967295],"float32"), Tensor([1, 3],"float32"), )
paddle.divide(Tensor([1, 4294967295],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.divide(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.divide(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.divide(Tensor([10, 12],"float32"), Tensor([10, 429496730],"float32"), )
paddle.divide(Tensor([10, 12],"float32"), Tensor([357913942, 12],"float32"), )
paddle.divide(Tensor([10, 12],"float64"), Tensor([10, 214748365],"float64"), )
paddle.divide(Tensor([10, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.divide(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.divide(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.divide(Tensor([10, 214748365],"float64"), Tensor([10, 12],"float64"), )
paddle.divide(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), )
paddle.divide(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.divide(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.divide(Tensor([10, 429496730],"float32"), Tensor([10, 12],"float32"), )
paddle.divide(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.divide(Tensor([104, 128],"float32"), Tensor([104, 41297763],"float32"), )
paddle.divide(Tensor([104, 128],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.divide(Tensor([104, 41297763],"float32"), Tensor([104, 1],"float32"), )
paddle.divide(Tensor([104, 41297763],"float32"), Tensor([104, 41297763],"float32"), )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([119304648, 3, 1, 1],"float32"), )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([119304648, 3, 1, 4],"float32"), )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.divide(Tensor([119304648, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([1431655765, 3],"float32"), Tensor([1, 3],"float32"), )
paddle.divide(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.divide(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_probs", )
paddle.divide(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), name="Normal_probs", )
paddle.divide(Tensor([178956971, 12],"float64"), Tensor([10, 12],"float64"), )
paddle.divide(Tensor([178956971, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.divide(Tensor([178957, 100, 120],"float64"), Tensor([178957, 100, 120],"float64"), )
paddle.divide(Tensor([178957, 100, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.divide(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_probs", )
paddle.divide(Tensor([2, 1073741825],"float64"), Tensor([2, 3],"float64"), name="Normal_probs", )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 178956971, 1, 1],"float32"), )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 178956971, 1, 4],"float32"), )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 178956971, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 3, 143165577, 5],"float32"), )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 429496730, 1, 5],"float32"), )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([286331153, 3, 1, 5],"float32"), )
paddle.divide(Tensor([2, 3, 1, 715827883],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.divide(Tensor([2, 3, 1, 715827883],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.divide(Tensor([2, 3, 143165577, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.divide(Tensor([2, 3, 143165577, 5],"float32"), Tensor([2, 3, 143165577, 5],"float32"), )
paddle.divide(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 178956971, 1],"float32"), )
paddle.divide(Tensor([2, 3, 178956971, 4],"float32"), Tensor([2, 3, 178956971, 4],"float32"), )
paddle.divide(Tensor([2, 3, 178956971, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 238609295],"float32"), )
paddle.divide(Tensor([2, 3, 3, 238609295],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 238609295],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([1073741824, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([1431655765, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 2147483648, 1, 1],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 1, 715827883],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 178956971, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 3, 715827883, 1],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([2, 536870912, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 1, 1431655765],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([3, 357913942, 4],"float32"), )
paddle.divide(Tensor([2, 3, 3, 4],"float32"), Tensor([357913942, 3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 4],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.divide(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.divide(Tensor([2, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.divide(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.divide(Tensor([2, 3, 715827883],"float32"), Tensor([2, 3, 715827883],"float32"), )
paddle.divide(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 3],"float64"), Tensor([2, 1073741825],"float64"), name="Normal_probs", )
paddle.divide(Tensor([2, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_probs", )
paddle.divide(Tensor([2, 429496730, 1, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.divide(Tensor([2, 429496730, 1, 5],"float32"), Tensor([2, 429496730, 1, 5],"float32"), )
paddle.divide(Tensor([2, 536870912, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.divide(Tensor([2, 536870912, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.divide(Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.divide(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.divide(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.divide(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.divide(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.divide(Tensor([2684355, 40, 40],"float32"), Tensor([2684355, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([2684355, 40, 40],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([286331153, 3, 1, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.divide(Tensor([286331153, 3, 1, 5],"float32"), Tensor([286331153, 3, 1, 5],"float32"), )
paddle.divide(Tensor([298262, 3, 3, 40, 40],"float32"), Tensor([298262, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([298262, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([298262, 3, 40, 40, 3],"float32"), Tensor([298262, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([298262, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([178957, 100, 120],"float64"), )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([3, 100, 7158279],"float64"), )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([3, 5965233, 120],"float64"), )
paddle.divide(Tensor([3, 100, 7158279],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.divide(Tensor([3, 100, 7158279],"float64"), Tensor([3, 100, 7158279],"float64"), )
paddle.divide(Tensor([3, 11930465, 40, 3],"float32"), Tensor([3, 11930465, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 11930465, 40, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 298262, 3, 40, 40],"float32"), Tensor([3, 298262, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 298262, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 298262, 40, 40, 3],"float32"), Tensor([3, 298262, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 298262, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 11930465, 40],"float32"), Tensor([3, 3, 11930465, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 11930465, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 298262, 40, 40],"float32"), Tensor([3, 3, 298262, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 298262, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 3976822, 40],"float32"), Tensor([3, 3, 3, 3976822, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 3976822, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 3976822],"float32"), Tensor([3, 3, 3, 40, 3976822],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 3976822],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([298262, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 298262, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 298262, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 3976822, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 3976822],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3976822, 40, 3],"float32"), Tensor([3, 3, 3976822, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 3976822, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 11930465],"float32"), Tensor([3, 3, 40, 11930465],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 11930465],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 3976822, 3],"float32"), Tensor([3, 3, 40, 3976822, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 3976822, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 298262],"float32"), Tensor([3, 3, 40, 40, 298262],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 298262],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([298262, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 298262, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 3976822, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 3976822, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 298262],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 3, 11930465, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 3, 40, 11930465],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 894785, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([894785, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 35791395, 40],"float32"), Tensor([3, 35791395, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 35791395, 40],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 11930465, 3],"float32"), Tensor([3, 40, 11930465, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 11930465, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 35791395],"float32"), Tensor([3, 40, 35791395],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 35791395],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 11930465, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 40, 11930465, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 40, 40, 894785],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([894785, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 894785],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 894785],"float32"), Tensor([3, 40, 40, 894785],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([2684355, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([3, 35791395, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([3, 40, 35791395],"float32"), name=None, )
paddle.divide(Tensor([3, 5965233, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.divide(Tensor([3, 5965233, 120],"float64"), Tensor([3, 5965233, 120],"float64"), )
paddle.divide(Tensor([3, 894785, 40, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 894785, 40, 40],"float32"), Tensor([3, 894785, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.divide(Tensor([33554432, 128],"float32"), Tensor([104, 1],"float32"), )
paddle.divide(Tensor([33554432, 128],"float32"), Tensor([33554432, 1],"float32"), )
paddle.divide(Tensor([357913942, 12],"float32"), Tensor([10, 12],"float32"), )
paddle.divide(Tensor([357913942, 12],"float32"), Tensor([357913942, 12],"float32"), )
paddle.divide(Tensor([357913942, 3, 4],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.divide(Tensor([357913942, 3, 4],"float32"), Tensor([357913942, 3, 4],"float32"), )
paddle.divide(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.divide(Tensor([4294967295, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.divide(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.divide(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.divide(Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.divide(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.divide(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.divide(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.divide(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.divide(Tensor([715827883, 3],"float64"), Tensor([2, 3],"float64"), name="Normal_probs", )
paddle.divide(Tensor([715827883, 3],"float64"), Tensor([715827883, 3],"float64"), name="Normal_probs", )
paddle.divide(Tensor([894785, 3, 40, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([894785, 3, 40, 40],"float32"), Tensor([894785, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([894785, 40, 40, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([894785, 40, 40, 3],"float32"), Tensor([894785, 40, 40, 3],"float32"), name=None, )
paddle.divide(x=Tensor([2],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([2147483649, 1],"float64"), y=Tensor([2147483649, 1],"float64"), name=None, )
paddle.divide(x=Tensor([2147483649, 1],"float64"), y=Tensor([3, 1],"float64"), name=None, )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([2],"float64"), )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([3, 1],"float64"), )
paddle.divide(x=Tensor([2147483649],"float64"), y=Tensor([3],"float64"), )
paddle.divide(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([3],"float64"), )
paddle.divide(x=Tensor([3, 1],"float64"), y=Tensor([2147483649, 1],"float64"), name=None, )
paddle.divide(x=Tensor([3, 1],"float64"), y=Tensor([3, 715827883],"float64"), name=None, )
paddle.divide(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3],"float64"), )
paddle.divide(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3],"float64"), )
paddle.divide(x=Tensor([3, 3, 3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 1],"float64"), name=None, )
paddle.divide(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), name=None, )
paddle.divide(x=Tensor([3],"float32"), y=Tensor([4294967295],"float32"), )
paddle.divide(x=Tensor([3],"float64"), y=Tensor([2147483649, 1],"float64"), )
paddle.divide(x=Tensor([3],"float64"), y=Tensor([2147483649],"float64"), )
paddle.divide(x=Tensor([3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.divide(x=Tensor([4294967295],"float32"), y=Tensor([3],"float32"), )
paddle.divide(x=Tensor([4294967295],"float32"), y=Tensor([4294967295],"float32"), )
paddle.dot(Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.dot(Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.dot(Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.dot(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.dot(Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.dot(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.dot(x=Tensor([2, 1073741825],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.dot(x=Tensor([2, 1073741825],"float64"), y=Tensor([2, 3],"float64"), )
paddle.dot(x=Tensor([2, 3],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.dot(x=Tensor([2, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.dot(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.dot(x=Tensor([2147483649],"int64"), y=Tensor([6],"int64"), )
paddle.dot(x=Tensor([4294967295],"int32"), y=Tensor([4294967295],"int32"), )
paddle.dot(x=Tensor([4294967295],"int32"), y=Tensor([6],"int32"), )
paddle.dot(x=Tensor([6],"int32"), y=Tensor([4294967295],"int32"), )
paddle.dot(x=Tensor([6],"int64"), y=Tensor([2147483649],"int64"), )
paddle.dot(x=Tensor([715827883, 3],"float64"), y=Tensor([2, 3],"float64"), )
paddle.dot(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.dsplit(Tensor([119304648, 3, 6],"int64"), 2, )
paddle.dsplit(Tensor([178956971, 2, 6],"float64"), 3, )
paddle.dsplit(Tensor([357913942, 2, 6],"bool"), 3, )
paddle.dsplit(Tensor([357913942, 2, 6],"float16"), 3, )
paddle.dsplit(Tensor([357913942, 2, 6],"float32"), 3, )
paddle.dsplit(Tensor([357913942, 2, 6],"int32"), 3, )
paddle.dsplit(Tensor([4, 178956971, 6],"bool"), 3, )
paddle.dsplit(Tensor([4, 178956971, 6],"float16"), 3, )
paddle.dsplit(Tensor([4, 178956971, 6],"float32"), 3, )
paddle.dsplit(Tensor([4, 178956971, 6],"int32"), 3, )
paddle.dsplit(Tensor([4, 2, 268435457],"float64"), 3, )
paddle.dsplit(Tensor([4, 2, 536870912],"bool"), 3, )
paddle.dsplit(Tensor([4, 2, 536870912],"float16"), 3, )
paddle.dsplit(Tensor([4, 2, 536870912],"float32"), 3, )
paddle.dsplit(Tensor([4, 2, 536870912],"int32"), 3, )
paddle.dsplit(Tensor([4, 3, 178956971],"int64"), 2, )
paddle.dsplit(Tensor([4, 89478486, 6],"float64"), 3, )
paddle.dsplit(Tensor([4, 89478486, 6],"int64"), 2, )
paddle.einsum("..., ...", Tensor([153391690, 14],"float64"), Tensor([2, 3, 14],"float64"), )
paddle.einsum("..., ...", Tensor([165191050, 13],"float64"), Tensor([2, 3, 13],"float64"), )
paddle.einsum("..., ...", Tensor([178956971, 12],"float64"), Tensor([2, 3, 12],"float64"), )
paddle.einsum("..., ...", Tensor([195225787, 11],"float64"), Tensor([2, 3, 11],"float64"), )
paddle.einsum("..., ...", Tensor([214748365, 10],"float64"), Tensor([2, 3, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 10],"float64"), Tensor([2, 107374183, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 10],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 10],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 11],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 11],"float64"), Tensor([2, 97612894, 11],"float64"), )
paddle.einsum("..., ...", Tensor([3, 11],"float64"), Tensor([65075263, 3, 11],"float64"), )
paddle.einsum("..., ...", Tensor([3, 12],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 12],"float64"), Tensor([2, 89478486, 12],"float64"), )
paddle.einsum("..., ...", Tensor([3, 12],"float64"), Tensor([59652324, 3, 12],"float64"), )
paddle.einsum("..., ...", Tensor([3, 13],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 13],"float64"), Tensor([2, 82595525, 13],"float64"), )
paddle.einsum("..., ...", Tensor([3, 13],"float64"), Tensor([55063684, 3, 13],"float64"), )
paddle.einsum("..., ...", Tensor([3, 14],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("..., ...", Tensor([3, 14],"float64"), Tensor([2, 76695845, 14],"float64"), )
paddle.einsum("..., ...", Tensor([3, 14],"float64"), Tensor([51130564, 3, 14],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 10],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 11],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 12],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 13],"float64"), )
paddle.einsum("..., ...", Tensor([3, 715827883],"float64"), Tensor([2, 3, 14],"float64"), )
paddle.einsum("..., f -> ... f", Tensor([16],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("..., f -> ... f", Tensor([24],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("..., f -> ... f", Tensor([4294967295],"float32"), Tensor([16],"float32"), )
paddle.einsum("..., f -> ... f", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("...,...", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([11],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([12],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([13],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([14],"float64"), )
paddle.einsum("...,...", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 5],"float64"), Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 5],"float64"), Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 5],"float64"), Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 85899346],"float64"), Tensor([5, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 5, 85899346],"float64"), Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 85899346, 5],"float64"), Tensor([5, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([5, 85899346, 5],"float64"), Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([85899346, 5, 5],"float64"), Tensor([5, 5, 5],"float64"), )
paddle.einsum("...,...->...", Tensor([85899346, 5, 5],"float64"), Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("...->...", Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("...->...", Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("...->...", Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([10, 3, 2, 35791395],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([10, 3, 35791395, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([10, 53687092, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 10],"float64"), Tensor([178956971, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 178956971],"float64"), Tensor([10, 3, 2, 178956971],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 2, 178956971],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 35791395, 10],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 2, 35791395, 10],"float64"), Tensor([10, 3, 35791395, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 35791395, 2, 10],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([3, 35791395, 2, 10],"float64"), Tensor([10, 35791395, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([53687092, 2, 2, 10],"float64"), Tensor([10, 3, 2, 2],"float64"), )
paddle.einsum("...a,a...->...", Tensor([53687092, 2, 2, 10],"float64"), Tensor([53687092, 3, 2, 2],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 107374183, 10],"float64"), Tensor([10],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([10],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([11],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([12],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([13],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 3, 357913942],"float64"), Tensor([14],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 76695845, 14],"float64"), Tensor([14],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 82595525, 13],"float64"), Tensor([13],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 89478486, 12],"float64"), Tensor([12],"float64"), )
paddle.einsum("...i, ...i", Tensor([2, 97612894, 11],"float64"), Tensor([11],"float64"), )
paddle.einsum("...i, ...i", Tensor([51130564, 3, 14],"float64"), Tensor([14],"float64"), )
paddle.einsum("...i, ...i", Tensor([55063684, 3, 13],"float64"), Tensor([13],"float64"), )
paddle.einsum("...i, ...i", Tensor([59652324, 3, 12],"float64"), Tensor([12],"float64"), )
paddle.einsum("...i, ...i", Tensor([65075263, 3, 11],"float64"), Tensor([11],"float64"), )
paddle.einsum("...i, ...i", Tensor([71582789, 3, 10],"float64"), Tensor([10],"float64"), )
paddle.einsum("...i->...", Tensor([2, 107374183, 10],"float64"), )
paddle.einsum("...i->...", Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("...i->...", Tensor([2, 76695845, 14],"float64"), )
paddle.einsum("...i->...", Tensor([2, 82595525, 13],"float64"), )
paddle.einsum("...i->...", Tensor([2, 89478486, 12],"float64"), )
paddle.einsum("...i->...", Tensor([2, 97612894, 11],"float64"), )
paddle.einsum("...i->...", Tensor([51130564, 3, 14],"float64"), )
paddle.einsum("...i->...", Tensor([55063684, 3, 13],"float64"), )
paddle.einsum("...i->...", Tensor([59652324, 3, 12],"float64"), )
paddle.einsum("...i->...", Tensor([65075263, 3, 11],"float64"), )
paddle.einsum("...i->...", Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 12, 12],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 12, 12],"float64"), Tensor([178956971, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 12, 33092],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 13, 33092, 12],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 13, 35849, 12, 12],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([32, 35849, 13, 12, 12],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ii,...i->...i", Tensor([88244, 13, 13, 12, 12],"float64"), Tensor([1, 12],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([10, 11],"float64"), Tensor([10737419, 4, 5, 10],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([10, 11],"float64"), Tensor([3, 14316558, 5, 10],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([10, 11],"float64"), Tensor([3, 4, 17895698, 10],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([10, 11],"float64"), Tensor([3, 4, 5, 35791395],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([10, 214748365],"float64"), Tensor([3, 4, 5, 10],"float64"), )
paddle.einsum("...ij,...i->j...", Tensor([195225787, 11],"float64"), Tensor([3, 4, 5, 10],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 2147483649],"float64"), Tensor([5, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 2147483649],"float64"), Tensor([5, 2147483649],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 2147483649],"float64"), Tensor([5, 5],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 5],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([1, 5],"float64"), Tensor([5, 429496730],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([429496730, 5],"float64"), Tensor([429496730, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([429496730, 5],"float64"), Tensor([5, 1],"float64"), )
paddle.einsum("...ij,...jk->...ik", Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([11184811, 6, 8, 8],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 33554432, 8, 8],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 44739243, 8],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 44739243],"float32"), Tensor([2, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 3, 11184811, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 3, 6, 14913081, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 3, 6, 8, 14913081],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([2, 5592406, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([2, 6, 8, 8],"float32"), Tensor([3728271, 3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([5478275, 28, 28],"float32"), Tensor([3, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 25565282, 28],"float32"), Tensor([3, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 25565282],"float32"), Tensor([3, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([3, 1826092, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([3, 6, 28, 8521761],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([3, 6, 8521761, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 28, 28],"float32"), Tensor([913046, 6, 28, 28],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([11184811, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([3, 22369622, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([3, 6, 29826162, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 8],"float32"), Tensor([3, 6, 8, 29826162],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 8, 89478486],"float32"), Tensor([3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([6, 89478486, 8],"float32"), Tensor([3, 6, 8, 8],"float32"), )
paddle.einsum("...ijk, ...xijk -> ...xjk", Tensor([67108864, 8, 8],"float32"), Tensor([3, 6, 8, 8],"float32"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 3],"float64"), Tensor([3, 3, 238609295],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 3],"float64"), Tensor([3, 71582789, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 3],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 71582789],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 238609295, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([71582789, 10, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("...jk, ...kl->...jl", Tensor([71582789, 10, 3],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("...jk->...kj", Tensor([3, 10, 71582789],"float64"), )
paddle.einsum("...jk->...kj", Tensor([3, 238609295, 3],"float64"), )
paddle.einsum("...jk->...kj", Tensor([71582789, 10, 3],"float64"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 4, 3, 2, 13765921],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 4, 3, 3441481, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 4, 5162221, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([13, 6882961, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 2],"float32"), Tensor([22369622, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 2, 27531842],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 13765921, 2],"float32"), Tensor([13, 4, 3, 13765921, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 3, 13765921, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 41297763, 1, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 4, 41297763, 1, 2],"float32"), Tensor([13, 4, 41297763, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 55063684, 3, 1, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([13, 55063684, 3, 1, 2],"float32"), Tensor([13, 55063684, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([178956971, 4, 3, 1, 2],"float32"), Tensor([13, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([178956971, 4, 3, 1, 2],"float32"), Tensor([178956971, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([178956971, 4, 3, 1, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 13765921, 3, 1, 2],"float32"), Tensor([52, 13765921, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 13765921, 3, 1, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 10324441, 1, 2],"float32"), Tensor([52, 4, 10324441, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 10324441, 1, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([22369622, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 1720741, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 4, 1290556, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 4, 3, 2, 3441481],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 2],"float32"), Tensor([52, 4, 3, 860371, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 2, 6882961],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 3441481, 2],"float32"), Tensor([52, 4, 3, 2, 8],"float32"), )
paddle.einsum("...qk,...kd->...qd", Tensor([52, 4, 3, 3441481, 2],"float32"), Tensor([52, 4, 3, 3441481, 8],"float32"), )
paddle.einsum("a...a->...", Tensor([17895698, 3, 2, 1, 4, 5],"float64"), )
paddle.einsum("a...a->...", Tensor([5, 10737419, 2, 1, 4, 5],"float64"), )
paddle.einsum("a...a->...", Tensor([5, 3, 2, 1, 14316558, 5],"float64"), )
paddle.einsum("a...a->...", Tensor([5, 3, 2, 1, 4, 17895698],"float64"), )
paddle.einsum("a...a->...", Tensor([5, 3, 2, 3579140, 4, 5],"float64"), )
paddle.einsum("a...a->...", Tensor([5, 3, 7158279, 1, 4, 5],"float64"), )
paddle.einsum("a...a->a...", Tensor([17895698, 3, 2, 1, 4, 5],"float64"), )
paddle.einsum("a...a->a...", Tensor([5, 10737419, 2, 1, 4, 5],"float64"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 2, 1, 14316558, 5],"float64"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 2, 1, 4, 17895698],"float64"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 2, 3579140, 4, 5],"float64"), )
paddle.einsum("a...a->a...", Tensor([5, 3, 7158279, 1, 4, 5],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([178956971, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 178956971],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...a", Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([178956971, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 178956971],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([178956971, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 134217729, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 178956971],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.einsum("a...b,b...c,c...d", Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), Tensor([4, 3, 44739243, 4],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([10, 3, 2, 3, 11930465],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([10, 3, 2, 3, 4],"float64"), Tensor([12, 178956971],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([10, 3, 2, 3, 4],"float64"), Tensor([214748365, 10],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([10, 3, 2, 8947849, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([10, 3, 5965233, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([10, 8947849, 2, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("a...d,...cb->...abcd", Tensor([29826162, 3, 2, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("aaa->a", Tensor([5, 5, 85899346],"float64"), )
paddle.einsum("aaa->a", Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("aaa->a", Tensor([85899346, 5, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 5, 3],"float64"), Tensor([107374183, 4, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 5, 3],"float64"), Tensor([3, 143165577, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 5, 3],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 5, 53687092],"float64"), Tensor([3, 4, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 4, 89478486, 3],"float64"), Tensor([3, 4, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([2, 71582789, 5, 3],"float64"), Tensor([3, 4, 5],"float64"), )
paddle.einsum("abcd,dfg->abcfg", Tensor([35791395, 4, 5, 3],"float64"), Tensor([3, 4, 5],"float64"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 11],"float32"), Tensor([11, 390451573],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 11],"float32"), Tensor([85899346, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 286332],"float32"), Tensor([11, 286332],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([15000, 286332],"float32"), Tensor([11, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([390451573, 11],"float32"), Tensor([11, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([390451573, 11],"float32"), Tensor([390451573, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 11],"float32"), Tensor([11, 390451573],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 11],"float32"), Tensor([85899346, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 71583],"float32"), Tensor([11, 50],"float32"), )
paddle.einsum("ak, kn-> an", Tensor([60000, 71583],"float32"), Tensor([11, 71583],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 67108864, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 67108864, 1, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 427445, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 462820, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 593884, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 615678, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 67108864, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 1, 536870912],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 109, 4925422],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 113, 4751071],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 145, 3702559],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 157, 3419560],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([53431, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([57853, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([74236, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([76960, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 1, 64],"float32"), Tensor([8388608, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([1, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 1, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 109, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8388608, 8, 1, 64],"float32"), Tensor([8388608, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 25414008, 1, 169],"float32"), Tensor([1, 25414008, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 25414008, 1, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 27356480, 1, 157],"float32"), Tensor([1, 27356480, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 27356480, 1, 157],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 29620465, 1, 145],"float32"), Tensor([1, 29620465, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 29620465, 1, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 38008561, 1, 113],"float32"), Tensor([1, 38008561, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 38008561, 1, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 39403370, 1, 109],"float32"), Tensor([1, 39403370, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 39403370, 1, 109],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([1, 615678, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([1, 8, 109, 4925422],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 109],"float32"), Tensor([76960, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 113],"float32"), Tensor([1, 593884, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 113],"float32"), Tensor([1, 8, 113, 4751071],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 113],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 113],"float32"), Tensor([74236, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 145],"float32"), Tensor([1, 462820, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 145],"float32"), Tensor([1, 8, 145, 3702559],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 145],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 145],"float32"), Tensor([57853, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 157],"float32"), Tensor([1, 427445, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 157],"float32"), Tensor([1, 8, 157, 3419560],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 157],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 157],"float32"), Tensor([53431, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 169],"float32"), Tensor([1, 397094, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 169],"float32"), Tensor([1, 8, 169, 3176751],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 169],"float32"), Tensor([1, 8, 8388608, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 169],"float32"), Tensor([49637, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 169, 536870912],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3176751, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3176751, 169],"float32"), Tensor([1, 8, 3176751, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3419560, 157],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3419560, 157],"float32"), Tensor([1, 8, 3419560, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3702559, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 3702559, 145],"float32"), Tensor([1, 8, 3702559, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4751071, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4751071, 113],"float32"), Tensor([1, 8, 4751071, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4925422, 109],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4925422, 109],"float32"), Tensor([1, 8, 4925422, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3176751, 8, 1, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3176751, 8, 1, 169],"float32"), Tensor([3176751, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3419560, 8, 1, 157],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3419560, 8, 1, 157],"float32"), Tensor([3419560, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3702559, 8, 1, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3702559, 8, 1, 145],"float32"), Tensor([3702559, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4751071, 8, 1, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4751071, 8, 1, 113],"float32"), Tensor([4751071, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4925422, 8, 1, 109],"float32"), Tensor([1, 8, 109, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4925422, 8, 1, 109],"float32"), Tensor([4925422, 8, 109, 64],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 10324441, 1, 8],"float32"), Tensor([13, 4, 10324441, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 10324441, 1, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 16519105],"float32"), Tensor([13, 4, 5, 7, 16519105],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 16519105],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 1179937, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 4, 1474921, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 4, 5, 2064889, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([13, 4, 5, 7, 2359873],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 1, 8],"float32"), Tensor([3834793, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 2064889, 8],"float32"), Tensor([13, 4, 5, 2064889, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 4, 5, 2064889, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 8259553, 5, 1, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([13, 8259553, 5, 1, 8],"float32"), Tensor([13, 8259553, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([26843546, 4, 5, 1, 8],"float32"), Tensor([13, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([26843546, 4, 5, 1, 8],"float32"), Tensor([26843546, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([26843546, 4, 5, 1, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 2064889, 5, 1, 8],"float32"), Tensor([52, 2064889, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 2064889, 5, 1, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 2581111, 1, 8],"float32"), Tensor([52, 4, 2581111, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 2581111, 1, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 4129777],"float32"), Tensor([52, 4, 5, 7, 4129777],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 4129777],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([3834793, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 294985, 5, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 4, 368731, 7, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 4, 5, 516223, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 1, 8],"float32"), Tensor([52, 4, 5, 7, 589969],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 516223, 8],"float32"), Tensor([52, 4, 5, 516223, 8],"float32"), )
paddle.einsum("bhlqd,bhlkd->bhlqk", Tensor([52, 4, 5, 516223, 8],"float32"), Tensor([52, 4, 5, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 110127367, 3, 1, 1],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([13, 4, 1, 82595525],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([13, 4, 10324441, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([13, 41297763, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 1],"float32"), Tensor([134217728, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 3, 27531842, 1],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([13, 4, 82595525, 1, 1],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([357913942, 4, 3, 1, 1],"float32"), Tensor([13, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([357913942, 4, 3, 1, 1],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 27531842, 3, 1, 1],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 20648882, 1, 1],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([134217728, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([52, 10324441, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([52, 4, 1, 20648882],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 1],"float32"), Tensor([52, 4, 2581111, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhkd->bhlqd", Tensor([52, 4, 3, 6882961, 1],"float32"), Tensor([52, 4, 1, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([119304648, 4, 3, 1, 3],"float32"), Tensor([119304648, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([119304648, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([119304648, 4, 3, 1, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 36709123, 3, 1, 3],"float32"), Tensor([13, 36709123, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 36709123, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 10324441, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 11799361],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1474921, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 5899681, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([19173962, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 82595525],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 82595525],"float32"), Tensor([13, 4, 1, 7, 82595525],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 11799361, 7],"float32"), Tensor([13, 4, 1, 11799361, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 11799361, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 11799361, 1, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 11799361, 1, 7],"float32"), Tensor([13, 4, 11799361, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 27531842, 1, 3],"float32"), Tensor([13, 4, 27531842, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 27531842, 1, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 3, 27531842],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 27531842],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3, 9177281],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3, 3441481, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4, 3441481, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([13, 4588641, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 1, 3],"float32"), Tensor([14913081, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 9177281, 3],"float32"), Tensor([13, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 3, 9177281, 3],"float32"), Tensor([13, 4, 3, 9177281, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 47197443, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 47197443, 1, 1, 7],"float32"), Tensor([13, 47197443, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([153391690, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([153391690, 4, 1, 1, 7],"float32"), Tensor([153391690, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([153391690, 4, 1, 1, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 11799361, 1, 1, 7],"float32"), Tensor([52, 11799361, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 11799361, 1, 1, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 20648882],"float32"), Tensor([52, 4, 1, 7, 20648882],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 20648882],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([19173962, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([52, 1474921, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([52, 4, 1, 2581111, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([52, 4, 1, 7, 2949841],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 1, 7],"float32"), Tensor([52, 4, 368731, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 2949841, 7],"float32"), Tensor([52, 4, 1, 2949841, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 1, 2949841, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 2949841, 1, 7],"float32"), Tensor([52, 4, 1, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 2949841, 1, 7],"float32"), Tensor([52, 4, 2949841, 7, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([14913081, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 1147161, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 4, 3, 3, 2294321],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 4, 3, 860371, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 3],"float32"), Tensor([52, 4, 860371, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 3, 6882961],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 1, 6882961],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 2294321, 3],"float32"), Tensor([52, 4, 3, 2294321, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 3, 2294321, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 6882961, 1, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 4, 6882961, 1, 3],"float32"), Tensor([52, 4, 6882961, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 9177281, 3, 1, 3],"float32"), Tensor([52, 4, 3, 3, 8],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([52, 9177281, 3, 1, 3],"float32"), Tensor([52, 9177281, 3, 3, 8],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([29128, 48, 48, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([342393, 14, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 11097, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 11097, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 50725],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 4793491, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([32, 2097152, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 32, 87382],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 32, 43691, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([48, 43691, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 23302, 48, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 23302, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 31069],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([1398102, 48, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([48, 1398102, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([48, 48, 1864136],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([65536, 32, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 25363],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([14, 4793491, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 14, 5549, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([864, 5549, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 21846, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 21846, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 43691],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([32, 2097152, 64],"float32"), )
paddle.einsum("bhwc,hkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([29128, 48, 48, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([342393, 14, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 11097, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 11097, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 50725],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 4793491, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([32, 2097152, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 32, 87382],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 32, 43691, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([48, 43691, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 23302, 48, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 23302, 64],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 31069],"float32"), Tensor([48, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([1398102, 48, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([48, 1398102, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([60, 48, 48, 64],"float32"), Tensor([48, 48, 1864136],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([65536, 32, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 25363],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([14, 14, 21913099],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([14, 4793491, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 14, 64],"float32"), Tensor([4793491, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 14, 5549, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([864, 5549, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 21846, 32, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 21846, 64],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 43691],"float32"), Tensor([32, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([2097152, 32, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([32, 2097152, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([96, 32, 32, 64],"float32"), Tensor([32, 32, 4194304],"float32"), )
paddle.einsum("bij,bjk->bik", Tensor([107374183, 4, 5],"float64"), Tensor([107374183, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([107374183, 4, 5],"float64"), Tensor([3, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 143165577, 5],"float64"), Tensor([3, 143165577, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 143165577, 5],"float64"), Tensor([3, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 178956971],"float64"), Tensor([3, 5, 178956971],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 178956971],"float64"), Tensor([3, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 5],"float64"), Tensor([214748365, 5, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 5],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.einsum("bij,bjk->bik", Tensor([3, 4, 5],"float64"), Tensor([3, 5, 143165577],"float64"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 2, 4, 41297763],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([134217728, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 2, 4, 41297763],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 4, 41297763],"float32"), Tensor([13, 4, 4, 41297763],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 2, 41297763, 4],"float32"), Tensor([13, 4, 41297763, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 7, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 4, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 11799361, 4],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 11799361, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 11799361],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 11799361],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([13, 7, 4, 4],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([134217728, 2, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([134217728, 2, 4, 4],"float32"), Tensor([134217728, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([38347923, 7, 4, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([38347923, 7, 4, 4],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bind,bjnd->bnij", Tensor([67108864, 4, 4, 4],"float32"), Tensor([67108864, 7, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 4],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 4],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 4, 41297763],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 2, 41297763, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 20648882, 4, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 20648882, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 20648882],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 4],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 4, 4, 4],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 11799361, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 11799361],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 4],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 4],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([13, 7, 4, 4],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([134217728, 2, 4, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([38347923, 7, 4, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("bind,snd->bnis", Tensor([67108864, 4, 4, 4],"float32"), Tensor([2, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([4, 268435456, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([4, 4, 268435456],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([8, 134217728, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 4],"float32"), Tensor([8, 4, 134217728],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 41297763],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 4, 41297763],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 41297763, 4],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 2, 41297763, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 20648882, 4, 4],"float32"), Tensor([14, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 20648882, 4, 4],"float32"), Tensor([15, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 20648882, 4, 4],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 20648882, 4, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 20648882, 4],"float32"), Tensor([15, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 20648882, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 20648882],"float32"), Tensor([15, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 20648882],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([15, 4, 71582789],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([15, 71582789, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([8, 134217728, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 4, 4, 4],"float32"), Tensor([8, 4, 134217728],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 11799361, 4],"float32"), Tensor([14, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 11799361],"float32"), Tensor([14, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 4],"float32"), Tensor([14, 4, 76695845],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 4],"float32"), Tensor([14, 76695845, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([13, 7, 4, 4],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([134217728, 2, 4, 4],"float32"), Tensor([4, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([134217728, 2, 4, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([38347923, 7, 4, 4],"float32"), Tensor([14, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([67108864, 4, 4, 4],"float32"), Tensor([15, 4, 4],"float32"), )
paddle.einsum("binh,tnh->bnit", Tensor([67108864, 4, 4, 4],"float32"), Tensor([8, 4, 4],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 330382100, 1, 1],"float32"), Tensor([13, 330382100, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 330382100, 1, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 110127367, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 5, 1, 66076420],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 5, 22025474, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 1],"float32"), Tensor([286331153, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 66076420],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 1, 66076420],"float32"), Tensor([13, 5, 1, 66076420],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 66076420, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([13, 5, 66076420, 1],"float32"), Tensor([13, 5, 66076420, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 1],"float32"), Tensor([286331153, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 27531842, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 5, 1, 16519105],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 5, 5506369, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 16519105],"float32"), Tensor([52, 5, 1, 16519105],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 1, 16519105],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 16519105, 1],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 5, 16519105, 1],"float32"), Tensor([52, 5, 16519105, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 82595525, 1, 1],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([52, 82595525, 1, 1],"float32"), Tensor([52, 82595525, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([858993459, 5, 1, 1],"float32"), Tensor([13, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([858993459, 5, 1, 1],"float32"), Tensor([52, 5, 1, 3],"float32"), )
paddle.einsum("blkd,bldq->blkq", Tensor([858993459, 5, 1, 1],"float32"), Tensor([858993459, 5, 1, 3],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 3, 5],"float64"), Tensor([1, 178956971, 3, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 3, 5],"float64"), Tensor([1, 2, 268435457, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 3, 5],"float64"), Tensor([1, 2, 3, 357913942],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 3, 5],"float64"), Tensor([89478486, 2, 3, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 3, 715827883],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([1, 429496730, 5],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 330382100, 1],"float32"), Tensor([13, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 1],"float32"), Tensor([107374183, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 1],"float32"), Tensor([13, 33038210, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 1],"float32"), Tensor([13, 4, 41297763, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 1],"float32"), Tensor([13, 4, 5, 16519105],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([13, 5, 66076420],"float32"), Tensor([13, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([143165577, 3, 5],"float64"), Tensor([1, 2, 3, 4],"float64"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 1],"float32"), Tensor([107374183, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 1],"float32"), Tensor([52, 4, 10324441, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 1],"float32"), Tensor([52, 4, 5, 4129777],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 1],"float32"), Tensor([52, 8259553, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 5, 16519105],"float32"), Tensor([52, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([52, 82595525, 1],"float32"), Tensor([52, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([858993459, 5, 1],"float32"), Tensor([13, 4, 5, 2],"float32"), )
paddle.einsum("blq,bhlk->bhlqk", Tensor([858993459, 5, 1],"float32"), Tensor([52, 4, 5, 2],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 330382100, 1, 1],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 330382100, 1, 1],"float32"), Tensor([13, 330382100, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 1, 1, 330382100],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 1, 330382100, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([13, 330382100, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 66076420],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 1, 66076420],"float32"), Tensor([13, 1, 1, 66076420],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 66076420, 1],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([13, 5, 66076420, 1],"float32"), Tensor([13, 1, 66076420, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 1],"float32"), Tensor([4294967295, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 1, 1, 82595525],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 1, 82595525, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 1],"float32"), Tensor([52, 82595525, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 16519105],"float32"), Tensor([52, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 1, 16519105],"float32"), Tensor([52, 1, 1, 16519105],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 16519105, 1],"float32"), Tensor([52, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 5, 16519105, 1],"float32"), Tensor([52, 1, 16519105, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 82595525, 1, 1],"float32"), Tensor([52, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([52, 82595525, 1, 1],"float32"), Tensor([52, 82595525, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([858993459, 5, 1, 1],"float32"), Tensor([13, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([858993459, 5, 1, 1],"float32"), Tensor([52, 1, 1, 1],"float32"), )
paddle.einsum("blqd,bmdk->blqk", Tensor([858993459, 5, 1, 1],"float32"), Tensor([858993459, 1, 1, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 1290556, 16, 16],"float32"), Tensor([2, 1290556, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 1290556, 16, 16],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 10324441, 16],"float32"), Tensor([2, 16, 10324441, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 10324441, 16],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 10324441],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 10324441],"float32"), Tensor([2, 16, 4, 10324441],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 16],"float32"), Tensor([2, 16, 134217728, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 16],"float32"), Tensor([2, 16, 4, 33554432],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 16],"float32"), Tensor([2, 536870912, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([13, 2, 16, 16],"float32"), Tensor([67108864, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([8388608, 2, 16, 16],"float32"), Tensor([2, 16, 4, 1],"float32"), )
paddle.einsum("bmtd,mdhr->bmhtr", Tensor([8388608, 2, 16, 16],"float32"), Tensor([8388608, 16, 4, 1],"float32"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 1073741825],"float64"), Tensor([3, 5, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([214748365, 5, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 357913942, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 5, 143165577],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 5, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([2, 5],"float64"), Tensor([3, 5, 2],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("bn,anm,bm->ba", Tensor([429496730, 5],"float64"), Tensor([3, 5, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 11799361, 4, 7],"float32"), Tensor([13, 11799361, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 11799361, 4, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 20648882, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 11799361, 7],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 11799361, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([13, 2, 4, 41297763],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 2],"float32"), Tensor([134217728, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 2, 4, 41297763],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 2, 41297763],"float32"), Tensor([13, 4, 4, 41297763],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 20648882, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 20648882],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 20648882],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 20648882, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([13, 4, 4, 20648882],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 4, 7],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 41297763, 2],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 41297763, 2],"float32"), Tensor([13, 2, 41297763, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 11799361],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 11799361],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([13, 20648882, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([13, 7, 11799361, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([13, 7, 4, 11799361],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 4, 7, 7],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 41297763, 2, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 41297763, 2, 4],"float32"), Tensor([13, 41297763, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 6742492, 7, 7],"float32"), Tensor([13, 6742492, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 6742492, 7, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 82595525, 2, 2],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([13, 82595525, 2, 2],"float32"), Tensor([13, 82595525, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([134217728, 4, 2, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([134217728, 4, 2, 4],"float32"), Tensor([134217728, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([21913099, 4, 7, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([268435456, 4, 2, 2],"float32"), Tensor([13, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([268435456, 4, 2, 2],"float32"), Tensor([268435456, 2, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([38347923, 4, 4, 7],"float32"), Tensor([13, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([38347923, 4, 4, 7],"float32"), Tensor([38347923, 7, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([67108864, 4, 4, 4],"float32"), Tensor([13, 4, 4, 4],"float32"), )
paddle.einsum("bnij,bjnd->bind", Tensor([67108864, 4, 4, 4],"float32"), Tensor([67108864, 4, 4, 4],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 15339169, 7],"float32"), Tensor([7, 10, 15339169, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 15339169, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 15339169],"float32"), Tensor([7, 10, 4, 15339169],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 15339169],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([13421773, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([7, 10, 4, 15339169],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([7, 10, 7669585, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 4, 7, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 8765240, 7, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([10, 8765240, 7, 7],"float32"), Tensor([7, 8765240, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 13944700, 7],"float32"), Tensor([7, 11, 13944700, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 13944700, 7],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 13944700],"float32"), Tensor([7, 11, 4, 13944700],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 13944700],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([12201612, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([7, 11, 4, 13944700],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([7, 11, 6972350, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 4, 7, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 7968400, 7, 7],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([11, 7968400, 7, 7],"float32"), Tensor([7, 7968400, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 10956550, 7],"float32"), Tensor([7, 14, 10956550, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 10956550, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 10956550],"float32"), Tensor([7, 14, 4, 10956550],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 10956550],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([7, 14, 4, 10956550],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([7, 14, 5478275, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 7, 7],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([7, 14, 4, 10956550],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([7, 14, 5478275, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 7],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([8, 14, 4, 9586981],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([8, 14, 4793491, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([8, 16777216, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 8],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([7, 14, 4, 9586981],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 8, 9586981],"float32"), Tensor([8, 14, 4, 9586981],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 9586981, 8],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4, 9586981, 8],"float32"), Tensor([8, 14, 9586981, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4793491, 8, 8],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 4793491, 8, 8],"float32"), Tensor([8, 4793491, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 5478275, 8, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 5478275, 8, 7],"float32"), Tensor([7, 5478275, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 6260886, 7, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([14, 6260886, 7, 7],"float32"), Tensor([7, 6260886, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([16777216, 4, 8, 8],"float32"), Tensor([16777216, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([16777216, 4, 8, 8],"float32"), Tensor([8, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([19173962, 4, 8, 7],"float32"), Tensor([19173962, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([19173962, 4, 8, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([21913099, 14, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("bnij,jbnd->ibnd", Tensor([21913099, 4, 7, 7],"float32"), Tensor([7, 14, 4, 8],"float32"), )
paddle.einsum("i , j -> i j", Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([10],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([2],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([3],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([4],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i , j -> i j", Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.einsum("i , j -> i j", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i, i", Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i, i", Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.einsum("i, i", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,d->id", Tensor([14],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,d->id", Tensor([16],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,d->id", Tensor([4294967295],"float32"), Tensor([16],"float32"), )
paddle.einsum("i,d->id", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,i", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([11],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([12],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([13],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([14],"float64"), )
paddle.einsum("i,i", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("i,i->", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->", Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.einsum("i,i->", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,i->", Tensor([4294967295],"float32"), Tensor([5],"float32"), )
paddle.einsum("i,i->", Tensor([5],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,i->", Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->i", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,i->i", Tensor([2147483649],"float64"), Tensor([5],"float64"), )
paddle.einsum("i,i->i", Tensor([5],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,ij->", Tensor([2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("i,ij->", Tensor([2],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("i,ij->", Tensor([2147483649],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([10],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([11],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([12],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([13],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([14],"float64"), )
paddle.einsum("i,j", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j", Tensor([3],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ii", Tensor([2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ii", Tensor([2147483649],"float64"), Tensor([2],"float64"), )
paddle.einsum("i,j->ii", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ij", Tensor([10],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ij", Tensor([11],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([131072],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i,j->ij", Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i,j->ij", Tensor([2147483649],"float64"), Tensor([6],"float64"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([128],"float32"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([2],"float32"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([4],"float32"), )
paddle.einsum("i,j->ij", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("i..., i...", Tensor([1, 1073741825, 2],"float64"), Tensor([1],"float64"), )
paddle.einsum("i..., i...", Tensor([1, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([1, 3, 715827883],"float64"), Tensor([1],"float64"), )
paddle.einsum("i..., i...", Tensor([10, 107374183, 2],"float64"), Tensor([10],"float64"), )
paddle.einsum("i..., i...", Tensor([10, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([10, 3, 71582789],"float64"), Tensor([10],"float64"), )
paddle.einsum("i..., i...", Tensor([2, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([2, 3, 357913942],"float64"), Tensor([2],"float64"), )
paddle.einsum("i..., i...", Tensor([2, 536870913, 2],"float64"), Tensor([2],"float64"), )
paddle.einsum("i..., i...", Tensor([3, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i..., i...", Tensor([3, 3, 238609295],"float64"), Tensor([3],"float64"), )
paddle.einsum("i..., i...", Tensor([3, 357913942, 2],"float64"), Tensor([3],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([1],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([10],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([2],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([3],"float64"), )
paddle.einsum("i..., i...", Tensor([357913942, 3, 2],"float64"), Tensor([4],"float64"), )
paddle.einsum("i..., i...", Tensor([4, 268435457, 2],"float64"), Tensor([4],"float64"), )
paddle.einsum("i..., i...", Tensor([4, 3, 178956971],"float64"), Tensor([4],"float64"), )
paddle.einsum("i..., i...", Tensor([4, 3, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("i...->...", Tensor([153391690, 14],"float64"), )
paddle.einsum("i...->...", Tensor([165191050, 13],"float64"), )
paddle.einsum("i...->...", Tensor([178956971, 12],"float64"), )
paddle.einsum("i...->...", Tensor([195225787, 11],"float64"), )
paddle.einsum("i...->...", Tensor([2, 1073741825],"float64"), )
paddle.einsum("i...->...", Tensor([2, 107374183, 10],"float64"), )
paddle.einsum("i...->...", Tensor([2, 3, 357913942],"float64"), )
paddle.einsum("i...->...", Tensor([2, 76695845, 14],"float64"), )
paddle.einsum("i...->...", Tensor([2, 82595525, 13],"float64"), )
paddle.einsum("i...->...", Tensor([2, 89478486, 12],"float64"), )
paddle.einsum("i...->...", Tensor([2, 97612894, 11],"float64"), )
paddle.einsum("i...->...", Tensor([214748365, 10],"float64"), )
paddle.einsum("i...->...", Tensor([23860930, 10, 3, 3],"float64"), )
paddle.einsum("i...->...", Tensor([5, 10, 14316558, 3],"float64"), )
paddle.einsum("i...->...", Tensor([5, 10, 3, 14316558],"float64"), )
paddle.einsum("i...->...", Tensor([5, 47721859, 3, 3],"float64"), )
paddle.einsum("i...->...", Tensor([51130564, 3, 14],"float64"), )
paddle.einsum("i...->...", Tensor([55063684, 3, 13],"float64"), )
paddle.einsum("i...->...", Tensor([59652324, 3, 12],"float64"), )
paddle.einsum("i...->...", Tensor([65075263, 3, 11],"float64"), )
paddle.einsum("i...->...", Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("i...j, i...j->...", Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("i->", Tensor([2147483649],"float64"), )
paddle.einsum("i->ii", Tensor([2147483649],"float64"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 134217728, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 14, 306783379],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 14, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([1, 14, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([12201612, 11, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([13421773, 10, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([33554432, 4, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 10, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 10, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 10, 61356676],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 11, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 11, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 11, 55778797],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 14, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 14, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 14, 43826197],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 19173962, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 4, 153391690],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 4, 32],"float32"), Tensor([134217728, 32],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([7, 4, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.einsum("ibm,hm->ibh", Tensor([9586981, 14, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([12201612, 11, 4, 8],"float32"), Tensor([12201612, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([12201612, 11, 4, 8],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([12201612, 11, 4, 8],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([13421773, 10, 4, 8],"float32"), Tensor([13421773, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([13421773, 10, 4, 8],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([13421773, 10, 4, 8],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([14, 10, 4, 15339169],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([7, 10, 4, 15339169],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 15339169],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([13421773, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([14, 10, 3834793, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([14, 10, 4, 7669585],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([14, 9586981, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7, 10, 4, 15339169],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7, 10, 7669585, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 4, 8],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([14, 10, 7669585, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 10, 7669585, 8],"float32"), Tensor([7, 10, 7669585, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([14, 11, 4, 13944700],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([7, 11, 4, 13944700],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 13944700],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([12201612, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([14, 11, 3486175, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([14, 11, 4, 6972350],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([14, 9586981, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([7, 11, 4, 13944700],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([7, 11, 6972350, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 4, 8],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([14, 11, 6972350, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 11, 6972350, 8],"float32"), Tensor([7, 11, 6972350, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 10956550],"float32"), Tensor([14, 14, 4, 10956550],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 10956550],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([14, 14, 2739138, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([14, 14, 4, 5478275],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([14, 9586981, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 4, 8],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 5478275, 8],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 14, 5478275, 8],"float32"), Tensor([14, 14, 5478275, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([14, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([7, 10, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([7, 11, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([7, 19173962, 4, 8],"float32"), Tensor([7, 19173962, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([9586981, 14, 4, 8],"float32"), Tensor([14, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,jbnd->bnij", Tensor([9586981, 14, 4, 8],"float32"), Tensor([9586981, 14, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 10956550],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 8],"float32"), Tensor([134217728, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 8],"float32"), Tensor([2, 268435456, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 4, 8],"float32"), Tensor([2, 4, 536870912],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 14, 5478275, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([7, 19173962, 4, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ibnd,snd->ibns", Tensor([9586981, 14, 4, 8],"float32"), Tensor([2, 4, 8],"float32"), )
paddle.einsum("ii->", Tensor([429496730, 5],"float64"), )
paddle.einsum("ii->", Tensor([5, 429496730],"float64"), )
paddle.einsum("ij, j", Tensor([153391690, 14],"float64"), Tensor([14],"float64"), )
paddle.einsum("ij, j", Tensor([165191050, 13],"float64"), Tensor([13],"float64"), )
paddle.einsum("ij, j", Tensor([178956971, 12],"float64"), Tensor([12],"float64"), )
paddle.einsum("ij, j", Tensor([195225787, 11],"float64"), Tensor([11],"float64"), )
paddle.einsum("ij, j", Tensor([214748365, 10],"float64"), Tensor([10],"float64"), )
paddle.einsum("ij, j", Tensor([4, 10],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 11],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 12],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 13],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 14],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([10],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([11],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([12],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([13],"float64"), )
paddle.einsum("ij, j", Tensor([4, 536870913],"float64"), Tensor([14],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([4, 5],"float64"), Tensor([268435457, 2, 4],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([4, 5],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([4, 5],"float64"), Tensor([3, 2, 357913942],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([4, 536870913],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ij,...i->j...", Tensor([429496730, 5],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ij,i->", Tensor([1073741825, 2],"float64"), Tensor([2],"float64"), )
paddle.einsum("ij,i->", Tensor([2, 1073741825],"float64"), Tensor([2],"float64"), )
paddle.einsum("ij,i->", Tensor([2, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij,ij->", Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("ij,ij->", Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("ij,ij->", Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("ij,ij->", Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("ij,ij->", Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.einsum("ij,ij->", Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.einsum("ij,ij->ij", Tensor([4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([4, 536870913],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([4, 536870913],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([429496730, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ij,ij->ij", Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 2],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 214748365],"float64"), Tensor([1, 2],"float64"), )
paddle.einsum("ij,ij->j", Tensor([10, 214748365],"float64"), Tensor([1, 214748365],"float64"), )
paddle.einsum("ij,ij->j", Tensor([1073741825, 2],"float64"), Tensor([1, 2],"float64"), )
paddle.einsum("ij,ij->j", Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("ij,j", Tensor([1, 1],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij,j", Tensor([1, 2147483649],"float64"), Tensor([1],"float64"), )
paddle.einsum("ij,j", Tensor([2147483649, 1],"float64"), Tensor([1],"float64"), )
paddle.einsum("ij,j->i", Tensor([4, 5],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ij,j->i", Tensor([4, 536870913],"float64"), Tensor([5],"float64"), )
paddle.einsum("ij,j->i", Tensor([429496730, 5],"float64"), Tensor([5],"float64"), )
paddle.einsum("ij,jk", Tensor([153391690, 14],"float64"), Tensor([14, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([153391690, 14],"float64"), Tensor([153391690, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([165191050, 13],"float64"), Tensor([13, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([165191050, 13],"float64"), Tensor([165191050, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([178956971, 12],"float64"), Tensor([12, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([178956971, 12],"float64"), Tensor([178956971, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([195225787, 11],"float64"), Tensor([11, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([195225787, 11],"float64"), Tensor([195225787, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([214748365, 10],"float64"), Tensor([10, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([214748365, 10],"float64"), Tensor([214748365, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 10],"float64"), Tensor([10, 214748365],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 10],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 11],"float64"), Tensor([11, 195225787],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 11],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 12],"float64"), Tensor([12, 178956971],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 12],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 13],"float64"), Tensor([13, 165191050],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 13],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 14],"float64"), Tensor([14, 153391690],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 14],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([10, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([10, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([11, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([11, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([12, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([12, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([13, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([13, 6],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([14, 536870913],"float64"), )
paddle.einsum("ij,jk", Tensor([4, 536870913],"float64"), Tensor([14, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([4, 5],"float64"), Tensor([357913942, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([4, 5],"float64"), Tensor([5, 429496730],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 4],"float64"), Tensor([429496730, 5],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 715827883],"float64"), Tensor([4, 5],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([3, 715827883],"float64"), Tensor([4, 715827883],"float64"), Tensor([5, 715827883],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([536870913, 4],"float64"), Tensor([4, 5],"float64"), Tensor([5, 6],"float64"), )
paddle.einsum("ij,jk,kl", Tensor([536870913, 4],"float64"), Tensor([536870913, 5],"float64"), Tensor([536870913, 6],"float64"), )
paddle.einsum("ij,k->ijk", Tensor([1, 128],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1, 4096],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1, 4294967295],"float32"), Tensor([32],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1, 4294967295],"float32"), Tensor([64],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1048576, 4096],"float32"), Tensor([32],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([1048576, 4096],"float32"), Tensor([64],"float32"), )
paddle.einsum("ij,k->ijk", Tensor([33554432, 128],"float32"), Tensor([32],"float32"), )
paddle.einsum("ij,kj->ik", Tensor([4, 5],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("ij,kj->ik", Tensor([4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ij,kj->ik", Tensor([4, 536870913],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ij,kj->ik", Tensor([4, 536870913],"float64"), Tensor([2, 536870913],"float64"), )
paddle.einsum("ij,kj->ik", Tensor([429496730, 5],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ij,kj->ik", Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 5],"float64"), Tensor([3, 715827883],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 5],"float64"), Tensor([306783379, 7],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 536870913],"float64"), Tensor([3, 536870913],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([4, 536870913],"float64"), Tensor([3, 7],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([429496730, 5],"float64"), Tensor([3, 7],"float64"), )
paddle.einsum("ij,kl->ijkl", Tensor([429496730, 5],"float64"), Tensor([429496730, 7],"float64"), )
paddle.einsum("ij->", Tensor([2, 2147483648],"float32"), )
paddle.einsum("ij->", Tensor([2147483648, 2],"float32"), )
paddle.einsum("ij->i", Tensor([4, 536870913],"float64"), )
paddle.einsum("ij->i", Tensor([429496730, 5],"float64"), )
paddle.einsum("ij->j", Tensor([4, 536870913],"float64"), )
paddle.einsum("ij->j", Tensor([429496730, 5],"float64"), )
paddle.einsum("ij->ji", Tensor([4, 536870913],"float64"), )
paddle.einsum("ij->ji", Tensor([429496730, 5],"float64"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([21913099, 7, 14, 2],"float32"), Tensor([21913099, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([21913099, 7, 14, 2],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 21913099, 14, 2],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 21913099, 14, 2],"float32"), Tensor([7, 21913099, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([38347923, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([7, 14, 21913099, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([7, 14, 4, 10956550],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 2],"float32"), Tensor([7, 76695845, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 6260886],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 14, 6260886],"float32"), Tensor([7, 14, 4, 6260886],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 43826197, 2],"float32"), Tensor([7, 14, 4, 2],"float32"), )
paddle.einsum("ijbs,ibns->bnij", Tensor([7, 7, 43826197, 2],"float32"), Tensor([7, 14, 43826197, 2],"float32"), )
paddle.einsum("iji->j", Tensor([42949673, 10, 5],"float64"), )
paddle.einsum("iji->j", Tensor([5, 10, 42949673],"float64"), )
paddle.einsum("iji->j", Tensor([5, 85899346, 5],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([214748365, 2, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 107374183, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 2, 268435457],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 2, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk, ik->jk", Tensor([4, 2, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 3],"float64"), Tensor([3, 3, 238609295],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 3],"float64"), Tensor([3, 71582789, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 3],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 10, 71582789],"float64"), Tensor([3, 3, 71582789],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 238609295, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([3, 238609295, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([71582789, 10, 3],"float64"), Tensor([3, 3, 10],"float64"), )
paddle.einsum("ijk, ikl->ijl", Tensor([71582789, 10, 3],"float64"), Tensor([71582789, 3, 10],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([107374183, 4, 5],"float64"), Tensor([107374183, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([107374183, 4, 5],"float64"), Tensor([4, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 143165577, 5],"float64"), Tensor([4, 143165577, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 143165577, 5],"float64"), Tensor([4, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 178956971],"float64"), Tensor([4, 3, 178956971],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 178956971],"float64"), Tensor([4, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 5],"float64"), Tensor([357913942, 3, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 5],"float64"), Tensor([4, 268435457, 2],"float64"), )
paddle.einsum("ijk, jil -> kl", Tensor([3, 4, 5],"float64"), Tensor([4, 3, 178956971],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([107374183, 4, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 143165577, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 4, 178956971],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk,jk->i", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([107374183, 4, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 143165577, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 4, 178956971],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk,jk->ij", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([107374183, 4, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 143165577, 5],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 4, 178956971],"float64"), Tensor([4, 5],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 4, 5],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("ijk,jk->ik", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([107374183, 4, 5],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 143165577, 5],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 178956971],"float64"), Tensor([2, 5],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 5],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("ijk,lk->ijl", Tensor([3, 4, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.einsum("ijk->kji", Tensor([3, 10, 71582789],"float64"), )
paddle.einsum("ijk->kji", Tensor([3, 238609295, 3],"float64"), )
paddle.einsum("ijk->kji", Tensor([71582789, 10, 3],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([20452226, 5, 7, 3],"float64"), Tensor([20452226, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([20452226, 5, 7, 3],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 34087043, 7, 3],"float64"), Tensor([5, 34087043, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 34087043, 7, 3],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 47721859, 3],"float64"), Tensor([5, 7, 47721859, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 47721859, 3],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 20452226],"float64"), Tensor([5, 7, 5, 20452226],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 20452226],"float64"), Tensor([5, 7, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([5, 12271336, 5, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([5, 7, 5, 12271336],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([5, 7, 8765240, 7],"float64"), )
paddle.einsum("ijki,jkjk->ik", Tensor([3, 5, 7, 3],"float64"), Tensor([8765240, 7, 5, 7],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 3],"float64"), Tensor([268435457, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 3],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 3],"float64"), Tensor([3, 2, 357913942],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 5, 53687092],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 4, 89478486, 3],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([2, 71582789, 5, 3],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->ijn", Tensor([35791395, 4, 5, 3],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 3],"float64"), Tensor([268435457, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 3],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 3],"float64"), Tensor([3, 2, 357913942],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 5, 53687092],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 4, 89478486, 3],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([2, 71582789, 5, 3],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ijkl, lmn->kmn", Tensor([35791395, 4, 5, 3],"float64"), Tensor([3, 2, 4],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 5],"float64"), Tensor([214748365, 2, 5],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 5],"float64"), Tensor([4, 107374183, 5],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 5],"float64"), Tensor([4, 2, 268435457],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([4, 536870913],"float64"), Tensor([4, 2, 5],"float64"), )
paddle.einsum("ik, ijk->j", Tensor([429496730, 5],"float64"), Tensor([4, 2, 5],"float64"), )
paddle.einsum("ji,i->", Tensor([1073741825, 2],"float64"), Tensor([2],"float64"), )
paddle.einsum("ji,i->", Tensor([2, 1073741825],"float64"), Tensor([2],"float64"), )
paddle.einsum("ji,i->", Tensor([2, 2],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([1, 2147483649],"float64"), Tensor([1],"float64"), )
paddle.einsum("ji,j", Tensor([1, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([10, 214748365],"float64"), Tensor([10],"float64"), )
paddle.einsum("ji,j", Tensor([10, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([11, 195225787],"float64"), Tensor([11],"float64"), )
paddle.einsum("ji,j", Tensor([11, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([12, 178956971],"float64"), Tensor([12],"float64"), )
paddle.einsum("ji,j", Tensor([12, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([13, 165191050],"float64"), Tensor([13],"float64"), )
paddle.einsum("ji,j", Tensor([13, 4],"float64"), Tensor([2147483649],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([1],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([10],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([11],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([12],"float64"), )
paddle.einsum("ji,j", Tensor([536870913, 4],"float64"), Tensor([13],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 3, 2, 3, 11930465],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 3, 2, 3, 4],"float64"), Tensor([12, 178956971],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 3, 2, 3, 4],"float64"), Tensor([214748365, 10],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 3, 2, 8947849, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 3, 5965233, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([10, 8947849, 2, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("k...,...jk->...k", Tensor([29826162, 3, 2, 3, 4],"float64"), Tensor([12, 10],"float64"), )
paddle.einsum("k...,jk", Tensor([2, 4, 5, 3],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.einsum("k...,jk", Tensor([2, 4, 5, 3],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.einsum("k...,jk", Tensor([2, 4, 5, 53687092],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("k...,jk", Tensor([2, 4, 89478486, 3],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("k...,jk", Tensor([2, 71582789, 5, 3],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("k...,jk", Tensor([35791395, 4, 5, 3],"float64"), Tensor([2, 2],"float64"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 8],"float32"), Tensor([1, 306783379, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 8],"float32"), Tensor([1, 8, 536870912],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 8],"float32"), Tensor([38347923, 8, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4, 9586981],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 14, 4793491, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([8, 16777216, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("lbnd,mlb->mbnd", Tensor([9586981, 14, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("m,d->md", Tensor([196],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("m,d->md", Tensor([4294967295],"float32"), Tensor([192],"float32"), )
paddle.einsum("m,d->md", Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 38347923, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 4, 76695845],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 4, 8],"float32"), Tensor([1, 306783379, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 4, 8],"float32"), Tensor([1, 8, 536870912],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([1, 14, 4, 8],"float32"), Tensor([38347923, 8, 14],"float32"), )
paddle.einsum("mbnd,mlb->lbnd", Tensor([9586981, 14, 4, 8],"float32"), Tensor([1, 8, 14],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 143165577, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 143165577, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 238609295, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 238609295, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([2, 2, 1073741824],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([2, 536870912, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 2],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 4, 357913942],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 286331153],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 286331153],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 178956971, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 2, 357913942],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 3, 715827883, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([1, 536870912, 4, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([178956971, 3, 4, 2],"float32"), Tensor([2, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 119304648, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 119304648, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 143165577],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 143165577],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float32"), Tensor([6, 178956971, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 3, 5, 6],"float32"), Tensor([6, 2, 357913942],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 71582789, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([2, 71582789, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([47721859, 3, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbka,ahc->nbkhc", Tensor([47721859, 3, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 143165577, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 143165577, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 238609295, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 238609295, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 286331153],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 286331153],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 178956971, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([1, 3, 5, 6],"float32"), Tensor([6, 2, 357913942],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 119304648, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 119304648, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 143165577],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 143165577],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float16"), Tensor([536870912, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 178956971, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float16"), Tensor([6, 2, 357913942],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float32"), Tensor([536870912, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float32"), Tensor([6, 178956971, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 3, 5, 6],"float32"), Tensor([6, 2, 357913942],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 71582789, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([2, 71582789, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([47721859, 3, 5, 6],"float16"), Tensor([6, 2, 4],"float16"), )
paddle.einsum("nbqa,ahc->nbqhc", Tensor([47721859, 3, 5, 6],"float32"), Tensor([6, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float16"), Tensor([1, 107374183, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float32"), Tensor([1, 107374183, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float32"), Tensor([1, 107374183, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 107374183, 5, 2, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float16"), Tensor([1, 3, 178956971, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float32"), Tensor([1, 3, 178956971, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 178956971, 2, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float16"), Tensor([1, 3, 5, 2, 143165577],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([1, 3, 4, 2, 143165577],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([1, 3, 5, 2, 143165577],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 143165577],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 107374183, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 3, 178956971, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 3, 5, 2, 143165577],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([1, 3, 5, 71582789, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float16"), Tensor([35791395, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 107374183, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 134217728, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 178956971, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 4, 2, 178956971],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 4, 89478486, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 5, 2, 143165577],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([1, 3, 5, 71582789, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([35791395, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 2, 4],"float32"), Tensor([44739243, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float16"), Tensor([1, 3, 5, 71582789, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([1, 3, 4, 71582789, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([1, 3, 5, 71582789, 4],"float32"), Tensor([1, 3, 5, 71582789, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 3, 5, 2, 71582789],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 3, 5, 35791395, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 3, 89478486, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([2, 53687092, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float16"), Tensor([35791395, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 3, 5, 2, 71582789],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 3, 5, 35791395, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 3, 89478486, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([2, 53687092, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 4],"float32"), Tensor([35791395, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 71582789],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 71582789],"float16"), Tensor([2, 3, 5, 2, 71582789],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 71582789],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 2, 71582789],"float32"), Tensor([2, 3, 5, 2, 71582789],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float16"), Tensor([2, 3, 5, 35791395, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 5, 35791395, 4],"float32"), Tensor([2, 3, 5, 35791395, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 89478486, 2, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 89478486, 2, 4],"float16"), Tensor([2, 3, 89478486, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 89478486, 2, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 3, 89478486, 2, 4],"float32"), Tensor([2, 3, 89478486, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float16"), Tensor([2, 53687092, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([2, 53687092, 5, 2, 4],"float32"), Tensor([2, 53687092, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float16"), Tensor([1, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float16"), Tensor([2, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float16"), Tensor([35791395, 3, 5, 2, 4],"float16"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float32"), Tensor([1, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float32"), Tensor([1, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float32"), Tensor([2, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float32"), Tensor([35791395, 3, 4, 2, 4],"float32"), )
paddle.einsum("nbqhc,nbkhc->nbhqk", Tensor([35791395, 3, 5, 2, 4],"float32"), Tensor([35791395, 3, 5, 2, 4],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([1474921, 52, 7, 8],"float32"), Tensor([1474921, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([1474921, 52, 7, 8],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 38347923, 7, 8],"float32"), Tensor([2, 38347923, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 38347923, 7, 8],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 5162221, 8],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 5162221, 8],"float32"), Tensor([2, 52, 5162221, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 5899681],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 19173962, 14, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 52, 14, 2949841],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 52, 5162221, 8],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([737461, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 21913099, 7, 14],"float32"), Tensor([2, 21913099, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 21913099, 7, 14],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 2949841, 14],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 2949841, 14],"float32"), Tensor([2, 52, 2949841, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([2, 19173962, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([2, 52, 14, 2949841],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([2, 52, 5162221, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 14],"float32"), Tensor([737461, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 5899681],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 5899681],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([842812, 52, 7, 14],"float32"), Tensor([2, 52, 14, 8],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([842812, 52, 7, 14],"float32"), Tensor([842812, 52, 14, 8],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 429496730],"float32"), Tensor([10, 60, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 60],"float32"), Tensor([10, 42949673, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 60],"float32"), Tensor([10, 60, 7158279],"float32"), )
paddle.einsum("se,sec->sec", Tensor([10, 60],"float32"), Tensor([7158279, 60, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 2147483648],"float32"), Tensor([2, 60, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 60],"float32"), Tensor([2, 1073741824, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 60],"float32"), Tensor([2, 60, 35791395],"float32"), )
paddle.einsum("se,sec->sec", Tensor([2, 60],"float32"), Tensor([35791395, 60, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 214748365],"float32"), Tensor([20, 60, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 60],"float32"), Tensor([20, 10737419, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 60],"float32"), Tensor([20, 60, 3579140],"float32"), )
paddle.einsum("se,sec->sec", Tensor([20, 60],"float32"), Tensor([3579140, 60, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 143165577],"float32"), Tensor([30, 60, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 60],"float32"), Tensor([2386093, 60, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 60],"float32"), Tensor([30, 4772186, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([30, 60],"float32"), Tensor([30, 60, 2386093],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 1073741824],"float32"), Tensor([4, 60, 4],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 60],"float32"), Tensor([17895698, 60, 4],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 60],"float32"), Tensor([4, 268435456, 4],"float32"), )
paddle.einsum("se,sec->sec", Tensor([4, 60],"float32"), Tensor([4, 60, 17895698],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([10, 60, 10],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([2, 60, 2],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([20, 60, 20],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([30, 60, 30],"float32"), )
paddle.einsum("se,sec->sec", Tensor([71582789, 60],"float32"), Tensor([4, 60, 4],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 42949673, 10],"float32"), Tensor([60, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 42949673, 10],"float32"), Tensor([60, 42949673, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 10],"float32"), Tensor([60, 10, 7158279],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 10],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 10],"float32"), Tensor([6710887, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 7158279],"float32"), Tensor([60, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([10, 60, 7158279],"float32"), Tensor([60, 10, 7158279],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([17895698, 60, 4],"float32"), Tensor([17895698, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([17895698, 60, 4],"float32"), Tensor([60, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 1073741824, 2],"float32"), Tensor([60, 1073741824, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 1073741824, 2],"float32"), Tensor([60, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 2],"float32"), Tensor([33554432, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 2],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 2],"float32"), Tensor([60, 2, 35791395],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 35791395],"float32"), Tensor([60, 2, 35791395],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2, 60, 35791395],"float32"), Tensor([60, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 10737419, 20],"float32"), Tensor([60, 10737419, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 10737419, 20],"float32"), Tensor([60, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 20],"float32"), Tensor([3355444, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 20],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 20],"float32"), Tensor([60, 20, 3579140],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 3579140],"float32"), Tensor([60, 20, 3579140],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([20, 60, 3579140],"float32"), Tensor([60, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2386093, 60, 30],"float32"), Tensor([2386093, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([2386093, 60, 30],"float32"), Tensor([60, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 4772186, 30],"float32"), Tensor([60, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 4772186, 30],"float32"), Tensor([60, 4772186, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 2386093],"float32"), Tensor([60, 30, 2386093],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 2386093],"float32"), Tensor([60, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 30],"float32"), Tensor([2236963, 30, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 30],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([30, 60, 30],"float32"), Tensor([60, 30, 2386093],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([35791395, 60, 2],"float32"), Tensor([35791395, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([35791395, 60, 2],"float32"), Tensor([60, 2, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([3579140, 60, 20],"float32"), Tensor([3579140, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([3579140, 60, 20],"float32"), Tensor([60, 20, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 268435456, 4],"float32"), Tensor([60, 268435456, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 268435456, 4],"float32"), Tensor([60, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 17895698],"float32"), Tensor([60, 4, 17895698],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 17895698],"float32"), Tensor([60, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 4],"float32"), Tensor([16777216, 4, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 4],"float32"), Tensor([60, 1118482, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([4, 60, 4],"float32"), Tensor([60, 4, 17895698],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([7158279, 60, 10],"float32"), Tensor([60, 10, 64],"float32"), )
paddle.einsum("sec,ecm->sm", Tensor([7158279, 60, 10],"float32"), Tensor([7158279, 10, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([10, 42949673, 10],"float32"), Tensor([10, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([10, 60, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([10, 60, 10],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([10, 60, 7158279],"float32"), Tensor([10, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([17895698, 60, 4],"float32"), Tensor([4, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 1073741824, 2],"float32"), Tensor([2, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 60, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 60, 2],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2, 60, 35791395],"float32"), Tensor([2, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([20, 10737419, 20],"float32"), Tensor([20, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([20, 60, 20],"float32"), Tensor([20, 214748365],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([20, 60, 20],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([20, 60, 3579140],"float32"), Tensor([20, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([2386093, 60, 30],"float32"), Tensor([30, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 4772186, 30],"float32"), Tensor([30, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 60, 2386093],"float32"), Tensor([30, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 60, 30],"float32"), Tensor([30, 143165577],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([30, 60, 30],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([35791395, 60, 2],"float32"), Tensor([2, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([3579140, 60, 20],"float32"), Tensor([20, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([4, 268435456, 4],"float32"), Tensor([4, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([4, 60, 17895698],"float32"), Tensor([4, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([4, 60, 4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([4, 60, 4],"float32"), Tensor([67108864, 64],"float32"), )
paddle.einsum("sec,sm->ecm", Tensor([7158279, 60, 10],"float32"), Tensor([10, 64],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([134217728, 32],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 306783379],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 32],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([14, 32],"float32"), Tensor([32, 4, 33554432],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([15, 286331153],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([15, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([15, 32],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([15, 32],"float32"), Tensor([32, 4, 33554432],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([4, 1073741824],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([4, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([4, 32],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([4, 32],"float32"), Tensor([32, 4, 33554432],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([8, 32],"float32"), Tensor([268435456, 4, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([8, 32],"float32"), Tensor([32, 33554432, 4],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([8, 32],"float32"), Tensor([32, 4, 33554432],"float32"), )
paddle.einsum("td,dnh->tnh", Tensor([8, 536870912],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([1073741824, 4],"float32"), Tensor([4, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 1073741824],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 1073741824],"float32"), Tensor([4, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.einsum("xy,yz->xz", Tensor([4, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([4, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([4, 536870913],"float64"), Tensor([4, 4],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([4, 536870913],"float64"), Tensor([4, 536870913],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([536870913, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.einsum("xy,yz->xz", Tensor([536870913, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.equal_all(Tensor([1, 10],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.equal_all(Tensor([1, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 2, 10, 214748365],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 2, 134217728, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 26843546, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([13421773, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 214748365],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 10, 214748365],"bool"), Tensor([1, 2, 10, 214748365],"bool"), )
paddle.equal_all(Tensor([1, 2, 134217728, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 134217728, 16],"bool"), Tensor([1, 2, 134217728, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 3, 715827883],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 536870912, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 357913942, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([178956971, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 715827883],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 715827883],"float32"), Tensor([1, 2, 3, 715827883],"float32"), )
paddle.equal_all(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1, 2, 536870912, 4],"float32"), )
paddle.equal_all(Tensor([1, 2],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.equal_all(Tensor([1, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.equal_all(Tensor([1, 26843546, 10, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 26843546, 10, 16],"bool"), Tensor([1, 26843546, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1, 357913942, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 4294967295],"float32"), Tensor([1, 10],"float32"), )
paddle.equal_all(Tensor([1, 4294967295],"float32"), Tensor([1, 2],"float32"), )
paddle.equal_all(Tensor([1, 4294967295],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.equal_all(Tensor([10, 10],"int32"), Tensor([10, 429496730],"int32"), )
paddle.equal_all(Tensor([10, 10],"int32"), Tensor([429496730, 10],"int32"), )
paddle.equal_all(Tensor([10, 429496730],"int32"), Tensor([10, 10],"int32"), )
paddle.equal_all(Tensor([10, 429496730],"int32"), Tensor([10, 429496730],"int32"), )
paddle.equal_all(Tensor([1073741825, 1, 2],"int64"), Tensor([1073741825, 1, 2],"int64"), )
paddle.equal_all(Tensor([1073741825, 1, 2],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([128],"float32"), Tensor([4294967295],"float32"), )
paddle.equal_all(Tensor([13, 165191050],"int64"), Tensor([13, 165191050],"int64"), )
paddle.equal_all(Tensor([13, 165191050],"int64"), Tensor([13, 7],"int64"), )
paddle.equal_all(Tensor([13, 7],"int64"), Tensor([13, 165191050],"int64"), )
paddle.equal_all(Tensor([13, 7],"int64"), Tensor([306783379, 7],"int64"), )
paddle.equal_all(Tensor([13421773, 2, 10, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([13421773, 2, 10, 16],"bool"), Tensor([13421773, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([16, 16],"float32"), Tensor([16, 268435456],"float32"), )
paddle.equal_all(Tensor([16, 16],"float32"), Tensor([268435456, 16],"float32"), )
paddle.equal_all(Tensor([16, 268435456],"float32"), Tensor([16, 16],"float32"), )
paddle.equal_all(Tensor([16, 268435456],"float32"), Tensor([16, 268435456],"float32"), )
paddle.equal_all(Tensor([16],"float32"), Tensor([4294967295],"float32"), )
paddle.equal_all(Tensor([178956971, 2, 3, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([178956971, 2, 3, 4],"float32"), Tensor([178956971, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([2, 1, 1073741825],"int64"), Tensor([2, 1, 1073741825],"int64"), )
paddle.equal_all(Tensor([2, 1, 1073741825],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 1073741825],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([1073741825, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([2, 1, 1073741825],"int64"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([2, 536870913, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([2, 1, 1073741825],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([2, 268435457, 4],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([536870913, 1, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([2, 2, 536870913],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([2, 357913942, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([357913942, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([2, 2, 536870913],"int64"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([2, 268435457, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([268435457, 2, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 536870913],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 536870913],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([2, 2, 536870913],"int64"), Tensor([2, 2, 536870913],"int64"), )
paddle.equal_all(Tensor([2, 268435457, 4],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([2, 268435457, 4],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([2, 268435457, 4],"int64"), Tensor([2, 268435457, 4],"int64"), )
paddle.equal_all(Tensor([2, 357913942, 3],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 357913942, 3],"int64"), Tensor([2, 357913942, 3],"int64"), )
paddle.equal_all(Tensor([2, 536870913, 2],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 536870913, 2],"int64"), Tensor([2, 536870913, 2],"int64"), )
paddle.equal_all(Tensor([2147483648, 2],"float32"), Tensor([1, 2],"float32"), )
paddle.equal_all(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.equal_all(Tensor([24],"float32"), Tensor([4294967295],"float32"), )
paddle.equal_all(Tensor([268435456, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.equal_all(Tensor([268435456, 16],"float32"), Tensor([268435456, 16],"float32"), )
paddle.equal_all(Tensor([268435457, 2, 4],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([268435457, 2, 4],"int64"), Tensor([268435457, 2, 4],"int64"), )
paddle.equal_all(Tensor([306783379, 7],"int64"), Tensor([13, 7],"int64"), )
paddle.equal_all(Tensor([306783379, 7],"int64"), Tensor([306783379, 7],"int64"), )
paddle.equal_all(Tensor([32],"float32"), Tensor([4294967295],"float32"), )
paddle.equal_all(Tensor([357913942, 2, 3],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([357913942, 2, 3],"int64"), Tensor([357913942, 2, 3],"int64"), )
paddle.equal_all(Tensor([4294967295],"float32"), Tensor([128],"float32"), )
paddle.equal_all(Tensor([4294967295],"float32"), Tensor([16],"float32"), )
paddle.equal_all(Tensor([4294967295],"float32"), Tensor([24],"float32"), )
paddle.equal_all(Tensor([4294967295],"float32"), Tensor([32],"float32"), )
paddle.equal_all(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.equal_all(Tensor([4294967295],"float32"), Tensor([50],"float32"), )
paddle.equal_all(Tensor([429496730, 10],"float32"), Tensor([1, 10],"float32"), )
paddle.equal_all(Tensor([429496730, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.equal_all(Tensor([429496730, 10],"int32"), Tensor([10, 10],"int32"), )
paddle.equal_all(Tensor([429496730, 10],"int32"), Tensor([429496730, 10],"int32"), )
paddle.equal_all(Tensor([50],"float32"), Tensor([4294967295],"float32"), )
paddle.equal_all(Tensor([536870913, 1, 4],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([536870913, 1, 4],"int64"), Tensor([536870913, 1, 4],"int64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), y=Tensor([1, 1, 1, 2, 1073741825],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), y=Tensor([1, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 3],"float64"), y=Tensor([1, 1, 1, 2, 1073741825],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 3],"float64"), y=Tensor([1, 1, 1, 715827883, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 3],"float64"), y=Tensor([1, 1, 357913942, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 3],"float64"), y=Tensor([1, 357913942, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 2, 3],"float64"), y=Tensor([357913942, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 715827883, 3],"float64"), y=Tensor([1, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 1, 715827883, 3],"float64"), y=Tensor([1, 1, 1, 715827883, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 357913942, 2, 3],"float64"), y=Tensor([1, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 1, 357913942, 2, 3],"float64"), y=Tensor([1, 1, 357913942, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 2, 1073741825],"float64"), y=Tensor([2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 2, 3],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.equal_all(x=Tensor([1, 2, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 357913942, 1, 2, 3],"float64"), y=Tensor([1, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 357913942, 1, 2, 3],"float64"), y=Tensor([1, 357913942, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([1, 715827883, 3],"float64"), y=Tensor([2, 3],"float64"), )
paddle.equal_all(x=Tensor([2, 1073741825],"float64"), y=Tensor([1, 1073741825],"float64"), )
paddle.equal_all(x=Tensor([2, 1073741825],"float64"), y=Tensor([1, 3],"float64"), )
paddle.equal_all(x=Tensor([2, 3],"float64"), y=Tensor([1, 2147483649],"float64"), )
paddle.equal_all(x=Tensor([2, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.equal_all(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([238609295, 3, 3],"float64"), )
paddle.equal_all(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([3, 3, 3],"float64"), )
paddle.equal_all(x=Tensor([238609295, 3, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal_all(x=Tensor([238609295, 3, 3],"int64"), y=Tensor([238609295, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([238609295, 3, 3],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 238609295, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 3, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 238609295, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 238609295, 3],"int64"), y=Tensor([3, 238609295, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 238609295, 3],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 3, 238609295],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 3, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 238609295],"float64"), y=Tensor([3, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 238609295],"int64"), y=Tensor([3, 3, 238609295],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 238609295],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 3, 477218589],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 477218589, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([477218589, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float64"), y=Tensor([238609295, 3, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 238609295, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 3, 238609295],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([3, 3, 477218589],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([3, 477218589, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([477218589, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([238609295, 3, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([3, 238609295, 3],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([3, 3, 238609295],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 477218589],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 477218589],"float32"), y=Tensor([3, 3, 477218589],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 477218589],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 477218589],"int32"), y=Tensor([3, 3, 477218589],"int32"), )
paddle.equal_all(x=Tensor([3, 477218589, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 477218589, 3],"float32"), y=Tensor([3, 477218589, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 477218589, 3],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([3, 477218589, 3],"int32"), y=Tensor([3, 477218589, 3],"int32"), )
paddle.equal_all(x=Tensor([357913942, 1, 1, 2, 3],"float64"), y=Tensor([1, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([357913942, 1, 1, 2, 3],"float64"), y=Tensor([357913942, 1, 1, 2, 3],"float64"), )
paddle.equal_all(x=Tensor([357913942, 2, 3],"float64"), y=Tensor([2, 3],"float64"), )
paddle.equal_all(x=Tensor([477218589, 3, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([477218589, 3, 3],"float32"), y=Tensor([477218589, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([477218589, 3, 3],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([477218589, 3, 3],"int32"), y=Tensor([477218589, 3, 3],"int32"), )
paddle.equal_all(x=Tensor([715827883, 3],"float64"), y=Tensor([1, 3],"float64"), )
paddle.equal_all(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.expand(Tensor([1, 1, 100, 42949673],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 42949673],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 126322568, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 28256364],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 2147483649],"int64"), shape=list[14,2,-1,], )
paddle.expand(Tensor([1, 1, 25, 171798692],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 27531842, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 28256364, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 28256364, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 29020050, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 29826162, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 306783379, 7],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([1, 1, 306783379, 7],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([1, 1, 30678338, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 31580642, 136],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 31580642, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 4294967295],"int32"), list[13,2,32,], )
paddle.expand(Tensor([1, 1, 42949673, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 7, 306783379],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([1, 1, 7, 306783379],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([1, 10, 1, 429496730],"float32"), list[-1,-1,256,256,], )
paddle.expand(Tensor([1, 10, 1, 429496730],"float32"), list[-1,-1,32,32,], )
paddle.expand(Tensor([1, 10, 429496730, 1],"float32"), list[-1,-1,256,256,], )
paddle.expand(Tensor([1, 10, 429496730, 1],"float32"), list[-1,-1,32,32,], )
paddle.expand(Tensor([1, 10, 429496730],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([1, 134217728, 32],"int32"), list[13,2,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,1024,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,11,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[1,20,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,10,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,7,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[14,8,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[15,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[2,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[2,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[4,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[4,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[4,32,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[6,1,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[6,3,], )
paddle.expand(Tensor([1, 2147483649],"int64"), list[8,32,], )
paddle.expand(Tensor([1, 275319, 100, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 282564, 100, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 282564, 100, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 282564, 152, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 290201, 100, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 298262, 100, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 3, 1, 1, 1, 1431655765],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 3, 1, 1, 1431655765, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 3, 1, 1431655765, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 3, 1431655765, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 306783379, 7],"int64"), shape=list[14,2,-1,], )
paddle.expand(Tensor([1, 306784, 100, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 315807, 100, 136],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 315807, 100, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 4294967295, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[-1,-1,256,256,], )
paddle.expand(Tensor([1, 4294967295, 1, 1],"float32"), list[-1,-1,32,32,], )
paddle.expand(Tensor([1, 4294967295, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([1, 4294967295],"float32"), tuple(10,10,), )
paddle.expand(Tensor([1, 43826197, 7, 7],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([1, 43826197, 7, 7],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([1, 5052903, 25, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 613566757, 7],"float32"), shape=list[13,7,7,], )
paddle.expand(Tensor([1, 7, 613566757],"float32"), shape=list[13,7,7,], )
paddle.expand(Tensor([10, 1, 10, 42949673],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([10, 1, 429496730, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([10, 42949673, 10, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([10, 429496730],"float32"), tuple(10,10,), )
paddle.expand(Tensor([1048576, 32, 128],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([1073741824, 1, 2, 2],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([107374183, 20],"int64"), list[1,20,], )
paddle.expand(Tensor([108, 39768216],"int32"), list[-1,1,], )
paddle.expand(Tensor([117, 36709123],"int32"), list[-1,1,], )
paddle.expand(Tensor([1200, 3579140],"int32"), list[-1,1,], )
paddle.expand(Tensor([128, 16777217],"int64"), tuple(128,128,), )
paddle.expand(Tensor([13, 1, 165191050, 2],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 1, 2, 165191050],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 1, 2, 165191050],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 1, 330382100, 1],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([13, 1, 330382100],"float32"), shape=tuple(13,7,16,), )
paddle.expand(Tensor([13, 1, 330382100],"int32"), list[13,2,32,], )
paddle.expand(Tensor([13, 1, 4, 82595525],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 1, 4, 82595525],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 1, 47197443, 7],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 1, 47197443, 7],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 1, 5, 1, 66076420],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 1, 5, 13215284, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 1, 66076420, 1, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 1, 7, 47197443],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 1, 7, 47197443],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([13, 1, 82595525, 4],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 1, 82595525, 4],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 11799361, 4, 7],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 13215284, 5, 1, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([13, 165191050, 2, 1],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 165191050, 2, 1],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 20648882, 16],"float32"), shape=tuple(13,7,16,), )
paddle.expand(Tensor([13, 20648882, 4, 4],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 330382100, 1],"int32"), list[13,2,32,], )
paddle.expand(Tensor([13, 4, 1, 1, 1, 82595525],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 1, 1, 10324441, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 1, 10324441, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 10324441, 1, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 4, 2, 41297763],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 4, 2, 41297763],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 4, 4, 20648882],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 4, 4, 20648882],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 4, 7, 11799361],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([13, 4, 82595525, 1],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 41297763, 1, 1, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([13, 41297763, 2, 4],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([13, 47197443, 7, 1],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([13, 47197443, 7, 1],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 6742492, 7, 7],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([13, 82595525, 2, 2],"bool"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([13, 82595525, 4, 1],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([13, 82595525, 4, 1],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([134217728, 1, 32],"int32"), list[13,2,32,], )
paddle.expand(Tensor([134217728, 32],"float32"), list[128,32,32,], )
paddle.expand(Tensor([134217728, 32],"float32"), list[96,32,32,], )
paddle.expand(Tensor([134217728, 4, 1, 1, 1, 8],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([134217728, 4, 1, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([14, 153391690],"int64"), tuple(14,32,), name=None, )
paddle.expand(Tensor([1431655765, 3, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.expand(Tensor([15, 143165577],"int64"), tuple(15,32,), name=None, )
paddle.expand(Tensor([153391690, 1, 4, 7],"bool"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([153391690, 4, 7, 1],"float32"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([16, 2097152, 128],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([16, 32, 8388608],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([1620, 2651215],"int32"), list[-1,1,], )
paddle.expand(Tensor([171798692, 1, 5, 1, 5],"float32"), list[13,4,5,1,-1,], )
paddle.expand(Tensor([171798692, 1, 5, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([1728, 2485514],"int32"), list[-1,1,], )
paddle.expand(Tensor([195225787, 11],"int64"), list[1,11,], )
paddle.expand(Tensor([2, 1, 153391690, 14],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([2, 1, 2147483648],"float32"), list[-1,8,-1,], )
paddle.expand(Tensor([2, 1, 7, 306783379],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([2, 2, 1, 8, 128, 1048576],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 128, 1048576],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 1398102, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 1398102, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 87382, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 87382, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2, 10923, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 10923, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 2147483648],"float32"), list[2,3072,], )
paddle.expand(Tensor([2, 21846, 1, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 21846, 1, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([2, 21913099, 7, 14],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([2, 268435456, 8],"float32"), list[-1,8,-1,], )
paddle.expand(Tensor([2097153, 1024],"int64"), list[1,1024,], )
paddle.expand(Tensor([2147483648, 2],"float16"), shape=list[512,3,2,], )
paddle.expand(Tensor([2147483648, 2],"float32"), shape=list[512,3,2,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[1,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[14,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[2,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[4,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), list[6,1,], )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(128,128,), )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(14,32,), name=None, )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(15,32,), name=None, )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(4,32,), name=None, )
paddle.expand(Tensor([2147483649, 1],"int64"), tuple(8,32,), name=None, )
paddle.expand(Tensor([2147483649],"int64"), list[13,7,4,], )
paddle.expand(Tensor([2147483649],"int64"), shape=list[1,-1,], )
paddle.expand(Tensor([214748365, 10],"int64"), list[14,10,], )
paddle.expand(Tensor([21846, 2, 1, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([21846, 2, 1, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([268435456, 1, 16],"float32"), shape=tuple(13,7,16,), )
paddle.expand(Tensor([268435456, 1, 4, 4],"bool"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([268435456, 4, 4, 1],"float32"), list[13,4,4,4,], name=None, )
paddle.expand(Tensor([268435456, 4, 4, 1],"float32"), list[13,4,4,7,], name=None, )
paddle.expand(Tensor([268435457, 8],"int64"), list[14,8,], )
paddle.expand(Tensor([275319, 1, 100, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([282564, 1, 100, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([282564, 1, 100, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([282564, 1, 152, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([290201, 1, 100, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([298262, 1, 100, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([3, 1431655765],"float16"), shape=list[512,3,2,], )
paddle.expand(Tensor([3, 1431655765],"float32"), shape=list[512,3,2,], )
paddle.expand(Tensor([306783379, 1, 7],"int64"), shape=list[14,2,-1,], )
paddle.expand(Tensor([306783379, 7],"int64"), list[14,7,], )
paddle.expand(Tensor([306784, 1, 100, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([315807, 1, 100, 136],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([315807, 1, 100, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[128,32,32,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[16,32,128,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[16,32,64,], )
paddle.expand(Tensor([32, 134217728],"float32"), list[96,32,32,], )
paddle.expand(Tensor([33554432, 128],"float32"), list[16,32,128,], )
paddle.expand(Tensor([33554432, 128],"float32"), list[32,64,128,], )
paddle.expand(Tensor([4, 536870913],"int64"), tuple(4,32,), name=None, )
paddle.expand(Tensor([4294967295, 1, 1],"int32"), list[13,2,32,], )
paddle.expand(Tensor([4294967295, 1],"float32"), list[2,3072,], )
paddle.expand(Tensor([4294967295, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([4294967295],"float32"), shape=list[128,96,], )
paddle.expand(Tensor([429496730, 1, 10, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([429496730, 10, 1, 1],"float32"), list[-1,-1,256,256,], )
paddle.expand(Tensor([429496730, 10, 1, 1],"float32"), list[-1,-1,32,32,], )
paddle.expand(Tensor([429496730, 10, 1],"float32"), tuple(10,10,10,10,), )
paddle.expand(Tensor([429496730, 10],"float32"), tuple(10,10,), )
paddle.expand(Tensor([43826197, 1, 7, 14],"float32"), shape=list[2,13,7,14,], )
paddle.expand(Tensor([43826197, 1, 7, 7],"int64"), list[13,4,7,7,], )
paddle.expand(Tensor([43826197, 1, 7, 7],"int64"), list[52,4,7,7,], )
paddle.expand(Tensor([5052903, 1, 25, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([52, 1, 16519105, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 1, 5, 1, 16519105],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 1, 5, 3303821, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 1, 7, 11799361],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([52, 1, 82595525, 1],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([52, 10324441, 1, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 11799361, 7, 1],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([52, 3303821, 5, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([52, 4, 1, 1, 1, 20648882],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 4, 1, 1, 2581111, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 4, 1, 2581111, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([52, 4, 2581111, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([536870912, 1, 2, 4],"bool"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([536870912, 1, 8],"float32"), list[-1,8,-1,], )
paddle.expand(Tensor([536870912, 4, 2, 1],"float32"), list[13,4,2,2,], name=None, )
paddle.expand(Tensor([536870912, 4, 2, 1],"float32"), list[13,4,2,4,], name=None, )
paddle.expand(Tensor([613566757, 1, 7, 1],"float32"), list[13,4,7,-1,], )
paddle.expand(Tensor([613566757, 1, 7, 1],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([64, 67108864],"float32"), list[32,64,128,], )
paddle.expand(Tensor([67108864, 64],"float32"), list[16,32,64,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[14,32,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[15,32,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[4,32,], )
paddle.expand(Tensor([67108865, 32],"int64"), list[8,32,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[14,3,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[2,3,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[4,3,], )
paddle.expand(Tensor([715827883, 3],"int64"), list[6,3,], )
paddle.expand(Tensor([8, 268435457],"int64"), tuple(8,32,), name=None, )
paddle.expand(Tensor([87652394, 1, 7, 7],"bool"), list[13,4,7,7,], name=None, )
paddle.expand(Tensor([87652394, 7, 7],"float32"), shape=list[13,7,7,], )
paddle.expand(x=Tensor([1, 1, 1],"int64"), shape=Tensor([4294967295],"int32"), )
paddle.expand(x=Tensor([1, 1, 2147483649],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([1, 2147483649, 1],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([2147483649, 1, 1],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(x=Tensor([2147483649, 1],"int64"), shape=tuple(3,2,), )
paddle.expand(x=Tensor([2147483649],"float64"), shape=list[3,3,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[1,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[1,-1,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[1,1,1,1,1,1,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[2,], )
paddle.expand(x=Tensor([2147483649],"int64"), shape=list[2,3,], )
paddle.expand(x=Tensor([3, 715827883],"int64"), shape=tuple(3,2,), )
paddle.expand(x=Tensor([4294967295],"int32"), shape=list[1,], )
paddle.expand(x=Tensor([4294967295],"int32"), shape=tuple(3,3,), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([16777217, 128],"int64"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([32, 67108865],"int64"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([7, 306783379],"int64"), )
paddle.expand_as(Tensor([1, 2, 1, 1],"float32"), Tensor([1, 2, 28, 76695845],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 1],"float32"), Tensor([1, 2, 76695845, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 1],"float32"), Tensor([1, 5478275, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 1],"float32"), Tensor([2739138, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 2147483648],"float32"), Tensor([1, 2, 28, 2147483648],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 2147483648],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 2147483648, 1],"float32"), Tensor([1, 2, 2147483648, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 2147483648, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([32, 128],"int64"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([32, 2147483649],"int64"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([7, 128],"int64"), )
paddle.expand_as(Tensor([1, 2147483649],"int64"), Tensor([7, 2147483649],"int64"), )
paddle.expand_as(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 4294967295, 1, 1],"float32"), Tensor([1, 4294967295, 28, 28],"float32"), )
paddle.expand_as(Tensor([1],"float32"), Tensor([1, 2147483649],"int64"), )
paddle.expand_as(Tensor([1],"float32"), Tensor([2147483649, 1],"int64"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([10, 2, 28, 7669585],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([10, 2, 7669585, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([10, 547828, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([2739138, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 214748365],"float32"), Tensor([10, 2, 28, 214748365],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 214748365],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 214748365, 1],"float32"), Tensor([10, 2, 214748365, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 214748365, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 429496730, 1, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 429496730, 1, 1],"float32"), Tensor([10, 429496730, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 40518560, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 40518560, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 40518560, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 51682, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 51682, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 80, 18089, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 80, 18089, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 80, 28, 18089],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([106, 80, 28, 18089],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([68479, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 1],"float32"), Tensor([68479, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 506482],"float16"), )
paddle.expand_as(Tensor([106, 80, 1, 506482],"float32"), Tensor([106, 80, 28, 506482],"float32"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 506482, 28],"float16"), )
paddle.expand_as(Tensor([106, 80, 506482, 1],"float32"), Tensor([106, 80, 506482, 28],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([10956550, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([11, 1992100, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([11, 2, 13944700, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([11, 2, 14, 13944700],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 195225787],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 195225787],"float32"), Tensor([11, 2, 14, 195225787],"float32"), )
paddle.expand_as(Tensor([11, 2, 195225787, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 195225787, 1],"float32"), Tensor([11, 2, 195225787, 14],"float32"), )
paddle.expand_as(Tensor([11, 390451573, 1, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 390451573, 1, 1],"float32"), Tensor([11, 390451573, 14, 14],"float32"), )
paddle.expand_as(Tensor([16777217, 128],"int64"), Tensor([16777217, 128],"int64"), )
paddle.expand_as(Tensor([16777217, 128],"int64"), Tensor([32, 128],"int64"), )
paddle.expand_as(Tensor([16777217, 128],"int64"), Tensor([7, 128],"int64"), )
paddle.expand_as(Tensor([2],"float32"), Tensor([1, 2147483649],"int64"), )
paddle.expand_as(Tensor([2],"float32"), Tensor([1073741825, 2],"int64"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 128],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 128],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 2],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 2],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 214748365, 4],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 128],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 128],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([20, 214748365, 1],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 107374183, 2],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 107374183, 2],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 1677722, 128],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 1677722, 128],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 500, 429497],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 500, 429497],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 53687092, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([2147484, 500, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([4294968, 500, 2],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([4294968, 500, 2],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([67109, 500, 128],"float16"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([67109, 500, 128],"float32"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 128],"float16"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 128],"float32"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 429497],"float16"), )
paddle.expand_as(Tensor([20, 500, 429497],"int32"), Tensor([20, 500, 429497],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([2147483648, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([2147483648, 2, 1, 1],"float32"), Tensor([2147483648, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([3, 1],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.expand_as(Tensor([3, 1],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.expand_as(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.expand_as(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([1, 2147483649],"int64"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([2, 1073741825],"int64"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([4, 536870913],"int64"), )
paddle.expand_as(Tensor([3],"float32"), Tensor([715827883, 3],"int64"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([3, 3],"float32"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 3],"float32"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 4],"float32"), )
paddle.expand_as(Tensor([4294967295, 1],"float32"), Tensor([6, 4],"float32"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([1, 1],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([1, 2],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([1, 3],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([2, 3],"int64"), )
paddle.expand_as(Tensor([4294967295],"float32"), Tensor([4, 3],"int64"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([106, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([53687092, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([53687092, 80, 1, 1],"float32"), Tensor([53687092, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([6, 1],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.expand_as(Tensor([6, 1],"float32"), Tensor([6, 715827883],"float32"), )
paddle.expand_as(Tensor([6, 715827883],"float32"), Tensor([6, 4],"float32"), )
paddle.expand_as(Tensor([6, 715827883],"float32"), Tensor([6, 715827883],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 128],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 128],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 128],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 128],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 2],"float16"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 2],"float32"), )
paddle.expand_as(Tensor([8589935, 500, 1],"int32"), Tensor([8589935, 500, 4],"float16"), )
paddle.expand_as(x=Tensor([1],"int32"), y=Tensor([4294967295],"int32"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 1, 1, 2147483649],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 1, 2147483649, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 1, 2147483649, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 1, 2147483649, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([1, 2147483649, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([1],"int64"), y=Tensor([2147483649, 1, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([2, 2],"int32"), y=Tensor([1, 2, 2147483648],"int32"), )
paddle.expand_as(x=Tensor([2, 2],"int32"), y=Tensor([1, 2147483648, 2],"int32"), )
paddle.expand_as(x=Tensor([2, 2],"int32"), y=Tensor([1073741824, 2, 2],"int32"), )
paddle.expand_as(x=Tensor([2, 2147483648],"int32"), y=Tensor([1, 2, 2],"int32"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([2, 1, 2147483648],"int32"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([2, 1073741824, 2],"int32"), )
paddle.expand_as(x=Tensor([2],"int32"), y=Tensor([2147483648, 1, 2],"int32"), )
paddle.expand_as(x=Tensor([2147483648, 2],"int32"), y=Tensor([1, 2, 2],"int32"), )
paddle.expand_as(x=Tensor([2147483649, 1],"int64"), y=Tensor([2147483649, 2],"int64"), )
paddle.expand_as(x=Tensor([2147483649, 1],"int64"), y=Tensor([3, 2],"int64"), )
paddle.expand_as(x=Tensor([2147483649],"float64"), y=Tensor([3, 3],"float64"), )
paddle.expand_as(x=Tensor([2147483649],"int64"), y=Tensor([1, 1, 1, 1, 1, 1],"int64"), )
paddle.expand_as(x=Tensor([2147483649],"int64"), y=Tensor([2, 3],"int64"), )
paddle.expand_as(x=Tensor([3, 1],"int64"), y=Tensor([1073741825, 2],"int64"), )
paddle.expand_as(x=Tensor([3, 1],"int64"), y=Tensor([3, 715827883],"int64"), )
paddle.expand_as(x=Tensor([3, 715827883],"int64"), y=Tensor([3, 2],"int64"), )
paddle.expand_as(x=Tensor([3, 715827883],"int64"), y=Tensor([3, 715827883],"int64"), )
paddle.expand_as(x=Tensor([3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.expand_as(x=Tensor([3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.expand_as(x=Tensor([3],"int32"), y=Tensor([1431655765, 3],"int32"), )
paddle.expand_as(x=Tensor([3],"int32"), y=Tensor([3, 1431655765],"int32"), )
paddle.expand_as(x=Tensor([3],"int64"), y=Tensor([2, 1073741825],"int64"), )
paddle.expand_as(x=Tensor([3],"int64"), y=Tensor([715827883, 3],"int64"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([1],"int32"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([2, 1, 2],"int32"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([3, 3],"int32"), )
paddle.expand_as(x=Tensor([4294967295],"int32"), y=Tensor([4294967295],"int32"), )
paddle.fft.rfft2(x=Tensor([2, 2, 536870913],"float64"), s=list[1,2,], norm="ortho", axes=None, )
paddle.fft.rfft2(x=Tensor([2, 536870913, 2],"float64"), s=list[1,2,], norm="ortho", axes=None, )
paddle.fft.rfft2(x=Tensor([536870913, 2, 2],"float64"), s=list[1,2,], norm="ortho", axes=None, )
paddle.flip(Tensor([114131, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([1431655765, 3],"float32"), 1, )
paddle.flip(Tensor([2, 2147483648],"float32"), 1, )
paddle.flip(Tensor([20, 17120, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([20, 3, 112, 639133],"float32"), axis=-1, )
paddle.flip(Tensor([20, 3, 639133, 112],"float32"), axis=-1, )
paddle.flip(Tensor([32, 10700, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([32, 3, 112, 399458],"float32"), axis=-1, )
paddle.flip(Tensor([32, 3, 399458, 112],"float32"), axis=-1, )
paddle.flip(Tensor([52, 3, 112, 245821],"float32"), axis=-1, )
paddle.flip(Tensor([52, 3, 245821, 112],"float32"), axis=-1, )
paddle.flip(Tensor([52, 6585, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([64, 3, 112, 199729],"float32"), axis=-1, )
paddle.flip(Tensor([64, 3, 199729, 112],"float32"), axis=-1, )
paddle.flip(Tensor([64, 5350, 112, 112],"float32"), axis=-1, )
paddle.floor_divide(Tensor([1],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.floor_divide(Tensor([1],"float16"), Tensor([4294967295],"float16"), )
paddle.floor_divide(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.floor_divide(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.floor_divide(Tensor([10, 1024],"int64"), Tensor([10, 214748365],"int64"), )
paddle.floor_divide(Tensor([10, 1024],"int64"), Tensor([2097153, 1024],"int64"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.floor_divide(Tensor([10, 214748365],"int64"), Tensor([10, 1024],"int64"), )
paddle.floor_divide(Tensor([10, 214748365],"int64"), Tensor([10, 214748365],"int64"), )
paddle.floor_divide(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.floor_divide(Tensor([2097153, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.floor_divide(Tensor([2097153, 1024],"int64"), Tensor([2097153, 1024],"int64"), )
paddle.floor_divide(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.floor_divide(Tensor([2147483649],"float64"), Tensor([3],"float64"), )
paddle.floor_divide(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.floor_divide(Tensor([268435457, 8],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(Tensor([4, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 178956971],"float64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.floor_divide(Tensor([4, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 268435457, 2],"float64"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 536870912, 2],"float16"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"bfloat16"), Tensor([4, 536870912, 2],"float32"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"bfloat16"), )
paddle.floor_divide(Tensor([4, 536870913],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([4, 8],"int64"), Tensor([2147483649],"int64"), )
paddle.floor_divide(Tensor([4],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.floor_divide(Tensor([4294967295],"bfloat16"), Tensor([3],"bfloat16"), )
paddle.floor_divide(Tensor([4294967295],"bfloat16"), Tensor([4],"bfloat16"), )
paddle.floor_divide(Tensor([4294967295],"bfloat16"), Tensor([4294967295],"bfloat16"), )
paddle.floor_divide(Tensor([4294967295],"float16"), Tensor([3],"float16"), )
paddle.floor_divide(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.floor_divide(Tensor([4294967295],"float32"), Tensor([3],"float32"), )
paddle.floor_divide(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.floor_divide(Tensor([536870913, 4],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([357913942, 3, 2],"float64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float32"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([4, 3, 2],"float64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float32"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([8, 268435457],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([8, 4],"int64"), Tensor([2147483649],"int64"), )
paddle.floor_divide(x=Tensor([2],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.floor_divide(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([3, 1431655765],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([4294967295, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 1431655765],"int32"), y=Tensor([3, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 1431655765],"int32"), y=Tensor([3, 1431655765],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 3, 3],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([3, 3, 477218589],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([3, 477218589, 3],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([3],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.floor_divide(x=Tensor([4294967295, 1],"int32"), y=Tensor([3, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([4294967295, 1],"int32"), y=Tensor([4294967295, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([4294967295],"int32"), y=Tensor([2],"int32"), )
paddle.floor_divide(x=Tensor([4294967295],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([4294967295],"int32"), y=Tensor([4294967295],"int32"), )
paddle.floor_divide(x=Tensor([477218589, 3, 3],"int32"), y=Tensor([3],"int32"), )
paddle.frac(Tensor([1431655765, 3],"int32"), )
paddle.frac(Tensor([2, 1073741825],"int64"), )
paddle.frac(Tensor([2, 2147483648],"int32"), )
paddle.frac(Tensor([715827883, 3],"int64"), )
paddle.frexp(Tensor([10, 214748365],"float64"), )
paddle.frexp(Tensor([10, 429496730],"float32"), )
paddle.frexp(Tensor([178956971, 12],"float64"), )
paddle.frexp(Tensor([214748365, 5, 2],"float64"), )
paddle.frexp(Tensor([357913942, 12],"float32"), )
paddle.frexp(Tensor([4, 268435457, 2],"float64"), )
paddle.frexp(Tensor([4, 5, 107374183],"float64"), )
paddle.frexp(Tensor([4, 5, 214748365],"float32"), )
paddle.frexp(Tensor([4, 536870912, 2],"float32"), )
paddle.frexp(Tensor([429496730, 5, 2],"float32"), )
paddle.full_like(Tensor([1, 1, 1, 4294967295],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 165191050, 26],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 171798692, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 178956971, 24],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 186737709, 23],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 195225787, 22],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 20, 214748365],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 1, 2048, 2097152],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 1, 2097152, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 1024, 2048, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 165191050, 1, 26],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 171798692, 1, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 178956971, 1, 24],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 186737709, 1, 23],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1, 192, 3, 7456541],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 192, 7456541, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 2147483649],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([1, 384, 3, 3728271],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 384, 3728271, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 4294967295],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([1, 477218589, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 768, 1864136, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 768, 3, 1864136],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 96, 14913081, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 96, 3, 14913081],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 9761290, 20, 22],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([10, 192, 3, 745655],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 192, 745655, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 214748365],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([10, 47721859, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1024, 1, 2048, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1073741824, 4],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([1073741824, 4],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([1242757, 384, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([1242757, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([13421773, 320],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([165191050, 1, 1, 26],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([16777216, 256],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([16777216, 256],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([171798692, 1, 1, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([178956971, 1, 1, 24],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([18512791, 232],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([18512791, 232],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([18512791, 232],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([186737709, 1, 1, 23],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 1, 1, 2147483648],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 20849356, 103],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 21053762, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 21262215, 101],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 21474837, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1073741825],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([2, 20849356, 1, 103],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 21053762, 1, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 21262215, 1, 101],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 21474837, 1, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2147483648, 2],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([2147483649, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([2147483649],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([219, 19611723],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([219, 19611723],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([219, 19611723],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([22369622, 192],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([22369622, 192],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2485514, 192, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2485514, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 16777216],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 16777216],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([256, 16777216],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([26843546, 160],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([3, 715827883],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([33554432, 128],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([33554432, 128],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 536870913],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([41698712, 1, 1, 103],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([42107523, 1, 1, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([42524429, 1, 1, 101],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([4294967295],"float32"), 0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4294967295],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([4294967295],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4294967295],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4294967295],"float32"), 1.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4294967295],"float32"), 1.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4294967295],"float32"), -2.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4294967295],"float32"), -4.595, dtype=Dtype(float32), )
paddle.full_like(Tensor([4294967295],"float32"), -4.59511985013459, dtype=Dtype(float32), )
paddle.full_like(Tensor([4294967295],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([42949673, 1, 1, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([44739243, 96],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4971027, 96, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4971027, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([621379, 768, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([621379, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 192, 109656, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 192, 3, 109656],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 384, 3, 54828],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 384, 54828, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 7017921, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 768, 27414, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 768, 3, 27414],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 96, 219311, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([68, 96, 3, 219311],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 192, 3, 93207],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 192, 93207, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 5965233, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([9761290, 1, 20, 22],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1, dtype="int32", )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1, dtype="int64", )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1, dtype=type(numpy.int32), )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1, dtype=type(numpy.int64), )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1.0, dtype="float16", )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1.0, dtype="float32", )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1.0, dtype=type(numpy.float16), )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=1.0, dtype=type(numpy.float32), )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=False, dtype="bool", )
paddle.full_like(x=Tensor([2147483649],"float64"), fill_value=True, dtype="bool", )
paddle.gammaln(Tensor([10, 20, 21474837],"float32"), )
paddle.gammaln(Tensor([10, 429496730, 1],"float32"), )
paddle.gammaln(Tensor([2, 107374183, 4, 5],"float32"), )
paddle.gammaln(Tensor([2, 3, 143165577, 5],"float32"), )
paddle.gammaln(Tensor([2, 3, 4, 178956971],"float32"), )
paddle.gammaln(Tensor([2, 3, 4, 89478486],"float64"), )
paddle.gammaln(Tensor([2, 3, 71582789, 5],"float64"), )
paddle.gammaln(Tensor([2, 53687092, 4, 5],"float64"), )
paddle.gammaln(Tensor([214748365, 20, 1],"float32"), )
paddle.gammaln(Tensor([35791395, 3, 4, 5],"float64"), )
paddle.gammaln(Tensor([71582789, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([1, 1],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.greater_equal(Tensor([1, 1],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.greater_equal(Tensor([1, 2147483649],"int64"), Tensor([1, 1],"int64"), )
paddle.greater_equal(Tensor([1, 2147483649],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.greater_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.greater_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.greater_equal(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.greater_equal(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_equal(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.greater_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_equal(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.greater_equal(Tensor([107374183, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.greater_equal(Tensor([107374183, 40],"float32"), Tensor([3, 40],"float32"), )
paddle.greater_equal(Tensor([107374183, 40],"float32"), Tensor([40, 40],"float32"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 1290556, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 10324441, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 5162221],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 645278, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([8388609, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1290556],"int64"), Tensor([13, 2, 16, 1, 1290556],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1290556],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 5162221, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 16, 5162221, 1],"int64"), Tensor([13, 2, 16, 5162221, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 20648882, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 20648882, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 10324441, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 10324441, 1],"int64"), Tensor([13, 2, 8, 10324441, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2, 10324441, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1, 10324441],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1290556, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2581111, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([16777217, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 2581111],"int64"), Tensor([13, 2, 8, 1, 2581111],"int64"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 2581111],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2581111, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2581111, 16, 4, 1],"int64"), Tensor([13, 2581111, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 330382100, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([13, 5162221, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 5162221, 8, 4, 1],"int64"), Tensor([13, 5162221, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 8, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([13, 8, 1, 41297763],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([13, 8, 41297763, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.greater_equal(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), )
paddle.greater_equal(Tensor([1431656, 10, 15, 20],"float32"), Tensor([1431656, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([1431656, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([16777216, 256, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([16777217, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([16777217, 2, 16, 4, 1],"int64"), Tensor([16777217, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([2, 1, 1, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 1, 2147483648],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 2147483648, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 1, 2147483648],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 2147483648, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1, 2147483648, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 1],"int64"), Tensor([1, 2147483649],"int64"), )
paddle.greater_equal(Tensor([2, 1],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.greater_equal(Tensor([2, 1073741825],"int64"), Tensor([1, 1],"int64"), )
paddle.greater_equal(Tensor([2, 1073741825],"int64"), Tensor([1, 1073741825],"int64"), )
paddle.greater_equal(Tensor([2, 107374183, 4, 5],"float32"), Tensor([2, 107374183, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 107374183, 4, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 2147483648, 1, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 2147483648, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.greater_equal(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), )
paddle.greater_equal(Tensor([2, 256, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 256, 1, 8388608],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 256, 8388608, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 3, 143165577, 5],"float32"), Tensor([2, 3, 143165577, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 143165577, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 178956971],"float32"), Tensor([2, 3, 4, 178956971],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 178956971],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 107374183, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 3, 143165577, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 3, 4, 178956971],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float32"), Tensor([71582789, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 71582789, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 53687092, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 5],"float64"), Tensor([35791395, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.greater_equal(Tensor([2, 3, 71582789, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3, 71582789, 5],"float64"), Tensor([2, 3, 71582789, 5],"float64"), )
paddle.greater_equal(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.greater_equal(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.greater_equal(Tensor([2, 53687092, 4, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 53687092, 4, 5],"float64"), Tensor([2, 53687092, 4, 5],"float64"), )
paddle.greater_equal(Tensor([2, 768, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([2, 768, 1, 2796203],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 768, 2796203, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2147483649, 1],"int64"), Tensor([1, 1],"int64"), )
paddle.greater_equal(Tensor([2147483649, 1],"int64"), Tensor([2147483649, 1],"int64"), )
paddle.greater_equal(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.greater_equal(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.greater_equal(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_equal(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.greater_equal(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.greater_equal(Tensor([3, 1431655765],"float32"), Tensor([3, 40],"float32"), )
paddle.greater_equal(Tensor([3, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.greater_equal(Tensor([3, 40],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.greater_equal(Tensor([33554433, 2, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([33554433, 2, 8, 4, 1],"int64"), Tensor([33554433, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([35791395, 3, 4, 5],"float64"), Tensor([2, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([35791395, 3, 4, 5],"float64"), Tensor([35791395, 3, 4, 5],"float64"), )
paddle.greater_equal(Tensor([4, 1073741824, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4, 256, 1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([4, 256, 1, 4194304],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4, 256, 4194304, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([4, 536870912, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.greater_equal(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.greater_equal(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.greater_equal(Tensor([40, 107374183],"float32"), Tensor([40, 107374183],"float32"), )
paddle.greater_equal(Tensor([40, 107374183],"float32"), Tensor([40, 40],"float32"), )
paddle.greater_equal(Tensor([40, 40],"float32"), Tensor([107374183, 40],"float32"), )
paddle.greater_equal(Tensor([40, 40],"float32"), Tensor([40, 107374183],"float32"), )
paddle.greater_equal(Tensor([4294967295, 1, 1, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4294967295, 1, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.greater_equal(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.greater_equal(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([1431656, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 5726624],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 4294968, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 2863312, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 5726624],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 15, 5726624],"float32"), Tensor([5, 10, 15, 5726624],"float32"), )
paddle.greater_equal(Tensor([5, 10, 4294968, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 10, 4294968, 20],"float32"), Tensor([5, 10, 4294968, 20],"float32"), )
paddle.greater_equal(Tensor([5, 2863312, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([5, 2863312, 15, 20],"float32"), Tensor([5, 2863312, 15, 20],"float32"), )
paddle.greater_equal(Tensor([536870912, 8, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([5592406, 768, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_equal(Tensor([71582789, 3, 4, 5],"float32"), Tensor([2, 3, 4, 5],"float32"), )
paddle.greater_equal(Tensor([71582789, 3, 4, 5],"float32"), Tensor([71582789, 3, 4, 5],"float32"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 715827883, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.greater_equal(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.greater_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_equal(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.greater_equal(x=Tensor([1, 715827883, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.greater_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.greater_equal(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.greater_equal(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_equal(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.greater_equal(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.greater_equal(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.greater_equal(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.greater_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.greater_equal(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_equal(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.greater_equal(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.greater_equal(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.greater_equal(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.greater_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_equal(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.greater_equal(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.greater_equal(x=Tensor([357913942, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_equal(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.greater_than(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.greater_than(Tensor([10, 20, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.greater_than(Tensor([10, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.greater_than(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_than(Tensor([10, 20, 21474837],"float32"), Tensor([10, 20, 21474837],"float32"), )
paddle.greater_than(Tensor([10, 429496730, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_than(Tensor([10, 429496730, 1],"float32"), Tensor([10, 429496730, 1],"float32"), )
paddle.greater_than(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), )
paddle.greater_than(Tensor([2147483649],"int64"), Tensor([4],"int64"), )
paddle.greater_than(Tensor([214748365, 20, 1],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.greater_than(Tensor([214748365, 20, 1],"float32"), Tensor([214748365, 20, 1],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 178956971],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float16"), Tensor([4, 536870912, 2],"float32"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float32"), Tensor([4, 268435457, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870912, 2],"float32"), Tensor([4, 536870912, 2],"float16"), )
paddle.greater_than(Tensor([4],"float16"), Tensor([4294967295],"float16"), )
paddle.greater_than(Tensor([4],"int64"), Tensor([2147483649],"int64"), )
paddle.greater_than(Tensor([4294967295],"float16"), Tensor([4],"float16"), )
paddle.greater_than(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), )
paddle.greater_than(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_than(Tensor([4294967295],"float32"), Tensor([6],"float32"), )
paddle.greater_than(Tensor([6],"float32"), Tensor([4294967295],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([357913942, 3, 2],"float64"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float16"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([4, 3, 2],"float64"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_than(x=Tensor([1, 2, 1, 1073741825],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 2, 1073741825],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 715827883, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([357913942, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 357913942, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.greater_than(x=Tensor([1, 2],"float64"), y=Tensor([2, 1073741825],"float64"), )
paddle.greater_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_than(x=Tensor([1, 2147483649],"float64"), y=Tensor([2, 2147483649],"float64"), )
paddle.greater_than(x=Tensor([1, 715827883, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([1],"float64"), y=Tensor([2147483649],"float64"), )
paddle.greater_than(x=Tensor([1073741825, 2],"float64"), y=Tensor([1073741825, 2],"float64"), )
paddle.greater_than(x=Tensor([1073741825, 2],"float64"), y=Tensor([2, 2],"float64"), )
paddle.greater_than(x=Tensor([1431655765, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.greater_than(x=Tensor([1431655765, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_than(x=Tensor([2147483649],"float64"), y=Tensor([2147483649],"float64"), )
paddle.greater_than(x=Tensor([2147483649],"float64"), y=Tensor([4],"float64"), )
paddle.greater_than(x=Tensor([2147483649],"int64"), y=Tensor([2147483649],"int64"), )
paddle.greater_than(x=Tensor([2147483649],"int64"), y=Tensor([3],"int64"), )
paddle.greater_than(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.greater_than(x=Tensor([3, 1431655765],"float32"), y=Tensor([3, 3],"float32"), )
paddle.greater_than(x=Tensor([3, 3],"float32"), y=Tensor([1431655765, 3],"float32"), )
paddle.greater_than(x=Tensor([3, 3],"float32"), y=Tensor([3, 1431655765],"float32"), )
paddle.greater_than(x=Tensor([3, 3],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.greater_than(x=Tensor([3, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.greater_than(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_than(x=Tensor([3, 715827883],"float64"), y=Tensor([3, 715827883],"float64"), )
paddle.greater_than(x=Tensor([3],"int64"), y=Tensor([2147483649],"int64"), )
paddle.greater_than(x=Tensor([357913942, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.greater_than(x=Tensor([715827883, 3],"float64"), y=Tensor([3, 3],"float64"), )
paddle.greater_than(x=Tensor([715827883, 3],"float64"), y=Tensor([715827883, 3],"float64"), )
paddle.histogram(input=Tensor([1073741824, 4],"float32"), )
paddle.histogram(input=Tensor([1073741824, 4],"int32"), )
paddle.histogram(input=Tensor([2147483649],"float64"), )
paddle.histogram(input=Tensor([4, 1073741824],"float32"), )
paddle.histogram(input=Tensor([4, 1073741824],"int32"), )
paddle.histogram(input=Tensor([4, 536870913],"float64"), )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, max=5, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-2, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-4, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=4, max=5, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-40, )
paddle.histogram(input=Tensor([4, 536870913],"float64"), bins=4, min=-41, max=-5, )
paddle.histogram(input=Tensor([4, 536870913],"int64"), )
paddle.histogram(input=Tensor([536870913, 4],"float64"), )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, max=5, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-2, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-4, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=4, max=5, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-40, )
paddle.histogram(input=Tensor([536870913, 4],"float64"), bins=4, min=-41, max=-5, )
paddle.histogram(input=Tensor([536870913, 4],"int64"), )
paddle.histogram_bin_edges(Tensor([214748365, 20],"float32"), bins=10, min=0, max=1, )
paddle.histogram_bin_edges(Tensor([214748365, 20],"float32"), bins=10, min=0.2, max=0.9, )
paddle.histogram_bin_edges(Tensor([214748365, 20],"float32"), bins=10, min=1, max=1, )
paddle.histogram_bin_edges(Tensor([5, 858993459],"float32"), bins=10, min=0, max=1, )
paddle.histogram_bin_edges(Tensor([5, 858993459],"float32"), bins=10, min=0.2, max=0.9, )
paddle.histogram_bin_edges(Tensor([5, 858993459],"float32"), bins=10, min=1, max=1, )
paddle.histogramdd(Tensor([1073741825, 2],"float64"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([1073741825, 2],"float64"), bins=list[3,3,], weights=Tensor([4],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([2147483648, 2],"float32"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([268435457, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([268435457, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 1073741824],"float32"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 134217729, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 134217729, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=5, weights=Tensor([1073741825, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=5, weights=Tensor([4, 536870913],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 536870913],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 536870913],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([2147483649],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([2147483649],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([1073741825, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 536870913],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=False, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=None, ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 268435457],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([1073741825, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 536870913],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 536870913],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2],"float64"), bins=list[3,3,], weights=Tensor([2147483649],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=False, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 268435457, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 536870913],"float64"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 536870913],"float64"), bins=list[3,3,], weights=Tensor([4],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=False, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=False, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([536870913, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.hsplit(Tensor([119304648, 6, 3],"int64"), 2, )
paddle.hsplit(Tensor([119304648, 6, 3],"int64"), 3, )
paddle.hsplit(Tensor([2147483649],"float64"), 3, )
paddle.hsplit(Tensor([2147483649],"int64"), 2, )
paddle.hsplit(Tensor([357913942, 6],"int64"), 2, )
paddle.hsplit(Tensor([357913942, 6],"int64"), 3, )
paddle.hsplit(Tensor([4, 178956971, 3],"int64"), 2, )
paddle.hsplit(Tensor([4, 178956971, 3],"int64"), 3, )
paddle.hsplit(Tensor([4, 536870913],"int64"), 2, )
paddle.hsplit(Tensor([4, 536870913],"int64"), 3, )
paddle.hsplit(Tensor([4, 6, 89478486],"int64"), 2, )
paddle.hsplit(Tensor([4, 6, 89478486],"int64"), 3, )
paddle.hsplit(Tensor([4294967295],"bool"), 3, )
paddle.hsplit(Tensor([4294967295],"float16"), 3, )
paddle.hsplit(Tensor([4294967295],"float32"), 3, )
paddle.hsplit(Tensor([4294967295],"int32"), 3, )
paddle.increment(Tensor([2147483649],"int64"), )
paddle.increment(Tensor([4294967295],"float32"), value=2.0, )
paddle.increment(x=Tensor([2147483649],"float64"), )
paddle.increment(x=Tensor([2147483649],"float64"), value=2.0, )
paddle.increment(x=Tensor([2147483649],"int64"), )
paddle.increment(x=Tensor([2147483649],"int64"), value=1.0, )
paddle.increment(x=Tensor([4294967295],"float32"), )
paddle.increment(x=Tensor([4294967295],"int32"), )
paddle.incubate.nn.functional.blha_get_max_len(Tensor([10],"int32"), Tensor([10],"int32"), Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.blha_get_max_len(Tensor([10],"int32"), Tensor([4294967295],"int32"), Tensor([10],"float32"), )
paddle.incubate.nn.functional.blha_get_max_len(Tensor([4294967295],"int32"), Tensor([10],"int32"), Tensor([10],"float32"), )
paddle.incubate.nn.functional.blha_get_max_len(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), Tensor([4294967295],"float32"), )
paddle.incubate.nn.functional.fused_bias_act(Tensor([1, 4294967295],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([100, 42949673],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([101, 256],"float16"), Tensor([4294967295],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([101, 42524429],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([101, 42524429],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([104, 41297763],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([123, 34918434],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([16777216, 256],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483648],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 256],"float16"), Tensor([4294967295],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([33554432, 128],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4294967295],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 9256396],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([58, 256],"float16"), Tensor([4294967295],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([58, 74051161],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([59, 256],"float16"), Tensor([4294967295],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([59, 72796056],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([60, 256],"float16"), Tensor([4294967295],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([60, 71582789],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([67108864, 64],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([6710887, 640],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 10],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([4294967295],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 10],"int32"), bias=Tensor([10],"float32"), dequant_scales=Tensor([4294967295],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 10],"int32"), bias=Tensor([4294967295],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 10],"int32"), bias=Tensor([4294967295],"float32"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([512],"float16"), act_method="geglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([512],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([512],"float16"), act_method="swiglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float32"), bias=None, act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"int32"), bias=Tensor([10],"float32"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float16"), bias=Tensor([4294967295],"float16"), act_method="geglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float16"), bias=Tensor([4294967295],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float16"), bias=Tensor([4294967295],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float16"), bias=Tensor([4294967295],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float16"), bias=Tensor([4294967295],"float16"), act_method="swiglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float32"), bias=Tensor([4294967295],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"float32"), bias=Tensor([4294967295],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([4294967295],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([4294967295],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([4294967295],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([4294967295],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([4294967295],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([4294967295],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([4294967295],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([4294967295],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([4294967295],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([4294967295],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([4294967295],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([4294967295],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 214748365, 10],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 214748365, 10],"int32"), bias=Tensor([10],"float32"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float16"), bias=Tensor([512],"float16"), act_method="geglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float16"), bias=Tensor([512],"float16"), act_method="swiglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float32"), bias=None, act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194304, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([21474837, 20, 10],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([21474837, 20, 10],"int32"), bias=Tensor([10],"float32"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="geglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="swiglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float32"), bias=None, act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 4294967295],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([536870912, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 536870912],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([536870912, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 536870912],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([4294967295],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 2147483648],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 1073741824],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 1073741824],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 1073741824],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 1073741824],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 1073741824],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 1073741824],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4294967295],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4294967295],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 536870912, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1048576, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 136366, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 272731, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 272731, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 1413749],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 1413749],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([33038210, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([33038210, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 33038210],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 33038210],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([4294967295],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([4294967295],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([8454661, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([8454661, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 8454661],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 8454661],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([16519105, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 16519105],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([2147483649],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([2147483649],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([2147483649],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([2147483649],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([2147483649],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([2147483649],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([4227331, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float64"), Tensor([508, 4227331],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 706875],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 1048576],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 1048576],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 1398102],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([4294967295],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([4294967295],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([4294967295],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([4294967295],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 5592406],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([1398102, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 1398102],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([4294967295],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([4294967295],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([4294967295],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([5592406, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 5592406],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 174763, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 174763, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([4294967295],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([4294967295],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([4294967295],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([4294967295],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([4294967295],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([4294967295],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 16777216],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 256],"float16"), Tensor([33554432, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([128, 33554432],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 128],"float16"), Tensor([16777216, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 32, 33554432],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([4, 8388608, 128],"float16"), Tensor([128, 256],"float16"), Tensor([256, 128],"float16"), Tensor([256],"float16"), Tensor([128],"float16"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([43137, 98, 508],"float64"), Tensor([508, 130],"float64"), Tensor([130, 508],"float64"), Tensor([130],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), Tensor([508],"float64"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([43691, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([43691, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([536870912, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([536870912, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([536870912, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([536870912, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 524288],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 524288],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 1398102],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([4294967295],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([4294967295],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([4294967295],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([4294967295],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 5592406],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([1398102, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 1398102],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([4294967295],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([4294967295],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([4294967295],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([4294967295],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([5592406, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 5592406],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 87382, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 87382, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([86273, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([86273, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 349526],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 1398102],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([4294967295],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([4294967295],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([4294967295],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([4294967295],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([5592406, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 5592406],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 58255, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([1073741824, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([1073741824, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([1073741824, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2147483648],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2147483648],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2147483648],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 2147483648],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([2147483648, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 1073741824],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 1073741824],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 1073741824],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([4294967295],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([4294967295],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([4294967295],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([4294967295],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([4294967295],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([4294967295],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([4294967295],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4294967295],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4294967295],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4294967295],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2147483648, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2147483648, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2],"float32"), linear1_weight=Tensor([2147483648, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2, 2147483648],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2147483648, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2147483648, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2147483648, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2147483648, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2147483648, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 2147483648, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1073741824, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1073741824, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1073741824, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1073741824, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1073741824, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln1_scale=Tensor([2],"float32"), ln1_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1073741824, 2, 2],"float32"), linear1_weight=Tensor([2, 4],"float32"), linear2_weight=Tensor([4, 2],"float32"), linear1_bias=Tensor([4],"float32"), linear2_bias=Tensor([2],"float32"), ln2_scale=Tensor([2],"float32"), ln2_bias=Tensor([2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 4294967295],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 4294967295],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 4294967295],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 4294967295],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 42949673],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 42949673],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 42949673],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 42949673],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388608, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), Tensor([64],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 41297763],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 41297763],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 41297763],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 41297763],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388608, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 34918434],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 34918434],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 34918434],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 34918434],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 32786010],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 32786010],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 32786010],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 32786010],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 31580642],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 31580642],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 31580642],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 31580642],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 268435456],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16777216, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 268435456],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 268435456],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16777216, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16777216, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 268435456],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16777216, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 268435456],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16777216, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([4294967295],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435456],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777216, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 1, 2147483648],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 1, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 1, 64],"float16"), Tensor([64],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483648],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 2147483648],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483648],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483648],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483648],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 33554432, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 2147483648],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388608, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 2147483648],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 2147483648],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 33554432, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 74051161],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 74051161],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 72796056],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 72796056],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), Tensor([64],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 71582789],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 71582789],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), Tensor([4294967295],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), Tensor([64],"float32"), Tensor([4294967295],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 67108864],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388608, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 67108864],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 67108864],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 67108864],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64103990],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64103990],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64103990],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64103990],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 1, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([68, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, residual_alpha=1.4142135623730951, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([58, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108864, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 63161284],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([68, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), norm_weight=Tensor([4294967295],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([68, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([4294967295],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([68, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967295],"float16"), residual=Tensor([68, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108864, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), norm_weight=Tensor([64],"float32"), norm_bias=Tensor([64],"float32"), epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([68, 63161284],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 60492498],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388608, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 60492498],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 60492498],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 60492498],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388608, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388608, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388608, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388608, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388608, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388608, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388608, 512],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1048576, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([1398102, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 1024],"float16"), Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4096, 1024],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4096, 1048576],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4096],"float16"), Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1024, 4194304],"float16"), Tensor([4096, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1048576, 4096],"float16"), Tensor([4096, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194304, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194304, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194304, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1016801, 132, 32],"float16"), Tensor([32, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 1024, 4096],"float16"), Tensor([4096, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([4294967295],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([11184811, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 262144],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 4096, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([10700, 196, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([10700, 3136, 128],"float16"), Tensor([128, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([107374183, 40],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([1024, 1000],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([4294968, 1000],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 16384, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 171197],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 171197],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([2048, 2097152],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([8388608, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([2097152, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([512, 8388608],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 262144, 128],"float16"), Tensor([128, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 10700],"float16"), Tensor([128, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 10700],"float16"), Tensor([512, 128],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 128],"float16"), Tensor([128, 33554432],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 128],"float16"), Tensor([128, 512],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 128],"float16"), Tensor([8388608, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 512],"float16"), Tensor([33554432, 128],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 512],"float16"), Tensor([512, 128],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 3136, 512],"float16"), Tensor([512, 8388608],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 32768, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 33554432],"float16"), Tensor([1024, 1000],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([4294967295],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 1024],"float16"), Tensor([1024, 4194304],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 1024],"float16"), Tensor([4194304, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 684785],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 65536, 512],"float16"), Tensor([512, 128],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 65536, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([262144, 16, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2675, 3136, 512],"float16"), Tensor([512, 128],"float16"), Tensor([128],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([107374183, 40],"float32"), Tensor([50],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([107374183, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 107374183],"float32"), Tensor([50],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 107374183],"float32"), Tensor([50],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 85899346],"float32"), Tensor([50],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([50, 85899346],"float32"), Tensor([50],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([85899346, 50],"float32"), Tensor([50],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([85899346, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([368731, 182, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 115, 64],"float16"), Tensor([64, 67108864],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 115, 64],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 115, 9336886],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 127, 64],"float16"), Tensor([64, 67108864],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 127, 64],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 127, 8454661],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 32],"float16"), Tensor([32, 134217728],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 32],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([134217728, 32],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([64, 67108864],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 64],"float16"), Tensor([67108864, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([32, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([64, 32],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 7255013],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 156, 6882961],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 16777216, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 16777216, 64],"float16"), Tensor([64, 32],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 16777216, 64],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 5899681],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 64],"float16"), Tensor([22369622, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 64],"float16"), Tensor([64, 192],"float16"), Tensor([4294967295],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 182, 64],"float16"), Tensor([64, 67108864],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 33554432, 32],"float16"), Tensor([32, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4096, 1024, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4096, 1024, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4096, 1024, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4194304, 1024],"float16"), Tensor([1024, 1000],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([42800, 196, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([430186, 156, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([453439, 148, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([508401, 132, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([508401, 132, 64],"float16"), Tensor([64, 32],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([508401, 132, 64],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([528417, 127, 64],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([583556, 115, 64],"float16"), Tensor([64, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([85599, 49, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([536870913, 4],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([536870913, 4],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([536870913, 4],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 268435457],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 268435457],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 268435457],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([16777217, 128],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([16777217, 128],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([16777217, 128],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([2147483649],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([2147483649],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([2147483649],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([128],"float64"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 536870913],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([1073741824, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([1073741824, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([5, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([7, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([1073741824, 4],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([143165577, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([143165577, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([40, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([50, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([143165577, 30],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([40, 143165577],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([50, 143165577],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 143165577],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([107374183, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([107374183, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 107374183],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 107374183],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 85899346],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 85899346],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([85899346, 50],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([85899346, 50],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([5, 1073741824],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([5, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([7, 1073741824],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([7, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 1073741824],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([5, 7],"float16"), Tensor([4294967295],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([5, 858993459],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([5, 858993459],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([613566757, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([613566757, 7],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 5],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 613566757],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 613566757],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([858993459, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([858993459, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([107374183, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([107374183, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 107374183],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 107374183],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 50],"float32"), Tensor([4294967295],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 40],"float32"), Tensor([4294967295],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 85899346],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 85899346],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([85899346, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([85899346, 50],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([40, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([40, 85899346],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([50, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 85899346],"float32"), Tensor([50, 85899346],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([5, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([613566757, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([613566757, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([7, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([5, 7],"float16"), Tensor([4294967295],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([5, 858993459],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([5, 858993459],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([613566757, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([613566757, 7],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 5],"float16"), Tensor([4294967295],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 613566757],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 613566757],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([858993459, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([858993459, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([5, 613566757],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([5, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([7, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([7, 613566757],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([40, 50],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([50, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([85899346, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([85899346, 50],"float32"), Tensor([85899346, 50],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 1, 4294967295],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 1, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 4294967295],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 67108864, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([100, 42949673],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([100, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([101, 42524429],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([101, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([104, 41297763],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([104, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([123, 34918434],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([123, 768],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([131, 32786010],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([131, 768],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([136, 31580642],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([136, 768],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([16777216, 256],"float16"), Tensor([256],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([16777216, 256],"float32"), Tensor([256],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 2147483648],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 2147483648],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 64],"float16"), Tensor([4294967295],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 2147483648],"float16"), Tensor([256],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 2147483648],"float32"), Tensor([256],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 256],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 256],"float32"), Tensor([4294967295],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 33554432, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 4194304, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([5592406, 768],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([64, 512],"float16"), Tensor([4294967295],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([64, 67108864],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([67108864, 1, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([67108864, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([8388608, 1, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([8388608, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 134217728, 2, 8],"float32"), Tensor([1, 134217728, 2, 8],"float32"), Tensor([1, 134217728, 1, 8],"float32"), Tensor([1, 134217728, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 134217728, 2, 8],"float32"), Tensor([1, 134217728, 2, 8],"float32"), Tensor([1, 134217728, 1, 8],"float32"), Tensor([1, 134217728, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 134217728, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 134217728],"float32"), Tensor([1, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 134217728],"float32"), Tensor([1, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 134217728],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 268435456],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 268435456],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 268435456],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 268435456, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 2147483649],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([33554432, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([33554432, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([33554432, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([33554432, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([33554432, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([33554432, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 1, 2, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), Tensor([134217728, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([134217728, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([16777216, 8, 1, 16],"float32"), Tensor([16777216, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([16777216, 8, 1, 16],"float32"), Tensor([16777216, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 2, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), Tensor([16777216, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([16777216, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([1, 67108864, 1, 16],"float32"), Tensor([1, 67108864, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([1, 67108864, 1, 16],"float32"), Tensor([1, 67108864, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 67108864, 1, 8],"float32"), Tensor([2, 67108864, 1, 8],"float32"), Tensor([1, 67108864, 1, 8],"float32"), Tensor([1, 67108864, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 67108864, 1, 8],"float32"), Tensor([2, 67108864, 1, 8],"float32"), Tensor([1, 67108864, 1, 8],"float32"), Tensor([1, 67108864, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 67108864, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([16777216, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 67108864, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 134217728],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 67108864],"float32"), Tensor([2, 8, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 67108864],"float32"), Tensor([2, 8, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 67108864],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 268435456, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 268435456, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 268435456, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 268435456],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 268435456],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 268435456],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 268435456, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 268435456, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 268435456, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 33554432, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), Tensor([67108864, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([67108864, 2, 1, 8],"float32"), Tensor([67108864, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([67108864, 2, 1, 8],"float32"), Tensor([67108864, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([67108864, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 134217728],"float32"), Tensor([8, 1, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 134217728],"float32"), Tensor([8, 1, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 134217728],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([268435456, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([268435456, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([268435456, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 268435456],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 268435456],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 268435456],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([268435456, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([268435456, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([268435456, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 2147483649],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 33554432, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 33554432, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 33554432, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 33554432, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 33554432, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 33554432, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([8, 1, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([1, 16777216, 1, 16],"float32"), Tensor([1, 16777216, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([1, 16777216, 1, 16],"float32"), Tensor([1, 16777216, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([8, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([8, 16777216, 2, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), Tensor([1, 16777216, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 16777216, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), Tensor([1, 8, 16777216, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), Tensor([1, 8, 1, 134217728],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([67108864, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 16777216, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 16777216, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 134217728],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 268435456, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([33554432, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), Tensor([1, 8, 33554432, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 67108864],"float32"), Tensor([8, 2, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 67108864],"float32"), Tensor([8, 2, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), Tensor([1, 8, 1, 67108864],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 67108864],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([268435456, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([268435456, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([268435456, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 268435456],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 268435456],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 268435456],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([268435456, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([268435456, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([268435456, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 268435456],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 536870912, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 536870912],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 1073741825],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([268435457, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([67108864, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 67108864, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 67108864, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 67108864, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 33554432, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 67108864, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 67108864, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 67108864, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.linalg.norm(Tensor([4294967295],"float32"), p="fro", axis=0, )
paddle.linalg.norm(x=Tensor([178956971, 3, 4],"float64"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([178956971, 3, 4],"float64"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 268435457, 4],"float64"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 268435457, 4],"float64"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 357913942],"float64"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 357913942],"float64"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2147483649],"float64"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([3, 715827883],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 715827883],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([536870913, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([536870913, 4],"float64"), p=0, axis=None, keepdim=True, )
